/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./lib/ammo.js":
/*!*********************!*\
  !*** ./lib/ammo.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var __filename = \"/index.js\";\nvar __dirname = \"/\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// This is ammo.js, a port of Bullet Physics to JavaScript. zlib licensed.\n\nvar Ammo = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (true) _scriptDir = _scriptDir || __filename;\n  return (\nfunction(Ammo) {\n  Ammo = Ammo || {};\n\n\nfunction aa(a,c){return Object.prototype.hasOwnProperty.call(a,c)}var ba=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,c,d){if(a==Array.prototype||a==Object.prototype)return a;a[c]=d.value;return a};function da(a){a=[\"object\"==typeof globalThis&&globalThis,a,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof __webpack_require__.g&&__webpack_require__.g];for(var c=0;c<a.length;++c){var d=a[c];if(d&&d.Math==Math)return d}throw Error(\"Cannot find global object\");}var ea=da(this);\nfunction fa(a,c){if(c)a:{var d=ea;a=a.split(\".\");for(var e=0;e<a.length-1;e++){var f=a[e];if(!(f in d))break a;d=d[f]}a=a[a.length-1];e=d[a];c=c(e);c!=e&&null!=c&&ba(d,a,{configurable:!0,writable:!0,value:c})}}var ha=\"function\"==typeof Object.assign?Object.assign:function(a,c){for(var d=1;d<arguments.length;d++){var e=arguments[d];if(e)for(var f in e)aa(e,f)&&(a[f]=e[f])}return a};fa(\"Object.assign\",function(a){return a||ha});\nfunction ia(a){var c=0;return function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}}\nfa(\"WeakMap\",function(a){function c(E){this.zB=(W+=Math.random()+1).toString();if(E){var p=\"undefined\"!=typeof Symbol&&Symbol.iterator&&E[Symbol.iterator];for(E=p?p.call(E):{next:ia(E)};!(p=E.next()).done;)p=p.value,this.set(p[0],p[1])}}function d(){}function e(E){var p=typeof E;return\"object\"===p&&null!==E||\"function\"===p}function f(E){if(!aa(E,y)){var p=new d;ba(E,y,{value:p})}}function m(E){var p=Object[E];p&&(Object[E]=function(G){if(G instanceof d)return G;Object.isExtensible(G)&&f(G);return p(G)})}\nif(function(){if(!a||!Object.seal)return!1;try{var E=Object.seal({}),p=Object.seal({}),G=new a([[E,2],[p,3]]);if(2!=G.get(E)||3!=G.get(p))return!1;G.delete(E);G.set(p,4);return!G.has(E)&&4==G.get(p)}catch(ca){return!1}}())return a;var y=\"$jscomp_hidden_\"+Math.random();m(\"freeze\");m(\"preventExtensions\");m(\"seal\");var W=0;c.prototype.set=function(E,p){if(!e(E))throw Error(\"Invalid WeakMap key\");f(E);if(!aa(E,y))throw Error(\"WeakMap key fail: \"+E);E[y][this.zB]=p;return this};c.prototype.get=function(E){return e(E)&&\naa(E,y)?E[y][this.zB]:void 0};c.prototype.has=function(E){return e(E)&&aa(E,y)&&aa(E[y],this.zB)};c.prototype.delete=function(E){return e(E)&&aa(E,y)&&aa(E[y],this.zB)?delete E[y][this.zB]:!1};return c});\nfa(\"String.prototype.startsWith\",function(a){return a?a:function(c,d){if(null==this)throw new TypeError(\"The 'this' value for String.prototype.startsWith must not be null or undefined\");if(c instanceof RegExp)throw new TypeError(\"First argument to String.prototype.startsWith must not be a regular expression\");var e=this+\"\";c+=\"\";var f=e.length,m=c.length;d=Math.max(0,Math.min(d|0,e.length));for(var y=0;y<m&&d<f;)if(e[d++]!=c[y++])return!1;return y>=m}});var b;b||(b=typeof Ammo !== 'undefined' ? Ammo : {});\nvar Promise=function(){function a(){}function c(p,G){return function(){p.apply(G,arguments)}}function d(p){if(!(this instanceof d))throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof p)throw new TypeError(\"not a function\");this.nB=0;this.bC=!1;this.oB=void 0;this.rB=[];E(p,this)}function e(p,G){for(;3===p.nB;)p=p.oB;0===p.nB?p.rB.push(G):(p.bC=!0,d.cC(function(){var ca=1===p.nB?G.WE:G.XE;if(null===ca)(1===p.nB?f:m)(G.promise,p.oB);else{try{var Ha=ca(p.oB)}catch(Eb){m(G.promise,\nEb);return}f(G.promise,Ha)}}))}function f(p,G){try{if(G===p)throw new TypeError(\"A promise cannot be resolved with itself.\");if(G&&(\"object\"==typeof G||\"function\"==typeof G)){var ca=G.then;if(G instanceof d){p.nB=3;p.oB=G;y(p);return}if(\"function\"==typeof ca){E(c(ca,G),p);return}}p.nB=1;p.oB=G;y(p)}catch(Ha){m(p,Ha)}}function m(p,G){p.nB=2;p.oB=G;y(p)}function y(p){2===p.nB&&0===p.rB.length&&d.cC(function(){p.bC||d.dC(p.oB)});for(var G=0,ca=p.rB.length;G<ca;G++)e(p,p.rB[G]);p.rB=null}function W(p,\nG,ca){this.WE=\"function\"==typeof p?p:null;this.XE=\"function\"==typeof G?G:null;this.promise=ca}function E(p,G){var ca=!1;try{p(function(Ha){ca||(ca=!0,f(G,Ha))},function(Ha){ca||(ca=!0,m(G,Ha))})}catch(Ha){ca||(ca=!0,m(G,Ha))}}d.prototype[\"catch\"]=function(p){return this.then(null,p)};d.prototype.then=function(p,G){var ca=new this.constructor(a);e(this,new W(p,G,ca));return ca};d.all=function(p){return new d(function(G,ca){function Ha(Wc,fc){try{if(fc&&(\"object\"==typeof fc||\"function\"==typeof fc)){var Xc=\nfc.then;if(\"function\"==typeof Xc){Xc.call(fc,function(Ec){Ha(Wc,Ec)},ca);return}}Eb[Wc]=fc;0===--TF&&G(Eb)}catch(Ec){ca(Ec)}}if(!Array.isArray(p))return ca(new TypeError(\"Promise.all accepts an array\"));var Eb=Array.prototype.slice.call(p);if(0===Eb.length)return G([]);for(var TF=Eb.length,rc=0;rc<Eb.length;rc++)Ha(rc,Eb[rc])})};d.resolve=function(p){return p&&\"object\"==typeof p&&p.constructor==d?p:new d(function(G){G(p)})};d.reject=function(p){return new d(function(G,ca){ca(p)})};d.race=function(p){return new d(function(G,\nca){if(!Array.isArray(p))return ca(new TypeError(\"Promise.race accepts an array\"));for(var Ha=0,Eb=p.length;Ha<Eb;Ha++)d.resolve(p[Ha]).then(G,ca)})};d.cC=\"function\"==typeof setImmediate&&function(p){setImmediate(p)}||function(p){setTimeout(p,0)};d.dC=function(p){\"undefined\"!=typeof console&&console&&console.warn(\"Possible Unhandled Promise Rejection:\",p)};return d}();\n\"undefined\"==typeof Object.assign&&(Object.assign=function(a,c){for(var d=1;d<arguments.length;d++)if(c=arguments[d])for(var e in c)c.hasOwnProperty(e)&&(a[e]=c[e]);return a});var ja,ka;b.ready=new Promise(function(a,c){ja=a;ka=c});var la=Object.assign({},b),ma=\"object\"==typeof window,na=\"function\"==typeof importScripts,oa=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,pa=\"\",qa,ra,sa,fs,ta,ua;\nif(oa)pa=na?(__webpack_require__(/*! path */ \"?fe5a\").dirname)(pa)+\"/\":__dirname+\"/\",ua=function(){ta||(fs=__webpack_require__(/*! fs */ \"?d87b\"),ta=__webpack_require__(/*! path */ \"?fe5a\"))},qa=function(a,c){var d=va(a);if(d)return c?d:d.toString();ua();a=ta.normalize(a);return fs.readFileSync(a,c?void 0:\"utf8\")},sa=function(a){a=qa(a,!0);a.buffer||(a=new Uint8Array(a));return a},ra=function(a,c,d){var e=va(a);e&&c(e);ua();a=ta.normalize(a);fs.readFile(a,function(f,m){f?d(f):c(m.buffer)})},1<process.argv.length&&process.argv[1].replace(/\\\\/g,\"/\"),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",function(a){throw a;}),b.inspect=function(){return\"[Emscripten Module object]\"};else if(ma||na)na?pa=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(pa=document.currentScript.src),_scriptDir&&(pa=_scriptDir),pa=0!==pa.indexOf(\"blob:\")?pa.substr(0,pa.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",qa=function(a){try{var c=new XMLHttpRequest;c.open(\"GET\",a,!1);c.send(null);return c.responseText}catch(f){if(a=va(a)){c=[];for(var d=\n0;d<a.length;d++){var e=a[d];255<e&&(wa&&xa(\"Character code \"+e+\" (\"+String.fromCharCode(e)+\")  at offset \"+d+\" not in 0x00-0xFF.\"),e&=255);c.push(String.fromCharCode(e))}return c.join(\"\")}throw f;}},na&&(sa=function(a){try{var c=new XMLHttpRequest;c.open(\"GET\",a,!1);c.responseType=\"arraybuffer\";c.send(null);return new Uint8Array(c.response)}catch(d){if(a=va(a))return a;throw d;}}),ra=function(a,c,d){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){if(200==\ne.status||0==e.status&&e.response)c(e.response);else{var f=va(a);f?c(f.buffer):d()}};e.onerror=d;e.send(null)};b.print||console.log.bind(console);var ya=b.printErr||console.warn.bind(console);Object.assign(b,la);la=null;var za=[],Aa,Ba;b.wasmBinary&&(Ba=b.wasmBinary);var noExitRuntime=b.noExitRuntime||!0;function Ca(){this.buffer=new ArrayBuffer(Da/65536*65536)}function Ea(){this.exports=(\n// EMSCRIPTEN_START_ASM\nfunction instantiate(ma){function e(f){f.grow=function(b){var a=this.length;this.length=this.length+b;return a};f.set=function(c,d){this[c]=d};f.get=function(c){return this[c]};return f}var g;var h=new Uint8Array(123);for(var c=25;c>=0;--c){h[48+c]=52+c;h[65+c]=c;h[97+c]=26+c}h[43]=62;h[47]=63;function n(o,p,q){var i,j,c=0,k=p,l=q.length,m=p+(l*3>>2)-(q[l-2]==\"=\")-(q[l-1]==\"=\");for(;c<l;c+=4){i=h[q.charCodeAt(c+1)];j=h[q.charCodeAt(c+2)];o[k++]=h[q.charCodeAt(c)]<<2|i>>4;if(k<m)o[k++]=i<<4|j>>2;if(k<m)o[k++]=j<<6|h[q.charCodeAt(c+3)]}}function r(s){n(g,1028,\"\");n(g,11990,\"gD8AAIC/\");n(g,12022,\"\");n(g,21012,\"AQAAAAIAAAAAAAAAAQAAAAMAAAABAAAAAgAAAAMAAAAAAAAAAgAAAAMAAABOMTBidFNvZnRCb2R5NUpvaW50RQAAAAD4aAAAQFIAAAAAAACYUgAAsgMAALMDAAC0AwAAtQMAALYDAAC3AwAATjEwYnRTb2Z0Qm9keTZDSm9pbnRFAAAAIGkAAIBSAABYUgAAMTBidFNvZnRCb2R5AAAAACBpAACkUgAALBoAAE4xMGJ0U29mdEJvZHkxNVJheUZyb21Ub0Nhc3RlckUAIGkAAMBSAADIFgAAAAAAAFRTAAD6AQAAuAMAALkDAAA5AAAAOgAAADsAAAC6AwAAuwMAALwDAAC9AwAAQAAAAM4BAABxAAAAcgAAAHMAAABFAAAAvgMAADI0YnRTb2Z0Qm9keUNvbGxpc2lvblNoYXBlAAAgaQAAOFMAAGQ0AAAAAAAAqFMAAMIAAAC/AwAAygAAAMADAADGAAAAxwAAAMgAAABOMTVidFNvZnRDb2xsaWRlcnMxM0NvbGxpZGVTREZfUlNFAAAgaQAAhFMAAMgWAAAAAAAAKFQAAMIAAADBAwAAygAAAMIDAADGAAAAxwAAAMgAAABOMTVidFNvZnRDb2xsaWRlcnMxMkNvbGxpZGVDTF9SU0UATjE1YnRTb2Z0Q29sbGlkZXJzMTFDbHVzdGVyQmFzZUUAACBpAAD6UwAAyBYAACBpAADYUwAAHFQAAAAAAAC8VAAA3QEAAMMDAADEAwAAOQAAADoAAAA7AAAAPAAAAD0AAADFAwAAxgMAAEAAAADHAwAAyAMAAEMAAABEAAAARQAAAMkDAADKAwAASAAAAMsDAABKAAAAYQAAAGIAAADMAwAAMjdidFNvZnRDbHVzdGVyQ29sbGlzaW9uU2hhcGUAAAAgaQAAnFQAAHg3AAAAAAAAEFUAAMIAAADNAwAAzgMAAGQBAADGAAAAxwAAAMgAAABOMTVidFNvZnRDb2xsaWRlcnMxMkNvbGxpZGVDTF9TU0UAAAAgaQAA7FQAABxUAAAAAAAAZFUAAMIAAADPAwAA0AMAAGQBAADGAAAAxwAAAMgAAABOMTVidFNvZnRDb2xsaWRlcnMxMkNvbGxpZGVWRl9TU0UAAAAgaQAAQFUAAMgWAADRAwAA0gMAANMDAADUAwAAAAAAANhVAADVAwAA1gMAANcDAADYAwAA2QMAAAAAAAAEVgAA2gMAANsDAADcAwAAMzVidFNvZnRCb2R5Q29uY2F2ZUNvbGxpc2lvbkFsZ29yaXRobQAAACBpAACwVQAAGCIAADI2YnRTb2Z0Qm9keVRyaWFuZ2xlQ2FsbGJhY2sAAAAAIGkAAORVAAC4QAAAAAAAAMRWAAAQAQAA3QMAAN4DAABaTjM1YnRTb2Z0Qm9keUNvbmNhdmVDb2xsaXNpb25BbGdvcml0aG0yMWNhbGN1bGF0ZVRpbWVPZkltcGFjdEVQMTdidENvbGxpc2lvbk9iamVjdFMxX1JLMTZidERpc3BhdGNoZXJJbmZvUDE2YnRNYW5pZm9sZFJlc3VsdEUzMUxvY2FsVHJpYW5nbGVTcGhlcmVDYXN0Q2FsbGJhY2sAIGkAACRWAAC4QAAAAAAAABxXAADfAwAA4AMAAHQBAAB1AQAA4QMAAHcBAAA0MWJ0U29mdEJvZHlSaWdpZEJvZHlDb2xsaXNpb25Db25maWd1cmF0aW9uACBpAADwVgAAfCgAAAAAAABsVwAAeAEAAOIDAADjAwAATjI4YnRTb2Z0U29mdENvbGxpc2lvbkFsZ29yaXRobTEwQ3JlYXRlRnVuY0UAAAAAIGkAADxXAADwKAAAAAAAALxXAAB4AQAA5AMAAOUDAABOMjlidFNvZnRSaWdpZENvbGxpc2lvbkFsZ29yaXRobTEwQ3JlYXRlRnVuY0UAAAAgaQAAjFcAAPAoAAAAAAAAEFgAAHgBAADmAwAA5wMAAE4zNWJ0U29mdEJvZHlDb25jYXZlQ29sbGlzaW9uQWxnb3JpdGhtMTBDcmVhdGVGdW5jRQAgaQAA3FcAAPAoAAAAAAAAbFgAAHgBAADoAwAA6QMAAE4zNWJ0U29mdEJvZHlDb25jYXZlQ29sbGlzaW9uQWxnb3JpdGhtMTdTd2FwcGVkQ3JlYXRlRnVuY0UAACBpAAAwWAAA8CgAAAAAAAC0WAAA6gMAAOsDAADsAwAA7QMAAO4DAAAyOWJ0U29mdFJpZ2lkQ29sbGlzaW9uQWxnb3JpdGhtACBpAACUWAAAGCIAAAAAAACYWQAA7wMAAPADAAAAAQAAAQEAAAIBAAADAQAA8QMAAAUBAADyAwAAcAMAAPMDAAAJAQAA9AMAAHMDAAB0AwAAdQMAAHYDAAB3AwAAeAMAAHkDAAB6AwAAewMAAHwDAAB9AwAAfgMAAH8DAACAAwAAgQMAAIIDAAD1AwAAhAMAAIUDAACGAwAAhwMAAIgDAAD2AwAAigMAAIsDAACMAwAAjQMAAPcDAACPAwAAkAMAAJEDAACSAwAAMjRidFNvZnRSaWdpZER5bmFtaWNzV29ybGQAACBpAAB8WQAAMFAAAAAAAADUWQAAIwEAAPgDAAD5AwAAMjNidFNvZnRTaW5nbGVSYXlDYWxsYmFjawAAACBpAAC4WQAAeCAAAAAAAAAcWgAA+gMAAPsDAAD8AwAA/QMAAP4DAAAyOGJ0U29mdFNvZnRDb2xsaXNpb25BbGdvcml0aG0AACBpAAD8WQAAGCIAAAAAAACoWgAA/wMAAAAEAAABBAAAAgQAAAMEAAAEBAAABQQAAAYEAAAHBAAACAQAAAkEAAAKBAAACwQAAAwEAAANBAAADgQAADIzYnREZWZhdWx0U29mdEJvZHlTb2x2ZXIAMTZidFNvZnRCb2R5U29sdmVyAAAAAPhoAACKWgAAIGkAAHBaAACgWgAAF7fROBAAAADbD0k/2w9Jv+TLFkDkyxbAAAAAAAAAAIDbD0lA2w9JwAAAAAA4Y+0+2g9JP16Yez/aD8k/aTesMWghIjO0DxQzaCGiMwMAAAAEAAAABAAAAAYAAACD+aIARE5uAPwpFQDRVycA3TT1AGLbwAA8mZUAQZBDAGNR/gC73qsAt2HFADpuJADSTUIASQbgAAnqLgAcktEA6x3+ACmxHADoPqcA9TWCAES7LgCc6YQAtCZwAEF+XwDWkTkAU4M5AJz0OQCLX4QAKPm9APgfOwDe/5cAD5gFABEv7wAKWosAbR9tAM9+NgAJyycARk+3AJ5mPwAt6l8Auid1AOXrxwA9e/EA9zkHAJJSigD7a+oAH7FfAAhdjQAwA1YAe/xGAPCrawAgvM8ANvSaAOOpHQBeYZEACBvmAIWZZQCgFF8AjUBoAIDY/wAnc00ABgYxAMpWFQDJqHMAe+JgAGuMwAAZxEcAzWfDAAno3ABZgyoAi3bEAKYclgBEr90AGVfRAKU+BQAFB/8AM34/AMIy6ACYT94Au30yACY9wwAea+8An/heADUfOgB/8soA8YcdAHyQIQBqJHwA1W76ADAtdwAVO0MAtRTGAMMZnQCtxMIALE1BAAwAXQCGfUYA43EtAJvGmgAzYgAAtNJ8ALSnlwA3VdUA1z72AKMQGABNdvwAZJ0qAHDXqwBjfPgAerBXABcV5wDASVYAO9bZAKeEOAAkI8sA1op3AFpUIwAAH7kA8QobABnO3wCfMf8AZh5qAJlXYQCs+0cAfn/YACJltwAy6IkA5r9gAO/EzQBsNgkAXT/UABbe1wBYO94A3puSANIiKAAohugA4lhNAMbKMgAI4xYA4H3LABfAUADzHacAGOBbAC4TNACDEmIAg0gBAPWOWwCtsH8AHunyAEhKQwAQZ9MAqt3YAK5fQgBqYc4ACiikANOZtAAGpvIAXHd/AKPCgwBhPIgAinN4AK+MWgBv170ALaZjAPS/ywCNge8AJsFnAFXKRQDK2TYAKKjSAMJhjQASyXcABCYUABJGmwDEWcQAyMVEAE2ykQAAF/MA1EOtAClJ5QD91RAAAL78AB6UzABwzu4AEz71AOzxgACz58MAx/goAJMFlADBcT4ALgmzAAtF8wCIEpwAqyB7AC61nwBHksIAezIvAAxVbQByp5AAa+cfADHLlgB5FkoAQXniAPTfiQDolJcA4uaEAJkxlwCI7WsAX182ALv9DgBImrQAZ6RsAHFyQgCNXTIAnxW4ALzlCQCNMSUA93Q5ADAFHAANDAEASwhoACzuWABHqpAAdOcCAL3WJAD3faYAbkhyAJ8W7wCOlKYAtJH2ANFTUQDPCvIAIJgzAPVLfgCyY2gA3T5fAEBdAwCFiX8AVVIpADdkwABt2BAAMkgyAFtMdQBOcdQARVRuAAsJwQAq9WkAFGbVACcHnQBdBFAAtDvbAOp2xQCH+RcASWt9AB0nugCWaSkAxsysAK0UVACQ4moAiNmJACxyUAAEpL4AdweUAPMwcAAA/CcA6nGoAGbCSQBk4D0Al92DAKM/lwBDlP0ADYaMADFB3gCSOZ0A3XCMABe35wAI3zsAFTcrAFyAoABagJMAEBGSAA/o2ABsgK8A2/9LADiQDwBZGHYAYqUVAGHLuwDHibkAEEC9ANLyBABJdScA67b2ANsiuwAKFKoAiSYvAGSDdgAJOzMADpQaAFE6qgAdo8IAr+2uAFwmEgBtwk0ALXqcAMBWlwADP4MACfD2ACtAjABtMZkAObQHAAwgFQDYw1sA9ZLEAMatSwBOyqUApzfNAOapNgCrkpQA3UJoABlj3gB2jO8AaItSAPzbNwCuoasA3xUxAACuoQAM+9oAZE1mAO0FtwApZTAAV1a/AEf/OgBq+bkAdb7zACiT3wCrgDAAZoz2AATLFQD6IgYA2eQdAD2zpABXG48ANs0JAE5C6QATvqQAMyO1APCqGgBPZagA0sGlAAs/DwBbeM0AI/l2AHuLBACJF3IAxqZTAG9u4gDv6wAAm0pYAMTatwCqZroAds/PANECHQCx8S0AjJnBAMOtdwCGSNoA912gAMaA9ACs8C8A3eyaAD9cvADQ3m0AkMcfACrbtgCjJToAAK+aAK1TkwC2VwQAKS20AEuAfgDaB6cAdqoOAHtZoQAWEioA3LctAPrl/QCJ2/4Aib79AOR2bAAGqfwAPoBwAIVuFQD9h/8AKD4HAGFnMwAqGIYATb3qALPnrwCPbW4AlWc5ADG/WwCE10gAMN8WAMctQwAlYTUAyXDOADDLuAC/bP0ApACiAAVs5ABa3aAAIW9HAGIS0gC5XIQAcGFJAGtW4ACZUgEAUFU3AB7VtwAz8cQAE25fAF0w5ACFLqkAHbLDAKEyNgAIt6QA6rHUABb3IQCPaeQAJ/93AAwDgACNQC0AT82gACClmQCzotMAL10KALT5QgAR2ssAfb7QAJvbwQCrF70AyqKBAAhqXAAuVRcAJwBVAH8U8ADhB4YAFAtkAJZBjQCHvt4A2v0qAGsltgB7iTQABfP+ALm/ngBoak8ASiqoAE/EWgAt+LwA11qYAPTHlQANTY0AIDqmAKRXXwAUP7EAgDiVAMwgAQBx3YYAyd62AL9g9QBNZREAAQdrAIywrACywNAAUVVIAB77DgCVcsMAowY7AMBANQAG3HsA4EXMAE4p+gDWysgA6PNBAHxk3gCbZNgA2b4xAKSXwwB3WNQAaePFAPDaEwC6OjwARhhGAFV1XwDSvfUAbpLGAKwuXQAORO0AHD5CAGHEhwAp/ekA59bzACJ8ygBvkTUACODFAP/XjQBuauIAsP3GAJMIwQB8XXQAa62yAM1unQA+cnsAxhFqAPfPqQApc98Atcm6ALcAUQDisg0AdLokAOV9YAB02IoADRUsAIEYDAB+ZpQAASkWAJ96dgD9/b4AVkXvANl+NgDs2RMAi7q5AMSX/AAxqCcA8W7DAJTFNgDYqFYAtKi1AM/MDgASiS0Ab1c0ACxWiQCZzuMA1iC5AGteqgA+KpwAEV/MAP0LSgDh9PsAjjttAOKGLADp1IQA/LSpAO/u0QAuNckALzlhADghRAAb2cgAgfwKAPtKagAvHNgAU7SEAE6ZjABUIswAKlXcAMDG1gALGZYAGnC4AGmVZAAmWmAAP1LuAH8RDwD0tREA/Mv1ADS8LQA0vO4A6F3MAN1eYABnjpsAkjPvAMkXuABhWJsA4Ve8AFGDxgDYPhAA3XFIAC0c3QCvGKEAISxGAFnz1wDZepgAnlTAAE+G+gBWBvwA5XmuAIkiNgA4rSIAZ5PcAFXoqgCCJjgAyuebAFENpACZM7EAqdcOAGkFSABlsvAAf4inAIhMlwD50TYAIZKzAHuCSgCYzyEAQJ/cANxHVQDhdDoAZ+tCAP6d3wBe1F8Ae2ekALqsegBV9qIAK4gjAEG6VQBZbggAISqGADlHgwCJ4+YA5Z7UAEn7QAD/VukAHA/KAMVZigCU+isA08HFAA/FzwDbWq4AR8WGAIVDYgAhhjsALHmUABBhhwAqTHsAgCwaAEO/EgCIJpAAeDyJAKjE5ADl23sAxDrCACb06gD3Z4oADZK/AGWjKwA9k7EAvXwLAKRR3AAn3WMAaeHdAJqUGQCoKZUAaM4oAAnttABEnyAATpjKAHCCYwB+fCMAD7kyAKf1jgAUVucAIfEIALWdKgBvfk0ApRlRALX5qwCC39YAlt1hABY2AgDEOp8Ag6KhAHLtbQA5jXoAgripAGsyXABGJ1sAADTtANIAdwD89FUAAVlNAOBxgA==\");n(g,26083,\"QPsh+T8AAAAALUR0PgAAAICYRvg8AAAAYFHMeDsAAACAgxvwOQAAAEAgJXo4AAAAgCKC4zYAAAAAHfNpNQAAAAAAAPA/dIUV07DZ7z8PiflsWLXvP1FbEtABk+8/e1F9PLhy7z+quWgxh1TvPzhidW56OO8/4d4f9Z0e7z8VtzEK/gbvP8upOjen8e4/IjQSTKbe7j8tiWFgCM7uPycqNtXav+4/gk+dViu07j8pVEjdB6vuP4VVOrB+pO4/zTt/Zp6g7j90X+zodZ/uP4cB63MUoe4/E85MmYml7j/boCpC5azuP+XFzbA3t+4/kPCjgpHE7j9dJT6yA9XuP63TWpmf6O4/R1778nb/7j+cUoXdmxnvP2mQ79wgN+8/h6T73BhY7z9fm3szl3zvP9qQpKKvpO8/QEVuW3bQ7z8AAAAAAADoQpQjkUv4aqw/88T6UM6/zj/WUgz/Qi7mPwAAAAAAADhD/oIrZUcVR0CUI5FL+Gq8PvPE+lDOvy4/1lIM/0Iulj++8/h57GH2PxkwllvG/t6/PYivSu1x9T+k/NQyaAvbv7AQ8PA5lfQ/e7cfCotB17+FA7iwlcnzP3vPbRrpndO/pWSIDBkN8z8xtvLzmx3Qv6COC3siXvI/8Ho7Gx18yb8/NBpKSrvxP588r5Pj+cK/uuWK8Fgj8T9cjXi/y2C5v6cAmUE/lfA/zl9Htp1vqr8AAAAAAADwPwAAAAAAAAAArEea/Yxg7j899SSfyjizP6BqAh+zpOw/upE4VKl2xD/m/GpXNiDrP9LkxEoLhM4/LaqhY9HC6T8cZcbwRQbUP+1BeAPmhug/+J8bLJyO2D9iSFP13GfnP8x7sU6k4Nw/C25JyRZ20j96xnWgaRnXv926p2wKx94/yPa+SEcV578ruCplRxX3P04xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAAAAACBpAACQaAAA4GkAAE4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAACBpAADAaAAAtGgAAAAAAADkaAAAFQQAABYEAAAXBAAAGAQAABkEAAAaBAAAGwQAABwEAAAAAAAAaGkAABUEAAAdBAAAFwQAABgEAAAZBAAAHgQAAB8EAAAgBAAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAACBpAABAaQAA5GgAAAAAAADEaQAAFQQAACEEAAAXBAAAGAQAABkEAAAiBAAAIwQAACQEAABOMTBfX2N4eGFiaXYxMjFfX3ZtaV9jbGFzc190eXBlX2luZm9FAAAAIGkAAJxpAADkaAAAU3Q5dHlwZV9pbmZvAAAAAPhoAADQaQ==\");n(g,27112,\"CtejPAEBAAAAAABAAACAPw8EAAAQBAAAEQQAABIEAAD/////0IIAAACFUA==\")}var t=new ArrayBuffer(16);var u=new Int32Array(t);var v=new Float32Array(t);var w=new Float64Array(t);function x(y){return u[y]}function z(y,A){u[y]=A}function B(){return w[0]}function C(A){w[0]=A}function D(A){v[2]=A}function E(){return v[2]}function ka(la){var F=la.a;var G=F.buffer;var H=new Int8Array(G);var I=new Int16Array(G);var J=new Int32Array(G);var K=new Uint8Array(G);var L=new Uint16Array(G);var M=new Uint32Array(G);var N=new Float32Array(G);var O=new Float64Array(G);var P=Math.imul;var Q=Math.fround;var R=Math.abs;var S=Math.clz32;var T=Math.min;var U=Math.max;var V=Math.floor;var W=Math.ceil;var X=Math.trunc;var Y=Math.sqrt;var Z=la.abort;var _=NaN;var $=Infinity;var aa=la.b;var ba=la.c;var ca=la.d;var da=la.e;var ea=la.f;var fa=la.g;var ga=5276928;var ha=0;\n// EMSCRIPTEN_START_FUNCS\nfunction wD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=Q(0),w=Q(0),x=0,y=0,z=Q(0),A=0,B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0),I=Q(0),L=0,M=0,O=0,S=0,T=Q(0),U=Q(0),V=0,W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=0;d=ga-208|0;ga=d;c=J[a+52>>2];if(c){ia[J[J[c>>2]>>2]](c)|0;c=J[a+52>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}}J[8369]=J[8369]+1;c=ia[J[6782]](132,16)|0;H[c+20|0]=1;J[c>>2]=15728;J[c+16>>2]=0;H[c+40|0]=1;J[c+8>>2]=0;J[c+12>>2]=0;J[c+36>>2]=0;H[c+60|0]=1;J[c+28>>2]=0;J[c+32>>2]=0;J[c+56>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[a+52>>2]=c;J[d+196>>2]=0;J[d+188>>2]=0;J[d+192>>2]=0;H[d+200|0]=1;if((ia[J[J[a>>2]+96>>2]](a)|0)>0){c=J[d+192>>2];F=K[d+200|0];while(1){a:{if((e|0)!=(j|0)){break a}m=e?e<<1:1;if((m|0)<=(e|0)){break a}if(m){J[8369]=J[8369]+1;l=ia[J[6782]](m<<4,16)|0}else{l=0}b:{if((e|0)<=0){break b}p=0;c=0;if(e-1>>>0>=3){x=e&-4;s=0;while(1){o=c<<4;u=o+l|0;i=g+o|0;f=J[i+4>>2];J[u>>2]=J[i>>2];J[u+4>>2]=f;f=J[i+12>>2];J[u+8>>2]=J[i+8>>2];J[u+12>>2]=f;f=o|16;u=f+l|0;i=f+g|0;f=J[i+12>>2];J[u+8>>2]=J[i+8>>2];J[u+12>>2]=f;f=J[i+4>>2];J[u>>2]=J[i>>2];J[u+4>>2]=f;f=o|32;u=f+l|0;i=f+g|0;f=J[i+12>>2];J[u+8>>2]=J[i+8>>2];J[u+12>>2]=f;f=J[i+4>>2];J[u>>2]=J[i>>2];J[u+4>>2]=f;f=o|48;u=f+l|0;i=f+g|0;f=J[i+12>>2];J[u+8>>2]=J[i+8>>2];J[u+12>>2]=f;f=J[i+4>>2];J[u>>2]=J[i>>2];J[u+4>>2]=f;c=c+4|0;s=s+4|0;if((x|0)!=(s|0)){continue}break}}u=e&3;if(!u){break b}while(1){e=c<<4;f=e+l|0;x=e+g|0;e=J[x+4>>2];J[f>>2]=J[x>>2];J[f+4>>2]=e;e=J[x+12>>2];J[f+8>>2]=J[x+8>>2];J[f+12>>2]=e;c=c+1|0;p=p+1|0;if((u|0)!=(p|0)){continue}break}}if(!(g?!g|!(F&255):1)){J[8370]=J[8370]+1;ia[J[6783]](g)}J[d+196>>2]=l;F=1;H[d+200|0]=1;J[d+192>>2]=m;c=m}g=J[d+196>>2];ia[J[J[a>>2]+108>>2]](a,h,g+(j<<4)|0);j=j+1|0;e=c;h=h+1|0;if((ia[J[J[a>>2]+96>>2]](a)|0)>(h|0)){continue}break}J[d+188>>2]=j}H[d+156|0]=1;J[d+152>>2]=0;H[d+176|0]=1;J[d+144>>2]=0;J[d+148>>2]=0;J[d+172>>2]=0;J[d+164>>2]=0;J[d+168>>2]=0;J[d+132>>2]=0;H[d+136|0]=1;J[d+124>>2]=0;J[d+128>>2]=0;c:{d:{if(b){J[d+28>>2]=0;H[d+32|0]=1;J[d+20>>2]=0;J[d+24>>2]=0;c=0;q=J[d+188>>2];if((q|0)>0){while(1){b=c;e:{c=c+1|0;if((q|0)<=(c|0)){break e}l=J[d+196>>2];t=l+(b<<4)|0;b=c;while(1){f:{g=b+1|0;if((g|0)>=(q|0)){break f}k=(b<<4)+l|0;m=g;while(1){v=N[t>>2];C=Q(N[k>>2]-v);b=(m<<4)+l|0;n=N[t+4>>2];B=Q(N[b+4>>2]-n);w=Q(N[b>>2]-v);z=Q(N[k+4>>2]-n);E=Q(Q(C*B)-Q(w*z));n=N[t+8>>2];v=Q(N[k+8>>2]-n);n=Q(N[b+8>>2]-n);w=Q(Q(v*w)-Q(n*C));v=Q(Q(z*n)-Q(B*v));D=Q(1);e=1;while(1){C=Q(E*D);B=Q(v*D);z=Q(w*D);n=Q(Q(C*C)+Q(Q(B*B)+Q(z*z)));g:{if(!(n>Q(9999999747378752e-20))){break g}n=Q(Q(1)/Q(Y(n)));I=Q(C*n);C=Q(z*n);z=Q(B*n);j=J[d+20>>2];if((j|0)>0){b=1;f=J[d+28>>2];if(Q(Q(I*N[f+8>>2])+Q(Q(z*N[f>>2])+Q(C*N[f+4>>2])))>Q(.9990000128746033)){break g}while(1){l=b;if((b|0)!=(j|0)){b=l+1|0;h=f+(l<<4)|0;if(!(Q(Q(I*N[h+8>>2])+Q(Q(z*N[h>>2])+Q(C*N[h+4>>2])))>Q(.9990000128746033))){continue}}break}if((j|0)>(l|0)){break g}}n=Q(Q(I*N[t+8>>2])+Q(Q(z*N[t>>2])+Q(C*N[t+4>>2])));f=J[d+188>>2];if((f|0)>0){b=1;u=J[d+196>>2];if(Q(Q(Q(Q(I*N[u+8>>2])+Q(Q(z*N[u>>2])+Q(C*N[u+4>>2])))-n)+Q(-.009999999776482582))>Q(0)){break g}while(1){l=b;if((b|0)!=(f|0)){b=l+1|0;h=u+(l<<4)|0;if(!(Q(Q(Q(Q(I*N[h+8>>2])+Q(Q(z*N[h>>2])+Q(C*N[h+4>>2])))-n)+Q(-.009999999776482582))>Q(0))){continue}}break}if((f|0)>(l|0)){break g}}n=Q(-n);h:{if(J[d+24>>2]!=(j|0)){break h}r=j?j<<1:1;if((r|0)<=(j|0)){break h}i:{if(!r){b=0;break i}J[8369]=J[8369]+1;b=ia[J[6782]](r<<4,16)|0;j=J[d+20>>2]}j:{if((j|0)<=0){break j}x=j&1;l=0;if((j|0)!=1){u=j&-2;j=0;while(1){i=l<<4;f=i+b|0;o=i+J[d+28>>2]|0;h=J[o+4>>2];J[f>>2]=J[o>>2];J[f+4>>2]=h;h=J[o+12>>2];J[f+8>>2]=J[o+8>>2];J[f+12>>2]=h;h=i|16;f=h+b|0;i=h+J[d+28>>2]|0;h=J[i+4>>2];J[f>>2]=J[i>>2];J[f+4>>2]=h;h=J[i+12>>2];J[f+8>>2]=J[i+8>>2];J[f+12>>2]=h;l=l+2|0;j=j+2|0;if((u|0)!=(j|0)){continue}break}}if(!x){break j}l=l<<4;h=l+b|0;f=l+J[d+28>>2]|0;l=J[f+4>>2];J[h>>2]=J[f>>2];J[h+4>>2]=l;l=J[f+12>>2];J[h+8>>2]=J[f+8>>2];J[h+12>>2]=l}l=J[d+28>>2];if(!(l?!l|!K[d+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](l)}J[d+28>>2]=b;H[d+32|0]=1;J[d+24>>2]=r;j=J[d+20>>2]}b=J[d+28>>2]+(j<<4)|0;N[b+12>>2]=n;N[b+8>>2]=I;N[b+4>>2]=C;N[b>>2]=z;J[d+20>>2]=J[d+20>>2]+1}b=e;D=Q(-1);e=0;if(b){continue}break}m=m+1|0;if((q|0)<=(m|0)){break f}l=J[d+196>>2];continue}}if((g|0)==(q|0)){break e}l=J[d+196>>2];b=g;continue}}if((c|0)!=(q|0)){continue}break}}J[d+108>>2]=0;H[d+112|0]=1;J[d+100>>2]=0;J[d+104>>2]=0;if(J[d+20>>2]<=0){break d}j=0;while(1){b=J[d+28>>2]+(j<<4)|0;J[d+80>>2]=J[b+8>>2];c=J[b+4>>2];J[d+72>>2]=J[b>>2];J[d+76>>2]=c;n=Q(N[b+12>>2]-Q(ia[J[J[a>>2]+48>>2]](a)));g=J[d+100>>2];k:{if((g|0)!=J[d+104>>2]){break k}u=g?g<<1:1;if((u|0)<=(g|0)){break k}l:{if(!u){A=0;break l}J[8369]=J[8369]+1;A=ia[J[6782]](u<<4,16)|0;g=J[d+100>>2]}m:{if((g|0)<=0){break m}c=0;if((g|0)!=1){l=g&-2;e=0;while(1){h=c<<4;m=h+A|0;f=h+J[d+108>>2]|0;b=J[f+4>>2];J[m>>2]=J[f>>2];J[m+4>>2]=b;b=J[f+12>>2];J[m+8>>2]=J[f+8>>2];J[m+12>>2]=b;b=h|16;m=b+A|0;h=b+J[d+108>>2]|0;b=J[h+4>>2];J[m>>2]=J[h>>2];J[m+4>>2]=b;b=J[h+12>>2];J[m+8>>2]=J[h+8>>2];J[m+12>>2]=b;c=c+2|0;e=e+2|0;if((l|0)!=(e|0)){continue}break}}if(!(g&1)){break m}b=c<<4;c=b+A|0;g=b+J[d+108>>2]|0;b=J[g+4>>2];J[c>>2]=J[g>>2];J[c+4>>2]=b;b=J[g+12>>2];J[c+8>>2]=J[g+8>>2];J[c+12>>2]=b}b=J[d+108>>2];if(!(b?!b|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[d+108>>2]=A;H[d+112|0]=1;J[d+104>>2]=u;g=J[d+100>>2]}b=J[d+76>>2];c=J[d+108>>2]+(g<<4)|0;J[c>>2]=J[d+72>>2];J[c+4>>2]=b;b=J[d+80>>2];N[c+12>>2]=n;J[c+8>>2]=b;J[d+100>>2]=J[d+100>>2]+1;j=j+1|0;if((j|0)<J[d+20>>2]){continue}break}break d}eg(d+120|0,g,J[d+188>>2]);break c}J[d+84>>2]=0;H[d+88|0]=1;J[d+76>>2]=0;J[d+80>>2]=0;c=0;k=J[d+100>>2];if((k|0)>0){while(1){b=c;n:{c=c+1|0;if((k|0)<=(c|0)){break n}l=J[d+108>>2];r=l+(b<<4)|0;b=c;while(1){o:{g=b+1|0;if((g|0)>=(k|0)){break o}o=(b<<4)+l|0;m=g;while(1){W=N[o>>2];b=(m<<4)+l|0;B=N[b+4>>2];w=N[b>>2];z=N[o+4>>2];E=Q(Q(W*B)-Q(w*z));v=N[b+8>>2];n=N[o+8>>2];D=Q(Q(z*v)-Q(B*n));G=Q(Q(n*w)-Q(v*W));p:{if(!(Q(Q(E*E)+Q(Q(D*D)+Q(G*G)))>Q(9999999747378752e-20))){break p}X=N[r+4>>2];Z=N[r>>2];T=Q(Q(w*X)-Q(Z*B));_=B;B=N[r+8>>2];U=Q(Q(_*B)-Q(X*v));I=Q(Q(v*Z)-Q(B*w));if(!(Q(Q(T*T)+Q(Q(U*U)+Q(I*I)))>Q(9999999747378752e-20))){break p}w=Q(Q(Z*z)-Q(W*X));C=Q(Q(X*n)-Q(z*B));v=Q(Q(B*W)-Q(n*Z));if(!(Q(Q(w*w)+Q(Q(C*C)+Q(v*v)))>Q(9999999747378752e-20))){break p}n=Q(Q(B*E)+Q(Q(Z*D)+Q(X*G)));if(!(Q(R(n))>Q(9.999999974752427e-7))){break p}B=Q(Q(-1)/n);z=N[b+12>>2];_=E;E=N[r+12>>2];n=N[o+12>>2];w=Q(B*Q(Q(w*z)+Q(Q(_*E)+Q(T*n))));v=Q(B*Q(Q(v*z)+Q(Q(G*E)+Q(I*n))));n=Q(B*Q(Q(C*z)+Q(Q(D*E)+Q(U*n))));b=0;h=1;e=J[d+100>>2];if((e|0)>0){while(1){f=(b<<4)+l|0;if(!(Q(Q(N[f+12>>2]+Q(Q(N[f+8>>2]*w)+Q(Q(N[f>>2]*n)+Q(v*N[f+4>>2]))))+Q(-.009999999776482582))>Q(0))){b=b+1|0;h=(e|0)>(b|0);if((b|0)!=(e|0)){continue}}break}if(h){break p}}l=J[d+76>>2];q:{if((l|0)!=J[d+80>>2]){break q}i=l?l<<1:1;if((i|0)<=(l|0)){break q}r:{if(!i){j=0;break r}J[8369]=J[8369]+1;j=ia[J[6782]](i<<4,16)|0;l=J[d+76>>2]}s:{if((l|0)<=0){break s}b=0;if((l|0)!=1){f=l&-2;A=0;while(1){u=b<<4;h=u+j|0;x=u+J[d+84>>2]|0;e=J[x+4>>2];J[h>>2]=J[x>>2];J[h+4>>2]=e;e=J[x+12>>2];J[h+8>>2]=J[x+8>>2];J[h+12>>2]=e;e=u|16;h=e+j|0;u=e+J[d+84>>2]|0;e=J[u+4>>2];J[h>>2]=J[u>>2];J[h+4>>2]=e;e=J[u+12>>2];J[h+8>>2]=J[u+8>>2];J[h+12>>2]=e;b=b+2|0;A=A+2|0;if((f|0)!=(A|0)){continue}break}}if(!(l&1)){break s}b=b<<4;e=b+j|0;l=b+J[d+84>>2]|0;b=J[l+4>>2];J[e>>2]=J[l>>2];J[e+4>>2]=b;b=J[l+12>>2];J[e+8>>2]=J[l+8>>2];J[e+12>>2]=b}b=J[d+84>>2];if(!(b?!b|!K[d+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[d+84>>2]=j;H[d+88|0]=1;J[d+80>>2]=i;l=J[d+76>>2]}b=J[d+84>>2]+(l<<4)|0;J[b+12>>2]=0;N[b+8>>2]=w;N[b+4>>2]=v;N[b>>2]=n;J[d+76>>2]=J[d+76>>2]+1}m=m+1|0;if((k|0)<=(m|0)){break o}l=J[d+108>>2];continue}}if((g|0)==(k|0)){break n}l=J[d+108>>2];b=g;continue}}if((c|0)!=(k|0)){continue}break}}eg(d+120|0,J[d+84>>2],J[d+76>>2]);b=J[d+84>>2];if(!(b?!b|!K[d+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[d+108>>2];if(!(b?!b|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[d+28>>2];if(!b|!K[d+32|0]){break c}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}u=J[d+164>>2];t:{if(!u){break t}J[8369]=J[8369]+1;$=ia[J[6782]](u<<4,16)|0;g=0;H[d+31|0]=0;H[d+32|0]=0;H[d+33|0]=0;H[d+34|0]=0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;b=d+16|3;J[8369]=J[8369]+1;M=ia[J[6782]](P(u,36),16)|0;if((u|0)!=1){e=u&2147483646;p=0;while(1){c=P(g,36)+M|0;J[c+4>>2]=0;J[c+8>>2]=0;H[c+16|0]=1;J[c+12>>2]=0;l=K[b+4|0]|K[b+5|0]<<8|(K[b+6|0]<<16|K[b+7|0]<<24);m=K[b|0]|K[b+1|0]<<8|(K[b+2|0]<<16|K[b+3|0]<<24);H[c+20|0]=m;H[c+21|0]=m>>>8;H[c+22|0]=m>>>16;H[c+23|0]=m>>>24;H[c+24|0]=l;H[c+25|0]=l>>>8;H[c+26|0]=l>>>16;H[c+27|0]=l>>>24;l=K[b+12|0]|K[b+13|0]<<8|(K[b+14|0]<<16|K[b+15|0]<<24);m=K[b+8|0]|K[b+9|0]<<8|(K[b+10|0]<<16|K[b+11|0]<<24);H[c+28|0]=m;H[c+29|0]=m>>>8;H[c+30|0]=m>>>16;H[c+31|0]=m>>>24;H[c+32|0]=l;H[c+33|0]=l>>>8;H[c+34|0]=l>>>16;H[c+35|0]=l>>>24;c=P(g|1,36)+M|0;J[c+4>>2]=0;J[c+8>>2]=0;H[c+16|0]=1;J[c+12>>2]=0;l=K[b+4|0]|K[b+5|0]<<8|(K[b+6|0]<<16|K[b+7|0]<<24);m=K[b|0]|K[b+1|0]<<8|(K[b+2|0]<<16|K[b+3|0]<<24);H[c+20|0]=m;H[c+21|0]=m>>>8;H[c+22|0]=m>>>16;H[c+23|0]=m>>>24;H[c+24|0]=l;H[c+25|0]=l>>>8;H[c+26|0]=l>>>16;H[c+27|0]=l>>>24;l=K[b+12|0]|K[b+13|0]<<8|(K[b+14|0]<<16|K[b+15|0]<<24);m=K[b+8|0]|K[b+9|0]<<8|(K[b+10|0]<<16|K[b+11|0]<<24);H[c+28|0]=m;H[c+29|0]=m>>>8;H[c+30|0]=m>>>16;H[c+31|0]=m>>>24;H[c+32|0]=l;H[c+33|0]=l>>>8;H[c+34|0]=l>>>16;H[c+35|0]=l>>>24;g=g+2|0;p=p+2|0;if((e|0)!=(p|0)){continue}break}}if(!(u&1)){break t}c=P(g,36)+M|0;J[c+4>>2]=0;J[c+8>>2]=0;H[c+16|0]=1;J[c+12>>2]=0;e=K[b+4|0]|K[b+5|0]<<8|(K[b+6|0]<<16|K[b+7|0]<<24);g=K[b|0]|K[b+1|0]<<8|(K[b+2|0]<<16|K[b+3|0]<<24);H[c+20|0]=g;H[c+21|0]=g>>>8;H[c+22|0]=g>>>16;H[c+23|0]=g>>>24;H[c+24|0]=e;H[c+25|0]=e>>>8;H[c+26|0]=e>>>16;H[c+27|0]=e>>>24;g=K[b+12|0]|K[b+13|0]<<8|(K[b+14|0]<<16|K[b+15|0]<<24);b=K[b+8|0]|K[b+9|0]<<8|(K[b+10|0]<<16|K[b+11|0]<<24);H[c+28|0]=b;H[c+29|0]=b>>>8;H[c+30|0]=b>>>16;H[c+31|0]=b>>>24;H[c+32|0]=g;H[c+33|0]=g>>>8;H[c+34|0]=g>>>16;H[c+35|0]=g>>>24}f=J[a+52>>2];A=J[f+8>>2];h=J[d+124>>2];if(!((A|0)>=(h|0)|(h|0)<=J[f+12>>2])){u:{if(!h){p=0;break u}J[8369]=J[8369]+1;p=ia[J[6782]](h<<4,16)|0;A=J[f+8>>2]}v:{if((A|0)<=0){break v}g=0;if((A|0)!=1){e=A&-2;s=0;while(1){m=g<<4;c=m+p|0;l=m+J[f+16>>2]|0;b=J[l+4>>2];J[c>>2]=J[l>>2];J[c+4>>2]=b;b=J[l+12>>2];J[c+8>>2]=J[l+8>>2];J[c+12>>2]=b;b=m|16;c=b+p|0;m=b+J[f+16>>2]|0;b=J[m+4>>2];J[c>>2]=J[m>>2];J[c+4>>2]=b;b=J[m+12>>2];J[c+8>>2]=J[m+8>>2];J[c+12>>2]=b;g=g+2|0;s=s+2|0;if((e|0)!=(s|0)){continue}break}}if(!(A&1)){break v}b=g<<4;c=b+p|0;g=b+J[f+16>>2]|0;b=J[g+4>>2];J[c>>2]=J[g>>2];J[c+4>>2]=b;b=J[g+12>>2];J[c+8>>2]=J[g+8>>2];J[c+12>>2]=b}b=J[f+16>>2];if(!(b?!b|!K[f+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[f+16>>2]=p;H[f+20|0]=1;J[f+12>>2]=h}J[f+8>>2]=h;w:{if((h|0)<=0){break w}c=0;if((h|0)!=1){e=h&-2;A=0;while(1){m=c<<4;g=m+J[J[a+52>>2]+16>>2]|0;l=m+J[d+132>>2]|0;b=J[l+4>>2];J[g>>2]=J[l>>2];J[g+4>>2]=b;b=J[l+12>>2];J[g+8>>2]=J[l+8>>2];J[g+12>>2]=b;b=m|16;g=b+J[J[a+52>>2]+16>>2]|0;m=b+J[d+132>>2]|0;b=J[m+4>>2];J[g>>2]=J[m>>2];J[g+4>>2]=b;b=J[m+12>>2];J[g+8>>2]=J[m+8>>2];J[g+12>>2]=b;c=c+2|0;A=A+2|0;if((e|0)!=(A|0)){continue}break}}if(!(h&1)){break w}b=c<<4;c=b+J[J[a+52>>2]+16>>2]|0;g=b+J[d+132>>2]|0;b=J[g+4>>2];J[c>>2]=J[g>>2];J[c+4>>2]=b;b=J[g+12>>2];J[c+8>>2]=J[g+8>>2];J[c+12>>2]=b}x:{y:{z:{A:{if(!u){break A}b=0;while(1){k=P(b,36)+M|0;e=J[k+4>>2];h=0;x=J[d+152>>2]+P(J[J[d+172>>2]+(b<<2)>>2],12)|0;s=x;B:{while(1){f=J[(P(J[s+4>>2],12)+s|0)+8>>2];C:{if(J[k+8>>2]!=(e|0)){break C}i=e?e<<1:1;if((i|0)<=(e|0)){break C}D:{if(!i){g=0;break D}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;e=J[k+4>>2]}r=J[k+12>>2];E:{F:{if((e|0)>0){p=0;c=0;if(e-1>>>0>=3){l=e&-4;j=0;while(1){o=c<<2;J[o+g>>2]=J[o+r>>2];m=o|4;J[m+g>>2]=J[m+r>>2];m=o|8;J[m+g>>2]=J[m+r>>2];m=o|12;J[m+g>>2]=J[m+r>>2];c=c+4|0;j=j+4|0;if((l|0)!=(j|0)){continue}break}}m=e&3;if(!m){break F}while(1){e=c<<2;J[e+g>>2]=J[e+r>>2];c=c+1|0;p=p+1|0;if((m|0)!=(p|0)){continue}break}break F}if(!r){break E}}if(r?K[k+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](r)}e=J[k+4>>2]}H[k+16|0]=1;J[k+12>>2]=g;J[k+8>>2]=i}J[J[k+12>>2]+(e<<2)>>2]=f;e=J[k+4>>2]+1|0;J[k+4>>2]=e;G:{if((h|0)<=1){c=J[d+132>>2];g=c+(f<<4)|0;B=N[g+4>>2];c=c+(J[s+8>>2]<<4)|0;z=N[c+4>>2];E=N[g>>2];w=N[c>>2];v=N[g+8>>2];n=N[c+8>>2];c=(d+16|0)+(h<<4)|0;J[c+12>>2]=0;C=Q(n-v);v=Q(w-E);n=Q(z-B);w=Q(Q(1)/Q(Y(Q(Q(C*C)+Q(Q(v*v)+Q(n*n))))));N[c+8>>2]=C*w;N[c+4>>2]=n*w;N[c>>2]=v*w;h=h+1|0;c=P(J[s+4>>2],12)+s|0;s=P(J[c>>2],12)+c|0;if((x|0)!=(s|0)){continue}if((h|0)==2){break G}c=(b<<4)+$|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;break B}h=2;c=P(J[s+4>>2],12)+s|0;s=P(J[c>>2],12)+c|0;if((x|0)!=(s|0)){continue}}break}C=N[d+20>>2];v=N[d+36>>2];B=N[d+32>>2];z=N[d+24>>2];E=N[d+16>>2];n=N[d+40>>2];c=(b<<4)+$|0;J[c+12>>2]=0;w=Q(Q(E*v)-Q(B*C));v=Q(Q(C*n)-Q(v*z));n=Q(Q(z*B)-Q(n*E));E=Q(Q(1)/Q(Y(Q(Q(w*w)+Q(Q(v*v)+Q(n*n))))));N[c+8>>2]=w*E;N[c+4>>2]=n*E;n=Q(v*E);N[c>>2]=n;N[k+20>>2]=n;N[k+24>>2]=N[c+4>>2];n=N[c+8>>2];J[k+32>>2]=1900671690;N[k+28>>2]=n}m=J[k+4>>2];H:{if((m|0)<=0){D=Q(1.0000000150474662e30);break H}c=(b<<4)+$|0;E=N[c+8>>2];w=N[c+4>>2];v=N[c>>2];e=J[J[a+52>>2]+16>>2];g=J[k+12>>2];D=Q(1.0000000150474662e30);c=0;while(1){l=e+(J[g+(c<<2)>>2]<<4)|0;n=Q(Q(N[l+8>>2]*E)+Q(Q(N[l>>2]*v)+Q(N[l+4>>2]*w)));D=n<D?n:D;c=c+1|0;if((m|0)!=(c|0)){continue}break}}N[k+32>>2]=-D;b=b+1|0;if((u|0)!=(b|0)){continue}break}if(!u){break A}e=0;m=0;h=0;while(1){I:{if((e|0)!=(h|0)){break I}h=e?e<<1:1;if(h>>>0<=e>>>0){h=e;break I}J[8369]=J[8369]+1;b=ia[J[6782]](h<<2,16)|0;J:{K:{if(e){p=0;c=0;if(e-1>>>0>=3){l=e&2147483644;s=0;while(1){f=c<<2;J[f+b>>2]=J[f+m>>2];g=f|4;J[g+b>>2]=J[g+m>>2];g=f|8;J[g+b>>2]=J[g+m>>2];g=f|12;J[g+b>>2]=J[g+m>>2];c=c+4|0;s=s+4|0;if((l|0)!=(s|0)){continue}break}}l=e&3;if(!l){break K}while(1){g=c<<2;J[g+b>>2]=J[g+m>>2];c=c+1|0;p=p+1|0;if((l|0)!=(p|0)){continue}break}break K}if(m){break K}h=1;break J}if(m){J[8370]=J[8370]+1;ia[J[6783]](m)}}m=b}J[(e<<2)+m>>2]=e;e=e+1|0;if((u|0)!=(e|0)){continue}break}l=u;while(1){g=l-1|0;c=J[(g<<2)+m>>2];J[8369]=J[8369]+1;b=ia[J[6782]](4,16)|0;J[b>>2]=c;L:{M:{if((l|0)<2){l=g;x=1;break M}c=P(c,36)+M|0;w=N[c+20>>2];v=N[c+28>>2];n=N[c+24>>2];c=l-2|0;x=1;l=g;h=1;while(1){e=c;o=J[(c<<2)+m>>2];c=P(o,36)+M|0;if(Q(Q(v*N[c+28>>2])+Q(Q(w*N[c+20>>2])+Q(n*N[c+24>>2])))>Q(.9990000128746033)){N:{if((h|0)!=(x|0)){g=b;break N}h=x?x<<1:1;if((x|0)>=(h|0)){g=b;h=x;break N}if(h){J[8369]=J[8369]+1;g=ia[J[6782]](h<<2,16)|0}else{g=0}O:{if((x|0)>0){p=0;c=0;if(x-1>>>0>=3){i=x&-4;j=0;while(1){r=c<<2;J[r+g>>2]=J[b+r>>2];f=r|4;J[f+g>>2]=J[b+f>>2];f=r|8;J[f+g>>2]=J[b+f>>2];f=r|12;J[f+g>>2]=J[b+f>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}j=x&3;if(!j){break O}while(1){f=c<<2;J[f+g>>2]=J[b+f>>2];c=c+1|0;p=p+1|0;if((j|0)!=(p|0)){continue}break}break O}if(!b){break N}}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[(x<<2)+g>>2]=o;x=x+1|0;c=0;P:{if((l|0)<=0){break P}while(1){b=(c<<2)+m|0;if((o|0)!=J[b>>2]){c=c+1|0;if((l|0)!=(c|0)){continue}break P}break}if((c|0)>=(l|0)){break P}c=b;l=l-1|0;b=(l<<2)+m|0;J[c>>2]=J[b>>2];J[b>>2]=o}b=g}c=e-1|0;if((e|0)>0){continue}break}Q:{if((x|0)>1){g=0;J[d+28>>2]=0;H[d+32|0]=1;J[d+20>>2]=0;J[d+24>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;D=Q(0);G=Q(0);w=Q(0);e=0;while(1){t=P(J[(e<<2)+b>>2],36)+M|0;v=N[t+24>>2];n=N[t+28>>2];N[d>>2]=N[t+20>>2]+w;N[d+8>>2]=n+D;N[d+4>>2]=v+G;p=J[t+4>>2];if((p|0)>0){h=0;while(1){k=J[J[t+12>>2]+(h<<2)>>2];j=J[J[a+52>>2]+16>>2];R:{if((g|0)>0){c=0;f=J[d+28>>2];while(1){if((k|0)==J[(f+P(c,24)|0)+20>>2]){break R}c=c+1|0;if((g|0)!=(c|0)){continue}break}}f=j+(k<<4)|0;c=J[f+12>>2];J[d+104>>2]=J[f+8>>2];J[d+108>>2]=c;c=J[f+4>>2];J[d+96>>2]=J[f>>2];J[d+100>>2]=c;S:{if(J[d+24>>2]!=(g|0)){break S}r=g?g<<1:1;if((r|0)<=(g|0)){break S}T:{if(!r){p=0;break T}J[8369]=J[8369]+1;p=ia[J[6782]](P(r,24),16)|0;g=J[d+20>>2]}y=J[d+28>>2];U:{if((g|0)<=0){break U}F=0;c=0;if(g-1>>>0>=3){o=g&-4;j=0;while(1){f=P(c,24);i=f+p|0;q=f+y|0;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=P(c|1,24);i=f+p|0;q=f+y|0;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=P(c|2,24);i=f+p|0;q=f+y|0;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=P(c|3,24);i=f+p|0;q=f+y|0;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;c=c+4|0;j=j+4|0;if((o|0)!=(j|0)){continue}break}}i=g&3;if(!i){break U}while(1){f=P(c,24);j=f+p|0;o=f+y|0;f=J[o+4>>2];J[j>>2]=J[o>>2];J[j+4>>2]=f;f=J[o+20>>2];J[j+16>>2]=J[o+16>>2];J[j+20>>2]=f;f=J[o+12>>2];J[j+8>>2]=J[o+8>>2];J[j+12>>2]=f;c=c+1|0;F=F+1|0;if((i|0)!=(F|0)){continue}break}}if(!(!y|!K[d+32|0])){if(y){J[8370]=J[8370]+1;ia[J[6783]](y)}g=J[d+20>>2]}J[d+28>>2]=p;H[d+32|0]=1;J[d+24>>2]=r}c=J[d+100>>2];j=J[d+28>>2]+P(g,24)|0;g=j;J[g>>2]=J[d+96>>2];J[g+4>>2]=c;f=J[d+108>>2];g=J[d+104>>2];c=J[d+112>>2];J[j+20>>2]=k;J[j+16>>2]=c;J[j+8>>2]=g;J[j+12>>2]=f;g=J[d+20>>2]+1|0;J[d+20>>2]=g;p=J[t+4>>2]}h=h+1|0;if((p|0)>(h|0)){continue}break}}D=N[d+8>>2];G=N[d+4>>2];w=N[d>>2];e=e+1|0;if((x|0)!=(e|0)){continue}break}break Q}c=(x|0)!=1;x=1;if(c){break L}break M}e=P(J[b>>2],36)+M|0;g=K[e+32|0]|K[e+33|0]<<8|(K[e+34|0]<<16|K[e+35|0]<<24);c=K[e+28|0]|K[e+29|0]<<8|(K[e+30|0]<<16|K[e+31|0]<<24);H[d+83|0]=c;H[d+84|0]=c>>>8;H[d+85|0]=c>>>16;H[d+86|0]=c>>>24;H[d+87|0]=g;H[d+88|0]=g>>>8;H[d+89|0]=g>>>16;H[d+90|0]=g>>>24;g=K[e+24|0]|K[e+25|0]<<8|(K[e+26|0]<<16|K[e+27|0]<<24);c=K[e+20|0]|K[e+21|0]<<8|(K[e+22|0]<<16|K[e+23|0]<<24);H[d+75|0]=c;H[d+76|0]=c>>>8;H[d+77|0]=c>>>16;H[d+78|0]=c>>>24;H[d+79|0]=g;H[d+80|0]=g>>>8;H[d+81|0]=g>>>16;H[d+82|0]=g>>>24;n=Q(Q(1)/Q(Y(Q(Q(D*D)+Q(Q(w*w)+Q(G*G))))));N[d+8>>2]=D*n;N[d+4>>2]=G*n;N[d>>2]=w*n;g=0;J[d+108>>2]=0;H[d+112|0]=1;J[d+100>>2]=0;J[d+104>>2]=0;t=d+16|0;c=0;p=0;D=Q(0);s=0;y=ga-32|0;ga=y;w=N[d+8>>2];V:{if(Q(R(w))>Q(.7071067690849304)){v=N[d+4>>2];n=Q(Q(1)/Q(Y(Q(Q(v*v)+Q(w*w)))));D=Q(v*n);G=Q(n*Q(-w));n=Q(0);break V}w=N[d>>2];v=N[d+4>>2];n=Q(Q(1)/Q(Y(Q(Q(w*w)+Q(v*v)))));G=Q(w*n);n=Q(n*Q(-v))}W:{X:{Y:{Z:{j=J[t+4>>2];if((j|0)>=2){while(1){i=J[t+12>>2];f=P(c,24);e=i+f|0;if(Q(Q(N[e+8>>2]*D)+Q(Q(N[e>>2]*n)+Q(G*N[e+4>>2])))<Q(Q(N[i+8>>2]*D)+Q(Q(N[i>>2]*n)+Q(G*N[i+4>>2])))){h=J[i+20>>2];J[y+24>>2]=J[i+16>>2];J[y+28>>2]=h;h=J[i+12>>2];J[y+16>>2]=J[i+8>>2];J[y+20>>2]=h;h=J[i+4>>2];J[y+8>>2]=J[i>>2];J[y+12>>2]=h;h=J[e+4>>2];J[i>>2]=J[e>>2];J[i+4>>2]=h;h=J[e+12>>2];J[i+8>>2]=J[e+8>>2];J[i+12>>2]=h;h=J[e+20>>2];J[i+16>>2]=J[e+16>>2];J[i+20>>2]=h;e=J[y+12>>2];h=f+J[t+12>>2]|0;J[h>>2]=J[y+8>>2];J[h+4>>2]=e;e=J[y+28>>2];J[h+16>>2]=J[y+24>>2];J[h+20>>2]=e;e=J[y+20>>2];J[h+8>>2]=J[y+16>>2];J[h+12>>2]=e;j=J[t+4>>2]}c=c+1|0;if((j|0)>(c|0)){continue}break}h=J[t+12>>2];J[h+16>>2]=-246811958;if((j|0)>=2){C=N[h+8>>2];B=N[h+4>>2];z=N[h>>2];E=Q(-G);w=Q(-n);v=Q(-D);c=1;while(1){e=h+P(c,24)|0;T=Q(N[e+4>>2]-B);U=Q(N[e>>2]-z);I=Q(N[e+8>>2]-C);N[e+16>>2]=Q(Q(Q(Q(n*T)+Q(U*E))*N[d+8>>2])+Q(Q(Q(Q(G*I)+Q(T*v))*N[d>>2])+Q(N[d+4>>2]*Q(Q(D*U)+Q(I*w)))))/Q(Y(Q(Q(I*I)+Q(Q(U*U)+Q(T*T)))));c=c+1|0;if((j|0)!=(c|0)){continue}break}}c=J[h+12>>2];J[y+16>>2]=J[h+8>>2];J[y+20>>2]=c;c=J[h+4>>2];J[y+8>>2]=J[h>>2];J[y+12>>2]=c;Tl(t,y+8|0,1,j-1|0);h=J[t+12>>2];c=J[d+100>>2];if((c|0)!=J[d+104>>2]){break X}r=c?c<<1:1;if((r|0)<=(c|0)){break X}if(r){break Z}j=0;break Y}if((j|0)!=1){break W}c=J[d+100>>2];while(1){h=J[t+12>>2];_:{if(J[d+104>>2]!=(c|0)){break _}k=c?c<<1:1;if((k|0)<=(c|0)){break _}$:{if(!k){j=0;break $}J[8369]=J[8369]+1;j=ia[J[6782]](P(k,24),16)|0;c=J[d+100>>2]}aa:{if((c|0)<=0){break aa}e=0;if((c|0)!=1){o=c&-2;r=0;while(1){f=P(e,24);i=f+j|0;q=f+J[d+108>>2]|0;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=P(e|1,24);i=f+j|0;q=f+J[d+108>>2]|0;f=J[q+4>>2];J[i>>2]=J[q>>2];J[i+4>>2]=f;f=J[q+12>>2];J[i+8>>2]=J[q+8>>2];J[i+12>>2]=f;f=J[q+20>>2];J[i+16>>2]=J[q+16>>2];J[i+20>>2]=f;e=e+2|0;r=r+2|0;if((o|0)!=(r|0)){continue}break}}if(!(c&1)){break aa}c=P(e,24);e=c+j|0;f=c+J[d+108>>2]|0;c=J[f+4>>2];J[e>>2]=J[f>>2];J[e+4>>2]=c;c=J[f+20>>2];J[e+16>>2]=J[f+16>>2];J[e+20>>2]=c;c=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=c}c=J[d+108>>2];if(!(c?!c|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[d+108>>2]=j;H[d+112|0]=1;J[d+104>>2]=k;c=J[d+100>>2]}e=J[d+108>>2]+P(c,24)|0;c=J[h+4>>2];J[e>>2]=J[h>>2];J[e+4>>2]=c;c=J[h+20>>2];J[e+16>>2]=J[h+16>>2];J[e+20>>2]=c;c=J[h+12>>2];J[e+8>>2]=J[h+8>>2];J[e+12>>2]=c;c=J[d+100>>2]+1|0;J[d+100>>2]=c;s=s+1|0;if((s|0)<J[t+4>>2]){continue}break}break W}J[8369]=J[8369]+1;j=ia[J[6782]](P(r,24),16)|0;c=J[d+100>>2]}ba:{if((c|0)<=0){break ba}e=0;if((c|0)!=1){o=c&-2;while(1){f=P(e,24);i=f+j|0;k=f+J[d+108>>2]|0;f=J[k+4>>2];J[i>>2]=J[k>>2];J[i+4>>2]=f;f=J[k+20>>2];J[i+16>>2]=J[k+16>>2];J[i+20>>2]=f;f=J[k+12>>2];J[i+8>>2]=J[k+8>>2];J[i+12>>2]=f;f=P(e|1,24);i=f+j|0;k=f+J[d+108>>2]|0;f=J[k+4>>2];J[i>>2]=J[k>>2];J[i+4>>2]=f;f=J[k+12>>2];J[i+8>>2]=J[k+8>>2];J[i+12>>2]=f;f=J[k+20>>2];J[i+16>>2]=J[k+16>>2];J[i+20>>2]=f;e=e+2|0;p=p+2|0;if((o|0)!=(p|0)){continue}break}}if(!(c&1)){break ba}c=P(e,24);e=c+j|0;f=c+J[d+108>>2]|0;c=J[f+4>>2];J[e>>2]=J[f>>2];J[e+4>>2]=c;c=J[f+20>>2];J[e+16>>2]=J[f+16>>2];J[e+20>>2]=c;c=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=c}c=J[d+108>>2];if(!(c?!c|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[d+108>>2]=j;H[d+112|0]=1;J[d+104>>2]=r;c=J[d+100>>2]}e=J[d+108>>2]+P(c,24)|0;c=J[h+4>>2];J[e>>2]=J[h>>2];J[e+4>>2]=c;c=J[h+20>>2];J[e+16>>2]=J[h+16>>2];J[e+20>>2]=c;c=J[h+12>>2];J[e+8>>2]=J[h+8>>2];J[e+12>>2]=c;c=J[d+100>>2]+1|0;J[d+100>>2]=c;h=J[t+12>>2];ca:{if(J[d+104>>2]!=(c|0)){break ca}r=c?c<<1:1;if((r|0)<=(c|0)){break ca}da:{if(!r){j=0;break da}J[8369]=J[8369]+1;j=ia[J[6782]](P(r,24),16)|0;c=J[d+100>>2]}ea:{if((c|0)<=0){break ea}e=0;if((c|0)!=1){o=c&-2;p=0;while(1){f=P(e,24);i=f+j|0;k=f+J[d+108>>2]|0;f=J[k+4>>2];J[i>>2]=J[k>>2];J[i+4>>2]=f;f=J[k+20>>2];J[i+16>>2]=J[k+16>>2];J[i+20>>2]=f;f=J[k+12>>2];J[i+8>>2]=J[k+8>>2];J[i+12>>2]=f;f=P(e|1,24);i=f+j|0;k=f+J[d+108>>2]|0;f=J[k+4>>2];J[i>>2]=J[k>>2];J[i+4>>2]=f;f=J[k+12>>2];J[i+8>>2]=J[k+8>>2];J[i+12>>2]=f;f=J[k+20>>2];J[i+16>>2]=J[k+16>>2];J[i+20>>2]=f;e=e+2|0;p=p+2|0;if((o|0)!=(p|0)){continue}break}}if(!(c&1)){break ea}c=P(e,24);e=c+j|0;f=c+J[d+108>>2]|0;c=J[f+4>>2];J[e>>2]=J[f>>2];J[e+4>>2]=c;c=J[f+20>>2];J[e+16>>2]=J[f+16>>2];J[e+20>>2]=c;c=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=c}c=J[d+108>>2];if(!(c?!c|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[d+108>>2]=j;H[d+112|0]=1;J[d+104>>2]=r;c=J[d+100>>2]}e=J[d+108>>2]+P(c,24)|0;c=J[h+28>>2];J[e>>2]=J[h+24>>2];J[e+4>>2]=c;c=J[h+44>>2];J[e+16>>2]=J[h+40>>2];J[e+20>>2]=c;c=J[h+36>>2];J[e+8>>2]=J[h+32>>2];J[e+12>>2]=c;h=J[d+100>>2];c=h+1|0;J[d+100>>2]=c;p=2;e=J[t+4>>2];if((e|0)==2|(h|0)<=0){break W}while(1){if((c|0)>=2){h=J[t+12>>2]+P(p,24)|0;G=N[h+8>>2];T=N[h+4>>2];U=N[h>>2];I=N[d+8>>2];C=N[d+4>>2];B=N[d>>2];j=J[d+108>>2];e=c;fa:{while(1){c=P(e,24)+j|0;f=c-48|0;v=N[f>>2];c=c-24|0;z=Q(v-N[c>>2]);n=N[f+4>>2];E=Q(n-T);w=Q(v-U);n=Q(n-N[c+4>>2]);W=Q(Q(Q(z*E)-Q(w*n))*I);_=n;n=N[f+8>>2];v=Q(n-G);n=Q(n-N[c+8>>2]);if(!(Q(W+Q(Q(Q(Q(_*v)-Q(E*n))*B)+Q(C*Q(Q(n*w)-Q(v*z)))))>Q(0))){c=e-1|0;J[d+100>>2]=c;f=(e|0)<3;e=c;if(!f){continue}break fa}break}ga:{if(J[d+104>>2]!=(e|0)){break ga}o=e<<1;if((o|0)<=(e|0)){break ga}J[8369]=J[8369]+1;j=ia[J[6782]](P(e,48),16)|0;r=J[d+100>>2];ha:{if((r|0)<=0){break ha}e=0;if((r|0)!=1){i=r&-2;s=0;while(1){c=P(e,24);f=c+j|0;k=c+J[d+108>>2]|0;c=J[k+4>>2];J[f>>2]=J[k>>2];J[f+4>>2]=c;c=J[k+20>>2];J[f+16>>2]=J[k+16>>2];J[f+20>>2]=c;c=J[k+12>>2];J[f+8>>2]=J[k+8>>2];J[f+12>>2]=c;c=P(e|1,24);f=c+j|0;k=c+J[d+108>>2]|0;c=J[k+4>>2];J[f>>2]=J[k>>2];J[f+4>>2]=c;c=J[k+12>>2];J[f+8>>2]=J[k+8>>2];J[f+12>>2]=c;c=J[k+20>>2];J[f+16>>2]=J[k+16>>2];J[f+20>>2]=c;e=e+2|0;s=s+2|0;if((i|0)!=(s|0)){continue}break}}if(!(r&1)){break ha}c=P(e,24);e=c+j|0;f=c+J[d+108>>2]|0;c=J[f+4>>2];J[e>>2]=J[f>>2];J[e+4>>2]=c;c=J[f+20>>2];J[e+16>>2]=J[f+16>>2];J[e+20>>2]=c;c=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=c}c=J[d+108>>2];if(!(c?!c|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[d+108>>2]=j;H[d+112|0]=1;J[d+104>>2]=o;e=J[d+100>>2]}c=J[h+4>>2];e=P(e,24)+j|0;J[e>>2]=J[h>>2];J[e+4>>2]=c;c=J[h+20>>2];J[e+16>>2]=J[h+16>>2];J[e+20>>2]=c;c=J[h+12>>2];J[e+8>>2]=J[h+8>>2];J[e+12>>2]=c;c=J[d+100>>2]+1|0;J[d+100>>2]=c}e=J[t+4>>2]}p=p+1|0;if((p|0)!=(e|0)){continue}break}}ga=y+32|0;j=0;F=0;h=0;ia:{if(J[d+100>>2]<=0){A=J[d+20>>2];break ia}while(1){k=P(h,24);r=k+J[d+108>>2]|0;ja:{if((j|0)!=(F|0)){break ja}f=j?j<<1:1;if((f|0)<=(j|0)){break ja}if(f){J[8369]=J[8369]+1;e=ia[J[6782]](f<<2,16)|0}else{e=0}ka:{la:{if((j|0)>0){p=0;c=0;if(j-1>>>0>=3){o=j&-4;s=0;while(1){q=c<<2;J[q+e>>2]=J[g+q>>2];i=q|4;J[i+e>>2]=J[g+i>>2];i=q|8;J[i+e>>2]=J[g+i>>2];i=q|12;J[i+e>>2]=J[g+i>>2];c=c+4|0;s=s+4|0;if((o|0)!=(s|0)){continue}break}}i=j&3;if(!i){break la}while(1){j=c<<2;J[j+e>>2]=J[g+j>>2];c=c+1|0;p=p+1|0;if((i|0)!=(p|0)){continue}break}break la}if(!g){break ka}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}g=e;j=f}J[(F<<2)+g>>2]=J[r+20>>2];A=J[d+20>>2];ma:{if((A|0)<=0){break ma}i=J[(k+J[d+108>>2]|0)+20>>2];c=0;f=J[d+28>>2];while(1){e=f+P(c,24)|0;if((i|0)!=J[e+20>>2]){c=c+1|0;if((A|0)!=(c|0)){continue}break ma}break}J[e+20>>2]=-1}F=F+1|0;h=h+1|0;if((h|0)<J[d+100>>2]){continue}break}}na:{if((A|0)>0){h=0;o=J[d+28>>2];while(1){r=J[(o+P(h,24)|0)+20>>2];oa:{if(!u|(r|0)==-1){break oa}e=0;if((x|0)>0){while(1){c=0;pa:{while(1){if(J[(c<<2)+b>>2]==(e|0)){break pa}c=c+1|0;if((x|0)!=(c|0)){continue}break}c=P(e,36)+M|0;i=J[c+4>>2];if((i|0)<=0){break pa}j=J[c+12>>2];c=0;while(1){s=1;if((r|0)==J[j+(c<<2)>>2]){break na}c=c+1|0;if((i|0)!=(c|0)){continue}break}}e=e+1|0;if((u|0)!=(e|0)){continue}break oa}}while(1){c=P(e,36)+M|0;i=J[c+4>>2];if((i|0)>0){j=J[c+12>>2];c=0;while(1){s=1;if((r|0)==J[j+(c<<2)>>2]){break na}c=c+1|0;if((i|0)!=(c|0)){continue}break}}e=e+1|0;if((u|0)!=(e|0)){continue}break}}h=h+1|0;if((A|0)!=(h|0)){continue}break}}r=J[a+52>>2];c=J[r+28>>2];if((c|0)==J[r+32>>2]){zh(r+24|0,c?c<<1:1);c=J[r+28>>2]}t=J[r+36>>2]+P(c,36)|0;J[t+12>>2]=0;H[t+16|0]=1;J[t+4>>2]=0;J[t+8>>2]=0;qa:{if((F|0)<=0){J[t+4>>2]=F;break qa}J[8369]=J[8369]+1;f=F<<2;k=ia[J[6782]](f,16)|0;q=J[t+12>>2];i=J[t+4>>2];ra:{sa:{if((i|0)>0){s=0;c=0;if(i-1>>>0>=3){h=i&-4;j=0;while(1){o=c<<2;J[o+k>>2]=J[o+q>>2];e=o|4;J[e+k>>2]=J[e+q>>2];e=o|8;J[e+k>>2]=J[e+q>>2];e=o|12;J[e+k>>2]=J[e+q>>2];c=c+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}h=i&3;if(!h){break sa}while(1){e=c<<2;J[e+k>>2]=J[e+q>>2];c=c+1|0;s=s+1|0;if((h|0)!=(s|0)){continue}break}break sa}if(!q){break ra}}if(!K[t+16|0]){break ra}if(q){J[8370]=J[8370]+1;ia[J[6783]](q)}}H[t+16|0]=1;J[t+12>>2]=k;J[t+8>>2]=F;p=0;j=qa(k,0,f);J[t+4>>2]=F;c=0;if(F-1>>>0>=3){h=F&-4;s=0;while(1){f=c<<2;J[f+j>>2]=J[f+g>>2];e=f|4;J[e+j>>2]=J[e+g>>2];e=f|8;J[e+j>>2]=J[e+g>>2];e=f|12;J[e+j>>2]=J[e+g>>2];c=c+4|0;s=s+4|0;if((h|0)!=(s|0)){continue}break}}h=F&3;if(!h){break qa}while(1){e=c<<2;J[e+j>>2]=J[e+g>>2];c=c+1|0;p=p+1|0;if((h|0)!=(p|0)){continue}break}}e=K[d+79|0]|K[d+80|0]<<8|(K[d+81|0]<<16|K[d+82|0]<<24);c=K[d+75|0]|K[d+76|0]<<8|(K[d+77|0]<<16|K[d+78|0]<<24);H[t+20|0]=c;H[t+21|0]=c>>>8;H[t+22|0]=c>>>16;H[t+23|0]=c>>>24;H[t+24|0]=e;H[t+25|0]=e>>>8;H[t+26|0]=e>>>16;H[t+27|0]=e>>>24;e=K[d+87|0]|K[d+88|0]<<8|(K[d+89|0]<<16|K[d+90|0]<<24);c=K[d+83|0]|K[d+84|0]<<8|(K[d+85|0]<<16|K[d+86|0]<<24);H[t+28|0]=c;H[t+29|0]=c>>>8;H[t+30|0]=c>>>16;H[t+31|0]=c>>>24;H[t+32|0]=e;H[t+33|0]=e>>>8;H[t+34|0]=e>>>16;H[t+35|0]=e>>>24;J[r+28>>2]=J[r+28>>2]+1;s=0}c=s;e=J[d+108>>2];if(!(e?!e|!K[d+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}g=J[d+28>>2];if(!(g?!g|!K[d+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](g)}if(!(c&(x|0)>0)){break L}}A=0;while(1){j=0;g=P(J[(A<<2)+b>>2],36)+M|0;S=J[g+4>>2];ta:{if((S|0)<=0){break ta}p=0;J[8369]=J[8369]+1;c=S<<2;j=ia[J[6782]](c,16)|0;o=qa(j,0,c);i=J[g+12>>2];c=0;if(S-1>>>0>=3){h=S&-4;s=0;while(1){f=c<<2;J[f+o>>2]=J[f+i>>2];e=f|4;J[e+o>>2]=J[e+i>>2];e=f|8;J[e+o>>2]=J[e+i>>2];e=f|12;J[e+o>>2]=J[e+i>>2];c=c+4|0;s=s+4|0;if((h|0)!=(s|0)){continue}break}}h=S&3;if(!h){break ta}while(1){e=c<<2;J[e+o>>2]=J[e+i>>2];c=c+1|0;p=p+1|0;if((h|0)!=(p|0)){continue}break}}e=K[g+24|0]|K[g+25|0]<<8|(K[g+26|0]<<16|K[g+27|0]<<24);c=K[g+20|0]|K[g+21|0]<<8|(K[g+22|0]<<16|K[g+23|0]<<24);H[d+19|0]=c;H[d+20|0]=c>>>8;H[d+21|0]=c>>>16;H[d+22|0]=c>>>24;H[d+23|0]=e;H[d+24|0]=e>>>8;H[d+25|0]=e>>>16;H[d+26|0]=e>>>24;e=K[g+32|0]|K[g+33|0]<<8|(K[g+34|0]<<16|K[g+35|0]<<24);c=K[g+28|0]|K[g+29|0]<<8|(K[g+30|0]<<16|K[g+31|0]<<24);H[d+27|0]=c;H[d+28|0]=c>>>8;H[d+29|0]=c>>>16;H[d+30|0]=c>>>24;H[d+31|0]=e;H[d+32|0]=e>>>8;H[d+33|0]=e>>>16;H[d+34|0]=e>>>24;O=J[a+52>>2];e=J[O+28>>2];ua:{if((e|0)!=J[O+32>>2]){break ua}k=e?e<<1:1;if((k|0)<=(e|0)){break ua}va:{if(!k){r=0;break va}J[8369]=J[8369]+1;r=ia[J[6782]](P(k,36),16)|0;e=J[O+28>>2]}wa:{if((e|0)<=0){break wa}F=0;while(1){g=J[O+36>>2];c=P(F,36);L=c+r|0;J[L+12>>2]=0;H[L+16|0]=1;J[L+4>>2]=0;J[L+8>>2]=0;g=c+g|0;y=J[g+4>>2];xa:{if((y|0)<=0){J[L+4>>2]=y;break xa}J[8369]=J[8369]+1;i=y<<2;t=ia[J[6782]](i,16)|0;V=J[L+12>>2];o=J[L+4>>2];ya:{za:{if((o|0)>0){p=0;c=0;if(o-1>>>0>=3){f=o&-4;s=0;while(1){q=c<<2;J[q+t>>2]=J[q+V>>2];h=q|4;J[h+t>>2]=J[h+V>>2];h=q|8;J[h+t>>2]=J[h+V>>2];h=q|12;J[h+t>>2]=J[h+V>>2];c=c+4|0;s=s+4|0;if((f|0)!=(s|0)){continue}break}}f=o&3;if(!f){break za}while(1){h=c<<2;J[h+t>>2]=J[h+V>>2];c=c+1|0;p=p+1|0;if((f|0)!=(p|0)){continue}break}break za}if(!V){break ya}}if(!K[L+16|0]){break ya}if(V){J[8370]=J[8370]+1;ia[J[6783]](V)}}H[L+16|0]=1;J[L+12>>2]=t;J[L+8>>2]=y;p=0;q=qa(t,0,i);J[L+4>>2]=y;o=J[g+12>>2];c=0;if(y-1>>>0>=3){f=y&-4;s=0;while(1){i=c<<2;J[i+q>>2]=J[i+o>>2];h=i|4;J[h+q>>2]=J[h+o>>2];h=i|8;J[h+q>>2]=J[h+o>>2];h=i|12;J[h+q>>2]=J[h+o>>2];c=c+4|0;s=s+4|0;if((f|0)!=(s|0)){continue}break}}f=y&3;if(!f){break xa}while(1){h=c<<2;J[h+q>>2]=J[h+o>>2];c=c+1|0;p=p+1|0;if((f|0)!=(p|0)){continue}break}}c=J[g+24>>2];J[L+20>>2]=J[g+20>>2];J[L+24>>2]=c;c=J[g+32>>2];J[L+28>>2]=J[g+28>>2];J[L+32>>2]=c;F=F+1|0;if((F|0)!=(e|0)){continue}break}g=0;c=J[O+28>>2];if((c|0)<=0){break wa}while(1){h=J[O+36>>2]+P(g,36)|0;e=J[h+12>>2];if(!(e?!e|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}H[h+16|0]=1;J[h+12>>2]=0;J[h+4>>2]=0;J[h+8>>2]=0;g=g+1|0;if((c|0)!=(g|0)){continue}break}}c=J[O+36>>2];if(!(c?!c|!K[O+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[O+36>>2]=r;H[O+40|0]=1;J[O+32>>2]=k;e=J[O+28>>2]}k=J[O+36>>2]+P(e,36)|0;J[k+12>>2]=0;H[k+16|0]=1;J[k+4>>2]=0;J[k+8>>2]=0;Aa:{if((S|0)<=0){J[k+4>>2]=S;break Aa}J[8369]=J[8369]+1;h=S<<2;o=ia[J[6782]](h,16)|0;r=J[k+12>>2];f=J[k+4>>2];Ba:{Ca:{if((f|0)>0){p=0;c=0;if(f-1>>>0>=3){e=f&-4;s=0;while(1){i=c<<2;J[i+o>>2]=J[i+r>>2];g=i|4;J[g+o>>2]=J[g+r>>2];g=i|8;J[g+o>>2]=J[g+r>>2];g=i|12;J[g+o>>2]=J[g+r>>2];c=c+4|0;s=s+4|0;if((e|0)!=(s|0)){continue}break}}e=f&3;if(!e){break Ca}while(1){g=c<<2;J[g+o>>2]=J[g+r>>2];c=c+1|0;p=p+1|0;if((e|0)!=(p|0)){continue}break}break Ca}if(!r){break Ba}}if(!K[k+16|0]){break Ba}if(r){J[8370]=J[8370]+1;ia[J[6783]](r)}}H[k+16|0]=1;J[k+12>>2]=o;J[k+8>>2]=S;e=0;i=qa(o,0,h);J[k+4>>2]=S;c=0;if(S-1>>>0>=3){h=S&-4;p=0;while(1){f=c<<2;J[f+i>>2]=J[f+j>>2];g=f|4;J[g+i>>2]=J[g+j>>2];g=f|8;J[g+i>>2]=J[g+j>>2];g=f|12;J[g+i>>2]=J[g+j>>2];c=c+4|0;p=p+4|0;if((h|0)!=(p|0)){continue}break}}h=S&3;if(!h){break Aa}while(1){g=c<<2;J[g+i>>2]=J[g+j>>2];c=c+1|0;e=e+1|0;if((h|0)!=(e|0)){continue}break}}g=K[d+23|0]|K[d+24|0]<<8|(K[d+25|0]<<16|K[d+26|0]<<24);c=K[d+19|0]|K[d+20|0]<<8|(K[d+21|0]<<16|K[d+22|0]<<24);H[k+20|0]=c;H[k+21|0]=c>>>8;H[k+22|0]=c>>>16;H[k+23|0]=c>>>24;H[k+24|0]=g;H[k+25|0]=g>>>8;H[k+26|0]=g>>>16;H[k+27|0]=g>>>24;g=K[d+31|0]|K[d+32|0]<<8|(K[d+33|0]<<16|K[d+34|0]<<24);c=K[d+27|0]|K[d+28|0]<<8|(K[d+29|0]<<16|K[d+30|0]<<24);H[k+28|0]=c;H[k+29|0]=c>>>8;H[k+30|0]=c>>>16;H[k+31|0]=c>>>24;H[k+32|0]=g;H[k+33|0]=g>>>8;H[k+34|0]=g>>>16;H[k+35|0]=g>>>24;J[O+28>>2]=J[O+28>>2]+1;if(j){J[8370]=J[8370]+1;ia[J[6783]](j)}A=A+1|0;if((x|0)!=(A|0)){continue}break}}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(l){continue}break}Ul(J[a+52>>2]);if(m){J[8370]=J[8370]+1;ia[J[6783]](m)}if(!u){break z}g=0;while(1){b=P(g,36)+M|0;a=J[b+12>>2];if(!(a?!a|!K[b+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[b+16|0]=1;J[b+12>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;g=g+1|0;if((u|0)!=(g|0)){continue}break}break y}Ul(J[a+52>>2])}if(!M){break x}}if(M){J[8370]=J[8370]+1;ia[J[6783]](M)}}if($){J[8370]=J[8370]+1;ia[J[6783]]($)}a=J[d+172>>2];if(!(a?!a|!K[d+176|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+172>>2]=0;H[d+176|0]=1;J[d+164>>2]=0;J[d+168>>2]=0;a=J[d+152>>2];if(!(a?!a|!K[d+156|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+152>>2]=0;H[d+156|0]=1;J[d+144>>2]=0;J[d+148>>2]=0;a=J[d+132>>2];if(!(a?!a|!K[d+136|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}a=J[d+196>>2];if(!(a?!a|!K[d+200|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=d+208|0;return 1}function mk(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=0,y=Q(0),z=0,A=0,B=Q(0),C=0,D=0,E=Q(0),F=Q(0),G=Q(0),L=Q(0);A=ga-16|0;ga=A;d=J[a+1112>>2];if((d|0)>0){while(1){ng(a,0);d=J[a+1112>>2];if((d|0)>0){continue}break}}e=J[a+712>>2];f=(b|0)>(e|0)?e:b;a:{if((f|0)<=(d|0)){break a}if(J[a+1116>>2]<(f|0)){b:{if(!f){break b}J[8369]=J[8369]+1;g=ia[J[6782]](f<<2,16)|0;j=J[a+1112>>2];if((j|0)<=0){break b}b=0;if(j-1>>>0>=3){i=j&-4;while(1){e=b<<2;J[e+g>>2]=J[e+J[a+1120>>2]>>2];m=e|4;J[m+g>>2]=J[m+J[a+1120>>2]>>2];m=e|8;J[m+g>>2]=J[m+J[a+1120>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[a+1120>>2]>>2];b=b+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}e=j&3;if(!e){break b}while(1){j=b<<2;J[j+g>>2]=J[j+J[a+1120>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[a+1120>>2];if(!(b?!b|!K[a+1124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+1120>>2]=g;H[a+1124|0]=1;J[a+1116>>2]=f}e=(d^-1)+f|0;j=f-d&3;if(j){b=0;while(1){J[J[a+1120>>2]+(d<<2)>>2]=0;d=d+1|0;b=b+1|0;if((j|0)!=(b|0)){continue}break}}if(e>>>0<3){break a}while(1){b=d<<2;J[b+J[a+1120>>2]>>2]=0;J[(b+J[a+1120>>2]|0)+4>>2]=0;J[(b+J[a+1120>>2]|0)+8>>2]=0;J[(b+J[a+1120>>2]|0)+12>>2]=0;d=d+4|0;if((f|0)!=(d|0)){continue}break}}J[a+1112>>2]=f;c:{d:{e:{f:{if((f|0)<=0){break f}b=0;while(1){J[8369]=J[8369]+1;e=ia[J[6782]](384,16)|0;H[e+36|0]=1;J[e+4>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;H[e+16|0]=1;J[e+32>>2]=0;H[e+56|0]=1;J[e+24>>2]=0;J[e+28>>2]=0;J[e+52>>2]=0;J[e+348>>2]=0;J[e+352>>2]=0;J[e+44>>2]=0;J[e+48>>2]=0;H[e+376|0]=0;J[e+368>>2]=1120403456;J[e+372>>2]=1008981770;J[e+356>>2]=0;J[e+360>>2]=0;J[e+364>>2]=0;f=b<<2;J[f+J[a+1120>>2]>>2]=e;H[J[f+J[a+1120>>2]>>2]+377|0]=1;b=b+1|0;f=J[a+1112>>2];if((b|0)<(f|0)){continue}break}if((f|0)<=0){break f}e=0;b=J[a+712>>2];g:{h:{if((b|0)<=0){q=Q(Q(Q(1)/Q(b|0))*Q(0));p=q;n=p;break h}d=f;while(1){m=J[a+720>>2]+P(e,104)|0;s=N[m+8>>2];t=N[m+16>>2];u=N[m+12>>2];d=J[J[a+1120>>2]+((P(e,29873)|0)%(d|0)<<2)>>2];k=J[d+24>>2];i:{if((k|0)!=J[d+28>>2]){break i}l=k?k<<1:1;if((l|0)<=(k|0)){break i}j:{if(!l){g=0;break j}J[8369]=J[8369]+1;g=ia[J[6782]](l<<2,16)|0;k=J[d+24>>2]}k:{if((k|0)<=0){break k}h=0;b=0;if(k-1>>>0>=3){r=k&-4;i=0;while(1){j=b<<2;J[j+g>>2]=J[j+J[d+32>>2]>>2];o=j|4;J[o+g>>2]=J[o+J[d+32>>2]>>2];o=j|8;J[o+g>>2]=J[o+J[d+32>>2]>>2];j=j|12;J[j+g>>2]=J[j+J[d+32>>2]>>2];b=b+4|0;i=i+4|0;if((r|0)!=(i|0)){continue}break}}j=k&3;if(!j){break k}while(1){i=b<<2;J[i+g>>2]=J[i+J[d+32>>2]>>2];b=b+1|0;h=h+1|0;if((j|0)!=(h|0)){continue}break}}b=J[d+32>>2];if(!(!b|!K[d+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}k=J[d+24>>2]}J[d+32>>2]=g;H[d+36|0]=1;J[d+28>>2]=l;b=J[a+712>>2]}n=Q(n+s);q=Q(q+t);p=Q(p+u);J[J[d+32>>2]+(k<<2)>>2]=m;J[d+24>>2]=k+1;e=e+1|0;if((e|0)<(b|0)){d=J[a+1112>>2];continue}break}k=0;if((f|0)<0){break g}s=Q(Q(1)/Q(b|0));q=Q(q*s);p=Q(p*s);n=Q(n*s)}b=0;J[8369]=J[8369]+1;k=ia[J[6782]](f<<4,16)|0;if((f|0)!=1){d=f&-2;g=0;while(1){j=b<<4;e=j+k|0;J[e+12>>2]=0;N[e+8>>2]=q;N[e+4>>2]=p;N[e>>2]=n;e=(j|16)+k|0;J[e+12>>2]=0;N[e+8>>2]=q;N[e+4>>2]=p;N[e>>2]=n;b=b+2|0;g=g+2|0;if((d|0)!=(g|0)){continue}break}}if(!(f&1)){break g}b=(b<<4)+k|0;J[b+12>>2]=0;N[b+8>>2]=q;N[b+4>>2]=p;N[b>>2]=n}j=0;while(1){b=j;j=b+1|0;s=Q(Q(2)-Q(T(Q(Q(b|0)*Q(.0625)),Q(1))));o=0;e=0;while(1){l=e<<2;b=J[l+J[a+1120>>2]>>2];g=J[b+24>>2];l:{if((g|0)<=0){q=Q(0);p=Q(0);n=Q(0);break l}r=g&1;b=J[b+32>>2];m:{if((g|0)==1){n=Q(0);d=0;p=Q(0);q=Q(0);break m}x=g&-2;n=Q(0);d=0;p=Q(0);q=Q(0);h=0;while(1){m=d<<2;i=J[m+b>>2];m=J[b+(m|4)>>2];q=Q(Q(q+N[i+8>>2])+N[m+8>>2]);n=Q(Q(n+N[i+16>>2])+N[m+16>>2]);p=Q(Q(p+N[i+12>>2])+N[m+12>>2]);d=d+2|0;h=h+2|0;if((x|0)!=(h|0)){continue}break}}if(!r){break l}b=J[b+(d<<2)>>2];q=Q(q+N[b+8>>2]);n=Q(n+N[b+16>>2]);p=Q(p+N[b+12>>2])}if(g){b=(e<<4)+k|0;J[b+12>>2]=0;t=N[b+8>>2];u=n;n=Q(Q(1)/Q(g|0));y=Q(t+Q(s*Q(Q(u*n)-t)));N[b+8>>2]=y;u=N[b+4>>2];v=Q(u+Q(s*Q(Q(p*n)-u)));N[b+4>>2]=v;p=N[b>>2];n=Q(p+Q(s*Q(Q(q*n)-p)));N[b>>2]=n;q=Q(y-t);n=Q(n-p);p=Q(n*n);n=Q(v-u);i=Q(Q(q*q)+Q(p+Q(n*n)))>Q(1.1920928955078125e-7);h=J[l+J[a+1120>>2]>>2];b=J[h+24>>2];n:{if((b|0)>=0){break n}if(J[h+28>>2]<0){d=J[h+32>>2];if(!(d?!d|!K[h+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}H[h+36|0]=1;J[h+28>>2]=0;J[h+32>>2]=0}g=0;d=b;m=0-d&3;if(m){while(1){J[J[h+32>>2]+(d<<2)>>2]=0;d=d+1|0;g=g+1|0;if((m|0)!=(g|0)){continue}break}}if(b>>>0>4294967292){break n}while(1){b=d<<2;J[b+J[h+32>>2]>>2]=0;J[(b+J[h+32>>2]|0)+4>>2]=0;J[(b+J[h+32>>2]|0)+8>>2]=0;J[(b+J[h+32>>2]|0)+12>>2]=0;d=d+4|0;if(d){continue}break}}J[h+24>>2]=0;o=i|o}e=e+1|0;if((f|0)!=(e|0)){continue}break}l=0;e=J[a+712>>2];if((e|0)>0){while(1){r=J[a+720>>2]+P(l,104)|0;g=0;if((f|0)>=2){n=N[r+8>>2];p=N[r+12>>2];s=N[r+16>>2];q=Q(Q(Q(R(Q(N[k>>2]-n)))+Q(R(Q(N[k+4>>2]-p))))+Q(R(Q(N[k+8>>2]-s))));d=1;while(1){b=(d<<4)+k|0;t=Q(Q(Q(R(Q(N[b>>2]-n)))+Q(R(Q(N[b+4>>2]-p))))+Q(R(Q(N[b+8>>2]-s))));b=t<q;q=b?t:q;g=b?d:g;d=d+1|0;if((f|0)!=(d|0)){continue}break}}d=J[J[a+1120>>2]+(g<<2)>>2];i=J[d+24>>2];o:{if((i|0)!=J[d+28>>2]){break o}x=i?i<<1:1;if((x|0)<=(i|0)){break o}p:{if(!x){g=0;break p}J[8369]=J[8369]+1;g=ia[J[6782]](x<<2,16)|0;i=J[d+24>>2]}q:{if((i|0)<=0){break q}h=0;b=0;if(i-1>>>0>=3){z=i&-4;m=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[d+32>>2]>>2];C=e|4;J[C+g>>2]=J[C+J[d+32>>2]>>2];C=e|8;J[C+g>>2]=J[C+J[d+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[d+32>>2]>>2];b=b+4|0;m=m+4|0;if((z|0)!=(m|0)){continue}break}}e=i&3;if(!e){break q}while(1){m=b<<2;J[m+g>>2]=J[m+J[d+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[d+32>>2];if(!(!b|!K[d+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}i=J[d+24>>2]}J[d+32>>2]=g;H[d+36|0]=1;J[d+28>>2]=x;e=J[a+712>>2]}J[J[d+32>>2]+(i<<2)>>2]=r;J[d+24>>2]=i+1;l=l+1|0;if((l|0)<(e|0)){continue}break}}if((c|0)>(j|0)&o){continue}break}r:{if((e|0)<=0){m=0;break r}J[8369]=J[8369]+1;b=e<<2;m=ia[J[6782]](b,16)|0;qa(m,255,b)}e=J[a+1112>>2];if((e|0)>0){f=J[a+720>>2];j=J[a+1120>>2];b=0;while(1){c=J[j+(b<<2)>>2];if(J[c+24>>2]>0){e=J[c+32>>2];d=0;while(1){J[((J[e+(d<<2)>>2]-f|0)/104<<2)+m>>2]=b;d=d+1|0;if((d|0)<J[c+24>>2]){continue}break}e=J[a+1112>>2]}b=b+1|0;if((e|0)>(b|0)){continue}break}}if(J[a+752>>2]>0){i=0;while(1){b=J[a+760>>2]+P(i,44)|0;c=J[a+720>>2];d=(J[b+8>>2]-c|0)/104|0;J[A+4>>2]=d;J[A+8>>2]=(J[b+12>>2]-c|0)/104;J[A+12>>2]=(J[b+16>>2]-c|0)/104;e=0;while(1){b=e+1|0;x=(b|0)==3;r=J[(d<<2)+m>>2];c=J[(A+4|0)+((x?0:b)<<2)>>2];s:{if((r|0)==J[(c<<2)+m>>2]){break s}z=J[a+720>>2]+P(c,104)|0;c=J[J[a+1120>>2]+(r<<2)>>2];g=J[c+24>>2];t:{if((g|0)<=0){break t}f=J[c+32>>2];d=0;while(1){if((z|0)!=J[f+(d<<2)>>2]){d=d+1|0;if((g|0)!=(d|0)){continue}break t}break}if((d|0)!=(g|0)){break s}}u:{if(J[c+28>>2]!=(g|0)){break u}o=g?g<<1:1;if((o|0)<=(g|0)){break u}v:{if(!o){h=0;break v}J[8369]=J[8369]+1;h=ia[J[6782]](o<<2,16)|0;g=J[c+24>>2]}w:{if((g|0)<=0){break w}j=0;d=0;if(g-1>>>0>=3){C=g&-4;l=0;while(1){f=d<<2;J[f+h>>2]=J[f+J[c+32>>2]>>2];D=f|4;J[D+h>>2]=J[D+J[c+32>>2]>>2];D=f|8;J[D+h>>2]=J[D+J[c+32>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[c+32>>2]>>2];d=d+4|0;l=l+4|0;if((C|0)!=(l|0)){continue}break}}f=g&3;if(!f){break w}while(1){l=d<<2;J[l+h>>2]=J[l+J[c+32>>2]>>2];d=d+1|0;j=j+1|0;if((f|0)!=(j|0)){continue}break}}f=J[c+32>>2];if(!(!f|!K[c+36|0])){if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}g=J[c+24>>2]}J[c+32>>2]=h;H[c+36|0]=1;J[c+28>>2]=o}J[J[c+32>>2]+(g<<2)>>2]=z;J[c+24>>2]=g+1}c=J[(A+4|0)+((e+2>>>0)%3<<2)>>2];x:{if((r|0)==J[(c<<2)+m>>2]){break x}l=J[a+720>>2]+P(c,104)|0;c=J[J[a+1120>>2]+(r<<2)>>2];g=J[c+24>>2];y:{if((g|0)<=0){break y}e=J[c+32>>2];d=0;while(1){if((l|0)!=J[e+(d<<2)>>2]){d=d+1|0;if((g|0)!=(d|0)){continue}break y}break}if((d|0)!=(g|0)){break x}}z:{if(J[c+28>>2]!=(g|0)){break z}j=g?g<<1:1;if((j|0)<=(g|0)){break z}A:{if(!j){h=0;break A}J[8369]=J[8369]+1;h=ia[J[6782]](j<<2,16)|0;g=J[c+24>>2]}B:{if((g|0)<=0){break B}e=0;d=0;if(g-1>>>0>=3){o=g&-4;r=0;while(1){f=d<<2;J[f+h>>2]=J[f+J[c+32>>2]>>2];z=f|4;J[z+h>>2]=J[z+J[c+32>>2]>>2];z=f|8;J[z+h>>2]=J[z+J[c+32>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[c+32>>2]>>2];d=d+4|0;r=r+4|0;if((o|0)!=(r|0)){continue}break}}f=g&3;if(!f){break B}while(1){r=d<<2;J[r+h>>2]=J[r+J[c+32>>2]>>2];d=d+1|0;e=e+1|0;if((f|0)!=(e|0)){continue}break}}e=J[c+32>>2];if(!(!e|!K[c+36|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}g=J[c+24>>2]}J[c+32>>2]=h;H[c+36|0]=1;J[c+28>>2]=j}J[J[c+32>>2]+(g<<2)>>2]=l;J[c+24>>2]=g+1}if(!x){d=J[(A+4|0)+(b<<2)>>2];e=b;continue}break}i=i+1|0;if((i|0)<J[a+752>>2]){continue}break}e=J[a+1112>>2]}if((e|0)<2){break d}J[8369]=J[8369]+1;d=ia[J[6782]](384,16)|0;I[d+376>>1]=0;J[d+368>>2]=1120403456;J[d+372>>2]=1008981770;J[d+348>>2]=0;J[d+352>>2]=0;J[d+12>>2]=0;H[d+16|0]=1;H[d+36|0]=1;J[d+4>>2]=0;J[d+8>>2]=0;J[d+32>>2]=0;H[d+56|0]=1;J[d+24>>2]=0;J[d+28>>2]=0;J[d+52>>2]=0;J[d+44>>2]=0;J[d+48>>2]=0;J[d+364>>2]=0;J[d+356>>2]=0;J[d+360>>2]=0;e=J[a+712>>2];if((e|0)<=0){break e}J[8369]=J[8369]+1;c=ia[J[6782]](e<<2,16)|0;g=J[d+24>>2];C:{if((g|0)<=0){break C}f=0;b=0;if(g-1>>>0>=3){h=g&-4;i=0;while(1){j=b<<2;J[j+c>>2]=J[j+J[d+32>>2]>>2];l=j|4;J[l+c>>2]=J[l+J[d+32>>2]>>2];l=j|8;J[l+c>>2]=J[l+J[d+32>>2]>>2];j=j|12;J[j+c>>2]=J[j+J[d+32>>2]>>2];b=b+4|0;i=i+4|0;if((h|0)!=(i|0)){continue}break}}j=g&3;if(!j){break C}while(1){g=b<<2;J[g+c>>2]=J[g+J[d+32>>2]>>2];b=b+1|0;f=f+1|0;if((j|0)!=(f|0)){continue}break}}b=J[d+32>>2];if(!(b?!b|!K[d+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[d+32>>2]=c;H[d+36|0]=1;J[d+28>>2]=e;b=J[a+712>>2];if((b|0)<=0){break e}f=J[d+24>>2];j=0;while(1){l=J[a+720>>2]+P(j,104)|0;D:{if((e|0)!=(f|0)){break D}c=e?e<<1:1;if((c|0)<=(e|0)){f=e;break D}E:{if(!c){g=0;break E}J[8369]=J[8369]+1;g=ia[J[6782]](c<<2,16)|0;e=J[d+24>>2]}f=e;F:{if((e|0)<=0){break F}h=0;b=0;if(f-1>>>0>=3){r=f&-4;i=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[d+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[d+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[d+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[d+32>>2]>>2];b=b+4|0;i=i+4|0;if((r|0)!=(i|0)){continue}break}}e=f&3;if(!e){break F}while(1){i=b<<2;J[i+g>>2]=J[i+J[d+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[d+32>>2];if(!(!b|!K[d+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[d+24>>2]}J[d+32>>2]=g;H[d+36|0]=1;J[d+28>>2]=c;b=J[a+712>>2];e=c}J[J[d+32>>2]+(f<<2)>>2]=l;f=f+1|0;J[d+24>>2]=f;j=j+1|0;if((j|0)<(b|0)){continue}break}break e}b=J[a+772>>2];if(b){G:{if((b|0)<=(f|0)){break G}if((b|0)>J[a+1116>>2]){J[8369]=J[8369]+1;c=ia[J[6782]](b<<2,16)|0;j=J[a+1112>>2];H:{if((j|0)<=0){break H}h=0;d=0;if(j-1>>>0>=3){g=j&-4;k=0;while(1){e=d<<2;J[e+c>>2]=J[e+J[a+1120>>2]>>2];i=e|4;J[i+c>>2]=J[i+J[a+1120>>2]>>2];i=e|8;J[i+c>>2]=J[i+J[a+1120>>2]>>2];e=e|12;J[e+c>>2]=J[e+J[a+1120>>2]>>2];d=d+4|0;k=k+4|0;if((g|0)!=(k|0)){continue}break}}e=j&3;if(!e){break H}while(1){j=d<<2;J[j+c>>2]=J[j+J[a+1120>>2]>>2];d=d+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}e=J[a+1120>>2];if(!(e?!e|!K[a+1124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+1120>>2]=c;H[a+1124|0]=1;J[a+1116>>2]=b}c=b+(f^-1)|0;e=b-f&3;if(e){d=0;while(1){J[J[a+1120>>2]+(f<<2)>>2]=0;f=f+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}if(c>>>0<3){break G}while(1){c=f<<2;J[c+J[a+1120>>2]>>2]=0;J[(c+J[a+1120>>2]|0)+4>>2]=0;J[(c+J[a+1120>>2]|0)+8>>2]=0;J[(c+J[a+1120>>2]|0)+12>>2]=0;f=f+4|0;if((b|0)!=(f|0)){continue}break}}J[a+1112>>2]=b;if((b|0)>0){b=0;while(1){J[8369]=J[8369]+1;c=ia[J[6782]](384,16)|0;H[c+36|0]=1;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;H[c+16|0]=1;J[c+32>>2]=0;H[c+56|0]=1;J[c+24>>2]=0;J[c+28>>2]=0;J[c+52>>2]=0;J[c+348>>2]=0;J[c+352>>2]=0;J[c+44>>2]=0;J[c+48>>2]=0;H[c+376|0]=0;J[c+368>>2]=1120403456;J[c+372>>2]=1008981770;J[c+356>>2]=0;J[c+360>>2]=0;J[c+364>>2]=0;e=b<<2;J[e+J[a+1120>>2]>>2]=c;H[J[e+J[a+1120>>2]>>2]+377|0]=1;b=b+1|0;if((b|0)<J[a+1112>>2]){continue}break}}if(J[a+772>>2]<=0){break c}m=0;while(1){d=P(m,104);l=d+J[a+780>>2]|0;j=m<<2;c=J[j+J[a+1120>>2]>>2];f=J[c+24>>2];I:{if((f|0)!=J[c+28>>2]){break I}i=f?f<<1:1;if((i|0)<=(f|0)){break I}J:{if(!i){g=0;break J}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;f=J[c+24>>2]}K:{if((f|0)<=0){break K}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break K}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=i}J[J[c+32>>2]+(f<<2)>>2]=J[l+8>>2];J[c+24>>2]=f+1;l=d+J[a+780>>2]|0;c=J[j+J[a+1120>>2]>>2];f=J[c+24>>2];L:{if((f|0)!=J[c+28>>2]){break L}i=f?f<<1:1;if((i|0)<=(f|0)){break L}M:{if(!i){g=0;break M}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;f=J[c+24>>2]}N:{if((f|0)<=0){break N}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break N}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=i}J[J[c+32>>2]+(f<<2)>>2]=J[l+12>>2];J[c+24>>2]=f+1;l=d+J[a+780>>2]|0;c=J[j+J[a+1120>>2]>>2];f=J[c+24>>2];O:{if((f|0)!=J[c+28>>2]){break O}i=f?f<<1:1;if((i|0)<=(f|0)){break O}P:{if(!i){g=0;break P}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;f=J[c+24>>2]}Q:{if((f|0)<=0){break Q}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break Q}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=i}J[J[c+32>>2]+(f<<2)>>2]=J[l+16>>2];J[c+24>>2]=f+1;i=d+J[a+780>>2]|0;c=J[j+J[a+1120>>2]>>2];f=J[c+24>>2];R:{if((f|0)!=J[c+28>>2]){break R}d=f?f<<1:1;if((d|0)<=(f|0)){break R}S:{if(!d){g=0;break S}J[8369]=J[8369]+1;g=ia[J[6782]](d<<2,16)|0;f=J[c+24>>2]}T:{if((f|0)<=0){break T}h=0;b=0;if(f-1>>>0>=3){j=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];l=e|4;J[l+g>>2]=J[l+J[c+32>>2]>>2];l=e|8;J[l+g>>2]=J[l+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((j|0)!=(k|0)){continue}break}}e=f&3;if(!e){break T}while(1){j=b<<2;J[j+g>>2]=J[j+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=d}J[J[c+32>>2]+(f<<2)>>2]=J[i+20>>2];J[c+24>>2]=f+1;m=m+1|0;if((m|0)<J[a+772>>2]){continue}break}break c}b=J[a+752>>2];U:{if((b|0)<=(f|0)){break U}if((b|0)>J[a+1116>>2]){V:{if(!b){g=0;break V}J[8369]=J[8369]+1;g=ia[J[6782]](b<<2,16)|0;e=J[a+1112>>2];if((e|0)<=0){break V}h=0;d=0;if(e-1>>>0>=3){j=e&-4;k=0;while(1){c=d<<2;J[c+g>>2]=J[c+J[a+1120>>2]>>2];i=c|4;J[i+g>>2]=J[i+J[a+1120>>2]>>2];i=c|8;J[i+g>>2]=J[i+J[a+1120>>2]>>2];c=c|12;J[c+g>>2]=J[c+J[a+1120>>2]>>2];d=d+4|0;k=k+4|0;if((j|0)!=(k|0)){continue}break}}c=e&3;if(!c){break V}while(1){e=d<<2;J[e+g>>2]=J[e+J[a+1120>>2]>>2];d=d+1|0;h=h+1|0;if((c|0)!=(h|0)){continue}break}}c=J[a+1120>>2];if(!(c?!c|!K[a+1124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+1120>>2]=g;H[a+1124|0]=1;J[a+1116>>2]=b}c=b+(f^-1)|0;e=b-f&3;if(e){d=0;while(1){J[J[a+1120>>2]+(f<<2)>>2]=0;f=f+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}if(c>>>0<3){break U}while(1){c=f<<2;J[c+J[a+1120>>2]>>2]=0;J[(c+J[a+1120>>2]|0)+4>>2]=0;J[(c+J[a+1120>>2]|0)+8>>2]=0;J[(c+J[a+1120>>2]|0)+12>>2]=0;f=f+4|0;if((b|0)!=(f|0)){continue}break}}J[a+1112>>2]=b;if((b|0)>0){b=0;while(1){J[8369]=J[8369]+1;c=ia[J[6782]](384,16)|0;H[c+36|0]=1;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;H[c+16|0]=1;J[c+32>>2]=0;H[c+56|0]=1;J[c+24>>2]=0;J[c+28>>2]=0;J[c+52>>2]=0;J[c+348>>2]=0;J[c+352>>2]=0;J[c+44>>2]=0;J[c+48>>2]=0;H[c+376|0]=0;J[c+368>>2]=1120403456;J[c+372>>2]=1008981770;J[c+356>>2]=0;J[c+360>>2]=0;J[c+364>>2]=0;e=b<<2;J[e+J[a+1120>>2]>>2]=c;H[J[e+J[a+1120>>2]>>2]+377|0]=1;b=b+1|0;if((b|0)<J[a+1112>>2]){continue}break}}if(J[a+752>>2]<=0){break c}m=0;while(1){j=P(m,44);l=j+J[a+760>>2]|0;i=m<<2;c=J[i+J[a+1120>>2]>>2];f=J[c+24>>2];W:{if((f|0)!=J[c+28>>2]){break W}d=f?f<<1:1;if((d|0)<=(f|0)){break W}X:{if(!d){g=0;break X}J[8369]=J[8369]+1;g=ia[J[6782]](d<<2,16)|0;f=J[c+24>>2]}Y:{if((f|0)<=0){break Y}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break Y}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=d}J[J[c+32>>2]+(f<<2)>>2]=J[l+8>>2];J[c+24>>2]=f+1;l=j+J[a+760>>2]|0;c=J[i+J[a+1120>>2]>>2];f=J[c+24>>2];Z:{if((f|0)!=J[c+28>>2]){break Z}d=f?f<<1:1;if((d|0)<=(f|0)){break Z}_:{if(!d){g=0;break _}J[8369]=J[8369]+1;g=ia[J[6782]](d<<2,16)|0;f=J[c+24>>2]}$:{if((f|0)<=0){break $}h=0;b=0;if(f-1>>>0>=3){r=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];o=e|4;J[o+g>>2]=J[o+J[c+32>>2]>>2];o=e|8;J[o+g>>2]=J[o+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}e=f&3;if(!e){break $}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=d}J[J[c+32>>2]+(f<<2)>>2]=J[l+12>>2];J[c+24>>2]=f+1;j=j+J[a+760>>2]|0;c=J[i+J[a+1120>>2]>>2];f=J[c+24>>2];aa:{if((f|0)!=J[c+28>>2]){break aa}d=f?f<<1:1;if((d|0)<=(f|0)){break aa}ba:{if(!d){g=0;break ba}J[8369]=J[8369]+1;g=ia[J[6782]](d<<2,16)|0;f=J[c+24>>2]}ca:{if((f|0)<=0){break ca}h=0;b=0;if(f-1>>>0>=3){i=f&-4;k=0;while(1){e=b<<2;J[e+g>>2]=J[e+J[c+32>>2]>>2];l=e|4;J[l+g>>2]=J[l+J[c+32>>2]>>2];l=e|8;J[l+g>>2]=J[l+J[c+32>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[c+32>>2]>>2];b=b+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}e=f&3;if(!e){break ca}while(1){k=b<<2;J[k+g>>2]=J[k+J[c+32>>2]>>2];b=b+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}b=J[c+32>>2];if(!(!b|!K[c+36|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[c+24>>2]}J[c+32>>2]=g;H[c+36|0]=1;J[c+28>>2]=d}J[J[c+32>>2]+(f<<2)>>2]=J[j+16>>2];J[c+24>>2]=f+1;m=m+1|0;if((m|0)<J[a+752>>2]){continue}break}break c}f=J[a+1112>>2];da:{if((f|0)!=J[a+1116>>2]){break da}e=f?f<<1:1;if((e|0)<=(f|0)){break da}ea:{if(!e){g=0;break ea}J[8369]=J[8369]+1;g=ia[J[6782]](e<<2,16)|0;f=J[a+1112>>2]}fa:{if((f|0)<=0){break fa}h=0;b=0;if(f-1>>>0>=3){j=f&-4;i=0;while(1){c=b<<2;J[c+g>>2]=J[c+J[a+1120>>2]>>2];l=c|4;J[l+g>>2]=J[l+J[a+1120>>2]>>2];l=c|8;J[l+g>>2]=J[l+J[a+1120>>2]>>2];c=c|12;J[c+g>>2]=J[c+J[a+1120>>2]>>2];b=b+4|0;i=i+4|0;if((j|0)!=(i|0)){continue}break}}c=f&3;if(!c){break fa}while(1){j=b<<2;J[j+g>>2]=J[j+J[a+1120>>2]>>2];b=b+1|0;h=h+1|0;if((c|0)!=(h|0)){continue}break}}b=J[a+1120>>2];if(!(!b|!K[a+1124|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}f=J[a+1112>>2]}J[a+1120>>2]=g;H[a+1124|0]=1;J[a+1116>>2]=e}c=f<<2;J[c+J[a+1120>>2]>>2]=d;e=f+1|0;J[a+1112>>2]=e;b=J[a+1120>>2];f=J[b>>2];d=b;b=b+c|0;J[d>>2]=J[b>>2];J[b>>2]=f}if((e|0)>0){d=0;while(1){if(!J[J[J[a+1120>>2]+(d<<2)>>2]+24>>2]){ng(a,d);d=d-1|0;e=J[a+1112>>2]}d=d+1|0;if((e|0)>(d|0)){continue}break}}if(m){J[8370]=J[8370]+1;ia[J[6783]](m)}if(!k){break c}if(k){J[8370]=J[8370]+1;ia[J[6783]](k)}}ga:{if(!J[a+1112>>2]){i=0;break ga}j=0;if(J[a+1112>>2]>0){while(1){d=J[J[a+1120>>2]+(j<<2)>>2];J[d+128>>2]=0;k=J[d+24>>2];f=k;c=J[d+4>>2];if((f|0)>(c|0)){ha:{if((k|0)<=J[d+8>>2]){e=J[d+12>>2];break ha}ia:{if(!k){e=0;b=c;break ia}J[8369]=J[8369]+1;e=ia[J[6782]](k<<2,16)|0;b=J[d+4>>2]}g=J[d+12>>2];f=b;ja:{ka:{if((b|0)>0){h=0;b=0;if(f-1>>>0>=3){l=f&-4;i=0;while(1){m=b<<2;N[m+e>>2]=N[g+m>>2];r=m|4;N[r+e>>2]=N[g+r>>2];r=m|8;N[r+e>>2]=N[g+r>>2];m=m|12;N[m+e>>2]=N[g+m>>2];b=b+4|0;i=i+4|0;if((l|0)!=(i|0)){continue}break}}f=f&3;if(!f){break ka}while(1){i=b<<2;N[i+e>>2]=N[g+i>>2];b=b+1|0;h=h+1|0;if((f|0)!=(h|0)){continue}break}break ka}if(!g){break ja}}if(!K[d+16|0]){break ja}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}J[d+12>>2]=e;H[d+16|0]=1;J[d+8>>2]=k}qa((c<<2)+e|0,0,k-c<<2);f=J[d+24>>2]}J[d+4>>2]=k;la:{ma:{i=(f|0)>0;na:{if(!i){s=Q(Q(1)/N[d+128>>2]);N[d+128>>2]=s;break na}c=J[d+32>>2];e=J[d+12>>2];b=0;while(1){g=b<<2;n=N[J[g+c>>2]+88>>2];oa:{if(n==Q(0)){H[d+376|0]=1;n=Q(0xde0b6b000000000);break oa}n=Q(Q(1)/n)}N[e+g>>2]=n;n=Q(n+N[d+128>>2]);N[d+128>>2]=n;b=b+1|0;if((f|0)!=(b|0)){continue}break}s=Q(Q(1)/n);N[d+128>>2]=s;if((f|0)>0){break ma}}p=Q(0);n=Q(0);q=Q(0);break la}m=f&1;c=J[d+32>>2];g=J[d+12>>2];pa:{if((f|0)==1){q=Q(0);b=0;n=Q(0);p=Q(0);break pa}l=f&-2;q=Q(0);b=0;n=Q(0);p=Q(0);e=0;while(1){h=b<<2;k=J[h+c>>2];t=N[g+h>>2];r=h|4;h=J[r+c>>2];u=N[g+r>>2];p=Q(Q(p+Q(N[k+8>>2]*t))+Q(N[h+8>>2]*u));q=Q(Q(q+Q(t*N[k+16>>2]))+Q(u*N[h+16>>2]));n=Q(Q(n+Q(t*N[k+12>>2]))+Q(u*N[h+12>>2]));b=b+2|0;e=e+2|0;if((l|0)!=(e|0)){continue}break}}if(!m){break la}e=c;c=b<<2;b=J[e+c>>2];t=N[c+g>>2];p=Q(p+Q(N[b+8>>2]*t));q=Q(q+Q(t*N[b+16>>2]));n=Q(n+Q(t*N[b+12>>2]))}J[d+316>>2]=0;J[d+320>>2]=0;J[d+132>>2]=0;J[d+136>>2]=0;J[d+240>>2]=0;E=Q(s*q);N[d+236>>2]=E;F=Q(s*n);N[d+232>>2]=F;G=Q(s*p);N[d+228>>2]=G;J[d+324>>2]=0;J[d+328>>2]=0;J[d+332>>2]=0;J[d+336>>2]=0;J[d+340>>2]=0;J[d+344>>2]=0;J[d+348>>2]=0;J[d+140>>2]=0;J[d+144>>2]=0;J[d+148>>2]=0;J[d+152>>2]=0;J[d+156>>2]=0;J[d+160>>2]=0;J[d+164>>2]=0;J[d+168>>2]=0;J[d+172>>2]=0;J[d+176>>2]=0;qa:{if(!i){t=N[d+152>>2];p=N[d+156>>2];q=N[d+140>>2];s=N[d+136>>2];n=N[d+132>>2];u=Q(0);break qa}p=N[d+156>>2];q=N[d+140>>2];s=N[d+136>>2];t=N[d+152>>2];e=J[d+32>>2];n=N[d+132>>2];g=J[d+12>>2];b=0;u=Q(0);while(1){h=b<<2;c=J[h+e>>2];w=N[c+12>>2];B=Q(N[c+8>>2]-G);y=N[g+h>>2];L=Q(B*Q(-y));v=Q(N[c+16>>2]-E);q=Q(Q(L*v)+q);N[d+140>>2]=q;w=Q(w-F);s=Q(Q(L*w)+s);N[d+136>>2]=s;p=Q(p-Q(Q(w*y)*v));N[d+156>>2]=p;B=Q(B*B);w=Q(w*w);u=Q(Q(y*Q(B+w))+u);N[d+172>>2]=u;v=Q(v*v);t=Q(Q(y*Q(B+v))+t);N[d+152>>2]=t;n=Q(Q(y*Q(w+v))+n);N[d+132>>2]=n;b=b+1|0;if((f|0)!=(b|0)){continue}break}}J[d+176>>2]=0;J[d+60>>2]=1065353216;J[d+160>>2]=0;J[d+144>>2]=0;b=d- -64|0;J[b>>2]=0;J[b+4>>2]=0;J[d+72>>2]=0;J[d+76>>2]=0;J[d+84>>2]=0;J[d+88>>2]=0;J[d+80>>2]=1065353216;J[d+92>>2]=0;J[d+96>>2]=0;B=Q(Q(n*t)-Q(s*s));y=Q(Q(s*p)-Q(t*q));v=Q(Q(t*u)-Q(p*p));w=Q(Q(p*q)-Q(u*s));t=Q(Q(1)/Q(Q(q*y)+Q(Q(n*v)+Q(s*w))));N[d+172>>2]=B*t;p=Q(Q(Q(q*s)-Q(p*n))*t);N[d+168>>2]=p;s=Q(y*t);N[d+164>>2]=s;N[d+156>>2]=p;N[d+152>>2]=Q(Q(n*u)-Q(q*q))*t;n=Q(w*t);N[d+148>>2]=n;N[d+140>>2]=s;N[d+136>>2]=n;N[d+132>>2]=v*t;J[d+100>>2]=1065353216;J[d+104>>2]=0;b=J[d+232>>2];J[d+108>>2]=J[d+228>>2];J[d+112>>2]=b;b=J[d+240>>2];J[d+116>>2]=J[d+236>>2];J[d+120>>2]=b;e=J[d+44>>2];c=J[d+24>>2];if(!((e|0)>=(c|0)|(c|0)<=J[d+48>>2])){ra:{if(!c){f=0;break ra}J[8369]=J[8369]+1;f=ia[J[6782]](c<<4,16)|0;e=J[d+44>>2]}sa:{if((e|0)<=0){break sa}b=0;if((e|0)!=1){m=e&-2;k=0;while(1){i=b<<4;g=i+f|0;h=i+J[d+52>>2]|0;l=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=l;l=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=l;h=i|16;g=h+f|0;h=h+J[d+52>>2]|0;i=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=i;i=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=i;b=b+2|0;k=k+2|0;if((m|0)!=(k|0)){continue}break}}if(!(e&1)){break sa}e=b<<4;b=e+f|0;e=e+J[d+52>>2]|0;g=J[e+4>>2];J[b>>2]=J[e>>2];J[b+4>>2]=g;g=J[e+12>>2];J[b+8>>2]=J[e+8>>2];J[b+12>>2]=g}b=J[d+52>>2];if(!(b?!b|!K[d+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[d+52>>2]=f;H[d+56|0]=1;J[d+48>>2]=c}J[d+44>>2]=c;if((c|0)>0){b=0;while(1){c=J[J[d+32>>2]+(b<<2)>>2];n=N[c+12>>2];q=N[c+16>>2];p=N[c+8>>2];s=N[d+232>>2];t=N[d+236>>2];u=N[d+228>>2];c=J[d+52>>2]+(b<<4)|0;J[c+12>>2]=0;N[c>>2]=p-u;N[c+8>>2]=q-t;N[c+4>>2]=n-s;b=b+1|0;if((b|0)<J[d+44>>2]){continue}break}}j=j+1|0;if((j|0)<J[a+1112>>2]){continue}break}}lk(a);i=J[a+1112>>2];g=P(i,i);f=J[a+1132>>2];if((g|0)>(f|0)){ta:{if((g|0)<=J[a+1136>>2]){b=J[a+1140>>2];break ta}ua:{if(!g){b=0;c=f;break ua}J[8369]=J[8369]+1;b=ia[J[6782]](g,16)|0;c=J[a+1132>>2]}j=J[a+1140>>2];va:{if((c|0)>0){e=0;d=0;if(c-1>>>0>=3){k=c&-4;h=0;while(1){H[b+d|0]=K[d+j|0];i=d|1;H[i+b|0]=K[i+j|0];i=d|2;H[i+b|0]=K[i+j|0];i=d|3;H[i+b|0]=K[i+j|0];d=d+4|0;h=h+4|0;if((k|0)!=(h|0)){continue}break}}c=c&3;if(!c){break va}while(1){H[b+d|0]=K[d+j|0];d=d+1|0;e=e+1|0;if((c|0)!=(e|0)){continue}break}break va}if(j){break va}J[a+1140>>2]=b;J[a+1136>>2]=g;H[a+1144|0]=1;break ta}if(j?K[a+1144|0]:0){J[8370]=J[8370]+1;ia[J[6783]](j)}J[a+1140>>2]=b;H[a+1144|0]=1;J[a+1136>>2]=g}qa(b+f|0,0,g-f|0);i=J[a+1112>>2]}J[a+1132>>2]=g;if((i|0)<=0){break ga}m=J[a+1140>>2];c=J[a+1120>>2];j=0;while(1){e=J[c+(j<<2)>>2];J[e+380>>2]=j;b=J[e+24>>2];l=(b|0)>0?b:0;a=(b|0)<=0;k=0;while(1){f=a;wa:{if((b|0)<=0){break wa}r=J[c+(k<<2)>>2];g=J[r+24>>2];h=0;while(1){if((g|0)>0){o=J[J[e+32>>2]+(h<<2)>>2];x=J[r+32>>2];d=0;while(1){if((o|0)==J[x+(d<<2)>>2]){break wa}d=d+1|0;if((g|0)!=(d|0)){continue}break}}h=h+1|0;f=(l|0)==(h|0);if(!f){continue}break}}H[m+(P(i,k)+j|0)|0]=(f^-1)&1;k=k+1|0;if((k|0)!=(i|0)){continue}break}j=j+1|0;if((j|0)!=(i|0)){continue}break}}ga=A+16|0;return i}function My(a){a=a|0;var b=0,c=0,d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=0,l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=0,y=Q(0),z=Q(0),A=0,B=0,C=0,D=0,E=0,F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=0;Kk(a);if(!(!(ia[J[J[a>>2]+20>>2]](a)|0)|J[a+328>>2]<=0)){while(1){k=J[J[a+336>>2]+(E<<2)>>2];a:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break a}d=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[d>>2]+48>>2]](d)&1)){break a}i=J[a+72>>2];d=ga+-64|0;ga=d;b:{if(!K[k+473|0]){break b}c=J[k+532>>2];J[d+24>>2]=J[k+528>>2];J[d+28>>2]=c;c=J[k+524>>2];J[d+16>>2]=J[k+520>>2];J[d+20>>2]=c;f=N[k+576>>2];h=N[k+568>>2];g=N[k+572>>2];l=N[k+544>>2];m=N[k+536>>2];p=N[k+540>>2];r=N[k+624>>2];s=N[k+592>>2];t=N[k+608>>2];q=N[k+620>>2];u=N[k+588>>2];v=N[k+604>>2];w=N[k+616>>2];y=N[k+560>>2];z=N[k+584>>2];F=N[k+552>>2];G=N[k+600>>2];I=N[k+556>>2];J[d+60>>2]=0;L=Q(Q(r*f)+Q(Q(s*h)+Q(t*g)));T=Q(L*Q(0));M=Q(Q(w*f)+Q(Q(z*h)+Q(G*g)));O=Q(Q(q*f)+Q(Q(u*h)+Q(v*g)));U=Q(O*Q(0));h=Q(T+Q(M+U));R=Q(Q(r*l)+Q(Q(s*m)+Q(p*t)));V=Q(R*Q(0));S=Q(Q(w*l)+Q(Q(z*m)+Q(G*p)));p=Q(Q(q*l)+Q(Q(u*m)+Q(p*v)));m=Q(p*Q(0));g=Q(V+Q(S+m));r=Q(Q(r*y)+Q(Q(s*F)+Q(t*I)));W=Q(r*Q(0));s=Q(Q(w*y)+Q(Q(z*F)+Q(G*I)));t=Q(Q(q*y)+Q(Q(u*F)+Q(v*I)));q=Q(t*Q(0));l=Q(W+Q(s+q));f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(g*g)+Q(l*l))))));N[d+56>>2]=N[d+24>>2]+Q(Q(h*f)*Q(10));N[d+52>>2]=N[d+20>>2]+Q(Q(l*f)*Q(10));N[d+48>>2]=N[d+16>>2]+Q(Q(g*f)*Q(10));J[d+40>>2]=0;J[d+44>>2]=0;J[d+32>>2]=1065353216;J[d+36>>2]=0;c=d+16|0;b=d+48|0;j=d+32|0;ia[J[J[i>>2]+8>>2]](i,c,b,j);J[d+60>>2]=0;u=Q(M*Q(0));h=Q(T+Q(u+O));v=Q(S*Q(0));g=Q(V+Q(v+p));w=Q(s*Q(0));l=Q(W+Q(w+t));f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(g*g)+Q(l*l))))));N[d+56>>2]=Q(Q(h*f)*Q(10))+N[d+24>>2];N[d+52>>2]=Q(Q(l*f)*Q(10))+N[d+20>>2];N[d+48>>2]=Q(Q(g*f)*Q(10))+N[d+16>>2];J[d+40>>2]=0;J[d+44>>2]=0;J[d+32>>2]=0;J[d+36>>2]=1065353216;ia[J[J[i>>2]+8>>2]](i,c,b,j);J[d+60>>2]=0;h=Q(L+Q(u+U));g=Q(Q(v+m)+R);l=Q(r+Q(w+q));f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(g*g)+Q(l*l))))));N[d+56>>2]=Q(Q(h*f)*Q(10))+N[d+24>>2];N[d+52>>2]=Q(Q(l*f)*Q(10))+N[d+20>>2];N[d+48>>2]=Q(Q(g*f)*Q(10))+N[d+16>>2];J[d+40>>2]=1065353216;J[d+44>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;ia[J[J[i>>2]+8>>2]](i,c,b,j);if(J[k+484>>2]<=0){break b}c=0;while(1){b=J[k+492>>2]+(c<<4)|0;g=N[b+8>>2];l=N[b>>2];m=N[b+4>>2];q=N[d+16>>2];h=N[d+20>>2];f=N[d+24>>2];J[d+8>>2]=1065353216;J[d+12>>2]=0;J[d>>2]=1065353216;J[d+4>>2]=0;J[d+60>>2]=0;f=Q(f+Q(Q(L*g)+Q(Q(M*l)+Q(O*m))));N[d+56>>2]=f;h=Q(h+Q(Q(r*g)+Q(Q(s*l)+Q(t*m))));N[d+52>>2]=h;g=Q(q+Q(Q(R*g)+Q(Q(S*l)+Q(p*m))));N[d+48>>2]=g+Q(-.10000000149011612);J[d+44>>2]=0;l=Q(f+Q(0));N[d+40>>2]=l;m=Q(h+Q(0));N[d+36>>2]=m;N[d+32>>2]=g+Q(.10000000149011612);b=d+48|0;j=d+32|0;ia[J[J[i>>2]+8>>2]](i,b,j,d);J[d+60>>2]=0;N[d+56>>2]=f;N[d+52>>2]=h+Q(-.10000000149011612);N[d+48>>2]=g;J[d+44>>2]=0;N[d+40>>2]=l;N[d+36>>2]=h+Q(.10000000149011612);l=Q(g+Q(0));N[d+32>>2]=l;ia[J[J[i>>2]+8>>2]](i,b,j,d);J[d+60>>2]=0;N[d+56>>2]=f+Q(-.10000000149011612);N[d+52>>2]=h;N[d+48>>2]=g;J[d+44>>2]=0;N[d+40>>2]=f+Q(.10000000149011612);N[d+36>>2]=m;N[d+32>>2]=l;ia[J[J[i>>2]+8>>2]](i,b,j,d);c=c+1|0;if((c|0)<J[k+484>>2]){continue}break}}ga=d- -64|0;j=J[a+72>>2];o=J[a+344>>2];d=0;C=0;b=ga-176|0;ga=b;J[b+152>>2]=0;J[b+156>>2]=0;J[b+144>>2]=0;J[b+148>>2]=0;J[b+136>>2]=1065353216;J[b+140>>2]=0;J[b+128>>2]=1065353216;J[b+132>>2]=1065353216;J[b+120>>2]=0;J[b+124>>2]=0;J[b+112>>2]=1065353216;J[b+116>>2]=0;c:{if(o&256){J[8384]=1805;J[8385]=0;e=J[k+1112>>2];if((e|0)<=0){break c}while(1){x=C<<2;if(K[J[x+J[k+1120>>2]>>2]+377|0]){D=0;c=jI(J[8384],J[8385],1284865837,1481765933)+1|0;d=ha;J[8384]=c;d=c?d:d+1|0;J[8385]=d;i=jI(J[8384],J[8385],1284865837,1481765933)+1|0;c=ha;J[8384]=i;c=i?c:c+1|0;J[8385]=c;i=jI(J[8384],J[8385],1284865837,1481765933)+1|0;e=ha;e=i?e:e+1|0;J[8384]=i;J[8385]=e;J[b+172>>2]=0;f=Q(Q(e>>>1|0)*Q(4.656612873077393e-10));m=f;q=Q(f*f);f=Q(Q(d>>>1|0)*Q(4.656612873077393e-10));h=Q(Q(c>>>1|0)*Q(4.656612873077393e-10));g=Q(Q(1)/Q(Y(Q(q+Q(Q(f*f)+Q(h*h))))));N[b+168>>2]=Q(m*g)*Q(.75);N[b+164>>2]=Q(h*g)*Q(.75);N[b+160>>2]=Q(f*g)*Q(.75);n=0;d=J[J[x+J[k+1120>>2]>>2]+24>>2];d:{if((d|0)<=0){break d}e=0;J[8369]=J[8369]+1;n=ia[J[6782]](d<<4,16)|0;if((d|0)!=1){X=d&-2;i=0;while(1){c=J[J[J[x+J[k+1120>>2]>>2]+32>>2]+(e<<2)>>2];B=J[c+12>>2];A=(e<<4)+n|0;J[A>>2]=J[c+8>>2];J[A+4>>2]=B;B=J[c+20>>2];J[A+8>>2]=J[c+16>>2];J[A+12>>2]=B;c=e|1;A=(c<<4)+n|0;c=J[J[J[x+J[k+1120>>2]>>2]+32>>2]+(c<<2)>>2];B=J[c+12>>2];J[A>>2]=J[c+8>>2];J[A+4>>2]=B;B=J[c+20>>2];J[A+8>>2]=J[c+16>>2];J[A+12>>2]=B;e=e+2|0;i=i+2|0;if((X|0)!=(i|0)){continue}break}}if(!(d&1)){break d}i=(e<<4)+n|0;c=J[J[J[x+J[k+1120>>2]>>2]+32>>2]+(e<<2)>>2];e=J[c+12>>2];J[i>>2]=J[c+8>>2];J[i+4>>2]=e;e=J[c+20>>2];J[i+8>>2]=J[c+16>>2];J[i+12>>2]=e}J[b+60>>2]=0;H[b+64|0]=1;H[b+84|0]=1;J[b+52>>2]=0;J[b+56>>2]=0;J[b+80>>2]=0;H[b+104|0]=1;J[b+72>>2]=0;J[b+76>>2]=0;J[b+100>>2]=0;J[b+92>>2]=0;J[b+96>>2]=0;eg(b+48|0,n,d);i=J[b+92>>2];if((i|0)>0){while(1){x=J[b+80>>2]+P(J[J[b+100>>2]+(D<<2)>>2],12)|0;d=P(J[x+4>>2],12)+x|0;e=P(J[d>>2],12)+d|0;if((e|0)!=(x|0)){c=J[d+8>>2];d=J[x+8>>2];while(1){A=c<<4;c=J[b+60>>2];i=J[e+8>>2];ia[J[J[j>>2]+28>>2]](j,A+c|0,c+(d<<4)|0,c+(i<<4)|0,b+160|0,Q(1));c=d;d=i;i=P(J[e+4>>2],12)+e|0;e=P(J[i>>2],12)+i|0;if((x|0)!=(e|0)){continue}break}i=J[b+92>>2]}D=D+1|0;if((i|0)>(D|0)){continue}break}}d=J[b+100>>2];if(!(d?!d|!K[b+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[b+100>>2]=0;H[b+104|0]=1;J[b+92>>2]=0;J[b+96>>2]=0;d=J[b+80>>2];if(!(d?!d|!K[b+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[b+80>>2]=0;H[b+84|0]=1;J[b+72>>2]=0;J[b+76>>2]=0;d=J[b+60>>2];if(!(d?!d|!K[b+64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}if(n){J[8370]=J[8370]+1;ia[J[6783]](n)}e=J[k+1112>>2]}C=C+1|0;if((C|0)<(e|0)){continue}break}break c}e:{if(!(o&1)){break e}i=J[k+712>>2];if((i|0)<=0){break e}while(1){c=J[k+720>>2]+P(d,104)|0;if(H[J[c+4>>2]+16|0]&1){f=N[c+8>>2];i=J[c+16>>2];J[b+52>>2]=J[c+12>>2];J[b+56>>2]=i;J[b+60>>2]=0;N[b+48>>2]=f+Q(-.10000000149011612);f=N[c+8>>2];h=N[c+12>>2];g=N[c+16>>2];J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=f+Q(.10000000149011612);J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=1065353216;J[b+36>>2]=0;i=b+48|0;e=b+160|0;n=b+32|0;ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+12>>2];h=N[c+8>>2];g=N[c+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+48>>2]=h;N[b+52>>2]=f+Q(-.10000000149011612);f=N[c+8>>2];h=N[c+12>>2];g=N[c+16>>2];J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=h+Q(.10000000149011612);N[b+160>>2]=f+Q(0);J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+16>>2];x=J[c+8>>2];C=J[c+12>>2];J[b+60>>2]=0;J[b+48>>2]=x;J[b+52>>2]=C;N[b+56>>2]=f+Q(-.10000000149011612);f=N[c+8>>2];h=N[c+12>>2];g=N[c+16>>2];J[b+172>>2]=0;N[b+168>>2]=g+Q(.10000000149011612);N[b+164>>2]=h+Q(0);N[b+160>>2]=f+Q(0);J[b+40>>2]=1065353216;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[j>>2]+8>>2]](j,i,e,n);i=J[k+712>>2]}d=d+1|0;if((i|0)>(d|0)){continue}break}}f:{if(!(o&2)){break f}i=J[k+732>>2];if((i|0)<=0){break f}e=0;while(1){d=J[k+740>>2]+P(e,52)|0;if(H[J[d+4>>2]+16|0]&1){ia[J[J[j>>2]+8>>2]](j,J[d+8>>2]+8|0,J[d+12>>2]+8|0,b+144|0);i=J[k+732>>2]}e=e+1|0;if((i|0)>(e|0)){continue}break}}g:{if(!(o&16)){break g}i=J[k+712>>2];if((i|0)<=0){break g}d=0;while(1){c=J[k+720>>2]+P(d,104)|0;if(H[J[c+4>>2]+16|0]&1){f=N[c+72>>2];h=N[c+76>>2];g=N[c+80>>2];l=N[c+8>>2];m=N[c+12>>2];p=N[c+16>>2];J[b+60>>2]=0;g=Q(g*Q(.5));N[b+56>>2]=p+g;h=Q(h*Q(.5));N[b+52>>2]=m+h;f=Q(f*Q(.5));N[b+48>>2]=l+f;i=c+8|0;e=b+48|0;ia[J[J[j>>2]+8>>2]](j,i,e,b+128|0);l=N[c+8>>2];m=N[c+12>>2];p=N[c+16>>2];J[b+60>>2]=0;N[b+56>>2]=p-g;N[b+52>>2]=m-h;N[b+48>>2]=l-f;J[b+172>>2]=0;N[b+168>>2]=N[b+136>>2]*Q(.5);N[b+164>>2]=N[b+132>>2]*Q(.5);N[b+160>>2]=N[b+128>>2]*Q(.5);ia[J[J[j>>2]+8>>2]](j,i,e,b+160|0);i=J[k+712>>2]}d=d+1|0;if((i|0)>(d|0)){continue}break}}h:{if(!(o&32)){break h}if(!K[33472]){J[8357]=0;J[8358]=0;J[8356]=1065353216;J[8359]=0;J[8360]=0;J[8362]=0;J[8363]=0;J[8361]=1065353216;J[8364]=0;J[8365]=0;J[8366]=1065353216;J[8367]=0;H[33472]=1}if(J[k+812>>2]<=0){break h}d=0;while(1){c=J[k+820>>2]+P(d,104)|0;r=N[c+20>>2];f=N[c+12>>2];i=J[c+24>>2];h=N[i+16>>2];g=N[c+8>>2];l=N[i+12>>2];m=N[c+4>>2];p=N[i+8>>2];J[b+60>>2]=0;q=m;m=Q(r+Q(Q(h*f)+Q(Q(p*m)+Q(l*g))));p=Q(p-Q(q*m));N[b+48>>2]=p;r=Q(l-Q(g*m));N[b+52>>2]=r;m=Q(h-Q(f*m));N[b+56>>2]=m;f=N[c+4>>2];h=N[c+8>>2];i=f<h;g=N[c+12>>2];i=(g>(i?f:h)?!i:2)<<4;l=N[i+33428>>2];s=N[i+33424>>2];t=N[i+33432>>2];J[b+172>>2]=0;q=Q(Q(f*l)-Q(s*h));u=Q(Q(h*t)-Q(l*g));s=Q(Q(g*s)-Q(t*f));l=Q(Q(1)/Q(Y(Q(Q(q*q)+Q(Q(u*u)+Q(s*s))))));t=Q(q*l);q=Q(t*Q(.5));N[b+168>>2]=m-q;s=Q(s*l);v=Q(s*Q(.5));N[b+164>>2]=r-v;l=Q(u*l);u=Q(l*Q(.5));N[b+160>>2]=p-u;J[b+44>>2]=0;N[b+40>>2]=m+q;N[b+36>>2]=r+v;N[b+32>>2]=p+u;i=b+160|0;e=b+32|0;n=b+112|0;ia[J[J[j>>2]+8>>2]](j,i,e,n);J[b+172>>2]=0;m=Q(Q(l*h)-Q(f*s));h=Q(Q(s*g)-Q(h*t));g=Q(Q(t*f)-Q(g*l));f=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(h*h)+Q(g*g))))));l=N[b+56>>2];m=Q(Q(m*f)*Q(.5));N[b+168>>2]=l-m;p=N[b+52>>2];g=Q(Q(g*f)*Q(.5));N[b+164>>2]=p-g;r=N[b+48>>2];f=Q(Q(h*f)*Q(.5));N[b+160>>2]=r-f;J[b+44>>2]=0;N[b+40>>2]=m+l;N[b+36>>2]=g+p;N[b+32>>2]=f+r;ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+4>>2];h=N[c+8>>2];g=N[c+12>>2];J[b+172>>2]=0;N[b+168>>2]=Q(Q(g*Q(.5))*Q(3))+N[b+56>>2];N[b+164>>2]=Q(Q(h*Q(.5))*Q(3))+N[b+52>>2];N[b+160>>2]=Q(Q(f*Q(.5))*Q(3))+N[b+48>>2];J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=1065353216;J[b+36>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,b+48|0,i,e);d=d+1|0;if((d|0)<J[k+812>>2]){continue}break}}i:{if(!(o&4)){break i}J[b+56>>2]=0;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=1060320051;i=J[k+752>>2];if((i|0)<=0){break i}e=0;while(1){d=J[k+760>>2]+P(e,44)|0;if(H[J[d+4>>2]+16|0]&1){c=J[d+16>>2];l=N[c+12>>2];i=J[d+8>>2];m=N[i+12>>2];d=J[d+12>>2];p=N[d+12>>2];r=N[c+16>>2];g=N[i+16>>2];s=N[d+16>>2];t=N[c+8>>2];h=N[i+8>>2];q=N[d+8>>2];J[b+172>>2]=0;f=Q(Q(t+Q(h+q))*Q(.3333333432674408));N[b+160>>2]=f+Q(Q(h-f)*Q(.800000011920929));h=Q(Q(r+Q(g+s))*Q(.3333333432674408));N[b+168>>2]=h+Q(Q(g-h)*Q(.800000011920929));g=Q(Q(l+Q(m+p))*Q(.3333333432674408));N[b+164>>2]=g+Q(Q(m-g)*Q(.800000011920929));J[b+44>>2]=0;N[b+40>>2]=h+Q(Q(s-h)*Q(.800000011920929));N[b+36>>2]=g+Q(Q(p-g)*Q(.800000011920929));N[b+32>>2]=f+Q(Q(q-f)*Q(.800000011920929));J[b+28>>2]=0;N[b+24>>2]=h+Q(Q(r-h)*Q(.800000011920929));N[b+20>>2]=g+Q(Q(l-g)*Q(.800000011920929));N[b+16>>2]=f+Q(Q(t-f)*Q(.800000011920929));ia[J[J[j>>2]+28>>2]](j,b+160|0,b+32|0,b+16|0,b+48|0,Q(1));i=J[k+752>>2]}e=e+1|0;if((i|0)>(e|0)){continue}break}}if(!(o&8)){break c}J[b+56>>2]=1060320051;J[b+60>>2]=0;J[b+48>>2]=1050253722;J[b+52>>2]=1050253722;i=J[k+772>>2];if((i|0)<=0){break c}e=0;while(1){d=J[k+780>>2]+P(e,104)|0;if(H[J[d+4>>2]+16|0]&1){c=J[d+20>>2];l=N[c+12>>2];i=J[d+16>>2];m=N[i+12>>2];n=J[d+8>>2];p=N[n+12>>2];d=J[d+12>>2];r=N[d+12>>2];s=N[c+16>>2];t=N[i+16>>2];g=N[n+16>>2];q=N[d+16>>2];u=N[c+8>>2];v=N[i+8>>2];h=N[n+8>>2];w=N[d+8>>2];J[b+172>>2]=0;f=Q(Q(u+Q(v+Q(h+w)))*Q(.25));y=Q(f+Q(Q(h-f)*Q(.800000011920929)));N[b+160>>2]=y;h=Q(Q(s+Q(t+Q(g+q)))*Q(.25));z=Q(h+Q(Q(g-h)*Q(.800000011920929)));N[b+168>>2]=z;g=Q(Q(l+Q(m+Q(p+r)))*Q(.25));p=Q(g+Q(Q(p-g)*Q(.800000011920929)));N[b+164>>2]=p;J[b+44>>2]=0;q=Q(h+Q(Q(q-h)*Q(.800000011920929)));N[b+40>>2]=q;r=Q(g+Q(Q(r-g)*Q(.800000011920929)));N[b+36>>2]=r;w=Q(f+Q(Q(w-f)*Q(.800000011920929)));N[b+32>>2]=w;J[b+28>>2]=0;t=Q(h+Q(Q(t-h)*Q(.800000011920929)));N[b+24>>2]=t;m=Q(g+Q(Q(m-g)*Q(.800000011920929)));N[b+20>>2]=m;v=Q(f+Q(Q(v-f)*Q(.800000011920929)));N[b+16>>2]=v;d=b+160|0;c=b+32|0;i=b+16|0;n=b+48|0;ia[J[J[j>>2]+28>>2]](j,d,c,i,n,Q(1));J[b+172>>2]=0;N[b+168>>2]=z;N[b+164>>2]=p;N[b+160>>2]=y;J[b+44>>2]=0;N[b+40>>2]=q;N[b+36>>2]=r;N[b+32>>2]=w;J[b+28>>2]=0;h=Q(h+Q(Q(s-h)*Q(.800000011920929)));N[b+24>>2]=h;g=Q(g+Q(Q(l-g)*Q(.800000011920929)));N[b+20>>2]=g;f=Q(f+Q(Q(u-f)*Q(.800000011920929)));N[b+16>>2]=f;ia[J[J[j>>2]+28>>2]](j,d,c,i,n,Q(1));J[b+172>>2]=0;N[b+168>>2]=q;N[b+164>>2]=r;N[b+160>>2]=w;J[b+44>>2]=0;N[b+40>>2]=t;N[b+36>>2]=m;N[b+32>>2]=v;J[b+28>>2]=0;N[b+24>>2]=h;N[b+20>>2]=g;N[b+16>>2]=f;ia[J[J[j>>2]+28>>2]](j,d,c,i,n,Q(1));J[b+172>>2]=0;N[b+168>>2]=t;N[b+164>>2]=m;N[b+160>>2]=v;J[b+44>>2]=0;N[b+40>>2]=z;N[b+36>>2]=p;N[b+32>>2]=y;J[b+28>>2]=0;N[b+24>>2]=h;N[b+20>>2]=g;N[b+16>>2]=f;ia[J[J[j>>2]+28>>2]](j,d,c,i,n,Q(1));i=J[k+772>>2]}e=e+1|0;if((i|0)>(e|0)){continue}break}}j:{if(!(o&64)){break j}if(J[k+792>>2]>0){i=0;while(1){e=J[k+800>>2]+P(i,96)|0;d=J[e+20>>2];l=N[d+52>>2];m=N[d+12>>2];p=N[d+8>>2];r=N[d+4>>2];s=N[d+56>>2];t=N[d+28>>2];q=N[d+20>>2];u=N[d+24>>2];v=N[d+60>>2];f=N[e+12>>2];w=N[d+44>>2];h=N[e+4>>2];y=N[d+36>>2];g=N[e+8>>2];z=N[d+40>>2];J[b+44>>2]=0;N[b+40>>2]=v+Q(Q(f*w)+Q(Q(h*y)+Q(g*z)));N[b+36>>2]=s+Q(Q(f*t)+Q(Q(h*q)+Q(g*u)));N[b+32>>2]=l+Q(Q(f*m)+Q(Q(h*r)+Q(g*p)));d=J[e>>2];J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=1065353216;J[b+20>>2]=0;f=N[d+8>>2];h=N[d+12>>2];g=N[d+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+52>>2]=h;N[b+48>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=f+Q(.25);c=b+48|0;n=b+160|0;x=b+16|0;ia[J[J[j>>2]+8>>2]](j,c,n,x);f=N[d+12>>2];h=N[d+8>>2];g=N[d+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+48>>2]=h;N[b+52>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=f+Q(.25);N[b+160>>2]=h+Q(0);ia[J[J[j>>2]+8>>2]](j,c,n,x);f=N[d+16>>2];h=N[d+8>>2];g=N[d+12>>2];J[b+60>>2]=0;N[b+52>>2]=g;N[b+48>>2]=h;N[b+56>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=g+Q(0);N[b+160>>2]=h+Q(0);ia[J[J[j>>2]+8>>2]](j,c,n,x);J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=1065353216;J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f;h=N[b+36>>2];N[b+52>>2]=h;g=N[b+32>>2];N[b+48>>2]=g+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(.25);ia[J[J[j>>2]+8>>2]](j,c,n,x);J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f;h=N[b+36>>2];N[b+52>>2]=h+Q(-.25);g=N[b+32>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(.25);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,c,n,x);J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f+Q(-.25);h=N[b+36>>2];N[b+52>>2]=h;g=N[b+32>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,c,n,x);d=J[e>>2];J[b+56>>2]=1065353216;J[b+60>>2]=0;J[b+48>>2]=1065353216;J[b+52>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,d+8|0,b+32|0,c);i=i+1|0;if((i|0)<J[k+792>>2]){continue}break}}i=J[k+712>>2];if((i|0)<=0){break j}d=0;while(1){c=J[k+720>>2]+P(d,104)|0;if(!(!(H[J[c+4>>2]+16|0]&1)|!(N[c+88>>2]<=Q(0)))){J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=1065353216;J[b+36>>2]=0;f=N[c+8>>2];h=N[c+12>>2];g=N[c+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+52>>2]=h;N[b+48>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=f+Q(.25);i=b+48|0;e=b+160|0;n=b+32|0;ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+12>>2];h=N[c+8>>2];g=N[c+16>>2];J[b+60>>2]=0;N[b+56>>2]=g;N[b+48>>2]=h;N[b+52>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=g+Q(0);N[b+164>>2]=f+Q(.25);N[b+160>>2]=h+Q(0);ia[J[J[j>>2]+8>>2]](j,i,e,n);f=N[c+16>>2];h=N[c+8>>2];g=N[c+12>>2];J[b+60>>2]=0;N[b+52>>2]=g;N[b+48>>2]=h;N[b+56>>2]=f+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=g+Q(0);N[b+160>>2]=h+Q(0);ia[J[J[j>>2]+8>>2]](j,i,e,n);i=J[k+712>>2]}d=d+1|0;if((i|0)>(d|0)){continue}break}}if(!(!(o&128)|J[k+692>>2]<=0)){c=0;while(1){d=J[k+700>>2]+P(c,60)|0;i=J[d+20>>2];J[b+56>>2]=J[d+16>>2];J[b+60>>2]=i;i=J[d+12>>2];J[b+48>>2]=J[d+8>>2];J[b+52>>2]=i;n=J[d+24>>2];if((n|0)>0){e=0;f=N[b+56>>2];h=N[b+52>>2];g=N[b+48>>2];while(1){x=d+(e<<2)|0;i=J[x+28>>2];m=N[i+12>>2];p=N[i+16>>2];l=N[x+44>>2];g=Q(Q(N[i+8>>2]*l)+g);N[b+48>>2]=g;f=Q(Q(l*p)+f);N[b+56>>2]=f;h=Q(Q(l*m)+h);N[b+52>>2]=h;e=e+1|0;if((n|0)!=(e|0)){continue}break}}ia[J[J[j>>2]+40>>2]](j,b+48|0,J[d+4>>2]);c=c+1|0;if((c|0)<J[k+692>>2]){continue}break}}if(o&512){d=J[k+928>>2];J[b+56>>2]=1065353216;J[b+60>>2]=0;J[b+48>>2]=1065353216;J[b+52>>2]=0;J[b+168>>2]=1065353216;J[b+172>>2]=0;J[b+160>>2]=1065353216;J[b+164>>2]=1065353216;Ob(j,d,0,b+48|0,b+160|0,0,-1)}if(o&1024){d=J[k+988>>2];J[b+56>>2]=0;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=1065353216;J[b+168>>2]=0;J[b+172>>2]=0;J[b+160>>2]=1065353216;J[b+164>>2]=0;Ob(j,d,0,b+48|0,b+160|0,0,-1)}if(o&2048){d=J[k+1048>>2];J[b+56>>2]=1065353216;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=1065353216;J[b+168>>2]=0;J[b+172>>2]=0;J[b+160>>2]=1065353216;J[b+164>>2]=0;Ob(j,d,0,b+48|0,b+160|0,0,-1)}if(!(!(o&4096)|J[k+852>>2]<=0)){i=0;while(1){k:{l:{m:{d=J[J[k+860>>2]+(i<<2)>>2];switch(ia[J[J[d>>2]+20>>2]](d)|0){case 1:break l;case 0:break m;default:break k}}c=K[33296];if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+12>>2];o=J[d+4>>2];e=e?e+4|0:o?o+60|0:33232;l=N[e+52>>2];m=N[e+24>>2];p=N[e+20>>2];r=N[e+16>>2];s=N[e+56>>2];t=N[e+40>>2];q=N[e+36>>2];u=N[e+32>>2];v=N[e+48>>2];w=N[e+8>>2];y=N[e>>2];z=N[e+4>>2];f=N[d+36>>2];h=N[d+32>>2];g=N[d+28>>2];J[b+44>>2]=0;N[b+32>>2]=v+Q(Q(f*w)+Q(Q(g*y)+Q(h*z)));N[b+40>>2]=s+Q(Q(f*t)+Q(Q(g*u)+Q(h*q)));N[b+36>>2]=l+Q(Q(f*m)+Q(Q(g*r)+Q(h*p)));if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+24>>2];o=J[d+16>>2];e=e?e+4|0:o?o+60|0:33232;l=N[e+52>>2];m=N[e+24>>2];p=N[e+20>>2];r=N[e+16>>2];s=N[e+56>>2];t=N[e+40>>2];q=N[e+36>>2];u=N[e+32>>2];v=N[e+48>>2];w=N[e+8>>2];y=N[e>>2];z=N[e+4>>2];f=N[d+52>>2];h=N[d+44>>2];g=N[d+48>>2];J[b+28>>2]=0;N[b+16>>2]=v+Q(Q(f*w)+Q(Q(h*y)+Q(g*z)));N[b+24>>2]=s+Q(Q(f*t)+Q(Q(h*u)+Q(g*q)));N[b+20>>2]=l+Q(Q(f*m)+Q(Q(h*r)+Q(g*p)));if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c}c=J[d+12>>2];e=J[d+4>>2];J[b+56>>2]=0;J[b+60>>2]=0;J[b+48>>2]=1065353216;J[b+52>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,(c?c+4|0:e?e+60|0:33232)+48|0,b+32|0,b+48|0);if(!(H[33296]&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c}c=J[d+24>>2];d=J[d+16>>2];J[b+56>>2]=1065353216;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=1065353216;c=(c?c+4|0:d?d+60|0:33232)+48|0;d=b+48|0;ia[J[J[j>>2]+8>>2]](j,c,b+16|0,d);J[b+8>>2]=0;J[b+12>>2]=0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f;h=N[b+36>>2];N[b+52>>2]=h;g=N[b+32>>2];N[b+48>>2]=g+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(.25);c=b+160|0;ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f;h=N[b+36>>2];N[b+52>>2]=h+Q(-.25);g=N[b+32>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(.25);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+60>>2]=0;f=N[b+40>>2];N[b+56>>2]=f+Q(-.25);h=N[b+36>>2];N[b+52>>2]=h;g=N[b+32>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+8>>2]=1065353216;J[b+12>>2]=0;J[b>>2]=0;J[b+4>>2]=1065353216;J[b+60>>2]=0;f=N[b+24>>2];N[b+56>>2]=f;h=N[b+20>>2];N[b+52>>2]=h;g=N[b+16>>2];N[b+48>>2]=g+Q(-.25);J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(.25);ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+60>>2]=0;f=N[b+24>>2];N[b+56>>2]=f;h=N[b+20>>2];N[b+52>>2]=h+Q(-.25);g=N[b+16>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(0);N[b+164>>2]=h+Q(.25);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,d,c,b);J[b+60>>2]=0;f=N[b+24>>2];N[b+56>>2]=f+Q(-.25);h=N[b+20>>2];N[b+52>>2]=h;g=N[b+16>>2];N[b+48>>2]=g;J[b+172>>2]=0;N[b+168>>2]=f+Q(.25);N[b+164>>2]=h+Q(0);N[b+160>>2]=g+Q(0);ia[J[J[j>>2]+8>>2]](j,d,c,b);break k}c=K[33296];if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+12>>2];o=J[d+4>>2];e=e?e+4|0:o?o+60|0:33232;o=J[e+60>>2];J[b+56>>2]=J[e+56>>2];J[b+60>>2]=o;o=J[e+52>>2];J[b+48>>2]=J[e+48>>2];J[b+52>>2]=o;if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+24>>2];o=J[d+16>>2];e=e?e+4|0:o?o+60|0:33232;o=J[e+60>>2];J[b+168>>2]=J[e+56>>2];J[b+172>>2]=o;o=J[e+52>>2];J[b+160>>2]=J[e+48>>2];J[b+164>>2]=o;if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c;c=1}e=J[d+12>>2];o=J[d+4>>2];e=e?e+4|0:o?o+60|0:33232;f=N[d+36>>2];h=N[d+28>>2];g=N[d+32>>2];l=Q(Q(N[e+8>>2]*f)+Q(Q(N[e>>2]*h)+Q(N[e+4>>2]*g)));m=Q(Q(N[e+40>>2]*f)+Q(Q(N[e+32>>2]*h)+Q(g*N[e+36>>2])));p=Q(Q(N[e+24>>2]*f)+Q(Q(N[e+16>>2]*h)+Q(g*N[e+20>>2])));if(!(c&1)){c=bb();e=J[c+4>>2];J[8308]=J[c>>2];J[8309]=e;e=J[c+12>>2];J[8310]=J[c+8>>2];J[8311]=e;e=J[c+20>>2];J[8312]=J[c+16>>2];J[8313]=e;e=J[c+28>>2];J[8314]=J[c+24>>2];J[8315]=e;e=J[c+36>>2];J[8316]=J[c+32>>2];J[8317]=e;e=J[c+44>>2];J[8318]=J[c+40>>2];J[8319]=e;e=J[c+56>>2];o=J[c+60>>2];n=J[c+48>>2];c=J[c+52>>2];H[33296]=1;J[8322]=e;J[8323]=o;J[8320]=n;J[8321]=c}c=J[d+24>>2];e=J[d+16>>2];c=c?c+4|0:e?e+60|0:33232;r=N[c+8>>2];s=N[c>>2];t=N[c+4>>2];q=N[c+24>>2];u=N[c+20>>2];v=N[c+16>>2];w=N[c+40>>2];y=N[c+36>>2];z=N[c+32>>2];f=N[d+52>>2];h=N[d+48>>2];g=N[d+44>>2];J[b+44>>2]=0;m=Q(m*Q(10));N[b+40>>2]=m+N[b+56>>2];p=Q(p*Q(10));N[b+36>>2]=p+N[b+52>>2];l=Q(l*Q(10));N[b+32>>2]=l+N[b+48>>2];J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=1065353216;J[b+20>>2]=1065353216;e=b+48|0;d=b+32|0;c=b+16|0;ia[J[J[j>>2]+8>>2]](j,e,d,c);J[b+44>>2]=0;w=Q(Q(Q(w*f)+Q(Q(z*g)+Q(h*y)))*Q(10));N[b+40>>2]=w+N[b+56>>2];q=Q(Q(Q(q*f)+Q(Q(v*g)+Q(h*u)))*Q(10));N[b+36>>2]=q+N[b+52>>2];f=Q(Q(Q(r*f)+Q(Q(s*g)+Q(t*h)))*Q(10));N[b+32>>2]=f+N[b+48>>2];J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=1065353216;J[b+20>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,e,d,c);J[b+44>>2]=0;N[b+40>>2]=m+N[b+168>>2];N[b+36>>2]=p+N[b+164>>2];N[b+32>>2]=l+N[b+160>>2];J[b+24>>2]=1065353216;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=1065353216;e=b+160|0;ia[J[J[j>>2]+8>>2]](j,e,d,c);J[b+44>>2]=0;N[b+40>>2]=w+N[b+168>>2];N[b+36>>2]=q+N[b+164>>2];N[b+32>>2]=f+N[b+160>>2];J[b+24>>2]=1065353216;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=1065353216;ia[J[J[j>>2]+8>>2]](j,e,d,c)}i=i+1|0;if((i|0)<J[k+852>>2]){continue}break}}ga=b+176|0}d=J[a+72>>2];n:{if(!d){break n}if(!(ia[J[J[d>>2]+48>>2]](d)&2)){break n}if(K[a+348|0]){c=J[a+72>>2];d=ga-32|0;ga=d;i=J[k+928>>2];J[d+24>>2]=1065353216;J[d+28>>2]=0;J[d+16>>2]=1065353216;J[d+20>>2]=0;J[d+8>>2]=1065353216;J[d+12>>2]=0;J[d>>2]=1065353216;J[d+4>>2]=1065353216;Ob(c,i,0,d+16|0,d,0,-1);ga=d+32|0}if(K[a+349|0]){c=J[a+72>>2];d=ga-32|0;ga=d;i=J[k+988>>2];J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=1065353216;J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=1065353216;J[d+4>>2]=0;Ob(c,i,0,d+16|0,d,0,-1);ga=d+32|0}if(!K[a+350|0]){break n}c=J[a+72>>2];d=ga-32|0;ga=d;i=J[k+1048>>2];J[d+24>>2]=1065353216;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=1065353216;J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=1065353216;J[d+4>>2]=0;Ob(c,i,0,d+16|0,d,0,-1);ga=d+32|0}E=E+1|0;if((E|0)<J[a+328>>2]){continue}break}}}function VG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=0,h=0,i=0,j=Q(0),k=0,l=Q(0),m=0,n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=0,w=Q(0),x=0,y=Q(0),z=0,A=0,B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),U=0,V=0,W=Q(0),X=0,Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=0,fa=Q(0),ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=Q(0),na=Q(0),oa=Q(0),pa=0,qa=Q(0),ra=Q(0),sa=Q(0),ta=Q(0),ua=Q(0),va=Q(0),wa=0,xa=0,ya=0,za=0;g=ga-544|0;ga=g;k=J[a+20>>2];if(!k){h=J[a+4>>2];k=ia[J[J[h>>2]+12>>2]](h,J[b+8>>2],J[c+8>>2])|0;H[a+16|0]=1;J[a+20>>2]=k}J[e+4>>2]=k;U=J[b+4>>2];v=J[c+4>>2];a:{if(!(J[U+4>>2]!=10|J[v+4>>2]!=10)){u=N[k+752>>2];a=J[b+12>>2];h=J[U+52>>2];k=h<<2;d=a+k|0;F=N[d+32>>2];b=J[c+12>>2];$=N[b+56>>2];w=Q($-N[a+56>>2]);M=N[d>>2];W=N[b+48>>2];G=Q(W-N[a+48>>2]);C=N[d+16>>2];E=N[b+52>>2];I=Q(E-N[a+52>>2]);n=Q(Q(F*w)+Q(Q(M*G)+Q(C*I)));a=b;b=J[v+52>>2];c=b<<2;a=a+c|0;q=N[a+32>>2];t=N[a>>2];Z=N[a+16>>2];o=Q(-Q(Q(q*w)+Q(Q(t*G)+Q(Z*I))));a=v+28|0;j=N[a+c>>2];c=U+28|0;y=N[c+k>>2];a=a+((b+2|0)%3<<2)|0;b=c+((h+2|0)%3<<2)|0;L=Q(Q(F*q)+Q(Q(M*t)+Q(C*Z)));l=Q(Q(1)-Q(L*L));b:{if(l==Q(0)){break b}f=Q(-y);l=Q(Q(Q(o*L)+n)/l);if(f>l){break b}f=l;if(!(y<f)){break b}f=y}r=N[a>>2];_=N[b>>2];l=Q(Q(f*L)+o);o=Q(-j);c:{d:{if(l<o){f=Q(-y);j=Q(Q(o*L)+n);if(f>j){l=o;break c}if(!(j>y)){l=o;f=j;break c}j=o;break d}if(!(j<l)){break c}f=Q(-y);o=Q(Q(j*L)+n);if(f>o){l=j;break c}if(!(o>y)){l=j;f=o;break c}}l=j;f=y}L=Q(q*l);j=Q(L+Q(w-Q(F*f)));n=Q(t*l);o=Q(n+Q(G-Q(M*f)));w=Q(Z*l);f=Q(w+Q(I-Q(C*f)));l=Q(Q(j*j)+Q(Q(o*o)+Q(f*f)));G=Q(Y(l));y=Q(Q(G-_)-r);if(!(y>u)){e:{if(l<=Q(1.4210854715202004e-14)){if(Q(R(F))>Q(.7071067690849304)){J[g>>2]=0;f=Q(Q(1)/Q(Y(Q(Q(C*C)+Q(F*F)))));j=Q(C*f);N[g+8>>2]=j;l=Q(f*Q(-F));N[g+4>>2]=l;f=Q(0);break e}J[g+8>>2]=0;f=Q(Q(1)/Q(Y(Q(Q(M*M)+Q(C*C)))));l=Q(M*f);N[g+4>>2]=l;f=Q(f*Q(-C));N[g>>2]=f;j=Q(0);break e}J[g+12>>2]=0;C=Q(Q(-1)/G);j=Q(j*C);N[g+8>>2]=j;l=Q(f*C);N[g+4>>2]=l;f=Q(o*C);N[g>>2]=f}J[g+420>>2]=0;N[g+416>>2]=Q(r*j)+Q(L+$);N[g+412>>2]=Q(r*l)+Q(w+E);N[g+408>>2]=Q(r*f)+Q(n+W)}if(u>y){ia[J[J[e>>2]+16>>2]](e,g,g+408|0,y)}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:d)+4|0);break a}J[g+536>>2]=1566444395;V=Bg(g+328|0,U,v,J[a+8>>2],J[a+12>>2]);J[V+32>>2]=v;J[V+28>>2]=U;l=Q(Q(Q(ia[J[J[U>>2]+48>>2]](U))+Q(ia[J[J[v>>2]+48>>2]](v)))+N[J[a+20>>2]+752>>2]);N[g+536>>2]=l*l;h=J[b+12>>2];k=J[h+12>>2];J[g+416>>2]=J[h+8>>2];J[g+420>>2]=k;k=J[h+4>>2];J[g+408>>2]=J[h>>2];J[g+412>>2]=k;k=J[h+28>>2];J[g+432>>2]=J[h+24>>2];J[g+436>>2]=k;k=J[h+20>>2];J[g+424>>2]=J[h+16>>2];J[g+428>>2]=k;k=J[h+44>>2];J[g+448>>2]=J[h+40>>2];J[g+452>>2]=k;k=J[h+36>>2];J[g+440>>2]=J[h+32>>2];J[g+444>>2]=k;k=J[h+60>>2];J[g+464>>2]=J[h+56>>2];J[g+468>>2]=k;k=J[h+52>>2];J[g+456>>2]=J[h+48>>2];J[g+460>>2]=k;h=J[c+12>>2];k=J[h+12>>2];J[g+480>>2]=J[h+8>>2];J[g+484>>2]=k;k=J[h+4>>2];J[g+472>>2]=J[h>>2];J[g+476>>2]=k;p=J[h+20>>2];i=g+488|0;J[i>>2]=J[h+16>>2];J[i+4>>2]=p;k=J[h+28>>2];J[g+496>>2]=J[h+24>>2];J[g+500>>2]=k;s=J[h+36>>2];p=g+504|0;k=p;J[k>>2]=J[h+32>>2];J[k+4>>2]=s;k=J[h+44>>2];J[g+512>>2]=J[h+40>>2];J[g+516>>2]=k;x=J[h+52>>2];s=g+520|0;k=s;J[k>>2]=J[h+48>>2];J[k+4>>2]=x;k=J[h+60>>2];J[g+528>>2]=J[h+56>>2];J[g+532>>2]=k;f:{k=J[U+4>>2];if((k|0)>6){break f}h=J[v+4>>2];if((h|0)>6){break f}J[g+320>>2]=8896;l=Q(0);if(k){l=Q(ia[J[J[U>>2]+48>>2]](U));h=J[v+4>>2]}if(h){f=Q(ia[J[J[v>>2]+48>>2]](v))}H[g+36|0]=0;N[g+28>>2]=f;N[g+24>>2]=l;J[g+4>>2]=e;J[g>>2]=9128;if(!J[U+52>>2]){break f}if(J[v+52>>2]){aa=N[J[a+20>>2]+752>>2];g:{h:{if(K[d+24|0]){l=Q(-1.0000000150474662e30);x=J[U+52>>2];A=J[v+52>>2];p=J[b+12>>2];s=J[c+12>>2];h=0;V=0;i=ga-96|0;ga=i;J[7973]=J[7973]+1;f=N[x+72>>2];r=N[p+40>>2];j=N[x+64>>2];n=N[p+32>>2];q=N[x+68>>2];u=N[p+36>>2];t=N[A+72>>2];W=N[A+64>>2];D=N[A+68>>2];Z=Q(Q(Q(Q(f*r)+Q(Q(j*n)+Q(q*u)))+N[p+56>>2])-Q(Q(Q(t*N[s+40>>2])+Q(Q(W*N[s+32>>2])+Q(D*N[s+36>>2])))+N[s+56>>2]));w=N[p+24>>2];G=N[p+16>>2];I=N[p+20>>2];$=Q(Q(Q(Q(f*w)+Q(Q(j*G)+Q(q*I)))+N[p+52>>2])-Q(Q(Q(t*N[s+24>>2])+Q(Q(W*N[s+16>>2])+Q(D*N[s+20>>2])))+N[s+52>>2]));E=N[p+8>>2];_=N[p>>2];O=N[p+4>>2];W=Q(Q(Q(Q(f*E)+Q(Q(j*_)+Q(q*O)))+N[p+48>>2])-Q(Q(Q(t*N[s+8>>2])+Q(Q(W*N[s>>2])+Q(D*N[s+4>>2])))+N[s+48>>2]));j=Q(3.4028234663852886e38);i:{j:{k=J[x+28>>2];if((k|0)<=0){break j}while(1){d=J[x+36>>2]+P(z,36)|0;t=N[d+28>>2];D=N[d+24>>2];S=N[d+20>>2];J[i+12>>2]=0;f=Q(Q(r*t)+Q(Q(n*S)+Q(D*u)));N[i+8>>2]=f;q=Q(Q(w*t)+Q(Q(G*S)+Q(D*I)));N[i+4>>2]=q;t=Q(Q(E*t)+Q(Q(_*S)+Q(D*O)));N[i>>2]=t;if(Q(Q(Z*f)+Q(Q(W*t)+Q($*q)))<Q(0)){f=Q(-f);N[i+8>>2]=f;q=Q(-q);N[i+4>>2]=q;t=Q(-t);N[i>>2]=t}J[7971]=J[7971]+1;k:{l:{if(K[27117]){D=Q(Q(Z*f)+Q(Q(W*t)+Q($*q)));S=N[x+88>>2];r=Q(Q(r*f)+Q(Q(E*t)+Q(q*w)));w=Q((r<Q(0)?Q(-S):S)*r);r=N[x+80>>2];E=Q(-r);B=r;r=Q(Q(n*f)+Q(Q(_*t)+Q(q*G)));B=Q((r<Q(0)?E:B)*r);r=Q(Q(u*f)+Q(Q(O*t)+Q(q*I)));n=N[x+84>>2];r=Q(w+Q(B+Q(r*(r<Q(0)?Q(-n):n))));n=N[x+96>>2];B=r>n?r:n;r=N[A+88>>2];u=Q(-r);n=r;r=Q(Q(N[s+40>>2]*f)+Q(Q(N[s+8>>2]*t)+Q(q*N[s+24>>2])));u=Q((r<Q(0)?u:n)*r);r=N[A+80>>2];w=Q(-r);n=r;r=Q(Q(N[s+32>>2]*f)+Q(Q(N[s>>2]*t)+Q(q*N[s+16>>2])));n=Q((r<Q(0)?w:n)*r);f=Q(Q(N[s+36>>2]*f)+Q(Q(N[s+4>>2]*t)+Q(q*N[s+20>>2])));r=N[A+84>>2];f=Q(u+Q(n+Q(f*(f<Q(0)?Q(-r):r))));r=N[A+96>>2];f=Q(B+(f>r?f:r));r=Q(D+f);f=Q(f-D);if((f>r?r:f)>j){break l}}J[7972]=J[7972]+1;Cc(x,p,i,i+92|0,i+88|0,i- -64|0,i+48|0);Cc(A,s,i,i+84|0,i+80|0,i+32|0,i+16|0);f=N[i+88>>2];r=N[i+84>>2];if(f<r){break k}n=N[i+80>>2];u=N[i+92>>2];if(n<u){break k}f=Q(f-r);r=Q(n-u);f=f<r?f:r;if(!(f<j)){break l}d=J[i+4>>2];J[g+240>>2]=J[i>>2];J[g+244>>2]=d;d=J[i+12>>2];J[g+248>>2]=J[i+8>>2];J[g+252>>2]=d;j=f}z=z+1|0;if((k|0)==(z|0)){break j}r=N[p+40>>2];u=N[p+36>>2];n=N[p+32>>2];w=N[p+24>>2];I=N[p+20>>2];G=N[p+16>>2];E=N[p+8>>2];O=N[p+4>>2];_=N[p>>2];continue}break}break i}m:{k=J[A+28>>2];if((k|0)>0){z=0;while(1){d=J[A+36>>2]+P(z,36)|0;r=N[d+28>>2];n=N[d+20>>2];u=N[d+24>>2];w=N[s+8>>2];G=N[s>>2];I=N[s+4>>2];E=N[s+24>>2];_=N[s+16>>2];O=N[s+20>>2];D=N[s+40>>2];S=N[s+32>>2];ba=N[s+36>>2];J[i+12>>2]=0;f=Q(Q(D*r)+Q(Q(S*n)+Q(u*ba)));N[i+8>>2]=f;q=Q(Q(E*r)+Q(Q(_*n)+Q(u*O)));N[i+4>>2]=q;t=Q(Q(w*r)+Q(Q(G*n)+Q(u*I)));N[i>>2]=t;if(Q(Q(Z*f)+Q(Q(W*t)+Q($*q)))<Q(0)){f=Q(-f);N[i+8>>2]=f;q=Q(-q);N[i+4>>2]=q;t=Q(-t);N[i>>2]=t}J[7971]=J[7971]+1;n:{if(K[27117]){r=Q(Q(Z*f)+Q(Q(W*t)+Q($*q)));n=N[x+88>>2];u=Q(-n);B=n;n=Q(Q(N[p+40>>2]*f)+Q(Q(N[p+8>>2]*t)+Q(q*N[p+24>>2])));ca=Q((n<Q(0)?u:B)*n);n=N[x+80>>2];u=Q(-n);B=n;n=Q(Q(N[p+32>>2]*f)+Q(Q(N[p>>2]*t)+Q(q*N[p+16>>2])));B=Q((n<Q(0)?u:B)*n);n=Q(Q(N[p+36>>2]*f)+Q(Q(N[p+4>>2]*t)+Q(q*N[p+20>>2])));u=N[x+84>>2];n=Q(ca+Q(B+Q(n*(n<Q(0)?Q(-u):u))));u=N[x+96>>2];u=n>u?n:u;n=N[A+88>>2];ca=Q(-n);B=n;n=Q(Q(D*f)+Q(Q(w*t)+Q(q*E)));w=Q((n<Q(0)?ca:B)*n);n=N[A+80>>2];E=Q(-n);B=n;n=Q(Q(S*f)+Q(Q(G*t)+Q(q*_)));B=Q((n<Q(0)?E:B)*n);f=Q(Q(ba*f)+Q(Q(I*t)+Q(q*O)));n=N[A+84>>2];f=Q(w+Q(B+Q(f*(f<Q(0)?Q(-n):n))));n=N[A+96>>2];f=Q(u+(f>n?f:n));n=Q(r+f);f=Q(f-r);if((f>n?n:f)>j){break n}}J[7972]=J[7972]+1;Cc(x,p,i,i+92|0,i+88|0,i- -64|0,i+48|0);Cc(A,s,i,i+84|0,i+80|0,i+32|0,i+16|0);f=N[i+88>>2];r=N[i+84>>2];if(f<r){break m}n=N[i+80>>2];u=N[i+92>>2];if(n<u){break m}f=Q(f-r);r=Q(n-u);f=f<r?f:r;if(!(f<j)){break n}d=J[i+4>>2];J[g+240>>2]=J[i>>2];J[g+244>>2]=d;d=J[i+12>>2];J[g+248>>2]=J[i+8>>2];J[g+252>>2]=d;j=f}z=z+1|0;if((k|0)!=(z|0)){continue}break}}V=1;d=J[x+48>>2];o:{if((d|0)<=0){break o}z=J[A+48>>2];if((z|0)<=0){break o}k=-1;m=-1;while(1){if((z|0)>0){d=J[x+56>>2]+(h<<4)|0;f=N[d+8>>2];u=N[d>>2];w=N[d+4>>2];r=Q(Q(N[p+24>>2]*f)+Q(Q(N[p+16>>2]*u)+Q(w*N[p+20>>2])));qa=Q(-r);n=Q(Q(N[p+8>>2]*f)+Q(Q(N[p>>2]*u)+Q(w*N[p+4>>2])));ra=Q(-n);u=Q(Q(N[p+40>>2]*f)+Q(Q(N[p+32>>2]*u)+Q(w*N[p+36>>2])));sa=Q(-u);d=0;while(1){z=J[A+56>>2]+(d<<4)|0;I=N[z+8>>2];q=N[z>>2];t=N[z+4>>2];E=N[s+40>>2];_=N[s+32>>2];O=N[s+36>>2];D=N[s+24>>2];S=N[s+16>>2];ba=N[s+20>>2];ja=N[s+8>>2];fa=N[s>>2];ha=N[s+4>>2];J[i+12>>2]=0;w=Q(Q(D*I)+Q(Q(S*q)+Q(t*ba)));G=Q(Q(ja*I)+Q(Q(fa*q)+Q(t*ha)));f=Q(Q(n*w)+Q(G*qa));I=Q(Q(E*I)+Q(Q(_*q)+Q(t*O)));q=Q(Q(u*G)+Q(I*ra));t=Q(Q(r*I)+Q(w*sa));p:{if(!(+Q(R(f))>1e-6?1:+Q(R(t))>1e-6|+Q(R(q))>1e-6)){break p}da=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(t*t)+Q(q*q))))));f=Q(f*da);N[i+8>>2]=f;q=Q(q*da);N[i+4>>2]=q;t=Q(t*da);N[i>>2]=t;if(Q(Q(Z*f)+Q(Q(W*t)+Q($*q)))<Q(0)){f=Q(-f);N[i+8>>2]=f;q=Q(-q);N[i+4>>2]=q;t=Q(-t);N[i>>2]=t}J[7971]=J[7971]+1;if(K[27117]){da=Q(Q(Z*f)+Q(Q(W*t)+Q($*q)));B=N[x+88>>2];ka=Q(-B);ca=B;B=Q(Q(N[p+40>>2]*f)+Q(Q(N[p+8>>2]*t)+Q(q*N[p+24>>2])));ka=Q((B<Q(0)?ka:ca)*B);B=N[x+80>>2];la=Q(-B);ca=B;B=Q(Q(N[p+32>>2]*f)+Q(Q(N[p>>2]*t)+Q(q*N[p+16>>2])));la=Q((B<Q(0)?la:ca)*B);B=Q(Q(N[p+36>>2]*f)+Q(Q(N[p+4>>2]*t)+Q(q*N[p+20>>2])));ca=N[x+84>>2];B=Q(ka+Q(la+Q(B*(B<Q(0)?Q(-ca):ca))));ca=N[x+96>>2];ca=B>ca?B:ca;B=N[A+88>>2];E=Q(Q(E*f)+Q(Q(ja*t)+Q(q*D)));D=Q((E<Q(0)?Q(-B):B)*E);E=N[A+80>>2];ja=Q(-E);B=E;E=Q(Q(_*f)+Q(Q(fa*t)+Q(q*S)));f=Q(Q(O*f)+Q(Q(ha*t)+Q(q*ba)));q=N[A+84>>2];f=Q(D+Q(Q((E<Q(0)?ja:B)*E)+Q(f*(f<Q(0)?Q(-q):q))));q=N[A+96>>2];f=Q(ca+(f>q?f:q));q=Q(da+f);f=Q(f-da);if((f>q?q:f)>j){break p}}J[7972]=J[7972]+1;Cc(x,p,i,i+92|0,i+88|0,i- -64|0,i+48|0);Cc(A,s,i,i+84|0,i+80|0,i+32|0,i+16|0);f=N[i+88>>2];q=N[i+84>>2];if(f<q){break m}t=N[i+80>>2];E=N[i+92>>2];if(t<E){break m}f=Q(f-q);q=Q(t-E);z=f<q;f=z?f:q;if(!(f<j)){break p}ma=N[(z?i+32|0:i+16|0)>>2];ta=N[(z?i+48|0:i- -64|0)>>2];j=N[i+24>>2];o=N[i+40>>2];y=N[i+20>>2];C=N[i+36>>2];F=N[i+72>>2];M=N[i+56>>2];L=N[i+68>>2];q=N[i+52>>2];k=J[i+4>>2];J[g+240>>2]=J[i>>2];J[g+244>>2]=k;k=J[i+12>>2];J[g+248>>2]=J[i+8>>2];J[g+252>>2]=k;ua=z?q:L;va=z?M:F;na=z?C:y;oa=z?o:j;o=G;y=w;C=I;F=n;M=r;L=u;m=h;k=d;j=f}d=d+1|0;z=J[A+48>>2];if((d|0)<(z|0)){continue}break}d=J[x+48>>2]}h=h+1|0;if((h|0)<(d|0)){continue}break}if((m|k)<0){break o}u=Q(oa-va);w=Q(ma-ta);G=Q(na-ua);n=Q(Q(L*u)+Q(Q(F*w)+Q(G*M)));f=Q(0);I=Q(-Q(Q(C*u)+Q(Q(o*w)+Q(G*y))));r=Q(Q(L*C)+Q(Q(F*o)+Q(y*M)));j=Q(Q(1)-Q(r*r));q:{if(j==Q(0)){break q}f=Q(-1.0000000150474662e30);j=Q(Q(Q(I*r)+n)/j);if(j<Q(-1.0000000150474662e30)){break q}f=j;if(!(f>Q(1.0000000150474662e30))){break q}f=Q(1.0000000150474662e30)}q=Q(Q(f*r)+I);r:{if(q<Q(-1.0000000150474662e30)){j=Q(Q(r*Q(-1.0000000150474662e30))+n);if(j<Q(-1.0000000150474662e30)){q=Q(-1.0000000150474662e30);f=Q(-1.0000000150474662e30);break r}f=Q(1.0000000150474662e30);if(!(j>Q(1.0000000150474662e30))){q=Q(-1.0000000150474662e30);f=j;break r}q=Q(-1.0000000150474662e30);break r}if(!(q>Q(1.0000000150474662e30))){break r}f=Q(-1.0000000150474662e30);q=Q(1.0000000150474662e30);j=Q(Q(r*Q(1.0000000150474662e30))+n);if(j<Q(-1.0000000150474662e30)){break r}f=j;if(!(f>Q(1.0000000150474662e30))){break r}f=Q(1.0000000150474662e30)}J[i+76>>2]=0;C=Q(C*q);j=Q(C+Q(u-Q(L*f)));L=Q(o*q);o=Q(L+Q(w-Q(F*f)));F=Q(y*q);f=Q(F+Q(G-Q(M*f)));y=Q(Q(j*j)+Q(Q(o*o)+Q(f*f)));if(!(y>Q(1.1920928955078125e-7))){break o}n=j;M=Q(Y(y));j=Q(Q(1)/M);y=Q(n*j);N[i+72>>2]=y;f=Q(f*j);N[i+68>>2]=f;j=Q(o*j);N[i+64>>2]=j;if(Q(Q(y*Z)+Q(Q(j*W)+Q($*f)))<Q(0)){N[i+72>>2]=-y;N[i+68>>2]=-f;N[i+64>>2]=-j}J[i+60>>2]=0;N[i+56>>2]=oa+C;N[i+52>>2]=na+F;N[i+48>>2]=ma+L;ia[J[J[e>>2]+16>>2]](e,i- -64|0,i+48|0,Q(-M))}f=N[g+248>>2];j=N[g+240>>2];o=N[g+244>>2];if(!(Q(Q(Z*f)+Q(Q(W*j)+Q($*o)))<Q(0))){break i}J[g+252>>2]=0;N[g+248>>2]=-f;N[g+244>>2]=-o;N[g+240>>2]=-j;break i}V=0}ga=i+96|0;if(V){break h}break g}zb(V,g+408|0,g,J[d+20>>2],0);d=J[g+20>>2];J[g+248>>2]=J[g+16>>2];J[g+252>>2]=d;d=J[g+12>>2];J[g+240>>2]=J[g+8>>2];J[g+244>>2]=d;if(!K[g+36|0]){break g}l=N[g+32>>2];if(!(l<Q(0))){break g}}wa=J[U+52>>2];s=J[v+52>>2];xa=J[b+12>>2];k=J[c+12>>2];y=Q(l-aa);x=0;A=0;c=ga-48|0;ga=c;f=N[g+248>>2];l=N[g+240>>2];j=N[g+244>>2];N[c+44>>2]=N[g+252>>2];o=f;f=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(l*l)+Q(j*j))))));C=Q(o*f);N[c+40>>2]=C;F=Q(j*f);N[c+36>>2]=F;M=Q(l*f);N[c+32>>2]=M;b=J[s+36>>2];i=J[s+28>>2];s:{if((i|0)<=0){m=-1;break s}L=N[k+40>>2];r=N[k+36>>2];n=N[k+24>>2];u=N[k+20>>2];w=N[k+32>>2];G=N[k+16>>2];I=N[k+8>>2];q=N[k+4>>2];t=N[k>>2];d=0;f=Q(-3.4028234663852886e38);m=-1;while(1){h=b+P(d,36)|0;l=N[h+28>>2];j=N[h+20>>2];o=N[h+24>>2];l=Q(Q(Q(Q(L*l)+Q(Q(w*j)+Q(o*r)))*C)+Q(Q(Q(Q(I*l)+Q(Q(t*j)+Q(o*q)))*M)+Q(F*Q(Q(n*l)+Q(Q(G*j)+Q(o*u))))));h=l>f;f=h?l:f;m=h?d:m;d=d+1|0;if((i|0)!=(d|0)){continue}break}}J[c+20>>2]=0;J[c+12>>2]=0;J[c+16>>2]=0;H[c+24|0]=1;t:{pa=J[(b+P(m,36)|0)+4>>2];if((pa|0)<=0){break t}ya=b+P(m,36)|0;h=0;while(1){b=J[s+16>>2]+(J[J[ya+12>>2]+(A<<2)>>2]<<4)|0;f=N[b+8>>2];l=N[b>>2];j=N[b+4>>2];o=Q(Q(Q(f*N[k+40>>2])+Q(Q(l*N[k+32>>2])+Q(j*N[k+36>>2])))+N[k+56>>2]);C=Q(Q(Q(f*N[k+24>>2])+Q(Q(l*N[k+16>>2])+Q(j*N[k+20>>2])))+N[k+52>>2]);f=Q(Q(Q(f*N[k+8>>2])+Q(Q(l*N[k>>2])+Q(j*N[k+4>>2])))+N[k+48>>2]);u:{if((h|0)!=(x|0)){break u}z=h?h<<1:1;if((z|0)<=(h|0)){break u}if(z){J[8369]=J[8369]+1;b=ia[J[6782]](z<<4,16)|0}else{b=0}i=J[c+20>>2];v:{if((h|0)<=0){break v}U=0;d=0;if(h-1>>>0>=3){za=h&-4;V=0;while(1){p=d<<4;X=p+b|0;v=i+p|0;ea=J[v+4>>2];J[X>>2]=J[v>>2];J[X+4>>2]=ea;ea=J[v+12>>2];J[X+8>>2]=J[v+8>>2];J[X+12>>2]=ea;v=p|16;X=v+b|0;v=i+v|0;ea=J[v+12>>2];J[X+8>>2]=J[v+8>>2];J[X+12>>2]=ea;ea=J[v+4>>2];J[X>>2]=J[v>>2];J[X+4>>2]=ea;v=p|32;X=v+b|0;v=i+v|0;ea=J[v+12>>2];J[X+8>>2]=J[v+8>>2];J[X+12>>2]=ea;ea=J[v+4>>2];J[X>>2]=J[v>>2];J[X+4>>2]=ea;p=p|48;v=p+b|0;p=i+p|0;X=J[p+12>>2];J[v+8>>2]=J[p+8>>2];J[v+12>>2]=X;X=J[p+4>>2];J[v>>2]=J[p>>2];J[v+4>>2]=X;d=d+4|0;V=V+4|0;if((za|0)!=(V|0)){continue}break}}v=h&3;if(!v){break v}while(1){h=d<<4;p=h+b|0;h=h+i|0;V=J[h+4>>2];J[p>>2]=J[h>>2];J[p+4>>2]=V;V=J[h+12>>2];J[p+8>>2]=J[h+8>>2];J[p+12>>2]=V;d=d+1|0;U=U+1|0;if((v|0)!=(U|0)){continue}break}}if(!(i?!i|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](i)}J[c+20>>2]=b;H[c+24|0]=1;J[c+16>>2]=z}b=J[c+20>>2]+(x<<4)|0;J[b+12>>2]=0;N[b+8>>2]=o;N[b+4>>2]=C;N[b>>2]=f;x=J[c+12>>2]+1|0;J[c+12>>2]=x;A=A+1|0;if((pa|0)==(A|0)){break t}h=J[c+16>>2];continue}}if((m|0)>=0){ll(c+32|0,wa,xa,c+8|0,y,aa,e)}b=J[c+20>>2];if(!(b?!b|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ga=c+48|0}if(!K[a+16|0]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:d)+4|0);break a}if(J[v+4>>2]!=1){break f}J[g+244>>2]=0;h=J[c+12>>2];o=N[h+52>>2];y=N[h+20>>2];C=N[h+24>>2];F=N[h+56>>2];M=N[h+36>>2];L=N[h+40>>2];f=N[v- -64>>2];l=N[v+56>>2];j=N[v+60>>2];r=N[h+16>>2];n=N[h+32>>2];u=N[h+48>>2];w=N[h+8>>2];G=N[h>>2];I=N[h+4>>2];J[8369]=J[8369]+1;h=ia[J[6782]](16,16)|0;J[g+252>>2]=h;H[g+256|0]=1;J[g+248>>2]=1;J[h+12>>2]=0;N[h>>2]=u+Q(Q(f*w)+Q(Q(l*G)+Q(j*I)));N[h+8>>2]=F+Q(Q(f*L)+Q(Q(l*n)+Q(j*M)));N[h+4>>2]=o+Q(Q(f*C)+Q(Q(l*r)+Q(j*y)));i=J[g+244>>2];h=i+1|0;J[g+244>>2]=h;f=N[v+80>>2];k=J[c+12>>2];l=N[v+72>>2];j=N[v+76>>2];o=Q(Q(Q(f*N[k+40>>2])+Q(Q(l*N[k+32>>2])+Q(j*N[k+36>>2])))+N[k+56>>2]);y=Q(Q(Q(f*N[k+24>>2])+Q(Q(l*N[k+16>>2])+Q(j*N[k+20>>2])))+N[k+52>>2]);f=Q(Q(Q(f*N[k+8>>2])+Q(Q(l*N[k>>2])+Q(j*N[k+4>>2])))+N[k+48>>2]);w:{if(J[g+248>>2]!=(h|0)){break w}p=h?h<<1:1;if((p|0)<=(h|0)){break w}if(p){J[8369]=J[8369]+1;m=ia[J[6782]](p<<4,16)|0}x:{if((i|0)<0){break x}h=i+1|0;A=h&1;y:{if(!i){k=0;break y}z=h&-2;k=0;h=0;while(1){s=k<<4;x=s+m|0;i=s+J[g+252>>2]|0;X=J[i+4>>2];J[x>>2]=J[i>>2];J[x+4>>2]=X;X=J[i+12>>2];J[x+8>>2]=J[i+8>>2];J[x+12>>2]=X;i=s|16;s=i+m|0;i=i+J[g+252>>2]|0;x=J[i+4>>2];J[s>>2]=J[i>>2];J[s+4>>2]=x;x=J[i+12>>2];J[s+8>>2]=J[i+8>>2];J[s+12>>2]=x;k=k+2|0;h=h+2|0;if((z|0)!=(h|0)){continue}break}}if(!A){break x}h=k<<4;k=h+m|0;h=h+J[g+252>>2]|0;i=J[h+4>>2];J[k>>2]=J[h>>2];J[k+4>>2]=i;i=J[h+12>>2];J[k+8>>2]=J[h+8>>2];J[k+12>>2]=i}h=J[g+252>>2];if(!(h?!h|!K[g+256|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](h)}J[g+252>>2]=m;H[g+256|0]=1;J[g+248>>2]=p;h=J[g+244>>2]}h=J[g+252>>2]+(h<<4)|0;J[h+12>>2]=0;N[h+8>>2]=o;N[h+4>>2]=y;N[h>>2]=f;k=J[g+244>>2];h=k+1|0;J[g+244>>2]=h;f=N[v+96>>2];c=J[c+12>>2];l=N[v+88>>2];j=N[v+92>>2];o=Q(Q(Q(f*N[c+8>>2])+Q(Q(l*N[c>>2])+Q(j*N[c+4>>2])))+N[c+48>>2]);y=Q(Q(Q(f*N[c+40>>2])+Q(Q(l*N[c+32>>2])+Q(j*N[c+36>>2])))+N[c+56>>2]);f=Q(Q(Q(f*N[c+24>>2])+Q(Q(l*N[c+16>>2])+Q(j*N[c+20>>2])))+N[c+52>>2]);z:{if(J[g+248>>2]!=(h|0)){break z}c=h?h<<1:1;if((c|0)<=(h|0)){break z}h=0;if(c){J[8369]=J[8369]+1;h=ia[J[6782]](c<<4,16)|0}A:{if((k|0)<0){break A}m=k+1|0;x=m&1;B:{if(!k){k=0;break B}A=m&-2;k=0;m=0;while(1){p=k<<4;s=p+h|0;i=p+J[g+252>>2]|0;z=J[i+4>>2];J[s>>2]=J[i>>2];J[s+4>>2]=z;z=J[i+12>>2];J[s+8>>2]=J[i+8>>2];J[s+12>>2]=z;i=p|16;p=i+h|0;i=i+J[g+252>>2]|0;s=J[i+4>>2];J[p>>2]=J[i>>2];J[p+4>>2]=s;s=J[i+12>>2];J[p+8>>2]=J[i+8>>2];J[p+12>>2]=s;k=k+2|0;m=m+2|0;if((A|0)!=(m|0)){continue}break}}if(!x){break A}k=k<<4;m=k+h|0;k=k+J[g+252>>2]|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;i=J[k+12>>2];J[m+8>>2]=J[k+8>>2];J[m+12>>2]=i}k=J[g+252>>2];if(!(k?!k|!K[g+256|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](k)}J[g+252>>2]=h;H[g+256|0]=1;J[g+248>>2]=c;h=J[g+244>>2]}c=J[g+252>>2]+(h<<4)|0;J[c+12>>2]=0;N[c+8>>2]=y;N[c+4>>2]=f;N[c>>2]=o;J[g+244>>2]=J[g+244>>2]+1;f=N[J[a+20>>2]+752>>2];zb(V,g+408|0,g+320|0,J[d+20>>2],0);l=N[V+12>>2];j=N[V+4>>2];o=N[V+8>>2];y=Q(Q(l*l)+Q(Q(j*j)+Q(o*o)));if(y>Q(1.1920928955078125e-7)){J[g+316>>2]=0;n=l;l=Q(Q(1)/y);N[g+312>>2]=n*l;N[g+308>>2]=o*l;N[g+304>>2]=j*l;l=N[V+56>>2];j=Q(ia[J[J[U>>2]+48>>2]](U));o=Q(ia[J[J[v>>2]+48>>2]](v));ll(g+304|0,J[U+52>>2],J[b+12>>2],g+240|0,Q(Q(Q(l-j)-o)-f),f,e)}C:{if(!K[a+16|0]){break C}a=J[e+4>>2];if(!J[a+748>>2]){break C}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:d)+4|0)}a=J[g+252>>2];if(!a|!K[g+256|0]){break a}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}break a}zb(V,g+408|0,e,J[d+20>>2],0);D:{if(!J[a+28>>2]|J[J[e+4>>2]+748>>2]>=J[a+32>>2]){break D}f=N[V+12>>2];l=N[V+4>>2];j=N[V+8>>2];o=Q(Q(f*f)+Q(Q(l*l)+Q(j*j)));if(!(o>Q(1.1920928955078125e-7))){break D}n=j;j=Q(Q(1)/o);y=Q(n*j);r=Q(l*j);n=Q(f*j);E:{if(Q(R(n))>Q(.7071067690849304)){l=Q(Q(1)/Q(Y(Q(Q(y*y)+Q(n*n)))));f=Q(y*l);l=Q(l*Q(-n));j=Q(0);break E}f=Q(Q(1)/Q(Y(Q(Q(r*r)+Q(y*y)))));l=Q(r*f);j=Q(f*Q(-y));f=Q(0)}x=g+456|0;A=g+440|0;z=g+424|0;o=Q(ia[J[J[U>>2]+16>>2]](U));C=Q(ia[J[J[v>>2]+16>>2]](v));F=N[6778];v=o<C;F:{if(v){h=J[g+420>>2];J[g+248>>2]=J[g+416>>2];J[g+252>>2]=h;h=J[g+412>>2];J[g+240>>2]=J[g+408>>2];J[g+244>>2]=h;k=A;m=x;o=Q(T(Q(F/o),Q(.39269909262657166)));h=z;break F}h=J[g+484>>2];J[g+248>>2]=J[g+480>>2];J[g+252>>2]=h;h=J[g+476>>2];J[g+240>>2]=J[g+472>>2];J[g+244>>2]=h;k=p;m=s;o=Q(T(Q(F/C),Q(.39269909262657166)));h=i}U=J[h+12>>2];J[g+264>>2]=J[h+8>>2];J[g+268>>2]=U;U=J[h+4>>2];J[g+256>>2]=J[h>>2];J[g+260>>2]=U;h=J[k+12>>2];J[g+280>>2]=J[k+8>>2];J[g+284>>2]=h;h=J[k+4>>2];J[g+272>>2]=J[k>>2];J[g+276>>2]=h;h=J[m+12>>2];J[g+296>>2]=J[m+8>>2];J[g+300>>2]=h;h=J[m+4>>2];J[g+288>>2]=J[m>>2];J[g+292>>2]=h;h=J[a+28>>2];if((h|0)<=0){break D}o=Q(o*Q(.5));F=Ga(o);C=Ha(o);o=Q(Q(f*f)+Q(Q(j*j)+Q(l*l)));if(!(o>Q(1.1920928955078125e-7))){break D}B=f;f=Q(F/Q(Y(o)));F=Q(B*f);M=Q(l*f);L=Q(j*f);ja=Q(Y(Q(Q(n*n)+Q(Q(r*r)+Q(y*y)))));k=0;while(1){o=Q(Q(Q(Q(6.2831854820251465)/Q(h|0))*Q(k|0))*Q(.5));j=Q(Ga(o)/ja);f=Q(n*j);l=Q(y*j);j=Q(r*j);o=Ha(o);G:{if(!v){h=J[b+12>>2];m=J[h+12>>2];J[g+416>>2]=J[h+8>>2];J[g+420>>2]=m;m=J[h+4>>2];J[g+408>>2]=J[h>>2];J[g+412>>2]=m;m=J[h+28>>2];J[z+8>>2]=J[h+24>>2];J[z+12>>2]=m;m=J[h+20>>2];J[z>>2]=J[h+16>>2];J[z+4>>2]=m;m=J[h+44>>2];J[A+8>>2]=J[h+40>>2];J[A+12>>2]=m;m=J[h+36>>2];J[A>>2]=J[h+32>>2];J[A+4>>2]=m;m=J[h+60>>2];J[x+8>>2]=J[h+56>>2];J[x+12>>2]=m;m=J[h+52>>2];J[x>>2]=J[h+48>>2];J[x+4>>2]=m;h=J[c+12>>2];G=N[h+36>>2];I=N[h+20>>2];q=N[h+40>>2];t=N[h+24>>2];Z=N[h+32>>2];$=N[h>>2];W=N[h+16>>2];E=N[h+4>>2];_=N[h+8>>2];J[g+516>>2]=0;J[g+500>>2]=0;J[g+484>>2]=0;O=Q(Q(j*F)+Q(Q(Q(o*M)-Q(C*l))-Q(f*L)));D=Q(Q(f*F)+Q(Q(l*M)+Q(Q(o*C)+Q(L*j))));S=Q(Q(f*M)+Q(Q(Q(o*L)-Q(C*j))-Q(l*F)));aa=Q(Q(l*L)+Q(Q(Q(o*F)-Q(C*f))-Q(j*M)));u=Q(Q(Q(O*f)+Q(Q(D*j)+Q(o*S)))-Q(aa*l));w=Q(Q(Q(Q(D*o)-Q(j*S))-Q(O*l))-Q(aa*f));ba=Q(Q(Q(S*l)+Q(Q(D*f)+Q(o*aa)))-Q(O*j));f=Q(Q(Q(aa*j)+Q(Q(D*l)+Q(o*O)))-Q(S*f));l=Q(Q(2)/Q(Q(w*w)+Q(Q(ba*ba)+Q(Q(u*u)+Q(f*f)))));D=Q(u*l);S=Q(u*D);j=Q(f*l);aa=Q(f*j);o=Q(Q(1)-Q(S+aa));l=Q(ba*l);fa=Q(u*l);ha=Q(w*j);O=Q(fa-ha);da=Q(f*l);D=Q(w*D);f=Q(da+D);N[g+512>>2]=Q(q*o)+Q(Q(_*O)+Q(t*f));N[g+508>>2]=Q(G*o)+Q(Q(E*O)+Q(f*I));N[g+504>>2]=Q(Z*o)+Q(Q($*O)+Q(f*W));f=Q(da-D);o=Q(u*j);u=Q(w*l);j=Q(o+u);w=Q(ba*l);l=Q(Q(1)-Q(S+w));N[g+496>>2]=Q(q*f)+Q(Q(_*j)+Q(t*l));N[g+492>>2]=Q(G*f)+Q(Q(E*j)+Q(l*I));N[g+488>>2]=Q(Z*f)+Q(Q($*j)+Q(l*W));f=Q(fa+ha);l=Q(Q(1)-Q(aa+w));j=Q(o-u);N[g+480>>2]=Q(q*f)+Q(Q(_*l)+Q(t*j));N[g+476>>2]=Q(G*f)+Q(Q(E*l)+Q(j*I));N[g+472>>2]=Q(Z*f)+Q(Q($*l)+Q(j*W));break G}h=J[b+12>>2];G=N[h+36>>2];I=N[h+20>>2];q=N[h+40>>2];t=N[h+24>>2];Z=N[h+32>>2];$=N[h>>2];W=N[h+16>>2];E=N[h+4>>2];_=N[h+8>>2];J[g+452>>2]=0;J[g+436>>2]=0;J[g+420>>2]=0;O=Q(Q(j*F)+Q(Q(Q(o*M)-Q(C*l))-Q(f*L)));D=Q(Q(f*F)+Q(Q(l*M)+Q(Q(o*C)+Q(L*j))));S=Q(Q(f*M)+Q(Q(Q(o*L)-Q(C*j))-Q(l*F)));aa=Q(Q(l*L)+Q(Q(Q(o*F)-Q(C*f))-Q(j*M)));u=Q(Q(Q(O*f)+Q(Q(D*j)+Q(o*S)))-Q(aa*l));w=Q(Q(Q(Q(D*o)-Q(j*S))-Q(O*l))-Q(aa*f));ba=Q(Q(Q(S*l)+Q(Q(D*f)+Q(o*aa)))-Q(O*j));f=Q(Q(Q(aa*j)+Q(Q(D*l)+Q(o*O)))-Q(S*f));l=Q(Q(2)/Q(Q(w*w)+Q(Q(ba*ba)+Q(Q(u*u)+Q(f*f)))));D=Q(u*l);S=Q(u*D);j=Q(f*l);aa=Q(f*j);o=Q(Q(1)-Q(S+aa));l=Q(ba*l);fa=Q(u*l);ha=Q(w*j);O=Q(fa-ha);da=Q(f*l);D=Q(w*D);f=Q(da+D);N[g+448>>2]=Q(q*o)+Q(Q(_*O)+Q(t*f));N[g+444>>2]=Q(G*o)+Q(Q(E*O)+Q(f*I));N[g+440>>2]=Q(Z*o)+Q(Q($*O)+Q(f*W));f=Q(da-D);o=Q(u*j);u=Q(w*l);j=Q(o+u);w=Q(ba*l);l=Q(Q(1)-Q(S+w));N[g+432>>2]=Q(q*f)+Q(Q(_*j)+Q(t*l));N[g+428>>2]=Q(G*f)+Q(Q(E*j)+Q(l*I));N[g+424>>2]=Q(Z*f)+Q(Q($*j)+Q(l*W));f=Q(fa+ha);l=Q(Q(1)-Q(aa+w));j=Q(o-u);N[g+416>>2]=Q(q*f)+Q(Q(_*l)+Q(t*j));N[g+412>>2]=Q(G*f)+Q(Q(E*l)+Q(j*I));N[g+408>>2]=Q(Z*f)+Q(Q($*l)+Q(j*W));h=J[c+12>>2];m=J[h+4>>2];J[g+472>>2]=J[h>>2];J[g+476>>2]=m;m=J[h+12>>2];J[g+480>>2]=J[h+8>>2];J[g+484>>2]=m;m=J[h+28>>2];J[i+8>>2]=J[h+24>>2];J[i+12>>2]=m;m=J[h+20>>2];J[i>>2]=J[h+16>>2];J[i+4>>2]=m;m=J[h+44>>2];J[p+8>>2]=J[h+40>>2];J[p+12>>2]=m;m=J[h+36>>2];J[p>>2]=J[h+32>>2];J[p+4>>2]=m;m=J[h+60>>2];J[s+8>>2]=J[h+56>>2];J[s+12>>2]=m;m=J[h+52>>2];J[s>>2]=J[h+48>>2];J[s+4>>2]=m}h=J[d+20>>2];J[g+32>>2]=e;J[g>>2]=9312;m=J[g+420>>2];J[g+44>>2]=J[g+416>>2];J[g+48>>2]=m;m=J[g+412>>2];J[g+36>>2]=J[g+408>>2];J[g+40>>2]=m;m=J[z+12>>2];J[g+60>>2]=J[z+8>>2];J[g+64>>2]=m;m=J[z+4>>2];J[g+52>>2]=J[z>>2];J[g+56>>2]=m;m=J[A+12>>2];J[g+76>>2]=J[A+8>>2];J[g+80>>2]=m;m=J[A+4>>2];J[g+68>>2]=J[A>>2];J[g+72>>2]=m;m=J[x+12>>2];J[g+92>>2]=J[x+8>>2];J[g+96>>2]=m;m=J[x+4>>2];J[g+84>>2]=J[x>>2];J[g+88>>2]=m;m=J[g+484>>2];J[g+108>>2]=J[g+480>>2];J[g+112>>2]=m;m=J[g+476>>2];J[g+100>>2]=J[g+472>>2];J[g+104>>2]=m;m=J[i+12>>2];J[g+124>>2]=J[i+8>>2];J[g+128>>2]=m;m=J[i+4>>2];J[g+116>>2]=J[i>>2];J[g+120>>2]=m;m=J[p+12>>2];J[g+140>>2]=J[p+8>>2];J[g+144>>2]=m;m=J[p+4>>2];J[g+132>>2]=J[p>>2];J[g+136>>2]=m;m=J[s+12>>2];J[g+156>>2]=J[s+8>>2];J[g+160>>2]=m;m=J[s+4>>2];J[g+148>>2]=J[s>>2];J[g+152>>2]=m;m=J[g+252>>2];J[g+172>>2]=J[g+248>>2];J[g+176>>2]=m;m=J[g+244>>2];J[g+164>>2]=J[g+240>>2];J[g+168>>2]=m;m=J[g+268>>2];J[g+188>>2]=J[g+264>>2];J[g+192>>2]=m;m=J[g+260>>2];J[g+180>>2]=J[g+256>>2];J[g+184>>2]=m;m=J[g+284>>2];J[g+204>>2]=J[g+280>>2];J[g+208>>2]=m;m=J[g+276>>2];J[g+196>>2]=J[g+272>>2];J[g+200>>2]=m;m=J[g+292>>2];J[g+212>>2]=J[g+288>>2];J[g+216>>2]=m;m=J[g+300>>2];J[g+220>>2]=J[g+296>>2];J[g+224>>2]=m;J[g+232>>2]=h;H[g+228|0]=v;zb(V,g+408|0,g,h,0);h=J[a+28>>2];k=k+1|0;if((h|0)>(k|0)){continue}break}}if(!K[a+16|0]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:d)+4|0)}ga=g+544|0}function Vj(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=0,r=Q(0),s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0,A=0,B=0,C=Q(0),D=Q(0),E=0,F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=0,O=Q(0),S=Q(0),T=Q(0),U=0,V=Q(0),W=Q(0),X=Q(0),Z=0,_=0,$=Q(0),aa=Q(0),ba=0,ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0);u=ga+-64|0;ga=u;J[u+52>>2]=0;_=1;H[u+56|0]=1;J[u+44>>2]=0;J[u+48>>2]=0;J[u+32>>2]=0;J[u+36>>2]=0;J[u+24>>2]=0;J[u+28>>2]=0;j=J[b+4>>2];d=j>>>0>8?j:8;if((d|0)>=0){J[8369]=J[8369]+1;q=ia[J[6782]](d<<4,16)|0;j=J[b+4>>2]}g=a;h=J[b+8>>2];n=J[b+12>>2];p=N[b+16>>2];a:{if(!j){break a}d=J[g+24>>2];if((d|0)<0){a=J[g+32>>2];if(J[g+28>>2]<0){if(!(a?!a|!K[g+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[g+36|0]=1;J[g+28>>2]=0;J[g+32>>2]=0;a=0}k=a;a=d<<2;qa(k+a|0,0,0-a|0)}J[g+24>>2]=0;J[u+4>>2]=0;J[u+16>>2]=1065353216;J[u+8>>2]=1065353216;J[u+12>>2]=1065353216;m=Q(-3.4028234663852886e38);v=Q(3.4028234663852886e38);w=Q(3.4028234663852886e38);y=Q(3.4028234663852886e38);t=Q(-3.4028234663852886e38);l=Q(-3.4028234663852886e38);a=h;while(1){r=N[a+8>>2];m=m<r?r:m;v=r<v?r:v;r=N[a+4>>2];t=r>t?r:t;w=r<w?r:w;r=N[a>>2];l=l<r?r:l;y=r<y?r:y;a=a+n|0;e=e+1|0;if((j|0)!=(e|0)){continue}break}r=Q(m-v);v=Q(Q(r*Q(.5))+v);m=Q(t-w);x=Q(Q(m*Q(.5))+w);w=Q(l-y);C=Q(Q(w*Q(.5))+y);b:{c:{if(!(j>>>0<3|w<Q(9.999999974752427e-7)|m<Q(9.999999974752427e-7))){if(!(r<Q(9.999999974752427e-7))){break c}}y=Q(.009999999776482582);l=Q(.009999999776482582);t=Q(.009999999776482582);p=w>Q(9.999999974752427e-7)?w<Q(3.4028234663852886e38)?w:Q(3.4028234663852886e38):Q(3.4028234663852886e38);p=m>Q(9.999999974752427e-7)?m<p?m:p:p;p=r>Q(9.999999974752427e-7)?p>r?r:p:p;d:{if(p==Q(3.4028234663852886e38)){break d}y=Q(p*Q(.05000000074505806));l=m<Q(9.999999974752427e-7)?y:m;t=w<Q(9.999999974752427e-7)?y:w;if(r<Q(9.999999974752427e-7)){break d}y=r}p=Q(v+y);r=Q(v-y);v=Q(x+l);w=Q(x-l);m=Q(C-t);y=Q(C+t);break b}N[u+16>>2]=r;N[u+12>>2]=m;N[u+8>>2]=w;l=Q(Q(1)/r);t=Q(v*l);y=x;x=Q(Q(1)/m);v=Q(y*x);y=C;C=Q(Q(1)/w);w=Q(y*C);while(1){r=Q(l*N[h+8>>2]);y=Q(x*N[h+4>>2]);m=Q(C*N[h>>2]);a=0;d=0;e:{f:{g:{if(!f){break g}while(1){h:{d=(a<<4)+q|0;D=N[d>>2];if(!(p>Q(R(Q(D-m))))){break h}G=N[d+4>>2];if(!(p>Q(R(Q(G-y))))){break h}L=N[d+8>>2];if(!(p>Q(R(Q(L-r))))){break h}F=Q(r-t);V=Q(F*F);F=Q(m-w);T=Q(F*F);F=Q(y-v);L=Q(L-t);D=Q(D-w);I=Q(D*D);D=Q(G-v);if(Q(V+Q(T+Q(F*F)))>Q(Q(L*L)+Q(I+Q(D*D)))){N[d>>2]=m;N[d+4>>2]=y;N[d+8>>2]=r}d=a;break g}a=a+1|0;if((f|0)!=(a|0)){continue}break}d=f;break f}if((d|0)!=(f|0)){break e}}a=(f<<4)+q|0;N[a+8>>2]=r;N[a+4>>2]=y;N[a>>2]=m;J[u+4>>2]=f+1}f=J[g+24>>2];i:{if((f|0)!=J[g+28>>2]){break i}i=f?f<<1:1;if((i|0)<=(f|0)){break i}j:{if(!i){e=0;break j}J[8369]=J[8369]+1;e=ia[J[6782]](i<<2,16)|0;f=J[g+24>>2]}k=J[g+32>>2];k:{l:{if((f|0)>0){s=0;a=0;if(f-1>>>0>=3){A=f&-4;B=0;while(1){o=a<<2;J[o+e>>2]=J[k+o>>2];M=o|4;J[M+e>>2]=J[k+M>>2];M=o|8;J[M+e>>2]=J[k+M>>2];o=o|12;J[o+e>>2]=J[k+o>>2];a=a+4|0;B=B+4|0;if((A|0)!=(B|0)){continue}break}}f=f&3;if(!f){break l}while(1){o=a<<2;J[o+e>>2]=J[k+o>>2];a=a+1|0;s=s+1|0;if((f|0)!=(s|0)){continue}break}break l}if(!k){break k}}if(k?K[g+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](k)}f=J[g+24>>2]}J[g+32>>2]=e;H[g+36|0]=1;J[g+28>>2]=i}h=h+n|0;J[J[g+32>>2]+(f<<2)>>2]=d;J[g+24>>2]=J[g+24>>2]+1;f=J[u+4>>2];U=U+1|0;if((j|0)!=(U|0)){continue}break}y=Q(-3.4028234663852886e38);r=Q(3.4028234663852886e38);m:{if(!f){v=Q(3.4028234663852886e38);w=Q(3.4028234663852886e38);m=Q(-3.4028234663852886e38);t=Q(-3.4028234663852886e38);break m}a=0;v=Q(3.4028234663852886e38);w=Q(3.4028234663852886e38);m=Q(-3.4028234663852886e38);t=Q(-3.4028234663852886e38);while(1){d=(a<<4)+q|0;l=N[d+8>>2];y=l>y?l:y;r=l<r?l:r;l=N[d+4>>2];m=l>m?l:m;v=l<v?l:v;l=N[d>>2];t=l>t?l:t;w=l<w?l:w;a=a+1|0;if((f|0)!=(a|0)){continue}break}}y=Q(y-r);l=Q(t-w);m=Q(m-v);if(!(l<Q(9.999999974752427e-7)|m<Q(9.999999974752427e-7)|y<Q(9.999999974752427e-7))){if(f>>>0>2){break a}}x=Q(Q(y*Q(.5))+r);C=Q(Q(m*Q(.5))+v);D=Q(Q(l*Q(.5))+w);t=Q(.009999999776482582);w=Q(.009999999776482582);r=Q(.009999999776482582);v=l>=Q(9.999999974752427e-7)?l<Q(3.4028234663852886e38)?l:Q(3.4028234663852886e38):Q(3.4028234663852886e38);v=m>=Q(9.999999974752427e-7)?m<v?m:v:v;v=y>=Q(9.999999974752427e-7)?v>y?y:v:v;n:{if(v==Q(3.4028234663852886e38)){break n}r=Q(v*Q(.05000000074505806));w=m<Q(9.999999974752427e-7)?r:m;t=l<Q(9.999999974752427e-7)?r:l;if(y<Q(9.999999974752427e-7)){break n}r=y}p=Q(x+r);r=Q(x-r);v=Q(C+w);w=Q(C-w);m=Q(D-t);y=Q(D+t)}N[q+112>>2]=m;N[q+96>>2]=y;N[q+80>>2]=y;N[q+64>>2]=m;N[q+48>>2]=m;N[q+32>>2]=y;N[q+16>>2]=y;N[q+8>>2]=r;N[q+4>>2]=w;N[q>>2]=m;N[q+120>>2]=p;N[q+116>>2]=v;N[q+104>>2]=p;N[q+100>>2]=v;N[q+88>>2]=p;N[q+84>>2]=w;N[q+72>>2]=p;N[q+68>>2]=w;N[q+56>>2]=r;N[q+52>>2]=v;N[q+40>>2]=r;N[q+36>>2]=v;N[q+24>>2]=r;N[q+20>>2]=w;J[u+4>>2]=8}o:{if(!j){break o}o=J[u+4>>2];p:{if(!o){break p}d=0;r=N[u+16>>2];y=N[u+12>>2];m=N[u+8>>2];if((o|0)!=1){f=o&-2;while(1){h=d<<4;a=h+q|0;N[a>>2]=m*N[a>>2];N[a+4>>2]=y*N[a+4>>2];N[a+8>>2]=r*N[a+8>>2];a=(h|16)+q|0;N[a>>2]=m*N[a>>2];N[a+4>>2]=y*N[a+4>>2];N[a+8>>2]=r*N[a+8>>2];d=d+2|0;z=z+2|0;if((f|0)!=(z|0)){continue}break}}if(!(o&1)){break p}a=(d<<4)+q|0;N[a>>2]=m*N[a>>2];N[a+4>>2]=y*N[a+4>>2];N[a+8>>2]=r*N[a+8>>2]}i=0;s=0;k=0;z=0;j=g;M=J[b+20>>2];d=0;n=ga+-64|0;ga=n;q:{if((o|0)<4){break q}m=N[q+8>>2];w=N[q+4>>2];t=N[q>>2];J[8369]=J[8369]+1;f=o<<2;a=ia[J[6782]](f,16)|0;J[n+44>>2]=0;J[8369]=J[8369]+1;h=ia[J[6782]](f,16)|0;J[n+52>>2]=h;H[n+56|0]=1;J[n+48>>2]=o;r=m;y=w;v=t;e=o;s=e;while(1){r:{if((d|0)!=(e|0)){f=h;e=d;break r}A=e?e<<1:1;if((A|0)<=(e|0)){f=h;break r}if(A){J[8369]=J[8369]+1;f=ia[J[6782]](A<<2,16)|0}else{f=0}s:{t:{if((e|0)>0){U=e&3;B=0;d=0;if(e-1>>>0>=3){ba=e&-4;e=0;while(1){g=d<<2;J[g+f>>2]=J[g+h>>2];Z=g|4;J[Z+f>>2]=J[h+Z>>2];Z=g|8;J[Z+f>>2]=J[h+Z>>2];g=g|12;J[g+f>>2]=J[g+h>>2];d=d+4|0;e=e+4|0;if((ba|0)!=(e|0)){continue}break}}if(!U){break t}while(1){g=d<<2;J[g+f>>2]=J[g+h>>2];d=d+1|0;B=B+1|0;if((U|0)!=(B|0)){continue}break}break t}if(!h){break s}}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}e=J[n+44>>2]}J[n+52>>2]=f;H[n+56|0]=1;J[n+48>>2]=A}J[(e<<2)+f>>2]=1;J[n+44>>2]=J[n+44>>2]+1;u:{if((i|0)!=(s|0)){g=a;break u}s=i?i<<1:1;if(s>>>0<=i>>>0){g=a;s=i;break u}J[8369]=J[8369]+1;g=ia[J[6782]](s<<2,16)|0;v:{if(i){B=0;d=0;if(i-1>>>0>=3){A=i&2147483644;e=0;while(1){h=d<<2;J[h+g>>2]=J[a+h>>2];U=h|4;J[U+g>>2]=J[a+U>>2];U=h|8;J[U+g>>2]=J[a+U>>2];h=h|12;J[h+g>>2]=J[a+h>>2];d=d+4|0;e=e+4|0;if((A|0)!=(e|0)){continue}break}}h=i&3;if(!h){break v}while(1){e=d<<2;J[e+g>>2]=J[a+e>>2];d=d+1|0;B=B+1|0;if((h|0)!=(B|0)){continue}break}break v}if(a){break v}s=1;break u}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}J[(i<<2)+g>>2]=0;a=(i<<4)+q|0;l=N[a+8>>2];r=l>r?l:r;p=N[a+4>>2];y=p>y?p:y;x=N[a>>2];v=v<x?x:v;m=l<m?l:m;w=p<w?p:w;t=t>x?x:t;i=i+1|0;if((o|0)!=(i|0)){e=J[n+48>>2];d=J[n+44>>2];h=f;a=g;continue}break}a=ga+-64|0;ga=a;J[a+24>>2]=1065353216;J[a+28>>2]=0;J[a+16>>2]=1008981770;J[a+20>>2]=1017370378;s=n+40|0;e=Nb(q,o,a+16|0,s);J[a+12>>2]=0;N[a+8>>2]=-N[a+24>>2];N[a+4>>2]=-N[a+20>>2];N[a>>2]=-N[a+16>>2];i=Nb(q,o,a,s);f=(e<<4)+q|0;x=N[f>>2];B=(i<<4)+q|0;C=N[B>>2];p=N[f+4>>2];D=N[B+4>>2];l=N[f+8>>2];G=N[B+8>>2];J[a+28>>2]=0;l=Q(l-G);N[a+24>>2]=l;p=Q(p-D);N[a+20>>2]=p;x=Q(x-C);N[a+16>>2]=x;w:{x:{if((e|0)!=(i|0)){if(l!=Q(0)|p!=Q(0)|x!=Q(0)){break x}}J[n+24>>2]=-1;J[n+28>>2]=-1;J[n+32>>2]=-1;J[n+36>>2]=-1;break w}J[a+60>>2]=0;J[a+44>>2]=0;C=Q(Q(p*Q(-.019999999552965164))-x);N[a+56>>2]=C;L=Q(x*Q(0));F=Q(l*Q(.019999999552965164));D=Q(L+F);N[a+52>>2]=D;O=Q(p*Q(-0));G=Q(l+O);N[a+48>>2]=G;d=a+48|0;h=a+32|0;I=Q(Y(Q(Q(C*C)+Q(Q(G*G)+Q(D*D)))));p=Q(p+Q(x*Q(-.019999999552965164)));x=Q(F+O);l=Q(L-l);C=Q(Y(Q(Q(p*p)+Q(Q(x*x)+Q(l*l)))));y:{if(I<C){I=l;l=Q(Q(1)/C);N[a+36>>2]=I*l;N[a+32>>2]=x*l;I=Q(p*l);break y}A=J[d+4>>2];J[h>>2]=J[d>>2];J[h+4>>2]=A;A=J[d+12>>2];J[h+8>>2]=J[d+8>>2];J[h+12>>2]=A;p=N[a+40>>2];x=N[a+32>>2];C=N[a+36>>2];l=Q(Q(1)/Q(Y(Q(Q(p*p)+Q(Q(x*x)+Q(C*C))))));N[a+36>>2]=C*l;N[a+32>>2]=x*l;I=Q(p*l)}N[a+40>>2]=I;h=Nb(q,o,h,s);if(!((e|0)!=(h|0)&(h|0)!=(i|0))){J[a+12>>2]=0;N[a+8>>2]=-N[a+40>>2];N[a+4>>2]=-N[a+36>>2];N[a>>2]=-N[a+32>>2];h=Nb(q,o,a,s)}if(!((e|0)!=(h|0)&(h|0)!=(i|0))){J[n+24>>2]=-1;J[n+28>>2]=-1;J[n+32>>2]=-1;J[n+36>>2]=-1;break w}A=(h<<4)+q|0;G=N[A+4>>2];x=N[A+8>>2];l=N[A>>2];L=N[f+4>>2];C=N[f+8>>2];p=N[f>>2];J[a+44>>2]=0;J[a+60>>2]=0;l=Q(l-p);N[a+32>>2]=l;p=N[a+24>>2];x=Q(x-C);N[a+40>>2]=x;C=N[a+16>>2];D=N[a+20>>2];G=Q(G-L);N[a+36>>2]=G;L=Q(Q(l*D)-Q(C*G));D=Q(Q(G*p)-Q(D*x));p=Q(Q(x*C)-Q(p*l));l=Q(Q(1)/Q(Y(Q(Q(L*L)+Q(Q(D*D)+Q(p*p))))));N[a+56>>2]=L*l;N[a+52>>2]=p*l;N[a+48>>2]=D*l;d=Nb(q,o,d,s);if(!(!((h|0)==(d|0)|(d|0)==(e|0))&(d|0)!=(i|0))){J[a+12>>2]=0;N[a+8>>2]=-N[a+56>>2];N[a+4>>2]=-N[a+52>>2];N[a>>2]=-N[a+48>>2];d=Nb(q,o,a,s)}if(!(!((d|0)==(h|0)|(d|0)==(e|0))&(d|0)!=(i|0))){J[n+24>>2]=-1;J[n+28>>2]=-1;J[n+32>>2]=-1;J[n+36>>2]=-1;break w}s=(d<<4)+q|0;C=N[s+8>>2];D=N[s>>2];G=N[s+4>>2];L=N[B+4>>2];F=N[A+4>>2];l=N[f+4>>2];O=N[B+8>>2];S=N[A>>2];W=N[A+8>>2];p=N[f+8>>2];X=N[B>>2];x=N[f>>2];J[n+28>>2]=i;J[n+24>>2]=e;T=Q(C-p);C=Q(X-x);F=Q(F-l);S=Q(S-x);L=Q(L-l);I=Q(D-x);x=Q(W-p);p=Q(O-p);f=Q(Q(T*Q(Q(C*F)-Q(S*L)))+Q(Q(I*Q(Q(L*x)-Q(F*p)))+Q(Q(G-l)*Q(Q(p*S)-Q(x*C)))))<Q(0);J[n+36>>2]=f?h:d;J[n+32>>2]=f?d:h}ga=a- -64|0;z:{a=J[n+24>>2];if((a|0)==-1){s=0;break z}d=J[n+36>>2];e=(d<<4)+q|0;L=N[e>>2];f=J[n+32>>2];i=(f<<4)+q|0;F=N[i>>2];h=J[n+28>>2];s=(h<<4)+q|0;O=N[s>>2];B=(a<<4)+q|0;S=N[B>>2];W=N[e+4>>2];X=N[i+4>>2];ca=N[s+4>>2];da=N[B+4>>2];ea=N[e+8>>2];fa=N[i+8>>2];ha=N[s+8>>2];ja=N[B+8>>2];e=ec(j,f,d,h);J[e+12>>2]=2;J[e+16>>2]=3;s=1;J[e+20>>2]=1;e=ec(j,d,f,a);J[e+12>>2]=3;J[e+16>>2]=2;J[e+20>>2]=0;e=ec(j,a,h,d);J[e+12>>2]=0;J[e+16>>2]=1;J[e+20>>2]=3;a=ec(j,h,a,f);J[a+12>>2]=1;J[a+16>>2]=0;J[a+20>>2]=2;J[(d<<2)+g>>2]=1;J[(J[n+32>>2]<<2)+g>>2]=1;J[(J[n+28>>2]<<2)+g>>2]=1;J[(J[n+24>>2]<<2)+g>>2]=1;a=J[j+4>>2];if((a|0)>0){f=0;while(1){l=Q(0);p=Q(1);x=Q(0);a=J[J[j+12>>2]+(f<<2)>>2];d=(J[a+4>>2]<<4)+q|0;C=N[d>>2];h=(J[a>>2]<<4)+q|0;G=Q(C-N[h>>2]);e=(J[a+8>>2]<<4)+q|0;D=N[d+4>>2];V=Q(N[e+4>>2]-D);$=Q(N[e>>2]-C);D=Q(D-N[h+4>>2]);C=Q(Q(G*V)-Q($*D));T=D;D=N[d+8>>2];aa=Q(N[e+8>>2]-D);I=V;V=Q(D-N[h+8>>2]);D=Q(Q(T*aa)-Q(I*V));G=Q(Q(V*$)-Q(aa*G));V=Q(Y(Q(Q(C*C)+Q(Q(D*D)+Q(G*G)))));if(V!=Q(0)){p=Q(Q(1)/V);x=Q(C*p);l=Q(G*p);p=Q(D*p)}J[n+20>>2]=0;N[n+16>>2]=x;N[n+12>>2]=l;N[n+8>>2]=p;d=Nb(q,o,n+8|0,n+40|0);J[a+28>>2]=d;h=a;d=(d<<4)+q|0;a=(J[a>>2]<<4)+q|0;N[h+32>>2]=Q(N[n+16>>2]*Q(N[d+8>>2]-N[a+8>>2]))+Q(Q(N[n+8>>2]*Q(N[d>>2]-N[a>>2]))+Q(Q(N[d+4>>2]-N[a+4>>2])*N[n+12>>2]));a=J[j+4>>2];f=f+1|0;if((a|0)>(f|0)){continue}break}}h=M?M-4|0:999999996;if((h|0)<=0){break z}C=Q(Q(Q(Q(ja+ha)+fa)+ea)*Q(.25));D=Q(Q(Q(Q(da+ca)+X)+W)*Q(.25));G=Q(Q(Q(Q(S+O)+F)+L)*Q(.25));r=Q(r-m);m=Q(r*r);r=Q(v-t);t=Q(r*r);r=Q(y-w);r=Q(Q(Y(Q(m+Q(t+Q(r*r)))))*Q(.0010000000474974513));y=Q(r*Q(.009999999776482582));L=Q(Q(r*r)*Q(.10000000149011612));while(1){s=J[j+12>>2];d=0;f=0;if((a|0)!=1){B=a&2147483646;i=0;while(1){A=f<<2;e=J[A+s>>2];if(!(!e|!(N[d+32>>2]<N[e+32>>2])?d:0)){d=e}e=J[s+(A|4)>>2];if(!(!e|!(N[d+32>>2]<N[e+32>>2])?d:0)){d=e}f=f+2|0;i=i+2|0;if((B|0)!=(i|0)){continue}break}}A:{if(!(a&1)){break A}a=J[s+(f<<2)>>2];if(!a|!(N[d+32>>2]<N[a+32>>2])?d:0){break A}d=a}s=1;if(!(r<N[d+32>>2])|!d){break z}e=J[d+28>>2];J[(e<<2)+g>>2]=1;f=J[j+4>>2];B:{if(!f){break B}d=(e<<4)+q|0;while(1){f=f-1|0;a=J[J[j+12>>2]+(f<<2)>>2];C:{if(!a){break C}l=Q(0);p=Q(1);x=Q(0);i=(J[a+4>>2]<<4)+q|0;m=N[i>>2];B=(J[a>>2]<<4)+q|0;v=N[B>>2];w=Q(m-v);A=(J[a+8>>2]<<4)+q|0;t=N[i+4>>2];F=Q(N[A+4>>2]-t);O=Q(N[A>>2]-m);S=N[B+4>>2];t=Q(t-S);m=Q(Q(w*F)-Q(O*t));T=t;t=N[i+8>>2];W=Q(N[A+8>>2]-t);I=F;F=N[B+8>>2];X=Q(t-F);t=Q(Q(T*W)-Q(I*X));w=Q(Q(X*O)-Q(W*w));O=Q(Y(Q(Q(m*m)+Q(Q(t*t)+Q(w*w)))));if(O!=Q(0)){I=m;m=Q(Q(1)/O);x=Q(I*m);p=Q(t*m);l=Q(w*m)}if(!(y<Q(Q(x*Q(N[d+8>>2]-F))+Q(Q(p*Q(N[d>>2]-v))+Q(l*Q(N[d+4>>2]-S)))))){break C}Wj(j,a,e)}if(f){continue}break}a=J[j+4>>2];d=a;if(!a){break B}while(1){D:{M=J[j+12>>2];d=d-1|0;f=J[M+(d<<2)>>2];E:{if(!f){break E}i=J[f+8>>2];A=J[f>>2];B=J[f+4>>2];if(!((A|0)==(e|0)|(B|0)==(e|0))&(e|0)!=(i|0)){break D}l=Q(0);p=Q(1);x=Q(0);B=(B<<4)+q|0;m=N[B>>2];A=(A<<4)+q|0;F=N[A>>2];w=Q(m-F);i=(i<<4)+q|0;t=N[B+4>>2];v=Q(N[i+4>>2]-t);O=Q(N[i>>2]-m);S=N[A+4>>2];t=Q(t-S);m=Q(Q(w*v)-Q(O*t));T=t;t=N[B+8>>2];W=Q(N[i+8>>2]-t);I=v;X=N[A+8>>2];v=Q(t-X);t=Q(Q(T*W)-Q(I*v));w=Q(Q(v*O)-Q(W*w));v=Q(Y(Q(Q(m*m)+Q(Q(t*t)+Q(w*w)))));if(v!=Q(0)){I=m;m=Q(Q(1)/v);x=Q(I*m);p=Q(t*m);l=Q(w*m)}if(!(y<Q(Q(x*Q(C-X))+Q(Q(p*Q(G-F))+Q(Q(D-S)*l)))|v<L)){break E}Wj(j,J[M+(J[f+12>>2]<<2)>>2],e);a=J[j+4>>2];d=a}if(d){continue}}break}if(!a){break B}while(1){a=a-1|0;d=J[J[j+12>>2]+(a<<2)>>2];F:{if(!d){break F}if(J[d+28>>2]>=0){break B}l=Q(0);p=Q(1);x=Q(0);f=(J[d+4>>2]<<4)+q|0;m=N[f>>2];e=(J[d>>2]<<4)+q|0;w=Q(m-N[e>>2]);i=(J[d+8>>2]<<4)+q|0;t=N[f+4>>2];v=Q(N[i+4>>2]-t);F=Q(N[i>>2]-m);t=Q(t-N[e+4>>2]);m=Q(Q(w*v)-Q(F*t));T=t;t=N[f+8>>2];O=Q(N[i+8>>2]-t);I=v;v=Q(t-N[e+8>>2]);t=Q(Q(T*O)-Q(I*v));w=Q(Q(v*F)-Q(O*w));v=Q(Y(Q(Q(m*m)+Q(Q(t*t)+Q(w*w)))));if(v!=Q(0)){I=m;m=Q(Q(1)/v);x=Q(I*m);p=Q(t*m);l=Q(w*m)}J[n+20>>2]=0;N[n+16>>2]=x;N[n+12>>2]=l;N[n+8>>2]=p;f=Nb(q,o,n+8|0,n+40|0);J[d+28>>2]=f;if(J[(f<<2)+g>>2]){J[d+28>>2]=-1;break F}e=d;f=(f<<4)+q|0;d=(J[d>>2]<<4)+q|0;N[e+32>>2]=Q(N[n+16>>2]*Q(N[f+8>>2]-N[d+8>>2]))+Q(Q(N[n+8>>2]*Q(N[f>>2]-N[d>>2]))+Q(Q(N[f+4>>2]-N[d+4>>2])*N[n+12>>2]))}if(a){continue}break}}if((h|0)<2){break z}h=h-1|0;a=J[j+4>>2];continue}}a=J[n+52>>2];if(!(a?!a|!K[n+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}if(!g){break q}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}ga=n- -64|0;a=0;G:{if(!s){break G}a=J[j+4>>2];H:{if((a|0)<=0){h=0;break H}h=0;while(1){s=z<<2;n=J[s+J[j+12>>2]>>2];if(n){I:{J:{if((k|0)!=(E|0)){break J}d=k?k<<1:1;if((k|0)>=(d|0)){break J}if(d){J[8369]=J[8369]+1;a=ia[J[6782]](d<<2,16)|0}else{a=0}K:{if((k|0)>0){i=k&3;e=0;f=0;if(k-1>>>0>=3){B=k&-4;k=0;while(1){g=f<<2;J[g+a>>2]=J[g+h>>2];A=g|4;J[A+a>>2]=J[h+A>>2];A=g|8;J[A+a>>2]=J[h+A>>2];g=g|12;J[g+a>>2]=J[g+h>>2];f=f+4|0;k=k+4|0;if((B|0)!=(k|0)){continue}break}}if(!i){break K}while(1){g=f<<2;J[g+a>>2]=J[g+h>>2];f=f+1|0;e=e+1|0;if((i|0)!=(e|0)){continue}break}break K}if(!h){break I}}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}break I}d=k;a=h}J[(E<<2)+a>>2]=J[n>>2];n=J[s+J[j+12>>2]>>2];L:{M:{B=E+1|0;if((B|0)!=(d|0)){break M}g=d?d<<1:1;if((g|0)<=(d|0)){break M}if(g){J[8369]=J[8369]+1;f=ia[J[6782]](g<<2,16)|0}else{f=0}N:{if((d|0)<=0){break N}e=0;h=0;if(d-1>>>0>=3){A=d&-4;k=0;while(1){i=h<<2;J[i+f>>2]=J[a+i>>2];M=i|4;J[M+f>>2]=J[a+M>>2];M=i|8;J[M+f>>2]=J[a+M>>2];i=i|12;J[i+f>>2]=J[a+i>>2];h=h+4|0;k=k+4|0;if((A|0)!=(k|0)){continue}break}}d=d&3;if(!d){break N}while(1){k=h<<2;J[k+f>>2]=J[a+k>>2];h=h+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}break L}g=d;f=a}J[(B<<2)+f>>2]=J[n+4>>2];n=J[s+J[j+12>>2]>>2];O:{P:{B=E+2|0;if((B|0)!=(g|0)){break P}k=g?g<<1:1;if((k|0)<=(g|0)){break P}if(k){J[8369]=J[8369]+1;h=ia[J[6782]](k<<2,16)|0}else{h=0}Q:{if((g|0)<=0){break Q}e=0;a=0;if(g-1>>>0>=3){A=g&-4;d=0;while(1){i=a<<2;J[i+h>>2]=J[f+i>>2];M=i|4;J[M+h>>2]=J[f+M>>2];M=i|8;J[M+h>>2]=J[f+M>>2];i=i|12;J[i+h>>2]=J[f+i>>2];a=a+4|0;d=d+4|0;if((A|0)!=(d|0)){continue}break}}d=g&3;if(!d){break Q}while(1){g=a<<2;J[g+h>>2]=J[f+g>>2];a=a+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}break O}k=g;h=f}J[(B<<2)+h>>2]=J[n+8>>2];d=J[j+12>>2];a=J[d+s>>2];J[(J[a+24>>2]<<2)+d>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}E=E+3|0;a=J[j+4>>2]}z=z+1|0;if((z|0)<(a|0)){continue}break}}J[u+60>>2]=(E|0)/3;g=J[u+44>>2];if((g|0)<(E|0)){R:{if(J[u+48>>2]>=(E|0)){f=J[u+52>>2];break R}S:{if(!E){f=0;a=g;break S}J[8369]=J[8369]+1;f=ia[J[6782]](E<<2,16)|0;a=J[u+44>>2]}i=J[u+52>>2];T:{U:{e=a;if((a|0)>0){k=0;a=0;if(e-1>>>0>=3){n=e&-4;d=0;while(1){s=a<<2;J[s+f>>2]=J[i+s>>2];z=s|4;J[z+f>>2]=J[i+z>>2];z=s|8;J[z+f>>2]=J[i+z>>2];s=s|12;J[s+f>>2]=J[i+s>>2];a=a+4|0;d=d+4|0;if((n|0)!=(d|0)){continue}break}}d=e&3;if(!d){break U}while(1){e=a<<2;J[e+f>>2]=J[e+i>>2];a=a+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}break U}if(i){break U}break T}if(i?K[u+56|0]:0){J[8370]=J[8370]+1;ia[J[6783]](i)}}J[u+52>>2]=f;H[u+56|0]=1;J[u+48>>2]=E}qa((g<<2)+f|0,0,E-g<<2)}J[u+44>>2]=E;V:{if((E|0)<=0){break V}g=E&3;d=J[u+52>>2];e=0;a=0;if(E-1>>>0>=3){k=E&-4;E=0;while(1){f=a<<2;J[f+d>>2]=J[f+h>>2];i=f|4;J[i+d>>2]=J[h+i>>2];i=f|8;J[i+d>>2]=J[h+i>>2];f=f|12;J[f+d>>2]=J[f+h>>2];a=a+4|0;E=E+4|0;if((k|0)!=(E|0)){continue}break}}if(!g){break V}while(1){f=a<<2;J[f+d>>2]=J[f+h>>2];a=a+1|0;e=e+1|0;if((g|0)!=(e|0)){continue}break}}d=J[j+4>>2];W:{if((d|0)>=0){break W}if(J[j+8>>2]<0){a=J[j+12>>2];if(!(a?!a|!K[j+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[j+16|0]=1;J[j+8>>2]=0;J[j+12>>2]=0}f=0;a=d;g=0-a&3;if(g){while(1){J[J[j+12>>2]+(a<<2)>>2]=0;a=a+1|0;f=f+1|0;if((g|0)!=(f|0)){continue}break}}if(d>>>0>4294967292){break W}while(1){d=a<<2;J[d+J[j+12>>2]>>2]=0;J[(d+J[j+12>>2]|0)+4>>2]=0;J[(d+J[j+12>>2]|0)+8>>2]=0;J[(d+J[j+12>>2]|0)+12>>2]=0;a=a+4|0;if(a){continue}break}}J[j+4>>2]=0;if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}a=1}if(!a){break o}J[u+36>>2]=q;i=J[u+60>>2];J[u+32>>2]=i;s=P(i,3);J[u+28>>2]=s;J[u+24>>2]=o;if((o|0)<=0){h=0}else{J[8369]=J[8369]+1;h=ia[J[6782]](o<<4,16)|0}f=J[u+52>>2];d=0;a=J[j+24>>2];X:{if((a|0)<=0){e=0;break X}J[8369]=J[8369]+1;a=a<<2;e=ia[J[6782]](a,16)|0;a=qa(e,0,a);if(J[j+24>>2]<=0){break X}g=J[j+32>>2];while(1){k=d<<2;J[k+a>>2]=J[g+k>>2];d=d+1|0;if((d|0)<J[j+24>>2]){continue}break}}d=o<<2;Y:{Z:{_:{if((o|0)>0){J[8369]=J[8369]+1;a=ia[J[6782]](d,16)|0;d=qa(a,0,d);J[u+4>>2]=0;if((s|0)>0){break _}if(d){break Z}break Y}a=0;J[u+4>>2]=qa(0,0,d);if((s|0)<=0){break Y}}z=0;while(1){d=f+(z<<2)|0;g=J[d>>2];n=(g<<2)+a|0;k=J[n>>2];$:{if(k){J[d>>2]=k-1;break $}J[d>>2]=J[u+4>>2];d=J[u+4>>2];k=h+(d<<4)|0;o=(g<<4)+q|0;N[k>>2]=N[o>>2];N[k+4>>2]=N[o+4>>2];N[k+8>>2]=N[o+8>>2];k=J[j+24>>2];if((k|0)>0){o=J[j+32>>2];d=0;while(1){E=d<<2;if((g|0)==J[E+e>>2]){J[o+E>>2]=J[u+4>>2];k=J[j+24>>2]}d=d+1|0;if((k|0)>(d|0)){continue}break}d=J[u+4>>2]}d=d+1|0;J[u+4>>2]=d;J[n>>2]=d}z=z+1|0;if((s|0)!=(z|0)){continue}break}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}aa:{ba:{ca:{da:{if(H[b|0]&1){H[c|0]=0;g=J[u+4>>2];J[c+4>>2]=g;d=J[c+12>>2];if(!((g|0)<=(d|0)|(g|0)<=J[c+16>>2])){ea:{if(!g){z=0;break ea}J[8369]=J[8369]+1;z=ia[J[6782]](g<<4,16)|0;d=J[c+12>>2]}fa:{if((d|0)<=0){break fa}e=0;if((d|0)!=1){n=d&-2;a=0;while(1){o=e<<4;k=o+z|0;j=o+J[c+20>>2]|0;E=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=E;E=J[j+12>>2];J[k+8>>2]=J[j+8>>2];J[k+12>>2]=E;j=o|16;k=j+z|0;j=j+J[c+20>>2]|0;o=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=o;o=J[j+12>>2];J[k+8>>2]=J[j+8>>2];J[k+12>>2]=o;e=e+2|0;a=a+2|0;if((n|0)!=(a|0)){continue}break}}if(!(d&1)){break fa}d=e<<4;a=d+z|0;d=d+J[c+20>>2]|0;e=J[d+4>>2];J[a>>2]=J[d>>2];J[a+4>>2]=e;e=J[d+12>>2];J[a+8>>2]=J[d+8>>2];J[a+12>>2]=e}a=J[c+20>>2];if(!(a?!a|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+20>>2]=z;H[c+24|0]=1;J[c+16>>2]=g}J[c+32>>2]=s;J[c+28>>2]=i;J[c+12>>2]=g;k=J[c+40>>2];if((k|0)>=(s|0)){break ba}if((s|0)<=J[c+44>>2]){d=J[c+48>>2];break ca}ga:{if(!i){d=0;a=k;break ga}J[8369]=J[8369]+1;d=ia[J[6782]](P(i,12),16)|0;a=J[c+40>>2]}j=J[c+48>>2];g=a;if((a|0)>0){z=0;e=0;if(g-1>>>0>=3){n=g&-4;a=0;while(1){o=e<<2;J[o+d>>2]=J[j+o>>2];E=o|4;J[E+d>>2]=J[j+E>>2];E=o|8;J[E+d>>2]=J[j+E>>2];o=o|12;J[o+d>>2]=J[j+o>>2];e=e+4|0;a=a+4|0;if((n|0)!=(a|0)){continue}break}}a=g&3;if(!a){break da}while(1){g=e<<2;J[g+d>>2]=J[g+j>>2];e=e+1|0;z=z+1|0;if((a|0)!=(z|0)){continue}break}break da}if(j){break da}J[c+48>>2]=d;J[c+44>>2]=s;H[c+52|0]=1;break ca}H[c|0]=1;g=J[u+4>>2];J[c+4>>2]=g;d=J[c+12>>2];if(!((g|0)<=(d|0)|(g|0)<=J[c+16>>2])){ha:{if(!g){z=0;break ha}J[8369]=J[8369]+1;z=ia[J[6782]](g<<4,16)|0;d=J[c+12>>2]}ia:{if((d|0)<=0){break ia}e=0;if((d|0)!=1){s=d&-2;a=0;while(1){o=e<<4;k=o+z|0;j=o+J[c+20>>2]|0;n=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=n;n=J[j+12>>2];J[k+8>>2]=J[j+8>>2];J[k+12>>2]=n;j=o|16;k=j+z|0;j=j+J[c+20>>2]|0;o=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=o;o=J[j+12>>2];J[k+8>>2]=J[j+8>>2];J[k+12>>2]=o;e=e+2|0;a=a+2|0;if((s|0)!=(a|0)){continue}break}}if(!(d&1)){break ia}d=e<<4;a=d+z|0;d=d+J[c+20>>2]|0;e=J[d+4>>2];J[a>>2]=J[d>>2];J[a+4>>2]=e;e=J[d+12>>2];J[a+8>>2]=J[d+8>>2];J[a+12>>2]=e}a=J[c+20>>2];if(!(a?!a|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+20>>2]=z;H[c+24|0]=1;J[c+16>>2]=g}J[c+28>>2]=i;J[c+12>>2]=g;o=i<<2;J[c+32>>2]=o;g=J[c+40>>2];if((g|0)<(o|0)){ja:{if((o|0)<=J[c+44>>2]){d=J[c+48>>2];break ja}ka:{if(!o){d=0;a=g;break ka}J[8369]=J[8369]+1;d=ia[J[6782]](i<<4,16)|0;a=J[c+40>>2]}j=J[c+48>>2];la:{k=a;if((a|0)>0){z=0;e=0;if(k-1>>>0>=3){n=k&-4;a=0;while(1){s=e<<2;J[s+d>>2]=J[j+s>>2];E=s|4;J[E+d>>2]=J[j+E>>2];E=s|8;J[E+d>>2]=J[j+E>>2];s=s|12;J[s+d>>2]=J[j+s>>2];e=e+4|0;a=a+4|0;if((n|0)!=(a|0)){continue}break}}a=k&3;if(!a){break la}while(1){k=e<<2;J[k+d>>2]=J[j+k>>2];e=e+1|0;z=z+1|0;if((a|0)!=(z|0)){continue}break}break la}if(j){break la}J[c+48>>2]=d;J[c+44>>2]=o;H[c+52|0]=1;break ja}if(j?K[c+52|0]:0){J[8370]=J[8370]+1;ia[J[6783]](j)}J[c+48>>2]=d;H[c+52|0]=1;J[c+44>>2]=o}qa((g<<2)+d|0,0,o-g<<2)}J[c+40>>2]=o;sa(J[c+20>>2],h,J[u+4>>2]<<4);if(!i){break aa}e=J[c+48>>2];z=0;d=f;while(1){J[e>>2]=3;ma:{if(K[b|0]&2){J[e+4>>2]=J[d+8>>2];J[e+8>>2]=J[d+4>>2];a=d;break ma}J[e+4>>2]=J[d>>2];J[e+8>>2]=J[d+4>>2];a=d+8|0}J[e+12>>2]=J[a>>2];d=d+12|0;e=e+16|0;z=z+1|0;if((i|0)!=(z|0)){continue}break}break aa}if(j?K[c+52|0]:0){J[8370]=J[8370]+1;ia[J[6783]](j)}J[c+48>>2]=d;H[c+52|0]=1;J[c+44>>2]=s}a=k<<2;qa(a+d|0,0,P(i,12)-a|0)}J[c+40>>2]=s;sa(J[c+20>>2],h,J[u+4>>2]<<4);if(K[b|0]&2){if(!i){break aa}a=i&3;e=J[c+48>>2];na:{if(i-1>>>0<3){d=f;break na}b=i&-4;z=0;d=f;while(1){J[e>>2]=J[d+8>>2];J[e+4>>2]=J[d+4>>2];J[e+8>>2]=J[d>>2];J[e+12>>2]=J[d+20>>2];J[e+16>>2]=J[d+16>>2];J[e+20>>2]=J[d+12>>2];J[e+24>>2]=J[d+32>>2];J[e+28>>2]=J[d+28>>2];J[e+32>>2]=J[d+24>>2];J[e+36>>2]=J[d+44>>2];J[e+40>>2]=J[d+40>>2];J[e+44>>2]=J[d+36>>2];d=d+48|0;e=e+48|0;z=z+4|0;if((b|0)!=(z|0)){continue}break}}if(!a){break aa}z=0;while(1){J[e>>2]=J[d+8>>2];J[e+4>>2]=J[d+4>>2];J[e+8>>2]=J[d>>2];d=d+12|0;e=e+12|0;z=z+1|0;if((a|0)!=(z|0)){continue}break}break aa}sa(J[c+48>>2],f,P(i,12))}if(J[u+44>>2]){if(!(f?!f|!K[u+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](f)}J[u+52>>2]=0;H[u+56|0]=1;J[u+44>>2]=0;J[u+48>>2]=0}_=0;J[u+36>>2]=0;J[u+24>>2]=0;J[u+28>>2]=0;if(!h){break o}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}}if(q){J[8370]=J[8370]+1;ia[J[6783]](q)}a=J[u+52>>2];if(!(a?!a|!K[u+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=u- -64|0;return _}function Hm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=0,z=Q(0),A=Q(0),B=0,C=0,D=Q(0),E=Q(0),F=Q(0),G=0,H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=0,X=0,Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=0,ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=Q(0),na=Q(0),oa=0,pa=0,qa=Q(0),ra=0,ta=0,ua=0,va=Q(0);d=ga-160|0;ga=d;N[d+112>>2]=N[b>>2];N[d+64>>2]=N[b+64>>2];N[d+116>>2]=N[b+4>>2];N[d+68>>2]=N[b+68>>2];N[d+120>>2]=N[b+8>>2];N[d+72>>2]=N[b+72>>2];N[d+128>>2]=N[b+16>>2];N[d+80>>2]=N[b+80>>2];N[d+132>>2]=N[b+20>>2];N[d+84>>2]=N[b+84>>2];N[d+136>>2]=N[b+24>>2];N[d+88>>2]=N[b+88>>2];N[d+144>>2]=N[b+32>>2];N[d+96>>2]=N[b+96>>2];N[d+148>>2]=N[b+36>>2];N[d+100>>2]=N[b+100>>2];N[d+152>>2]=N[b+40>>2];N[d+104>>2]=N[b+104>>2];e=J[a+4>>2];j=N[e+36>>2];i=N[e+32>>2];m=N[e+28>>2];g=Q(ia[J[J[e>>2]+48>>2]](e));h=Q(ia[J[J[e>>2]+48>>2]](e));l=Q(ia[J[J[e>>2]+48>>2]](e));J[d+36>>2]=0;i=Q(i+h);N[d+28>>2]=i+i;i=Q(m+g);N[d+24>>2]=i+i;j=Q(j+l);N[d+32>>2]=j+j;a=J[a+8>>2];j=N[a+36>>2];i=N[a+32>>2];m=N[a+28>>2];g=Q(ia[J[J[a>>2]+48>>2]](a));h=Q(ia[J[J[a>>2]+48>>2]](a));l=Q(ia[J[J[a>>2]+48>>2]](a));J[d+20>>2]=0;i=Q(i+h);N[d+12>>2]=i+i;i=Q(m+g);N[d+8>>2]=i+i;j=Q(j+l);N[d+16>>2]=j+j;W=c;e=0;f=ga-368|0;ga=f;a=d+112|0;I=N[a+36>>2];U=N[a+4>>2];F=N[a+20>>2];s=N[a+40>>2];ea=N[a+8>>2];L=N[a+24>>2];G=b+48|0;m=N[G+8>>2];b=b+112|0;g=N[b+8>>2];u=N[G>>2];r=N[b>>2];z=N[G+4>>2];D=N[b+4>>2];j=N[a+32>>2];qa=N[a>>2];i=N[a+16>>2];h=Q(N[d+24>>2]*Q(.5));N[f+356>>2]=h;l=Q(N[d+28>>2]*Q(.5));N[f+360>>2]=l;k=Q(N[d+32>>2]*Q(.5));N[f+364>>2]=k;x=Q(N[d+8>>2]*Q(.5));N[f+344>>2]=x;t=Q(N[d+12>>2]*Q(.5));N[f+348>>2]=t;o=Q(N[d+16>>2]*Q(.5));N[f+352>>2]=o;m=Q(g-m);g=Q(r-u);u=Q(D-z);r=Q(Q(j*m)+Q(Q(qa*g)+Q(i*u)));c=d- -64|0;Z=N[c+40>>2];_=N[c+8>>2];M=N[c+24>>2];z=Q(Q(j*Z)+Q(Q(qa*_)+Q(i*M)));ha=Q(R(z));V=N[c+36>>2];H=N[c+4>>2];$=N[c+20>>2];D=Q(Q(j*V)+Q(Q(qa*H)+Q(i*$)));ja=Q(R(D));aa=N[c+32>>2];ba=N[c>>2];ca=N[c+16>>2];A=Q(Q(j*aa)+Q(Q(qa*ba)+Q(i*ca)));va=Q(R(A));i=Q(Q(R(r))-Q(Q(o*ha)+Q(Q(t*ja)+Q(Q(x*va)+h))));a:{if(i>Q(0)){break a}K=Q(Q(I*Z)+Q(Q(U*_)+Q(F*M)));ka=Q(R(K));O=Q(Q(I*V)+Q(Q(U*H)+Q(F*$)));S=Q(R(O));T=Q(Q(I*aa)+Q(Q(U*ba)+Q(F*ca)));la=Q(R(T));j=Q(-3.4028234663852886e38);if(i>Q(-3.4028234663852886e38)){j=i;q=a;B=1;e=r<Q(0)}I=Q(Q(I*m)+Q(Q(U*g)+Q(u*F)));i=Q(Q(R(I))-Q(Q(o*ka)+Q(Q(t*S)+Q(Q(x*la)+l))));if(i>Q(0)){break a}F=Q(Q(s*Z)+Q(Q(ea*_)+Q(L*M)));ma=Q(R(F));E=Q(Q(s*V)+Q(Q(ea*H)+Q(L*$)));na=Q(R(E));v=Q(Q(s*aa)+Q(Q(ea*ba)+Q(L*ca)));da=Q(R(v));if(i>j){q=a+4|0;j=i;B=2;e=I<Q(0)}s=Q(Q(s*m)+Q(Q(ea*g)+Q(u*L)));i=Q(Q(R(s))-Q(Q(o*ma)+Q(Q(t*na)+Q(Q(x*da)+k))));if(i>Q(0)){break a}if(i>j){q=a+8|0;j=i;B=3;e=s<Q(0)}L=Q(Q(aa*m)+Q(Q(ba*g)+Q(u*ca)));i=Q(Q(R(L))-Q(x+Q(Q(k*da)+Q(Q(h*va)+Q(l*la)))));if(i>Q(0)){break a}if(i>j){j=i;q=c;B=4;e=L<Q(0)}L=Q(Q(V*m)+Q(Q(H*g)+Q(u*$)));i=Q(Q(R(L))-Q(t+Q(Q(k*na)+Q(Q(h*ja)+Q(l*S)))));if(i>Q(0)){break a}if(i>j){q=c+4|0;j=i;B=5;e=L<Q(0)}m=Q(Q(Z*m)+Q(Q(_*g)+Q(u*M)));i=Q(Q(R(m))-Q(o+Q(Q(k*ma)+Q(Q(h*ha)+Q(l*ka)))));if(i>Q(0)){break a}if(i>j){q=c+8|0;j=i;B=6;e=m<Q(0)}V=Q(Q(s*T)-Q(v*I));$=Q(ja+Q(9999999747378752e-21));aa=Q(ha+Q(9999999747378752e-21));ba=Q(da+Q(9999999747378752e-21));ca=Q(la+Q(9999999747378752e-21));i=Q(Q(R(V))-Q(Q(o*$)+Q(Q(t*aa)+Q(Q(l*ba)+Q(k*ca)))));if(i>Q(1.1920928955078125e-7)){break a}L=Q(na+Q(9999999747378752e-21));Z=Q(S+Q(9999999747378752e-21));_=Q(va+Q(9999999747378752e-21));S=Q(-I);u=Q(0);la=Q(T*T);na=Q(Q(v*v)+Q(0));M=Q(Y(Q(la+na)));b:{if(!(M>Q(1.1920928955078125e-7))){g=Q(0);m=Q(0);break b}g=Q(0);i=Q(i/M);m=Q(0);if(!(Q(i*Q(1.0499999523162842))>j)){break b}e=V<Q(0);g=Q(T/M);u=Q(Q(0)/M);q=0;B=7;j=i;m=Q(Q(-v)/M)}da=Q(Q(s*O)+Q(E*S));i=Q(Q(R(da))-Q(Q(o*_)+Q(Q(x*aa)+Q(Q(l*L)+Q(k*Z)))));if(i>Q(1.1920928955078125e-7)){break a}M=Q(ma+Q(9999999747378752e-21));V=Q(ka+Q(9999999747378752e-21));ka=Q(O*O);ma=Q(Q(E*E)+Q(0));H=Q(Y(Q(ka+ma)));c:{if(!(H>Q(1.1920928955078125e-7))){break c}i=Q(i/H);if(!(Q(i*Q(1.0499999523162842))>j)){break c}e=da<Q(0);g=Q(O/H);m=Q(Q(-E)/H);u=Q(Q(0)/H);q=0;B=8;j=i}S=Q(Q(s*K)+Q(F*S));i=Q(Q(R(S))-Q(Q(t*_)+Q(Q(x*$)+Q(Q(l*M)+Q(k*V)))));if(i>Q(1.1920928955078125e-7)){break a}da=Q(K*K);ha=Q(Q(F*F)+Q(0));H=Q(Y(Q(da+ha)));d:{if(!(H>Q(1.1920928955078125e-7))){break d}i=Q(i/H);if(!(Q(i*Q(1.0499999523162842))>j)){break d}e=S<Q(0);g=Q(K/H);m=Q(Q(-F)/H);u=Q(Q(0)/H);q=0;B=9;j=i}S=Q(Q(r*v)-Q(A*s));i=Q(Q(R(S))-Q(Q(o*Z)+Q(Q(t*V)+Q(Q(h*ba)+Q(k*_)))));if(i>Q(1.1920928955078125e-7)){break a}H=Q(-s);ja=Q(A*A);s=Q(Y(Q(ja+na)));e:{if(!(s>Q(1.1920928955078125e-7))){break e}i=Q(i/s);if(!(Q(i*Q(1.0499999523162842))>j)){break e}e=S<Q(0);g=Q(Q(-A)/s);m=Q(Q(0)/s);u=Q(v/s);q=0;B=10;j=i}s=Q(Q(r*E)+Q(D*H));i=Q(Q(R(s))-Q(Q(o*ca)+Q(Q(x*V)+Q(Q(h*L)+Q(k*$)))));if(i>Q(1.1920928955078125e-7)){break a}S=Q(D*D);v=Q(Y(Q(S+ma)));f:{if(!(v>Q(1.1920928955078125e-7))){break f}i=Q(i/v);if(!(Q(i*Q(1.0499999523162842))>j)){break f}e=s<Q(0);g=Q(Q(-D)/v);m=Q(Q(0)/v);u=Q(E/v);q=0;B=11;j=i}v=Q(Q(r*F)+Q(z*H));i=Q(Q(R(v))-Q(Q(t*ca)+Q(Q(x*Z)+Q(Q(h*M)+Q(k*aa)))));if(i>Q(1.1920928955078125e-7)){break a}s=Q(z*z);E=Q(Y(Q(s+ha)));g:{if(!(E>Q(1.1920928955078125e-7))){break g}i=Q(i/E);if(!(Q(i*Q(1.0499999523162842))>j)){break g}e=v<Q(0);g=Q(Q(-z)/E);m=Q(Q(0)/E);u=Q(F/E);q=0;B=12;j=i}E=Q(Q(I*A)-Q(T*r));i=Q(Q(R(E))-Q(Q(o*L)+Q(Q(t*M)+Q(Q(h*ca)+Q(l*_)))));if(i>Q(1.1920928955078125e-7)){break a}F=Q(-r);r=Q(Y(Q(Q(la+ja)+Q(0))));h:{if(!(r>Q(1.1920928955078125e-7))){break h}i=Q(i/r);if(!(Q(i*Q(1.0499999523162842))>j)){break h}e=E<Q(0);g=Q(Q(0)/r);m=Q(A/r);u=Q(Q(-T)/r);q=0;B=13;j=i}r=Q(Q(I*D)+Q(O*F));i=Q(Q(R(r))-Q(Q(o*ba)+Q(Q(x*M)+Q(Q(h*Z)+Q(l*$)))));if(i>Q(1.1920928955078125e-7)){break a}o=Q(Y(Q(Q(ka+S)+Q(0))));i:{if(!(o>Q(1.1920928955078125e-7))){break i}i=Q(i/o);if(!(Q(i*Q(1.0499999523162842))>j)){break i}e=r<Q(0);g=Q(Q(0)/o);m=Q(D/o);u=Q(Q(-O)/o);q=0;B=14;j=i}r=Q(Q(I*z)+Q(K*F));i=Q(Q(R(r))-Q(Q(t*ba)+Q(Q(x*L)+Q(Q(h*V)+Q(l*aa)))));if(i>Q(1.1920928955078125e-7)){break a}j:{k:{l:{m:{o=Q(Y(Q(Q(da+s)+Q(0))));if(!(o>Q(1.1920928955078125e-7))){break m}i=Q(i/o);if(!(Q(i*Q(1.0499999523162842))>j)){break m}e=r<Q(0);g=Q(Q(0)/o);m=Q(z/o);u=Q(Q(-K)/o);B=15;break l}if(!B){break a}if(q){break k}i=j}o=Q(Q(ea*g)+Q(Q(qa*u)+Q(U*m)));N[d+48>>2]=o;r=Q(Q(N[a+24>>2]*g)+Q(Q(N[a+16>>2]*u)+Q(m*N[a+20>>2])));N[d+52>>2]=r;j=Q(Q(N[a+40>>2]*g)+Q(Q(N[a+32>>2]*u)+Q(m*N[a+36>>2])));break j}o=N[q>>2];N[d+48>>2]=o;r=N[q+16>>2];N[d+52>>2]=r;i=j;j=N[q+32>>2]}N[d+56>>2]=j;if(e){N[d+56>>2]=-j;N[d+52>>2]=-r;N[d+48>>2]=-o}N[d+44>>2]=-i;if(B>>>0>=7){J[f+120>>2]=J[G+8>>2];e=J[G+4>>2];J[f+112>>2]=J[G>>2];J[f+116>>2]=e;s=k;v=Q(-k);j=N[d+56>>2];k=N[a+40>>2];i=N[d+48>>2];u=N[a+8>>2];m=N[d+52>>2];o=N[a+24>>2];g=Q(Q(j*k)+Q(Q(i*u)+Q(m*o)))>Q(0)?s:v;s=Q(g*k);k=N[a+36>>2];r=N[a+4>>2];z=N[a+20>>2];l=Q(Q(j*k)+Q(Q(i*r)+Q(m*z)))>Q(0)?l:Q(-l);v=Q(l*k);k=N[a+32>>2];D=N[a>>2];A=N[a+16>>2];h=Q(Q(j*k)+Q(Q(i*D)+Q(m*A)))>Q(0)?h:Q(-h);N[f+120>>2]=s+Q(v+Q(Q(h*k)+N[f+120>>2]));N[f+112>>2]=Q(g*u)+Q(Q(l*r)+Q(Q(h*D)+N[f+112>>2]));N[f+116>>2]=Q(g*o)+Q(Q(l*z)+Q(Q(h*A)+N[f+116>>2]));J[f+216>>2]=J[b+8>>2];e=J[b+4>>2];J[f+208>>2]=J[b>>2];J[f+212>>2]=e;g=N[f+352>>2];h=N[c+40>>2];l=N[c+8>>2];k=N[c+24>>2];g=Q(Q(j*h)+Q(Q(i*l)+Q(m*k)))>Q(0)?Q(-g):g;z=Q(g*h);v=Q(-t);s=t;t=N[c+36>>2];u=N[c+4>>2];o=N[c+20>>2];h=Q(Q(j*t)+Q(Q(i*u)+Q(m*o)))>Q(0)?v:s;A=Q(-x);s=x;x=N[c+32>>2];v=i;i=N[c>>2];r=m;m=N[c+16>>2];j=Q(Q(j*x)+Q(Q(v*i)+Q(r*m)))>Q(0)?A:s;x=Q(z+Q(Q(h*t)+Q(Q(j*x)+N[f+216>>2])));N[f+216>>2]=x;i=Q(Q(g*l)+Q(Q(h*u)+Q(Q(j*i)+N[f+208>>2])));N[f+208>>2]=i;m=Q(Q(g*k)+Q(Q(h*o)+Q(Q(j*m)+N[f+212>>2])));N[f+212>>2]=m;b=B-7&255;a=((b>>>0)/3<<2)+a|0;N[f+288>>2]=N[a>>2];N[f+292>>2]=N[a+16>>2];N[f+296>>2]=N[a+32>>2];a=c+((b>>>0)%3<<2)|0;g=N[a>>2];N[f+80>>2]=g;h=N[a+16>>2];N[f+84>>2]=h;l=N[a+32>>2];N[f+88>>2]=l;a=f+208|0;b=f- -64|0;k=N[f+296>>2];t=N[f+88>>2];u=N[f+288>>2];o=N[f+80>>2];r=N[f+292>>2];z=N[f+84>>2];j=Q(Q(k*t)+Q(Q(u*o)+Q(r*z)));D=Q(Q(1)-Q(j*j));n:{if(D<=Q(9999999747378752e-20)){J[f+328>>2]=0;N[b>>2]=0;break n}s=t;t=Q(N[a+8>>2]-N[f+120>>2]);v=o;o=Q(N[a>>2]-N[f+112>>2]);A=Q(N[a+4>>2]-N[f+116>>2]);z=Q(-Q(Q(s*t)+Q(Q(v*o)+Q(A*z))));k=Q(Q(k*t)+Q(Q(u*o)+Q(A*r)));t=Q(Q(1)/D);N[f+328>>2]=Q(Q(j*z)+k)*t;N[b>>2]=Q(Q(j*k)+z)*t}j=N[f+64>>2];N[f+216>>2]=Q(l*j)+x;N[f+212>>2]=Q(h*j)+m;N[f+208>>2]=Q(g*j)+i;j=N[d+48>>2];i=N[d+52>>2];m=N[d+56>>2];J[f+44>>2]=0;N[f+40>>2]=-m;N[f+36>>2]=-i;N[f+32>>2]=-j;ia[J[J[W>>2]+16>>2]](W,f+32|0,a,Q(-N[d+44>>2]));J[d+40>>2]=B;break a}j=N[d+48>>2];o:{if(B>>>0<=3){m=N[d+52>>2];q=f+356|0;w=c;n=f+344|0;i=N[d+56>>2];break o}j=Q(-j);m=Q(-N[d+52>>2]);e=b;q=f+344|0;b=G;G=e;w=a;a=c;n=f+356|0;i=Q(-N[d+56>>2])}h=Q(Q(N[w+32>>2]*i)+Q(Q(N[w>>2]*j)+Q(m*N[w+16>>2])));N[f+328>>2]=h;l=Q(Q(N[w+36>>2]*i)+Q(Q(N[w+4>>2]*j)+Q(m*N[w+20>>2])));N[f+332>>2]=l;g=Q(Q(N[w+40>>2]*i)+Q(Q(N[w+8>>2]*j)+Q(m*N[w+24>>2])));N[f+336>>2]=g;g=Q(R(g));l=Q(R(l));h=Q(R(h));p:{if(l>h){e=g<l;c=e?1:2;p=0;break p}e=g<h;c=!e<<1;p=e}X=p;c=c<<2;g=N[c+n>>2];g=N[c+(f+328|0)>>2]<Q(0)?g:Q(-g);c=c+w|0;x=Q(Q(g*N[c+32>>2])+Q(N[b+8>>2]-N[G+8>>2]));t=Q(Q(g*N[c+16>>2])+Q(N[b+4>>2]-N[G+4>>2]));u=Q(Q(g*N[c>>2])+Q(N[b>>2]-N[G>>2]));ra=e?2:1;c=1;e=2;q:{r:{s:{ta=(B>>>0<4?-1:-4)+B|0;switch(ta|0){case 0:break q;case 1:break s;default:break r}}c=0;break q}e=1;c=0}c=c<<2;b=c+a|0;g=N[b+32>>2];h=N[b>>2];l=N[b+16>>2];b=e<<2;a=b+a|0;k=N[a+32>>2];o=N[a>>2];r=N[a+16>>2];z=Q(Q(x*k)+Q(Q(u*o)+Q(t*r)));a=X<<2;oa=a+w|0;A=N[oa+32>>2];K=N[oa>>2];O=N[oa+16>>2];D=Q(Q(k*A)+Q(Q(o*K)+Q(r*O)));T=N[a+n>>2];I=Q(D*T);F=Q(z+I);a=ra<<2;fa=a+w|0;E=N[fa+32>>2];v=N[fa>>2];s=N[fa+16>>2];o=Q(Q(k*E)+Q(Q(o*v)+Q(r*s)));U=N[a+n>>2];k=Q(o*U);N[f+316>>2]=F-k;r=Q(Q(x*g)+Q(Q(u*h)+Q(t*l)));A=Q(Q(g*A)+Q(Q(h*K)+Q(l*O)));O=Q(T*A);T=Q(r+O);K=Q(Q(g*E)+Q(Q(h*v)+Q(l*s)));g=Q(U*K);N[f+312>>2]=T-g;N[f+308>>2]=F+k;N[f+304>>2]=T+g;h=Q(z-I);N[f+300>>2]=h+k;l=Q(r-O);N[f+296>>2]=l+g;N[f+292>>2]=h-k;N[f+288>>2]=l-g;N[f+280>>2]=N[c+q>>2];N[f+284>>2]=N[b+q>>2];e=f+208|0;b=0;p=ga+-64|0;ga=p;g=N[f+280>>2];k=N[f+288>>2];h=Q(-k);if(g>h){N[e>>2]=k;N[e+4>>2]=N[f+292>>2];g=N[f+280>>2];k=N[f+288>>2];h=Q(-k);b=1;c=e+8|0}else{c=e}a=g>h;l=N[f+296>>2];h=Q(-l);if((a|0)!=(h<g|0)){h=N[f+292>>2];N[c+4>>2]=Q(Q(Q(N[f+300>>2]-h)/Q(l-k))*Q(Q(-g)-k))+h;N[c>>2]=-N[f+280>>2];g=N[f+280>>2];l=N[f+296>>2];h=Q(-l);c=c+8|0;b=b+1|0}if(g>h){N[c>>2]=l;N[c+4>>2]=N[f+300>>2];g=N[f+280>>2];l=N[f+296>>2];h=Q(-l);c=c+8|0;b=b+1|0}a=g>h;h=N[f+304>>2];k=Q(-h);t:{if((a|0)!=(k<g|0)){k=N[f+300>>2];N[c+4>>2]=Q(Q(Q(N[f+308>>2]-k)/Q(h-l))*Q(Q(-g)-l))+k;N[c>>2]=-N[f+280>>2];b=b+1|0;if(b&8){a=b;break t}g=N[f+280>>2];h=N[f+304>>2];k=Q(-h);c=c+8|0}if(g>k){N[c>>2]=h;N[c+4>>2]=N[f+308>>2];b=b+1|0;if(b&8){a=b;break t}g=N[f+280>>2];h=N[f+304>>2];k=Q(-h);c=c+8|0}a=g>k;l=N[f+312>>2];k=Q(-l);if((a|0)!=(k<g|0)){k=N[f+308>>2];N[c+4>>2]=Q(Q(Q(N[f+316>>2]-k)/Q(l-h))*Q(Q(-g)-h))+k;N[c>>2]=-N[f+280>>2];b=b+1|0;if(b&8){a=b;break t}g=N[f+280>>2];l=N[f+312>>2];k=Q(-l);c=c+8|0}if(g>k){N[c>>2]=l;N[c+4>>2]=N[f+316>>2];b=b+1|0;if(b&8){a=b;break t}g=N[f+280>>2];l=N[f+312>>2];k=Q(-l);c=c+8|0}u:{v:{h=N[f+288>>2];if((Q(-h)<g|0)!=(g>k|0)){k=N[f+316>>2];N[c+4>>2]=Q(Q(Q(N[f+292>>2]-k)/Q(h-l))*Q(Q(-g)-l))+k;N[c>>2]=-N[f+280>>2];a=8;b=b+1|0;if(b&8){break t}break v}if(b){break v}a=0;break u}g=N[f+280>>2];h=N[e>>2];w:{if(!(g>h)){c=p;a=0;break w}N[p>>2]=h;N[p+4>>2]=N[e+4>>2];c=p|8;g=N[f+280>>2];h=N[e>>2];a=1}n=e+8|0;y=b>>>0>1;l=N[e+(y<<3)>>2];if((l<g|0)!=(g>h|0)){k=N[e+4>>2];N[c+4>>2]=Q(Q(Q(N[(y?n:e)+4>>2]-k)/Q(l-h))*Q(g-h))+k;g=N[f+280>>2];N[c>>2]=g;c=c+8|0;a=a+1|0}x:{if((b|0)<2){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+12>>2];c=c+8|0;g=N[f+280>>2];h=N[n>>2];a=a+1|0}n=e+16|0;y=b-3>>>0<4294967294;l=N[e+(y<<4)>>2];if((l<g|0)!=(g>h|0)){k=N[e+12>>2];N[c+4>>2]=Q(Q(Q(N[(y?n:e)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<3){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+20>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+24|0;y=(b&254)==2;l=N[e+(y?0:24)>>2];if((l<g|0)!=(g>h|0)){k=N[e+20>>2];N[c+4>>2]=Q(Q(Q(N[(y?e:n)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<4){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+28>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+32|0;y=b-5>>>0<4294967294;l=N[e+(y<<5)>>2];if((l<g|0)!=(g>h|0)){k=N[e+28>>2];N[c+4>>2]=Q(Q(Q(N[(y?n:e)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<5){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+36>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+40|0;y=(b&254)==4;l=N[e+(y?0:40)>>2];if((l<g|0)!=(g>h|0)){k=N[e+36>>2];N[c+4>>2]=Q(Q(Q(N[(y?e:n)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<6){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+44>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+48|0;y=b-7>>>0<4294967294;l=N[e+(y?48:0)>>2];if((l<g|0)!=(g>h|0)){k=N[e+44>>2];N[c+4>>2]=Q(Q(Q(N[(y?n:e)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<7){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+52>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}n=e+56|0;y=(b&254)==6;l=N[e+(y?0:56)>>2];if((l<g|0)!=(g>h|0)){k=N[e+52>>2];N[c+4>>2]=Q(Q(Q(N[(y?e:n)+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];c=c+8|0}if((b|0)<8){break x}h=N[n>>2];if(h<g){N[c>>2]=h;N[c+4>>2]=N[e+60>>2];a=a+1|0;if(a&8){break u}g=N[f+280>>2];h=N[n>>2];c=c+8|0}b=e+((b-9>>>0<4294967294)<<6)|0;l=N[b>>2];if((l<g|0)==(g>h|0)){break x}k=N[e+60>>2];N[c+4>>2]=Q(Q(Q(N[b+4>>2]-k)/Q(l-h))*Q(g-h))+k;N[c>>2]=N[f+280>>2];a=a+1|0;if(a&8){break u}}if((a|0)<=0){a=0;break u}pa=p|4;n=0;c=p;b=e;while(1){g=N[f+284>>2];l=N[c+4>>2];h=Q(-l);if(g>h){N[b>>2]=N[c>>2];N[b+4>>2]=N[c+4>>2];n=n+1|0;if(n&8){a=n;break t}g=N[f+284>>2];l=N[c+4>>2];h=Q(-l);b=b+8|0}y=c+8|0;ua=a>>>0>1;k=N[(ua?c+12|0:pa)>>2];if((Q(-k)<g|0)!=(g>h|0)){h=N[c>>2];N[b>>2]=Q(Q(Q(N[(ua?y:p)>>2]-h)/Q(k-l))*Q(Q(-g)-l))+h;N[b+4>>2]=-N[f+284>>2];n=n+1|0;if(n&8){a=n;break t}b=b+8|0}ua=(a|0)>1;a=a-1|0;c=y;if(ua){continue}break}a=0;if((n|0)<=0){break u}b=p;c=e;while(1){g=N[f+284>>2];h=N[c+4>>2];if(g>h){N[b>>2]=N[c>>2];N[b+4>>2]=N[c+4>>2];a=a+1|0;if(a&8){break u}g=N[f+284>>2];h=N[c+4>>2];b=b+8|0}y=c+8|0;pa=n>>>0>1?y:e;l=N[pa+4>>2];if((l<g|0)!=(g>h|0)){k=N[c>>2];N[b>>2]=Q(Q(Q(N[pa>>2]-k)/Q(l-h))*Q(g-h))+k;N[b+4>>2]=N[f+284>>2];a=a+1|0;if(a&8){break u}b=b+8|0}pa=(n|0)>1;n=n-1|0;c=y;if(pa){continue}break}}if((e|0)==(p|0)){break t}sa(e,p,a<<3)}ga=p- -64|0;if((a|0)<=0){break a}b=a;g=Q(Q(1)/Q(Q(A*o)-Q(D*K)));l=Q(g*Q(-D));k=Q(g*Q(-K));o=Q(o*g);D=Q(A*g);A=N[(ta<<2)+q>>2];a=(ra<<2)+w|0;K=N[a+32>>2];c=(X<<2)+w|0;O=N[c+32>>2];T=N[a+16>>2];I=N[c+16>>2];F=N[fa>>2];E=N[oa>>2];a=0;c=0;while(1){e=(f+112|0)+P(a,12)|0;p=(f+208|0)+(c<<3)|0;v=N[p>>2];h=Q(v-r);s=N[p+4>>2];U=Q(s-z);g=Q(Q(l*h)+Q(D*U));h=Q(Q(o*h)+Q(k*U));U=Q(Q(g*F)+Q(Q(h*E)+u));N[e>>2]=U;ea=Q(Q(g*T)+Q(Q(h*I)+t));N[e+4>>2]=ea;g=Q(Q(g*K)+Q(Q(h*O)+x));N[e+8>>2]=g;g=Q(A-Q(Q(i*g)+Q(Q(j*U)+Q(m*ea))));N[(f+80|0)+(a<<2)>>2]=g;if(g>=Q(0)){e=(f+208|0)+(a<<3)|0;N[e+4>>2]=s;N[e>>2]=v;a=a+1|0}c=c+1|0;if((b|0)!=(c|0)){continue}break}if((a|0)<=0){break a}b=(a|0)<4?a:4;X=(b|0)>1?b:1;y:{if(X>>>0>=a>>>0){if(B>>>0>=4){c=0;while(1){b=(f+112|0)+P(c,12)|0;i=N[d+48>>2];j=N[(f+80|0)+(c<<2)>>2];N[f+32>>2]=Q(N[b>>2]+N[G>>2])-Q(i*j);m=N[d+52>>2];N[f+36>>2]=Q(N[b+4>>2]+N[G+4>>2])-Q(j*m);g=N[d+56>>2];N[f+40>>2]=Q(N[b+8>>2]+N[G+8>>2])-Q(j*g);J[f+76>>2]=0;N[f+72>>2]=-g;N[f+68>>2]=-m;N[f+64>>2]=-i;ia[J[J[W>>2]+16>>2]](W,f- -64|0,f+32|0,Q(-j));c=c+1|0;if((c|0)!=(a|0)){continue}break}break y}c=0;while(1){b=(f+112|0)+P(c,12)|0;N[f+32>>2]=N[b>>2]+N[G>>2];N[f+36>>2]=N[b+4>>2]+N[G+4>>2];N[f+40>>2]=N[b+8>>2]+N[G+8>>2];j=N[d+48>>2];i=N[d+52>>2];m=N[d+56>>2];J[f+76>>2]=0;N[f+72>>2]=-m;N[f+68>>2]=-i;N[f+64>>2]=-j;ia[J[J[W>>2]+16>>2]](W,f- -64|0,f+32|0,Q(-N[(f+80|0)+(c<<2)>>2]));c=c+1|0;if((c|0)!=(a|0)){continue}break}break y}b=0;z:{if(a>>>0<2){break z}b=a-1|0;q=b&3;e=0;m=N[f+80>>2];A:{if(a-2>>>0<3){c=1;b=0;break A}oa=b&-4;b=0;c=1;while(1){p=f+80|0;fa=c+3|0;j=N[p+(fa<<2)>>2];i=N[p+(c<<2)>>2];w=i>m;ra=c+1|0;g=N[p+(ra<<2)>>2];i=w?i:m;n=g>i;ta=c+2|0;m=N[p+(ta<<2)>>2];i=n?g:i;p=m>i;i=p?m:i;y=i<j;m=y?j:i;b=y?fa:p?ta:n?ra:w?c:b;c=c+4|0;C=C+4|0;if((oa|0)!=(C|0)){continue}break}}if(!q){break z}while(1){j=N[(f+80|0)+(c<<2)>>2];p=j>m;m=p?j:m;b=p?c:b;c=c+1|0;e=e+1|0;if((q|0)!=(e|0)){continue}break}}w=f+208|0;n=f+32|0;i=Q(0);q=0;g=Q(0);h=Q(0);p=ga+-64|0;ga=p;B:{C:{D:{E:{F:{G:{H:{c=a;e=c-1|0;switch(e|0){case 0:break D;case 1:break G;default:break H}}if((c|0)>1){break F}break E}g=Q(Q(N[w+4>>2]+N[w+12>>2])*Q(.5));j=Q(Q(N[w>>2]+N[w+8>>2])*Q(.5));break C}while(1){a=w+(q<<3)|0;m=N[a>>2];l=N[a+12>>2];k=N[a+4>>2];x=N[a+8>>2];j=Q(Q(m*l)-Q(k*x));i=Q(i+j);g=Q(Q(j*Q(l+k))+g);h=Q(Q(j*Q(m+x))+h);q=q+1|0;if((e|0)!=(q|0)){continue}break}}l=Q(0xde0b6b000000000);t=i;a=w+(c<<3)|0;i=N[a-8>>2];m=N[w+4>>2];k=N[a-4>>2];x=N[w>>2];j=Q(Q(i*m)-Q(k*x));t=Q(t+j);if(Q(R(t))>Q(1.1920928955078125e-7)){l=Q(Q(1)/Q(t*Q(3)))}e=0;if((c|0)<=0){break B}g=Q(Q(Q(j*Q(m+k))+g)*l);j=Q(Q(Q(j*Q(i+x))+h)*l);break C}g=N[w+4>>2];j=N[w>>2]}e=0;while(1){a=w+(e<<3)|0;N[(p+32|0)+(e<<2)>>2]=$a(Q(N[a+4>>2]-g),Q(N[a>>2]-j));e=e+1|0;if((c|0)!=(e|0)){continue}break}C=0;q=0;if(c-1>>>0>=7){w=c&-8;a=0;while(1){e=q<<2;J[e+p>>2]=1;J[p+(e|4)>>2]=1;J[p+(e|8)>>2]=1;J[p+(e|12)>>2]=1;J[p+(e|16)>>2]=1;J[p+(e|20)>>2]=1;J[p+(e|24)>>2]=1;J[p+(e|28)>>2]=1;q=q+8|0;a=a+8|0;if((w|0)!=(a|0)){continue}break}}a=c&7;if(!a){e=1;break B}while(1){e=1;J[p+(q<<2)>>2]=1;q=q+1|0;C=C+1|0;if((a|0)!=(C|0)){continue}break}}a=b<<2;q=a+p|0;J[q>>2]=0;J[n>>2]=b;I:{if((X|0)<2){break I}C=n+4|0;if(e){m=Q(Q(6.2831854820251465)/Q(X|0));g=N[a+(p+32|0)>>2];n=1;while(1){J[C>>2]=b;j=Q(Q(Q(n|0)*m)+g);h=j>Q(3.1415927410125732)?Q(j+Q(-6.2831854820251465)):j;i=Q(1e9);a=b;e=0;while(1){q=e<<2;J:{if(!J[q+p>>2]){break J}j=Q(R(Q(N[q+(p+32|0)>>2]-h)));j=j>Q(3.1415927410125732)?Q(Q(6.2831854820251465)-j):j;if(!(j<i)){break J}J[C>>2]=e;a=e;i=j}e=e+1|0;if((c|0)!=(e|0)){continue}break}J[p+(a<<2)>>2]=0;C=C+4|0;n=n+1|0;if((X|0)!=(n|0)){continue}break}break I}c=X-1|0;a=c&7;if(X-2>>>0>=7){c=c&-8;e=0;while(1){J[C+28>>2]=b;J[C+24>>2]=b;J[C+20>>2]=b;J[C+16>>2]=b;J[C+12>>2]=b;J[C+8>>2]=b;J[C+4>>2]=b;J[C>>2]=b;C=C+32|0;e=e+8|0;if((c|0)!=(e|0)){continue}break}}if(a){e=0;while(1){J[C>>2]=b;C=C+4|0;e=e+1|0;if((a|0)!=(e|0)){continue}break}}J[q>>2]=0}ga=p- -64|0;e=B>>>0>3;a=0;while(1){b=J[(f+32|0)+(a<<2)>>2];c=(f+112|0)+P(b,12)|0;g=Q(N[c>>2]+N[G>>2]);N[f+64>>2]=g;h=Q(N[c+4>>2]+N[G+4>>2]);N[f+68>>2]=h;l=Q(N[c+8>>2]+N[G+8>>2]);N[f+72>>2]=l;K:{if(!e){j=N[d+48>>2];i=N[d+52>>2];m=N[d+56>>2];J[f+28>>2]=0;N[f+24>>2]=-m;N[f+20>>2]=-i;N[f+16>>2]=-j;ia[J[J[W>>2]+16>>2]](W,f+16|0,f- -64|0,Q(-N[(f+80|0)+(b<<2)>>2]));break K}i=N[d+48>>2];m=N[d+52>>2];j=N[d+56>>2];J[f+28>>2]=0;N[f+24>>2]=-j;N[f+20>>2]=-m;N[f+16>>2]=-i;J[f+12>>2]=0;t=j;j=N[(f+80|0)+(b<<2)>>2];N[f+8>>2]=l-Q(t*j);N[f+4>>2]=h-Q(m*j);N[f>>2]=g-Q(i*j);ia[J[J[W>>2]+16>>2]](W,f+16|0,f,Q(-j))}a=a+1|0;if((X|0)!=(a|0)){continue}break}}J[d+40>>2]=B}ga=f+368|0;ga=d+160|0}function QA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=0,m=Q(0),n=0,o=0,p=0,q=0,r=0,s=Q(0),t=Q(0),u=0,v=Q(0),w=Q(0),x=0,y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=0,G=0,I=Q(0),L=Q(0),M=Q(0),O=0,S=Q(0),T=0,U=0,V=0,W=Q(0),X=Q(0),Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=Q(0),na=Q(0);if((c|0)>0){while(1){_=0;r=ga-96|0;ga=r;Z=J[($<<2)+b>>2];o=J[Z+744>>2];p=J[Z+740>>2];F=yb(a,p,N[d+12>>2]);G=yb(a,o,N[d+12>>2]);n=J[a+16>>2];i=n+P(F,244)|0;a:{b:{if(N[i+128>>2]!=Q(0)|N[i+132>>2]!=Q(0)|N[(n+P(F,244)|0)+136>>2]!=Q(0)){break b}i=n+P(G,244)|0;if(N[i+128>>2]!=Q(0)|N[i+132>>2]!=Q(0)){break b}if(N[(n+P(G,244)|0)+136>>2]==Q(0)){break a}}if(J[Z+748>>2]<=0){break a}T=n+P(G,244)|0;U=n+P(F,244)|0;aa=1;while(1){q=P(_,184)+Z|0;if(N[q+84>>2]<=N[Z+756>>2]){y=q+4|0;n=J[a+28>>2];i=n;c:{if((i|0)!=J[a+32>>2]){break c}i=n;x=i?i<<1:1;if((x|0)<=(i|0)){break c}d:{if(!x){u=0;l=n;break d}J[8369]=J[8369]+1;u=ia[J[6782]](P(x,152),16)|0;l=J[a+28>>2]}e:{if((l|0)<=0){break e}i=0;if((l|0)!=1){V=l&-2;E=0;while(1){O=P(i,152);sa(O+u|0,O+J[a+36>>2]|0,152);O=P(i|1,152);sa(O+u|0,O+J[a+36>>2]|0,152);i=i+2|0;E=E+2|0;if((V|0)!=(E|0)){continue}break}}if(!(l&1)){break e}i=P(i,152);sa(i+u|0,i+J[a+36>>2]|0,152)}i=J[a+36>>2];if(!(i?!i|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](i)}J[a+36>>2]=u;H[a+40|0]=1;J[a+32>>2]=x;i=J[a+28>>2]}J[a+28>>2]=i+1;ea=J[p+236>>2];fa=J[o+236>>2];i=J[a+36>>2]+P(n,152)|0;J[i+148>>2]=G;J[i+144>>2]=F;J[i+132>>2]=y;g=N[q+52>>2];f=N[q+56>>2];e=N[q+60>>2];h=N[p+52>>2];k=N[p+56>>2];m=N[p+60>>2];J[r+92>>2]=0;e=Q(e-m);N[r+88>>2]=e;f=Q(f-k);N[r+84>>2]=f;g=Q(g-h);N[r+80>>2]=g;m=N[q+36>>2];k=N[q+40>>2];h=N[q+44>>2];j=N[o+52>>2];t=N[o+56>>2];v=N[o+60>>2];J[r+76>>2]=0;h=Q(h-v);N[r+72>>2]=h;k=Q(k-t);N[r+68>>2]=k;m=Q(m-j);N[r+64>>2]=m;A=Q(0);D=Q(0);S=Q(0);ha=Q(0);if(J[U+240>>2]){j=Q(N[U+192>>2]+N[U+224>>2]);t=Q(N[U+196>>2]+N[U+228>>2]);ha=Q(Q(N[U+184>>2]+N[U+216>>2])+Q(Q(j*f)-Q(g*t)));v=Q(N[U+200>>2]+N[U+232>>2]);S=Q(Q(N[U+180>>2]+N[U+212>>2])+Q(Q(v*g)-Q(e*j)));D=Q(Q(N[U+176>>2]+N[U+208>>2])+Q(Q(t*e)-Q(f*v)))}ja=Q(0);ka=Q(0);if(J[T+240>>2]){e=Q(N[T+192>>2]+N[T+224>>2]);f=Q(N[T+196>>2]+N[T+228>>2]);ka=Q(Q(N[T+184>>2]+N[T+216>>2])+Q(Q(e*k)-Q(m*f)));g=Q(N[T+200>>2]+N[T+232>>2]);ja=Q(Q(N[T+180>>2]+N[T+212>>2])+Q(Q(g*m)-Q(h*e)));A=Q(Q(N[T+176>>2]+N[T+208>>2])+Q(Q(f*h)-Q(k*g)))}la=N[q+76>>2];V=q+68|0;ma=N[V>>2];na=N[q+72>>2];m=Q(0);E=J[a+16>>2];ba=E+P(G,244)|0;l=J[ba+240>>2];ca=E+P(F,244)|0;u=J[ca+240>>2];J[r+60>>2]=1065353216;e=N[r+80>>2];f=N[y+68>>2];g=N[y+64>>2];h=N[r+84>>2];j=Q(Q(e*f)-Q(g*h));k=N[r+88>>2];s=Q(k*g);g=N[y+72>>2];t=Q(s-Q(g*e));v=Q(Q(h*g)-Q(f*k));f=Q(0);e=Q(0);g=Q(0);if(u){g=Q(Q(Q(N[u+304>>2]*j)+Q(Q(N[u+296>>2]*v)+Q(t*N[u+300>>2])))*N[u+552>>2]);f=Q(Q(Q(N[u+272>>2]*j)+Q(Q(N[u+264>>2]*v)+Q(t*N[u+268>>2])))*N[u+544>>2]);e=Q(Q(Q(N[u+288>>2]*j)+Q(Q(N[u+280>>2]*v)+Q(t*N[u+284>>2])))*N[u+548>>2])}N[i+64>>2]=f;J[i+76>>2]=0;N[i+72>>2]=g;N[i+68>>2]=e;x=r- -64|0;h=N[x>>2];k=N[y+68>>2];w=N[y+64>>2];B=N[x+4>>2];s=Q(Q(h*k)-Q(w*B));C=N[x+8>>2];I=N[y+72>>2];w=Q(Q(C*w)-Q(I*h));B=Q(Q(B*I)-Q(k*C));h=Q(0);k=Q(0);if(l){m=Q(-B);k=Q(Q(Q(Q(N[l+296>>2]*m)-Q(N[l+300>>2]*w))-Q(N[l+304>>2]*s))*N[l+552>>2]);h=Q(Q(Q(Q(N[l+280>>2]*m)-Q(N[l+284>>2]*w))-Q(N[l+288>>2]*s))*N[l+548>>2]);m=Q(Q(Q(Q(N[l+264>>2]*m)-Q(N[l+268>>2]*w))-Q(N[l+272>>2]*s))*N[l+544>>2])}N[i+80>>2]=m;J[i+92>>2]=0;N[i+88>>2]=k;N[i+84>>2]=h;L=N[r+60>>2];if(u){I=N[r+84>>2];M=N[r+80>>2];C=Q(N[y+72>>2]*Q(Q(f*I)-Q(M*e)));z=e;e=N[r+88>>2];f=Q(N[u+344>>2]+Q(C+Q(Q(N[y+64>>2]*Q(Q(z*e)-Q(I*g)))+Q(Q(Q(g*M)-Q(e*f))*N[y+68>>2]))))}else{f=Q(0)}e=f;if(l){f=N[x>>2];g=N[x+4>>2];z=Q(N[y+72>>2]*Q(Q(h*f)-Q(m*g)));C=Q(k*g);g=N[x+8>>2];f=Q(N[l+344>>2]+Q(z+Q(Q(N[y+64>>2]*Q(C-Q(h*g)))+Q(Q(Q(m*g)-Q(k*f))*N[y+68>>2]))))}else{f=Q(0)}N[i+108>>2]=L/Q(e+f);f:{if(u){O=y- -64|0;da=J[O+4>>2];J[i+16>>2]=J[O>>2];J[i+20>>2]=da;da=J[O+12>>2];J[i+24>>2]=J[O+8>>2];J[i+28>>2]=da;J[i+12>>2]=0;N[i+8>>2]=j;N[i+4>>2]=t;N[i>>2]=v;break f}J[i>>2]=0;J[i+4>>2]=0;J[i+24>>2]=0;J[i+28>>2]=0;J[i+16>>2]=0;J[i+20>>2]=0;J[i+8>>2]=0;J[i+12>>2]=0}g:{if(l){e=N[y+64>>2];f=N[y+68>>2];g=N[y+72>>2];J[i+60>>2]=0;J[i+44>>2]=0;N[i+40>>2]=-s;N[i+36>>2]=-w;N[i+32>>2]=-B;N[i+56>>2]=-g;N[i+52>>2]=-f;N[i+48>>2]=-e;break g}J[i+32>>2]=0;J[i+36>>2]=0;J[i+56>>2]=0;J[i+60>>2]=0;J[i+48>>2]=0;J[i+52>>2]=0;J[i+40>>2]=0;J[i+44>>2]=0}m=Q(0);f=Q(0);e=Q(0);g=Q(0);if(u){e=N[u+328>>2];f=N[r+84>>2];h=N[r+80>>2];k=N[u+332>>2];g=Q(Q(Q(e*f)-Q(h*k))+N[u+320>>2]);j=N[u+336>>2];s=Q(j*h);h=N[r+88>>2];e=Q(Q(s-Q(h*e))+N[u+316>>2]);f=Q(Q(Q(k*h)-Q(f*j))+N[u+312>>2])}h=Q(0);k=Q(0);if(l){h=N[l+328>>2];m=N[x+4>>2];j=N[x>>2];t=N[l+332>>2];k=Q(Q(Q(h*m)-Q(j*t))+N[l+320>>2]);v=N[l+336>>2];s=Q(v*j);j=N[x+8>>2];h=Q(Q(s-Q(j*h))+N[l+316>>2]);m=Q(Q(Q(t*j)-Q(m*v))+N[l+312>>2])}I=N[d+56>>2];M=N[y+80>>2];j=N[y+72>>2];t=N[y+64>>2];v=N[y+68>>2];N[i+104>>2]=N[y+84>>2];m=Q(N[y+92>>2]*Q(-Q(Q(j*Q(g-k))+Q(Q(t*Q(f-m))+Q(v*Q(e-h))))));h:{if(K[d+64|0]&4){e=Q(N[y+120>>2]*N[d+60>>2]);N[i+100>>2]=e;if(!(!u|!J[ca+240>>2])){f=N[u+356>>2];g=N[i+24>>2];h=N[u+352>>2];k=N[i+20>>2];x=E+P(F,244)|0;N[x+64>>2]=Q(N[x+112>>2]*Q(e*Q(Q(N[i+16>>2]*N[x+128>>2])*N[u+348>>2])))+N[x+64>>2];N[x+68>>2]=Q(Q(e*Q(h*Q(k*N[x+132>>2])))*N[x+116>>2])+N[x+68>>2];N[x+72>>2]=Q(Q(e*Q(f*Q(g*N[x+136>>2])))*N[x+120>>2])+N[x+72>>2];f=N[i+72>>2];g=N[i+68>>2];N[x+80>>2]=Q(Q(e*N[x+96>>2])*N[i+64>>2])+N[x+80>>2];h=N[x+104>>2];N[x+84>>2]=Q(g*Q(e*N[x+100>>2]))+N[x+84>>2];N[x+88>>2]=Q(f*Q(e*h))+N[x+88>>2]}if(!l|!J[ba+240>>2]){break h}f=N[l+356>>2];g=N[i+56>>2];h=N[l+352>>2];k=N[i+52>>2];j=N[i+88>>2];t=N[i+84>>2];v=N[i+80>>2];u=E+P(G,244)|0;e=Q(-N[i+100>>2]);N[u+64>>2]=N[u+64>>2]-Q(N[u+112>>2]*Q(Q(Q(N[u+128>>2]*N[i+48>>2])*N[l+348>>2])*e));N[u+68>>2]=N[u+68>>2]-Q(Q(Q(h*Q(k*N[u+132>>2]))*e)*N[u+116>>2]);N[u+72>>2]=N[u+72>>2]-Q(Q(Q(f*Q(g*N[u+136>>2]))*e)*N[u+120>>2]);N[u+80>>2]=N[u+80>>2]-Q(v*Q(N[u+96>>2]*e));f=N[u+104>>2];N[u+84>>2]=N[u+84>>2]-Q(t*Q(N[u+100>>2]*e));N[u+88>>2]=N[u+88>>2]-Q(j*Q(f*e));break h}J[i+100>>2]=0}J[i+96>>2]=0;e=Q(0);g=Q(0);h=Q(0);k=Q(0);j=Q(0);t=Q(0);v=Q(0);if(J[ca+240>>2]){l=E+P(F,244)|0;v=N[l+224>>2];k=N[l+208>>2];j=N[l+232>>2];t=N[l+228>>2];h=N[l+212>>2];g=N[l+216>>2]}f=Q(0);s=Q(0);w=Q(0);B=Q(0);C=Q(0);if(J[ba+240>>2]){l=E+P(G,244)|0;C=N[l+224>>2];w=N[l+232>>2];B=N[l+228>>2];s=N[l+216>>2];f=N[l+212>>2];e=N[l+208>>2]}l=E+P(F,244)|0;j=Q(Q(Q(N[i+24>>2]*Q(g+N[l+184>>2]))+Q(Q(N[i+16>>2]*Q(k+N[l+176>>2]))+Q(Q(h+N[l+180>>2])*N[i+20>>2])))+Q(Q(N[i+8>>2]*Q(j+N[l+200>>2]))+Q(Q(N[i>>2]*Q(v+N[l+192>>2]))+Q(Q(t+N[l+196>>2])*N[i+4>>2]))));l=E+P(G,244)|0;f=Q((m<=Q(0)?Q(0):m)-Q(j+Q(Q(Q(N[i+56>>2]*Q(s+N[l+184>>2]))+Q(Q(N[i+48>>2]*Q(e+N[l+176>>2]))+Q(Q(f+N[l+180>>2])*N[i+52>>2])))+Q(Q(N[i+40>>2]*Q(w+N[l+200>>2]))+Q(Q(N[i+32>>2]*Q(C+N[l+192>>2]))+Q(Q(B+N[l+196>>2])*N[i+36>>2]))))));g=Q(M+I);l=!J[d+44>>2]|g>N[d+48>>2];e=Q(0);i:{if(g>Q(0)){f=Q(f-Q(g/N[d+12>>2]));break i}e=Q(Q(N[(l?32:36)+d>>2]*Q(-g))/N[d+12>>2])}J[i+124>>2]=1343554297;J[i+116>>2]=0;J[i+120>>2]=0;j=e;e=N[i+108>>2];g=Q(j*e);N[i+128>>2]=l?Q(0):g;N[i+112>>2]=Q(f*e)+(l?g:Q(-0));J[i+140>>2]=J[a+68>>2];e=Q(0);f=Q(0);g=Q(0);h=Q(0);if(ea&2){l=ea<<30>>31&p;h=N[l+336>>2];g=N[l+332>>2];f=N[l+328>>2]}k=Q(0);m=Q(0);if(fa&2){l=fa<<30>>31&o;m=N[l+336>>2];k=N[l+332>>2];e=N[l+328>>2]}J[r+52>>2]=0;h=Q(m-h);N[r+48>>2]=h;g=Q(k-g);N[r+44>>2]=g;e=Q(e-f);N[r+40>>2]=e;j:{if(!(N[q+92>>2]>Q(0))|!aa){break j}f=Q(Y(Q(Q(h*h)+Q(Q(e*e)+Q(g*g)))));if(f>N[d+80>>2]){j=h;h=Q(Q(1)/f);f=Q(j*h);N[r+48>>2]=f;g=Q(g*h);N[r+44>>2]=g;e=Q(e*h);N[r+40>>2]=e;if(K[p+180|0]&2){m=N[p+44>>2];j=N[p+12>>2];t=N[p+28>>2];h=Q(Q(Q(m*f)+Q(Q(j*e)+Q(g*t)))*N[p+172>>2]);v=N[p+36>>2];s=N[p+4>>2];w=N[p+20>>2];k=Q(Q(Q(v*f)+Q(Q(s*e)+Q(g*w)))*N[p+164>>2]);B=N[p+40>>2];C=N[p+8>>2];z=g;g=N[p+24>>2];e=Q(Q(Q(B*f)+Q(Q(C*e)+Q(z*g)))*N[p+168>>2]);f=Q(Q(m*h)+Q(Q(v*k)+Q(B*e)));N[r+48>>2]=f;g=Q(Q(t*h)+Q(Q(w*k)+Q(g*e)));N[r+44>>2]=g;e=Q(Q(j*h)+Q(Q(s*k)+Q(C*e)));N[r+40>>2]=e}if(K[o+180|0]&2){C=N[o+172>>2];h=N[o+44>>2];k=N[o+12>>2];m=N[o+28>>2];I=N[o+164>>2];j=N[o+36>>2];t=N[o+4>>2];v=N[o+20>>2];M=N[o+168>>2];s=N[o+40>>2];w=N[o+8>>2];B=N[o+24>>2];J[r+52>>2]=0;z=h;h=Q(C*Q(Q(h*f)+Q(Q(k*e)+Q(g*m))));L=j;j=Q(I*Q(Q(j*f)+Q(Q(t*e)+Q(v*g))));e=Q(M*Q(Q(s*f)+Q(Q(w*e)+Q(g*B))));f=Q(Q(z*h)+Q(Q(L*j)+Q(s*e)));N[r+48>>2]=f;g=Q(Q(m*h)+Q(Q(v*j)+Q(B*e)));N[r+44>>2]=g;e=Q(Q(k*h)+Q(Q(t*j)+Q(w*e)));N[r+40>>2]=e}aa=0;if(!(+Q(Y(Q(Q(f*f)+Q(Q(e*e)+Q(g*g)))))>.001)){break j}Ae(a,r+40|0,F,G,n,y);break j}Ae(a,V,F,G,n,y);e=N[q+76>>2];k:{if(Q(R(e))>Q(.7071067690849304)){f=N[q+72>>2];J[r+24>>2]=0;k=Q(Q(f*f)+Q(e*e));h=Q(Q(1)/Q(Y(k)));g=Q(f*h);N[r+32>>2]=g;f=Q(h*Q(-e));N[r+28>>2]=f;m=Q(k*h);N[r+8>>2]=m;e=N[V>>2];k=Q(g*Q(-e));N[r+12>>2]=k;h=Q(0);e=Q(f*e);break k}f=N[V>>2];g=N[q+72>>2];J[r+32>>2]=0;t=Q(Q(f*f)+Q(g*g));j=Q(Q(1)/Q(Y(t)));f=Q(f*j);N[r+28>>2]=f;h=Q(j*Q(-g));N[r+24>>2]=h;k=Q(e*h);N[r+12>>2]=k;m=Q(f*Q(-e));N[r+8>>2]=m;g=Q(0);e=Q(t*j)}N[r+16>>2]=e;if(K[p+180|0]&2){L=N[p+172>>2];j=N[p+44>>2];t=N[p+12>>2];v=N[p+28>>2];W=N[p+164>>2];s=N[p+36>>2];w=N[p+4>>2];B=N[p+20>>2];X=N[p+168>>2];C=N[p+40>>2];I=N[p+8>>2];M=N[p+24>>2];J[r+36>>2]=0;z=j;j=Q(L*Q(Q(j*g)+Q(Q(t*h)+Q(f*v))));L=s;s=Q(W*Q(Q(s*g)+Q(Q(w*h)+Q(B*f))));h=Q(X*Q(Q(C*g)+Q(Q(I*h)+Q(f*M))));g=Q(Q(z*j)+Q(Q(L*s)+Q(C*h)));N[r+32>>2]=g;f=Q(Q(v*j)+Q(Q(B*s)+Q(M*h)));N[r+28>>2]=f;h=Q(Q(t*j)+Q(Q(w*s)+Q(I*h)));N[r+24>>2]=h}if(K[o+180|0]&2){L=N[o+172>>2];j=N[o+44>>2];t=N[o+12>>2];v=N[o+28>>2];W=N[o+164>>2];s=N[o+36>>2];w=N[o+4>>2];B=N[o+20>>2];X=N[o+168>>2];C=N[o+40>>2];I=N[o+8>>2];M=N[o+24>>2];J[r+36>>2]=0;z=j;j=Q(L*Q(Q(j*g)+Q(Q(t*h)+Q(f*v))));L=s;s=Q(W*Q(Q(s*g)+Q(Q(w*h)+Q(B*f))));h=Q(X*Q(Q(C*g)+Q(Q(I*h)+Q(f*M))));g=Q(Q(z*j)+Q(Q(L*s)+Q(C*h)));N[r+32>>2]=g;f=Q(Q(v*j)+Q(Q(B*s)+Q(M*h)));N[r+28>>2]=f;h=Q(Q(t*j)+Q(Q(w*s)+Q(I*h)));N[r+24>>2]=h}if(K[p+180|0]&2){L=N[p+172>>2];j=N[p+44>>2];t=N[p+12>>2];v=N[p+28>>2];W=N[p+164>>2];s=N[p+36>>2];w=N[p+4>>2];B=N[p+20>>2];X=N[p+168>>2];C=N[p+40>>2];I=N[p+8>>2];M=N[p+24>>2];J[r+20>>2]=0;z=j;j=Q(L*Q(Q(j*e)+Q(Q(t*m)+Q(k*v))));L=s;s=Q(W*Q(Q(s*e)+Q(Q(w*m)+Q(B*k))));m=Q(X*Q(Q(C*e)+Q(Q(I*m)+Q(k*M))));e=Q(Q(z*j)+Q(Q(L*s)+Q(C*m)));N[r+16>>2]=e;k=Q(Q(v*j)+Q(Q(B*s)+Q(M*m)));N[r+12>>2]=k;m=Q(Q(t*j)+Q(Q(w*s)+Q(I*m)));N[r+8>>2]=m}if(K[o+180|0]&2){L=N[o+172>>2];j=N[o+44>>2];t=N[o+12>>2];v=N[o+28>>2];W=N[o+164>>2];s=N[o+36>>2];w=N[o+4>>2];B=N[o+20>>2];X=N[o+168>>2];C=N[o+40>>2];I=N[o+8>>2];M=N[o+24>>2];J[r+20>>2]=0;z=j;j=Q(L*Q(Q(j*e)+Q(Q(t*m)+Q(k*v))));L=s;s=Q(W*Q(Q(s*e)+Q(Q(w*m)+Q(B*k))));m=Q(X*Q(Q(C*e)+Q(Q(I*m)+Q(k*M))));e=Q(Q(z*j)+Q(Q(L*s)+Q(C*m)));N[r+16>>2]=e;k=Q(Q(v*j)+Q(Q(B*s)+Q(M*m)));N[r+12>>2]=k;m=Q(Q(t*j)+Q(Q(w*s)+Q(I*m)));N[r+8>>2]=m}if(+Q(Y(Q(Q(g*g)+Q(Q(h*h)+Q(f*f)))))>.001){Ae(a,r+24|0,F,G,n,y)}if(+Q(Y(Q(Q(e*e)+Q(Q(m*m)+Q(k*k)))))>.001){Ae(a,r+8|0,F,G,n,y)}aa=0}l:{if(!(K[q+120|0]?K[d+64|0]&32:0)){g=N[V>>2];e=N[q+72>>2];k=N[q+76>>2];J[q+168>>2]=0;h=Q(ha-ka);j=Q(D-A);m=Q(S-ja);f=Q(Q(la*h)+Q(Q(ma*j)+Q(m*na)));h=Q(h-Q(k*f));N[q+164>>2]=h;m=Q(m-Q(f*e));N[q+160>>2]=m;l=q+156|0;f=Q(j-Q(f*g));N[l>>2]=f;m:{if(K[d+64|0]&64){break m}j=Q(Q(h*h)+Q(Q(f*f)+Q(m*m)));if(!(j>Q(1.1920928955078125e-7))){break m}g=Q(Q(1)/Q(Y(j)));e=Q(f*g);N[l>>2]=e;f=Q(m*g);N[q+160>>2]=f;g=Q(h*g);N[q+164>>2]=g;if(H[p+180|0]&1){m=N[p+44>>2];j=N[p+12>>2];t=N[p+28>>2];h=Q(Q(Q(m*g)+Q(Q(j*e)+Q(f*t)))*N[p+172>>2]);v=N[p+36>>2];s=N[p+4>>2];w=N[p+20>>2];k=Q(Q(Q(v*g)+Q(Q(s*e)+Q(f*w)))*N[p+164>>2]);A=N[p+40>>2];D=N[p+8>>2];z=f;f=N[p+24>>2];g=Q(Q(Q(A*g)+Q(Q(D*e)+Q(z*f)))*N[p+168>>2]);e=Q(Q(j*h)+Q(Q(s*k)+Q(D*g)));N[l>>2]=e;f=Q(Q(t*h)+Q(Q(w*k)+Q(f*g)));N[q+160>>2]=f;g=Q(Q(m*h)+Q(Q(v*k)+Q(A*g)));N[q+164>>2]=g;J[q+168>>2]=0}if(H[o+180|0]&1){m=N[o+44>>2];j=N[o+12>>2];t=N[o+28>>2];h=Q(Q(Q(m*g)+Q(Q(j*e)+Q(f*t)))*N[o+172>>2]);v=N[o+36>>2];s=N[o+4>>2];w=N[o+20>>2];k=Q(Q(Q(v*g)+Q(Q(s*e)+Q(w*f)))*N[o+164>>2]);A=N[o+40>>2];L=Q(A*g);g=N[o+8>>2];z=f;f=N[o+24>>2];e=Q(Q(L+Q(Q(g*e)+Q(z*f)))*N[o+168>>2]);N[l>>2]=Q(j*h)+Q(Q(s*k)+Q(g*e));N[q+160>>2]=Q(t*h)+Q(Q(w*k)+Q(f*e));N[q+164>>2]=Q(m*h)+Q(Q(v*k)+Q(A*e));J[q+168>>2]=0}v=N[r+60>>2];Bc(a,l,F,G,n,y,r+80|0,r- -64|0,v,Q(0),Q(0));if(!(K[d+64|0]&16)){break l}e=N[q+160>>2];f=N[q+72>>2];g=N[V>>2];h=N[q+164>>2];k=N[l>>2];m=N[q+76>>2];J[q+184>>2]=0;j=Q(Q(k*f)-Q(g*e));t=Q(Q(e*m)-Q(f*h));f=Q(Q(h*g)-Q(m*k));g=Q(Q(1)/Q(Y(Q(Q(j*j)+Q(Q(t*t)+Q(f*f))))));e=Q(j*g);N[q+180>>2]=e;f=Q(f*g);N[q+176>>2]=f;l=q+172|0;g=Q(t*g);N[l>>2]=g;if(H[p+180|0]&1){m=N[p+44>>2];j=N[p+12>>2];t=N[p+28>>2];h=Q(Q(Q(m*e)+Q(Q(j*g)+Q(f*t)))*N[p+172>>2]);s=N[p+36>>2];w=N[p+4>>2];A=N[p+20>>2];k=Q(Q(Q(s*e)+Q(Q(w*g)+Q(f*A)))*N[p+164>>2]);D=N[p+40>>2];S=N[p+8>>2];z=f;f=N[p+24>>2];e=Q(Q(Q(D*e)+Q(Q(S*g)+Q(z*f)))*N[p+168>>2]);g=Q(Q(j*h)+Q(Q(w*k)+Q(S*e)));N[l>>2]=g;f=Q(Q(t*h)+Q(Q(A*k)+Q(f*e)));N[q+176>>2]=f;e=Q(Q(m*h)+Q(Q(s*k)+Q(D*e)));N[q+180>>2]=e;J[q+184>>2]=0}if(H[o+180|0]&1){m=N[o+44>>2];j=N[o+12>>2];t=N[o+28>>2];h=Q(Q(Q(m*e)+Q(Q(j*g)+Q(f*t)))*N[o+172>>2]);s=N[o+36>>2];w=N[o+4>>2];A=N[o+20>>2];k=Q(Q(Q(s*e)+Q(Q(w*g)+Q(A*f)))*N[o+164>>2]);D=N[o+40>>2];S=N[o+8>>2];z=f;f=N[o+24>>2];e=Q(Q(Q(D*e)+Q(Q(S*g)+Q(z*f)))*N[o+168>>2]);N[l>>2]=Q(j*h)+Q(Q(w*k)+Q(S*e));N[q+176>>2]=Q(t*h)+Q(Q(A*k)+Q(f*e));N[q+180>>2]=Q(m*h)+Q(Q(s*k)+Q(D*e));J[q+184>>2]=0}Bc(a,l,F,G,n,y,r+80|0,r- -64|0,v,Q(0),Q(0));break l}u=q+172|0;n:{if(Q(R(k))>Q(.7071067690849304)){J[l>>2]=0;m=Q(Q(e*e)+Q(k*k));f=Q(Q(1)/Q(Y(m)));h=Q(f*Q(-k));N[q+160>>2]=h;e=Q(e*f);N[q+164>>2]=e;k=Q(m*f);m=Q(g*h);g=Q(e*Q(-g));f=Q(0);break n}j=Q(Q(g*g)+Q(e*e));m=Q(Q(1)/Q(Y(j)));f=Q(m*Q(-e));N[l>>2]=f;h=Q(g*m);N[q+160>>2]=h;J[q+164>>2]=0;m=Q(j*m);g=Q(k*f);k=Q(h*Q(-k));e=Q(0)}N[u>>2]=k;N[q+180>>2]=m;N[q+176>>2]=g;if(H[p+180|0]&1){m=N[p+44>>2];j=N[p+12>>2];t=N[p+28>>2];g=Q(Q(Q(m*e)+Q(Q(j*f)+Q(h*t)))*N[p+172>>2]);v=N[p+36>>2];s=N[p+4>>2];w=N[p+20>>2];k=Q(Q(Q(v*e)+Q(Q(s*f)+Q(w*h)))*N[p+164>>2]);A=N[p+40>>2];D=N[p+8>>2];z=h;h=N[p+24>>2];e=Q(Q(Q(A*e)+Q(Q(D*f)+Q(z*h)))*N[p+168>>2]);f=Q(Q(j*g)+Q(Q(s*k)+Q(D*e)));N[l>>2]=f;h=Q(Q(t*g)+Q(Q(w*k)+Q(h*e)));N[q+160>>2]=h;e=Q(Q(m*g)+Q(Q(v*k)+Q(A*e)));N[q+164>>2]=e;J[q+168>>2]=0}if(H[o+180|0]&1){m=N[o+44>>2];j=N[o+12>>2];t=N[o+28>>2];g=Q(Q(Q(m*e)+Q(Q(j*f)+Q(h*t)))*N[o+172>>2]);v=N[o+36>>2];s=N[o+4>>2];w=N[o+20>>2];k=Q(Q(Q(v*e)+Q(Q(s*f)+Q(w*h)))*N[o+164>>2]);A=N[o+40>>2];D=N[o+8>>2];z=Q(D*f);f=N[o+24>>2];e=Q(Q(Q(A*e)+Q(z+Q(h*f)))*N[o+168>>2]);N[l>>2]=Q(j*g)+Q(Q(s*k)+Q(D*e));N[q+160>>2]=Q(t*g)+Q(Q(w*k)+Q(f*e));N[q+164>>2]=Q(m*g)+Q(Q(v*k)+Q(A*e));J[q+168>>2]=0}m=N[r+60>>2];Bc(a,l,F,G,n,y,r+80|0,r- -64|0,m,Q(0),Q(0));l=J[d+64>>2];if(l&16){if(H[p+180|0]&1){j=N[p+44>>2];g=N[q+180>>2];t=N[p+12>>2];h=N[u>>2];k=N[q+176>>2];v=N[p+28>>2];e=Q(Q(Q(j*g)+Q(Q(t*h)+Q(k*v)))*N[p+172>>2]);s=N[p+36>>2];w=N[p+4>>2];A=N[p+20>>2];f=Q(Q(Q(s*g)+Q(Q(w*h)+Q(A*k)))*N[p+164>>2]);D=N[p+40>>2];S=N[p+8>>2];z=Q(S*h);h=N[p+24>>2];g=Q(Q(Q(D*g)+Q(z+Q(k*h)))*N[p+168>>2]);N[u>>2]=Q(t*e)+Q(Q(w*f)+Q(S*g));N[q+176>>2]=Q(v*e)+Q(Q(A*f)+Q(h*g));N[q+180>>2]=Q(j*e)+Q(Q(s*f)+Q(D*g));J[q+184>>2]=0}if(H[o+180|0]&1){j=N[o+44>>2];g=N[q+180>>2];t=N[o+12>>2];h=N[u>>2];k=N[q+176>>2];v=N[o+28>>2];e=Q(Q(Q(j*g)+Q(Q(t*h)+Q(k*v)))*N[o+172>>2]);s=N[o+36>>2];w=N[o+4>>2];A=N[o+20>>2];f=Q(Q(Q(s*g)+Q(Q(w*h)+Q(A*k)))*N[o+164>>2]);D=N[o+40>>2];S=N[o+8>>2];z=Q(S*h);h=N[o+24>>2];g=Q(Q(Q(D*g)+Q(z+Q(k*h)))*N[o+168>>2]);N[u>>2]=Q(t*e)+Q(Q(w*f)+Q(S*g));N[q+176>>2]=Q(v*e)+Q(Q(A*f)+Q(h*g));N[q+180>>2]=Q(j*e)+Q(Q(s*f)+Q(D*g));J[q+184>>2]=0}Bc(a,u,F,G,n,y,r+80|0,r- -64|0,m,Q(0),Q(0));l=J[d+64>>2]}if((l&80)!=80){break l}H[q+120|0]=1;break l}e=N[r+60>>2];Bc(a,q+156|0,F,G,n,y,r+80|0,r- -64|0,e,N[q+136>>2],N[q+144>>2]);if(!(K[d+64|0]&16)){break l}Bc(a,q+172|0,F,G,n,y,r+80|0,r- -64|0,e,N[q+140>>2],N[q+148>>2])}u=J[a+76>>2];V=J[i+140>>2];O=J[d+64>>2];o:{if(O&4){x=J[a+16>>2];i=J[(x+P(G,244)|0)+240>>2];l=J[(x+P(F,244)|0)+240>>2];q=u+P(V,152)|0;e=Q(N[y+124>>2]*N[d+60>>2]);N[q+100>>2]=e;if(l){g=N[l+356>>2];h=N[q+24>>2];k=N[l+352>>2];m=N[q+20>>2];n=x+P(F,244)|0;f=N[l+344>>2];N[n+64>>2]=Q(Q(e*Q(Q(f*N[q+16>>2])*N[l+348>>2]))*N[n+112>>2])+N[n+64>>2];N[n+68>>2]=Q(Q(e*Q(k*Q(f*m)))*N[n+116>>2])+N[n+68>>2];N[n+72>>2]=Q(Q(e*Q(g*Q(f*h)))*N[n+120>>2])+N[n+72>>2];f=N[q+72>>2];g=N[q+68>>2];N[n+80>>2]=Q(Q(e*N[n+96>>2])*N[q+64>>2])+N[n+80>>2];h=N[n+104>>2];N[n+84>>2]=Q(g*Q(e*N[n+100>>2]))+N[n+84>>2];N[n+88>>2]=Q(f*Q(e*h))+N[n+88>>2]}if(i){E=u+P(V,152)|0;g=N[E+88>>2];h=N[E+84>>2];k=N[E+80>>2];m=N[i+356>>2];j=N[E+56>>2];t=N[i+352>>2];v=N[E+52>>2];n=x+P(G,244)|0;f=N[i+344>>2];e=N[q+100>>2];N[n+64>>2]=N[n+64>>2]+Q(Q(Q(Q(f*N[E+48>>2])*N[i+348>>2])*e)*N[n+112>>2]);N[n+68>>2]=N[n+68>>2]+Q(Q(e*Q(t*Q(f*v)))*N[n+116>>2]);N[n+72>>2]=N[n+72>>2]+Q(Q(e*Q(m*Q(f*j)))*N[n+120>>2]);N[n+80>>2]=N[n+80>>2]+Q(k*Q(e*N[n+96>>2]));f=N[n+104>>2];N[n+84>>2]=N[n+84>>2]+Q(h*Q(e*N[n+100>>2]));N[n+88>>2]=N[n+88>>2]+Q(g*Q(f*e))}if(!(O&16)){break o}E=V+1|0;q=u+P(E,152)|0;e=Q(N[y+128>>2]*N[d+60>>2]);N[q+100>>2]=e;if(l){g=N[q+24>>2];h=N[q+20>>2];n=x+P(F,244)|0;f=N[l+344>>2];N[n+64>>2]=Q(Q(e*Q(f*N[q+16>>2]))*N[n+112>>2])+N[n+64>>2];N[n+68>>2]=Q(Q(e*Q(f*h))*N[n+116>>2])+N[n+68>>2];N[n+72>>2]=Q(Q(e*Q(f*g))*N[n+120>>2])+N[n+72>>2];f=N[q+72>>2];g=N[q+68>>2];N[n+80>>2]=Q(Q(e*N[n+96>>2])*N[q+64>>2])+N[n+80>>2];h=N[n+104>>2];N[n+84>>2]=Q(g*Q(e*N[n+100>>2]))+N[n+84>>2];N[n+88>>2]=Q(f*Q(e*h))+N[n+88>>2]}if(!i){break o}l=u+P(E,152)|0;g=N[l+88>>2];h=N[l+84>>2];k=N[l+56>>2];m=N[l+52>>2];j=N[l+48>>2];f=N[i+344>>2];n=x+P(G,244)|0;e=N[q+100>>2];N[n+80>>2]=N[n+80>>2]+Q(N[l+80>>2]*Q(N[n+96>>2]*e));N[n+64>>2]=N[n+64>>2]+Q(Q(e*Q(f*j))*N[n+112>>2]);N[n+68>>2]=N[n+68>>2]+Q(Q(e*Q(f*m))*N[n+116>>2]);N[n+72>>2]=N[n+72>>2]+Q(Q(e*Q(f*k))*N[n+120>>2]);f=N[n+104>>2];N[n+84>>2]=N[n+84>>2]+Q(h*Q(e*N[n+100>>2]));N[n+88>>2]=N[n+88>>2]+Q(g*Q(f*e));break o}n=u+P(V,152)|0;J[n+100>>2]=0;if(!(O&16)){break o}J[n+252>>2]=0}}_=_+1|0;if((_|0)<J[Z+748>>2]){continue}break}}ga=r+96|0;$=$+1|0;if(($|0)!=(c|0)){continue}break}}}function rz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=Q(0),y=Q(0);l=ga-96|0;ga=l;kh(a,b,c);H[l+52|0]=1;J[l+48>>2]=0;H[l+72|0]=1;J[l+40>>2]=0;J[l+44>>2]=0;J[l+68>>2]=0;H[l+92|0]=1;J[l+60>>2]=0;J[l+64>>2]=0;J[l+88>>2]=0;J[l+80>>2]=0;J[l+84>>2]=0;J[l+28>>2]=0;H[l+32|0]=1;J[l+20>>2]=0;J[l+24>>2]=0;d=J[a+872>>2];J[b+292>>2]=d;a:{if(!d){J[b+260>>2]=0;break a}j=a+868|0;d=ia[J[J[c>>2]+28>>2]](c,j)|0;J[b+260>>2]=d;if(!d){break a}i=J[b+292>>2];h=ia[J[J[c>>2]+16>>2]](c,4,i)|0;if((i|0)>0){f=J[h+8>>2];while(1){d=J[J[a+880>>2]+(g<<2)>>2];if(d){e=ia[J[J[c>>2]+28>>2]](c,d)|0}else{e=0}J[f>>2]=e;if(!(ia[J[J[c>>2]+24>>2]](c,d)|0)){k=ia[J[J[c>>2]+16>>2]](c,16,1)|0;e=J[k+8>>2];J[e+12>>2]=J[d+16>>2];N[e+4>>2]=N[d+8>>2];N[e>>2]=N[d+4>>2];N[e+8>>2]=N[d+12>>2];ia[J[J[c>>2]+20>>2]](c,k,3706,1414349395,d)}f=f+4|0;g=g+1|0;if((i|0)!=(g|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,h,3706,1497453121,j)}d=J[a+712>>2];J[b+296>>2]=d;b:{if(!d){J[b+264>>2]=0;break b}u=a+708|0;d=ia[J[J[c>>2]+28>>2]](c,u)|0;J[b+264>>2]=d;if(!d){break b}t=J[b+296>>2];w=ia[J[J[c>>2]+16>>2]](c,100,t)|0;d=J[w+8>>2];g=0;J[l+12>>2]=0;if((t|0)>0){while(1){h=J[a+720>>2];f=h+P(g,104)|0;N[d+52>>2]=N[f+56>>2];N[d+56>>2]=N[f+60>>2];N[d+60>>2]=N[f- -64>>2];N[d- -64>>2]=N[f+68>>2];N[d+88>>2]=N[f+92>>2];e=0;J[d+92>>2]=0-(H[f+100|0]&1);N[d+84>>2]=N[f+88>>2];f=J[f+4>>2];if(f){e=ia[J[J[c>>2]+28>>2]](c,f)|0;g=J[l+12>>2];h=J[a+720>>2]}J[d>>2]=e;e=P(g,104)+h|0;N[d+68>>2]=N[e+72>>2];N[d+72>>2]=N[e+76>>2];N[d+76>>2]=N[e+80>>2];N[d+80>>2]=N[e+84>>2];N[d+4>>2]=N[e+8>>2];N[d+8>>2]=N[e+12>>2];N[d+12>>2]=N[e+16>>2];N[d+16>>2]=N[e+20>>2];N[d+20>>2]=N[e+24>>2];N[d+24>>2]=N[e+28>>2];N[d+28>>2]=N[e+32>>2];N[d+32>>2]=N[e+36>>2];N[d+36>>2]=N[e+40>>2];N[d+40>>2]=N[e+44>>2];N[d+44>>2]=N[e+48>>2];N[d+48>>2]=N[e+52>>2];J[l>>2]=e;g=0;o=0;c:{d:{e:{f:{g:{h:{j=l+16|0;i=J[j+48>>2];e=J[l>>2];f=(e<<15^-1)+e|0;f=P(f>>10^f,9);f=f>>6^f;f=(f<<11^-1)+f|0;s=i-1&(f>>16^f);i:{if(s>>>0>=M[j+4>>2]){break i}h=J[J[j+12>>2]+(s<<2)>>2];if((h|0)==-1){break i}f=J[j+32>>2];k=J[j+72>>2];while(1){if((e|0)==J[k+(h<<3)>>2]){break h}h=J[f+(h<<2)>>2];if((h|0)!=-1){continue}break}}m=J[j+44>>2];e=m;if((i|0)!=(e|0)){break d}e=i;n=e?e<<1:1;if((e|0)>=(n|0)){break d}j:{if(!n){k=0;e=i;break j}J[8369]=J[8369]+1;k=ia[J[6782]](n<<2,16)|0;e=J[j+44>>2]}f=J[j+52>>2];if((e|0)<=0){break g}h=0;if(e-1>>>0>=3){p=e&-4;while(1){q=h<<2;J[q+k>>2]=J[f+q>>2];r=q|4;J[r+k>>2]=J[f+r>>2];r=q|8;J[r+k>>2]=J[f+r>>2];q=q|12;J[q+k>>2]=J[f+q>>2];h=h+4|0;g=g+4|0;if((p|0)!=(g|0)){continue}break}}e=e&3;if(!e){break f}while(1){g=h<<2;J[g+k>>2]=J[f+g>>2];h=h+1|0;o=o+1|0;if((e|0)!=(o|0)){continue}break}break f}J[J[j+52>>2]+(h<<2)>>2]=J[l+12>>2];break c}if(!f){break e}}if(f?K[j+56|0]:0){J[8370]=J[8370]+1;ia[J[6783]](f)}e=J[j+44>>2]}J[j+52>>2]=k;J[j+48>>2]=n;H[j+56|0]=1}J[J[j+52>>2]+(e<<2)>>2]=J[l+12>>2];J[j+44>>2]=J[j+44>>2]+1;f=J[j- -64>>2];k:{if((f|0)!=J[j+68>>2]){break k}n=f?f<<1:1;if((n|0)<=(f|0)){break k}l:{if(!n){k=0;break l}J[8369]=J[8369]+1;k=ia[J[6782]](n<<3,16)|0;f=J[j+64>>2]}m:{if((f|0)<=0){break m}e=0;h=0;if(f-1>>>0>=3){q=f&-4;o=0;while(1){g=h<<3;p=g+k|0;r=g+J[j+72>>2]|0;v=J[r+4>>2];J[p>>2]=J[r>>2];J[p+4>>2]=v;p=g|8;r=p+k|0;p=p+J[j+72>>2]|0;v=J[p+4>>2];J[r>>2]=J[p>>2];J[r+4>>2]=v;p=g|16;r=p+k|0;p=p+J[j+72>>2]|0;v=J[p+4>>2];J[r>>2]=J[p>>2];J[r+4>>2]=v;g=g|24;p=g+k|0;g=g+J[j+72>>2]|0;r=J[g+4>>2];J[p>>2]=J[g>>2];J[p+4>>2]=r;h=h+4|0;o=o+4|0;if((q|0)!=(o|0)){continue}break}}f=f&3;if(!f){break m}while(1){g=h<<3;o=g+k|0;g=g+J[j+72>>2]|0;q=J[g+4>>2];J[o>>2]=J[g>>2];J[o+4>>2]=q;h=h+1|0;e=e+1|0;if((f|0)!=(e|0)){continue}break}}e=J[j+72>>2];if(!(e?!e|!K[j+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[j+72>>2]=k;H[j+76|0]=1;J[j+68>>2]=n;f=J[j+64>>2]}e=J[j+72>>2]+(f<<3)|0;f=J[l+4>>2];J[e>>2]=J[l>>2];J[e+4>>2]=f;J[j+64>>2]=J[j+64>>2]+1;if((i|0)<J[j+48>>2]){Sm(j);e=J[l>>2];e=(e<<15^-1)+e|0;e=P(e>>10^e,9);e=e>>6^e;e=(e<<11^-1)+e|0;s=J[j+48>>2]-1&(e>>16^e)}e=J[j+12>>2]+(s<<2)|0;J[J[j+32>>2]+(m<<2)>>2]=J[e>>2];J[e>>2]=m}g=J[l+12>>2]+1|0;J[l+12>>2]=g;d=d+100|0;if((g|0)<(t|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,w,4018,1145979475,u)}d=J[a+732>>2];J[b+300>>2]=d;n:{if(!d){J[b+268>>2]=0;break n}d=ia[J[J[c>>2]+28>>2]](c,J[a+740>>2])|0;J[b+268>>2]=d;if(!d){break n}f=0;e=J[b+300>>2];i=ia[J[J[c>>2]+16>>2]](c,20,e)|0;o:{if((e|0)<=0){h=J[a+740>>2];break o}h=J[a+740>>2];d=J[i+8>>2];while(1){g=0;j=P(f,52);k=j+h|0;J[d+16>>2]=0-(H[k+20|0]&1);k=J[k+4>>2];if(k){g=ia[J[J[c>>2]+28>>2]](c,k)|0;h=J[a+740>>2]}J[d>>2]=g;g=h+j|0;j=J[g+8>>2];if(j){m=(j-J[a+720>>2]|0)/104|0}else{m=-1}J[d+4>>2]=m;j=J[g+12>>2];if(j){m=(j-J[a+720>>2]|0)/104|0}else{m=-1}J[d+8>>2]=m;N[d+12>>2]=N[g+16>>2];d=d+20|0;f=f+1|0;if((e|0)!=(f|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,i,3727,1497453121,h)}d=J[a+752>>2];J[b+304>>2]=d;p:{if(!d){J[b+272>>2]=0;break p}d=ia[J[J[c>>2]+28>>2]](c,J[a+760>>2])|0;J[b+272>>2]=d;if(!d){break p}g=0;j=J[b+304>>2];k=ia[J[J[c>>2]+16>>2]](c,36,j)|0;q:{if((j|0)<=0){e=J[a+760>>2];break q}e=J[a+760>>2];d=J[k+8>>2];while(1){f=P(g,44);i=J[(f+e|0)+4>>2];r:{if(!i){h=0;break r}h=ia[J[J[c>>2]+28>>2]](c,i)|0;e=J[a+760>>2]}J[d+16>>2]=h;f=e+f|0;N[d>>2]=N[f+20>>2];N[d+4>>2]=N[f+24>>2];N[d+8>>2]=N[f+28>>2];N[d+12>>2]=N[f+32>>2];i=J[a+720>>2];h=J[f+8>>2];if(h){m=(h-i|0)/104|0}else{m=-1}J[d+20>>2]=m;h=J[f+12>>2];if(h){m=(h-i|0)/104|0}else{m=-1}J[d+24>>2]=m;h=J[f+16>>2];if(h){i=(h-i|0)/104|0}else{i=-1}J[d+28>>2]=i;N[d+32>>2]=N[f+36>>2];d=d+36|0;g=g+1|0;if((j|0)!=(g|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,k,4109,1497453121,e)}d=J[a+772>>2];J[b+308>>2]=d;s:{if(!d){J[b+276>>2]=0;break s}d=ia[J[J[c>>2]+28>>2]](c,J[a+780>>2])|0;J[b+276>>2]=d;if(!d){break s}e=0;h=J[b+308>>2];j=ia[J[J[c>>2]+16>>2]](c,100,h)|0;t:{if((h|0)<=0){g=J[a+780>>2];break t}g=J[a+780>>2];d=J[j+8>>2];while(1){i=J[a+720>>2];o=P(e,104);f=o+g|0;N[d>>2]=N[f+32>>2];N[d+4>>2]=N[f+36>>2];N[d+8>>2]=N[f+40>>2];N[d+12>>2]=N[f+44>>2];k=J[g+8>>2];if(k){m=(k-i|0)/104|0}else{m=-1}J[d+68>>2]=m;N[d+16>>2]=N[f+48>>2];N[d+20>>2]=N[f+52>>2];N[d+24>>2]=N[f+56>>2];N[d+28>>2]=N[f+60>>2];k=J[g+116>>2];if(k){m=(k-i|0)/104|0}else{m=-1}J[d+72>>2]=m;N[d+32>>2]=N[f- -64>>2];N[d+36>>2]=N[f+68>>2];N[d+40>>2]=N[f+72>>2];N[d+44>>2]=N[f+76>>2];k=J[g+224>>2];if(k){m=(k-i|0)/104|0}else{m=-1}J[d+76>>2]=m;N[d+48>>2]=N[f+80>>2];N[d+52>>2]=N[f+84>>2];N[d+56>>2]=N[f+88>>2];N[d+60>>2]=N[f+92>>2];k=J[g+332>>2];if(k){i=(k-i|0)/104|0}else{i=-1}J[d+80>>2]=i;N[d+88>>2]=N[f+96>>2];N[d+92>>2]=N[f+100>>2];f=J[f+4>>2];u:{if(!f){f=0;break u}f=ia[J[J[c>>2]+28>>2]](c,f)|0;g=J[a+780>>2]}J[d+64>>2]=f;N[d+84>>2]=N[(g+o|0)+24>>2];d=d+100|0;e=e+1|0;if((h|0)!=(e|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,j,4151,1497453121,g)}d=J[a+792>>2];J[b+312>>2]=d;v:{if(!d){J[b+280>>2]=0;break v}d=ia[J[J[c>>2]+28>>2]](c,J[a+800>>2])|0;J[b+280>>2]=d;if(!d){break v}f=J[b+312>>2];i=ia[J[J[c>>2]+16>>2]](c,92,f)|0;if((f|0)>0){d=J[i+8>>2];g=0;while(1){e=J[a+800>>2]+P(g,96)|0;N[d>>2]=N[e+28>>2];N[d+4>>2]=N[e+32>>2];N[d+8>>2]=N[e+36>>2];N[d+12>>2]=N[e+40>>2];N[d+16>>2]=N[e+44>>2];N[d+20>>2]=N[e+48>>2];N[d+24>>2]=N[e+52>>2];N[d+28>>2]=N[e+56>>2];N[d+32>>2]=N[e+60>>2];N[d+36>>2]=N[e- -64>>2];N[d+40>>2]=N[e+68>>2];N[d+44>>2]=N[e+72>>2];N[d+48>>2]=N[e+76>>2];N[d+52>>2]=N[e+80>>2];N[d+56>>2]=N[e+84>>2];N[d+60>>2]=N[e+88>>2];N[d+88>>2]=N[e+92>>2];N[d+64>>2]=N[e+4>>2];N[d+68>>2]=N[e+8>>2];N[d+72>>2]=N[e+12>>2];N[d+76>>2]=N[e+16>>2];h=J[e>>2];if(h){m=(h-J[a+720>>2]|0)/104|0}else{m=-1}J[d+84>>2]=m;e=J[e+20>>2];if(e){e=ia[J[J[c>>2]+28>>2]](c,e)|0}else{e=0}J[d+80>>2]=e;d=d+92|0;g=g+1|0;if((f|0)!=(g|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,i,3645,1497453121,J[a+800>>2])}N[b+352>>2]=N[a+316>>2];N[b+328>>2]=N[a+292>>2];N[b+344>>2]=N[a+308>>2];J[b+324>>2]=J[a+288>>2];N[b+340>>2]=N[a+304>>2];N[b+336>>2]=N[a+300>>2];J[b+412>>2]=J[a+376>>2];J[b+416>>2]=J[a+380>>2];J[b+420>>2]=J[a+384>>2];J[b+408>>2]=J[a+372>>2];x=N[a+364>>2];N[b+332>>2]=N[a+296>>2];N[b+356>>2]=N[a+320>>2];J[b+424>>2]=J[a+388>>2];N[b+348>>2]=N[a+312>>2];N[b+360>>2]=N[a+324>>2];N[b+364>>2]=N[a+328>>2];N[b+368>>2]=N[a+332>>2];N[b+372>>2]=N[a+336>>2];y=N[a+368>>2];N[b+400>>2]=x;N[b+404>>2]=y;N[b+376>>2]=N[a+340>>2];N[b+380>>2]=N[a+344>>2];N[b+384>>2]=N[a+348>>2];N[b+388>>2]=N[a+352>>2];N[b+392>>2]=N[a+356>>2];N[b+396>>2]=N[a+360>>2];o=a+472|0;J[b+256>>2]=ia[J[J[c>>2]+28>>2]](c,o);s=ia[J[J[c>>2]+16>>2]](c,192,1)|0;d=J[s+8>>2];N[d+96>>2]=N[a+632>>2];N[d+100>>2]=N[a+636>>2];N[d+104>>2]=N[a+640>>2];N[d+108>>2]=N[a+644>>2];N[d+112>>2]=N[a+648>>2];N[d+116>>2]=N[a+652>>2];N[d+120>>2]=N[a+656>>2];N[d+124>>2]=N[a+660>>2];N[d+128>>2]=N[a+664>>2];N[d+132>>2]=N[a+668>>2];N[d+136>>2]=N[a+672>>2];N[d+140>>2]=N[a+676>>2];J[d+180>>2]=K[a+473|0];J[d+176>>2]=K[a+472|0];N[d+144>>2]=N[a+520>>2];N[d+148>>2]=N[a+524>>2];N[d+152>>2]=N[a+528>>2];N[d+156>>2]=N[a+532>>2];e=J[a+484>>2];J[d+168>>2]=e;w:{if(!e){J[d+160>>2]=0;break w}J[d+160>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+492>>2]);i=J[d+168>>2];if(!i){break w}h=0;j=ia[J[J[c>>2]+16>>2]](c,16,i)|0;x:{if((i|0)<=0){e=J[a+492>>2];break x}e=J[a+492>>2];f=J[j+8>>2];if((i|0)!=1){n=i&-2;k=0;while(1){q=h<<4;g=q+e|0;N[f>>2]=N[g>>2];N[f+4>>2]=N[g+4>>2];N[f+8>>2]=N[g+8>>2];N[f+12>>2]=N[g+12>>2];g=(q|16)+e|0;N[f+16>>2]=N[g>>2];N[f+20>>2]=N[g+4>>2];N[f+24>>2]=N[g+8>>2];N[f+28>>2]=N[g+12>>2];f=f+32|0;h=h+2|0;k=k+2|0;if((n|0)!=(k|0)){continue}break}}if(!(i&1)){break x}i=(h<<4)+e|0;N[f>>2]=N[i>>2];N[f+4>>2]=N[i+4>>2];N[f+8>>2]=N[i+8>>2];N[f+12>>2]=N[i+12>>2]}ia[J[J[c>>2]+20>>2]](c,j,3626,1497453121,e)}N[d+184>>2]=N[a+476>>2];N[d>>2]=N[a+536>>2];N[d+4>>2]=N[a+540>>2];N[d+8>>2]=N[a+544>>2];N[d+12>>2]=N[a+548>>2];N[d+16>>2]=N[a+552>>2];N[d+20>>2]=N[a+556>>2];N[d+24>>2]=N[a+560>>2];N[d+28>>2]=N[a+564>>2];N[d+32>>2]=N[a+568>>2];N[d+36>>2]=N[a+572>>2];N[d+40>>2]=N[a+576>>2];N[d+44>>2]=N[a+580>>2];N[d+48>>2]=N[a+584>>2];N[d+52>>2]=N[a+588>>2];N[d+56>>2]=N[a+592>>2];N[d+60>>2]=N[a+596>>2];N[d- -64>>2]=N[a+600>>2];N[d+68>>2]=N[a+604>>2];N[d+72>>2]=N[a+608>>2];N[d+76>>2]=N[a+612>>2];N[d+80>>2]=N[a+616>>2];N[d+84>>2]=N[a+620>>2];N[d+88>>2]=N[a+624>>2];N[d+92>>2]=N[a+628>>2];e=J[a+504>>2];J[d+172>>2]=e;y:{if(!e){J[d+164>>2]=0;break y}J[d+164>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+512>>2]);i=J[d+172>>2];if(!i){break y}f=0;j=ia[J[J[c>>2]+16>>2]](c,4,i)|0;z:{if((i|0)<=0){g=J[a+512>>2];break z}g=J[a+512>>2];d=J[j+8>>2];if(i-1>>>0>=3){k=i&-4;e=0;while(1){h=f<<2;N[d>>2]=N[h+g>>2];N[d+4>>2]=N[(h|4)+g>>2];N[d+8>>2]=N[(h|8)+g>>2];N[d+12>>2]=N[(h|12)+g>>2];d=d+16|0;f=f+4|0;e=e+4|0;if((k|0)!=(e|0)){continue}break}}e=i&3;if(!e){break z}h=0;while(1){N[d>>2]=N[(f<<2)+g>>2];d=d+4|0;f=f+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,j,2448,1497453121,g)}ia[J[J[c>>2]+20>>2]](c,s,3744,1497453121,o);d=J[a+1112>>2];J[b+316>>2]=d;A:{if(!d){J[b+284>>2]=0;break A}J[b+284>>2]=ia[J[J[c>>2]+28>>2]](c,J[J[a+1120>>2]>>2]);j=J[b+316>>2];if(!j){break A}q=ia[J[J[c>>2]+16>>2]](c,348,j)|0;if((j|0)>0){e=J[q+8>>2];s=0;while(1){i=s<<2;d=J[i+J[a+1120>>2]>>2];N[e+320>>2]=N[d+360>>2];N[e+256>>2]=N[d+332>>2];N[e+260>>2]=N[d+336>>2];N[e+264>>2]=N[d+340>>2];N[e+268>>2]=N[d+344>>2];J[e+344>>2]=J[d+380>>2];J[e+340>>2]=K[d+377|0];N[e+160>>2]=N[d+228>>2];N[e+164>>2]=N[d+232>>2];N[e+168>>2]=N[d+236>>2];N[e+172>>2]=N[d+240>>2];J[e+336>>2]=K[d+376|0];N[e+208>>2]=N[d+276>>2];N[e+212>>2]=N[d+280>>2];N[e+216>>2]=N[d+284>>2];N[e+220>>2]=N[d+288>>2];N[e+224>>2]=N[d+292>>2];N[e+228>>2]=N[d+296>>2];N[e+232>>2]=N[d+300>>2];N[e+236>>2]=N[d+304>>2];N[e>>2]=N[d+60>>2];N[e+4>>2]=N[d- -64>>2];N[e+8>>2]=N[d+68>>2];N[e+12>>2]=N[d+72>>2];N[e+16>>2]=N[d+76>>2];N[e+20>>2]=N[d+80>>2];N[e+24>>2]=N[d+84>>2];N[e+28>>2]=N[d+88>>2];N[e+32>>2]=N[d+92>>2];N[e+36>>2]=N[d+96>>2];N[e+40>>2]=N[d+100>>2];N[e+44>>2]=N[d+104>>2];N[e+48>>2]=N[d+108>>2];N[e+52>>2]=N[d+112>>2];N[e+56>>2]=N[d+116>>2];N[e+60>>2]=N[d+120>>2];N[e+296>>2]=N[d+124>>2];N[e+300>>2]=N[d+128>>2];N[e+112>>2]=N[d+180>>2];N[e+116>>2]=N[d+184>>2];N[e+120>>2]=N[d+188>>2];N[e+124>>2]=N[d+192>>2];N[e+128>>2]=N[d+196>>2];N[e+132>>2]=N[d+200>>2];N[e+136>>2]=N[d+204>>2];N[e+140>>2]=N[d+208>>2];N[e+144>>2]=N[d+212>>2];N[e+148>>2]=N[d+216>>2];N[e+152>>2]=N[d+220>>2];N[e+156>>2]=N[d+224>>2];N[e+316>>2]=N[d+356>>2];N[e+64>>2]=N[d+132>>2];N[e+68>>2]=N[d+136>>2];N[e+72>>2]=N[d+140>>2];N[e+76>>2]=N[d+144>>2];N[e+80>>2]=N[d+148>>2];N[e+84>>2]=N[d+152>>2];N[e+88>>2]=N[d+156>>2];N[e+92>>2]=N[d+160>>2];N[e+96>>2]=N[d+164>>2];N[e+100>>2]=N[d+168>>2];N[e+104>>2]=N[d+172>>2];N[e+108>>2]=N[d+176>>2];N[e+240>>2]=N[d+316>>2];N[e+244>>2]=N[d+320>>2];N[e+248>>2]=N[d+324>>2];N[e+252>>2]=N[d+328>>2];N[e+324>>2]=N[d+364>>2];N[e+328>>2]=N[d+368>>2];N[e+312>>2]=N[d+352>>2];N[e+316>>2]=N[d+356>>2];N[e+320>>2]=N[d+360>>2];N[e+332>>2]=N[d+372>>2];f=J[d+44>>2];J[e+284>>2]=f;J[e+292>>2]=J[d+4>>2];J[e+288>>2]=J[d+24>>2];J[e+304>>2]=J[d+308>>2];N[e+176>>2]=N[d+244>>2];N[e+180>>2]=N[d+248>>2];N[e+184>>2]=N[d+252>>2];N[e+188>>2]=N[d+256>>2];N[e+192>>2]=N[d+260>>2];N[e+196>>2]=N[d+264>>2];N[e+200>>2]=N[d+268>>2];N[e+204>>2]=N[d+272>>2];J[e+308>>2]=J[d+312>>2];B:{if(!f){J[e+272>>2]=0;break B}d=ia[J[J[c>>2]+28>>2]](c,J[d+52>>2])|0;J[e+272>>2]=d;if(!d){break B}f=J[e+284>>2];t=ia[J[J[c>>2]+16>>2]](c,16,f)|0;C:{if((f|0)<=0){o=J[i+J[a+1120>>2]>>2];break C}o=J[i+J[a+1120>>2]>>2];h=J[o+52>>2];d=J[t+8>>2];g=0;if((f|0)!=1){m=f&-2;k=0;while(1){u=g<<4;n=u+h|0;N[d>>2]=N[n>>2];N[d+4>>2]=N[n+4>>2];N[d+8>>2]=N[n+8>>2];N[d+12>>2]=N[n+12>>2];n=h+(u|16)|0;N[d+16>>2]=N[n>>2];N[d+20>>2]=N[n+4>>2];N[d+24>>2]=N[n+8>>2];N[d+28>>2]=N[n+12>>2];d=d+32|0;g=g+2|0;k=k+2|0;if((m|0)!=(k|0)){continue}break}}if(!(f&1)){break C}f=h+(g<<4)|0;N[d>>2]=N[f>>2];N[d+4>>2]=N[f+4>>2];N[d+8>>2]=N[f+8>>2];N[d+12>>2]=N[f+12>>2]}ia[J[J[c>>2]+20>>2]](c,t,3626,1497453121,J[o+52>>2])}D:{if(!J[e+292>>2]){J[e+280>>2]=0;break D}d=ia[J[J[c>>2]+28>>2]](c,J[J[i+J[a+1120>>2]>>2]+12>>2])|0;J[e+280>>2]=d;if(!d){break D}f=J[e+292>>2];t=ia[J[J[c>>2]+16>>2]](c,4,f)|0;E:{if((f|0)<=0){o=J[i+J[a+1120>>2]>>2];break E}m=f&3;o=J[i+J[a+1120>>2]>>2];g=J[o+12>>2];d=J[t+8>>2];k=0;F:{if(f-1>>>0<3){f=0;break F}u=f&-4;f=0;h=0;while(1){n=f<<2;N[d>>2]=N[n+g>>2];N[d+4>>2]=N[g+(n|4)>>2];N[d+8>>2]=N[g+(n|8)>>2];N[d+12>>2]=N[g+(n|12)>>2];d=d+16|0;f=f+4|0;h=h+4|0;if((u|0)!=(h|0)){continue}break}}if(!m){break E}while(1){N[d>>2]=N[g+(f<<2)>>2];d=d+4|0;f=f+1|0;k=k+1|0;if((m|0)!=(k|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,t,2448,1497453121,J[o+12>>2])}G:{if(!J[e+288>>2]){J[e+276>>2]=0;break G}d=ia[J[J[c>>2]+28>>2]](c,J[i+J[a+1120>>2]>>2]+20|0)|0;J[e+276>>2]=d;if(!d){break G}g=J[e+292>>2];o=ia[J[J[c>>2]+16>>2]](c,4,g)|0;H:{if((g|0)<=0){f=J[i+J[a+1120>>2]>>2];break H}f=J[i+J[a+1120>>2]>>2];t=J[f+32>>2];k=J[o+8>>2];h=0;m=J[l+68>>2];n=J[l+88>>2];u=J[l+28>>2];while(1){i=J[t+(h<<2)>>2];d=(i<<15^-1)+i|0;d=P(d>>10^d,9);d=d>>6^d;d=(d<<11^-1)+d|0;d=J[u+((J[l+64>>2]-1&(d>>16^d))<<2)>>2];if(J[n+(d<<3)>>2]!=(i|0)){w=J[l+48>>2];while(1){d=J[w+(d<<2)>>2];if((i|0)!=J[n+(d<<3)>>2]){continue}break}}J[k>>2]=J[m+(d<<2)>>2];k=k+4|0;h=h+1|0;if((g|0)!=(h|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,o,2444,1497453121,f+20|0)}e=e+348|0;s=s+1|0;if((j|0)!=(s|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,q,3665,1497453121,J[J[a+1120>>2]>>2])}d=J[a+852>>2];J[b+320>>2]=d;I:{if(!d){J[b+288>>2]=0;break I}d=b;b=ia[J[J[c>>2]+28>>2]](c,J[a+860>>2])|0;J[d+288>>2]=b;if(!b){break I}i=J[a+852>>2];g=ia[J[J[c>>2]+16>>2]](c,104,i)|0;if((i|0)>0){d=J[g+8>>2];h=0;while(1){e=h<<2;b=J[e+J[a+860>>2]>>2];J[d+96>>2]=ia[J[J[b>>2]+20>>2]](b);f=e+J[a+860>>2]|0;b=J[f>>2];N[d+8>>2]=N[b+28>>2];N[d+12>>2]=N[b+32>>2];N[d+16>>2]=N[b+36>>2];N[d+20>>2]=N[b+40>>2];N[d+24>>2]=N[b+44>>2];N[d+28>>2]=N[b+48>>2];N[d+32>>2]=N[b+52>>2];N[d+36>>2]=N[b+56>>2];N[d+40>>2]=N[b+60>>2];N[d+44>>2]=N[b+64>>2];N[d+48>>2]=N[b+68>>2];b=K[b+152|0];J[d+56>>2]=0;J[d+60>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d+52>>2]=b;b=d- -64|0;J[b>>2]=0;J[b+4>>2]=0;J[d+72>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+84>>2]=0;f=J[f>>2];b=J[f+4>>2];if(b){J[d+88>>2]=1;J[d>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+12>>2];if(b){J[d+88>>2]=3;J[d>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+8>>2];if(b){J[d+88>>2]=2;J[d>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+16>>2];if(b){J[d+92>>2]=1;J[d+4>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+24>>2];if(b){J[d+92>>2]=3;J[d+4>>2]=ia[J[J[c>>2]+28>>2]](c,b);f=J[e+J[a+860>>2]>>2]}b=J[f+20>>2];if(b){J[d+92>>2]=2;J[d+4>>2]=ia[J[J[c>>2]+28>>2]](c,b)}d=d+104|0;h=h+1|0;if((i|0)!=(h|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,g,3241,1497453121,J[a+860>>2])}a=J[l+88>>2];if(!(a?!a|!K[l+92|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[l+88>>2]=0;H[l+92|0]=1;J[l+80>>2]=0;J[l+84>>2]=0;a=J[l+68>>2];if(!(a?!a|!K[l+72|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[l+68>>2]=0;H[l+72|0]=1;J[l+60>>2]=0;J[l+64>>2]=0;a=J[l+48>>2];if(!(a?!a|!K[l+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[l+48>>2]=0;H[l+52|0]=1;J[l+40>>2]=0;J[l+44>>2]=0;a=J[l+28>>2];if(!(a?!a|!K[l+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=l+96|0;return 3422}function Kk(a){a=a|0;var b=0,c=0,d=0,e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=0,G=0,H=Q(0),I=Q(0),L=Q(0),M=0,O=0;ya(3196);Um(a);a:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break a}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)&6144)){break a}M=ia[J[J[a>>2]+104>>2]](a)|0;if((M|0)<=0){break a}while(1){O=M-1|0;d=ia[J[J[a>>2]+108>>2]](a,O)|0;b=ga-224|0;ga=b;c=ia[J[J[a>>2]+20>>2]](a)|0;c=ia[J[J[c>>2]+48>>2]](c)|0;e=ia[J[J[a>>2]+20>>2]](a)|0;e=ia[J[J[e>>2]+48>>2]](e)|0;y=N[d+40>>2];b:{if(y<=Q(0)){break b}h=c&2048;n=e&4096;c:{switch(J[d+4>>2]-3|0){case 0:J[b+172>>2]=0;J[b+176>>2]=0;J[b+184>>2]=0;J[b+188>>2]=0;J[b+180>>2]=1065353216;J[b+192>>2]=0;J[b+196>>2]=0;J[b+200>>2]=1065353216;J[b+204>>2]=0;J[b+164>>2]=0;J[b+168>>2]=0;J[b+160>>2]=1065353216;c=J[d+28>>2];j=N[c+52>>2];k=N[c+8>>2];l=N[c+12>>2];m=N[c+56>>2];o=N[c+28>>2];p=N[c+20>>2];t=N[c+24>>2];q=N[c+60>>2];f=N[d+308>>2];r=N[c+44>>2];g=N[d+300>>2];s=N[c+36>>2];i=N[d+304>>2];u=N[c+40>>2];v=N[c+4>>2];J[b+220>>2]=0;N[b+216>>2]=q+Q(Q(f*r)+Q(Q(g*s)+Q(i*u)));N[b+212>>2]=m+Q(Q(f*o)+Q(Q(g*p)+Q(i*t)));N[b+208>>2]=j+Q(Q(f*l)+Q(Q(g*v)+Q(i*k)));c=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[c>>2]+56>>2]](c,b+160|0,y);c=J[d+32>>2];j=N[c+52>>2];k=N[c+8>>2];l=N[c+12>>2];m=N[c+56>>2];o=N[c+28>>2];p=N[c+20>>2];t=N[c+24>>2];q=N[c+60>>2];f=N[d+324>>2];r=N[c+44>>2];g=N[d+316>>2];s=N[c+36>>2];i=N[d+320>>2];u=N[c+40>>2];v=N[c+4>>2];J[b+220>>2]=0;N[b+216>>2]=q+Q(Q(f*r)+Q(Q(g*s)+Q(i*u)));N[b+212>>2]=m+Q(Q(f*o)+Q(Q(g*p)+Q(i*t)));N[b+208>>2]=j+Q(Q(f*l)+Q(Q(g*v)+Q(i*k)));if(!h){break b}c=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[c>>2]+56>>2]](c,b+160|0,y);break b;case 1:c=J[d+28>>2];H=N[c+52>>2];f=N[c+8>>2];g=N[c+12>>2];t=N[d+584>>2];q=N[d+552>>2];r=N[d+568>>2];I=N[c+56>>2];L=N[c+60>>2];s=N[d+608>>2];u=N[d+600>>2];v=N[d+604>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];x=N[d+588>>2];z=N[d+556>>2];A=N[d+572>>2];B=N[d+592>>2];l=N[c+44>>2];C=N[d+560>>2];m=N[c+36>>2];D=N[d+576>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+216>>2]=L+Q(Q(s*l)+Q(Q(u*m)+Q(o*v)));N[b+212>>2]=I+Q(Q(s*i)+Q(Q(u*j)+Q(k*v)));J[b+172>>2]=0;N[b+192>>2]=Q(t*l)+Q(Q(q*m)+Q(r*o));N[b+176>>2]=Q(t*i)+Q(Q(q*j)+Q(r*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(t*g)+Q(Q(q*p)+Q(r*f));N[b+208>>2]=H+Q(Q(s*g)+Q(Q(u*p)+Q(f*v)));d:{if(h){c=ia[J[J[a>>2]+20>>2]](a)|0;e=b+160|0;ia[J[J[c>>2]+56>>2]](c,e,y);c=J[d+32>>2];H=N[c+52>>2];I=N[c+56>>2];L=N[c+60>>2];t=N[d+672>>2];q=N[d+664>>2];r=N[d+668>>2];f=N[c+8>>2];g=N[c+12>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];s=N[d+648>>2];u=N[d+616>>2];v=N[d+632>>2];x=N[d+652>>2];z=N[d+620>>2];A=N[d+636>>2];B=N[d+656>>2];l=N[c+44>>2];C=N[d+624>>2];m=N[c+36>>2];D=N[d+640>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;J[b+172>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+192>>2]=Q(s*l)+Q(Q(u*m)+Q(v*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+176>>2]=Q(s*i)+Q(Q(u*j)+Q(v*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(s*g)+Q(Q(u*p)+Q(v*f));N[b+216>>2]=L+Q(Q(t*l)+Q(Q(q*m)+Q(o*r)));N[b+212>>2]=I+Q(Q(t*i)+Q(Q(q*j)+Q(k*r)));N[b+208>>2]=H+Q(Q(t*g)+Q(Q(q*p)+Q(f*r)));c=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[c>>2]+56>>2]](c,e,y);break d}c=J[d+32>>2];H=N[c+52>>2];I=N[c+56>>2];L=N[c+60>>2];t=N[d+672>>2];q=N[d+664>>2];r=N[d+668>>2];f=N[c+8>>2];g=N[c+12>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];s=N[d+648>>2];u=N[d+616>>2];v=N[d+632>>2];x=N[d+652>>2];z=N[d+620>>2];A=N[d+636>>2];B=N[d+656>>2];l=N[c+44>>2];C=N[d+624>>2];m=N[c+36>>2];D=N[d+640>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;J[b+172>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+192>>2]=Q(s*l)+Q(Q(u*m)+Q(v*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+176>>2]=Q(s*i)+Q(Q(u*j)+Q(v*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(s*g)+Q(Q(u*p)+Q(v*f));N[b+216>>2]=L+Q(Q(t*l)+Q(Q(q*m)+Q(o*r)));N[b+212>>2]=I+Q(Q(t*i)+Q(Q(q*j)+Q(k*r)));N[b+208>>2]=H+Q(Q(t*g)+Q(Q(q*p)+Q(f*r)))}c=d+688|0;f=xe(c);g=ye(c);if(!n|f==g){break b}N[b+64>>2]=N[b+168>>2];N[b+68>>2]=N[b+184>>2];J[b+76>>2]=0;N[b+72>>2]=N[b+200>>2];N[b+144>>2]=N[b+160>>2];N[b+148>>2]=N[b+176>>2];J[b+156>>2]=0;N[b+152>>2]=N[b+192>>2];c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;e=f>g;ia[J[J[c>>2]+60>>2]](c,b+208|0,b- -64|0,b+144|0,y,y,e?Q(0):f,e?Q(6.2831854820251465):g,b+128|0,!e,Q(10));break b;case 2:c=J[d+28>>2];H=N[c+52>>2];f=N[c+8>>2];g=N[c+12>>2];t=N[d+332>>2];F=d+300|0;q=N[F>>2];r=N[d+316>>2];I=N[c+56>>2];L=N[c+60>>2];s=N[d+356>>2];u=N[d+348>>2];v=N[d+352>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];x=N[d+336>>2];z=N[d+304>>2];A=N[d+320>>2];B=N[d+340>>2];l=N[c+44>>2];C=N[d+308>>2];m=N[c+36>>2];D=N[d+324>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+216>>2]=L+Q(Q(s*l)+Q(Q(u*m)+Q(o*v)));N[b+212>>2]=I+Q(Q(s*i)+Q(Q(u*j)+Q(k*v)));J[b+172>>2]=0;N[b+192>>2]=Q(t*l)+Q(Q(q*m)+Q(r*o));N[b+176>>2]=Q(t*i)+Q(Q(q*j)+Q(r*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(t*g)+Q(Q(q*p)+Q(r*f));N[b+208>>2]=H+Q(Q(s*g)+Q(Q(u*p)+Q(f*v)));e:{if(h){c=ia[J[J[a>>2]+20>>2]](a)|0;e=b+160|0;ia[J[J[c>>2]+56>>2]](c,e,y);c=J[d+32>>2];H=N[c+52>>2];I=N[c+56>>2];L=N[c+60>>2];t=N[d+420>>2];q=N[d+412>>2];r=N[d+416>>2];f=N[c+8>>2];g=N[c+12>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];s=N[d+396>>2];u=N[d+364>>2];v=N[d+380>>2];x=N[d+400>>2];z=N[d+368>>2];A=N[d+384>>2];B=N[d+404>>2];l=N[c+44>>2];C=N[d+372>>2];m=N[c+36>>2];D=N[d+388>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;J[b+172>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+192>>2]=Q(s*l)+Q(Q(u*m)+Q(v*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+176>>2]=Q(s*i)+Q(Q(u*j)+Q(v*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(s*g)+Q(Q(u*p)+Q(v*f));N[b+216>>2]=L+Q(Q(t*l)+Q(Q(q*m)+Q(o*r)));N[b+212>>2]=I+Q(Q(t*i)+Q(Q(q*j)+Q(k*r)));N[b+208>>2]=H+Q(Q(t*g)+Q(Q(q*p)+Q(f*r)));c=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[c>>2]+56>>2]](c,e,y);break e}c=J[d+32>>2];H=N[c+52>>2];I=N[c+56>>2];L=N[c+60>>2];t=N[d+420>>2];q=N[d+412>>2];r=N[d+416>>2];f=N[c+8>>2];g=N[c+12>>2];i=N[c+28>>2];j=N[c+20>>2];k=N[c+24>>2];s=N[d+396>>2];u=N[d+364>>2];v=N[d+380>>2];x=N[d+400>>2];z=N[d+368>>2];A=N[d+384>>2];B=N[d+404>>2];l=N[c+44>>2];C=N[d+372>>2];m=N[c+36>>2];D=N[d+388>>2];o=N[c+40>>2];p=N[c+4>>2];J[b+220>>2]=0;J[b+204>>2]=0;J[b+188>>2]=0;J[b+172>>2]=0;N[b+200>>2]=Q(B*l)+Q(Q(C*m)+Q(D*o));N[b+196>>2]=Q(x*l)+Q(Q(z*m)+Q(A*o));N[b+192>>2]=Q(s*l)+Q(Q(u*m)+Q(v*o));N[b+184>>2]=Q(B*i)+Q(Q(C*j)+Q(D*k));N[b+180>>2]=Q(x*i)+Q(Q(z*j)+Q(A*k));N[b+176>>2]=Q(s*i)+Q(Q(u*j)+Q(v*k));N[b+168>>2]=Q(B*g)+Q(Q(C*p)+Q(f*D));N[b+164>>2]=Q(x*g)+Q(Q(z*p)+Q(f*A));N[b+160>>2]=Q(s*g)+Q(Q(u*p)+Q(v*f));N[b+216>>2]=L+Q(Q(t*l)+Q(Q(q*m)+Q(o*r)));N[b+212>>2]=I+Q(Q(t*i)+Q(Q(q*j)+Q(k*r)));N[b+208>>2]=H+Q(Q(t*g)+Q(Q(q*p)+Q(f*r)))}if(!n){break b}gl(b+144|0,d,Q(6.0868353843688965),y);J[b+156>>2]=0;f=N[b+152>>2];g=N[b+144>>2];i=N[b+148>>2];N[b+152>>2]=Q(Q(f*N[b+200>>2])+Q(Q(g*N[b+192>>2])+Q(i*N[b+196>>2])))+N[b+216>>2];N[b+148>>2]=Q(Q(f*N[b+184>>2])+Q(Q(g*N[b+176>>2])+Q(i*N[b+180>>2])))+N[b+212>>2];N[b+144>>2]=Q(Q(f*N[b+168>>2])+Q(Q(g*N[b+160>>2])+Q(i*N[b+164>>2])))+N[b+208>>2];c=b+208|0;e=0;while(1){h=b- -64|0;gl(h,d,Q(Q(Q(e|0)*Q(6.283185005187988))*Q(.03125)),y);J[b+76>>2]=0;f=N[b+72>>2];g=N[b+64>>2];i=N[b+68>>2];N[b+72>>2]=Q(Q(f*N[b+200>>2])+Q(Q(g*N[b+192>>2])+Q(i*N[b+196>>2])))+N[b+216>>2];N[b+68>>2]=Q(Q(f*N[b+184>>2])+Q(Q(g*N[b+176>>2])+Q(i*N[b+180>>2])))+N[b+212>>2];N[b+64>>2]=Q(Q(f*N[b+168>>2])+Q(Q(g*N[b+160>>2])+Q(i*N[b+164>>2])))+N[b+208>>2];w=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;ia[J[J[w>>2]+8>>2]](w,b+144|0,h,b+128|0);if(!(e&3)){w=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;ia[J[J[w>>2]+8>>2]](w,c,b- -64|0,b+128|0)}w=J[b+76>>2];J[b+152>>2]=J[b+72>>2];J[b+156>>2]=w;w=J[b+68>>2];J[b+144>>2]=J[b+64>>2];J[b+148>>2]=w;e=e+1|0;if((e|0)!=32){continue}break};f=N[d+512>>2];g=N[d+452>>2];e=J[d+32>>2];f:{if(N[e+344>>2]>Q(0)){Td(b- -64|0,e+4|0,d+364|0);break f}Td(b- -64|0,J[d+28>>2]+4|0,F)}e=J[b+76>>2];J[b+168>>2]=J[b+72>>2];J[b+172>>2]=e;e=J[b+92>>2];J[b+184>>2]=J[b+88>>2];J[b+188>>2]=e;e=J[b+108>>2];J[b+200>>2]=J[b+104>>2];J[b+204>>2]=e;e=J[b+68>>2];J[b+160>>2]=J[b+64>>2];J[b+164>>2]=e;e=J[b+84>>2];J[b+176>>2]=J[b+80>>2];J[b+180>>2]=e;e=J[b+100>>2];J[b+192>>2]=J[b+96>>2];J[b+196>>2]=e;e=J[b+124>>2];J[c+8>>2]=J[b+120>>2];J[c+12>>2]=e;e=J[b+116>>2];J[c>>2]=J[b+112>>2];J[c+4>>2]=e;e=J[c+12>>2];J[b+72>>2]=J[c+8>>2];J[b+76>>2]=e;e=J[c+4>>2];J[b+64>>2]=J[c>>2];J[b+68>>2]=e;N[b+128>>2]=N[b+160>>2];N[b+132>>2]=N[b+176>>2];J[b+140>>2]=0;N[b+136>>2]=N[b+192>>2];N[b+48>>2]=N[b+164>>2];N[b+52>>2]=N[b+180>>2];J[b+60>>2]=0;N[b+56>>2]=N[b+196>>2];c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[c>>2]+60>>2]](c,b- -64|0,b+128|0,b+48|0,y,y,Q(Q(-f)-g),Q(g-f),b+32|0,1,Q(10));break b;case 3:case 6:c=d+1072|0;e=J[c+4>>2];J[b+168>>2]=J[c>>2];J[b+172>>2]=e;F=d+1064|0;c=J[F+4>>2];J[b+160>>2]=J[F>>2];J[b+164>>2]=c;c=d+1088|0;e=J[c+4>>2];J[b+184>>2]=J[c>>2];J[b+188>>2]=e;c=d+1080|0;e=J[c+4>>2];J[b+176>>2]=J[c>>2];J[b+180>>2]=e;e=d+1104|0;w=J[e+4>>2];J[b+200>>2]=J[e>>2];J[b+204>>2]=w;e=d+1096|0;w=J[e+4>>2];J[b+192>>2]=J[e>>2];J[b+196>>2]=w;w=d+1120|0;E=J[w+4>>2];J[b+216>>2]=J[w>>2];J[b+220>>2]=E;w=d+1112|0;E=J[w+4>>2];J[b+208>>2]=J[w>>2];J[b+212>>2]=E;if(h){h=ia[J[J[a>>2]+20>>2]](a)|0;E=b+160|0;ia[J[J[h>>2]+56>>2]](h,E,y);h=d+1136|0;G=J[h+4>>2];J[b+168>>2]=J[h>>2];J[b+172>>2]=G;h=d+1128|0;G=J[h+4>>2];J[b+160>>2]=J[h>>2];J[b+164>>2]=G;h=d+1152|0;G=J[h+4>>2];J[b+184>>2]=J[h>>2];J[b+188>>2]=G;h=d+1144|0;G=J[h+4>>2];J[b+176>>2]=J[h>>2];J[b+180>>2]=G;h=d+1168|0;G=J[h+4>>2];J[b+200>>2]=J[h>>2];J[b+204>>2]=G;h=d+1160|0;G=J[h+4>>2];J[b+192>>2]=J[h>>2];J[b+196>>2]=G;h=d+1184|0;G=J[h+4>>2];J[b+216>>2]=J[h>>2];J[b+220>>2]=G;h=d+1176|0;G=J[h+4>>2];J[b+208>>2]=J[h>>2];J[b+212>>2]=G;h=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[h>>2]+56>>2]](h,E,y)}if(!n){break b}h=J[F+12>>2];J[b+168>>2]=J[F+8>>2];J[b+172>>2]=h;h=J[F+4>>2];J[b+160>>2]=J[F>>2];J[b+164>>2]=h;h=J[c+12>>2];J[b+184>>2]=J[c+8>>2];J[b+188>>2]=h;h=J[c+4>>2];J[b+176>>2]=J[c>>2];J[b+180>>2]=h;h=J[e+12>>2];J[b+200>>2]=J[e+8>>2];J[b+204>>2]=h;h=J[e+4>>2];J[b+192>>2]=J[e>>2];J[b+196>>2]=h;h=J[w+12>>2];J[b+216>>2]=J[w+8>>2];J[b+220>>2]=h;h=J[w+4>>2];J[b+208>>2]=J[w>>2];J[b+212>>2]=h;N[b+64>>2]=N[b+168>>2];N[b+68>>2]=N[b+184>>2];J[b+76>>2]=0;N[b+72>>2]=N[b+200>>2];N[b+144>>2]=N[b+160>>2];N[b+148>>2]=N[b+176>>2];J[b+156>>2]=0;N[b+152>>2]=N[b+192>>2];f=N[d+1e3>>2];g=N[d+996>>2];i=N[d+936>>2];j=N[d+932>>2];n=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;h=d+1176|0;ia[J[J[n>>2]+64>>2]](n,h,b- -64|0,b+144|0,Q(y*Q(.8999999761581421)),j,i,g,f,b+128|0,Q(10),1);J[b+156>>2]=0;N[b+152>>2]=N[b+196>>2];N[b+148>>2]=N[b+180>>2];N[b+144>>2]=N[b+164>>2];j=N[d+1196>>2];f=N[b+144>>2];i=N[d+1200>>2];g=Ga(i);k=N[b+148>>2];l=Ha(i);N[b+132>>2]=Q(k*l)-Q(g*f);i=Ga(j);m=N[b+152>>2];j=Ha(j);N[b+136>>2]=Q(m*j)+Q(Q(f*Q(i*l))+Q(k*Q(i*g)));N[b+128>>2]=Q(Q(f*Q(j*l))+Q(k*Q(j*g)))-Q(i*m);n=d+1136|0;E=J[n+4>>2];J[b+168>>2]=J[n>>2];J[b+172>>2]=E;n=d+1128|0;E=J[n+4>>2];J[b+160>>2]=J[n>>2];J[b+164>>2]=E;n=d+1152|0;E=J[n+4>>2];J[b+184>>2]=J[n>>2];J[b+188>>2]=E;n=d+1144|0;E=J[n+4>>2];J[b+176>>2]=J[n>>2];J[b+180>>2]=E;n=d+1168|0;E=J[n+4>>2];J[b+200>>2]=J[n>>2];J[b+204>>2]=E;n=d+1160|0;E=J[n+4>>2];J[b+192>>2]=J[n>>2];J[b+196>>2]=E;n=J[h+4>>2];J[b+208>>2]=J[h>>2];J[b+212>>2]=n;n=d+1184|0;E=J[n+4>>2];J[b+216>>2]=J[n>>2];J[b+220>>2]=E;J[b+60>>2]=0;N[b+56>>2]=-N[b+192>>2];N[b+52>>2]=-N[b+176>>2];N[b+48>>2]=-N[b+160>>2];f=N[d+868>>2];g=N[d+872>>2];g:{if(f>g){n=ia[J[J[a>>2]+20>>2]](a)|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[n>>2]+60>>2]](n,h,b+48|0,b+128|0,y,y,Q(-3.1415927410125732),Q(3.1415927410125732),b+32|0,0,Q(10));break g}if(!(f<g)){break g}n=ia[J[J[a>>2]+20>>2]](a)|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[n>>2]+60>>2]](n,h,b+48|0,b+128|0,y,y,f,g,b+32|0,1,Q(10))}h=J[F+12>>2];J[b+168>>2]=J[F+8>>2];J[b+172>>2]=h;h=J[F+4>>2];J[b+160>>2]=J[F>>2];J[b+164>>2]=h;F=J[c+12>>2];J[b+184>>2]=J[c+8>>2];J[b+188>>2]=F;F=J[c+4>>2];J[b+176>>2]=J[c>>2];J[b+180>>2]=F;c=J[e+12>>2];J[b+200>>2]=J[e+8>>2];J[b+204>>2]=c;c=J[e+4>>2];J[b+192>>2]=J[e>>2];J[b+196>>2]=c;c=J[w+12>>2];J[b+216>>2]=J[w+8>>2];J[b+220>>2]=c;c=J[w+4>>2];J[b+208>>2]=J[w>>2];J[b+212>>2]=c;c=J[d+692>>2];J[b+40>>2]=J[d+688>>2];J[b+44>>2]=c;c=J[d+684>>2];J[b+32>>2]=J[d+680>>2];J[b+36>>2]=c;c=J[d+708>>2];J[b+24>>2]=J[d+704>>2];J[b+28>>2]=c;c=J[d+700>>2];J[b+16>>2]=J[d+696>>2];J[b+20>>2]=c;c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+8>>2]=0;J[b+12>>2]=0;J[b>>2]=0;J[b+4>>2]=0;ia[J[J[c>>2]+72>>2]](c,b+32|0,b+16|0,b+160|0,b);break b;case 4:break c;default:break b}}c=J[d+836>>2];J[b+168>>2]=J[d+832>>2];J[b+172>>2]=c;c=d+824|0;e=J[c+4>>2];J[b+160>>2]=J[c>>2];J[b+164>>2]=e;e=J[d+852>>2];J[b+184>>2]=J[d+848>>2];J[b+188>>2]=e;e=J[d+844>>2];J[b+176>>2]=J[d+840>>2];J[b+180>>2]=e;e=J[d+868>>2];J[b+200>>2]=J[d+864>>2];J[b+204>>2]=e;e=J[d+860>>2];J[b+192>>2]=J[d+856>>2];J[b+196>>2]=e;e=J[d+884>>2];J[b+216>>2]=J[d+880>>2];J[b+220>>2]=e;e=J[d+876>>2];J[b+208>>2]=J[d+872>>2];J[b+212>>2]=e;h:{if(h){e=ia[J[J[a>>2]+20>>2]](a)|0;w=b+160|0;ia[J[J[e>>2]+56>>2]](e,w,y);e=J[d+900>>2];J[b+168>>2]=J[d+896>>2];J[b+172>>2]=e;e=J[d+892>>2];J[b+160>>2]=J[d+888>>2];J[b+164>>2]=e;e=J[d+916>>2];J[b+184>>2]=J[d+912>>2];J[b+188>>2]=e;e=J[d+908>>2];J[b+176>>2]=J[d+904>>2];J[b+180>>2]=e;e=J[d+932>>2];J[b+200>>2]=J[d+928>>2];J[b+204>>2]=e;e=J[d+924>>2];J[b+192>>2]=J[d+920>>2];J[b+196>>2]=e;e=J[d+948>>2];J[b+216>>2]=J[d+944>>2];J[b+220>>2]=e;e=J[d+940>>2];J[b+208>>2]=J[d+936>>2];J[b+212>>2]=e;e=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[e>>2]+56>>2]](e,w,y);break h}e=J[d+900>>2];J[b+168>>2]=J[d+896>>2];J[b+172>>2]=e;e=J[d+892>>2];J[b+160>>2]=J[d+888>>2];J[b+164>>2]=e;e=J[d+916>>2];J[b+184>>2]=J[d+912>>2];J[b+188>>2]=e;e=J[d+908>>2];J[b+176>>2]=J[d+904>>2];J[b+180>>2]=e;e=J[d+932>>2];J[b+200>>2]=J[d+928>>2];J[b+204>>2]=e;e=J[d+924>>2];J[b+192>>2]=J[d+920>>2];J[b+196>>2]=e;e=J[d+948>>2];J[b+216>>2]=J[d+944>>2];J[b+220>>2]=e;e=J[d+940>>2];J[b+208>>2]=J[d+936>>2];J[b+212>>2]=e}if(!n){break b}c=K[d+180|0]?c:d+888|0;k=N[c+48>>2];q=N[c+8>>2];f=N[c>>2];l=N[c+4>>2];m=N[c+52>>2];r=N[c+24>>2];g=N[c+16>>2];o=N[c+20>>2];p=N[c+56>>2];s=N[c+40>>2];i=N[c+32>>2];t=N[c+36>>2];j=N[d+184>>2];J[b+76>>2]=0;s=Q(s*Q(0));u=Q(t*Q(0));N[b+72>>2]=p+Q(s+Q(Q(j*i)+u));r=Q(r*Q(0));v=Q(o*Q(0));N[b+68>>2]=m+Q(r+Q(Q(j*g)+v));q=Q(q*Q(0));x=Q(l*Q(0));N[b+64>>2]=k+Q(q+Q(Q(j*f)+x));j=N[d+188>>2];J[b+156>>2]=0;N[b+152>>2]=p+Q(s+Q(Q(j*i)+u));N[b+148>>2]=m+Q(r+Q(Q(j*g)+v));N[b+144>>2]=k+Q(q+Q(Q(j*f)+x));c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;e=b+128|0;ia[J[J[c>>2]+8>>2]](c,b- -64|0,b+144|0,e);J[b+140>>2]=0;N[b+136>>2]=i;N[b+132>>2]=g;N[b+128>>2]=f;J[b+60>>2]=0;N[b+56>>2]=t;N[b+52>>2]=o;N[b+48>>2]=l;f=N[d+196>>2];g=N[d+192>>2];c=ia[J[J[a>>2]+20>>2]](a)|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;ia[J[J[c>>2]+60>>2]](c,d+936|0,e,b+48|0,y,y,g,f,b+32|0,1,Q(10))}ga=b+224|0;c=M>>>0>1;M=O;if(c){continue}break}}i:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break i}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)&16387)){break i}if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break i}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)|0)|J[a+280>>2]<=0){break i}M=0;while(1){c=J[J[a+288>>2]+(M<<2)>>2];ia[J[J[c>>2]+12>>2]](c,J[a+72>>2]);M=M+1|0;if((M|0)<J[a+280>>2]){continue}break}}xa()}function Lg(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=Q(0),v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=0,P=0,S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=0,Z=0,_=0,$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=0,ja=0,ka=Q(0),la=Q(0),ma=Q(0),na=Q(0),oa=Q(0),pa=Q(0),qa=Q(0),ra=Q(0),ta=Q(0),ua=Q(0),va=Q(0),wa=Q(0),xa=Q(0),ya=Q(0);f=ga-960|0;ga=f;a:{if((ia[J[J[d>>2]+80>>2]](d)|0)==2){g=J[d+152>>2];h=g-1|0;J[a+28>>2]=h;if(!g){break a}while(1){Lg(a,b,c,J[J[d+160>>2]+(h<<2)>>2],e);g=J[a+28>>2];h=g-1|0;J[a+28>>2]=h;if(g){continue}break}break a}if((ia[J[J[e>>2]+80>>2]](e)|0)==2){g=J[e+152>>2];h=g-1|0;J[a+36>>2]=h;if(!g){break a}while(1){Lg(a,b,c,d,J[J[e+160>>2]+(h<<2)>>2]);g=J[a+36>>2];h=g-1|0;J[a+36>>2]=h;if(g){continue}break}break a}h=J[b+12>>2];g=J[h+12>>2];J[f+904>>2]=J[h+8>>2];J[f+908>>2]=g;g=J[h+4>>2];J[f+896>>2]=J[h>>2];J[f+900>>2]=g;g=J[h+28>>2];J[f+920>>2]=J[h+24>>2];J[f+924>>2]=g;g=J[h+20>>2];J[f+912>>2]=J[h+16>>2];J[f+916>>2]=g;g=J[h+44>>2];J[f+936>>2]=J[h+40>>2];J[f+940>>2]=g;g=J[h+36>>2];J[f+928>>2]=J[h+32>>2];J[f+932>>2]=g;g=J[h+60>>2];J[f+952>>2]=J[h+56>>2];J[f+956>>2]=g;g=J[h+52>>2];J[f+944>>2]=J[h+48>>2];J[f+948>>2]=g;h=J[c+12>>2];g=J[h+12>>2];J[f+840>>2]=J[h+8>>2];J[f+844>>2]=g;g=J[h+4>>2];J[f+832>>2]=J[h>>2];J[f+836>>2]=g;g=J[h+28>>2];J[f+856>>2]=J[h+24>>2];J[f+860>>2]=g;g=J[h+20>>2];J[f+848>>2]=J[h+16>>2];J[f+852>>2]=g;g=J[h+44>>2];J[f+872>>2]=J[h+40>>2];J[f+876>>2]=g;g=J[h+36>>2];J[f+864>>2]=J[h+32>>2];J[f+868>>2]=g;g=J[h+60>>2];J[f+888>>2]=J[h+56>>2];J[f+892>>2]=g;g=J[h+52>>2];J[f+880>>2]=J[h+48>>2];J[f+884>>2]=g;J[f+812>>2]=0;J[8369]=J[8369]+1;J[f+820>>2]=ia[J[6782]](256,16);H[f+824|0]=1;J[f+816>>2]=32;i=f+896|0;k=f+832|0;v=f+808|0;C=ga+-64|0;ga=C;b:{if(!(!J[d+68>>2]|!J[e+68>>2])){j=ga-112|0;ga=j;g=d+68|0;h=e+68|0;if(!(!J[g>>2]|!J[h>>2])){S=N[i+52>>2];D=N[i+56>>2];E=N[k+52>>2];F=N[k+56>>2];$=N[i+20>>2];aa=N[i+36>>2];G=N[k+20>>2];I=N[k+36>>2];T=N[k+24>>2];ba=N[i+24>>2];m=N[k+40>>2];ca=N[i+40>>2];U=N[i+48>>2];y=N[k+48>>2];da=N[i+32>>2];ea=N[i+16>>2];z=N[i>>2];A=N[i+4>>2];W=N[k+32>>2];V=N[k+16>>2];L=N[k>>2];M=N[k+4>>2];l=N[k+8>>2];B=N[i+8>>2];J[j+60>>2]=0;J[j+44>>2]=0;J[j+28>>2]=0;x=Q(Q(m*ca)+Q(Q(l*B)+Q(ba*T)));N[j+56>>2]=x;u=Q(Q(I*ca)+Q(Q(M*B)+Q(ba*G)));N[j+52>>2]=u;q=Q(Q(W*ca)+Q(Q(L*B)+Q(ba*V)));N[j+48>>2]=q;o=Q(Q(m*aa)+Q(Q(l*A)+Q($*T)));N[j+40>>2]=o;p=Q(Q(I*aa)+Q(Q(M*A)+Q($*G)));N[j+36>>2]=p;r=Q(Q(W*aa)+Q(Q(L*A)+Q($*V)));N[j+32>>2]=r;m=Q(Q(m*da)+Q(Q(l*z)+Q(ea*T)));N[j+24>>2]=m;l=Q(Q(I*da)+Q(Q(M*z)+Q(ea*G)));N[j+20>>2]=l;N[j+104>>2]=Q(R(x))+Q(9.999999974752427e-7);N[j+100>>2]=Q(R(u))+Q(9.999999974752427e-7);N[j+96>>2]=Q(R(q))+Q(9.999999974752427e-7);N[j+88>>2]=Q(R(o))+Q(9.999999974752427e-7);N[j+84>>2]=Q(R(p))+Q(9.999999974752427e-7);N[j+80>>2]=Q(R(r))+Q(9.999999974752427e-7);N[j+72>>2]=Q(R(m))+Q(9.999999974752427e-7);N[j+68>>2]=Q(R(l))+Q(9.999999974752427e-7);J[j+12>>2]=0;l=Q(-U);N[j+8>>2]=Q(Q(Q(B*l)-Q(ba*S))-Q(ca*D))+Q(Q(F*ca)+Q(Q(y*B)+Q(ba*E)));N[j+4>>2]=Q(Q(Q(A*l)-Q($*S))-Q(aa*D))+Q(Q(F*aa)+Q(Q(y*A)+Q($*E)));N[j>>2]=Q(Q(Q(z*l)-Q(ea*S))-Q(da*D))+Q(Q(F*da)+Q(Q(y*z)+Q(ea*E)));l=Q(Q(W*da)+Q(Q(L*z)+Q(ea*V)));N[j+16>>2]=l;N[j+64>>2]=Q(R(l))+Q(9.999999974752427e-7);Ab(g,h,v,j,0,0,1)}ga=j+112|0;break b}O=ia[J[J[d>>2]+88>>2]](d)|0;if(!O){break b}P=C+16|0;t=C+48|0;while(1){O=O-1|0;ia[J[J[d>>2]+120>>2]](d,O,i,C+32|0,t);_=ia[J[J[e>>2]+88>>2]](e)|0;if(_){while(1){ia[J[J[e>>2]+120>>2]](e,O,k,C,P);_=_-1|0;c:{if(N[C+16>>2]<N[C+32>>2]|N[C>>2]>N[C+48>>2]|(N[C+20>>2]<N[C+36>>2]|N[C+4>>2]>N[C+52>>2])){break c}if(N[C+24>>2]<N[C+40>>2]|N[C+8>>2]>N[C+56>>2]){break c}n=J[v+4>>2];d:{if((n|0)!=J[v+8>>2]){break d}fa=n?n<<1:1;if((fa|0)<=(n|0)){break d}e:{if(!fa){Z=0;break e}J[8369]=J[8369]+1;Z=ia[J[6782]](fa<<3,16)|0;n=J[v+4>>2]}s=J[v+12>>2];f:{g:{if((n|0)>0){ja=0;if((n|0)!=1){j=n&-2;w=0;while(1){X=ja<<3;h=X+Z|0;g=s+X|0;J[h>>2]=J[g>>2];J[h+4>>2]=J[g+4>>2];g=X|8;h=g+Z|0;g=g+s|0;J[h>>2]=J[g>>2];J[h+4>>2]=J[g+4>>2];ja=ja+2|0;w=w+2|0;if((j|0)!=(w|0)){continue}break}}if(n&1){g=ja<<3;h=g+Z|0;g=g+s|0;J[h>>2]=J[g>>2];J[h+4>>2]=J[g+4>>2]}if(K[v+16|0]){break g}break f}if(!s|!K[v+16|0]){break f}}if(s){J[8370]=J[8370]+1;ia[J[6783]](s)}n=J[v+4>>2]}J[v+12>>2]=Z;H[v+16|0]=1;J[v+8>>2]=fa}g=J[v+12>>2]+(n<<3)|0;J[g+4>>2]=_;J[g>>2]=O;J[v+4>>2]=n+1}if(_){continue}break}}if(O){continue}break}}ga=C- -64|0;h:{if(!J[f+812>>2]){break h}i:{if((ia[J[J[d>>2]+80>>2]](d)|0)!=1){break i}if((ia[J[J[e>>2]+80>>2]](e)|0)!=1){break i}_=J[f+820>>2];ja=J[f+812>>2];i=ga-432|0;ga=i;h=J[c+12>>2];ka=N[h+56>>2];la=N[h+52>>2];ma=N[h+40>>2];na=N[h+36>>2];oa=N[h+24>>2];pa=N[h+20>>2];g=J[b+12>>2];qa=N[g+56>>2];ra=N[g+52>>2];ta=N[g+40>>2];ua=N[g+36>>2];va=N[g+24>>2];wa=N[g+20>>2];xa=N[h+48>>2];ya=N[h+32>>2];$=N[h+16>>2];aa=N[h+8>>2];ba=N[h+4>>2];ca=N[h>>2];da=N[g+48>>2];ea=N[g+32>>2];z=N[g+16>>2];A=N[g+8>>2];B=N[g+4>>2];S=N[g>>2];J[i+424>>2]=1008981770;J[i+352>>2]=1008981770;ia[J[J[d>>2]+112>>2]](d);ia[J[J[e>>2]+112>>2]](e);if(ja){fa=i+16|0;while(1){h=J[_>>2];J[a+24>>2]=h;J[a+32>>2]=J[_+4>>2];g=ia[J[J[d>>2]+84>>2]](d)|0;ia[J[J[g>>2]+20>>2]](g,h,i+360|0);h=J[a+32>>2];g=ia[J[J[e>>2]+84>>2]](e)|0;ia[J[J[g>>2]+20>>2]](g,h,i+288|0);J[i+372>>2]=0;J[i+388>>2]=0;J[i+404>>2]=0;L=N[i+384>>2];M=N[i+376>>2];U=N[i+380>>2];W=Q(ra+Q(Q(L*va)+Q(Q(M*z)+Q(wa*U))));N[i+380>>2]=W;x=N[i+368>>2];u=N[i+360>>2];q=N[i+364>>2];D=Q(ra+Q(Q(x*va)+Q(Q(u*z)+Q(wa*q))));N[i+364>>2]=D;o=N[i+400>>2];m=N[i+392>>2];l=N[i+396>>2];V=Q(ra+Q(Q(o*va)+Q(Q(m*z)+Q(wa*l))));N[i+396>>2]=V;p=Q(qa+Q(Q(L*ta)+Q(Q(M*ea)+Q(ua*U))));N[i+384>>2]=p;r=Q(da+Q(Q(o*A)+Q(Q(m*S)+Q(B*l))));N[i+392>>2]=r;E=Q(qa+Q(Q(x*ta)+Q(Q(u*ea)+Q(ua*q))));N[i+368>>2]=E;m=Q(qa+Q(Q(o*ta)+Q(Q(m*ea)+Q(ua*l))));N[i+400>>2]=m;F=Q(da+Q(Q(x*A)+Q(Q(u*S)+Q(B*q))));N[i+360>>2]=F;l=Q(da+Q(Q(L*A)+Q(Q(M*S)+Q(B*U))));N[i+376>>2]=l;u=N[i+296>>2];q=N[i+288>>2];o=N[i+292>>2];J[i+300>>2]=0;G=Q(la+Q(Q(u*oa)+Q(Q(q*$)+Q(pa*o))));N[i+292>>2]=G;I=Q(ka+Q(Q(u*ma)+Q(Q(q*ya)+Q(na*o))));N[i+296>>2]=I;T=Q(xa+Q(Q(u*aa)+Q(Q(q*ca)+Q(ba*o))));N[i+288>>2]=T;u=N[i+312>>2];q=N[i+304>>2];o=N[i+308>>2];J[i+316>>2]=0;L=Q(la+Q(Q(u*oa)+Q(Q(q*$)+Q(pa*o))));N[i+308>>2]=L;M=Q(ka+Q(Q(u*ma)+Q(Q(q*ya)+Q(na*o))));N[i+312>>2]=M;U=Q(xa+Q(Q(u*aa)+Q(Q(q*ca)+Q(ba*o))));N[i+304>>2]=U;y=N[i+328>>2];q=N[i+320>>2];o=N[i+324>>2];J[i+332>>2]=0;x=Q(la+Q(Q(y*oa)+Q(Q(q*$)+Q(pa*o))));N[i+324>>2]=x;u=Q(xa+Q(Q(y*aa)+Q(Q(q*ca)+Q(ba*o))));N[i+320>>2]=u;q=Q(ka+Q(Q(y*ma)+Q(Q(q*ya)+Q(na*o))));N[i+328>>2]=q;o=Q(p-E);p=Q(r-F);r=Q(m-E);l=Q(l-F);y=Q(Q(o*p)-Q(r*l));m=Q(V-D);V=Q(l*m);l=Q(W-D);p=Q(V-Q(p*l));m=Q(Q(l*r)-Q(m*o));l=Q(Q(1)/Q(Y(Q(Q(p*p)+Q(Q(m*m)+Q(y*y))))));r=Q(y*l);N[i+412>>2]=r;m=Q(m*l);N[i+408>>2]=m;l=Q(p*l);N[i+416>>2]=l;N[i+420>>2]=Q(E*l)+Q(Q(F*m)+Q(D*r));o=Q(M-I);p=Q(u-T);r=Q(q-I);l=Q(U-T);q=Q(Q(o*p)-Q(r*l));m=Q(x-G);u=Q(l*m);l=Q(L-G);p=Q(u-Q(p*l));m=Q(Q(l*r)-Q(m*o));l=Q(Q(1)/Q(Y(Q(Q(p*p)+Q(Q(m*m)+Q(q*q))))));r=Q(q*l);N[i+340>>2]=r;m=Q(m*l);N[i+336>>2]=m;l=Q(p*l);N[i+344>>2]=l;N[i+348>>2]=Q(I*l)+Q(Q(T*m)+Q(G*r));ja=ja-1|0;p=N[i+416>>2];r=N[i+408>>2];m=N[i+412>>2];l=N[i+420>>2];o=Q(N[i+424>>2]+N[i+352>>2]);j:{if(!(!(Q(Q(Q(Q(N[i+296>>2]*p)+Q(Q(N[i+288>>2]*r)+Q(N[i+292>>2]*m)))-l)-o)>Q(0))|!(Q(Q(Q(Q(N[i+312>>2]*p)+Q(Q(N[i+304>>2]*r)+Q(m*N[i+308>>2])))-l)-o)>Q(0)))){g=0;if(Q(Q(Q(Q(N[i+328>>2]*p)+Q(Q(N[i+320>>2]*r)+Q(m*N[i+324>>2])))-l)-o)>Q(0)){break j}}p=N[i+344>>2];r=N[i+336>>2];m=N[i+340>>2];l=N[i+348>>2];g=!(Q(Q(Q(Q(N[i+368>>2]*p)+Q(Q(N[i+360>>2]*r)+Q(N[i+364>>2]*m)))-l)-o)>Q(0))|!(Q(Q(Q(Q(N[i+384>>2]*p)+Q(Q(N[i+376>>2]*r)+Q(m*N[i+380>>2])))-l)-o)>Q(0))|!(Q(Q(Q(Q(N[i+400>>2]*p)+Q(Q(N[i+392>>2]*r)+Q(m*N[i+396>>2])))-l)-o)>Q(0))}k:{if(!g){break k}v=i+8|0;n=0;s=0;k=ga-880|0;ga=k;h=i+288|0;m=N[h+64>>2];g=i+360|0;l=N[g+64>>2];j=J[g+60>>2];J[k+296>>2]=J[g+56>>2];J[k+300>>2]=j;j=J[g+52>>2];J[k+288>>2]=J[g+48>>2];J[k+292>>2]=j;t=Al(g,h,k+560|0);j=0;l:{if(!t){break l}j=0;if((t|0)<=0){break l}x=Q(l+m);q=N[k+300>>2];o=N[k+296>>2];p=N[k+292>>2];r=Q(-1e3);m=N[k+288>>2];m:{n:{while(1){o:{j=(k+560|0)+(n<<4)|0;l=Q(x-Q(Q(Q(N[j+8>>2]*o)+Q(Q(N[j>>2]*m)+Q(N[j+4>>2]*p)))-q));p:{if(!(l>=Q(0))){break p}if(l>r){break o}if(!(Q(l+Q(1.1920928955078125e-7))>=r)){break p}J[k+(s<<2)>>2]=n;s=s+1|0}n=n+1|0;if((t|0)!=(n|0)){continue}N[k+280>>2]=r;if((s|0)<=0){break m}break n}J[k>>2]=n;s=1;r=l;n=n+1|0;if((t|0)!=(n|0)){continue}break}J[k+284>>2]=1;N[k+280>>2]=r}n=0;if((s|0)!=1){X=s&-2;O=k+304|0;Z=0;while(1){P=k+560|0;w=P+(J[k+(n<<2)>>2]<<4)|0;j=J[w+12>>2];t=O+(n<<4)|0;J[t+8>>2]=J[w+8>>2];J[t+12>>2]=j;j=J[w+4>>2];J[t>>2]=J[w>>2];J[t+4>>2]=j;j=n|1;t=O+(j<<4)|0;P=P+(J[k+(j<<2)>>2]<<4)|0;j=J[P+12>>2];J[t+8>>2]=J[P+8>>2];J[t+12>>2]=j;j=J[P+4>>2];J[t>>2]=J[P>>2];J[t+4>>2]=j;n=n+2|0;Z=Z+2|0;if((X|0)!=(Z|0)){continue}break}}if(!(s&1)){break m}P=(k+560|0)+(J[k+(n<<2)>>2]<<4)|0;j=J[P+4>>2];t=(k+280|0)+(n<<4)|0;J[t+24>>2]=J[P>>2];J[t+28>>2]=j;j=J[P+12>>2];J[t+32>>2]=J[P+8>>2];J[t+36>>2]=j}j=0;if(!s){break l}N[k+292>>2]=-N[k+292>>2];N[k+296>>2]=-N[k+296>>2];N[k+288>>2]=-N[k+288>>2];j=J[h+60>>2];J[k+16>>2]=J[h+56>>2];J[k+20>>2]=j;j=J[h+52>>2];J[k+8>>2]=J[h+48>>2];J[k+12>>2]=j;h=Al(h,g,k+560|0);j=0;if(!h){break l}j=0;if((h|0)<=0){break l}u=N[k+20>>2];q=N[k+16>>2];o=N[k+12>>2];m=Q(-1e3);w=0;p=N[k+8>>2];n=0;q:{r:{while(1){s:{g=(k+560|0)+(n<<4)|0;l=Q(x-Q(Q(Q(N[g+8>>2]*q)+Q(Q(N[g>>2]*p)+Q(N[g+4>>2]*o)))-u));t:{if(!(l>=Q(0))){break t}if(l>m){break s}if(!(Q(l+Q(1.1920928955078125e-7))>=m)){break t}J[(k+816|0)+(w<<2)>>2]=n;w=w+1|0}n=n+1|0;if((h|0)!=(n|0)){continue}J[k+4>>2]=w;N[k>>2]=m;if((w|0)<=0){break q}break r}J[k+816>>2]=n;w=1;m=l;n=n+1|0;if((h|0)!=(n|0)){continue}break}J[k+4>>2]=1;N[k>>2]=m}n=0;if((w|0)!=1){P=w&-2;X=k+24|0;Z=0;while(1){j=k+560|0;t=k+816|0;O=j+(J[t+(n<<2)>>2]<<4)|0;g=J[O+12>>2];h=X+(n<<4)|0;J[h+8>>2]=J[O+8>>2];J[h+12>>2]=g;g=J[O+4>>2];J[h>>2]=J[O>>2];J[h+4>>2]=g;g=n|1;h=X+(g<<4)|0;j=j+(J[t+(g<<2)>>2]<<4)|0;g=J[j+12>>2];J[h+8>>2]=J[j+8>>2];J[h+12>>2]=g;g=J[j+4>>2];J[h>>2]=J[j>>2];J[h+4>>2]=g;n=n+2|0;Z=Z+2|0;if((P|0)!=(Z|0)){continue}break}}if(!(w&1)){break q}j=(k+560|0)+(J[(k+816|0)+(n<<2)>>2]<<4)|0;g=J[j+4>>2];h=k+(n<<4)|0;J[h+24>>2]=J[j>>2];J[h+28>>2]=g;g=J[j+12>>2];J[h+32>>2]=J[j+8>>2];J[h+36>>2]=g}j=0;if(!w){break l}u:{if(m<r){N[v>>2]=m;g=J[k+12>>2];J[v+8>>2]=J[k+8>>2];J[v+12>>2]=g;g=J[k+20>>2];J[v+16>>2]=J[k+16>>2];J[v+20>>2]=g;J[v+4>>2]=w;sa(v+24|0,k+24|0,w<<4);break u}N[v>>2]=r;g=J[k+292>>2];J[v+8>>2]=J[k+288>>2];J[v+12>>2]=g;g=J[k+300>>2];J[v+16>>2]=J[k+296>>2];J[v+20>>2]=g;J[v+4>>2]=s;sa(v+24|0,k+304|0,s<<4)}j=1}ga=k+880|0;if(!j){break k}t=J[i+12>>2];if(!t){break k}while(1){l=N[i+8>>2];g=J[a+16>>2];ia[J[J[g>>2]+8>>2]](g,J[a+28>>2],J[a+24>>2]);g=J[a+16>>2];ia[J[J[g>>2]+12>>2]](g,J[a+36>>2],J[a+32>>2]);t=t-1|0;h=(i+(t<<4)|0)+32|0;j=J[a+12>>2];if(!j){g=J[a+4>>2];j=ia[J[J[g>>2]+12>>2]](g,J[b+8>>2],J[c+8>>2])|0;J[a+12>>2]=j}g=J[a+16>>2];J[g+4>>2]=j;ia[J[J[g>>2]+16>>2]](g,fa,h,Q(-l));if(t){continue}break}}_=_+8|0;if(ja){continue}break}}ia[J[J[d>>2]+116>>2]](d);ia[J[J[e>>2]+116>>2]](e);ga=i+432|0;break h}ia[J[J[d>>2]+112>>2]](d);ia[J[J[e>>2]+112>>2]](e);Bb(f+512|4);J[f+572>>2]=0;J[f+576>>2]=0;J[f+520>>2]=1;J[f+580>>2]=0;J[f+584>>2]=0;J[f+588>>2]=0;J[f+592>>2]=0;J[f+596>>2]=0;J[f+600>>2]=0;J[f+604>>2]=0;J[f+608>>2]=0;J[f+612>>2]=0;J[f+616>>2]=0;J[f+516>>2]=1976;Se(f+620|0);J[f+712>>2]=4;J[f+796>>2]=17412;J[f+788>>2]=17332;J[f+780>>2]=17260;J[f+620>>2]=4488;J[f+512>>2]=d;if(ia[J[J[d>>2]+96>>2]](d)|0){g=f+788|0}else{g=J[f+512>>2];g=ia[J[J[g>>2]+100>>2]](g)|0?f+796|0:f+780|0}J[f+804>>2]=g;J[g+4>>2]=f+512;Bb(f+216|4);J[f+276>>2]=0;J[f+280>>2]=0;J[f+224>>2]=1;J[f+284>>2]=0;J[f+288>>2]=0;J[f+292>>2]=0;J[f+296>>2]=0;J[f+300>>2]=0;J[f+304>>2]=0;J[f+308>>2]=0;J[f+312>>2]=0;J[f+316>>2]=0;J[f+320>>2]=0;J[f+220>>2]=1976;Se(f+324|0);J[f+416>>2]=4;J[f+500>>2]=17412;J[f+492>>2]=17332;J[f+484>>2]=17260;J[f+324>>2]=4488;J[f+216>>2]=e;if(ia[J[J[e>>2]+96>>2]](e)|0){g=f+492|0}else{g=J[f+216>>2];g=ia[J[J[g>>2]+100>>2]](g)|0?f+500|0:f+484|0}J[f+508>>2]=g;J[g+4>>2]=f+216;P=ia[J[J[d>>2]+92>>2]](d)|0;t=ia[J[J[e>>2]+92>>2]](e)|0;w=J[f+812>>2];if(w){while(1){w=w-1|0;g=J[f+820>>2]+(w<<3)|0;h=J[g>>2];J[a+24>>2]=h;J[a+32>>2]=J[g+4>>2];g=J[f+804>>2];X=ia[J[J[g>>2]>>2]](g,h)|0;g=J[f+508>>2];O=ia[J[J[g>>2]>>2]](g,J[a+32>>2])|0;h=J[b+12>>2];g=J[h+12>>2];J[f+160>>2]=J[h+8>>2];J[f+164>>2]=g;g=J[h+4>>2];J[f+152>>2]=J[h>>2];J[f+156>>2]=g;g=J[h+28>>2];J[f+176>>2]=J[h+24>>2];J[f+180>>2]=g;g=J[h+20>>2];J[f+168>>2]=J[h+16>>2];J[f+172>>2]=g;g=J[h+44>>2];J[f+192>>2]=J[h+40>>2];J[f+196>>2]=g;g=J[h+36>>2];J[f+184>>2]=J[h+32>>2];J[f+188>>2]=g;g=J[h+60>>2];J[f+208>>2]=J[h+56>>2];J[f+212>>2]=g;g=J[h+52>>2];J[f+200>>2]=J[h+48>>2];J[f+204>>2]=g;h=J[c+12>>2];g=J[h+12>>2];J[f+96>>2]=J[h+8>>2];J[f+100>>2]=g;g=J[h+4>>2];J[f+88>>2]=J[h>>2];J[f+92>>2]=g;g=J[h+28>>2];J[f+112>>2]=J[h+24>>2];J[f+116>>2]=g;g=J[h+20>>2];J[f+104>>2]=J[h+16>>2];J[f+108>>2]=g;g=J[h+44>>2];J[f+128>>2]=J[h+40>>2];J[f+132>>2]=g;g=J[h+36>>2];J[f+120>>2]=J[h+32>>2];J[f+124>>2]=g;g=J[h+60>>2];J[f+144>>2]=J[h+56>>2];J[f+148>>2]=g;g=J[h+52>>2];J[f+136>>2]=J[h+48>>2];J[f+140>>2]=g;if(P){ia[J[J[d>>2]+132>>2]](f+24|0,d,J[a+24>>2]);r=N[f+944>>2];m=N[f+948>>2];l=N[f+952>>2];T=N[f+80>>2];y=N[f+72>>2];W=N[f+76>>2];z=N[f+904>>2];A=N[f+896>>2];B=N[f+900>>2];S=N[f+920>>2];D=N[f+912>>2];E=N[f+916>>2];V=N[f+56>>2];L=N[f+24>>2];M=N[f+40>>2];U=N[f+60>>2];x=N[f+28>>2];u=N[f+44>>2];F=N[f+936>>2];q=N[f+64>>2];G=N[f+928>>2];o=N[f+32>>2];I=N[f+932>>2];p=N[f+48>>2];J[f+212>>2]=0;J[f+196>>2]=0;J[f+180>>2]=0;J[f+164>>2]=0;N[f+192>>2]=Q(q*F)+Q(Q(o*G)+Q(p*I));N[f+188>>2]=Q(U*F)+Q(Q(x*G)+Q(u*I));N[f+184>>2]=Q(V*F)+Q(Q(L*G)+Q(M*I));N[f+176>>2]=Q(q*S)+Q(Q(o*D)+Q(p*E));N[f+172>>2]=Q(U*S)+Q(Q(x*D)+Q(u*E));N[f+168>>2]=Q(V*S)+Q(Q(L*D)+Q(M*E));N[f+160>>2]=Q(q*z)+Q(Q(o*A)+Q(B*p));N[f+156>>2]=Q(U*z)+Q(Q(x*A)+Q(B*u));N[f+152>>2]=Q(V*z)+Q(Q(L*A)+Q(M*B));N[f+208>>2]=l+Q(Q(T*F)+Q(Q(y*G)+Q(I*W)));N[f+204>>2]=m+Q(Q(T*S)+Q(Q(y*D)+Q(E*W)));N[f+200>>2]=r+Q(Q(T*z)+Q(Q(y*A)+Q(B*W)))}if(t){ia[J[J[e>>2]+132>>2]](f+24|0,e,J[a+32>>2]);r=N[f+880>>2];m=N[f+884>>2];l=N[f+888>>2];T=N[f+80>>2];y=N[f+72>>2];W=N[f+76>>2];z=N[f+840>>2];A=N[f+832>>2];B=N[f+836>>2];S=N[f+856>>2];D=N[f+848>>2];E=N[f+852>>2];V=N[f+56>>2];L=N[f+24>>2];M=N[f+40>>2];U=N[f+60>>2];x=N[f+28>>2];u=N[f+44>>2];F=N[f+872>>2];q=N[f+64>>2];G=N[f+864>>2];o=N[f+32>>2];I=N[f+868>>2];p=N[f+48>>2];J[f+148>>2]=0;J[f+132>>2]=0;J[f+116>>2]=0;J[f+100>>2]=0;N[f+128>>2]=Q(q*F)+Q(Q(o*G)+Q(p*I));N[f+124>>2]=Q(U*F)+Q(Q(x*G)+Q(u*I));N[f+120>>2]=Q(V*F)+Q(Q(L*G)+Q(M*I));N[f+112>>2]=Q(q*S)+Q(Q(o*D)+Q(p*E));N[f+108>>2]=Q(U*S)+Q(Q(x*D)+Q(u*E));N[f+104>>2]=Q(V*S)+Q(Q(L*D)+Q(M*E));N[f+96>>2]=Q(q*z)+Q(Q(o*A)+Q(B*p));N[f+92>>2]=Q(U*z)+Q(Q(x*A)+Q(B*u));N[f+88>>2]=Q(V*z)+Q(Q(L*A)+Q(M*B));N[f+144>>2]=l+Q(Q(T*F)+Q(Q(y*G)+Q(I*W)));N[f+140>>2]=m+Q(Q(T*S)+Q(Q(y*D)+Q(E*W)));N[f+136>>2]=r+Q(Q(T*z)+Q(Q(y*A)+Q(B*W)))}j=J[a+28>>2];h=J[a+24>>2];g=J[b+8>>2];J[f+28>>2]=X;J[f+32>>2]=g;J[f+24>>2]=b;J[f+40>>2]=lI(h,j);J[f+44>>2]=ha;J[f+36>>2]=f+152;j=J[a+36>>2];h=J[a+32>>2];g=J[c+8>>2];J[f+4>>2]=O;J[f+8>>2]=g;J[f>>2]=c;J[f+16>>2]=lI(h,j);J[f+20>>2]=ha;J[f+12>>2]=f+88;s=ga-48|0;ga=s;g=J[a+16>>2];ia[J[J[g>>2]+8>>2]](g,J[a+28>>2],J[a+24>>2]);g=J[a+16>>2];ia[J[J[g>>2]+12>>2]](g,J[a+36>>2],J[a+32>>2]);j=J[a+28>>2];h=J[a+24>>2];g=J[f+36>>2];fa=J[f+32>>2];J[s+28>>2]=X;J[s+32>>2]=fa;J[s+36>>2]=g;J[s+24>>2]=f+24;J[s+40>>2]=lI(h,j);J[s+44>>2]=ha;j=J[a+36>>2];h=J[a+32>>2];g=J[f+12>>2];X=J[f+8>>2];J[s+4>>2]=O;J[s+8>>2]=X;J[s+12>>2]=g;J[s>>2]=f;J[s+16>>2]=lI(h,j);J[s+20>>2]=ha;h=J[a+8>>2];if(!h){h=J[a+12>>2];if(!h){g=J[a+4>>2];h=ia[J[J[g>>2]+12>>2]](g,fa,X)|0;J[a+12>>2]=h}J[J[a+16>>2]+4>>2]=h;g=J[a+4>>2];h=ia[J[J[g>>2]+8>>2]](g,s+24|0,s,h)|0;J[a+8>>2]=h}ia[J[J[h>>2]+8>>2]](h,s+24|0,s,J[a+20>>2],J[a+16>>2]);ga=s+48|0;if(w){continue}break}}ia[J[J[d>>2]+116>>2]](d);ia[J[J[e>>2]+116>>2]](e);Qa(f+324|0);Qa(f+216|4);Qa(f+620|0);Qa(f+512|4)}a=J[f+820>>2];if(!a|!K[f+824|0]){break a}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}ga=f+960|0}function yB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=Q(0),f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=0,y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=0,$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=0,ea=0,fa=Q(0),ha=Q(0),ia=Q(0),ja=Q(0);f=ga-464|0;ga=f;a:{if(!K[a+527|0]){break a}h=J[a+32>>2];l=J[a+28>>2];if(!K[a+524|0]){n=Q(N[b+192>>2]+N[b+80>>2]);e=N[a+356>>2];g=N[a+348>>2];i=N[a+352>>2];j=N[l+56>>2];q=Q(Q(Q(e*N[l+28>>2])+Q(Q(g*N[l+20>>2])+Q(i*N[l+24>>2])))+j);k=Q(q-j);j=N[l+52>>2];u=Q(Q(Q(e*N[l+12>>2])+Q(Q(g*N[l+4>>2])+Q(i*N[l+8>>2])))+j);o=Q(u-j);v=Q(N[b+196>>2]+N[b+84>>2]);y=Q(N[c+192>>2]+N[c+80>>2]);j=N[a+420>>2];s=N[a+412>>2];m=N[a+416>>2];p=N[h+56>>2];z=Q(Q(Q(j*N[h+28>>2])+Q(Q(s*N[h+20>>2])+Q(m*N[h+24>>2])))+p);p=Q(z-p);t=N[h+52>>2];w=Q(Q(Q(j*N[h+12>>2])+Q(Q(s*N[h+4>>2])+Q(m*N[h+8>>2])))+t);t=Q(w-t);B=Q(N[c+196>>2]+N[c+84>>2]);C=Q(Q(Q(N[b+184>>2]+N[b+72>>2])+Q(Q(n*k)-Q(o*v)))-Q(Q(N[c+184>>2]+N[c+72>>2])+Q(Q(y*p)-Q(t*B))));E=Q(N[b+200>>2]+N[b+88>>2]);g=Q(Q(e*N[l+44>>2])+Q(Q(g*N[l+36>>2])+Q(i*N[l+40>>2])));e=N[l+60>>2];g=Q(g+e);r=Q(g-e);e=Q(N[c+200>>2]+N[c+88>>2]);i=N[h+60>>2];j=Q(Q(Q(j*N[h+44>>2])+Q(Q(s*N[h+36>>2])+Q(m*N[h+40>>2])))+i);s=Q(j-i);y=Q(Q(Q(N[b+180>>2]+N[b+68>>2])+Q(Q(E*o)-Q(r*n)))-Q(Q(N[c+180>>2]+N[c+68>>2])+Q(Q(e*t)-Q(s*y))));v=Q(Q(Q(N[b+176>>2]+N[b+64>>2])+Q(Q(v*r)-Q(k*E)))-Q(Q(N[c+176>>2]+N[c+64>>2])+Q(Q(B*s)-Q(p*e))));B=Q(g-j);z=Q(q-z);u=Q(u-w);w=Q(-p);E=Q(-t);O=Q(-s);R=Q(-k);Z=Q(-o);M=Q(-r);da=J[c+240>>2];ea=J[b+240>>2];while(1){x=P(_,84)+a|0;g=N[x+56>>2];i=N[x+48>>2];j=N[x+52>>2];e=Q(Q(1)/N[x+128>>2]);e=Q(Q(Q(Q(Q(Q(B*g)+Q(Q(u*i)+Q(z*j)))*Q(-.30000001192092896))/d)*e)-Q(e*Q(Q(g*C)+Q(Q(i*v)+Q(y*j)))));N[a+36>>2]=N[a+36>>2]+e;if(ea){W=N[l+304>>2];X=N[l+296>>2];F=N[l+300>>2];G=N[l+288>>2];H=N[l+280>>2];A=N[l+284>>2];n=N[l+272>>2];q=N[l+264>>2];D=N[l+268>>2];m=N[l+344>>2];N[b+64>>2]=Q(Q(Q(i*m)*e)*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(Q(Q(j*m)*e)*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(Q(Q(g*m)*e)*N[b+120>>2])+N[b+72>>2];m=Q(Q(o*j)+Q(i*R));I=Q(n*m);n=Q(Q(k*g)+Q(j*M));L=Q(q*n);q=Q(Q(r*i)+Q(g*Z));N[b+80>>2]=Q(Q(I+Q(L+Q(D*q)))*Q(e*N[b+96>>2]))+N[b+80>>2];D=N[b+104>>2];N[b+84>>2]=Q(Q(Q(G*m)+Q(Q(H*n)+Q(q*A)))*Q(e*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(Q(Q(W*m)+Q(Q(X*n)+Q(q*F)))*Q(e*D))+N[b+88>>2]}if(da){n=N[h+304>>2];q=N[h+296>>2];W=N[h+300>>2];X=N[h+288>>2];F=N[h+280>>2];G=N[h+284>>2];H=N[h+272>>2];A=N[h+264>>2];D=N[h+268>>2];I=N[x+56>>2];L=N[x+52>>2];m=N[h+344>>2];e=Q(-e);N[c+64>>2]=Q(N[c+112>>2]*Q(Q(m*N[x+48>>2])*e))+N[c+64>>2];N[c+68>>2]=Q(Q(Q(m*L)*e)*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(Q(Q(m*I)*e)*N[c+120>>2])+N[c+72>>2];m=Q(Q(t*j)+Q(i*w));j=Q(Q(p*g)+Q(j*O));g=Q(Q(s*i)+Q(g*E));N[c+80>>2]=Q(Q(Q(H*m)+Q(Q(A*j)+Q(D*g)))*Q(N[c+96>>2]*e))+N[c+80>>2];i=N[c+104>>2];N[c+84>>2]=Q(Q(Q(X*m)+Q(Q(F*j)+Q(g*G)))*Q(N[c+100>>2]*e))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(n*m)+Q(Q(q*j)+Q(g*W)))*Q(i*e))+N[c+88>>2]}_=_+1|0;if((_|0)!=3){continue}break}}b:{if(K[a+552|0]){x=J[l+16>>2];J[f+384>>2]=J[l+12>>2];J[f+388>>2]=x;x=J[l+8>>2];J[f+376>>2]=J[l+4>>2];J[f+380>>2]=x;x=J[l+32>>2];J[f+400>>2]=J[l+28>>2];J[f+404>>2]=x;x=J[l+24>>2];J[f+392>>2]=J[l+20>>2];J[f+396>>2]=x;x=J[l+48>>2];J[f+416>>2]=J[l+44>>2];J[f+420>>2]=x;x=J[l+40>>2];J[f+408>>2]=J[l+36>>2];J[f+412>>2]=x;x=J[l+64>>2];J[f+432>>2]=J[l+60>>2];J[f+436>>2]=x;x=J[l+56>>2];J[f+424>>2]=J[l+52>>2];J[f+428>>2]=x;l=J[h+16>>2];J[f+320>>2]=J[h+12>>2];J[f+324>>2]=l;l=J[h+8>>2];J[f+312>>2]=J[h+4>>2];J[f+316>>2]=l;l=J[h+32>>2];J[f+336>>2]=J[h+28>>2];J[f+340>>2]=l;l=J[h+24>>2];J[f+328>>2]=J[h+20>>2];J[f+332>>2]=l;l=J[h+48>>2];J[f+352>>2]=J[h+44>>2];J[f+356>>2]=l;l=J[h+40>>2];J[f+344>>2]=J[h+36>>2];J[f+348>>2]=l;l=J[h+64>>2];J[f+368>>2]=J[h+60>>2];J[f+372>>2]=l;l=J[h+56>>2];J[f+360>>2]=J[h+52>>2];J[f+364>>2]=l;e=N[b+84>>2];g=N[b+196>>2];i=N[b+88>>2];j=N[b+200>>2];k=N[b+80>>2];o=N[b+192>>2];J[f+308>>2]=0;N[f+304>>2]=j+i;N[f+300>>2]=g+e;N[f+296>>2]=o+k;e=N[c+84>>2];g=N[c+196>>2];i=N[c+88>>2];j=N[c+200>>2];k=N[c+80>>2];o=N[c+192>>2];J[f+292>>2]=0;N[f+288>>2]=j+i;N[f+284>>2]=g+e;N[f+280>>2]=o+k;J[f+228>>2]=0;J[f+232>>2]=0;J[f+240>>2]=0;J[f+244>>2]=0;J[f+236>>2]=1065353216;J[f+248>>2]=0;J[f+252>>2]=0;J[f+260>>2]=0;J[f+264>>2]=0;J[f+256>>2]=1065353216;J[f+268>>2]=0;J[f+272>>2]=0;J[f+276>>2]=0;J[f+220>>2]=0;J[f+224>>2]=0;J[f+216>>2]=1065353216;J[f+208>>2]=0;J[f+212>>2]=0;J[f+200>>2]=0;J[f+204>>2]=0;h=f+376|0;l=f+200|0;Rb(h,l,f+296|0,d,f+216|0);J[f+148>>2]=0;J[f+152>>2]=0;J[f+160>>2]=0;J[f+164>>2]=0;J[f+156>>2]=1065353216;J[f+168>>2]=0;J[f+172>>2]=0;J[f+180>>2]=0;J[f+184>>2]=0;J[f+176>>2]=1065353216;J[f+188>>2]=0;J[f+192>>2]=0;J[f+196>>2]=0;J[f+140>>2]=0;J[f+144>>2]=0;J[f+136>>2]=1065353216;x=f+312|0;Rb(x,l,f+280|0,d,f+136|0);j=N[a+308>>2];n=N[a+304>>2];o=N[a+324>>2];r=N[a+316>>2];s=N[a+320>>2];m=N[a+404>>2];q=N[a+400>>2];u=N[a+396>>2];v=N[a+372>>2];y=N[a+368>>2];z=N[a+340>>2];w=N[a+332>>2];B=N[a+336>>2];C=N[a+388>>2];E=N[a+384>>2];O=N[a+380>>2];g=N[a+568>>2];k=N[a+564>>2];i=N[a+560>>2];fa=N[a+420>>2];ha=N[a+412>>2];ia=N[a+416>>2];R=N[a+300>>2];W=N[a+356>>2];ja=N[a+348>>2];X=N[a+352>>2];Z=N[a+364>>2];e=N[a+556>>2];J[f+132>>2]=0;J[f+116>>2]=0;J[f+100>>2]=0;p=Q(Q(2)/Q(Q(g*g)+Q(Q(k*k)+Q(Q(e*e)+Q(i*i)))));F=Q(e*p);H=Q(e*F);t=Q(i*p);G=Q(i*t);M=Q(Q(1)-Q(H+G));p=Q(k*p);A=Q(e*p);D=Q(g*t);S=Q(A+D);I=Q(i*p);L=Q(g*F);i=Q(I-L);F=Q(Q(m*M)+Q(Q(u*S)+Q(q*i)));T=Q(A-D);A=Q(k*p);k=Q(Q(1)-Q(G+A));e=Q(e*t);g=Q(g*p);p=Q(e+g);G=Q(Q(m*T)+Q(Q(u*k)+Q(q*p)));t=Q(I+L);U=Q(e-g);V=Q(Q(1)-Q(H+A));H=Q(Q(m*t)+Q(Q(u*U)+Q(q*V)));e=Q(Q(z*F)+Q(Q(w*G)+Q(B*H)));A=N[f+176>>2];D=Q(Q(M*v)+Q(Q(S*Z)+Q(y*i)));I=Q(Q(T*v)+Q(Q(k*Z)+Q(y*p)));L=Q(Q(t*v)+Q(Q(U*Z)+Q(y*V)));g=Q(Q(z*D)+Q(Q(w*I)+Q(B*L)));$=N[f+168>>2];S=Q(Q(M*C)+Q(Q(S*O)+Q(E*i)));T=Q(Q(T*C)+Q(Q(k*O)+Q(E*p)));U=Q(Q(t*C)+Q(Q(U*O)+Q(E*V)));i=Q(Q(z*S)+Q(Q(w*T)+Q(B*U)));V=N[f+172>>2];N[f+112>>2]=Q(e*A)+Q(Q(g*$)+Q(i*V));k=Q(Q(o*F)+Q(Q(r*G)+Q(H*s)));p=Q(Q(o*D)+Q(Q(r*I)+Q(L*s)));t=Q(Q(o*S)+Q(Q(r*T)+Q(U*s)));N[f+108>>2]=Q(A*k)+Q(Q($*p)+Q(V*t));aa=N[f+160>>2];ba=N[f+152>>2];ca=N[f+156>>2];N[f+96>>2]=Q(e*aa)+Q(Q(g*ba)+Q(i*ca));N[f+92>>2]=Q(k*aa)+Q(Q(p*ba)+Q(t*ca));M=Q(0);q=Q(fa+Q(Q(m*Q(0))+Q(Q(u*Q(0))+Q(q*Q(0)))));m=Q(-ja);o=Q(Q(Q(j*m)-Q(o*X))-Q(z*W));r=Q(Q(Q(R*m)-Q(r*X))-Q(w*W));m=Q(Q(Q(n*m)-Q(s*X))-Q(B*W));s=Q(q+Q(Q(o*F)+Q(Q(r*G)+Q(H*m))));q=Q(Q(ha+Q(Q(v*Q(0))+Q(Q(Z*Q(0))+Q(y*Q(0)))))+Q(Q(o*D)+Q(Q(r*I)+Q(L*m))));m=Q(Q(ia+Q(Q(C*Q(0))+Q(Q(O*Q(0))+Q(E*Q(0)))))+Q(Q(o*S)+Q(Q(r*T)+Q(U*m))));E=Q(Q(Q(A*s)+Q(Q($*q)+Q(V*m)))+N[f+192>>2]);N[f+128>>2]=E;O=Q(Q(Q(s*aa)+Q(Q(q*ba)+Q(m*ca)))+N[f+188>>2]);N[f+124>>2]=O;J[f+84>>2]=0;r=Q(Q(j*F)+Q(Q(R*G)+Q(H*n)));o=Q(Q(j*D)+Q(Q(R*I)+Q(L*n)));j=Q(Q(j*S)+Q(Q(R*T)+Q(U*n)));N[f+104>>2]=Q(A*r)+Q(Q($*o)+Q(V*j));N[f+88>>2]=Q(r*aa)+Q(Q(o*ba)+Q(j*ca));n=N[f+144>>2];u=N[f+136>>2];v=N[f+140>>2];N[f+80>>2]=Q(e*n)+Q(Q(g*u)+Q(i*v));N[f+76>>2]=Q(k*n)+Q(Q(p*u)+Q(t*v));N[f+72>>2]=Q(r*n)+Q(Q(o*u)+Q(j*v));R=Q(Q(Q(s*n)+Q(Q(q*u)+Q(v*m)))+N[f+184>>2]);N[f+120>>2]=R;J[f+68>>2]=0;J[f+52>>2]=0;J[f+36>>2]=0;n=N[f+256>>2];u=N[f+248>>2];v=N[f+252>>2];N[f+48>>2]=Q(e*n)+Q(Q(r*u)+Q(k*v));N[f+44>>2]=Q(i*n)+Q(Q(j*u)+Q(t*v));y=N[f+240>>2];z=N[f+232>>2];w=N[f+236>>2];N[f+32>>2]=Q(e*y)+Q(Q(r*z)+Q(k*w));N[f+28>>2]=Q(i*y)+Q(Q(j*z)+Q(t*w));q=Q(-q);B=Q(Q(Q(g*q)-Q(i*m))-Q(e*s));C=Q(Q(Q(o*q)-Q(j*m))-Q(r*s));s=Q(Q(Q(p*q)-Q(t*m))-Q(k*s));m=Q(Q(Q(n*B)+Q(Q(u*C)+Q(v*s)))+N[f+272>>2]);N[f- -64>>2]=m;q=Q(Q(Q(B*y)+Q(Q(C*z)+Q(s*w)))+N[f+268>>2]);N[f+60>>2]=q;J[f+20>>2]=0;N[f+40>>2]=Q(g*n)+Q(Q(o*u)+Q(p*v));N[f+24>>2]=Q(g*y)+Q(Q(o*z)+Q(p*w));w=e;e=N[f+224>>2];A=r;r=N[f+216>>2];n=k;k=N[f+220>>2];N[f+16>>2]=Q(w*e)+Q(Q(A*r)+Q(n*k));N[f+12>>2]=Q(i*e)+Q(Q(j*r)+Q(t*k));N[f+8>>2]=Q(g*e)+Q(Q(o*r)+Q(p*k));g=Q(Q(Q(B*e)+Q(Q(C*r)+Q(s*k)))+N[f+264>>2]);N[f+56>>2]=g;e=Q(Q(1)/d);N[f+208>>2]=e*Q(E-N[f+432>>2]);J[f+212>>2]=0;N[f+200>>2]=e*Q(R-N[f+424>>2]);N[f+204>>2]=e*Q(O-N[f+428>>2]);_=h;h=f+448|0;l=f+444|0;hc(_,f+72|0,h,l);N[f+208>>2]=e*Q(m-N[f+368>>2]);J[f+212>>2]=0;N[f+204>>2]=e*Q(q-N[f+364>>2]);N[f+200>>2]=e*Q(g-N[f+360>>2]);p=N[f+452>>2];g=N[f+444>>2];m=N[f+456>>2];n=N[f+448>>2];hc(x,f+8|0,h,l);i=N[f+444>>2];t=Q(Q(e*Q(i*N[f+456>>2]))-N[f+288>>2]);r=Q(Q(e*Q(i*N[f+452>>2]))-N[f+284>>2]);s=Q(Q(e*Q(N[f+448>>2]*i))-N[f+280>>2]);i=Q(0);m=Q(Q(e*Q(g*m))-N[f+304>>2]);n=Q(Q(e*Q(n*g))-N[f+296>>2]);q=Q(Q(e*Q(g*p))-N[f+300>>2]);e=Q(Q(m*m)+Q(Q(n*n)+Q(q*q)));if(e>Q(1.1920928955078125e-7)){e=Q(Q(1)/Q(Y(e)));j=Q(m*e);h=J[a+28>>2];k=Q(n*e);o=Q(q*e);i=Q(Q(j*Q(Q(j*N[h+304>>2])+Q(Q(N[h+272>>2]*k)+Q(o*N[h+288>>2]))))+Q(Q(k*Q(Q(N[h+296>>2]*j)+Q(Q(k*N[h+264>>2])+Q(o*N[h+280>>2]))))+Q(o*Q(Q(N[h+300>>2]*j)+Q(Q(N[h+268>>2]*k)+Q(o*N[h+284>>2]))))))}u=Q(Q(t*t)+Q(Q(s*s)+Q(r*r)));if(u>Q(1.1920928955078125e-7)){g=Q(Q(1)/Q(Y(u)));p=Q(t*g);h=J[a+32>>2];e=Q(s*g);g=Q(r*g);M=Q(Q(p*Q(Q(p*N[h+304>>2])+Q(Q(N[h+272>>2]*e)+Q(g*N[h+288>>2]))))+Q(Q(e*Q(Q(N[h+296>>2]*p)+Q(Q(e*N[h+264>>2])+Q(g*N[h+280>>2]))))+Q(g*Q(Q(N[h+300>>2]*p)+Q(Q(N[h+268>>2]*e)+Q(g*N[h+284>>2]))))))}j=Q(Q(i*j)+Q(M*p));k=Q(Q(i*k)+Q(M*e));i=Q(Q(i*o)+Q(M*g));e=Q(Q(j*j)+Q(Q(k*k)+Q(i*i)));if(!(e>Q(1.1920928955078125e-7))){break b}g=j;j=Q(Q(1)/Q(Y(e)));e=Q(g*j);h=J[a+28>>2];g=Q(k*j);i=Q(i*j);o=Q(Q(e*Q(Q(e*N[h+304>>2])+Q(Q(N[h+272>>2]*g)+Q(i*N[h+288>>2]))))+Q(Q(g*Q(Q(N[h+296>>2]*e)+Q(Q(g*N[h+264>>2])+Q(i*N[h+280>>2]))))+Q(i*Q(Q(N[h+300>>2]*e)+Q(Q(N[h+268>>2]*g)+Q(i*N[h+284>>2]))))));l=J[a+32>>2];g=Q(Q(e*Q(Q(e*N[l+304>>2])+Q(Q(N[l+272>>2]*g)+Q(i*N[l+288>>2]))))+Q(Q(g*Q(Q(N[l+296>>2]*e)+Q(Q(g*N[l+264>>2])+Q(i*N[l+280>>2]))))+Q(i*Q(Q(N[l+300>>2]*e)+Q(Q(N[l+268>>2]*g)+Q(i*N[l+284>>2]))))));e=Q(o+g);j=Q(Q(1)/Q(e*e));e=Q(Q(Q(m*o)-Q(t*g))*j);i=Q(Q(Q(q*o)-Q(r*g))*j);g=Q(Q(Q(n*o)-Q(s*g))*j);m=N[a+572>>2];if(m>=Q(0)){t=N[a+584>>2];j=Q(e+t);r=N[a+576>>2];k=Q(g+r);s=N[a+580>>2];p=Q(i+s);n=Q(Y(Q(Q(j*j)+Q(Q(k*k)+Q(p*p)))));o=Q(m/(K[a+553|0]?o:Q(1)));if(n>o){g=Q(Q(1)/n);e=Q(Q(o*Q(j*g))-t);j=Q(t+e);i=Q(Q(o*Q(p*g))-s);p=Q(s+i);g=Q(Q(o*Q(k*g))-r);k=Q(r+g)}N[a+584>>2]=j;N[a+580>>2]=p;N[a+576>>2]=k}j=e;e=Q(Y(Q(Q(e*e)+Q(Q(g*g)+Q(i*i)))));k=Q(Q(1)/e);j=Q(j*k);i=Q(i*k);g=Q(g*k);if(J[b+240>>2]){o=N[h+304>>2];p=N[h+296>>2];t=N[h+300>>2];r=N[h+288>>2];s=N[h+280>>2];m=N[h+284>>2];n=N[h+272>>2];q=N[h+264>>2];u=N[h+268>>2];k=Q(e*Q(0));N[b+64>>2]=Q(k*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(k*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(k*N[b+120>>2])+N[b+72>>2];N[b+80>>2]=Q(Q(Q(n*j)+Q(Q(q*g)+Q(i*u)))*Q(e*N[b+96>>2]))+N[b+80>>2];k=N[b+104>>2];N[b+84>>2]=Q(Q(Q(r*j)+Q(Q(s*g)+Q(i*m)))*Q(e*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(Q(Q(o*j)+Q(Q(p*g)+Q(i*t)))*Q(e*k))+N[b+88>>2]}if(!J[c+240>>2]){break b}o=N[l+304>>2];p=N[l+296>>2];t=N[l+300>>2];r=N[l+288>>2];s=N[l+280>>2];m=N[l+284>>2];n=N[l+272>>2];q=N[l+264>>2];u=N[l+268>>2];k=Q(e*Q(-0));N[c+64>>2]=Q(k*N[c+112>>2])+N[c+64>>2];N[c+68>>2]=Q(k*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(k*N[c+120>>2])+N[c+72>>2];e=Q(-e);N[c+80>>2]=Q(Q(Q(n*j)+Q(Q(q*g)+Q(i*u)))*Q(N[c+96>>2]*e))+N[c+80>>2];k=N[c+104>>2];N[c+84>>2]=Q(Q(Q(r*j)+Q(Q(s*g)+Q(i*m)))*Q(N[c+100>>2]*e))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(o*j)+Q(Q(p*g)+Q(i*t)))*Q(k*e))+N[c+88>>2];break b}g=N[a+440>>2];if(!(g>Q(1.1920928955078125e-7))){break b}o=N[b+88>>2];e=Q(Q(N[c+200>>2]+N[c+88>>2])-Q(N[b+200>>2]+o));p=N[b+80>>2];j=Q(Q(N[c+192>>2]+N[c+80>>2])-Q(N[b+192>>2]+p));t=N[b+84>>2];k=Q(Q(N[c+196>>2]+N[c+84>>2])-Q(N[b+196>>2]+t));i=Q(Q(e*e)+Q(Q(j*j)+Q(k*k)));if(!(i>Q(1.1920928955078125e-7))){break b}w=e;A=g;i=Q(Q(1)/Q(Y(i)));e=Q(e*i);r=N[l+304>>2];s=N[l+272>>2];g=Q(j*i);i=Q(k*i);m=N[l+288>>2];n=N[l+296>>2];q=N[l+264>>2];u=N[l+280>>2];v=N[l+300>>2];y=N[l+268>>2];z=N[l+284>>2];e=Q(A*Q(Q(1)/Q(Q(Q(e*Q(Q(e*r)+Q(Q(s*g)+Q(i*m))))+Q(Q(g*Q(Q(n*e)+Q(Q(g*q)+Q(i*u))))+Q(i*Q(Q(v*e)+Q(Q(y*g)+Q(i*z))))))+Q(Q(e*Q(Q(e*N[h+304>>2])+Q(Q(N[h+272>>2]*g)+Q(i*N[h+288>>2]))))+Q(Q(g*Q(Q(N[h+296>>2]*e)+Q(Q(g*N[h+264>>2])+Q(i*N[h+280>>2]))))+Q(i*Q(Q(N[h+300>>2]*e)+Q(Q(N[h+268>>2]*g)+Q(i*N[h+284>>2])))))))));g=Q(w*e);j=Q(j*e);i=Q(k*e);e=Q(Y(Q(Q(g*g)+Q(Q(j*j)+Q(i*i)))));k=Q(Q(1)/e);g=Q(g*k);i=Q(i*k);j=Q(j*k);if(J[b+240>>2]){k=Q(e*Q(0));N[b+64>>2]=Q(k*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(k*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(k*N[b+120>>2])+N[b+72>>2];N[b+88>>2]=o+Q(Q(Q(r*g)+Q(Q(n*j)+Q(i*v)))*Q(e*N[b+104>>2]));N[b+84>>2]=t+Q(Q(Q(m*g)+Q(Q(u*j)+Q(i*z)))*Q(e*N[b+100>>2]));N[b+80>>2]=p+Q(Q(Q(s*g)+Q(Q(q*j)+Q(i*y)))*Q(e*N[b+96>>2]))}if(!J[c+240>>2]){break b}o=N[h+304>>2];p=N[h+296>>2];t=N[h+300>>2];r=N[h+288>>2];s=N[h+280>>2];m=N[h+284>>2];n=N[h+272>>2];q=N[h+264>>2];u=N[h+268>>2];k=Q(e*Q(-0));N[c+64>>2]=Q(k*N[c+112>>2])+N[c+64>>2];N[c+68>>2]=Q(k*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(k*N[c+120>>2])+N[c+72>>2];e=Q(-e);N[c+80>>2]=Q(Q(Q(n*g)+Q(Q(q*j)+Q(i*u)))*Q(N[c+96>>2]*e))+N[c+80>>2];k=N[c+104>>2];N[c+84>>2]=Q(Q(Q(r*g)+Q(Q(s*j)+Q(i*m)))*Q(N[c+100>>2]*e))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(o*g)+Q(Q(p*j)+Q(i*t)))*Q(k*e))+N[c+88>>2]}k=Q(N[c+200>>2]+N[c+88>>2]);o=Q(N[c+196>>2]+N[c+84>>2]);p=Q(N[b+200>>2]+N[b+88>>2]);t=Q(N[b+196>>2]+N[b+84>>2]);r=Q(N[c+192>>2]+N[c+80>>2]);s=Q(N[b+192>>2]+N[b+80>>2]);c:{if(!K[a+526|0]){break c}g=N[a+528>>2];e=Q(Q(Q(g*N[a+504>>2])*N[a+432>>2])/d);i=N[a+516>>2];w=g;g=N[a+468>>2];j=N[a+460>>2];m=N[a+464>>2];n=Q(Q(Q(k-p)*g)+Q(Q(Q(r-s)*j)+Q(Q(o-t)*m)));e=Q(i+Q(N[a+492>>2]*(n>Q(0)?Q(Q(Q(w*n)*N[a+436>>2])+e):e)));e=e>Q(0)?e:Q(0);N[a+516>>2]=e;e=Q(e-i);g=Q(g*e);i=N[a+544>>2];j=Q(j*e);n=N[a+536>>2];q=N[a+540>>2];u=Q(m*e);e=Q(Q(g*i)+Q(Q(j*n)+Q(q*u)));g=Q(g-Q(i*e));m=Q(j-Q(n*e));i=Q(u-Q(q*e));e=Q(Y(Q(Q(g*g)+Q(Q(m*m)+Q(i*i)))));j=Q(Q(1)/e);g=Q(g*j);i=Q(i*j);j=Q(m*j);if(J[b+240>>2]){h=J[a+28>>2];n=N[h+304>>2];q=N[h+296>>2];u=N[h+300>>2];v=N[h+288>>2];y=N[h+280>>2];z=N[h+284>>2];w=N[h+272>>2];B=N[h+268>>2];C=N[h+264>>2];m=Q(e*Q(0));N[b+64>>2]=Q(m*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(m*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(m*N[b+120>>2])+N[b+72>>2];N[b+80>>2]=Q(Q(Q(w*g)+Q(Q(C*j)+Q(i*B)))*Q(e*N[b+96>>2]))+N[b+80>>2];m=N[b+104>>2];N[b+84>>2]=Q(Q(Q(v*g)+Q(Q(y*j)+Q(i*z)))*Q(e*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(Q(Q(n*g)+Q(Q(q*j)+Q(i*u)))*Q(e*m))+N[b+88>>2]}if(!J[c+240>>2]){break c}h=J[a+32>>2];n=N[h+304>>2];q=N[h+296>>2];u=N[h+300>>2];v=N[h+288>>2];y=N[h+280>>2];z=N[h+284>>2];w=N[h+272>>2];B=N[h+268>>2];C=N[h+264>>2];m=Q(e*Q(-0));N[c+64>>2]=Q(m*N[c+112>>2])+N[c+64>>2];N[c+68>>2]=Q(m*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(m*N[c+120>>2])+N[c+72>>2];e=Q(-e);N[c+80>>2]=Q(Q(Q(w*g)+Q(Q(C*j)+Q(i*B)))*Q(N[c+96>>2]*e))+N[c+80>>2];m=N[c+104>>2];N[c+84>>2]=Q(Q(Q(v*g)+Q(Q(y*j)+Q(i*z)))*Q(N[c+100>>2]*e))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(n*g)+Q(Q(q*j)+Q(i*u)))*Q(m*e))+N[c+88>>2]}if(!K[a+525|0]){break a}e=N[a+532>>2];d=Q(Q(Q(e*N[a+508>>2])*N[a+432>>2])/d);j=N[a+520>>2];w=e;e=N[a+484>>2];i=N[a+476>>2];g=N[a+480>>2];k=Q(Q(Q(k-p)*e)+Q(Q(Q(r-s)*i)+Q(Q(o-t)*g)));d=Q(j+Q(N[a+496>>2]*(k>Q(0)?Q(Q(Q(w*k)*N[a+436>>2])+d):d)));d=d>Q(0)?d:Q(0);N[a+520>>2]=d;d=Q(d-j);if(J[b+240>>2]){h=J[a+28>>2];k=N[h+304>>2];o=N[h+296>>2];p=N[h+300>>2];t=N[h+288>>2];r=N[h+280>>2];s=N[h+284>>2];m=N[h+272>>2];n=N[h+268>>2];q=N[h+264>>2];j=Q(d*Q(0));N[b+64>>2]=Q(j*N[b+112>>2])+N[b+64>>2];N[b+68>>2]=Q(j*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(j*N[b+120>>2])+N[b+72>>2];N[b+80>>2]=Q(Q(Q(m*e)+Q(Q(q*i)+Q(g*n)))*Q(d*N[b+96>>2]))+N[b+80>>2];j=N[b+104>>2];N[b+84>>2]=Q(Q(Q(t*e)+Q(Q(r*i)+Q(g*s)))*Q(d*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(Q(Q(k*e)+Q(Q(o*i)+Q(g*p)))*Q(d*j))+N[b+88>>2];g=N[a+480>>2];i=N[a+476>>2];e=N[a+484>>2]}if(!J[c+240>>2]){break a}a=J[a+32>>2];k=N[a+304>>2];o=N[a+296>>2];p=N[a+300>>2];t=N[a+288>>2];r=N[a+280>>2];s=N[a+284>>2];m=N[a+272>>2];n=N[a+268>>2];q=N[a+264>>2];j=Q(d*Q(-0));N[c+64>>2]=Q(j*N[c+112>>2])+N[c+64>>2];N[c+68>>2]=Q(j*N[c+116>>2])+N[c+68>>2];N[c+72>>2]=Q(j*N[c+120>>2])+N[c+72>>2];d=Q(-d);N[c+80>>2]=Q(Q(Q(m*e)+Q(Q(q*i)+Q(g*n)))*Q(N[c+96>>2]*d))+N[c+80>>2];j=N[c+104>>2];N[c+84>>2]=Q(Q(Q(t*e)+Q(Q(r*i)+Q(g*s)))*Q(N[c+100>>2]*d))+N[c+84>>2];N[c+88>>2]=Q(Q(Q(k*e)+Q(Q(o*i)+Q(g*p)))*Q(j*d))+N[c+88>>2]}ga=f+464|0}function xy(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=0,O=Q(0),S=0,T=0,U=Q(0),V=Q(0),W=Q(0),X=Q(0);d=J[a+24>>2];if((d|0)>0){while(1){a:{b:{e=J[J[a+32>>2]+(T<<2)>>2];switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}d=0;r=ga-144|0;ga=r;c:{if(!K[e+924|0]){break c}H[e+924|0]=0;g=J[e+732>>2];if((g|0)>0){m=J[e+740>>2];while(1){c=m+P(d,52)|0;v=J[c+8>>2];y=J[c+12>>2];f=Q(N[v+16>>2]-N[y+16>>2]);i=Q(f*f);f=Q(N[v+8>>2]-N[y+8>>2]);j=Q(f*f);f=Q(N[v+12>>2]-N[y+12>>2]);f=Q(Y(Q(i+Q(j+Q(f*f)))));N[c+16>>2]=f;N[c+28>>2]=f*f;d=d+1|0;if((g|0)!=(d|0)){continue}break}d=0;while(1){c=m+P(d,52)|0;N[c+24>>2]=Q(N[J[c+8>>2]+88>>2]+N[J[c+12>>2]+88>>2])/N[J[c+4>>2]+4>>2];d=d+1|0;if((g|0)!=(d|0)){continue}break}}kg(e);Fd(e+988|0);if(!(K[e+388|0]&16)){break c}kk(e)}f=Q(N[e+368>>2]*b);N[e+452>>2]=f;N[e+460>>2]=f*Q(3);N[e+456>>2]=Q(1)/f;d=J[e+192>>2];f=Q(ia[J[J[d>>2]+48>>2]](d));N[e+464>>2]=f;N[e+468>>2]=f*Q(.25);g=J[e+712>>2];if((g|0)>0){f=N[e+452>>2];d=J[e+684>>2];i=Q(f*N[d+48>>2]);k=Q(f*N[d+44>>2]);f=Q(N[d+40>>2]*f);m=J[e+720>>2];d=0;while(1){c=m+P(d,104)|0;if(N[c+88>>2]>Q(0)){N[c+40>>2]=f+N[c+40>>2];N[c+44>>2]=k+N[c+44>>2];N[c+48>>2]=i+N[c+48>>2]}d=d+1|0;if((g|0)!=(d|0)){continue}break}}d=0;k=Q(0);ya(2710);g=J[e+712>>2];n=N[e+312>>2];f=N[e+308>>2];d:{if(f==Q(0)){i=Q(0);if(!(n>Q(0))){break d}}if((g|0)<=0){i=Q(0)}else{y=J[e+752>>2];if((y|0)>0){c=J[e+720>>2];i=N[c+8>>2];o=N[c+16>>2];p=N[c+12>>2];C=J[e+760>>2];while(1){u=k;c=C+P(d,44)|0;m=J[c+8>>2];v=J[c+12>>2];k=Q(N[v+8>>2]-i);c=J[c+16>>2];j=Q(N[c+12>>2]-p);h=Q(N[c+8>>2]-i);l=Q(N[v+12>>2]-p);t=Q(Q(N[m+16>>2]-o)*Q(Q(k*j)-Q(h*l)));q=l;l=Q(N[c+16>>2]-o);s=j;j=Q(N[v+16>>2]-o);k=Q(u+Q(t+Q(Q(Q(N[m+8>>2]-i)*Q(Q(q*l)-Q(s*j)))+Q(Q(N[m+12>>2]-p)*Q(Q(j*h)-Q(l*k))))));d=d+1|0;if((y|0)!=(d|0)){continue}break}}i=Q(k/Q(6))}k=Q(f*Q(Q(1)/Q(R(i))));i=Q(n*Q(N[e+476>>2]-i))}e:{if((g|0)<=0){break e}m=N[e+304>>2]>Q(0)|N[e+300>>2]>Q(0);v=e+1212|0;if(f!=Q(0)){c=0;while(1){d=J[e+720>>2]+P(c,104)|0;f:{if(!(N[d+88>>2]>Q(0))){break f}if(m){te(e,v,c)}o=N[d+72>>2];p=N[d+92>>2];f=Q(k*p);j=Q(Q(o*f)+N[d+56>>2]);N[d+56>>2]=j;h=N[d+76>>2];l=Q(Q(f*h)+N[d+60>>2]);N[d+60>>2]=l;t=N[d+80>>2];y=d- -64|0;f=Q(Q(f*t)+N[y>>2]);N[y>>2]=f;if(!(n>Q(0))){break f}u=o;o=Q(i*p);N[d+56>>2]=Q(u*o)+j;N[d+60>>2]=Q(o*h)+l;N[y>>2]=Q(o*t)+f}c=c+1|0;if((g|0)!=(c|0)){continue}break}break e}if(n>Q(0)){c=0;while(1){d=J[e+720>>2]+P(c,104)|0;if(N[d+88>>2]>Q(0)){if(m){te(e,v,c)}f=Q(i*N[d+92>>2]);N[d+56>>2]=Q(N[d+72>>2]*f)+N[d+56>>2];N[d+60>>2]=Q(f*N[d+76>>2])+N[d+60>>2];y=d- -64|0;N[y>>2]=Q(f*N[d+80>>2])+N[y>>2]}c=c+1|0;if((g|0)!=(c|0)){continue}break}break e}if(!m){break e}d=0;while(1){if(N[(J[e+720>>2]+P(d,104)|0)+88>>2]>Q(0)){te(e,v,d)}d=d+1|0;if((g|0)!=(d|0)){continue}break}}M=J[e+752>>2];if((M|0)>0){y=e+1212|0;d=0;while(1){z=N[e+304>>2];A=N[e+300>>2];g:{if(!(z>Q(0)|A>Q(0))){break g}S=J[e+288>>2];if((S|0)<4){break g}C=J[e+760>>2];v=C+P(d,44)|0;m=J[v+8>>2];h=N[m+48>>2];c=J[v+12>>2];g=J[v+16>>2];f=Q(Q(Q(Q(h+N[c+48>>2])+N[g+48>>2])*Q(.3333333432674408))-N[y+8>>2]);l=N[m+40>>2];o=Q(Q(Q(Q(l+N[c+40>>2])+N[g+40>>2])*Q(.3333333432674408))-N[y>>2]);t=N[m+44>>2];p=Q(Q(Q(Q(t+N[c+44>>2])+N[g+44>>2])*Q(.3333333432674408))-N[y+4>>2]);x=Q(Q(f*f)+Q(Q(o*o)+Q(p*p)));if(!(x>Q(1.1920928955078125e-7))){break g}j=N[e+452>>2];B=N[J[e+684>>2]>>2];E=Q(Y(x));n=Q(Q(1)/E);i=Q(f*n);k=Q(p*n);n=Q(o*n);q=N[v+20>>2];s=N[v+28>>2];w=N[v+24>>2];h:{switch(S-4|0){case 1:f=Q(Q(s*f)+Q(Q(q*o)+Q(p*w)))<Q(0)?Q(-1):Q(1);s=Q(s*f);u=Q(q*f);w=Q(w*f);q=Q(Q(s*i)+Q(Q(u*n)+Q(k*w)));f=Q(Q(Q(A*Q(.5))*B)*x);x=Q(N[(C+P(d,44)|0)+36>>2]*Q(.5));f=Q(q*Q(f*x));A=Q(f*Q(-i));F=Q(f*Q(-k));G=Q(f*Q(-n));o=Q(0);p=Q(0);f=Q(0);i:{if(!(q>Q(0))){break i}f=Q(0);if(!(q<Q(.9847999811172485))){break i}o=Q(Q(w*i)-Q(k*s));s=Q(Q(s*n)-Q(i*u));f=Q(Q(Y(Q(Q(1)-Q(q*q))))*Q(Q(Q(Q(z*Q(.5))*B)*E)*x));p=Q(Q(Q(Q(o*k)-Q(n*s))*f)*Q(.3333333432674408));q=Q(Q(u*k)-Q(n*w));o=Q(Q(Q(Q(q*n)-Q(i*o))*f)*Q(.3333333432674408));f=Q(Q(Q(Q(s*i)-Q(k*q))*f)*Q(.3333333432674408))}i=Q(A*Q(.3333333432674408));k=Q(F*Q(.3333333432674408));n=Q(G*Q(.3333333432674408));q=N[m+88>>2];if(q>Q(0)){s=Q(Q(i*q)*j);u=Q(s*s);s=Q(Q(n*q)*j);j=Q(Q(k*q)*j);j=Q(u+Q(Q(s*s)+Q(j*j)));j:{if(!(j>Q(0))){break j}h=Q(Q(h*h)+Q(Q(l*l)+Q(t*t)));if(!(h<=j)){break j}j=Q(Q(Q(Y(h))/Q(Y(j)))*Q(.800000011920929));i=Q(i*j);k=Q(k*j);n=Q(n*j)}N[m+56>>2]=f+Q(n+N[m+56>>2]);v=m- -64|0;N[v>>2]=p+Q(i+N[v>>2]);N[m+60>>2]=o+Q(k+N[m+60>>2])}j=N[c+88>>2];if(j>Q(0)){h=N[e+452>>2];l=Q(Q(i*j)*h);u=Q(l*l);l=Q(Q(n*j)*h);j=Q(Q(k*j)*h);j=Q(u+Q(Q(l*l)+Q(j*j)));k:{if(!(j>Q(0))){break k}h=N[c+48>>2];l=Q(h*h);h=N[c+40>>2];u=Q(h*h);h=N[c+44>>2];h=Q(l+Q(u+Q(h*h)));if(!(h<=j)){break k}j=Q(Q(Q(Y(h))/Q(Y(j)))*Q(.800000011920929));i=Q(i*j);k=Q(k*j);n=Q(n*j)}N[c+56>>2]=f+Q(n+N[c+56>>2]);m=c- -64|0;N[m>>2]=p+Q(i+N[m>>2]);N[c+60>>2]=o+Q(k+N[c+60>>2])}j=N[g+88>>2];if(!(j>Q(0))){break g}h=N[e+452>>2];l=Q(Q(i*j)*h);u=Q(l*l);l=Q(Q(n*j)*h);j=Q(Q(k*j)*h);j=Q(u+Q(Q(l*l)+Q(j*j)));l:{if(!(j>Q(0))){break l}h=N[g+48>>2];l=Q(h*h);h=N[g+40>>2];u=Q(h*h);h=N[g+44>>2];h=Q(l+Q(u+Q(h*h)));if(!(h<=j)){break l}j=Q(Q(Q(Y(h))/Q(Y(j)))*Q(.800000011920929));i=Q(i*j);k=Q(k*j);n=Q(n*j)}N[g+56>>2]=f+Q(n+N[g+56>>2]);c=g- -64|0;N[c>>2]=p+Q(i+N[c>>2]);N[g+60>>2]=o+Q(k+N[g+60>>2]);break g;case 0:case 2:break h;default:break g}}u=f;f=Q(Q(s*f)+Q(Q(q*o)+Q(p*w)))<Q(0)?Q(-1):Q(1);s=Q(s*f);q=Q(q*f);w=Q(w*f);f=Q(Q(u*s)+Q(Q(o*q)+Q(p*w)));if(!(f>Q(0))){break g}f=Q(B*Q(x*Q(f*Q(-N[(C+P(d,44)|0)+36>>2]))));o=Q(A*f);p=Q(z*f);f=Q(Q(Q(i*o)+Q(Q(s*p)+Q(0)))*Q(.3333333432674408));i=Q(Q(Q(n*o)+Q(Q(q*p)+Q(0)))*Q(.3333333432674408));k=Q(Q(Q(k*o)+Q(Q(w*p)+Q(0)))*Q(.3333333432674408));p=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(i*i)+Q(k*k))))));n=Q(f*p);o=Q(k*p);p=Q(i*p);q=Q(j*N[m+88>>2]);s=Q(f*q);u=Q(s*s);s=Q(i*q);w=Q(s*s);s=Q(k*q);m:{if(Q(u+Q(w+Q(s*s)))>Q(Q(h*h)+Q(Q(l*l)+Q(t*t)))){q=Q(Q(1)/q);h=Q(Q(h*n)+Q(Q(l*p)+Q(o*t)));N[m+56>>2]=N[m+56>>2]-Q(q*Q(p*h));N[m+60>>2]=N[m+60>>2]-Q(q*Q(o*h));m=m- -64|0;N[m>>2]=N[m>>2]-Q(q*Q(n*h));break m}N[m+56>>2]=i+N[m+56>>2];N[m+60>>2]=k+N[m+60>>2];m=m- -64|0;N[m>>2]=f+N[m>>2]}h=Q(j*N[c+88>>2]);l=Q(f*h);u=Q(l*l);l=Q(i*h);q=Q(l*l);l=Q(k*h);u=Q(u+Q(q+Q(l*l)));l=N[c+48>>2];t=N[c+40>>2];q=N[c+44>>2];n:{if(!(u>Q(Q(l*l)+Q(Q(t*t)+Q(q*q))))){N[c+56>>2]=i+N[c+56>>2];N[c+60>>2]=k+N[c+60>>2];c=c- -64|0;N[c>>2]=f+N[c>>2];break n}h=Q(Q(1)/h);l=Q(Q(l*n)+Q(Q(t*p)+Q(o*q)));N[c+56>>2]=N[c+56>>2]-Q(h*Q(p*l));N[c+60>>2]=N[c+60>>2]-Q(h*Q(o*l));c=c- -64|0;N[c>>2]=N[c>>2]-Q(h*Q(n*l))}j=Q(j*N[g+88>>2]);h=Q(f*j);l=Q(h*h);h=Q(i*j);u=Q(h*h);h=Q(k*j);u=Q(l+Q(u+Q(h*h)));h=N[g+48>>2];l=N[g+40>>2];t=N[g+44>>2];if(!(u>Q(Q(h*h)+Q(Q(l*l)+Q(t*t))))){N[g+56>>2]=i+N[g+56>>2];N[g+60>>2]=k+N[g+60>>2];c=g- -64|0;N[c>>2]=f+N[c>>2];break g}f=Q(Q(1)/j);i=Q(Q(h*n)+Q(Q(l*p)+Q(o*t)));N[g+56>>2]=N[g+56>>2]-Q(f*Q(p*i));N[g+60>>2]=N[g+60>>2]-Q(f*Q(o*i));c=g- -64|0;N[c>>2]=N[c>>2]-Q(f*Q(n*i))}d=d+1|0;if((M|0)!=(d|0)){continue}break}}xa();m=J[e+712>>2];if((m|0)>0){d=0;while(1){c=J[e+720>>2]+P(d,104)|0;g=J[c+12>>2];J[c+24>>2]=J[c+8>>2];J[c+28>>2]=g;g=J[c+20>>2];J[c+32>>2]=J[c+16>>2];J[c+36>>2]=g;k=N[e+452>>2];f=Q(N[J[e+684>>2]+12>>2]/k);i=Q(-f);n=N[c+88>>2];o=Q(Q(N[c+56>>2]*n)*k);o=f<o?f:o;o=Q((i>o?i:o)+N[c+40>>2]);N[c+40>>2]=o;p=Q(k*Q(n*N[c+60>>2]));p=f<p?f:p;p=Q((i>p?i:p)+N[c+44>>2]);N[c+44>>2]=p;g=c- -64|0;k=Q(k*Q(n*N[g>>2]));f=f<k?f:k;i=Q((f<i?i:f)+N[c+48>>2]);N[c+48>>2]=i;f=N[e+452>>2];N[c+8>>2]=Q(o*f)+N[c+8>>2];N[c+12>>2]=Q(p*f)+N[c+12>>2];N[c+16>>2]=Q(i*f)+N[c+16>>2];J[g>>2]=0;J[g+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;d=d+1|0;if((m|0)!=(d|0)){continue}break}}lk(e);d=J[e+928>>2];o:{if(d){c=J[e+192>>2];f=Q(ia[J[J[c>>2]+48>>2]](c));i=N[d>>2];k=N[d+4>>2];n=N[d+8>>2];J[e+904>>2]=0;N[e+900>>2]=n-f;N[e+896>>2]=k-f;N[e+892>>2]=i-f;i=N[d+20>>2];k=N[d+24>>2];n=N[d+16>>2];J[e+920>>2]=0;N[e+916>>2]=f+k;N[e+912>>2]=f+i;d=e+908|0;N[d>>2]=f+n;c=J[e+188>>2];if(!c){break o}g=J[e+684>>2];m=J[g+32>>2];ia[J[J[m>>2]+16>>2]](m,c,e+892|0,d,J[g+36>>2]);break o}J[e+892>>2]=0;J[e+896>>2]=0;J[e+916>>2]=0;J[e+920>>2]=0;J[e+908>>2]=0;J[e+912>>2]=0;J[e+900>>2]=0;J[e+904>>2]=0}g=J[e+712>>2];if((g|0)>0){m=e+928|0;d=0;while(1){c=J[e+720>>2]+P(d,104)|0;i=N[c+12>>2];k=N[c+16>>2];n=N[c+8>>2];f=N[e+464>>2];J[r+140>>2]=0;N[r+128>>2]=f+n;J[r+124>>2]=0;N[r+112>>2]=n-f;N[r+136>>2]=f+k;N[r+132>>2]=f+i;N[r+120>>2]=k-f;N[r+116>>2]=i-f;v=J[c+96>>2];i=N[c+40>>2];k=N[c+44>>2];n=N[c+48>>2];f=N[e+460>>2];J[r+20>>2]=0;N[r+16>>2]=f*n;N[r+12>>2]=f*k;N[r+8>>2]=i*f;Cd(m,v,r+112|0,r+8|0,N[e+468>>2]);d=d+1|0;if((g|0)!=(d|0)){continue}break}}y=e+988|0;if(!(!J[e+988>>2]|J[e+752>>2]<=0)){m=0;while(1){v=J[e+760>>2]+P(m,44)|0;d=J[v+16>>2];x=N[d+40>>2];c=J[v+8>>2];B=N[c+40>>2];g=J[v+12>>2];z=N[g+40>>2];A=N[d+44>>2];u=N[c+44>>2];E=N[g+44>>2];F=N[d+48>>2];G=N[c+48>>2];O=N[g+48>>2];i=N[d+12>>2];k=N[c+12>>2];n=N[g+12>>2];o=N[d+16>>2];p=N[c+16>>2];j=N[g+16>>2];h=N[d+8>>2];l=N[c+8>>2];t=N[g+8>>2];f=N[e+464>>2];q=N[d+20>>2];s=N[g+20>>2];w=N[c+20>>2];D=s>w?s:w;N[r+140>>2]=q>D?q:D;D=l<t?t:l;N[r+128>>2]=f+(h>D?h:D);s=s<w?s:w;N[r+124>>2]=q<s?q:s;l=l>t?t:l;N[r+112>>2]=(h<l?h:l)-f;h=j>p?j:p;N[r+136>>2]=f+(h<o?o:h);h=k<n?n:k;N[r+132>>2]=f+(i>h?i:h);p=j<p?j:p;N[r+120>>2]=(o<p?o:p)-f;k=k>n?n:k;N[r+116>>2]=(i<k?i:k)-f;d=J[v+40>>2];f=N[e+460>>2];J[r+20>>2]=0;N[r+16>>2]=f*Q(Q(F+Q(G+O))*Q(.3333333432674408));N[r+12>>2]=f*Q(Q(A+Q(u+E))*Q(.3333333432674408));N[r+8>>2]=f*Q(Q(x+Q(B+z))*Q(.3333333432674408));Cd(y,d,r+112|0,r+8|0,N[e+468>>2]);m=m+1|0;if((m|0)<J[e+752>>2]){continue}break}}i=Q(0);c=0;f=Q(0);k=Q(0);n=Q(0);j=Q(0);d=ga-144|0;ga=d;p:{if(!K[e+473|0]){break p}g=J[e+712>>2];v=(g|0)<=0;if(!v){C=J[e+512>>2];M=J[e+720>>2];while(1){m=M+P(c,104)|0;o=N[C+(c<<2)>>2];n=Q(n+Q(N[m+8>>2]*o));i=Q(i+Q(o*N[m+16>>2]));k=Q(k+Q(o*N[m+12>>2]));c=c+1|0;if((g|0)!=(c|0)){continue}break}}J[e+532>>2]=0;N[e+528>>2]=i;N[e+524>>2]=k;N[e+520>>2]=n;J[d+132>>2]=0;J[d+136>>2]=0;J[d+116>>2]=0;J[d+120>>2]=0;J[d+140>>2]=0;J[d+124>>2]=0;J[d+128>>2]=0;J[d+108>>2]=0;J[d+112>>2]=0;J[d+136>>2]=884998144;J[d+116>>2]=880803840;J[d+100>>2]=0;J[d+104>>2]=0;J[d+96>>2]=872415232;if(!v){C=J[e+492>>2];M=J[e+720>>2];S=J[e+512>>2];o=N[d+120>>2];p=Q(1.1920928955078125e-7);h=Q(2.384185791015625e-7);l=Q(3.5762786865234375e-7);t=N[d+112>>2];q=N[d+104>>2];s=N[d+100>>2];m=0;while(1){v=M+P(m,104)|0;B=N[v+16>>2];z=N[v+12>>2];c=C+(m<<4)|0;A=N[c>>2];u=N[c+4>>2];w=N[S+(m<<2)>>2];x=Q(Q(N[v+8>>2]-n)*w);q=Q(Q(x*N[c+8>>2])+q);N[d+104>>2]=q;s=Q(Q(x*u)+s);N[d+100>>2]=s;p=Q(Q(x*A)+p);N[d+96>>2]=p;A=N[c>>2];u=N[c+4>>2];x=Q(w*Q(z-k));o=Q(Q(x*N[c+8>>2])+o);N[d+120>>2]=o;h=Q(Q(x*u)+h);N[d+116>>2]=h;t=Q(Q(x*A)+t);N[d+112>>2]=t;x=N[c>>2];z=N[c+4>>2];w=Q(w*Q(B-i));l=Q(Q(w*N[c+8>>2])+l);N[d+136>>2]=l;f=Q(Q(w*z)+f);N[d+132>>2]=f;j=Q(Q(w*x)+j);N[d+128>>2]=j;m=m+1|0;if((g|0)!=(m|0)){continue}break}}if(!K[33308]){f=N[5805];J[8326]=J[5806];N[8325]=f;H[33308]=1}Qj(d+96|0,d+48|0,d);c=J[d+60>>2];J[e+544>>2]=J[d+56>>2];J[e+548>>2]=c;c=J[d+52>>2];J[e+536>>2]=J[d+48>>2];J[e+540>>2]=c;c=J[d+76>>2];J[e+560>>2]=J[d+72>>2];J[e+564>>2]=c;c=J[d+68>>2];J[e+552>>2]=J[d+64>>2];J[e+556>>2]=c;c=J[d+84>>2];J[e+568>>2]=J[d+80>>2];J[e+572>>2]=c;c=J[d+92>>2];J[e+576>>2]=J[d+88>>2];J[e+580>>2]=c;f=N[e+640>>2];i=N[e+632>>2];k=N[e+636>>2];n=N[e+656>>2];o=N[e+648>>2];p=N[e+652>>2];j=N[e+672>>2];h=N[e+664>>2];l=N[e+668>>2];t=N[d+88>>2];q=N[d+84>>2];s=N[d+56>>2];w=N[d+120>>2];x=N[d+72>>2];B=N[d+68>>2];z=N[d+128>>2];A=N[d+96>>2];u=N[d+112>>2];E=N[d+132>>2];F=N[d+100>>2];G=N[d+116>>2];O=N[d+136>>2];D=N[d+80>>2];U=N[d+104>>2];V=N[d+48>>2];W=N[d+52>>2];X=N[d+64>>2];J[e+628>>2]=0;J[e+612>>2]=0;J[e+596>>2]=0;I=Q(Q(t*j)+Q(Q(D*h)+Q(q*l)));L=Q(Q(s*j)+Q(Q(V*h)+Q(W*l)));l=Q(Q(x*j)+Q(Q(X*h)+Q(B*l)));j=Q(Q(O*I)+Q(Q(U*L)+Q(w*l)));N[e+624>>2]=j;h=Q(Q(E*I)+Q(Q(F*L)+Q(l*G)));N[e+620>>2]=h;l=Q(Q(z*I)+Q(Q(A*L)+Q(u*l)));N[e+616>>2]=l;I=Q(Q(t*n)+Q(Q(D*o)+Q(q*p)));L=Q(Q(s*n)+Q(Q(V*o)+Q(W*p)));p=Q(Q(x*n)+Q(Q(X*o)+Q(B*p)));n=Q(Q(O*I)+Q(Q(U*L)+Q(w*p)));N[e+608>>2]=n;o=Q(Q(E*I)+Q(Q(F*L)+Q(p*G)));N[e+604>>2]=o;p=Q(Q(z*I)+Q(Q(A*L)+Q(p*u)));N[e+600>>2]=p;t=Q(Q(t*f)+Q(Q(D*i)+Q(q*k)));q=Q(Q(s*f)+Q(Q(V*i)+Q(W*k)));f=Q(Q(x*f)+Q(Q(X*i)+Q(B*k)));i=Q(Q(O*t)+Q(Q(U*q)+Q(w*f)));N[e+592>>2]=i;k=Q(Q(E*t)+Q(Q(F*q)+Q(f*G)));N[e+588>>2]=k;t=Q(Q(z*t)+Q(Q(A*q)+Q(f*u)));N[e+584>>2]=t;f=N[e+364>>2];if(!(f>Q(1))){break p}u=j;j=Q(Q(1)/Q(Q(i*Q(Q(p*h)-Q(l*o)))+Q(Q(t*Q(Q(o*j)-Q(h*n)))+Q(k*Q(Q(n*l)-Q(j*p))))));f=j<Q(1)?Q(1):f<j?f:j;N[e+624>>2]=u*f;N[e+620>>2]=h*f;N[e+616>>2]=l*f;N[e+608>>2]=n*f;N[e+604>>2]=o*f;N[e+600>>2]=p*f;N[e+592>>2]=i*f;N[e+588>>2]=k*f;N[e+584>>2]=t*f}ga=d+144|0;q:{if(!K[e+473|0]|!(N[e+320>>2]>Q(0))){break q}m=J[e+712>>2];if((m|0)<=0){break q}o=N[e+576>>2];p=N[e+572>>2];j=N[e+568>>2];h=N[e+560>>2];l=N[e+556>>2];t=N[e+552>>2];q=N[e+544>>2];s=N[e+540>>2];w=N[e+536>>2];d=0;while(1){c=J[e+720>>2]+P(d,104)|0;if(N[c+88>>2]>Q(0)){g=J[e+492>>2]+(d<<4)|0;f=N[g+8>>2];i=N[g>>2];k=N[g+4>>2];x=N[e+520>>2];B=N[e+524>>2];n=N[e+320>>2];z=N[e+528>>2];J[c+20>>2]=0;A=N[c+16>>2];N[c+16>>2]=A+Q(n*Q(Q(z+Q(Q(o*f)+Q(Q(j*i)+Q(p*k))))-A));z=N[c+12>>2];N[c+12>>2]=z+Q(n*Q(Q(B+Q(Q(h*f)+Q(Q(t*i)+Q(l*k))))-z));B=N[c+8>>2];N[c+8>>2]=B+Q(n*Q(Q(x+Q(Q(q*f)+Q(Q(w*i)+Q(s*k))))-B))}d=d+1|0;if((m|0)!=(d|0)){continue}break}}qa(r+8|0,0,104);d=J[e+812>>2];if((d|0)<0){if(J[e+816>>2]<0){c=J[e+820>>2];if(!(c?!c|!K[e+824|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[e+824|0]=1;J[e+816>>2]=0;J[e+820>>2]=0}while(1){c=J[e+820>>2]+P(d,104)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+24>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;g=J[r+48>>2];J[c+36>>2]=J[r+44>>2];J[c+40>>2]=g;g=J[r+40>>2];J[c+28>>2]=J[r+36>>2];J[c+32>>2]=g;g=J[r+64>>2];J[c+52>>2]=J[r+60>>2];J[c+56>>2]=g;g=J[r+56>>2];J[c+44>>2]=J[r+52>>2];J[c+48>>2]=g;g=J[r+80>>2];J[c+68>>2]=J[r+76>>2];J[c+72>>2]=g;g=J[r+72>>2];J[c+60>>2]=J[r+68>>2];J[c+64>>2]=g;g=J[r+88>>2];J[c+76>>2]=J[r+84>>2];J[c+80>>2]=g;g=J[r+96>>2];J[c+84>>2]=J[r+92>>2];J[c+88>>2]=g;g=J[r+104>>2];J[c+92>>2]=J[r+100>>2];J[c+96>>2]=g;J[c+100>>2]=J[r+108>>2];c=d;d=c+1|0;if(d>>>0>=c>>>0){continue}break}}J[e+812>>2]=0;c=J[e+832>>2];r:{if((c|0)>=0){break r}if(J[e+836>>2]<0){d=J[e+840>>2];if(!(d?!d|!K[e+844|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}H[e+844|0]=1;J[e+836>>2]=0;J[e+840>>2]=0}m=0;d=c;v=0-c&3;if(v){while(1){g=J[e+840>>2]+P(d,56)|0;J[g>>2]=0;J[g+4>>2]=0;J[g+48>>2]=0;J[g+52>>2]=0;J[g+40>>2]=0;J[g+44>>2]=0;J[g+32>>2]=0;J[g+36>>2]=0;J[g+24>>2]=0;J[g+28>>2]=0;J[g+16>>2]=0;J[g+20>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;d=d+1|0;m=m+1|0;if((v|0)!=(m|0)){continue}break}}if(c>>>0>4294967292){break r}while(1){g=P(d,56);c=g+J[e+840>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=g+J[e+840>>2]|0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+96>>2]=0;J[c+100>>2]=0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;m=c- -64|0;J[m>>2]=0;J[m+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;c=g+J[e+840>>2]|0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;J[c+120>>2]=0;J[c+124>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;c=g+J[e+840>>2]|0;J[c+216>>2]=0;J[c+220>>2]=0;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=0;J[c+204>>2]=0;J[c+192>>2]=0;J[c+196>>2]=0;J[c+184>>2]=0;J[c+188>>2]=0;J[c+176>>2]=0;J[c+180>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;d=d+4|0;if(d){continue}break}}J[e+832>>2]=0;Hc(e+928|0,1);Hc(y,1);Hc(e+1048|0,1);ga=r+144|0;d=J[a+24>>2]}T=T+1|0;if((T|0)<(d|0)){continue}break}}}\nfunction OA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=Q(0),p=0,q=Q(0),r=0,s=0,t=Q(0),u=Q(0),v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=0,I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=0,ca=0,da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=0,na=Q(0),oa=Q(0),pa=Q(0),ra=Q(0);p=ga-256|0;ga=p;J[a+188>>2]=-1;ya(2822);J[a+184>>2]=0;a:{if((c|0)<=0){break a}if(c-1>>>0>=3){i=c&-4;while(1){l=k<<2;J[J[l+b>>2]+212>>2]=-1;J[J[(l|4)+b>>2]+212>>2]=-1;J[J[(l|8)+b>>2]+212>>2]=-1;J[J[(l|12)+b>>2]+212>>2]=-1;k=k+4|0;n=n+4|0;if((i|0)!=(n|0)){continue}break}}l=c&3;if(!l){break a}i=0;while(1){J[J[(k<<2)+b>>2]+212>>2]=-1;k=k+1|0;i=i+1|0;if((l|0)!=(i|0)){continue}break}}r=J[a+12>>2];if((r|0)<=(c|0)){r=c+1|0;if(r){J[8369]=J[8369]+1;i=ia[J[6782]](P(r,244),16)|0}else{i=0}j=J[a+8>>2];if((j|0)>0){n=0;while(1){l=P(n,244);m=l+i|0;s=l+J[a+16>>2]|0;l=J[s+4>>2];J[m>>2]=J[s>>2];J[m+4>>2]=l;l=J[s+12>>2];J[m+8>>2]=J[s+8>>2];J[m+12>>2]=l;l=J[s+28>>2];J[m+24>>2]=J[s+24>>2];J[m+28>>2]=l;l=J[s+20>>2];J[m+16>>2]=J[s+16>>2];J[m+20>>2]=l;l=J[s+44>>2];J[m+40>>2]=J[s+40>>2];J[m+44>>2]=l;l=J[s+36>>2];J[m+32>>2]=J[s+32>>2];J[m+36>>2]=l;l=J[s+52>>2];J[m+48>>2]=J[s+48>>2];J[m+52>>2]=l;l=J[s+60>>2];J[m+56>>2]=J[s+56>>2];J[m+60>>2]=l;sa(m- -64|0,s- -64|0,180);n=n+1|0;if((j|0)!=(n|0)){continue}break}}l=J[a+16>>2];if(!(l?!l|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](l)}J[a+16>>2]=i;H[a+20|0]=1;J[a+12>>2]=r}qa(p+8|0,0,244);i=J[a+8>>2];if((i|0)<0){if((r|0)<0){l=J[a+16>>2];if(!(l?!l|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](l)}H[a+20|0]=1;J[a+12>>2]=0;J[a+16>>2]=0}m=p+72|0;while(1){j=J[a+16>>2]+P(i,244)|0;J[j>>2]=0;J[j+4>>2]=0;J[j+8>>2]=0;J[j+12>>2]=0;l=J[p+36>>2];J[j+24>>2]=J[p+32>>2];J[j+28>>2]=l;l=J[p+28>>2];J[j+16>>2]=J[p+24>>2];J[j+20>>2]=l;l=J[p+44>>2];J[j+32>>2]=J[p+40>>2];J[j+36>>2]=l;l=J[p+52>>2];J[j+40>>2]=J[p+48>>2];J[j+44>>2]=l;l=J[p+60>>2];J[j+48>>2]=J[p+56>>2];J[j+52>>2]=l;l=J[p+68>>2];J[j+56>>2]=J[p+64>>2];J[j+60>>2]=l;sa(j- -64|0,m,180);l=i;i=l+1|0;if(l>>>0<=i>>>0){continue}break}}J[a+8>>2]=0;if((c|0)>0){i=0;while(1){l=(i<<2)+b|0;m=yb(a,J[l>>2],N[h+12>>2]);j=J[l>>2];if(!(!(K[j+236|0]&2)|!j|(!(K[j+504|0]&2)|N[j+344>>2]==Q(0)))){l=J[a+16>>2];z=N[h+76>>2];I=N[j+336>>2];W=N[j+44>>2];X=N[j+40>>2];Z=N[j+36>>2];L=N[j+332>>2];_=N[j+28>>2];$=N[j+12>>2];q=N[j+404>>2];aa=N[j+24>>2];D=N[j+8>>2];u=N[j+400>>2];E=N[j+20>>2];M=N[j+328>>2];x=N[j+4>>2];o=N[j+396>>2];J[p+20>>2]=0;A=Q(Q(1)/q);t=Q(_*A);B=Q(Q(1)/o);q=Q(E*B);C=Q(Q(1)/u);o=Q(aa*C);u=Q(Q(I*Q(Q(W*t)+Q(Q(Z*q)+Q(X*o))))+Q(Q(M*Q(Q($*t)+Q(Q(x*q)+Q(D*o))))+Q(L*Q(Q(_*t)+Q(Q(E*q)+Q(aa*o))))));t=Q(A*$);q=Q(B*x);o=Q(C*D);o=Q(Q(I*Q(Q(W*t)+Q(Q(Z*q)+Q(X*o))))+Q(Q(M*Q(Q($*t)+Q(Q(x*q)+Q(D*o))))+Q(L*Q(Q(_*t)+Q(Q(E*q)+Q(o*aa))))));y=Q(Q(M*u)-Q(L*o));N[p+16>>2]=y;F=Q(I*o);t=Q(A*W);q=Q(B*Z);o=Q(C*X);o=Q(Q(I*Q(Q(W*t)+Q(Q(Z*q)+Q(X*o))))+Q(Q(M*Q(Q($*t)+Q(Q(x*q)+Q(D*o))))+Q(L*Q(Q(_*t)+Q(Q(E*q)+Q(aa*o))))));q=Q(F-Q(M*o));N[p+12>>2]=q;u=Q(Q(L*o)-Q(u*I));N[p+8>>2]=u;o=Q(Q(y*y)+Q(Q(u*u)+Q(q*q)));if(o>Q(z*z)){o=Q(Q(Q(1)/Q(Y(o)))*z);N[p+16>>2]=y*o;N[p+12>>2]=q*o;N[p+8>>2]=u*o}B=N[j+304>>2];C=N[j+272>>2];t=N[j+288>>2];q=N[j+300>>2];u=N[j+268>>2];o=N[j+284>>2];l=l+P(m,244)|0;x=N[p+16>>2];z=N[p+8>>2];y=N[p+12>>2];A=N[h+12>>2];N[l+224>>2]=N[l+224>>2]-Q(Q(Q(N[j+296>>2]*x)+Q(Q(N[j+264>>2]*z)+Q(y*N[j+280>>2])))*A);N[l+228>>2]=N[l+228>>2]-Q(A*Q(Q(q*x)+Q(Q(u*z)+Q(y*o))));N[l+232>>2]=N[l+232>>2]-Q(A*Q(Q(B*x)+Q(Q(C*z)+Q(y*t))))}i=i+1|0;if((i|0)!=(c|0)){continue}break}}b:{if((g|0)<=0){break b}k=0;if((g|0)!=1){i=g&-2;b=0;while(1){c=k<<2;l=J[c+f>>2];ia[J[J[l>>2]+8>>2]](l);J[l+36>>2]=0;c=J[(c|4)+f>>2];ia[J[J[c>>2]+8>>2]](c);J[c+36>>2]=0;k=k+2|0;b=b+2|0;if((i|0)!=(b|0)){continue}break}}if(!(g&1)){break b}b=J[(k<<2)+f>>2];ia[J[J[b>>2]+8>>2]](b);J[b+36>>2]=0}b=J[a+168>>2];if(!((g|0)<=(b|0)|J[a+172>>2]>=(g|0))){c:{if(!g){i=0;break c}J[8369]=J[8369]+1;i=ia[J[6782]](g<<3,16)|0;b=J[a+168>>2]}d:{if((b|0)<=0){break d}n=0;k=0;if(b-1>>>0>=3){s=b&-4;c=0;while(1){G=k<<3;j=G+i|0;m=G+J[a+176>>2]|0;l=J[m+4>>2];J[j>>2]=J[m>>2];J[j+4>>2]=l;l=G|8;j=l+i|0;m=l+J[a+176>>2]|0;l=J[m+4>>2];J[j>>2]=J[m>>2];J[j+4>>2]=l;l=G|16;j=l+i|0;m=l+J[a+176>>2]|0;l=J[m+4>>2];J[j>>2]=J[m>>2];J[j+4>>2]=l;l=G|24;j=l+i|0;m=l+J[a+176>>2]|0;l=J[m+4>>2];J[j>>2]=J[m>>2];J[j+4>>2]=l;k=k+4|0;c=c+4|0;if((s|0)!=(c|0)){continue}break}}m=b&3;if(!m){break d}while(1){b=k<<3;l=b+i|0;c=b+J[a+176>>2]|0;b=J[c+4>>2];J[l>>2]=J[c>>2];J[l+4>>2]=b;k=k+1|0;n=n+1|0;if((m|0)!=(n|0)){continue}break}}b=J[a+176>>2];if(!(b?!b|!K[a+180|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+176>>2]=i;H[a+180|0]=1;J[a+172>>2]=g}J[a+168>>2]=g;n=0;if((g|0)>0){i=0;while(1){m=J[a+176>>2];l=(i<<2)+f|0;b=J[l>>2];c=J[b+44>>2];if(c){J[c>>2]=0;J[c+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;b=J[l>>2]}c=m+(i<<3)|0;e:{if(K[b+20|0]){ia[J[J[b>>2]+16>>2]](b,c);b=J[c>>2];break e}J[c>>2]=0;J[c+4>>2]=0;b=0}n=b+n|0;i=i+1|0;if((i|0)!=(g|0)){continue}break}}b=J[a+48>>2];if(!((n|0)<=(b|0)|J[a+52>>2]>=(n|0))){f:{if(!n){i=0;break f}J[8369]=J[8369]+1;i=ia[J[6782]](P(n,152),16)|0;b=J[a+48>>2]}g:{if((b|0)<=0){break g}m=b&1;k=0;if((b|0)!=1){l=b&-2;b=0;while(1){c=P(k,152);sa(c+i|0,c+J[a+56>>2]|0,152);c=P(k|1,152);sa(c+i|0,c+J[a+56>>2]|0,152);k=k+2|0;b=b+2|0;if((l|0)!=(b|0)){continue}break}}if(!m){break g}b=P(k,152);sa(b+i|0,b+J[a+56>>2]|0,152)}b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=i;H[a+60|0]=1;J[a+52>>2]=n}J[a+48>>2]=n;if((g|0)>0){i=J[a+176>>2];while(1){l=ca<<3;k=l+i|0;if(J[k>>2]){G=(ca<<2)+f|0;ba=J[G>>2];v=J[ba+32>>2];i=J[a+56>>2];w=J[ba+28>>2];s=yb(a,w,N[h+12>>2]);j=yb(a,v,N[h+12>>2]);c=J[ba+24>>2];b=J[h+20>>2];m=(c|0)>0?c:b;if((m|0)>J[a+184>>2]){J[a+184>>2]=m}i=i+P(ma,152)|0;c=J[a+16>>2];n=0;if(J[k>>2]>0){while(1){b=qa(i+P(n,152)|0,0,152);J[b+120>>2]=-8388609;J[b+124>>2]=2139095039;J[b+148>>2]=j;J[b+144>>2]=s;J[b+96>>2]=0;J[b+100>>2]=0;J[b+136>>2]=m;n=n+1|0;if((n|0)<J[k>>2]){continue}break}b=J[h+20>>2]}m=P(s,244)+c|0;J[m+64>>2]=0;J[m+68>>2]=0;J[m+144>>2]=0;J[m+148>>2]=0;J[m+88>>2]=0;J[m+92>>2]=0;J[m+80>>2]=0;J[m+84>>2]=0;J[m+72>>2]=0;J[m+76>>2]=0;J[m+152>>2]=0;J[m+156>>2]=0;J[m+160>>2]=0;J[m+164>>2]=0;J[m+168>>2]=0;J[m+172>>2]=0;c=P(j,244)+c|0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;J[c+64>>2]=0;J[c+68>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;N[p+8>>2]=Q(1)/N[h+12>>2];o=N[h+32>>2];J[p+36>>2]=i+112;J[p+32>>2]=38;J[p+28>>2]=i+32;J[p+24>>2]=i+48;J[p+20>>2]=i;J[p+16>>2]=i+16;N[p+12>>2]=o;N[i+116>>2]=N[h+40>>2];o=N[h+4>>2];J[p+56>>2]=b;J[p+48>>2]=i+124;J[p+44>>2]=i+120;J[p+40>>2]=i+116;N[p+60>>2]=o;b=J[G>>2];ia[J[J[b>>2]+20>>2]](b,p+8|0);if(J[k>>2]>0){r=0;while(1){o=N[J[G>>2]+16>>2];j=i+P(r,152)|0;if(o<=N[j+124>>2]){N[j+124>>2]=o}o=Q(-o);if(o>=N[j+120>>2]){N[j+120>>2]=o}J[j+132>>2]=ba;b=J[ba+28>>2];D=N[b+268>>2];E=N[b+272>>2];x=N[b+548>>2];z=N[b+288>>2];y=N[b+280>>2];A=N[b+284>>2];B=N[b+552>>2];C=N[b+304>>2];t=N[b+296>>2];q=N[b+300>>2];u=N[b+544>>2];o=N[b+264>>2];J[j+76>>2]=0;F=N[j+8>>2];O=N[j>>2];S=N[j+4>>2];N[j+72>>2]=B*Q(Q(C*F)+Q(Q(t*O)+Q(q*S)));N[j+68>>2]=x*Q(Q(z*F)+Q(Q(y*O)+Q(S*A)));N[j+64>>2]=u*Q(Q(E*F)+Q(Q(o*O)+Q(D*S)));b=J[ba+32>>2];D=N[b+268>>2];E=N[b+272>>2];x=N[b+548>>2];z=N[b+288>>2];y=N[b+280>>2];A=N[b+284>>2];B=N[b+552>>2];C=N[b+304>>2];t=N[b+296>>2];q=N[b+300>>2];u=N[b+544>>2];o=N[b+264>>2];J[j+92>>2]=0;T=N[j+40>>2];U=N[j+32>>2];V=N[j+36>>2];N[j+88>>2]=B*Q(Q(C*T)+Q(Q(t*U)+Q(q*V)));N[j+84>>2]=x*Q(Q(z*T)+Q(Q(y*U)+Q(V*A)));N[j+80>>2]=u*Q(Q(E*T)+Q(Q(o*U)+Q(D*V)));na=Q(0);o=N[w+344>>2];da=N[j+24>>2];ea=N[j+16>>2];fa=N[j+20>>2];q=Q(Q(Q(Q(o*da)*da)+Q(Q(Q(o*ea)*ea)+Q(fa*Q(o*fa))))+Q(Q(F*Q(Q(F*N[w+304>>2])+Q(Q(O*N[w+296>>2])+Q(S*N[w+300>>2]))))+Q(Q(O*Q(Q(F*N[w+272>>2])+Q(Q(O*N[w+264>>2])+Q(S*N[w+268>>2]))))+Q(S*Q(Q(F*N[w+288>>2])+Q(Q(O*N[w+280>>2])+Q(S*N[w+284>>2])))))));o=N[v+344>>2];ha=N[j+56>>2];ja=N[j+48>>2];ka=N[j+52>>2];o=Q(Q(q+Q(Q(Q(o*ha)*ha)+Q(Q(Q(o*ja)*ja)+Q(ka*Q(o*ka)))))+Q(Q(T*Q(Q(T*N[v+304>>2])+Q(Q(U*N[v+296>>2])+Q(V*N[v+300>>2]))))+Q(Q(U*Q(Q(T*N[v+272>>2])+Q(Q(U*N[v+264>>2])+Q(V*N[v+268>>2]))))+Q(V*Q(Q(T*N[v+288>>2])+Q(Q(U*N[v+280>>2])+Q(V*N[v+284>>2])))))));la=Q(R(o))>Q(1.1920928955078125e-7)?Q(Q(1)/o):Q(0);N[j+108>>2]=la;oa=Q(0);pa=Q(0);ra=Q(0);I=Q(0);L=Q(0);M=Q(0);if(J[m+240>>2]){L=N[m+228>>2];I=N[m+224>>2];pa=N[m+212>>2];ra=N[m+208>>2];oa=N[m+216>>2];M=N[m+232>>2]}W=Q(0);X=Q(0);Z=Q(0);_=Q(0);$=Q(0);if(J[c+240>>2]){_=N[c+228>>2];Z=N[c+224>>2];W=N[c+212>>2];X=N[c+208>>2];na=N[c+216>>2];$=N[c+232>>2]}aa=N[w+320>>2];D=N[w+312>>2];E=N[w+316>>2];x=N[w+336>>2];z=N[w+328>>2];y=N[w+332>>2];A=N[v+320>>2];B=N[v+312>>2];C=N[v+316>>2];t=N[v+336>>2];q=N[v+328>>2];u=N[v+332>>2];o=N[p+60>>2];J[j+100>>2]=0;N[j+112>>2]=Q(la*N[j+112>>2])+Q(la*Q(Q(0)-Q(o*Q(Q(Q(Q(da*Q(oa+aa))+Q(Q(ea*Q(ra+D))+Q(fa*Q(pa+E))))+Q(Q(F*Q(M+x))+Q(Q(O*Q(I+z))+Q(S*Q(L+y)))))+Q(Q(Q(ha*Q(na+A))+Q(Q(ja*Q(X+B))+Q(ka*Q(W+C))))+Q(Q(T*Q($+t))+Q(Q(U*Q(Z+q))+Q(V*Q(_+u)))))))));r=r+1|0;if((r|0)<J[k>>2]){continue}break}}i=J[a+176>>2];b=J[l+i>>2]}else{b=0}ma=b+ma|0;ca=ca+1|0;if((ca|0)!=(g|0)){continue}break}}ia[J[J[a>>2]+28>>2]](a,d,e,h);m=J[a+68>>2];j=J[a+28>>2];n=J[a+128>>2];l=J[a+48>>2];if(!((n|0)>=(l|0)|(l|0)<=J[a+132>>2])){h:{if(!l){i=0;break h}J[8369]=J[8369]+1;i=ia[J[6782]](l<<2,16)|0;n=J[a+128>>2]}f=J[a+136>>2];i:{j:{if((n|0)>0){c=0;k=0;if(n-1>>>0>=3){d=n&-4;r=0;while(1){e=k<<2;J[e+i>>2]=J[e+f>>2];b=e|4;J[b+i>>2]=J[b+f>>2];b=e|8;J[b+i>>2]=J[b+f>>2];b=e|12;J[b+i>>2]=J[b+f>>2];k=k+4|0;r=r+4|0;if((d|0)!=(r|0)){continue}break}}d=n&3;if(d){while(1){b=k<<2;J[b+i>>2]=J[b+f>>2];k=k+1|0;c=c+1|0;if((d|0)!=(c|0)){continue}break}}if(K[a+140|0]){break j}break i}if(!f|!K[a+140|0]){break i}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}}J[a+136>>2]=i;J[a+132>>2]=l;H[a+140|0]=1}J[a+128>>2]=l;k:{if(K[h+64|0]&16){n=J[a+108>>2];e=j<<1;if(!((n|0)>=(e|0)|(e|0)<=J[a+112>>2])){l:{if(!j){i=0;break l}J[8369]=J[8369]+1;i=ia[J[6782]](j<<3,16)|0;n=J[a+108>>2]}g=J[a+116>>2];m:{n:{if((n|0)>0){c=0;k=0;if(n-1>>>0>=3){d=n&-4;r=0;while(1){f=k<<2;J[f+i>>2]=J[f+g>>2];b=f|4;J[b+i>>2]=J[b+g>>2];b=f|8;J[b+i>>2]=J[b+g>>2];b=f|12;J[b+i>>2]=J[b+g>>2];k=k+4|0;r=r+4|0;if((d|0)!=(r|0)){continue}break}}d=n&3;if(d){while(1){b=k<<2;J[b+i>>2]=J[b+g>>2];k=k+1|0;c=c+1|0;if((d|0)!=(c|0)){continue}break}}if(K[a+120|0]){break n}break m}if(!g|!K[a+120|0]){break m}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}J[a+116>>2]=i;J[a+112>>2]=e;H[a+120|0]=1}J[a+108>>2]=e;break k}n=J[a+108>>2];if(!((j|0)<=(n|0)|(j|0)<=J[a+112>>2])){o:{if(!j){i=0;break o}J[8369]=J[8369]+1;i=ia[J[6782]](j<<2,16)|0;n=J[a+108>>2]}f=J[a+116>>2];p:{q:{if((n|0)>0){c=0;k=0;if(n-1>>>0>=3){d=n&-4;r=0;while(1){e=k<<2;J[e+i>>2]=J[e+f>>2];b=e|4;J[b+i>>2]=J[b+f>>2];b=e|8;J[b+i>>2]=J[b+f>>2];b=e|12;J[b+i>>2]=J[b+f>>2];k=k+4|0;r=r+4|0;if((d|0)!=(r|0)){continue}break}}d=n&3;if(d){while(1){b=k<<2;J[b+i>>2]=J[b+f>>2];k=k+1|0;c=c+1|0;if((d|0)!=(c|0)){continue}break}}if(K[a+120|0]){break q}break p}if(!f|!K[a+120|0]){break p}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}}J[a+116>>2]=i;J[a+112>>2]=j;H[a+120|0]=1}J[a+108>>2]=j}n=J[a+148>>2];if(!((m|0)<=(n|0)|(m|0)<=J[a+152>>2])){r:{if(!m){i=0;break r}J[8369]=J[8369]+1;i=ia[J[6782]](m<<2,16)|0;n=J[a+148>>2]}f=J[a+156>>2];s:{t:{if((n|0)>0){c=0;k=0;if(n-1>>>0>=3){d=n&-4;r=0;while(1){e=k<<2;J[e+i>>2]=J[e+f>>2];b=e|4;J[b+i>>2]=J[b+f>>2];b=e|8;J[b+i>>2]=J[b+f>>2];b=e|12;J[b+i>>2]=J[b+f>>2];k=k+4|0;r=r+4|0;if((d|0)!=(r|0)){continue}break}}d=n&3;if(d){while(1){b=k<<2;J[b+i>>2]=J[b+f>>2];k=k+1|0;c=c+1|0;if((d|0)!=(c|0)){continue}break}}if(K[a+160|0]){break t}break s}if(!f|!K[a+160|0]){break s}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}}J[a+156>>2]=i;J[a+152>>2]=m;H[a+160|0]=1}J[a+148>>2]=m;u:{if((l|0)<=0){break u}e=J[a+136>>2];b=0;k=0;if(l-1>>>0>=7){d=l&-8;n=0;while(1){J[e+(k<<2)>>2]=k;c=k|1;J[e+(c<<2)>>2]=c;c=k|2;J[e+(c<<2)>>2]=c;c=k|3;J[e+(c<<2)>>2]=c;c=k|4;J[e+(c<<2)>>2]=c;c=k|5;J[e+(c<<2)>>2]=c;c=k|6;J[e+(c<<2)>>2]=c;c=k|7;J[e+(c<<2)>>2]=c;k=k+8|0;n=n+8|0;if((d|0)!=(n|0)){continue}break}}c=l&7;if(!c){break u}while(1){J[e+(k<<2)>>2]=k;k=k+1|0;b=b+1|0;if((c|0)!=(b|0)){continue}break}}v:{if((j|0)<=0){break v}e=J[a+116>>2];b=0;k=0;if(j-1>>>0>=7){d=j&-8;n=0;while(1){J[e+(k<<2)>>2]=k;c=k|1;J[e+(c<<2)>>2]=c;c=k|2;J[e+(c<<2)>>2]=c;c=k|3;J[e+(c<<2)>>2]=c;c=k|4;J[e+(c<<2)>>2]=c;c=k|5;J[e+(c<<2)>>2]=c;c=k|6;J[e+(c<<2)>>2]=c;c=k|7;J[e+(c<<2)>>2]=c;k=k+8|0;n=n+8|0;if((d|0)!=(n|0)){continue}break}}c=j&7;if(!c){break v}while(1){J[e+(k<<2)>>2]=k;k=k+1|0;b=b+1|0;if((c|0)!=(b|0)){continue}break}}w:{if((m|0)<=0){break w}d=J[a+156>>2];b=0;k=0;if(m-1>>>0>=7){c=m&-8;n=0;while(1){J[d+(k<<2)>>2]=k;a=k|1;J[d+(a<<2)>>2]=a;a=k|2;J[d+(a<<2)>>2]=a;a=k|3;J[d+(a<<2)>>2]=a;a=k|4;J[d+(a<<2)>>2]=a;a=k|5;J[d+(a<<2)>>2]=a;a=k|6;J[d+(a<<2)>>2]=a;a=k|7;J[d+(a<<2)>>2]=a;k=k+8|0;n=n+8|0;if((c|0)!=(n|0)){continue}break}}a=m&7;if(!a){break w}while(1){J[d+(k<<2)>>2]=k;k=k+1|0;b=b+1|0;if((a|0)!=(b|0)){continue}break}}xa();ga=p+256|0;return Q(Q(0))}function eg(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=0,o=0,p=0,q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=0,C=0,D=0,E=0;h=ga-144|0;ga=h;a:{if((c|0)<=0){b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=0;H[a+16|0]=1;J[a+4>>2]=0;J[a+8>>2]=0;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;b=J[a+52>>2];if(!(b?!b|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+52>>2]=0;H[a+56|0]=1;J[a+44>>2]=0;J[a+48>>2]=0;break a}H[h+112|0]=1;J[h+88>>2]=0;J[h+92>>2]=256;J[h+72>>2]=0;J[h+76>>2]=256;J[h+56>>2]=0;J[h+60>>2]=256;J[h+108>>2]=0;J[h+100>>2]=0;J[h+104>>2]=0;J[h+80>>2]=0;J[h+84>>2]=0;J[h+64>>2]=0;J[h+68>>2]=0;J[h+48>>2]=0;J[h+52>>2]=0;f=h+16|0;g=ga-48|0;ga=g;z=Q(-1.0000000150474662e30);A=Q(1.0000000150474662e30);k=c;b:{if((c|0)>0){c=b;m=Q(1.0000000150474662e30);s=Q(1.0000000150474662e30);t=Q(-1.0000000150474662e30);x=Q(-1.0000000150474662e30);while(1){u=N[c+8>>2];z=u>z?u:z;v=N[c+4>>2];t=t<v?v:t;w=N[c>>2];x=x<w?w:x;A=u<A?u:A;m=m>v?v:m;s=s>w?w:s;c=c+16|0;e=e+1|0;if((k|0)!=(e|0)){continue}break}break b}x=Q(-1.0000000150474662e30);t=Q(-1.0000000150474662e30);s=Q(1.0000000150474662e30);m=Q(1.0000000150474662e30)}u=Q(x-s);v=Q(t-m);d=u<v;w=Q(z-A);c=w>(d?v:u)?2:d;J[f+112>>2]=c;e=w>(d?u:v)?!d:2;if((c|0)==(e|0)){e=(c+1>>>0)%3|0}J[f+104>>2]=e;J[f+12>>2]=0;J[f+28>>2]=0;d=c+e|0;J[f+108>>2]=3-d;N[f+24>>2]=Q(z+A)*Q(.5);N[f+20>>2]=Q(t+m)*Q(.5);N[f+16>>2]=Q(x+s)*Q(.5);m=Q(w*Q(9788566967472434e-20));c=(c|0)==(((4-d&255)>>>0)%3|0);m=c?m:Q(-m);N[f+8>>2]=m;s=Q(v*Q(9788566967472434e-20));s=c?s:Q(-s);N[f+4>>2]=s;t=Q(u*Q(9788566967472434e-20));t=c?t:Q(-t);N[f>>2]=t;J[g+32>>2]=0;J[g+36>>2]=0;H[g+40|0]=1;c:{d:{if((k|0)>0){J[8369]=J[8369]+1;J[g+36>>2]=ia[J[6782]](k<<4,16);H[g+40|0]=1;J[g+32>>2]=k;J[g+28>>2]=k;if((k|0)<=0){break c}x=m!=Q(0)?Q(Q(1)/m):m;s=s!=Q(0)?Q(Q(1)/s):s;t=t!=Q(0)?Q(Q(1)/t):t;c=g+8|0;l=c+(J[f+104>>2]<<2)|0;r=c+(J[f+112>>2]<<2)|0;j=c+(J[f+108>>2]<<2)|0;z=N[f+24>>2];A=N[f+20>>2];u=N[f+16>>2];i=J[g+36>>2];e=0;while(1){m=N[b>>2];v=N[b+4>>2];w=N[b+8>>2];J[g+20>>2]=0;N[g+16>>2]=x*Q(w-z);N[g+12>>2]=s*Q(v-A);N[g+8>>2]=t*Q(m-u);c=i+(e<<4)|0;m=N[j>>2];e:{if(Q(R(m))<Q(2147483648)){d=~~m;break e}d=-2147483648}J[c>>2]=d;m=N[r>>2];f:{if(Q(R(m))<Q(2147483648)){d=~~m;break f}d=-2147483648}J[c+4>>2]=d;m=N[l>>2];J[c+12>>2]=e;if(Q(R(m))<Q(2147483648)){d=~~m}else{d=-2147483648}J[c+8>>2]=d;b=b+16|0;e=e+1|0;if((k|0)!=(e|0)){continue}break}break d}J[g+28>>2]=k;break c}if((k|0)<2){break c}Rj(g+24|0,g+8|0,0,k-1|0)}J[f+44>>2]=k;J[f+40>>2]=0;J[f+36>>2]=J[f+32>>2];b=J[f+84>>2];g:{if((k|0)<=(b|0)){break g}if((k|0)>J[f+88>>2]){if(k){J[8369]=J[8369]+1;p=ia[J[6782]](k<<2,16)|0;e=J[f+84>>2]}else{e=b}h:{if((e|0)<=0){break h}l=0;c=0;if(e-1>>>0>=3){j=e&-4;d=0;while(1){r=c<<2;J[r+p>>2]=J[r+J[f+92>>2]>>2];i=r|4;J[i+p>>2]=J[i+J[f+92>>2]>>2];i=r|8;J[i+p>>2]=J[i+J[f+92>>2]>>2];r=r|12;J[r+p>>2]=J[r+J[f+92>>2]>>2];c=c+4|0;d=d+4|0;if((j|0)!=(d|0)){continue}break}}d=e&3;if(!d){break h}while(1){e=c<<2;J[e+p>>2]=J[e+J[f+92>>2]>>2];c=c+1|0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}c=J[f+92>>2];if(!(c?!c|!K[f+96|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[f+92>>2]=p;H[f+96|0]=1;J[f+88>>2]=k}d=k+(b^-1)|0;e=k-b&3;if(e){c=0;while(1){J[J[f+92>>2]+(b<<2)>>2]=0;b=b+1|0;c=c+1|0;if((e|0)!=(c|0)){continue}break}}if(d>>>0<3){break g}while(1){c=b<<2;J[c+J[f+92>>2]>>2]=0;J[(c+J[f+92>>2]|0)+4>>2]=0;J[(c+J[f+92>>2]|0)+8>>2]=0;J[(c+J[f+92>>2]|0)+12>>2]=0;b=b+4|0;if((k|0)!=(b|0)){continue}break}}J[f+84>>2]=k;if((k|0)>0){p=0;while(1){d=J[f+40>>2];i:{if(d){break i}b=J[f+36>>2];j:{if(b){J[f+36>>2]=J[b+8>>2];break j}J[8369]=J[8369]+1;b=ia[J[6782]](12,16)|0;c=J[f+44>>2];J[b+8>>2]=0;J[b+4>>2]=c;J[8369]=J[8369]+1;J[b>>2]=ia[J[6782]](P(c,112),16);J[b+8>>2]=J[f+32>>2];J[f+32>>2]=b}d=J[b>>2];r=J[b+4>>2];if((r|0)<=0){break i}i=0;l=0;c=d;if(r-1>>>0>=3){q=r&-4;e=0;b=d;j=0;while(1){c=b+448|0;l=e+4|0;J[b+336>>2]=(r|0)>(l|0)?c:0;J[b+224>>2]=(r|0)>(e|3)?b+336|0:0;J[b+112>>2]=(r|0)>(e|2)?b+224|0:0;J[b>>2]=(r|0)>(e|1)?b+112|0:0;e=l;b=c;j=j+4|0;if((q|0)!=(j|0)){continue}break}}b=r&3;if(!b){break i}while(1){e=c;c=c+112|0;l=l+1|0;J[e>>2]=(r|0)>(l|0)?c:0;i=i+1|0;if((b|0)!=(i|0)){continue}break}}J[f+40>>2]=J[d>>2];J[d+16>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d+104>>2]=-1;b=J[g+36>>2]+(p<<4)|0;c=J[b+4>>2];J[d+88>>2]=J[b>>2];J[d+92>>2]=c;c=J[b+12>>2];J[d+96>>2]=J[b+8>>2];J[d+100>>2]=c;J[J[f+92>>2]+(p<<2)>>2]=d;p=p+1|0;if((k|0)!=(p|0)){continue}break}}b=J[g+36>>2];if(!(b?!b|!K[g+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[g+36>>2]=0;H[g+40|0]=1;J[g+28>>2]=0;J[g+32>>2]=0;J[f+100>>2]=-3;J[f+56>>2]=0;J[f+60>>2]=P(k,6);J[f+116>>2]=0;J[f+120>>2]=0;J[f+52>>2]=J[f+48>>2];J[g+16>>2]=0;J[g+20>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;fg(f,0,k,g+8|0);J[f+124>>2]=J[g+8>>2];b=J[g+36>>2];if(!(b?!b|!K[g+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ga=g+48|0;if((J[a+4>>2]&J[a+8>>2])<0){b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+16|0]=1;J[a+8>>2]=0;J[a+12>>2]=0}J[a+4>>2]=0;d=J[a+24>>2];k:{if((d|0)>=0){break k}if(J[a+28>>2]<0){b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+36|0]=1;J[a+28>>2]=0;J[a+32>>2]=0}b=0;c=d;l=0-c&3;if(l){while(1){e=J[a+32>>2]+P(c,12)|0;J[e>>2]=0;J[e+4>>2]=0;J[e+8>>2]=0;c=c+1|0;b=b+1|0;if((l|0)!=(b|0)){continue}break}}if(d>>>0>4294967292){break k}while(1){b=P(c,12);d=b+J[a+32>>2]|0;J[d>>2]=0;J[d+4>>2]=0;J[d+8>>2]=0;d=b+J[a+32>>2]|0;J[d+20>>2]=0;J[d+12>>2]=0;J[d+16>>2]=0;d=b+J[a+32>>2]|0;J[d+32>>2]=0;J[d+24>>2]=0;J[d+28>>2]=0;b=b+J[a+32>>2]|0;J[b+44>>2]=0;J[b+36>>2]=0;J[b+40>>2]=0;c=c+4|0;if(c){continue}break}}J[a+24>>2]=0;c=J[a+44>>2];if((c|0)<0){b=J[a+52>>2];if(J[a+48>>2]<0){if(!(b?!b|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+56|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=0}d=b;b=c<<2;qa(d+b|0,0,0-b|0)}J[a+44>>2]=0;b=J[h+140>>2];l:{if(J[b+104>>2]>=0){break l}J[b+104>>2]=0;J[8369]=J[8369]+1;f=ia[J[6782]](4,16)|0;J[f>>2]=b;c=0;k=1;l=1;while(1){r=c;d=ga-16|0;ga=d;m:{n:{o:{p:{q=J[(c<<2)+f>>2];b=q;q:{if(J[b+100>>2]>=0){N[d+(J[h+124>>2]<<2)>>2]=J[b+88>>2];break q}m=dc(b+24|0);c=b+72|0;s=dc(c);e=J[b+100>>2];N[d+(J[h+124>>2]<<2)>>2]=m/s;if((e|0)<0){break p}}N[d+(J[h+128>>2]<<2)>>2]=J[b+92>>2];break o}m=dc(b+40|0);s=dc(c);c=J[b+100>>2];N[d+(J[h+128>>2]<<2)>>2]=m/s;if((c|0)<0){break n}}m=Q(J[b+96>>2]);break m}m=Q(dc(b+56|0)/dc(b+72|0))}N[d+(J[h+120>>2]<<2)>>2]=m;m=N[h+36>>2];s=N[h+40>>2];t=N[h+32>>2];x=N[h+16>>2];z=N[h+20>>2];A=N[h+24>>2];u=N[d>>2];v=N[d+4>>2];w=N[d+8>>2];J[h+12>>2]=0;N[h+8>>2]=s+Q(w*A);N[h+4>>2]=m+Q(v*z);N[h>>2]=t+Q(u*x);ga=d+16|0;b=J[a+4>>2];r:{if((b|0)!=J[a+8>>2]){break r}e=b?b<<1:1;if((e|0)<=(b|0)){break r}s:{if(!e){d=0;break s}J[8369]=J[8369]+1;d=ia[J[6782]](e<<4,16)|0;b=J[a+4>>2]}t:{if((b|0)<=0){break t}c=0;if((b|0)!=1){n=b&-2;p=0;while(1){j=c<<4;i=j+d|0;g=j+J[a+12>>2]|0;o=J[g+4>>2];J[i>>2]=J[g>>2];J[i+4>>2]=o;o=J[g+12>>2];J[i+8>>2]=J[g+8>>2];J[i+12>>2]=o;g=j|16;j=g+d|0;g=g+J[a+12>>2]|0;i=J[g+4>>2];J[j>>2]=J[g>>2];J[j+4>>2]=i;i=J[g+12>>2];J[j+8>>2]=J[g+8>>2];J[j+12>>2]=i;c=c+2|0;p=p+2|0;if((n|0)!=(p|0)){continue}break}}if(!(b&1)){break t}c=c<<4;b=c+d|0;c=c+J[a+12>>2]|0;g=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=g;g=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=g}b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=d;H[a+16|0]=1;J[a+8>>2]=e;b=J[a+4>>2]}c=J[h+4>>2];b=J[a+12>>2]+(b<<4)|0;J[b>>2]=J[h>>2];J[b+4>>2]=c;c=J[h+12>>2];J[b+8>>2]=J[h+8>>2];J[b+12>>2]=c;J[a+4>>2]=J[a+4>>2]+1;p=-1;g=-1;D=J[q+8>>2];c=D;if(c){while(1){if(J[c+20>>2]<0){d=J[a+24>>2];b=d;u:{if((b|0)!=J[a+28>>2]){break u}b=d;q=b?b<<1:1;if((b|0)>=(q|0)){break u}v:{if(!q){i=0;b=d;break v}J[8369]=J[8369]+1;i=ia[J[6782]](P(q,12),16)|0;b=J[a+24>>2]}j=b;w:{if((j|0)<=0){break w}b=0;if((j|0)!=1){B=j&-2;e=0;while(1){o=P(b,12);n=o+J[a+32>>2]|0;y=J[n+4>>2];o=i+o|0;J[o>>2]=J[n>>2];J[o+4>>2]=y;J[o+8>>2]=J[n+8>>2];o=P(b|1,12);n=o+J[a+32>>2]|0;y=J[n+4>>2];o=i+o|0;J[o>>2]=J[n>>2];J[o+4>>2]=y;J[o+8>>2]=J[n+8>>2];b=b+2|0;e=e+2|0;if((B|0)!=(e|0)){continue}break}}if(!(j&1)){break w}e=P(b,12);b=e+J[a+32>>2]|0;j=J[b+4>>2];e=e+i|0;J[e>>2]=J[b>>2];J[e+4>>2]=j;J[e+8>>2]=J[b+8>>2]}b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=i;H[a+36|0]=1;J[a+28>>2]=q;b=J[a+24>>2]}b=J[a+32>>2]+P(b,12)|0;J[b>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;e=J[a+24>>2]+1|0;J[a+24>>2]=e;x:{if(J[a+28>>2]!=(e|0)){break x}j=e?e<<1:1;if((j|0)<=(e|0)){break x}y:{if(!j){i=0;break y}J[8369]=J[8369]+1;i=ia[J[6782]](P(j,12),16)|0;e=J[a+24>>2]}z:{if((e|0)<=0){break z}o=e&1;b=0;if((e|0)!=1){B=e&-2;e=0;while(1){n=P(b,12);q=n+J[a+32>>2]|0;y=J[q+4>>2];n=i+n|0;J[n>>2]=J[q>>2];J[n+4>>2]=y;J[n+8>>2]=J[q+8>>2];n=P(b|1,12);q=n+J[a+32>>2]|0;y=J[q+4>>2];n=i+n|0;J[n>>2]=J[q>>2];J[n+4>>2]=y;J[n+8>>2]=J[q+8>>2];b=b+2|0;e=e+2|0;if((B|0)!=(e|0)){continue}break}}if(!o){break z}e=P(b,12);b=e+J[a+32>>2]|0;q=J[b+4>>2];e=e+i|0;J[e>>2]=J[b>>2];J[e+4>>2]=q;J[e+8>>2]=J[b+8>>2]}b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=i;H[a+36|0]=1;J[a+28>>2]=j;e=J[a+24>>2]}b=J[a+32>>2]+P(e,12)|0;J[b>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;J[a+24>>2]=J[a+24>>2]+1;i=J[a+32>>2];J[c+20>>2]=d;y=d+1|0;J[J[c+8>>2]+20>>2]=y;q=i+P(d,12)|0;J[q+16>>2]=-1;J[q+4>>2]=1;n=J[c+12>>2];d=J[n+104>>2];A:{if((d|0)>=0){b=k;k=d;break A}J[n+104>>2]=k;B:{C:{if((k|0)!=(l|0)){break C}e=l?l<<1:1;if((l|0)>=(e|0)){break C}if(e){J[8369]=J[8369]+1;d=ia[J[6782]](e<<2,16)|0}else{d=0}D:{if((l|0)>0){o=l&3;B=0;b=0;if(l-1>>>0>=3){E=l&-4;l=0;while(1){j=b<<2;J[j+d>>2]=J[f+j>>2];C=j|4;J[C+d>>2]=J[f+C>>2];C=j|8;J[C+d>>2]=J[f+C>>2];j=j|12;J[j+d>>2]=J[f+j>>2];b=b+4|0;l=l+4|0;if((E|0)!=(l|0)){continue}break}}if(!o){break D}while(1){l=b<<2;J[l+d>>2]=J[f+l>>2];b=b+1|0;B=B+1|0;if((o|0)!=(B|0)){continue}break}break D}if(!f){break B}}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}break B}d=f;e=l}J[(k<<2)+d>>2]=n;b=k+1|0;f=d;l=e}J[q+8>>2]=k;J[(i+P(y,12)|0)+8>>2]=r;k=b}b=J[c+20>>2];d=b;if((p|0)>=0){J[J[a+32>>2]+P(b,12)>>2]=p-b;d=g}p=b;g=d;c=J[c>>2];if((D|0)!=(c|0)){continue}break}J[J[a+32>>2]+P(g,12)>>2]=p-g}c=r+1|0;if((k|0)>(c|0)){continue}break}l=0;while(1){q=J[J[(l<<2)+f>>2]+8>>2];b=q;if(b){while(1){c=J[b+20>>2];if((c|0)>=0){i=J[a+44>>2];E:{if((i|0)!=J[a+48>>2]){break E}p=i?i<<1:1;if((p|0)<=(i|0)){break E}F:{if(!p){d=0;break F}J[8369]=J[8369]+1;d=ia[J[6782]](p<<2,16)|0;i=J[a+44>>2]}k=J[a+52>>2];G:{H:{if((i|0)>0){e=0;c=0;if(i-1>>>0>=3){n=i&-4;j=0;while(1){g=c<<2;J[g+d>>2]=J[g+k>>2];o=g|4;J[o+d>>2]=J[k+o>>2];o=g|8;J[o+d>>2]=J[k+o>>2];g=g|12;J[g+d>>2]=J[g+k>>2];c=c+4|0;j=j+4|0;if((n|0)!=(j|0)){continue}break}}g=i&3;if(!g){break H}while(1){j=c<<2;J[j+d>>2]=J[k+j>>2];c=c+1|0;e=e+1|0;if((g|0)!=(e|0)){continue}break}break H}if(!k){break G}}if(k?K[a+56|0]:0){J[8370]=J[8370]+1;ia[J[6783]](k)}i=J[a+44>>2]}J[a+52>>2]=d;H[a+56|0]=1;J[a+48>>2]=p;c=J[b+20>>2]}J[J[a+52>>2]+(i<<2)>>2]=c;J[a+44>>2]=J[a+44>>2]+1;c=b;while(1){J[c+20>>2]=-1;c=J[J[c+8>>2]+4>>2];if((c|0)!=(b|0)){continue}break}}b=J[b>>2];if((q|0)!=(b|0)){continue}break}}b=(l|0)==(r|0);l=l+1|0;if(!b){continue}break}if(!f){break l}if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}}a=J[h+108>>2];if(!(a?!a|!K[h+112|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[h+108>>2]=0;H[h+112|0]=1;J[h+100>>2]=0;J[h+104>>2]=0;while(1){a=J[h+80>>2];if(a){J[h+80>>2]=J[a+8>>2];b=J[a>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}continue}break}while(1){a=J[h+64>>2];if(a){J[h+64>>2]=J[a+8>>2];b=J[a>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}continue}break}while(1){a=J[h+48>>2];if(!a){break a}J[h+48>>2]=J[a+8>>2];b=J[a>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}continue}}ga=h+144|0}function fg(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0;u=ga-16|0;ga=u;a:{b:{c:{d:{e:{f:{f=c-b|0;switch(f|0){case 1:break d;case 2:break e;case 0:break f;default:break b}}J[d>>2]=0;J[d+4>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;break a}c=J[J[a+92>>2]+(b<<2)>>2];f=J[c+204>>2];b=c+112|0;k=J[c+88>>2];o=J[c+200>>2];i=(k|0)!=(o|0);g=J[c+92>>2];g:{if(!(i|(g|0)!=(f|0))){if(J[c+96>>2]==J[c+208>>2]){break c}f=J[c+96>>2]>J[c+208>>2];k=f?b:c;J[k+4>>2]=k;J[k>>2]=k;J[d+4>>2]=k;J[d>>2]=k;b=f?c:b;f=k;c=f;break g}J[c+4>>2]=b;J[c>>2]=b;J[c+116>>2]=c;J[c+112>>2]=c;n=(g-f|0)<0;j=n&(k|0)==(o|0);k=(k|0)<(o|0);o=j|k;J[d+4>>2]=o?b:c;J[d>>2]=o?c:b;if(n){k=c;f=b;break g}g=k&(i&(f|0)==(g|0));f=g?b:c;k=g?c:b}J[d+12>>2]=f;J[d+8>>2]=k;a=gg(a,c,b);J[a+4>>2]=a;J[a>>2]=a;J[c+8>>2]=a;a=J[a+8>>2];J[a+4>>2]=a;J[a>>2]=a;J[b+8>>2]=a;break a}c=J[J[a+92>>2]+(b<<2)>>2]}J[c+8>>2]=0;J[c+4>>2]=c;J[c>>2]=c;J[d+12>>2]=c;J[d+8>>2]=c;J[d+4>>2]=c;J[d>>2]=c;break a}f=((f|0)/2|0)+b|0;k=f;h:{if((c|0)<=(f|0)){break h}o=J[a+92>>2];g=J[(o+(f<<2)|0)-4>>2];i=J[g+88>>2];n=J[g+96>>2];j=J[g+92>>2];k=f;while(1){g=J[o+(k<<2)>>2];if((i|0)!=J[g+88>>2]|(j|0)!=J[g+92>>2]|(n|0)!=J[g+96>>2]){break h}k=k+1|0;if((k|0)<(c|0)){continue}break}k=c}fg(a,b,f,d);J[u+8>>2]=0;J[u+12>>2]=0;J[u>>2]=0;J[u+4>>2]=0;fg(a,k,c,u);r=a;k=0;h=ga-128|0;ga=h;i:{if(!J[u+4>>2]){break i}if(!J[d+4>>2]){a=J[u+4>>2];J[d>>2]=J[u>>2];J[d+4>>2]=a;a=J[u+12>>2];J[d+8>>2]=J[u+8>>2];J[d+12>>2]=a;break i}J[r+100>>2]=J[r+100>>2]-1;J[h+124>>2]=0;J[h+120>>2]=0;t=d;a=J[d+12>>2];d=J[u+8>>2];j:{k:{l:{if(J[a+88>>2]!=J[d+88>>2]|J[a+92>>2]!=J[d+92>>2]){break l}b=J[d+4>>2];if((b|0)==(d|0)){J[h+124>>2]=a;b=J[d+8>>2];a=0;if(!b){break k}J[h+120>>2]=J[b+12>>2];a=0;break j}c=J[d>>2];J[b>>2]=c;J[c+4>>2]=b;if(J[u>>2]==(d|0)){a=c;f=J[a+88>>2];g=J[b+88>>2];i=a;m:{if((f|0)<(g|0)){break m}if((f|0)==(g|0)){i=c;if(J[a+92>>2]<J[b+92>>2]){break m}}i=b}J[u>>2]=i}if(J[u+4>>2]!=(d|0)){break l}a=J[c+88>>2];d=J[b+88>>2];J[u+4>>2]=(a|0)>(d|0)|(a|0)==(d|0)&J[c+92>>2]>J[b+92>>2]?c:b}i=J[u>>2];n=J[t>>2];j=J[u+4>>2];p=J[t+4>>2];g=J[p+88>>2];b=J[j+88>>2]-g|0;n:{if((b|0)>0){a=j;c=p;while(1){d=a;f=J[a+92>>2];g=b;while(1){o:{b=J[c+92>>2];o=f-b|0;a=J[c+4>>2];if((a|0)==(c|0)){break o}e=J[a+92>>2]-b|0;if((e|0)>0){break o}b=J[a+88>>2];l=J[c+88>>2];if((b|0)!=(l|0)){l=b-l|0;if((l|0)>=0|(P(e,g)|0)>(P(o,l)|0)){break o}}g=J[d+88>>2]-b|0;c=a;continue}break}a=J[d+4>>2];if((d|0)==(a|0)){break n}e=J[a+88>>2];b=e-J[c+88>>2]|0;if((b|0)<=0){break n}f=J[a+92>>2]-f|0;if((f|0)>=0){break n}l=J[d+88>>2];if((l|0)==(e|0)){continue}e=e-l|0;if((e|0)>=0){break n}if((P(f,g)|0)<(P(e,o)|0)){continue}break}break n}if((b|0)<0){d=j;a=p;p:while(1){o=J[d+92>>2];f=J[d>>2];while(1){g=b;c=a;m=J[a+92>>2];e=o-m|0;q:{if((d|0)==(f|0)){break q}b=J[f+92>>2]-o|0;if((b|0)<0){break q}a=J[f+88>>2];l=J[d+88>>2];if((a|0)!=(l|0)){l=a-l|0;if((l|0)>=0|(P(b,g)|0)>(P(e,l)|0)){break q}}b=a-J[c+88>>2]|0;d=f;a=c;continue p}a=J[c>>2];if((c|0)==(a|0)){break n}l=J[a+88>>2];b=J[d+88>>2]-l|0;if((b|0)>=0){break n}m=J[a+92>>2]-m|0;if((m|0)<=0){break n}q=J[c+88>>2];if((q|0)==(l|0)){continue}l=l-q|0;if((l|0)>=0){break n}if((P(g,m)|0)<(P(e,l)|0)){continue}break}break}break n}b=J[p+92>>2];a=p;while(1){r:{c=a;a=J[a+4>>2];if((p|0)==(a|0)|(g|0)!=J[a+88>>2]){break r}d=b;b=J[a+92>>2];if((d|0)>=(b|0)){continue}}break}b=J[j+92>>2];a=j;while(1){d=a;a=J[a>>2];if((j|0)==(a|0)|(g|0)!=J[a+88>>2]){break n}f=b;b=J[a+92>>2];if((f|0)<=(b|0)){continue}break}}e=J[n+88>>2];g=e-J[i+88>>2]|0;s:{if((g|0)>0){b=i;a=n;while(1){f=b;e=J[b+92>>2];o=g;while(1){t:{g=J[a+92>>2];l=e-g|0;b=J[a>>2];if((b|0)==(a|0)){break t}m=J[b+92>>2]-g|0;if((m|0)>0){break t}q=J[a+88>>2];g=J[b+88>>2];if((q|0)!=(g|0)){q=q-g|0;if((q|0)>=0|(P(m,o)|0)>(P(l,q)|0)){break t}}o=g-J[f+88>>2]|0;a=b;continue}break}b=J[f>>2];if((f|0)==(b|0)){break s}m=J[b+88>>2];g=J[a+88>>2]-m|0;if((g|0)<=0){break s}e=J[b+92>>2]-e|0;if((e|0)>=0){break s}q=J[f+88>>2];if((q|0)==(m|0)){continue}m=q-m|0;if((m|0)>=0){break s}if((P(e,o)|0)<(P(m,l)|0)){continue}break}break s}if((g|0)<0){f=i;b=n;u:while(1){l=J[f+92>>2];o=J[f+4>>2];while(1){e=g;a=b;z=J[a+92>>2];m=l-z|0;v:{if((f|0)==(o|0)){break v}g=J[o+92>>2]-l|0;if((g|0)<0){break v}q=J[f+88>>2];b=J[o+88>>2];if((q|0)!=(b|0)){q=q-b|0;if((q|0)>=0|(P(e,g)|0)>(P(m,q)|0)){break v}}g=J[a+88>>2]-b|0;f=o;b=a;continue u}b=J[a+4>>2];if((b|0)==(a|0)){break s}q=J[b+88>>2];g=q-J[f+88>>2]|0;if((g|0)>=0){break s}z=J[b+92>>2]-z|0;if((z|0)<=0){break s}C=J[a+88>>2];if((C|0)==(q|0)){continue}q=C-q|0;if((q|0)>=0){break s}if((P(e,z)|0)<(P(m,q)|0)){continue}break}break}break s}g=J[n+92>>2];b=n;while(1){a=b;b=J[a>>2];if(!((n|0)==(b|0)|(e|0)!=J[b+88>>2])){f=g;g=J[b+92>>2];if((f|0)>=(g|0)){continue}}break}g=J[i+92>>2];b=i;while(1){f=b;b=J[b+4>>2];if((i|0)==(b|0)|(e|0)!=J[b+88>>2]){break s}o=g;g=J[b+92>>2];if((o|0)<=(g|0)){continue}break}}J[a+4>>2]=f;J[f>>2]=a;J[c>>2]=d;J[d+4>>2]=c;if(J[i+88>>2]<J[n+88>>2]){J[t>>2]=i}if(J[j+88>>2]>=J[p+88>>2]){J[t+4>>2]=j}J[t+12>>2]=J[u+12>>2];J[h+124>>2]=c;a=1}J[h+120>>2]=d}l=J[h+120>>2];w:{if(a){q=J[h+124>>2];i=J[q+96>>2];n=J[l+96>>2];j=J[q+92>>2];p=J[l+92>>2];b=J[q+8>>2];t=J[q+88>>2];m=J[l+88>>2];J[h+80>>2]=0;a=n-i|0;c=a;e=a>>31;a=p-j|0;d=a;f=a>>31;z=jI(c,e,a,f);C=ha;a=m-t|0;g=0-a|0;o=g>>31;a=jI(g,o,a,a>>31);B=ha;A=jI(d,f,d,f);D=a-A|0;B=B-(ha+(a>>>0<A>>>0)|0)|0;a=jI(g,o,c,e);A=0-a|0;H=0-(ha+((a|0)!=0)|0)|0;if(b){a=b;while(1){e=J[a+12>>2];v=J[e+92>>2];c=v-j|0;s=c>>31;w=jI(c,s,g,o);x=ha;E=w;w=J[e+88>>2];y=w-t|0;I=y>>31;K=jI(d,f,y,I);x:{if((E|0)!=(0-K|0)|(0-(ha+((K|0)!=0)|0)|0)!=(x|0)){break x}c=jI(z,C,c,s);x=ha;y=jI(A,H,y,I);s=y+c|0;c=ha+x|0;c=s>>>0<y>>>0?c+1|0:c;E=s;x=J[e+96>>2];e=x-i|0;s=jI(D,B,e,e>>31);e=E+s|0;c=ha+c|0;c=e>>>0<s>>>0?c+1|0:c;if(!e&(c|0)<=0|(c|0)<0){break x}y:{if(!k){break y}c=J[k+4>>2];if(J[k>>2]==(a|0)){if((a|0)!=(c|0)){break x}c=J[k+12>>2];e=J[J[a+8>>2]+12>>2];y=J[e+96>>2];s=J[c+96>>2]-y|0;I=J[e+92>>2];E=P(s,I-v|0);v=x-y|0;x=E+P(v,J[c+92>>2]-I|0)|0;x=jI(x,x>>31,d,f);y=ha;e=J[e+88>>2];c=P(v,e-J[c+88>>2]|0)+P(s,w-e|0)|0;s=jI(c,c>>31,g,o);e=s+x|0;c=ha+y|0;c=e>>>0<s>>>0?c+1|0:c;if(!e&(c|0)<=0|(c|0)<0){break y}break x}if((a|0)!=(c|0)){break x}}k=a}a=J[a>>2];if((b|0)!=(a|0)){continue}break}J[h+80>>2]=k}b=J[l+8>>2];e=0;J[h+56>>2]=0;if(b){a=b;while(1){i=J[a+12>>2];t=J[i+92>>2];c=t-p|0;j=c>>31;s=jI(c,j,g,o);v=ha;E=s;s=J[i+88>>2];w=s-m|0;x=w>>31;y=jI(d,f,w,x);z:{if((E|0)!=(0-y|0)|(0-(ha+((y|0)!=0)|0)|0)!=(v|0)){break z}c=jI(z,C,c,j);v=ha;w=jI(A,H,w,x);j=w+c|0;c=ha+v|0;c=j>>>0<w>>>0?c+1|0:c;w=j;v=J[i+96>>2];i=v-n|0;j=jI(D,B,i,i>>31);i=w+j|0;c=ha+c|0;c=j>>>0>i>>>0?c+1|0:c;if(!i&(c|0)<=0|(c|0)<0){break z}A:{if(!e){break A}if(J[e>>2]!=(a|0)){break z}if(J[e+4>>2]!=(a|0)){break A}c=J[e+12>>2];i=J[J[a+8>>2]+12>>2];w=J[i+96>>2];j=J[c+96>>2]-w|0;x=J[i+92>>2];E=P(j,x-t|0);t=v-w|0;v=E+P(t,J[c+92>>2]-x|0)|0;v=jI(v,v>>31,d,f);w=ha;i=J[i+88>>2];c=P(t,i-J[c+88>>2]|0)+P(j,s-i|0)|0;j=jI(c,c>>31,g,o);i=j+v|0;c=ha+w|0;c=j>>>0>i>>>0?c+1|0:c;if(!i&(c|0)<=0|(c|0)<0){break z}}e=a}a=J[a>>2];if((b|0)!=(a|0)){continue}break}J[h+56>>2]=e}B:{if(!(e|k)){break B}Tj(r,q,l,h+80|0,h+56|0);a=J[h+80>>2];if(a){q=J[a+12>>2];J[h+124>>2]=q}a=J[h+56>>2];if(!a){break B}l=J[a+12>>2];J[h+120>>2]=l}C=J[l+92>>2];z=J[l+88>>2];i=J[l+96>>2]+1|0;break w}C=J[l+92>>2];q=J[h+124>>2];z=J[l+88>>2]+1|0;i=J[l+96>>2]}a=q;c=l;n=0;g=0;o=0;j=1;f=0;b=0;t=0;while(1){k=J[c+96>>2];e=J[a+96>>2];m=J[a+92>>2];d=J[c+92>>2];D=J[a+88>>2];p=J[c+88>>2];J[h+116>>2]=-1;d=d-m|0;J[h+108>>2]=d;k=k-e|0;J[h+112>>2]=k;p=p-D|0;J[h+104>>2]=p;B=C-m|0;e=i-e|0;A=P(B,k)-P(e,d)|0;m=A>>31;J[h+80>>2]=A;J[h+84>>2]=m;s=P(e,p);e=z-D|0;H=s-P(e,k)|0;D=H>>31;J[h+88>>2]=H;J[h+92>>2]=D;e=P(d,e)-P(p,B)|0;B=e>>31;s=e;J[h+96>>2]=e;J[h+100>>2]=B;v=p>>31;e=jI(H,D,p,v);w=ha;x=d>>31;y=jI(A,m,d,x);J[h+72>>2]=e-y;J[h+76>>2]=w-(ha+(e>>>0<y>>>0)|0);e=m;m=k>>31;e=jI(A,e,k,m);A=ha;p=jI(s,B,p,v);J[h+64>>2]=e-p;J[h+68>>2]=A-(ha+(e>>>0<p>>>0)|0);d=jI(d,x,s,B);p=ha;k=jI(H,D,k,m);J[h+56>>2]=d-k;J[h+60>>2]=p-(ha+(d>>>0<k>>>0)|0);J[h+48>>2]=0;J[h+40>>2]=0;J[h+44>>2]=0;J[h+32>>2]=0;J[h+36>>2]=0;d=h+104|0;k=h+80|0;p=h+56|0;m=Sj(r,0,a,d,k,p,h+32|0);J[h+24>>2]=0;J[h+16>>2]=0;J[h+20>>2]=0;J[h+8>>2]=0;J[h+12>>2]=0;p=Sj(r,1,c,d,k,p,h+8|0);if(!(p|m)){b=gg(r,a,c);J[b+4>>2]=b;J[b>>2]=b;J[a+8>>2]=b;a=J[b+8>>2];J[a+4>>2]=a;J[a>>2]=a;J[c+8>>2]=a;break i}e=m?-1:1;if(!(!m|!p)){e=yc(h+32|0,h+8|0)}C:{D:{E:{if(j&1){break E}if((e|0)>=0){if(J[h+16>>2]|J[h+20>>2]|J[h+24>>2]>=0){break E}j=n;c=g;k=f;d=b;break D}if(J[h+40>>2]|J[h+44>>2]|J[h+48>>2]>=0){break E}J[h+4>>2]=m;k=f;d=b;break C}k=gg(r,a,c);d=k;if(f){J[f+4>>2]=k;d=b}J[k>>2]=f;j=J[k+8>>2];c=j;if(n){J[n>>2]=j;c=g}J[j+4>>2]=n}J[h+4>>2]=m;J[h>>2]=p;f=p;if(!e){Tj(r,J[h+124>>2],J[h+120>>2],h+4|0,h);f=J[h>>2]}if(!(!f|(e|0)<0)){F:{G:{if(F){a=J[F>>2];if((p|0)!=(a|0)){while(1){n=J[a+8>>2];b=0;i=0;g=J[a>>2];if((g|0)!=(a|0)){J[g+4>>2]=J[a+4>>2];J[J[a+4>>2]>>2]=g;i=g}J[J[n+12>>2]+8>>2]=i;i=J[n>>2];if((i|0)!=(n|0)){J[i+4>>2]=J[n+4>>2];J[J[n+4>>2]>>2]=i;b=i}J[J[a+12>>2]+8>>2]=b;J[a+16>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a>>2]=J[r+56>>2];J[r+56>>2]=a;J[n+16>>2]=0;J[n+8>>2]=0;J[n+12>>2]=0;J[n>>2]=0;J[n+4>>2]=0;J[n>>2]=J[r+56>>2];J[r+56>>2]=n;J[r+116>>2]=J[r+116>>2]-1;a=g;if((p|0)!=(a|0)){continue}break}}if(j){break G}break F}if(!j){o=p;break F}F=J[p+4>>2];o=c}J[F>>2]=c;J[c+4>>2]=F;J[j>>2]=p;J[p+4>>2]=j;f=J[h>>2];c=0}g=c;a=J[h+120>>2];i=J[a+96>>2];C=J[a+92>>2];z=J[a+88>>2];J[h+120>>2]=J[f+12>>2];F=J[f+8>>2];n=0;break C}n=j;g=c}H:{I:{if((e|0)<=0){e=J[h+4>>2];if(e){break I}}a=J[h+124>>2];break H}J:{K:{if(G){a=J[G+4>>2];if((m|0)!=(a|0)){while(1){j=J[a+8>>2];i=J[a+4>>2];b=0;c=0;f=J[a>>2];if((f|0)!=(a|0)){J[f+4>>2]=i;J[J[a+4>>2]>>2]=f;c=f}J[J[j+12>>2]+8>>2]=c;c=J[j>>2];if((c|0)!=(j|0)){J[c+4>>2]=J[j+4>>2];J[J[j+4>>2]>>2]=c;b=c}J[J[a+12>>2]+8>>2]=b;J[a+16>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a>>2]=J[r+56>>2];J[r+56>>2]=a;J[j+16>>2]=0;J[j+8>>2]=0;J[j+12>>2]=0;J[j>>2]=0;J[j+4>>2]=0;J[j>>2]=J[r+56>>2];J[r+56>>2]=j;J[r+116>>2]=J[r+116>>2]-1;a=i;if((m|0)!=(a|0)){continue}break}}if(!k){break J}J[d>>2]=G;a=G+4|0;break K}if(!k){t=m;break J}a=J[m>>2];J[d>>2]=a;t=d;a=a+4|0}J[a>>2]=d;J[m>>2]=k;J[k+4>>2]=m;d=0;e=J[h+4>>2]}a=J[h+124>>2];i=J[a+96>>2];C=J[a+92>>2];z=J[a+88>>2];a=J[e+12>>2];J[h+124>>2]=a;G=J[e+8>>2];k=0}c=J[h+120>>2];if((a|0)!=(q|0)|(l|0)!=(c|0)){j=0;f=k;b=d;continue}else{L:{if(!G){J[d>>2]=k;J[k+4>>2]=d;J[J[h+124>>2]+8>>2]=k;break L}a=J[G+4>>2];if((t|0)!=(a|0)){while(1){j=J[a+8>>2];f=J[a+4>>2];b=0;c=J[a>>2];if((c|0)!=(a|0)){J[c+4>>2]=f;J[J[a+4>>2]>>2]=c;b=c}J[J[j+12>>2]+8>>2]=b;i=J[j>>2];M:{if((j|0)==(i|0)){i=0;break M}J[i+4>>2]=J[j+4>>2];J[J[j+4>>2]>>2]=i}J[J[a+12>>2]+8>>2]=i;J[a+16>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a>>2]=J[r+56>>2];J[r+56>>2]=a;J[j+16>>2]=0;J[j+8>>2]=0;J[j+12>>2]=0;J[j>>2]=0;J[j+4>>2]=0;J[j>>2]=J[r+56>>2];J[r+56>>2]=j;J[r+116>>2]=J[r+116>>2]-1;a=f;if((t|0)!=(a|0)){continue}break}}if(!k){break L}J[d>>2]=G;J[G+4>>2]=d;J[t>>2]=k;J[k+4>>2]=t}if(!F){J[n>>2]=g;J[g+4>>2]=n;J[J[h+120>>2]+8>>2]=n;break i}a=J[F>>2];if((o|0)!=(a|0)){while(1){c=J[a+8>>2];i=0;b=J[a>>2];if((b|0)!=(a|0)){J[b+4>>2]=J[a+4>>2];J[J[a+4>>2]>>2]=b;i=b}J[J[c+12>>2]+8>>2]=i;i=J[c>>2];N:{if((c|0)==(i|0)){i=0;break N}J[i+4>>2]=J[c+4>>2];J[J[c+4>>2]>>2]=i}J[J[a+12>>2]+8>>2]=i;J[a+16>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a>>2]=J[r+56>>2];J[r+56>>2]=a;J[c+16>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;J[c>>2]=0;J[c+4>>2]=0;J[c>>2]=J[r+56>>2];J[r+56>>2]=c;J[r+116>>2]=J[r+116>>2]-1;a=b;if((o|0)!=(a|0)){continue}break}}if(!n){break i}J[F>>2]=g;J[g+4>>2]=F;J[n>>2]=o;J[o+4>>2]=n}break}}ga=h+128|0}ga=u+16|0}function Yg(a,b,c){var d=0,e=0,f=Q(0),g=0,h=0,i=0,j=0,k=Q(0),l=0,m=0,n=Q(0),o=Q(0),p=0,q=Q(0),r=0,s=Q(0),t=Q(0),u=0,v=Q(0),w=0,x=Q(0),y=Q(0),z=0,A=Q(0),B=0,C=0,D=0,E=Q(0),F=0,G=Q(0),M=Q(0);l=ga-32|0;ga=l;z=J[a+56>>2];a:{if((c-b|0)==1){b:{if(K[a+60|0]){b=J[a+116>>2]+(b<<4)|0;e=J[b+4>>2];c=J[a+136>>2]+(z<<4)|0;J[c>>2]=J[b>>2];J[c+4>>2]=e;break b}b=J[a+76>>2]+(b<<6)|0;e=J[b+4>>2];c=J[a+96>>2]+(z<<6)|0;J[c>>2]=J[b>>2];J[c+4>>2]=e;e=J[b+60>>2];J[c+56>>2]=J[b+56>>2];J[c+60>>2]=e;e=J[b+52>>2];J[c+48>>2]=J[b+48>>2];J[c+52>>2]=e;e=J[b+44>>2];J[c+40>>2]=J[b+40>>2];J[c+44>>2]=e;e=J[b+36>>2];J[c+32>>2]=J[b+32>>2];J[c+36>>2]=e;e=J[b+28>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=e;e=J[b+20>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=e}e=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=e;J[a+56>>2]=J[a+56>>2]+1;break a}p=c;e=b;g=c-e|0;c:{d:{e:{if((c|0)<=(e|0)){E=Q(g|0);break e}f:{if(!K[a+60|0]){d=J[a+76>>2];c=b;while(1){h=d+(c<<6)|0;y=Q(y+Q(Q(N[h+16>>2]+N[h>>2])*Q(.5)));s=Q(s+Q(Q(N[h+24>>2]+N[h+8>>2])*Q(.5)));t=Q(t+Q(Q(N[h+20>>2]+N[h+4>>2])*Q(.5)));c=c+1|0;if((p|0)!=(c|0)){continue}break}break f}v=N[a+12>>2];o=N[a+8>>2];q=N[a+44>>2];k=N[a+40>>2];d=J[a+116>>2];n=N[a+4>>2];f=N[a+36>>2];c=b;while(1){h=d+(c<<4)|0;y=Q(y+Q(Q(Q(Q(Q(L[h+6>>1])/f)+n)+Q(Q(Q(L[h>>1])/f)+n))*Q(.5)));s=Q(s+Q(Q(Q(Q(Q(L[h+10>>1])/q)+v)+Q(Q(Q(L[h+4>>1])/q)+v))*Q(.5)));t=Q(t+Q(Q(Q(Q(Q(L[h+8>>1])/k)+o)+Q(Q(Q(L[h+2>>1])/k)+o))*Q(.5)));c=c+1|0;if((p|0)!=(c|0)){continue}break}}E=Q(g|0);if((e|0)<(p|0)){break d}}s=Q(0);t=Q(0);break c}f=Q(Q(1)/E);G=Q(f*s);M=Q(f*t);y=Q(f*y);t=Q(0);if(!K[a+60|0]){c=J[a+76>>2];s=Q(0);while(1){d=c+(e<<6)|0;f=Q(Q(Q(N[d+16>>2]+N[d>>2])*Q(.5))-y);x=Q(x+Q(f*f));f=Q(Q(Q(N[d+24>>2]+N[d+8>>2])*Q(.5))-G);t=Q(t+Q(f*f));f=Q(Q(Q(N[d+20>>2]+N[d+4>>2])*Q(.5))-M);s=Q(s+Q(f*f));e=e+1|0;if((p|0)!=(e|0)){continue}break}break c}A=N[a+12>>2];v=N[a+8>>2];o=N[a+44>>2];q=N[a+40>>2];c=J[a+116>>2];k=N[a+4>>2];n=N[a+36>>2];s=Q(0);while(1){d=c+(e<<4)|0;f=Q(Q(Q(Q(Q(Q(L[d+6>>1])/n)+k)+Q(Q(Q(L[d>>1])/n)+k))*Q(.5))-y);x=Q(x+Q(f*f));f=Q(Q(Q(Q(Q(Q(L[d+10>>1])/o)+A)+Q(Q(Q(L[d+4>>1])/o)+A))*Q(.5))-G);t=Q(t+Q(f*f));f=Q(Q(Q(Q(Q(Q(L[d+8>>1])/q)+v)+Q(Q(Q(L[d+2>>1])/q)+v))*Q(.5))-M);s=Q(s+Q(f*f));e=e+1|0;if((p|0)!=(e|0)){continue}break}}k=Q(Q(1)/Q(E+Q(-1)));n=Q(k*x);f=Q(k*s);c=n<f;g=Q(k*t)>(c?f:n)?2:c;s=Q(0);t=Q(0);x=Q(0);i=ga-96|0;J[i+28>>2]=0;w=p-b|0;d=(b|0)>=(p|0);g:{if(d){break g}if(!K[a+60|0]){e=J[a+76>>2];c=b;while(1){h=e+(c<<6)|0;x=Q(Q(Q(N[h+16>>2]+N[h>>2])*Q(.5))+x);s=Q(Q(Q(N[h+24>>2]+N[h+8>>2])*Q(.5))+s);t=Q(Q(Q(N[h+20>>2]+N[h+4>>2])*Q(.5))+t);c=c+1|0;if((p|0)!=(c|0)){continue}break}break g}v=N[a+12>>2];o=N[a+8>>2];q=N[a+44>>2];k=N[a+40>>2];e=J[a+116>>2];n=N[a+4>>2];f=N[a+36>>2];c=b;while(1){h=e+(c<<4)|0;x=Q(Q(Q(Q(Q(Q(L[h+6>>1])/f)+n)+Q(Q(Q(L[h>>1])/f)+n))*Q(.5))+x);s=Q(Q(Q(Q(Q(Q(L[h+10>>1])/q)+v)+Q(Q(Q(L[h+4>>1])/q)+v))*Q(.5))+s);t=Q(Q(Q(Q(Q(Q(L[h+8>>1])/k)+o)+Q(Q(Q(L[h+2>>1])/k)+o))*Q(.5))+t);c=c+1|0;if((p|0)!=(c|0)){continue}break}}f=Q(Q(1)/Q(w|0));N[i+24>>2]=f*s;N[i+20>>2]=f*t;N[i+16>>2]=f*x;e=b;if(!d){c=g<<2;A=N[c+(i+16|0)>>2];m=c+i|0;c=b;e=c;while(1){d=K[a+60|0];h:{if(d){g=J[a+116>>2]+(c<<4)|0;v=N[a+44>>2];o=N[a+12>>2];s=Q(Q(Q(L[g+4>>1])/v)+o);q=N[a+40>>2];k=N[a+8>>2];t=Q(Q(Q(L[g+2>>1])/q)+k);n=N[a+36>>2];f=N[a+4>>2];x=Q(Q(Q(L[g>>1])/n)+f);y=Q(Q(Q(L[g+10>>1])/v)+o);E=Q(Q(Q(L[g+8>>1])/q)+k);f=Q(Q(Q(L[g+6>>1])/n)+f);break h}g=J[a+76>>2]+(c<<6)|0;s=N[g+8>>2];t=N[g+4>>2];x=N[g>>2];y=N[g+24>>2];E=N[g+20>>2];f=N[g+16>>2]}J[i+12>>2]=0;N[i+8>>2]=Q(y+s)*Q(.5);N[i+4>>2]=Q(E+t)*Q(.5);N[i>>2]=Q(f+x)*Q(.5);if(A<N[m>>2]){i:{if(d){g=J[a+116>>2];u=g+(c<<4)|0;h=u;d=J[h+12>>2];J[i+40>>2]=J[h+8>>2];J[i+44>>2]=d;d=J[h+4>>2];J[i+32>>2]=J[h>>2];J[i+36>>2]=d;h=g;g=e<<4;h=h+g|0;d=J[h+4>>2];J[u>>2]=J[h>>2];J[u+4>>2]=d;d=J[h+12>>2];J[u+8>>2]=J[h+8>>2];J[u+12>>2]=d;d=J[i+36>>2];g=g+J[a+116>>2]|0;J[g>>2]=J[i+32>>2];J[g+4>>2]=d;d=J[i+44>>2];J[g+8>>2]=J[i+40>>2];J[g+12>>2]=d;break i}h=J[a+76>>2];j=h+(c<<6)|0;d=J[j+60>>2];J[i+88>>2]=J[j+56>>2];J[i+92>>2]=d;d=J[j+52>>2];J[i+80>>2]=J[j+48>>2];J[i+84>>2]=d;d=J[j+44>>2];J[i+72>>2]=J[j+40>>2];J[i+76>>2]=d;d=J[j+36>>2];u=i- -64|0;g=u;J[g>>2]=J[j+32>>2];J[g+4>>2]=d;d=J[j+28>>2];J[i+56>>2]=J[j+24>>2];J[i+60>>2]=d;d=J[j+20>>2];J[i+48>>2]=J[j+16>>2];J[i+52>>2]=d;d=J[j+12>>2];J[i+40>>2]=J[j+8>>2];J[i+44>>2]=d;d=J[j+4>>2];J[i+32>>2]=J[j>>2];J[i+36>>2]=d;g=e<<6;h=g+h|0;d=J[h+4>>2];J[j>>2]=J[h>>2];J[j+4>>2]=d;d=J[h+12>>2];J[j+8>>2]=J[h+8>>2];J[j+12>>2]=d;d=J[h+20>>2];J[j+16>>2]=J[h+16>>2];J[j+20>>2]=d;d=J[h+28>>2];J[j+24>>2]=J[h+24>>2];J[j+28>>2]=d;d=J[h+36>>2];J[j+32>>2]=J[h+32>>2];J[j+36>>2]=d;d=J[h+44>>2];J[j+40>>2]=J[h+40>>2];J[j+44>>2]=d;d=J[h+52>>2];J[j+48>>2]=J[h+48>>2];J[j+52>>2]=d;d=J[h+60>>2];J[j+56>>2]=J[h+56>>2];J[j+60>>2]=d;d=J[i+36>>2];g=g+J[a+76>>2]|0;J[g>>2]=J[i+32>>2];J[g+4>>2]=d;d=J[i+44>>2];J[g+8>>2]=J[i+40>>2];J[g+12>>2]=d;d=J[i+52>>2];J[g+16>>2]=J[i+48>>2];J[g+20>>2]=d;d=J[i+60>>2];J[g+24>>2]=J[i+56>>2];J[g+28>>2]=d;d=J[u+4>>2];J[g+32>>2]=J[u>>2];J[g+36>>2]=d;d=J[i+76>>2];J[g+40>>2]=J[i+72>>2];J[g+44>>2]=d;d=J[i+84>>2];J[g+48>>2]=J[i+80>>2];J[g+52>>2]=d;d=J[i+92>>2];J[g+56>>2]=J[i+88>>2];J[g+60>>2]=d}e=e+1|0}c=c+1|0;if((p|0)!=(c|0)){continue}break}}c=(w>>1)+b|0;g=c;c=(w|0)/3|0;i=(b+c|0)>=(e|0)?g:(p+(c^-1)|0)<=(e|0)?g:e;F=J[a+56>>2];j:{if(K[a+60|0]){v=N[a+40>>2];o=N[a+8>>2];q=N[a+24>>2];k=N[a+44>>2];n=N[a+12>>2];f=N[a+28>>2];c=J[a+136>>2]+(F<<4)|0;A=Q(Q(N[a+20>>2]-N[a+4>>2])*N[a+36>>2]);k:{if(A<Q(4294967296)&A>=Q(0)){e=~~A>>>0;break k}e=0}I[c>>1]=e&65534;f=Q(Q(f-n)*k);l:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break l}e=0}I[c+4>>1]=e&65534;f=Q(Q(q-o)*v);m:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break m}e=0}I[c+2>>1]=e&65534;break j}c=J[a+24>>2];e=J[a+96>>2]+(F<<6)|0;J[e>>2]=J[a+20>>2];J[e+4>>2]=c;c=J[a+32>>2];J[e+8>>2]=J[a+28>>2];J[e+12>>2]=c}c=J[a+56>>2];n:{if(K[a+60|0]){k=N[a+40>>2];o=N[a+8>>2];n=N[a+44>>2];q=N[a+12>>2];c=J[a+136>>2]+(c<<4)|0;f=N[a+4>>2];f=Q(Q(Q(f-f)*N[a+36>>2])+Q(1));o:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break o}e=0}I[c+6>>1]=e|1;f=Q(Q(Q(q-q)*n)+Q(1));p:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break p}e=0}I[c+10>>1]=e|1;f=Q(Q(Q(o-o)*k)+Q(1));q:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break q}e=0}I[c+8>>1]=e|1;break n}e=J[a+96>>2]+(c<<6)|0;c=J[a+8>>2];J[e+16>>2]=J[a+4>>2];J[e+20>>2]=c;c=J[a+16>>2];J[e+24>>2]=J[a+12>>2];J[e+28>>2]=c}if((b|0)<(p|0)){c=b;while(1){r=J[a+56>>2];r:{if(K[a+60|0]){h=J[a+116>>2]+(c<<4)|0;g=L[h+4>>1];d=L[h+2>>1];e=L[h>>1];v=N[a+44>>2];o=N[a+40>>2];q=N[a+36>>2];J[l+28>>2]=0;k=N[a+4>>2];N[l+16>>2]=Q(Q(e>>>0)/q)+k;n=N[a+8>>2];N[l+20>>2]=Q(Q(d>>>0)/o)+n;f=N[a+12>>2];N[l+24>>2]=Q(Q(g>>>0)/v)+f;g=L[h+6>>1];d=L[h+8>>1];e=L[h+10>>1];J[l+12>>2]=0;N[l+8>>2]=f+Q(Q(e>>>0)/v);N[l+4>>2]=n+Q(Q(d>>>0)/o);N[l>>2]=k+Q(Q(g>>>0)/q);break r}d=J[a+76>>2]+(c<<6)|0;e=J[d+12>>2];J[l+24>>2]=J[d+8>>2];J[l+28>>2]=e;e=J[d+4>>2];J[l+16>>2]=J[d>>2];J[l+20>>2]=e;e=J[d+28>>2];J[l+8>>2]=J[d+24>>2];J[l+12>>2]=e;e=J[d+20>>2];J[l>>2]=J[d+16>>2];J[l+4>>2]=e}s:{if(K[a+60|0]){q=N[a+12>>2];k=N[a+44>>2];f=Q(Q(N[l+24>>2]-q)*k);t:{if(f<Q(4294967296)&f>=Q(0)){m=~~f>>>0;break t}m=0}n=N[a+8>>2];f=N[a+40>>2];o=Q(Q(N[l+20>>2]-n)*f);u:{if(o<Q(4294967296)&o>=Q(0)){h=~~o>>>0;break u}h=0}k=Q(Q(k*Q(N[l+8>>2]-q))+Q(1));v:{if(k<Q(4294967296)&k>=Q(0)){g=~~k>>>0;break v}g=0}f=Q(Q(f*Q(N[l+4>>2]-n))+Q(1));w:{if(f<Q(4294967296)&f>=Q(0)){d=~~f>>>0;break w}d=0}n=N[a+4>>2];f=N[a+36>>2];k=Q(Q(N[l+16>>2]-n)*f);x:{if(k<Q(4294967296)&k>=Q(0)){e=~~k>>>0;break x}e=0}w=e&65534;B=J[a+136>>2];j=B+(r<<4)|0;u=w>>>0>=L[j>>1];f=Q(Q(f*Q(N[l>>2]-n))+Q(1));y:{if(f<Q(4294967296)&f>=Q(0)){e=~~f>>>0;break y}e=0}if(!u){I[j>>1]=w}e=e|1;u=B+(r<<4)|0;if(e>>>0>L[u+6>>1]){I[u+6>>1]=e}e=h&65534;if(e>>>0<L[u+2>>1]){I[u+2>>1]=e}e=d|1;h=B+(r<<4)|0;if(e>>>0>L[h+8>>1]){I[h+8>>1]=e}e=m&65534;if(e>>>0<L[h+4>>1]){I[h+4>>1]=e}e=g|1;d=B+(r<<4)|0;if(e>>>0<=L[d+10>>1]){break s}I[d+10>>1]=e;break s}f=N[l+16>>2];d=J[a+96>>2];e=d+(r<<6)|0;if(f<N[e>>2]){N[e>>2]=f}f=N[l+20>>2];if(f<N[e+4>>2]){N[e+4>>2]=f}f=N[l+24>>2];e=d+(r<<6)|0;if(f<N[e+8>>2]){N[e+8>>2]=f}f=N[l+28>>2];if(f<N[e+12>>2]){N[e+12>>2]=f}f=N[l>>2];e=d+(r<<6)|0;if(f>N[e+16>>2]){N[e+16>>2]=f}f=N[l+4>>2];if(f>N[e+20>>2]){N[e+20>>2]=f}f=N[l+8>>2];e=d+(r<<6)|0;if(f>N[e+24>>2]){N[e+24>>2]=f}f=N[l+12>>2];if(!(f>N[e+28>>2])){break s}N[e+28>>2]=f}c=c+1|0;if((p|0)!=(c|0)){continue}break}}r=J[a+56>>2]+1|0;J[a+56>>2]=r;Yg(a,b,i);B=J[a+56>>2];Yg(a,i,p);c=K[a+60|0];i=J[a+56>>2]-z|0;if(!(!c|(i|0)<129)){z=0;p=0;j=J[a+136>>2];b=J[(j+(B<<4)|0)+12>>2];u=(b|0)>=0?1:0-b|0;b=J[(j+(r<<4)|0)+12>>2];h=(b|0)>=0?1:0-b|0;if(h>>>0<=128){c=J[a+152>>2];b=c;z:{if((c|0)!=J[a+156>>2]){break z}b=c;w=c?c<<1:1;if((c|0)>=(w|0)){break z}if(w){J[8369]=J[8369]+1;z=ia[J[6782]](w<<5,16)|0;b=J[a+152>>2]}else{b=c}A:{if((b|0)<=0){break A}if((b|0)!=1){g=b&-2;while(1){m=C<<5;d=m+z|0;D=m+J[a+160>>2]|0;e=J[D+4>>2];J[d>>2]=J[D>>2];J[d+4>>2]=e;e=J[D+28>>2];J[d+24>>2]=J[D+24>>2];J[d+28>>2]=e;e=J[D+20>>2];J[d+16>>2]=J[D+16>>2];J[d+20>>2]=e;e=J[D+12>>2];J[d+8>>2]=J[D+8>>2];J[d+12>>2]=e;e=m|32;d=e+z|0;m=e+J[a+160>>2]|0;e=J[m+4>>2];J[d>>2]=J[m>>2];J[d+4>>2]=e;e=J[m+12>>2];J[d+8>>2]=J[m+8>>2];J[d+12>>2]=e;e=J[m+20>>2];J[d+16>>2]=J[m+16>>2];J[d+20>>2]=e;e=J[m+28>>2];J[d+24>>2]=J[m+24>>2];J[d+28>>2]=e;C=C+2|0;p=p+2|0;if((g|0)!=(p|0)){continue}break}}if(!(b&1)){break A}b=C<<5;e=b+z|0;d=b+J[a+160>>2]|0;b=J[d+4>>2];J[e>>2]=J[d>>2];J[e+4>>2]=b;b=J[d+28>>2];J[e+24>>2]=J[d+24>>2];J[e+28>>2]=b;b=J[d+20>>2];J[e+16>>2]=J[d+16>>2];J[e+20>>2]=b;b=J[d+12>>2];J[e+8>>2]=J[d+8>>2];J[e+12>>2]=b}b=J[a+160>>2];if(!(b?!b|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+160>>2]=z;H[a+164|0]=1;J[a+156>>2]=w;b=J[a+152>>2]}J[a+152>>2]=b+1;c=J[a+160>>2]+(c<<5)|0;b=j+(r<<4)|0;I[c>>1]=L[b>>1];I[c+2>>1]=L[b+2>>1];I[c+4>>1]=L[b+4>>1];I[c+6>>1]=L[b+6>>1];I[c+8>>1]=L[b+8>>1];b=L[b+10>>1];J[c+16>>2]=h;J[c+12>>2]=r;I[c+10>>1]=b}if((u|0)<=128){e=J[a+152>>2];b=e;B:{if((e|0)!=J[a+156>>2]){break B}b=e;w=e?e<<1:1;if((e|0)>=(w|0)){break B}C:{if(!w){b=0;c=e;break C}J[8369]=J[8369]+1;b=ia[J[6782]](w<<5,16)|0;c=J[a+152>>2]}D:{if((c|0)<=0){break D}C=0;if((c|0)!=1){h=c&-2;p=0;while(1){m=C<<5;g=m+b|0;r=m+J[a+160>>2]|0;d=J[r+4>>2];J[g>>2]=J[r>>2];J[g+4>>2]=d;d=J[r+28>>2];J[g+24>>2]=J[r+24>>2];J[g+28>>2]=d;d=J[r+20>>2];J[g+16>>2]=J[r+16>>2];J[g+20>>2]=d;d=J[r+12>>2];J[g+8>>2]=J[r+8>>2];J[g+12>>2]=d;d=m|32;g=d+b|0;m=d+J[a+160>>2]|0;d=J[m+4>>2];J[g>>2]=J[m>>2];J[g+4>>2]=d;d=J[m+12>>2];J[g+8>>2]=J[m+8>>2];J[g+12>>2]=d;d=J[m+20>>2];J[g+16>>2]=J[m+16>>2];J[g+20>>2]=d;d=J[m+28>>2];J[g+24>>2]=J[m+24>>2];J[g+28>>2]=d;C=C+2|0;p=p+2|0;if((h|0)!=(p|0)){continue}break}}if(!(c&1)){break D}c=C<<5;d=c+b|0;g=c+J[a+160>>2]|0;c=J[g+4>>2];J[d>>2]=J[g>>2];J[d+4>>2]=c;c=J[g+28>>2];J[d+24>>2]=J[g+24>>2];J[d+28>>2]=c;c=J[g+20>>2];J[d+16>>2]=J[g+16>>2];J[d+20>>2]=c;c=J[g+12>>2];J[d+8>>2]=J[g+8>>2];J[d+12>>2]=c}c=J[a+160>>2];if(!(c?!c|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+160>>2]=b;H[a+164|0]=1;J[a+156>>2]=w;b=J[a+152>>2]}J[a+152>>2]=b+1;c=J[a+160>>2]+(e<<5)|0;b=j+(B<<4)|0;I[c>>1]=L[b>>1];I[c+2>>1]=L[b+2>>1];I[c+4>>1]=L[b+4>>1];I[c+6>>1]=L[b+6>>1];I[c+8>>1]=L[b+8>>1];b=L[b+10>>1];J[c+16>>2]=u;J[c+12>>2]=B;I[c+10>>1]=b}J[a+168>>2]=J[a+152>>2];c=K[a+60|0]}if(c&255){J[(J[a+136>>2]+(F<<4)|0)+12>>2]=0-i;break a}J[(J[a+96>>2]+(F<<6)|0)+32>>2]=i}ga=l+32|0}function ud(a,b,c,d,e,f){var g=0,h=0,i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=0,G=Q(0),I=Q(0),L=Q(0),M=Q(0),S=0,T=Q(0),U=Q(0),V=0,W=0,X=0,Y=0,Z=0,_=0;i=ga-512|0;ga=i;a:{if((ia[J[J[d>>2]+80>>2]](d)|0)==2){g=(f?36:28)+a|0;j=J[d+152>>2];h=j-1|0;J[g>>2]=h;if(!j){break a}while(1){ud(a,b,c,J[J[d+160>>2]+(h<<2)>>2],e,f);j=J[g>>2];h=j-1|0;J[g>>2]=h;if(j){continue}break}break a}h=(ia[J[J[d>>2]+80>>2]](d)|0)!=1;g=J[e+4>>2];if(!(h|(g|0)!=28)){g=ga-144|0;ga=g;h=J[b+12>>2];j=J[h+12>>2];J[g+88>>2]=J[h+8>>2];J[g+92>>2]=j;j=J[h+4>>2];J[g+80>>2]=J[h>>2];J[g+84>>2]=j;j=J[h+28>>2];J[g+104>>2]=J[h+24>>2];J[g+108>>2]=j;j=J[h+20>>2];J[g+96>>2]=J[h+16>>2];J[g+100>>2]=j;j=J[h+44>>2];J[g+120>>2]=J[h+40>>2];J[g+124>>2]=j;j=J[h+36>>2];J[g+112>>2]=J[h+32>>2];J[g+116>>2]=j;j=J[h+60>>2];J[g+136>>2]=J[h+56>>2];J[g+140>>2]=j;j=J[h+52>>2];J[g+128>>2]=J[h+48>>2];J[g+132>>2]=j;h=J[c+12>>2];o=N[h+52>>2];p=N[h+56>>2];q=N[h+20>>2];r=N[h+24>>2];s=N[h+8>>2];t=N[h>>2];v=N[h+4>>2];w=N[h+48>>2];x=N[h+16>>2];k=N[e+56>>2];l=N[e+48>>2];m=N[e+52>>2];u=Q(Q(N[h+40>>2]*k)+Q(Q(N[h+32>>2]*l)+Q(N[h+36>>2]*m)));N[g+72>>2]=u;q=Q(Q(r*k)+Q(Q(x*l)+Q(q*m)));N[g+68>>2]=q;r=Q(Q(s*k)+Q(Q(t*l)+Q(v*m)));N[g+64>>2]=r;l=Q(Q(Q(p*k)+Q(Q(w*l)+Q(o*m)))+N[e+64>>2]);N[g+76>>2]=l;ia[J[J[d>>2]+8>>2]](d,g+80|0,g+32|0,g+48|0);k=Q(ia[J[J[e>>2]+48>>2]](e));m=Q(k+N[g+52>>2]);N[g+52>>2]=m;o=Q(k+N[g+56>>2]);N[g+56>>2]=o;s=Q(N[g+36>>2]-k);N[g+36>>2]=s;p=Q(k+N[g+48>>2]);N[g+48>>2]=p;t=Q(N[g+32>>2]-k);N[g+32>>2]=t;k=Q(N[g+40>>2]-k);N[g+40>>2]=k;k=Q(Q(k+o)*Q(.5));t=Q(Q(t+p)*Q(.5));s=Q(Q(s+m)*Q(.5));v=Q(Q(u*k)+Q(Q(r*t)+Q(s*q)));k=Q(Q(Q(o-k)*Q(R(u)))+Q(Q(Q(p-t)*Q(R(r)))+Q(Q(m-s)*Q(R(q)))));if(!(l>Q(Q(v+k)+Q(9.999999974752427e-7))|!(Q(l+Q(9.999999974752427e-7))>=Q(v-k)))){ia[J[J[d>>2]+112>>2]](d);k=Q(ia[J[J[d>>2]+48>>2]](d));l=Q(ia[J[J[e>>2]+48>>2]](e));h=J[d+184>>2];if(h){r=Q(k+l);while(1){h=h-1|0;e=J[d+180>>2]+P(h,J[d+192>>2])|0;b:{if(J[d+188>>2]==1){l=Q(O[e+8>>3]*+N[d+160>>2]);m=Q(O[e>>3]*+N[d+156>>2]);k=Q(O[e+16>>3]*+N[d+164>>2]);break b}m=Q(N[e>>2]*N[d+156>>2]);N[g+16>>2]=m;l=Q(N[e+4>>2]*N[d+160>>2]);N[g+20>>2]=l;k=Q(N[e+8>>2]*N[d+164>>2])}J[g+28>>2]=0;o=Q(Q(Q(k*N[g+104>>2])+Q(Q(m*N[g+96>>2])+Q(l*N[g+100>>2])))+N[g+132>>2]);N[g+20>>2]=o;u=N[g+68>>2];p=Q(Q(Q(k*N[g+88>>2])+Q(Q(m*N[g+80>>2])+Q(l*N[g+84>>2])))+N[g+128>>2]);N[g+16>>2]=p;q=N[g+64>>2];k=Q(Q(Q(k*N[g+120>>2])+Q(Q(m*N[g+112>>2])+Q(l*N[g+116>>2])))+N[g+136>>2]);N[g+24>>2]=k;l=N[g+72>>2];k=Q(Q(Q(Q(k*l)+Q(Q(p*q)+Q(o*u)))-N[g+76>>2])-r);c:{if(!(k<Q(0))){break c}if(f){J[g+12>>2]=0;N[g+8>>2]=-l;N[g+4>>2]=-u;N[g>>2]=-q;e=J[a+16>>2];ia[J[J[e>>2]+8>>2]](e,J[a+28>>2],J[a+24>>2]);e=J[a+16>>2];ia[J[J[e>>2]+12>>2]](e,J[a+36>>2],J[a+32>>2]);e=J[a+12>>2];if(!e){e=J[a+4>>2];e=ia[J[J[e>>2]+12>>2]](e,J[c+8>>2],J[b+8>>2])|0;J[a+12>>2]=e}j=J[a+16>>2];J[j+4>>2]=e;ia[J[J[j>>2]+16>>2]](j,g,g+16|0,k);break c}e=J[a+16>>2];ia[J[J[e>>2]+8>>2]](e,J[a+28>>2],J[a+24>>2]);e=J[a+16>>2];ia[J[J[e>>2]+12>>2]](e,J[a+36>>2],J[a+32>>2]);e=J[a+12>>2];if(!e){e=J[a+4>>2];e=ia[J[J[e>>2]+12>>2]](e,J[b+8>>2],J[c+8>>2])|0;J[a+12>>2]=e}j=J[a+16>>2];J[j+4>>2]=e;ia[J[J[j>>2]+16>>2]](j,g- -64|0,g+16|0,k)}if(h){continue}break}}ia[J[J[d>>2]+116>>2]](d)}ga=g+144|0;break a}if((g|0)==31){g=ga-96|0;ga=g;y=J[e+16>>2];if(y){h=J[c+12>>2];T=N[h+56>>2];U=N[h+52>>2];k=N[h+40>>2];l=N[h+36>>2];m=N[h+24>>2];u=N[h+20>>2];G=N[h+48>>2];q=N[h+32>>2];r=N[h+16>>2];o=N[h+8>>2];p=N[h+4>>2];s=N[h>>2];n=J[a+16>>2];while(1){y=y-1|0;h=J[e+24>>2]+P(y,80)|0;F=J[h+64>>2];t=N[h+56>>2];v=N[h+48>>2];w=N[h+52>>2];x=N[h+32>>2];z=N[h>>2];A=N[h+16>>2];B=N[h+36>>2];C=N[h+4>>2];D=N[h+20>>2];I=N[h+40>>2];L=N[h+8>>2];M=N[h+24>>2];J[g+92>>2]=0;J[g+76>>2]=0;J[g+60>>2]=0;J[g+44>>2]=0;N[g+72>>2]=Q(I*k)+Q(Q(L*q)+Q(l*M));N[g+68>>2]=Q(B*k)+Q(Q(C*q)+Q(l*D));N[g+64>>2]=Q(x*k)+Q(Q(z*q)+Q(l*A));N[g+56>>2]=Q(I*m)+Q(Q(L*r)+Q(u*M));N[g+52>>2]=Q(B*m)+Q(Q(C*r)+Q(u*D));N[g+48>>2]=Q(x*m)+Q(Q(z*r)+Q(u*A));N[g+40>>2]=Q(I*o)+Q(Q(L*s)+Q(p*M));N[g+36>>2]=Q(B*o)+Q(Q(C*s)+Q(p*D));N[g+32>>2]=Q(x*o)+Q(Q(z*s)+Q(p*A));N[g+88>>2]=T+Q(Q(t*k)+Q(Q(v*q)+Q(l*w)));N[g+84>>2]=U+Q(Q(t*m)+Q(Q(v*r)+Q(u*w)));N[g+80>>2]=G+Q(Q(t*o)+Q(Q(v*s)+Q(p*w)));h=J[c+8>>2];J[g+28>>2]=y;J[g+24>>2]=-1;J[g+16>>2]=h;J[g+12>>2]=F;J[g+8>>2]=c;J[g+20>>2]=g+32;j=J[n+8>>2];if((h|0)==J[j+8>>2]){n=n+8|0}else{j=J[n+12>>2];n=n+12|0}h=g+8|0;J[n>>2]=h;ud(a,b,h,d,F,f);n=J[a+16>>2];J[n+(J[J[n+8>>2]+8>>2]==J[g+16>>2]?8:12)>>2]=j;if(y){continue}break}}ga=g+96|0;break a}if(g-21>>>0<=8){g=ga-128|0;ga=g;H[g+116|0]=f;J[g+112>>2]=d;J[g+100>>2]=a;J[g+96>>2]=17488;J[g+104>>2]=b;J[g+108>>2]=c;N[g+120>>2]=ia[J[J[e>>2]+48>>2]](e);a=J[c+12>>2];t=N[a+52>>2];v=N[a+56>>2];b=J[b+12>>2];w=N[b+52>>2];x=N[b+56>>2];k=N[a+20>>2];l=N[a+36>>2];z=N[b+20>>2];A=N[b+36>>2];B=N[b+24>>2];m=N[a+24>>2];C=N[b+40>>2];u=N[a+40>>2];D=N[b+32>>2];q=N[a+32>>2];I=N[b>>2];r=N[a>>2];L=N[b+16>>2];o=N[a+16>>2];G=N[a+48>>2];M=N[b+48>>2];p=N[a+4>>2];T=N[b+4>>2];U=N[b+8>>2];s=N[a+8>>2];J[g+92>>2]=0;J[g+76>>2]=0;J[g+60>>2]=0;N[g+72>>2]=Q(C*u)+Q(Q(U*s)+Q(m*B));N[g+68>>2]=Q(A*u)+Q(Q(T*s)+Q(m*z));N[g+56>>2]=Q(C*l)+Q(Q(U*p)+Q(k*B));N[g+52>>2]=Q(A*l)+Q(Q(T*p)+Q(k*z));G=Q(-G);N[g+88>>2]=Q(Q(Q(s*G)-Q(m*t))-Q(u*v))+Q(Q(x*u)+Q(Q(M*s)+Q(m*w)));N[g+84>>2]=Q(Q(Q(p*G)-Q(k*t))-Q(l*v))+Q(Q(x*l)+Q(Q(M*p)+Q(k*w)));J[g+44>>2]=0;N[g+32>>2]=Q(D*q)+Q(Q(I*r)+Q(o*L));N[g+64>>2]=Q(D*u)+Q(Q(I*s)+Q(m*L));N[g+48>>2]=Q(D*l)+Q(Q(I*p)+Q(k*L));N[g+40>>2]=Q(C*q)+Q(Q(U*r)+Q(o*B));N[g+36>>2]=Q(A*q)+Q(Q(T*r)+Q(o*z));N[g+80>>2]=Q(Q(Q(r*G)-Q(o*t))-Q(q*v))+Q(Q(x*q)+Q(Q(M*r)+Q(o*w)));a=g+16|0;ia[J[J[d>>2]+8>>2]](d,g+32|0,a,g);ia[J[J[e>>2]+64>>2]](e,g+96|0,a,g);ga=g+128|0;break a}g=J[b+12>>2];h=J[g+12>>2];J[i+456>>2]=J[g+8>>2];J[i+460>>2]=h;h=J[g+4>>2];J[i+448>>2]=J[g>>2];J[i+452>>2]=h;h=J[g+28>>2];J[i+472>>2]=J[g+24>>2];J[i+476>>2]=h;h=J[g+20>>2];J[i+464>>2]=J[g+16>>2];J[i+468>>2]=h;h=J[g+44>>2];J[i+488>>2]=J[g+40>>2];J[i+492>>2]=h;h=J[g+36>>2];J[i+480>>2]=J[g+32>>2];J[i+484>>2]=h;h=J[g+60>>2];J[i+504>>2]=J[g+56>>2];J[i+508>>2]=h;h=J[g+52>>2];J[i+496>>2]=J[g+48>>2];J[i+500>>2]=h;g=J[c+12>>2];h=J[g+12>>2];J[i+392>>2]=J[g+8>>2];J[i+396>>2]=h;h=J[g+4>>2];J[i+384>>2]=J[g>>2];J[i+388>>2]=h;h=J[g+28>>2];J[i+408>>2]=J[g+24>>2];J[i+412>>2]=h;h=J[g+20>>2];J[i+400>>2]=J[g+16>>2];J[i+404>>2]=h;h=J[g+44>>2];J[i+424>>2]=J[g+40>>2];J[i+428>>2]=h;h=J[g+36>>2];J[i+416>>2]=J[g+32>>2];J[i+420>>2]=h;h=J[g+60>>2];J[i+440>>2]=J[g+56>>2];J[i+444>>2]=h;h=J[g+52>>2];J[i+432>>2]=J[g+48>>2];J[i+436>>2]=h;J[i+372>>2]=0;H[i+376|0]=1;J[i+364>>2]=0;J[i+368>>2]=0;h=i+448|0;j=i+384|0;n=i+360|0;g=ga-96|0;ga=g;d:{if(J[d+68>>2]){k=N[h+20>>2];l=N[h+36>>2];t=N[h+52>>2];m=N[h+24>>2];v=N[h+56>>2];u=N[h+40>>2];q=N[h+32>>2];r=N[h>>2];o=N[h+16>>2];p=N[h+4>>2];s=N[h+8>>2];w=N[h+48>>2];J[g+60>>2]=0;w=Q(-w);x=N[j+56>>2];z=N[j+48>>2];A=N[j+52>>2];N[g+56>>2]=Q(Q(Q(s*w)-Q(m*t))-Q(u*v))+Q(Q(u*x)+Q(Q(s*z)+Q(m*A)));N[g+52>>2]=Q(Q(Q(p*w)-Q(k*t))-Q(l*v))+Q(Q(l*x)+Q(Q(p*z)+Q(k*A)));N[g+48>>2]=Q(Q(Q(r*w)-Q(o*t))-Q(q*v))+Q(Q(q*x)+Q(Q(r*z)+Q(o*A)));t=N[j+20>>2];v=N[j+36>>2];w=N[j+24>>2];x=N[j+40>>2];z=N[j+32>>2];A=N[j>>2];B=N[j+16>>2];C=N[j+4>>2];D=N[j+8>>2];J[g+44>>2]=0;J[g+28>>2]=0;N[g+40>>2]=Q(x*u)+Q(Q(D*s)+Q(m*w));N[g+36>>2]=Q(v*u)+Q(Q(C*s)+Q(m*t));N[g+24>>2]=Q(x*l)+Q(Q(D*p)+Q(k*w));N[g+20>>2]=Q(v*l)+Q(Q(C*p)+Q(k*t));J[g+12>>2]=0;N[g+32>>2]=Q(z*u)+Q(Q(A*s)+Q(m*B));N[g+16>>2]=Q(z*l)+Q(Q(A*p)+Q(k*B));N[g+8>>2]=Q(x*q)+Q(Q(D*r)+Q(o*w));N[g+4>>2]=Q(v*q)+Q(Q(C*r)+Q(o*t));N[g>>2]=Q(z*q)+Q(Q(A*r)+Q(o*B));h=g- -64|0;ia[J[J[e>>2]+8>>2]](e,g,h,g+80|0);Il(d+68|0,h,n);break d}ia[J[J[e>>2]+8>>2]](e,j,g- -64|0,g+80|0);S=ia[J[J[d>>2]+88>>2]](d)|0;if(!S){break d}Z=g+16|0;while(1){S=S-1|0;ia[J[J[d>>2]+120>>2]](d,S,h,g,Z);e:{if(N[g+80>>2]<N[g>>2]|N[g+64>>2]>N[g+16>>2]|(N[g+84>>2]<N[g+4>>2]|N[g+68>>2]>N[g+20>>2])){break e}if(N[g+88>>2]<N[g+8>>2]|N[g+72>>2]>N[g+24>>2]){break e}e=J[n+4>>2];f:{if((e|0)!=J[n+8>>2]){break f}W=e?e<<1:1;if((W|0)<=(e|0)){break f}g:{if(!W){F=0;break g}J[8369]=J[8369]+1;F=ia[J[6782]](W<<2,16)|0;e=J[n+4>>2]}y=J[n+12>>2];h:{i:{if((e|0)>0){X=0;j=0;if(e-1>>>0>=3){_=e&-4;Y=0;while(1){E=j<<2;J[E+F>>2]=J[y+E>>2];V=E|4;J[V+F>>2]=J[y+V>>2];V=E|8;J[V+F>>2]=J[y+V>>2];E=E|12;J[E+F>>2]=J[y+E>>2];j=j+4|0;Y=Y+4|0;if((_|0)!=(Y|0)){continue}break}}e=e&3;if(!e){break i}while(1){E=j<<2;J[E+F>>2]=J[y+E>>2];j=j+1|0;X=X+1|0;if((e|0)!=(X|0)){continue}break}break i}if(!y){break h}}if(y?K[n+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](y)}e=J[n+4>>2]}J[n+12>>2]=F;H[n+16|0]=1;J[n+8>>2]=W}J[J[n+12>>2]+(e<<2)>>2]=S;J[n+4>>2]=J[n+4>>2]+1}if(S){continue}break}}ga=g+96|0;if(J[i+364>>2]){ia[J[J[d>>2]+112>>2]](d);Bb(i- -64|4);J[i+124>>2]=0;J[i+128>>2]=0;J[i+72>>2]=1;J[i+132>>2]=0;J[i+136>>2]=0;J[i+140>>2]=0;J[i+144>>2]=0;J[i+148>>2]=0;J[i+152>>2]=0;J[i+156>>2]=0;J[i+160>>2]=0;J[i+164>>2]=0;J[i+168>>2]=0;J[i+68>>2]=1976;Se(i+172|0);J[i+264>>2]=4;J[i+348>>2]=17412;J[i+340>>2]=17332;J[i+332>>2]=17260;J[i+172>>2]=4488;J[i+64>>2]=d;if(ia[J[J[d>>2]+96>>2]](d)|0){e=i+340|0}else{e=J[i+64>>2];e=ia[J[J[e>>2]+100>>2]](e)|0?i+348|0:i+332|0}J[i+356>>2]=e;J[e+4>>2]=i- -64;g=ia[J[J[d>>2]+92>>2]](d)|0;e=J[i+364>>2];j:{if(!e){break j}e=e-1|0;if(f){while(1){f=e;e=J[J[i+372>>2]+(e<<2)>>2];J[a+32>>2]=e;h=J[i+356>>2];h=ia[J[J[h>>2]>>2]](h,e)|0;if(g){ia[J[J[d>>2]+132>>2]](i,d,e)}j=J[a+28>>2];n=J[a+24>>2];y=J[b+12>>2];e=J[b+8>>2];J[i+4>>2]=h;J[i+8>>2]=e;J[i+12>>2]=y;J[i>>2]=b;J[i+16>>2]=lI(n,j);J[i+20>>2]=ha;j=J[a+16>>2];h=J[j+8>>2];J[((e|0)==J[h+8>>2]?8:12)+j>>2]=i;Mg(a,c,i);J[J[a+16>>2]+8>>2]=h;e=f-1|0;if(f){continue}break j}}if(g){while(1){f=J[J[i+372>>2]+(e<<2)>>2];J[a+24>>2]=f;g=J[i+356>>2];g=ia[J[J[g>>2]>>2]](g,f)|0;ia[J[J[d>>2]+132>>2]](i,d,f);h=J[a+28>>2];j=J[a+24>>2];n=J[b+12>>2];f=J[b+8>>2];J[i+4>>2]=g;J[i+8>>2]=f;J[i+12>>2]=n;J[i>>2]=b;J[i+16>>2]=lI(j,h);J[i+20>>2]=ha;h=J[a+16>>2];g=J[h+8>>2];J[((f|0)==J[g+8>>2]?8:12)+h>>2]=i;Mg(a,i,c);J[J[a+16>>2]+8>>2]=g;f=e;e=e-1|0;if(f){continue}break j}}while(1){f=J[J[i+372>>2]+(e<<2)>>2];J[a+24>>2]=f;g=J[i+356>>2];g=ia[J[J[g>>2]>>2]](g,f)|0;h=J[a+28>>2];j=J[a+24>>2];n=J[b+12>>2];f=J[b+8>>2];J[i>>2]=b;J[i+4>>2]=g;J[i+8>>2]=f;J[i+12>>2]=n;J[i+16>>2]=lI(j,h);J[i+20>>2]=ha;h=J[a+16>>2];g=J[h+8>>2];J[((f|0)==J[g+8>>2]?8:12)+h>>2]=i;Mg(a,i,c);J[J[a+16>>2]+8>>2]=g;f=e;e=e-1|0;if(f){continue}break}}ia[J[J[d>>2]+116>>2]](d);Qa(i+172|0);Qa(i- -64|4)}a=J[i+372>>2];if(!a|!K[i+376|0]){break a}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}ga=i+512|0}function bg(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ga-16|0;ga=l;a:{b:{c:{d:{e:{f:{g:{h:{i:{j:{k:{if(a>>>0<=244){e=J[8387];g=a>>>0<11?16:a+11&-8;c=g>>>3|0;b=e>>>c|0;if(b&3){d=c+((b^-1)&1)|0;b=d<<3;f=J[b+33596>>2];a=f+8|0;c=J[f+8>>2];b=b+33588|0;l:{if((c|0)==(b|0)){J[8387]=kI(d)&e;break l}J[c+12>>2]=b;J[b+8>>2]=c}b=d<<3;J[f+4>>2]=b|3;b=b+f|0;J[b+4>>2]=J[b+4>>2]|1;break a}k=J[8389];if(k>>>0>=g>>>0){break k}if(b){a=2<<c;a=(0-a|a)&b<<c;b=(0-a&a)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;c=(c|a)+(b>>>a|0)|0;a=c<<3;j=J[a+33596>>2];b=J[j+8>>2];a=a+33588|0;m:{if((b|0)==(a|0)){e=kI(c)&e;J[8387]=e;break m}J[b+12>>2]=a;J[a+8>>2]=b}a=j+8|0;J[j+4>>2]=g|3;d=g+j|0;b=c<<3;f=b-g|0;J[d+4>>2]=f|1;J[b+j>>2]=f;if(k){b=k>>>3|0;c=(b<<3)+33588|0;j=J[8392];b=1<<b;n:{if(!(b&e)){J[8387]=b|e;b=c;break n}b=J[c+8>>2]}J[c+8>>2]=j;J[b+12>>2]=j;J[j+12>>2]=c;J[j+8>>2]=b}J[8392]=d;J[8389]=f;break a}h=J[8388];if(!h){break k}b=(0-h&h)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;b=J[((c|a)+(b>>>a|0)<<2)+33852>>2];d=(J[b+4>>2]&-8)-g|0;c=b;while(1){o:{a=J[c+16>>2];if(!a){a=J[c+20>>2];if(!a){break o}}c=(J[a+4>>2]&-8)-g|0;f=c>>>0<d>>>0;d=f?c:d;b=f?a:b;c=a;continue}break}i=J[b+24>>2];f=J[b+12>>2];if((f|0)!=(b|0)){a=J[b+8>>2];J[a+12>>2]=f;J[f+8>>2]=a;break b}c=b+20|0;a=J[c>>2];if(!a){a=J[b+16>>2];if(!a){break j}c=b+16|0}while(1){j=c;f=a;c=a+20|0;a=J[c>>2];if(a){continue}c=f+16|0;a=J[f+16>>2];if(a){continue}break}J[j>>2]=0;break b}g=-1;if(a>>>0>4294967231){break k}a=a+11|0;g=a&-8;i=J[8388];if(!i){break k}d=0-g|0;e=0;p:{if(g>>>0<256){break p}e=31;if(g>>>0>16777215){break p}a=a>>>8|0;j=a+1048320>>>16&8;a=a<<j;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|j))|0;e=(a<<1|g>>>a+21&1)+28|0}c=J[(e<<2)+33852>>2];q:{r:{s:{if(!c){a=0;break s}a=0;b=g<<((e|0)==31?0:25-(e>>>1|0)|0);while(1){t:{h=J[c+4>>2]&-8;j=h-g|0;if(j>>>0>=d>>>0){break t}d=j;f=c;if((g|0)!=(h|0)){break t}d=0;a=c;break r}j=J[c+20>>2];c=J[((b>>>29&4)+c|0)+16>>2];a=j?(j|0)==(c|0)?a:j:a;b=b<<1;if(c){continue}break}}if(!(a|f)){f=0;a=2<<e;a=(0-a|a)&i;if(!a){break k}b=(a&0-a)-1|0;a=b>>>12&16;c=a;b=b>>>a|0;a=b>>>5&8;c=c|a;b=b>>>a|0;a=b>>>2&4;c=c|a;b=b>>>a|0;a=b>>>1&2;c=c|a;b=b>>>a|0;a=b>>>1&1;a=J[((c|a)+(b>>>a|0)<<2)+33852>>2]}if(!a){break q}}while(1){b=(J[a+4>>2]&-8)-g|0;c=b>>>0<d>>>0;d=c?b:d;f=c?a:f;b=J[a+16>>2];if(b){a=b}else{a=J[a+20>>2]}if(a){continue}break}}if(!f|J[8389]-g>>>0<=d>>>0){break k}e=J[f+24>>2];b=J[f+12>>2];if((f|0)!=(b|0)){a=J[f+8>>2];J[a+12>>2]=b;J[b+8>>2]=a;break c}c=f+20|0;a=J[c>>2];if(!a){a=J[f+16>>2];if(!a){break i}c=f+16|0}while(1){j=c;b=a;c=a+20|0;a=J[c>>2];if(a){continue}c=b+16|0;a=J[b+16>>2];if(a){continue}break}J[j>>2]=0;break c}c=J[8389];if(c>>>0>=g>>>0){d=J[8392];b=c-g|0;u:{if(b>>>0>=16){J[8389]=b;a=d+g|0;J[8392]=a;J[a+4>>2]=b|1;J[c+d>>2]=b;J[d+4>>2]=g|3;break u}J[8392]=0;J[8389]=0;J[d+4>>2]=c|3;a=c+d|0;J[a+4>>2]=J[a+4>>2]|1}a=d+8|0;break a}i=J[8390];if(i>>>0>g>>>0){b=i-g|0;J[8390]=b;c=J[8393];a=c+g|0;J[8393]=a;J[a+4>>2]=b|1;J[c+4>>2]=g|3;a=c+8|0;break a}a=0;h=g+47|0;if(J[8505]){c=J[8507]}else{J[8508]=-1;J[8509]=-1;J[8506]=4096;J[8507]=4096;J[8505]=l+12&-16^1431655768;J[8510]=0;J[8498]=0;c=4096}j=h+c|0;f=0-c|0;c=j&f;if(c>>>0<=g>>>0){break a}d=J[8497];if(d){b=J[8495];e=b+c|0;if(e>>>0>d>>>0|b>>>0>=e>>>0){break a}}if(K[33992]&4){break f}v:{w:{d=J[8393];if(d){a=33996;while(1){b=J[a>>2];if(b>>>0<=d>>>0&d>>>0<b+J[a+4>>2]>>>0){break w}a=J[a+8>>2];if(a){continue}break}}b=cc(0);if((b|0)==-1){break g}e=c;d=J[8506];a=d-1|0;if(a&b){e=(c-b|0)+(a+b&0-d)|0}if(e>>>0<=g>>>0|e>>>0>2147483646){break g}d=J[8497];if(d){a=J[8495];f=a+e|0;if(d>>>0<f>>>0|a>>>0>=f>>>0){break g}}a=cc(e);if((b|0)!=(a|0)){break v}break e}e=f&j-i;if(e>>>0>2147483646){break g}b=cc(e);if((b|0)==(J[a>>2]+J[a+4>>2]|0)){break h}a=b}if(!((a|0)==-1|g+48>>>0<=e>>>0)){b=J[8507];b=b+(h-e|0)&0-b;if(b>>>0>2147483646){b=a;break e}if((cc(b)|0)!=-1){e=b+e|0;b=a;break e}cc(0-e|0);break g}b=a;if((a|0)!=-1){break e}break g}f=0;break b}b=0;break c}if((b|0)!=-1){break e}}J[8498]=J[8498]|4}if(c>>>0>2147483646){break d}b=cc(c);a=cc(0);if((b|0)==-1|(a|0)==-1|a>>>0<=b>>>0){break d}e=a-b|0;if(e>>>0<=g+40>>>0){break d}}a=J[8495]+e|0;J[8495]=a;if(a>>>0>M[8496]){J[8496]=a}x:{y:{z:{h=J[8393];if(h){a=33996;while(1){d=J[a>>2];c=J[a+4>>2];if((d+c|0)==(b|0)){break z}a=J[a+8>>2];if(a){continue}break}break y}a=J[8391];if(!(a>>>0<=b>>>0?a:0)){J[8391]=b}a=0;J[8500]=e;J[8499]=b;J[8395]=-1;J[8396]=J[8505];J[8502]=0;while(1){d=a<<3;c=d+33588|0;J[d+33596>>2]=c;J[d+33600>>2]=c;a=a+1|0;if((a|0)!=32){continue}break}d=e-40|0;a=b+8&7?-8-b&7:0;c=d-a|0;J[8390]=c;a=a+b|0;J[8393]=a;J[a+4>>2]=c|1;J[(b+d|0)+4>>2]=40;J[8394]=J[8509];break x}if(K[a+12|0]&8|d>>>0>h>>>0|b>>>0<=h>>>0){break y}J[a+4>>2]=c+e;a=h+8&7?-8-h&7:0;c=a+h|0;J[8393]=c;b=J[8390]+e|0;a=b-a|0;J[8390]=a;J[c+4>>2]=a|1;J[(b+h|0)+4>>2]=40;J[8394]=J[8509];break x}if(M[8391]>b>>>0){J[8391]=b}c=b+e|0;a=33996;A:{B:{C:{D:{E:{F:{while(1){if((c|0)!=J[a>>2]){a=J[a+8>>2];if(a){continue}break F}break}if(!(K[a+12|0]&8)){break E}}a=33996;while(1){c=J[a>>2];if(c>>>0<=h>>>0){f=c+J[a+4>>2]|0;if(f>>>0>h>>>0){break D}}a=J[a+8>>2];continue}}J[a>>2]=b;J[a+4>>2]=J[a+4>>2]+e;j=(b+8&7?-8-b&7:0)+b|0;J[j+4>>2]=g|3;e=c+(c+8&7?-8-c&7:0)|0;i=g+j|0;g=e-i|0;if((e|0)==(h|0)){J[8393]=i;a=J[8390]+g|0;J[8390]=a;J[i+4>>2]=a|1;break B}if(J[8392]==(e|0)){J[8392]=i;a=J[8389]+g|0;J[8389]=a;J[i+4>>2]=a|1;J[a+i>>2]=a;break B}a=J[e+4>>2];if((a&3)==1){f=a&-8;G:{if(a>>>0<=255){c=J[e+8>>2];a=a>>>3|0;b=J[e+12>>2];if((b|0)==(c|0)){J[8387]=J[8387]&kI(a);break G}J[c+12>>2]=b;J[b+8>>2]=c;break G}h=J[e+24>>2];b=J[e+12>>2];H:{if((e|0)!=(b|0)){a=J[e+8>>2];J[a+12>>2]=b;J[b+8>>2]=a;break H}I:{a=e+20|0;d=J[a>>2];if(d){break I}a=e+16|0;d=J[a>>2];if(d){break I}b=0;break H}while(1){c=a;b=d;a=b+20|0;d=J[a>>2];if(d){continue}a=b+16|0;d=J[b+16>>2];if(d){continue}break}J[c>>2]=0}if(!h){break G}c=J[e+28>>2];a=(c<<2)+33852|0;J:{if(J[a>>2]==(e|0)){J[a>>2]=b;if(b){break J}J[8388]=J[8388]&kI(c);break G}J[h+(J[h+16>>2]==(e|0)?16:20)>>2]=b;if(!b){break G}}J[b+24>>2]=h;a=J[e+16>>2];if(a){J[b+16>>2]=a;J[a+24>>2]=b}a=J[e+20>>2];if(!a){break G}J[b+20>>2]=a;J[a+24>>2]=b}g=f+g|0;e=e+f|0}J[e+4>>2]=J[e+4>>2]&-2;J[i+4>>2]=g|1;J[g+i>>2]=g;if(g>>>0<=255){a=g>>>3|0;b=(a<<3)+33588|0;c=J[8387];a=1<<a;K:{if(!(c&a)){J[8387]=a|c;a=b;break K}a=J[b+8>>2]}J[b+8>>2]=i;J[a+12>>2]=i;J[i+12>>2]=b;J[i+8>>2]=a;break B}a=31;if(g>>>0<=16777215){a=g>>>8|0;d=a+1048320>>>16&8;a=a<<d;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|d))|0;a=(a<<1|g>>>a+21&1)+28|0}J[i+28>>2]=a;J[i+16>>2]=0;J[i+20>>2]=0;d=(a<<2)+33852|0;c=J[8388];b=1<<a;L:{if(!(c&b)){J[8388]=b|c;J[d>>2]=i;J[i+24>>2]=d;break L}a=g<<((a|0)==31?0:25-(a>>>1|0)|0);b=J[d>>2];while(1){c=b;if((J[b+4>>2]&-8)==(g|0)){break C}b=a>>>29|0;a=a<<1;d=c+(b&4)|0;b=J[d+16>>2];if(b){continue}break}J[d+16>>2]=i;J[i+24>>2]=c}J[i+12>>2]=i;J[i+8>>2]=i;break B}d=e-40|0;a=b+8&7?-8-b&7:0;c=d-a|0;J[8390]=c;a=a+b|0;J[8393]=a;J[a+4>>2]=c|1;J[(b+d|0)+4>>2]=40;J[8394]=J[8509];a=(f+(f-39&7?39-f&7:0)|0)-47|0;c=a>>>0<h+16>>>0?h:a;J[c+4>>2]=27;a=J[8502];J[c+16>>2]=J[8501];J[c+20>>2]=a;a=J[8500];J[c+8>>2]=J[8499];J[c+12>>2]=a;J[8501]=c+8;J[8500]=e;J[8499]=b;J[8502]=0;a=c+24|0;while(1){J[a+4>>2]=7;b=a+8|0;a=a+4|0;if(b>>>0<f>>>0){continue}break}if((c|0)==(h|0)){break x}J[c+4>>2]=J[c+4>>2]&-2;f=c-h|0;J[h+4>>2]=f|1;J[c>>2]=f;if(f>>>0<=255){a=f>>>3|0;b=(a<<3)+33588|0;c=J[8387];a=1<<a;M:{if(!(c&a)){J[8387]=a|c;a=b;break M}a=J[b+8>>2]}J[b+8>>2]=h;J[a+12>>2]=h;J[h+12>>2]=b;J[h+8>>2]=a;break x}a=31;J[h+16>>2]=0;J[h+20>>2]=0;if(f>>>0<=16777215){a=f>>>8|0;d=a+1048320>>>16&8;a=a<<d;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|d))|0;a=(a<<1|f>>>a+21&1)+28|0}J[h+28>>2]=a;d=(a<<2)+33852|0;c=J[8388];b=1<<a;N:{if(!(c&b)){J[8388]=b|c;J[d>>2]=h;J[h+24>>2]=d;break N}a=f<<((a|0)==31?0:25-(a>>>1|0)|0);b=J[d>>2];while(1){c=b;if((f|0)==(J[b+4>>2]&-8)){break A}b=a>>>29|0;a=a<<1;d=c+(b&4)|0;b=J[d+16>>2];if(b){continue}break}J[d+16>>2]=h;J[h+24>>2]=c}J[h+12>>2]=h;J[h+8>>2]=h;break x}a=J[c+8>>2];J[a+12>>2]=i;J[c+8>>2]=i;J[i+24>>2]=0;J[i+12>>2]=c;J[i+8>>2]=a}a=j+8|0;break a}a=J[c+8>>2];J[a+12>>2]=h;J[c+8>>2]=h;J[h+24>>2]=0;J[h+12>>2]=c;J[h+8>>2]=a}a=J[8390];if(a>>>0<=g>>>0){break d}b=a-g|0;J[8390]=b;c=J[8393];a=c+g|0;J[8393]=a;J[a+4>>2]=b|1;J[c+4>>2]=g|3;a=c+8|0;break a}J[8386]=48;a=0;break a}O:{if(!e){break O}c=J[f+28>>2];a=(c<<2)+33852|0;P:{if(J[a>>2]==(f|0)){J[a>>2]=b;if(b){break P}i=kI(c)&i;J[8388]=i;break O}J[e+(J[e+16>>2]==(f|0)?16:20)>>2]=b;if(!b){break O}}J[b+24>>2]=e;a=J[f+16>>2];if(a){J[b+16>>2]=a;J[a+24>>2]=b}a=J[f+20>>2];if(!a){break O}J[b+20>>2]=a;J[a+24>>2]=b}Q:{if(d>>>0<=15){a=d+g|0;J[f+4>>2]=a|3;a=a+f|0;J[a+4>>2]=J[a+4>>2]|1;break Q}J[f+4>>2]=g|3;e=f+g|0;J[e+4>>2]=d|1;J[e+d>>2]=d;if(d>>>0<=255){a=d>>>3|0;b=(a<<3)+33588|0;c=J[8387];a=1<<a;R:{if(!(c&a)){J[8387]=a|c;a=b;break R}a=J[b+8>>2]}J[b+8>>2]=e;J[a+12>>2]=e;J[e+12>>2]=b;J[e+8>>2]=a;break Q}a=31;if(d>>>0<=16777215){a=d>>>8|0;j=a+1048320>>>16&8;a=a<<j;c=a+520192>>>16&4;a=a<<c;b=a+245760>>>16&2;a=(a<<b>>>15|0)-(b|(c|j))|0;a=(a<<1|d>>>a+21&1)+28|0}J[e+28>>2]=a;J[e+16>>2]=0;J[e+20>>2]=0;b=(a<<2)+33852|0;S:{c=1<<a;T:{if(!(c&i)){J[8388]=c|i;J[b>>2]=e;break T}a=d<<((a|0)==31?0:25-(a>>>1|0)|0);c=J[b>>2];while(1){b=c;if((J[b+4>>2]&-8)==(d|0)){break S}c=a>>>29|0;a=a<<1;j=(c&4)+b|0;c=J[j+16>>2];if(c){continue}break}J[j+16>>2]=e}J[e+24>>2]=b;J[e+12>>2]=e;J[e+8>>2]=e;break Q}a=J[b+8>>2];J[a+12>>2]=e;J[b+8>>2]=e;J[e+24>>2]=0;J[e+12>>2]=b;J[e+8>>2]=a}a=f+8|0;break a}U:{if(!i){break U}c=J[b+28>>2];a=(c<<2)+33852|0;V:{if(J[a>>2]==(b|0)){J[a>>2]=f;if(f){break V}J[8388]=kI(c)&h;break U}J[i+(J[i+16>>2]==(b|0)?16:20)>>2]=f;if(!f){break U}}J[f+24>>2]=i;a=J[b+16>>2];if(a){J[f+16>>2]=a;J[a+24>>2]=f}a=J[b+20>>2];if(!a){break U}J[f+20>>2]=a;J[a+24>>2]=f}W:{if(d>>>0<=15){a=d+g|0;J[b+4>>2]=a|3;a=a+b|0;J[a+4>>2]=J[a+4>>2]|1;break W}J[b+4>>2]=g|3;f=b+g|0;J[f+4>>2]=d|1;J[d+f>>2]=d;if(k){a=k>>>3|0;c=(a<<3)+33588|0;j=J[8392];a=1<<a;X:{if(!(a&e)){J[8387]=a|e;a=c;break X}a=J[c+8>>2]}J[c+8>>2]=j;J[a+12>>2]=j;J[j+12>>2]=c;J[j+8>>2]=a}J[8392]=f;J[8389]=d}a=b+8|0}ga=l+16|0;return a|0}function zg(a,b,c,d,e){var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),S=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ia=Q(0),ja=Q(0),ka=Q(0),la=Q(0),ma=Q(0),na=Q(0),oa=Q(0),pa=Q(0),qa=0,ra=Q(0),sa=Q(0),ta=Q(0),ua=Q(0),va=Q(0),wa=Q(0),xa=Q(0),ya=Q(0),za=Q(0),Aa=Q(0),Ba=Q(0),Ca=Q(0),Da=Q(0),Ea=Q(0),Fa=Q(0),Ia=Q(0),Ja=Q(0),Ka=Q(0),La=Q(0),Ma=Q(0),Oa=Q(0);l=ga-80|0;ga=l;H[a+525|0]=0;H[a+526|0]=0;J[a+500>>2]=0;J[a+504>>2]=0;a:{if(!(K[a+527|0]|!K[a+552|0])){Ia=N[c+52>>2];Ja=N[c+56>>2];q=N[a+412>>2];M=N[a+416>>2];S=N[a+420>>2];Ka=N[b+52>>2];La=N[b+56>>2];V=N[a+348>>2];W=N[a+352>>2];y=N[a+356>>2];i=N[c+20>>2];n=N[c+24>>2];o=N[b+20>>2];u=N[b+24>>2];v=N[a+308>>2];D=N[a+324>>2];E=N[a+340>>2];P=N[a+316>>2];F=N[a+332>>2];X=N[a+304>>2];p=N[b+36>>2];Z=N[a+320>>2];k=N[b+40>>2];_=N[a+336>>2];$=N[a+372>>2];aa=N[a+388>>2];ba=N[a+404>>2];ka=N[a+368>>2];la=N[a+384>>2];ma=N[a+400>>2];h=N[a+568>>2];j=N[a+564>>2];g=N[a+560>>2];G=N[c+36>>2];na=N[a+380>>2];I=N[c+40>>2];oa=N[a+396>>2];Ma=N[c+48>>2];L=N[c+8>>2];x=N[c+4>>2];r=N[c>>2];Oa=N[b+48>>2];t=N[b+8>>2];z=N[b>>2];A=N[b+4>>2];C=N[c+16>>2];m=N[b+16>>2];pa=N[a+300>>2];w=N[b+32>>2];f=N[a+556>>2];s=N[c+32>>2];wa=N[a+364>>2];J[l+76>>2]=0;J[l+60>>2]=0;J[l+44>>2]=0;ra=Q(Q(E*k)+Q(Q(v*w)+Q(D*p)));B=Q(Q(2)/Q(Q(h*h)+Q(Q(j*j)+Q(Q(f*f)+Q(g*g)))));ca=Q(f*B);da=Q(f*ca);O=Q(g*B);ea=Q(g*O);xa=Q(Q(1)-Q(da+ea));sa=Q(Q(ba*I)+Q(Q($*s)+Q(aa*G)));B=Q(j*B);fa=Q(f*B);ha=Q(h*O);ya=Q(fa+ha);ta=Q(Q(oa*I)+Q(Q(wa*s)+Q(na*G)));ia=Q(g*B);ja=Q(h*ca);za=Q(ia-ja);g=Q(Q(ma*I)+Q(Q(ka*s)+Q(la*G)));ca=Q(Q(xa*sa)+Q(Q(ya*ta)+Q(za*g)));ua=Q(Q(F*k)+Q(Q(pa*w)+Q(P*p)));Aa=Q(fa-ha);j=Q(j*B);Ba=Q(Q(1)-Q(ea+j));O=Q(f*O);B=Q(h*B);Ca=Q(O+B);f=Q(Q(Aa*sa)+Q(Q(Ba*ta)+Q(Ca*g)));h=Q(Q(_*k)+Q(Q(X*w)+Q(Z*p)));Da=Q(ia+ja);Ea=Q(O-B);Fa=Q(Q(1)-Q(da+j));j=Q(Q(Da*sa)+Q(Q(Ea*ta)+Q(Fa*g)));N[l+56>>2]=Q(ra*ca)+Q(Q(ua*f)+Q(h*j));B=Q(Q(E*u)+Q(Q(v*m)+Q(D*o)));O=Q(Q(F*u)+Q(Q(pa*m)+Q(P*o)));da=Q(Q(_*u)+Q(Q(X*m)+Q(Z*o)));N[l+52>>2]=Q(B*ca)+Q(Q(O*f)+Q(da*j));ea=Q(Q(ba*n)+Q(Q($*C)+Q(aa*i)));fa=Q(Q(oa*n)+Q(Q(wa*C)+Q(na*i)));ha=Q(Q(ma*n)+Q(Q(ka*C)+Q(la*i)));ia=Q(Q(xa*ea)+Q(Q(ya*fa)+Q(za*ha)));ja=Q(Q(Aa*ea)+Q(Q(Ba*fa)+Q(Ca*ha)));va=Q(Q(Da*ea)+Q(Q(Ea*fa)+Q(Fa*ha)));N[l+40>>2]=Q(ra*ia)+Q(Q(ua*ja)+Q(h*va));N[l+36>>2]=Q(B*ia)+Q(Q(O*ja)+Q(da*va));v=Q(Q(E*t)+Q(Q(v*z)+Q(A*D)));D=Q(-Q(Oa+Q(Q(y*t)+Q(Q(V*z)+Q(A*W)))));m=Q(Ka+Q(Q(y*u)+Q(Q(V*m)+Q(o*W))));p=Q(La+Q(Q(y*k)+Q(Q(V*w)+Q(p*W))));k=Q(Q(Q(v*D)-Q(B*m))-Q(ra*p));o=Q(Q(F*t)+Q(Q(pa*z)+Q(P*A)));w=Q(Q(Q(o*D)-Q(O*m))-Q(ua*p));u=Q(Q(_*t)+Q(Q(X*z)+Q(A*Z)));t=Q(Q(Q(u*D)-Q(da*m))-Q(h*p));N[l+72>>2]=Q(Q(k*ca)+Q(Q(w*f)+Q(t*j)))+Q(Q(Q(sa*Q(0))+Q(Q(ta*Q(0))+Q(g*Q(0))))+Q(Ja+Q(Q(S*I)+Q(Q(q*s)+Q(G*M)))));N[l+68>>2]=Q(Q(k*ia)+Q(Q(w*ja)+Q(t*va)))+Q(Q(Q(ea*Q(0))+Q(Q(fa*Q(0))+Q(ha*Q(0))))+Q(Ia+Q(Q(S*n)+Q(Q(q*C)+Q(i*M)))));J[l+28>>2]=0;N[l+48>>2]=Q(v*ca)+Q(Q(o*f)+Q(u*j));N[l+32>>2]=Q(v*ia)+Q(Q(o*ja)+Q(u*va));f=Q(Q(ba*L)+Q(Q($*r)+Q(x*aa)));g=Q(Q(oa*L)+Q(Q(wa*r)+Q(na*x)));i=Q(Q(ma*L)+Q(Q(ka*r)+Q(x*la)));n=Q(Q(xa*f)+Q(Q(ya*g)+Q(za*i)));p=Q(Q(Aa*f)+Q(Q(Ba*g)+Q(Ca*i)));m=h;h=Q(Q(Da*f)+Q(Q(Ea*g)+Q(Fa*i)));N[l+24>>2]=Q(ra*n)+Q(Q(ua*p)+Q(m*h));N[l+20>>2]=Q(B*n)+Q(Q(O*p)+Q(da*h));N[l+16>>2]=Q(v*n)+Q(Q(o*p)+Q(u*h));N[l+64>>2]=Q(Q(k*n)+Q(Q(w*p)+Q(t*h)))+Q(Q(Q(f*Q(0))+Q(Q(g*Q(0))+Q(i*Q(0))))+Q(Ma+Q(Q(S*L)+Q(Q(q*r)+Q(x*M)))));Na(l+16|0,l);f=N[l+8>>2];h=N[l>>2];g=N[l+4>>2];i=Q(Q(f*f)+Q(Q(h*h)+Q(g*g)));if(Q(R(i))<Q(1.1920928955078125e-7)){break a}J[a+472>>2]=0;m=f;f=Q(Q(1)/Q(Y(i)));N[a+468>>2]=m*f;N[a+464>>2]=g*f;N[a+460>>2]=h*f;f=qb(Q(T(Q(U(N[l+12>>2],Q(-1))),Q(1))));f=Q(f+f);N[a+504>>2]=f;if(Q(R(f))<Q(1.1920928955078125e-7)){break a}H[a+526|0]=1;break a}qa=l+16|0;Na(b,qa);Na(a+300|0,l);f=N[l+24>>2];h=N[l+8>>2];p=N[l+4>>2];k=N[l+20>>2];j=N[l+12>>2];x=N[l+28>>2];r=N[l+16>>2];t=N[l>>2];Na(c,qa);Na(a+364|0,l);g=Q(-0);C=Q(1);z=N[l+16>>2];A=N[l+4>>2];m=N[l+28>>2];w=N[l+8>>2];s=N[l+12>>2];i=N[l+24>>2];q=N[l+20>>2];M=N[l>>2];o=Q(Q(Q(z*A)+Q(Q(m*w)+Q(s*i)))-Q(q*M));G=Q(Q(Q(r*p)+Q(Q(x*h)+Q(j*f)))-Q(k*t));u=Q(Q(Q(i*M)+Q(Q(m*A)+Q(s*q)))-Q(z*w));I=Q(Q(Q(f*t)+Q(Q(x*p)+Q(j*k)))-Q(r*h));n=Q(Q(Q(Q(m*s)-Q(M*z))-Q(q*A))-Q(i*w));L=Q(Q(Q(Q(x*j)-Q(t*r))-Q(k*p))-Q(f*h));x=Q(Q(Q(k*h)+Q(Q(x*t)+Q(r*j)))-Q(f*p));p=Q(Q(Q(q*w)+Q(Q(m*M)+Q(z*s)))-Q(i*A));t=Q(Q(o*G)+Q(Q(u*I)+Q(Q(n*L)+Q(x*p))));h=Q(t*Q(0));z=Q(Q(u*x)+Q(Q(Q(n*G)-Q(L*o))-Q(p*I)));A=Q(Q(o*I)+Q(Q(Q(n*x)-Q(L*p))-Q(u*G)));k=Q(A*Q(0));f=Q(Q(h+z)-k);r=Q(Q(p*G)+Q(Q(Q(n*I)-Q(L*u))-Q(o*x)));h=Q(Q(h+k)-r);j=Q(z*Q(-0));k=Q(j+Q(Q(r*Q(-0))-A));j=Q(j+Q(t+Q(r*Q(0))));m=Q(Q(f*A)+Q(Q(Q(t*h)-Q(k*z))-Q(j*r)));q=m;s=Q(m*m);m=Q(Q(h*r)+Q(Q(Q(t*j)-Q(k*A))-Q(f*z)));f=Q(Q(j*z)+Q(Q(Q(t*f)-Q(k*r))-Q(h*A)));h=Q(Q(1)/Q(Y(Q(s+Q(Q(m*m)+Q(f*f))))));k=Q(q*h);j=Q(m*h);f=Q(f*h);h=Q(Q(k*Q(0))+Q(j+Q(f*Q(0))));if(!(h<Q(-.9999998807907104))){h=Q(h+Q(1));g=Q(Y(Q(h+h)));h=Q(Q(1)/g);y=Q(Q(f+Q(j*Q(-0)))*h);C=Q(Q(Q(j*Q(0))-k)*h);v=Q(g*Q(.5));g=Q(Q(Q(k*Q(0))+Q(f*Q(-0)))*h)}S=Q(-o);V=Q(-u);W=Q(-p);f=Q(Q(1)/Q(Y(Q(Q(v*v)+Q(Q(y*y)+Q(Q(g*g)+Q(C*C)))))));C=Q(C*f);M=Q(v*f);m=Q(y*f);w=Q(g*f);h=N[a+444>>2];y=N[a+456>>2];qa=h>=y;j=N[a+448>>2];b:{if(!(!qa|!(y<=j))){g=qb(Q(T(Q(U(M,Q(-1))),Q(1))));s=Q(g+g);f=Q(0);c:{if(!(s>Q(1.1920928955078125e-7))){break c}g=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(w*w)+Q(C*C))))));k=Q(m*g);i=Q(w*g);g=Q(C*g);f=h;if(!(Q(R(g))>Q(1.1920928955078125e-7))){break c}f=Q(Q(k*k)/Q(g*g));f=Q(Y(Q(Q(f+Q(1))/Q(Q(Q(1)/Q(j*j))+Q(f/Q(h*h))))))}q=N[a+428>>2];y=Q(f*q);if(!(y<s)){break b}H[a+526|0]=1;v=Q(1);y=Q(s-y);N[a+504>>2]=y;N[a+528>>2]=!(f>s)|!(q<Q(.9999998807907104))?v:Q(y/Q(Q(Q(-f)*q)+f));if(Q(R(g))>Q(1.1920928955078125e-7)){f=Q(R(Q(g*Q(Q(j/h)*Q(Q(-k)/g)))));f=k<Q(0)?f:Q(-f);h=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(i*i)+Q(g*g))))));k=Q(h*Q(-f));i=Q(i*h);g=Q(g*h)}J[a+536>>2]=0;J[a+540>>2]=0;J[a+472>>2]=0;J[a+544>>2]=0;J[a+548>>2]=0;j=Q(Q(p*k)+Q(Q(n*Q(-g))-Q(o*i)));s=Q(Q(o*g)+Q(Q(n*Q(-i))-Q(u*k)));q=Q(Q(o*k)+Q(Q(p*i)+Q(u*g)));g=Q(Q(u*i)+Q(Q(n*Q(-k))-Q(p*g)));f=Q(Q(j*p)+Q(Q(s*V)+Q(Q(q*S)+Q(n*g))));N[a+468>>2]=f;h=Q(Q(s*o)+Q(Q(g*W)+Q(Q(q*V)+Q(n*j))));N[a+464>>2]=h;g=Q(Q(g*u)+Q(Q(j*S)+Q(Q(q*W)+Q(n*s))));N[a+460>>2]=g;N[a+492>>2]=Q(1)/Q(Q(Q(f*Q(Q(f*N[d+40>>2])+Q(Q(N[d+8>>2]*g)+Q(h*N[d+24>>2]))))+Q(Q(g*Q(Q(N[d+32>>2]*f)+Q(Q(g*N[d>>2])+Q(N[d+16>>2]*h))))+Q(h*Q(Q(N[d+36>>2]*f)+Q(Q(N[d+4>>2]*g)+Q(h*N[d+20>>2]))))))+Q(Q(f*Q(Q(f*N[e+40>>2])+Q(Q(N[e+8>>2]*g)+Q(h*N[e+24>>2]))))+Q(Q(g*Q(Q(N[e+32>>2]*f)+Q(Q(g*N[e>>2])+Q(h*N[e+16>>2]))))+Q(h*Q(Q(N[e+36>>2]*f)+Q(Q(N[e+4>>2]*g)+Q(h*N[e+20>>2])))))));break b}f=N[a+396>>2];g=N[a+364>>2];i=N[a+380>>2];k=Q(Q(N[c+40>>2]*f)+Q(Q(N[c+32>>2]*g)+Q(i*N[c+36>>2])));v=N[b+40>>2];q=N[a+340>>2];D=N[b+32>>2];E=N[a+308>>2];P=N[b+36>>2];F=N[a+324>>2];ka=Q(Q(v*q)+Q(Q(D*E)+Q(P*F)));s=Q(Q(N[c+8>>2]*f)+Q(Q(N[c>>2]*g)+Q(i*N[c+4>>2])));X=N[b+8>>2];Z=N[b>>2];_=N[b+4>>2];la=Q(Q(X*q)+Q(Q(Z*E)+Q(_*F)));$=N[b+24>>2];aa=N[b+16>>2];B=Q(aa*E);E=N[b+20>>2];ma=Q(Q($*q)+Q(B+Q(E*F)));q=Q(Q(N[c+24>>2]*f)+Q(Q(N[c+16>>2]*g)+Q(i*N[c+20>>2])));g=Q(Q(k*ka)+Q(Q(s*la)+Q(ma*q)));f=N[a+336>>2];i=N[a+304>>2];F=N[a+320>>2];na=Q(Q(v*f)+Q(Q(D*i)+Q(P*F)));oa=Q(Q(X*f)+Q(Q(Z*i)+Q(_*F)));pa=Q(Q($*f)+Q(Q(aa*i)+Q(E*F)));f=Q(Q(k*na)+Q(Q(s*oa)+Q(pa*q)));i=N[a+332>>2];F=N[a+300>>2];ba=N[a+316>>2];v=Q(Q(v*i)+Q(Q(D*F)+Q(ba*P)));D=Q(Q($*i)+Q(Q(aa*F)+Q(ba*E)));E=Q(Q(X*i)+Q(Q(Z*F)+Q(ba*_)));b=h<y;if(!(!b|!(j<y))){if(Q(R(f))<Q(1.1920928955078125e-7)&Q(R(g))<Q(1.1920928955078125e-7)){break b}H[a+526|0]=1;J[a+472>>2]=0;N[a+468>>2]=-Q(Q(s*D)-Q(E*q));N[a+464>>2]=-Q(Q(k*E)-Q(v*s));N[a+460>>2]=-Q(Q(q*v)-Q(D*k));break b}i=Q(Q(k*v)+Q(Q(s*E)+Q(D*q)));P=Q(R(i));d:{if(b){if(P<Q(1.1920928955078125e-7)&Q(R(g))<Q(1.1920928955078125e-7)){break d}H[a+526|0]=1;if(!(j>=y)){break d}h=$a(g,i);if(h>j){f=Q(0);g=Ga(j);i=Ha(j);break d}f=Q(0);if(!(h<Q(-j))){break d}g=Q(-Ga(j));i=Ha(j);break d}if(P<Q(1.1920928955078125e-7)&Q(R(f))<Q(1.1920928955078125e-7)){break d}H[a+526|0]=1;if(!qa){break d}j=$a(f,i);e:{if(j>h){g=Q(0);f=Ga(h);break e}g=Q(0);if(!(j<Q(-h))){break d}f=Q(-Ga(h))}i=Ha(h)}J[a+472>>2]=0;h=Q(Q(g*ka)+Q(Q(i*v)+Q(na*f)));j=Q(Q(g*la)+Q(Q(i*E)+Q(oa*f)));g=Q(Q(g*ma)+Q(Q(i*D)+Q(pa*f)));f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(j*j)+Q(g*g))))));i=Q(g*f);j=Q(j*f);g=Q(Q(s*i)-Q(j*q));h=Q(h*f);f=Q(Q(q*h)-Q(i*k));h=Q(Q(k*j)-Q(h*s));i=Q(Y(Q(Q(g*g)+Q(Q(f*f)+Q(h*h)))));N[a+504>>2]=i;i=Q(Q(1)/i);N[a+468>>2]=i*Q(-g);N[a+464>>2]=i*Q(-h);N[a+460>>2]=i*Q(-f)}k=N[a+452>>2];if(k>=Q(0)){j=Q(Q(m*z)+Q(Q(C*r)+Q(Q(M*t)+Q(A*w))));f=Q(Q(C*A)+Q(Q(Q(M*z)-Q(t*m))-Q(w*r)));g=Q(Q(m*r)+Q(Q(Q(M*A)-Q(t*w))-Q(C*z)));h=Q(Q(w*z)+Q(Q(Q(M*r)-Q(t*C))-Q(m*A)));i=Q(Q(1)/Q(Y(Q(Q(j*j)+Q(Q(f*f)+Q(Q(g*g)+Q(h*h)))))));f=Q(f*i);h=Q(h*i);g=Q(g*i);j=Q(j*i);i=qb(Q(T(Q(U(j,Q(-1))),Q(1))));i=Q(i+i);if(i>Q(3.1415927410125732)){i=qb(Q(T(Q(U(Q(-j),Q(-1))),Q(1))));i=Q(i+i);h=Q(-h);g=Q(-g);f=Q(-f)}N[a+512>>2]=i;if(i>Q(1.1920928955078125e-7)){j=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(g*g)+Q(h*h))))));f=Q(f*j);g=Q(g*j);h=Q(h*j)}r=N[a+428>>2];j=Q(k*r);if(j<i){H[a+525|0]=1;t=Q(i-j);N[a+508>>2]=t;m=Q(1);f:{if(!(i<k)){break f}m=Q(1);if(!(r<Q(.9999998807907104))){break f}m=Q(t/Q(Q(Q(-k)*r)+k))}N[a+532>>2]=m;J[a+488>>2]=0;k=Q(Q(p*f)+Q(Q(n*Q(-h))-Q(o*g)));m=Q(k*p);j=Q(Q(o*h)+Q(Q(n*Q(-g))-Q(u*f)));r=Q(Q(o*f)+Q(Q(p*g)+Q(u*h)));p=Q(Q(u*g)+Q(Q(n*Q(-f))-Q(p*h)));i=Q(m+Q(Q(j*V)+Q(Q(r*S)+Q(n*p))));N[a+484>>2]=i;o=Q(Q(j*o)+Q(Q(p*W)+Q(Q(r*V)+Q(n*k))));N[a+480>>2]=o;n=Q(Q(p*u)+Q(Q(k*S)+Q(Q(r*W)+Q(n*j))));N[a+476>>2]=n;N[a+496>>2]=Q(1)/Q(Q(Q(i*Q(Q(i*N[d+40>>2])+Q(Q(N[d+8>>2]*n)+Q(o*N[d+24>>2]))))+Q(Q(n*Q(Q(N[d+32>>2]*i)+Q(Q(n*N[d>>2])+Q(N[d+16>>2]*o))))+Q(o*Q(Q(N[d+36>>2]*i)+Q(Q(N[d+4>>2]*n)+Q(o*N[d+20>>2]))))))+Q(Q(i*Q(Q(i*N[e+40>>2])+Q(Q(N[e+8>>2]*n)+Q(o*N[e+24>>2]))))+Q(Q(n*Q(Q(N[e+32>>2]*i)+Q(Q(n*N[e>>2])+Q(o*N[e+16>>2]))))+Q(o*Q(Q(N[e+36>>2]*i)+Q(Q(N[e+4>>2]*n)+Q(o*N[e+20>>2])))))))}if(!K[a+526|0]){break a}J[a+548>>2]=0;i=Q(Q(x*f)+Q(Q(L*Q(-h))-Q(G*g)));n=Q(Q(I*g)+Q(Q(L*Q(-f))-Q(x*h)));o=Q(Q(G*f)+Q(Q(x*g)+Q(I*h)));f=Q(Q(G*h)+Q(Q(L*Q(-g))-Q(I*f)));N[a+544>>2]=Q(i*x)+Q(Q(Q(L*n)-Q(o*G))-Q(f*I));N[a+540>>2]=Q(f*G)+Q(Q(Q(L*i)-Q(o*I))-Q(n*x));N[a+536>>2]=Q(n*I)+Q(Q(Q(L*f)-Q(o*x))-Q(i*G));break a}J[a+512>>2]=0}ga=l+80|0}function pl(a){var b=0,c=0,d=0,e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0,A=0,B=0,C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=0,R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=0,X=0,Y=Q(0),Z=Q(0),_=0;k=ga-16|0;ga=k;a:{if(!K[a+356|0]){c=K[a+312|0];break a}H[a+356|0]=0;H[a+352|0]=0;J[a+344>>2]=0;J[a+348>>2]=0;J[a+336>>2]=0;J[a+340>>2]=0;d=K[a+332|0]&-16;H[a+332|0]=d;b=a+316|0;b:{c:{switch(J[a>>2]-1|0){case 0:c=J[a+168>>2];J[a+260>>2]=J[a+164>>2];J[a+264>>2]=c;c=J[a+88>>2];J[a+244>>2]=J[a+84>>2];J[a+248>>2]=c;c=J[a+176>>2];J[a+268>>2]=J[a+172>>2];J[a+272>>2]=c;c=J[a+96>>2];J[a+252>>2]=J[a+92>>2];J[a+256>>2]=c;H[a+352|0]=0;J[a+288>>2]=0;N[a+280>>2]=N[a+248>>2]-N[a+264>>2];N[a+276>>2]=N[a+244>>2]-N[a+260>>2];N[a+284>>2]=N[a+252>>2]-N[a+268>>2];J[a+344>>2]=0;J[a+348>>2]=0;J[a+336>>2]=1065353216;J[a+340>>2]=0;c=1;break b;case 1:g=1;j=N[a+8>>2];e=Q(N[a+24>>2]-j);i=N[a+12>>2];h=Q(N[a+28>>2]-i);l=Q(h*Q(Q(0)-i));m=N[a+4>>2];i=Q(N[a+20>>2]-m);j=Q(l+Q(Q(i*Q(Q(0)-m))+Q(Q(Q(0)-j)*e)));c=1;d:{if(!(j>Q(0))){break d}f=Q(Q(h*h)+Q(Q(i*i)+Q(e*e)));if(!(f>j)){f=Q(1);c=2;break d}f=Q(j/f);c=3}J[a+344>>2]=0;J[a+348>>2]=0;N[a+340>>2]=f;j=Q(Q(1)-f);N[a+336>>2]=j;H[a+332|0]=d|c;J[a+256>>2]=0;e=N[a+92>>2];m=Q(e+Q(f*Q(N[a+108>>2]-e)));N[a+252>>2]=m;e=N[a+88>>2];o=Q(e+Q(f*Q(N[a+104>>2]-e)));N[a+248>>2]=o;e=N[a+84>>2];p=Q(e+Q(f*Q(N[a+100>>2]-e)));N[a+244>>2]=p;l=N[a+180>>2];r=N[a+184>>2];e=N[a+168>>2];s=N[a+188>>2];h=N[a+172>>2];i=N[a+164>>2];J[a+288>>2]=0;h=Q(h+Q(f*Q(s-h)));N[a+284>>2]=m-h;e=Q(e+Q(f*Q(r-e)));N[a+280>>2]=o-e;i=Q(i+Q(f*Q(l-i)));N[a+276>>2]=p-i;J[a+272>>2]=0;N[a+268>>2]=h;N[a+264>>2]=e;N[a+260>>2]=i;if(!(c&2)){J[a>>2]=1;g=0}if(!(c&1)){J[a>>2]=g;c=(g<<4)+a|0;b=J[c+16>>2];J[a+12>>2]=J[c+12>>2];J[a+16>>2]=b;b=J[c+8>>2];J[a+4>>2]=J[c+4>>2];J[a+8>>2]=b;b=J[c+96>>2];J[a+92>>2]=J[c+92>>2];J[a+96>>2]=b;b=J[c+88>>2];J[a+84>>2]=J[c+84>>2];J[a+88>>2]=b;b=J[c+176>>2];J[a+172>>2]=J[c+172>>2];J[a+176>>2]=b;b=J[c+168>>2];J[a+164>>2]=J[c+164>>2];J[a+168>>2]=b}c=j>=Q(0)&f>=Q(0);break b;case 2:J[k+8>>2]=0;J[k+12>>2]=0;J[k>>2]=0;J[k+4>>2]=0;rd(k,a+4|0,a+20|0,a+36|0,b);J[a+256>>2]=0;h=N[a+336>>2];f=N[a+340>>2];e=N[a+344>>2];i=Q(Q(Q(h*N[a+92>>2])+Q(f*N[a+108>>2]))+Q(e*N[a+124>>2]));N[a+252>>2]=i;j=Q(Q(Q(h*N[a+88>>2])+Q(f*N[a+104>>2]))+Q(e*N[a+120>>2]));N[a+248>>2]=j;m=Q(Q(Q(h*N[a+84>>2])+Q(f*N[a+100>>2]))+Q(e*N[a+116>>2]));N[a+244>>2]=m;o=N[a+180>>2];p=N[a+196>>2];l=N[a+168>>2];r=N[a+184>>2];s=N[a+200>>2];u=N[a+172>>2];v=N[a+188>>2];w=N[a+204>>2];x=N[a+164>>2];J[a+288>>2]=0;n=i;i=Q(Q(Q(h*u)+Q(f*v))+Q(e*w));N[a+284>>2]=n-i;n=j;j=Q(Q(Q(h*l)+Q(f*r))+Q(e*s));N[a+280>>2]=n-j;h=Q(Q(Q(h*x)+Q(f*o))+Q(e*p));N[a+276>>2]=m-h;J[a+272>>2]=0;N[a+268>>2]=i;N[a+264>>2]=j;N[a+260>>2]=h;e:{f:{g:{h:{i:{b=J[a>>2];j:{if((b|0)>=4){g=K[a+332|0];if(g&8){c=b;break j}c=b-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+60>>2]=J[b+12>>2];J[a+64>>2]=d;d=J[b+8>>2];J[a+52>>2]=J[b+4>>2];J[a+56>>2]=d;d=J[b+88>>2];J[a+132>>2]=J[b+84>>2];J[a+136>>2]=d;d=J[b+96>>2];J[a+140>>2]=J[b+92>>2];J[a+144>>2]=d;d=J[b+176>>2];J[a+220>>2]=J[b+172>>2];J[a+224>>2]=d;d=J[b+168>>2];J[a+212>>2]=J[b+164>>2];J[a+216>>2]=d;break j}c=3;if((b|0)!=3){break i}g=K[a+332|0]}if(g&4){break h}c=c-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+44>>2]=J[b+12>>2];J[a+48>>2]=d;d=J[b+8>>2];J[a+36>>2]=J[b+4>>2];J[a+40>>2]=d;d=J[b+96>>2];J[a+124>>2]=J[b+92>>2];J[a+128>>2]=d;d=J[b+88>>2];J[a+116>>2]=J[b+84>>2];J[a+120>>2]=d;d=J[b+176>>2];J[a+204>>2]=J[b+172>>2];J[a+208>>2]=d;d=J[b+168>>2];J[a+196>>2]=J[b+164>>2];J[a+200>>2]=d;break h}c=2;if((b|0)<2){break g}g=K[a+332|0]}if(g&2){break f}c=c-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+28>>2]=J[b+12>>2];J[a+32>>2]=d;d=J[b+8>>2];J[a+20>>2]=J[b+4>>2];J[a+24>>2]=d;d=J[b+96>>2];J[a+108>>2]=J[b+92>>2];J[a+112>>2]=d;d=J[b+88>>2];J[a+100>>2]=J[b+84>>2];J[a+104>>2]=d;d=J[b+176>>2];J[a+188>>2]=J[b+172>>2];J[a+192>>2]=d;d=J[b+168>>2];J[a+180>>2]=J[b+164>>2];J[a+184>>2]=d;break f}c=1;if((b|0)!=1){break e}g=K[a+332|0]}if(g&1){break e}c=c-1|0;J[a>>2]=c;c=(c<<4)+a|0;b=J[c+16>>2];J[a+12>>2]=J[c+12>>2];J[a+16>>2]=b;b=J[c+8>>2];J[a+4>>2]=J[c+4>>2];J[a+8>>2]=b;b=J[c+96>>2];J[a+92>>2]=J[c+92>>2];J[a+96>>2]=b;b=J[c+88>>2];J[a+84>>2]=J[c+84>>2];J[a+88>>2]=b;b=J[c+176>>2];J[a+172>>2]=J[c+172>>2];J[a+176>>2]=b;b=J[c+168>>2];J[a+164>>2]=J[c+164>>2];J[a+168>>2]=b}c=0;if(!(e>=Q(0))|(!(N[a+336>>2]>=Q(0))|!(f>=Q(0)))){break b}c=N[a+348>>2]>=Q(0);break b;case 3:break c;default:break b}}J[k+8>>2]=0;J[k+12>>2]=0;J[k>>2]=0;J[k+4>>2]=0;g=ga-48|0;ga=g;H[g+24|0]=0;d=J[k+12>>2];J[b+8>>2]=J[k+8>>2];J[b+12>>2]=d;d=J[k+4>>2];J[b>>2]=J[k>>2];J[b+4>>2]=d;H[b+16|0]=K[b+16|0]|15;S=N[k+8>>2];d=a+4|0;f=N[d+8>>2];R=Q(S-f);A=a+36|0;n=N[A+8>>2];e=Q(n-f);B=a+52|0;t=N[B>>2];h=N[d>>2];i=Q(t-h);C=a+20|0;j=N[C+4>>2];m=N[d+4>>2];o=Q(j-m);p=N[C>>2];l=Q(p-h);F=N[B+4>>2];r=Q(F-m);D=Q(Q(i*o)-Q(l*r));G=N[A>>2];s=Q(G-h);u=N[C+8>>2];v=Q(u-f);T=N[B+8>>2];w=Q(T-f);E=Q(Q(r*v)-Q(o*w));I=N[A+4>>2];x=Q(I-m);L=Q(Q(w*l)-Q(v*i));y=Q(Q(e*D)+Q(Q(s*E)+Q(x*L)));M=Q(R*D);U=N[k>>2];D=Q(U-h);O=Q(D*E);V=N[k+4>>2];E=Q(V-m);W=Q(y*y)<Q(9.99999905104687e-9)?-1:Q(Q(M+Q(O+Q(E*L)))*y)<Q(0);L=Q(Q(l*x)-Q(s*o));M=Q(Q(o*e)-Q(x*v));O=Q(Q(v*s)-Q(e*l));y=Q(Q(w*L)+Q(Q(i*M)+Q(O*r)));Y=Q(f-u);f=Q(t-p);t=Q(I-j);G=Q(G-p);F=Q(F-j);I=Q(Q(f*t)-Q(G*F));Z=Q(h-p);h=Q(n-u);n=Q(T-u);t=Q(Q(F*h)-Q(t*n));h=Q(Q(n*G)-Q(h*f));f=Q(Q(Y*I)+Q(Q(Z*t)+Q(Q(m-j)*h)));m=Q(Q(s*r)-Q(i*x));n=l;l=Q(Q(x*w)-Q(r*e));i=Q(Q(e*i)-Q(w*s));e=Q(Q(v*m)+Q(Q(n*l)+Q(o*i)));z=Q(e*e)<Q(9.99999905104687e-9)?-1:Q(Q(Q(R*m)+Q(Q(D*l)+Q(E*i)))*e)<Q(0);X=Q(f*f)<Q(9.99999905104687e-9)?-1:Q(Q(Q(Q(S-u)*I)+Q(Q(Q(U-p)*t)+Q(Q(V-j)*h)))*f)<Q(0);q=Q(y*y)<Q(9.99999905104687e-9)?-1:Q(Q(Q(R*L)+Q(Q(D*M)+Q(E*O)))*y)<Q(0);P=z|(X|(q|W));k:{if((P|0)<0){H[b+36|0]=1;break k}if(!P){break k}f=Q(3.4028234663852886e38);l:{if(!q){break l}rd(k,d,C,A,g+8|0);h=N[g+16>>2];e=Q(h-N[k+8>>2]);f=Q(e*e);i=N[g+8>>2];e=Q(i-N[k>>2]);l=Q(e*e);j=N[g+12>>2];e=Q(j-N[k+4>>2]);e=Q(f+Q(l+Q(e*e)));f=Q(3.4028234663852886e38);if(!(e<Q(3.4028234663852886e38))){break l}N[b+12>>2]=N[g+20>>2];N[b+8>>2]=h;N[b+4>>2]=j;N[b>>2]=i;q=K[g+24|0];H[b+16|0]=q&1|K[b+16|0]&240|q&2|q&4;f=N[g+36>>2];q=J[g+32>>2];P=J[g+28>>2];J[b+32>>2]=0;N[b+28>>2]=f;J[b+20>>2]=P;J[b+24>>2]=q;f=e}m:{if(!z){break m}rd(k,d,A,B,g+8|0);h=N[g+16>>2];e=Q(h-N[k+8>>2]);l=Q(e*e);i=N[g+8>>2];e=Q(i-N[k>>2]);n=Q(e*e);j=N[g+12>>2];e=Q(j-N[k+4>>2]);e=Q(l+Q(n+Q(e*e)));if(!(e<f)){break m}N[b+12>>2]=N[g+20>>2];N[b+8>>2]=h;N[b+4>>2]=j;N[b>>2]=i;z=K[g+24|0];q=z<<1;H[b+16|0]=q&8|(q&4|(z&1|K[b+16|0]&240));q=J[g+36>>2];z=J[g+32>>2];f=N[g+28>>2];J[b+24>>2]=0;J[b+28>>2]=z;J[b+32>>2]=q;N[b+20>>2]=f;f=e}n:{if(!W){break n}rd(k,d,B,C,g+8|0);h=N[g+16>>2];e=Q(h-N[k+8>>2]);l=Q(e*e);i=N[g+8>>2];e=Q(i-N[k>>2]);n=Q(e*e);j=N[g+12>>2];e=Q(j-N[k+4>>2]);e=Q(l+Q(n+Q(e*e)));if(!(e<f)){break n}N[b+12>>2]=N[g+20>>2];N[b+8>>2]=h;N[b+4>>2]=j;N[b>>2]=i;d=K[g+24|0];H[b+16|0]=d&1|K[b+16|0]&240|d>>>1&2|d<<2&8;f=N[g+36>>2];h=N[g+28>>2];N[b+32>>2]=N[g+32>>2];J[b+28>>2]=0;N[b+24>>2]=f;N[b+20>>2]=h;f=e}_=1;if(!X){break k}rd(k,C,B,A,g+8|0);j=f;f=N[g+16>>2];e=Q(f-N[k+8>>2]);l=Q(e*e);e=N[g+8>>2];h=Q(e-N[k>>2]);n=Q(h*h);h=N[g+12>>2];i=Q(h-N[k+4>>2]);if(!(j>Q(l+Q(n+Q(i*i))))){break k}N[b+12>>2]=N[g+20>>2];N[b+8>>2]=f;N[b+4>>2]=h;N[b>>2]=e;d=K[g+24|0];H[b+16|0]=d&4|K[b+16|0]&240|d<<1&2|d<<2&8;f=N[g+36>>2];e=N[g+28>>2];N[b+32>>2]=N[g+32>>2];N[b+28>>2]=f;N[b+24>>2]=e;J[b+20>>2]=0}ga=g+48|0;if(_){J[a+256>>2]=0;e=N[a+336>>2];h=N[a+340>>2];i=N[a+344>>2];f=N[a+348>>2];j=Q(Q(Q(Q(e*N[a+92>>2])+Q(h*N[a+108>>2]))+Q(i*N[a+124>>2]))+Q(f*N[a+140>>2]));N[a+252>>2]=j;m=Q(Q(Q(Q(e*N[a+88>>2])+Q(h*N[a+104>>2]))+Q(i*N[a+120>>2]))+Q(f*N[a+136>>2]));N[a+248>>2]=m;o=Q(Q(Q(Q(e*N[a+84>>2])+Q(h*N[a+100>>2]))+Q(i*N[a+116>>2]))+Q(f*N[a+132>>2]));N[a+244>>2]=o;J[a+288>>2]=0;J[a+272>>2]=0;p=Q(Q(Q(Q(e*N[a+164>>2])+Q(h*N[a+180>>2]))+Q(i*N[a+196>>2]))+Q(f*N[a+212>>2]));N[a+260>>2]=p;l=Q(Q(Q(Q(e*N[a+168>>2])+Q(h*N[a+184>>2]))+Q(i*N[a+200>>2]))+Q(f*N[a+216>>2]));N[a+264>>2]=l;e=Q(Q(Q(Q(e*N[a+172>>2])+Q(h*N[a+188>>2]))+Q(i*N[a+204>>2]))+Q(f*N[a+220>>2]));N[a+268>>2]=e;N[a+276>>2]=o-p;N[a+280>>2]=m-l;N[a+284>>2]=j-e;o:{p:{q:{r:{s:{b=J[a>>2];t:{if((b|0)>=4){g=K[a+332|0];if(g&8){c=b;break t}c=b-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+60>>2]=J[b+12>>2];J[a+64>>2]=d;d=J[b+8>>2];J[a+52>>2]=J[b+4>>2];J[a+56>>2]=d;d=J[b+96>>2];J[a+140>>2]=J[b+92>>2];J[a+144>>2]=d;d=J[b+88>>2];J[a+132>>2]=J[b+84>>2];J[a+136>>2]=d;d=J[b+176>>2];J[a+220>>2]=J[b+172>>2];J[a+224>>2]=d;d=J[b+168>>2];J[a+212>>2]=J[b+164>>2];J[a+216>>2]=d;break t}c=3;if((b|0)!=3){break s}g=K[a+332|0]}if(g&4){break r}c=c-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+44>>2]=J[b+12>>2];J[a+48>>2]=d;d=J[b+8>>2];J[a+36>>2]=J[b+4>>2];J[a+40>>2]=d;d=J[b+96>>2];J[a+124>>2]=J[b+92>>2];J[a+128>>2]=d;d=J[b+88>>2];J[a+116>>2]=J[b+84>>2];J[a+120>>2]=d;d=J[b+176>>2];J[a+204>>2]=J[b+172>>2];J[a+208>>2]=d;d=J[b+168>>2];J[a+196>>2]=J[b+164>>2];J[a+200>>2]=d;break r}c=2;if((b|0)<2){break q}g=K[a+332|0]}if(g&2){break p}c=c-1|0;J[a>>2]=c;b=(c<<4)+a|0;d=J[b+16>>2];J[a+28>>2]=J[b+12>>2];J[a+32>>2]=d;d=J[b+8>>2];J[a+20>>2]=J[b+4>>2];J[a+24>>2]=d;d=J[b+96>>2];J[a+108>>2]=J[b+92>>2];J[a+112>>2]=d;d=J[b+88>>2];J[a+100>>2]=J[b+84>>2];J[a+104>>2]=d;d=J[b+176>>2];J[a+188>>2]=J[b+172>>2];J[a+192>>2]=d;d=J[b+168>>2];J[a+180>>2]=J[b+164>>2];J[a+184>>2]=d;break p}c=1;if((b|0)!=1){break o}g=K[a+332|0]}if(g&1){break o}c=c-1|0;J[a>>2]=c;c=(c<<4)+a|0;b=J[c+16>>2];J[a+12>>2]=J[c+12>>2];J[a+16>>2]=b;b=J[c+8>>2];J[a+4>>2]=J[c+4>>2];J[a+8>>2]=b;b=J[c+96>>2];J[a+92>>2]=J[c+92>>2];J[a+96>>2]=b;b=J[c+88>>2];J[a+84>>2]=J[c+84>>2];J[a+88>>2]=b;b=J[c+176>>2];J[a+172>>2]=J[c+172>>2];J[a+176>>2]=b;b=J[c+168>>2];J[a+164>>2]=J[c+164>>2];J[a+168>>2]=b}c=N[a+336>>2]>=Q(0)&N[a+340>>2]>=Q(0)&N[a+344>>2]>=Q(0)&f>=Q(0);break b}if(K[a+352|0]){break b}J[a+276>>2]=0;J[a+280>>2]=0;c=1;H[a+312|0]=1;J[a+284>>2]=0;J[a+288>>2]=0;break a}H[a+312|0]=c}ga=k+16|0;return(c&255)!=0}function Iz(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0),g=0,h=0,i=0,j=0,k=0,l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=0,w=Q(0),x=0,y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0);i=ga-96|0;ga=i;c=J[a+136>>2];a:{if(!c){break a}if(!((c|0)<=J[a+8>>2]|(c|0)<=J[a+12>>2])){J[8369]=J[8369]+1;h=ia[J[6782]](c<<4,16)|0;j=J[a+8>>2];b:{if((j|0)<=0){break b}if((j|0)!=1){t=j&-2;while(1){n=d<<4;k=n+h|0;g=n+J[a+16>>2]|0;v=J[g+4>>2];J[k>>2]=J[g>>2];J[k+4>>2]=v;v=J[g+12>>2];J[k+8>>2]=J[g+8>>2];J[k+12>>2]=v;g=n|16;n=g+h|0;g=g+J[a+16>>2]|0;k=J[g+4>>2];J[n>>2]=J[g>>2];J[n+4>>2]=k;k=J[g+12>>2];J[n+8>>2]=J[g+8>>2];J[n+12>>2]=k;d=d+2|0;e=e+2|0;if((t|0)!=(e|0)){continue}break}}if(!(j&1)){break b}e=d<<4;d=e+h|0;e=e+J[a+16>>2]|0;j=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=j;j=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=j}d=J[a+16>>2];if(!(d?!d|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+16>>2]=h;H[a+20|0]=1;J[a+12>>2]=c}J[a+8>>2]=c;if(!((c|0)<=J[a+28>>2]|(c|0)<=J[a+32>>2])){J[8369]=J[8369]+1;h=ia[J[6782]](c<<4,16)|0;j=J[a+28>>2];c:{if((j|0)<=0){break c}d=0;if((j|0)!=1){t=j&-2;e=0;while(1){n=d<<4;k=n+h|0;g=n+J[a+36>>2]|0;v=J[g+4>>2];J[k>>2]=J[g>>2];J[k+4>>2]=v;v=J[g+12>>2];J[k+8>>2]=J[g+8>>2];J[k+12>>2]=v;g=n|16;n=g+h|0;g=g+J[a+36>>2]|0;k=J[g+4>>2];J[n>>2]=J[g>>2];J[n+4>>2]=k;k=J[g+12>>2];J[n+8>>2]=J[g+8>>2];J[n+12>>2]=k;d=d+2|0;e=e+2|0;if((t|0)!=(e|0)){continue}break}}if(!(j&1)){break c}e=d<<4;d=e+h|0;e=e+J[a+36>>2]|0;j=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=j;j=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=j}d=J[a+36>>2];if(!(d?!d|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+36>>2]=h;H[a+40|0]=1;J[a+32>>2]=c}J[a+28>>2]=c;v=J[a+48>>2];if((v|0)<(c|0)){d:{if((c|0)<=J[a+52>>2]){n=c<<2;e=J[a+56>>2];break d}J[8369]=J[8369]+1;n=c<<2;e=ia[J[6782]](n,16)|0;g=J[a+56>>2];e:{t=J[a+48>>2];if((t|0)>0){j=0;d=0;if(t-1>>>0>=3){F=t&-4;h=0;while(1){k=d<<2;N[k+e>>2]=N[g+k>>2];x=k|4;N[x+e>>2]=N[g+x>>2];x=k|8;N[x+e>>2]=N[g+x>>2];k=k|12;N[k+e>>2]=N[g+k>>2];d=d+4|0;h=h+4|0;if((F|0)!=(h|0)){continue}break}}h=t&3;if(!h){break e}while(1){k=d<<2;N[k+e>>2]=N[g+k>>2];d=d+1|0;j=j+1|0;if((h|0)!=(j|0)){continue}break}break e}if(g){break e}J[a+56>>2]=e;J[a+52>>2]=c;H[a+60|0]=1;break d}if(g?K[a+60|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+56>>2]=e;H[a+60|0]=1;J[a+52>>2]=c}d=v<<2;qa(d+e|0,0,n-d|0)}J[a+48>>2]=c;v=J[a+68>>2];if((v|0)<(c|0)){f:{if((c|0)<=J[a+72>>2]){n=c<<2;e=J[a+76>>2];break f}J[8369]=J[8369]+1;n=c<<2;e=ia[J[6782]](n,16)|0;g=J[a+76>>2];g:{t=J[a+68>>2];if((t|0)>0){j=0;d=0;if(t-1>>>0>=3){F=t&-4;h=0;while(1){k=d<<2;N[k+e>>2]=N[g+k>>2];x=k|4;N[x+e>>2]=N[g+x>>2];x=k|8;N[x+e>>2]=N[g+x>>2];k=k|12;N[k+e>>2]=N[g+k>>2];d=d+4|0;h=h+4|0;if((F|0)!=(h|0)){continue}break}}h=t&3;if(!h){break g}while(1){k=d<<2;N[k+e>>2]=N[g+k>>2];d=d+1|0;j=j+1|0;if((h|0)!=(j|0)){continue}break}break g}if(g){break g}J[a+76>>2]=e;J[a+72>>2]=c;H[a+80|0]=1;break f}if(g?K[a+80|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+76>>2]=e;H[a+80|0]=1;J[a+72>>2]=c}d=v<<2;qa(d+e|0,0,n-d|0)}J[a+68>>2]=c;j=J[a+136>>2];if((j|0)<=0){break a}c=J[a+56>>2];g=J[a+76>>2];e=0;d=0;if(j-1>>>0>=3){k=j&-4;h=0;while(1){n=d<<2;J[n+g>>2]=0;J[c+n>>2]=0;t=n|4;J[t+g>>2]=0;J[c+t>>2]=0;t=n|8;J[t+g>>2]=0;J[c+t>>2]=0;n=n|12;J[n+g>>2]=0;J[c+n>>2]=0;d=d+4|0;h=h+4|0;if((k|0)!=(h|0)){continue}break}}h=j&3;if(h){while(1){n=d<<2;J[n+g>>2]=0;J[c+n>>2]=0;d=d+1|0;e=e+1|0;if((h|0)!=(e|0)){continue}break}}if((j|0)<=0){break a}g=i- -64|0;e=0;while(1){h=J[a+144>>2]+P(e,284)|0;d=J[h+88>>2];if(d){c=J[h+104>>2];J[i+56>>2]=J[h+100>>2];J[i+60>>2]=c;c=J[h+96>>2];J[i+48>>2]=J[h+92>>2];J[i+52>>2]=c;c=J[h+120>>2];J[g+8>>2]=J[h+116>>2];J[g+12>>2]=c;c=J[h+112>>2];J[g>>2]=J[h+108>>2];J[g+4>>2]=c;c=J[h+136>>2];J[i+88>>2]=J[h+132>>2];J[i+92>>2]=c;c=J[h+128>>2];J[i+80>>2]=J[h+124>>2];J[i+84>>2]=c;c=(i+48|0)+(J[a+120>>2]<<2)|0;f=N[c>>2];l=N[c+16>>2];m=N[c+32>>2];j=e<<4;c=j+J[a+36>>2]|0;J[c+12>>2]=0;N[c+8>>2]=m;N[c+4>>2]=l;N[c>>2]=f;c=j+J[a+36>>2]|0;l=N[c+8>>2];m=N[h+8>>2];p=N[c>>2];o=N[h>>2];q=N[c+4>>2];s=N[h+4>>2];f=Q(Q(l*m)+Q(Q(p*o)+Q(q*s)));l=Q(l-Q(m*f));m=Q(p-Q(o*f));p=Q(q-Q(s*f));f=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(m*m)+Q(p*p))))));l=Q(l*f);N[c+8>>2]=l;p=Q(p*f);N[c+4>>2]=p;f=Q(m*f);N[c>>2]=f;m=N[h+8>>2];o=N[h>>2];q=N[h+4>>2];c=j+J[a+16>>2]|0;J[c+12>>2]=0;N[c+8>>2]=Q(o*p)-Q(f*q);N[c+4>>2]=Q(m*f)-Q(l*o);N[c>>2]=Q(q*l)-Q(p*m);c=j+J[a+16>>2]|0;f=N[c+8>>2];o=f;m=Q(f*f);f=N[c>>2];l=N[c+4>>2];m=Q(Q(1)/Q(Y(Q(m+Q(Q(f*f)+Q(l*l))))));N[c+8>>2]=o*m;N[c+4>>2]=l*m;N[c>>2]=f*m;c=J[a+116>>2];h=h+16|0;n=e<<2;k=n+J[a+76>>2]|0;j=j+J[a+36>>2]|0;f=N[j+8>>2];l=N[j>>2];m=N[j+4>>2];if(Q(Q(f*f)+Q(Q(l*l)+Q(m*m)))>Q(1.100000023841858)){f=Q(0)}else{r=N[h>>2];p=Q(r-N[c+52>>2]);s=N[h+4>>2];o=Q(s-N[c+56>>2]);w=Q(Q(p*m)-Q(l*o));u=N[h+8>>2];q=Q(u-N[c+60>>2]);A=Q(Q(o*f)-Q(m*q));y=Q(Q(q*l)-Q(f*p));C=Q(Q(N[c+44>>2]*w)+Q(Q(N[c+12>>2]*A)+Q(y*N[c+28>>2])));s=Q(s-N[d+56>>2]);r=Q(r-N[d+52>>2]);z=Q(Q(l*s)-Q(r*m));u=Q(u-N[d+60>>2]);D=Q(Q(m*u)-Q(s*f));G=Q(Q(f*r)-Q(u*l));I=Q(Q(N[d+44>>2]*z)+Q(Q(N[d+12>>2]*D)+Q(G*N[d+28>>2])));B=f;f=N[c+328>>2];E=N[c+332>>2];L=N[d+328>>2];M=N[d+332>>2];O=Q(B*Q(Q(Q(Q(f*o)-Q(p*E))+N[c+320>>2])-Q(Q(Q(L*s)-Q(r*M))+N[d+320>>2])));B=l;l=N[c+336>>2];E=Q(Q(Q(E*q)-Q(o*l))+N[c+312>>2]);o=N[d+336>>2];l=Q(Q(O+Q(Q(B*Q(E-Q(Q(Q(M*u)-Q(s*o))+N[d+312>>2])))+Q(m*Q(Q(Q(Q(l*p)-Q(q*f))+N[c+316>>2])-Q(Q(Q(o*r)-Q(u*L))+N[d+316>>2])))))*Q(-.20000000298023224));f=Q(Q(N[c+36>>2]*w)+Q(Q(N[c+4>>2]*A)+Q(y*N[c+20>>2])));o=Q(Q(f*N[c+396>>2])*f);f=Q(Q(N[c+40>>2]*w)+Q(Q(N[c+8>>2]*A)+Q(y*N[c+24>>2])));o=Q(N[d+344>>2]+Q(N[c+344>>2]+Q(Q(Q(C*N[c+404>>2])*C)+Q(o+Q(f*Q(f*N[c+400>>2]))))));f=Q(Q(N[d+36>>2]*z)+Q(Q(N[d+4>>2]*D)+Q(G*N[d+20>>2])));m=Q(Q(f*N[d+396>>2])*f);f=Q(Q(N[d+40>>2]*z)+Q(Q(N[d+8>>2]*D)+Q(G*N[d+24>>2])));f=Q(l*Q(Q(1)/Q(o+Q(Q(Q(I*N[d+404>>2])*I)+Q(m+Q(f*Q(f*N[d+400>>2])))))))}N[k>>2]=f;d=n+J[a+76>>2]|0;N[d>>2]=N[6781]*N[d>>2];j=J[a+136>>2]}e=e+1|0;if((j|0)>(e|0)){continue}break}if((j|0)<=0){break a}e=J[a+144>>2];h=0;d=0;while(1){h:{i:{j:{n=P(d,284);j=n+e|0;c=J[j+88>>2];if(c){f=N[j+252>>2];if(f==Q(0)){break j}f=Q(f*b);break i}J[J[a+56>>2]+(d<<2)>>2]=0;J[(e+n|0)+280>>2]=1065353216;break h}e=J[a+116>>2];g=J[a+16>>2]+(d<<4)|0;f=N[j+256>>2];J[i+52>>2]=c;J[i+48>>2]=e;k=J[j+20>>2];J[i+56>>2]=J[j+16>>2];J[i+60>>2]=k;k=J[j+28>>2];J[i+64>>2]=J[j+24>>2];J[i+68>>2]=k;k=J[g+4>>2];J[i+72>>2]=J[g>>2];J[i+76>>2]=k;k=J[g+12>>2];J[i+80>>2]=J[g+8>>2];J[i+84>>2]=k;N[i+92>>2]=f==Q(0)?Q(0):f;A=N[j+16>>2];p=Q(A-N[e+52>>2]);f=N[g+4>>2];l=N[g>>2];y=N[j+20>>2];o=Q(y-N[e+56>>2]);s=Q(Q(p*f)-Q(l*o));m=N[g+8>>2];C=N[j+24>>2];q=Q(C-N[e+60>>2]);r=Q(Q(o*m)-Q(f*q));u=Q(Q(q*l)-Q(m*p));w=Q(Q(N[e+296>>2]*s)+Q(Q(N[e+264>>2]*r)+Q(u*N[e+280>>2])));z=Q(Q(N[e+300>>2]*s)+Q(Q(N[e+268>>2]*r)+Q(u*N[e+284>>2])));D=Q(m*Q(Q(w*o)-Q(p*z)));B=o;o=Q(Q(N[e+304>>2]*s)+Q(Q(N[e+272>>2]*r)+Q(u*N[e+288>>2])));z=Q(N[e+344>>2]+Q(D+Q(Q(l*Q(Q(z*q)-Q(B*o)))+Q(f*Q(Q(o*p)-Q(q*w))))));B=m;p=Q(A-N[c+52>>2]);o=Q(y-N[c+56>>2]);s=Q(Q(p*f)-Q(l*o));q=Q(C-N[c+60>>2]);r=Q(Q(o*m)-Q(f*q));m=Q(Q(q*l)-Q(m*p));u=Q(Q(N[c+296>>2]*s)+Q(Q(N[c+264>>2]*r)+Q(m*N[c+280>>2])));w=Q(Q(N[c+300>>2]*s)+Q(Q(N[c+268>>2]*r)+Q(m*N[c+284>>2])));y=l;l=Q(Q(N[c+304>>2]*s)+Q(Q(N[c+272>>2]*r)+Q(m*N[c+288>>2])));N[i+88>>2]=Q(1)/Q(z+Q(N[c+344>>2]+Q(Q(B*Q(Q(u*o)-Q(p*w)))+Q(Q(y*Q(Q(w*q)-Q(o*l)))+Q(f*Q(Q(l*p)-Q(q*u)))))));f=N[i+92>>2];l=Q(-f);e=J[i+48>>2];m=N[e+328>>2];p=N[i+60>>2];o=Q(p-N[e+56>>2]);q=N[i+56>>2];s=Q(q-N[e+52>>2]);r=N[e+332>>2];c=J[i+52>>2];u=N[c+328>>2];p=Q(p-N[c+56>>2]);q=Q(q-N[c+52>>2]);w=N[c+332>>2];C=Q(N[i+80>>2]*Q(Q(Q(Q(m*o)-Q(s*r))+N[e+320>>2])-Q(Q(Q(u*p)-Q(q*w))+N[c+320>>2])));B=r;r=N[i+64>>2];A=Q(r-N[e+60>>2]);y=o;o=N[e+336>>2];r=Q(r-N[c+60>>2]);z=p;p=N[c+336>>2];m=Q(N[i+88>>2]*Q(-Q(C+Q(Q(N[i+72>>2]*Q(Q(Q(Q(B*A)-Q(y*o))+N[e+312>>2])-Q(Q(Q(w*r)-Q(z*p))+N[c+312>>2])))+Q(Q(Q(Q(Q(o*s)-Q(A*m))+N[e+316>>2])-Q(Q(Q(p*q)-Q(r*u))+N[c+316>>2]))*N[i+76>>2])))));f=f<m?f:m;f=f<l?l:f;e=J[a+144>>2]}g=d<<2;k=g+J[a+56>>2]|0;J[k>>2]=0;c=e+n|0;J[c+280>>2]=1065353216;l=N[j+228>>2];m=N[j+276>>2];N[k>>2]=f;f=Q(f*Q(.5));o=Q(f*f);f=N[g+J[a+76>>2]>>2];f=Q(o+Q(f*f));l=Q(l*Q(m*b));if(!(f>Q(l*l))){break h}N[c+280>>2]=Q(l/Q(Y(f)))*N[c+280>>2];h=1}d=d+1|0;c=J[a+136>>2];if((d|0)<(c|0)){continue}break}d=0;if((c|0)>0&h){h=J[a+56>>2];j=J[a+144>>2];g=J[a+76>>2];while(1){n=d<<2;e=n+g|0;k:{if(N[e>>2]==Q(0)){break k}k=j+P(d,284)|0;b=N[k+280>>2];if(!(b<Q(1))){break k}n=h+n|0;N[n>>2]=b*N[n>>2];N[e>>2]=N[k+280>>2]*N[e>>2]}d=d+1|0;if((c|0)!=(d|0)){continue}break}}if((c|0)<=0){break a}d=0;while(1){j=P(d,284);e=j+J[a+144>>2]|0;b=N[e+16>>2];c=J[a+116>>2];f=N[c+52>>2];l=N[e+20>>2];m=N[c+56>>2];p=N[e+24>>2];o=N[c+60>>2];J[i+60>>2]=0;N[i+56>>2]=p-o;N[i+52>>2]=l-m;N[i+48>>2]=b-f;g=d<<2;b=N[g+J[a+56>>2]>>2];if(b!=Q(0)){h=J[a+16>>2]+(d<<4)|0;f=N[h>>2];l=N[h+4>>2];m=N[h+8>>2];J[i+44>>2]=0;N[i+40>>2]=b*m;N[i+36>>2]=b*l;N[i+32>>2]=f*b;ub(c,i+32|0,i+48|0)}g=g+J[a+76>>2]|0;if(N[g>>2]!=Q(0)){c=J[(j+J[a+144>>2]|0)+88>>2];b=N[c+52>>2];f=N[c+56>>2];l=N[c+60>>2];m=N[e+16>>2];p=N[e+20>>2];o=N[e+24>>2];J[i+44>>2]=0;N[i+40>>2]=o-l;N[i+36>>2]=p-f;N[i+32>>2]=m-b;h=J[a+36>>2]+(d<<4)|0;f=N[h>>2];l=N[h+4>>2];m=N[h+8>>2];b=N[g>>2];J[i+28>>2]=0;N[i+24>>2]=b*m;N[i+20>>2]=b*l;N[i+16>>2]=f*b;j=J[a+116>>2];h=j+(J[a+124>>2]<<2)|0;f=N[h+36>>2];l=N[i+56>>2];m=N[h+4>>2];p=N[i+48>>2];o=N[h+20>>2];q=N[i+52>>2];b=Q(Q(Q(f*l)+Q(Q(m*p)+Q(o*q)))*Q(Q(1)-N[e+244>>2]));N[i+56>>2]=l-Q(f*b);N[i+52>>2]=q-Q(o*b);N[i+48>>2]=p-Q(m*b);ub(j,i+16|0,i+48|0);J[i+12>>2]=0;N[i+8>>2]=-N[i+24>>2];N[i+4>>2]=-N[i+20>>2];N[i>>2]=-N[i+16>>2];ub(c,i,i+32|0)}d=d+1|0;if((d|0)<J[a+136>>2]){continue}break}}ga=i+96|0}function Ul(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=Q(0),o=0,p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=0,A=Q(0),B=0,C=Q(0),D=0,E=0,F=0,G=0,O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0);g=ga-96|0;ga=g;H[g+52|0]=1;J[g+48>>2]=0;H[g+72|0]=1;J[g+40>>2]=0;J[g+44>>2]=0;J[g+68>>2]=0;H[g+92|0]=1;J[g+60>>2]=0;J[g+64>>2]=0;J[g+88>>2]=0;J[g+80>>2]=0;J[g+84>>2]=0;J[g+28>>2]=0;H[g+32|0]=1;J[g+20>>2]=0;J[g+24>>2]=0;J[a+72>>2]=0;J[a+76>>2]=0;J[a+64>>2]=0;J[a+68>>2]=0;f=J[a+28>>2];a:{if((f|0)<=0){break a}while(1){d=J[a+36>>2];E=P(y,36);F=J[(d+E|0)+4>>2];if((F|0)>0){z=0;while(1){b=J[(d+E|0)+12>>2];d=J[b+(z<<2)>>2];z=z+1|0;G=(F|0)==(z|0);e=J[b+((G?0:z)<<2)>>2];I[g+10>>1]=e;I[g+8>>1]=d;i=0;b=d<<16>>16;f=e<<16>>16;if((b|0)<(f|0)){I[g+10>>1]=d;I[g+8>>1]=e;f=d;b=e}e=f<<16;c=b<<16>>16;d=e+c&J[g+64>>2]-1;b:{if(d>>>0>=M[g+20>>2]){break b}d=J[J[g+28>>2]+(d<<2)>>2];if((d|0)==-1){break b}k=J[g+48>>2];o=J[g+88>>2];while(1){d=d<<2;j=d+o|0;if(!(L[j>>1]==(b&65535)&L[j+2>>1]==(f&65535))){d=J[d+k>>2];if((d|0)!=-1){continue}break b}break}i=d+J[g+68>>2]|0}d=J[a+16>>2];b=d+(e>>16<<4)|0;d=d+(c<<4)|0;m=Q(N[b+8>>2]-N[d+8>>2]);q=Q(N[b>>2]-N[d>>2]);n=Q(N[b+4>>2]-N[d+4>>2]);s=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(q*q)+Q(n*n))))));m=Q(m*s);n=Q(n*s);q=Q(q*s);b=J[a+48>>2];c:{if((b|0)>0){e=J[a+56>>2];d=0;while(1){f=e+(d<<4)|0;s=N[f+8>>2];u=N[f>>2];v=N[f+4>>2];if(!(+Q(R(Q(s-m)))>1e-6?1:+Q(R(Q(u-q)))>1e-6|+Q(R(Q(v-n)))>1e-6)|!(+Q(R(Q(m+s)))>1e-6?1:+Q(R(Q(q+u)))>1e-6|+Q(R(Q(n+v)))>1e-6)){break c}d=d+1|0;if((b|0)!=(d|0)){continue}break}}d:{if(J[a+52>>2]!=(b|0)){break d}e=b?b<<1:1;if((e|0)<=(b|0)){break d}e:{if(!e){f=0;break e}J[8369]=J[8369]+1;f=ia[J[6782]](e<<4,16)|0;b=J[a+48>>2]}f:{if((b|0)<=0){break f}j=b&1;d=0;if((b|0)!=1){l=b&-2;b=0;while(1){k=d<<4;o=k+f|0;c=k+J[a+56>>2]|0;t=J[c+4>>2];J[o>>2]=J[c>>2];J[o+4>>2]=t;t=J[c+12>>2];J[o+8>>2]=J[c+8>>2];J[o+12>>2]=t;c=k|16;k=c+f|0;c=c+J[a+56>>2]|0;o=J[c+4>>2];J[k>>2]=J[c>>2];J[k+4>>2]=o;o=J[c+12>>2];J[k+8>>2]=J[c+8>>2];J[k+12>>2]=o;d=d+2|0;b=b+2|0;if((l|0)!=(b|0)){continue}break}}if(!j){break f}d=d<<4;b=d+f|0;d=d+J[a+56>>2]|0;c=J[d+4>>2];J[b>>2]=J[d>>2];J[b+4>>2]=c;c=J[d+12>>2];J[b+8>>2]=J[d+8>>2];J[b+12>>2]=c}b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=f;H[a+60|0]=1;J[a+52>>2]=e;b=J[a+48>>2]}b=J[a+56>>2]+(b<<4)|0;J[b+12>>2]=0;N[b+8>>2]=m;N[b+4>>2]=n;N[b>>2]=q;J[a+48>>2]=J[a+48>>2]+1}g:{if(i){I[i+2>>1]=y;break g}I[g>>1]=y;I[g+2>>1]=65535;h:{i:{e=I[g+8>>1];f=L[g+10>>1];c=g+16|0;d=J[c+48>>2];o=e+(f<<16)&d-1;j:{if(o>>>0>=M[c+4>>2]){break j}b=J[J[c+12>>2]+(o<<2)>>2];if((b|0)==-1){break j}i=J[c+32>>2];k=J[c+72>>2];e=e&65535;while(1){j=b<<2;l=j+k|0;if((e|0)==L[l>>1]&(f|0)==L[l+2>>1]){break i}b=J[i+j>>2];if((b|0)!=-1){continue}break}}D=J[c+44>>2];b=D;k:{if((d|0)!=(b|0)){break k}b=d;i=b?b<<1:1;if((b|0)>=(i|0)){break k}l:{if(!i){f=0;e=d;break l}J[8369]=J[8369]+1;f=ia[J[6782]](i<<2,16)|0;e=J[c+44>>2]}m:{if((e|0)<=0){break m}k=0;b=0;if(e-1>>>0>=3){t=e&-4;j=0;while(1){l=b<<2;h=l+f|0;p=l+J[c+52>>2]|0;p=L[p>>1]|L[p+2>>1]<<16;I[h>>1]=p;I[h+2>>1]=p>>>16;h=l|4;p=h+f|0;h=h+J[c+52>>2]|0;h=L[h>>1]|L[h+2>>1]<<16;I[p>>1]=h;I[p+2>>1]=h>>>16;h=l|8;p=h+f|0;h=h+J[c+52>>2]|0;h=L[h>>1]|L[h+2>>1]<<16;I[p>>1]=h;I[p+2>>1]=h>>>16;l=l|12;h=l+f|0;l=l+J[c+52>>2]|0;l=L[l>>1]|L[l+2>>1]<<16;I[h>>1]=l;I[h+2>>1]=l>>>16;b=b+4|0;j=j+4|0;if((t|0)!=(j|0)){continue}break}}e=e&3;if(!e){break m}while(1){j=b<<2;l=j+f|0;j=j+J[c+52>>2]|0;j=L[j>>1]|L[j+2>>1]<<16;I[l>>1]=j;I[l+2>>1]=j>>>16;b=b+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}b=J[c+52>>2];if(!(b?!b|!K[c+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+52>>2]=f;H[c+56|0]=1;J[c+48>>2]=i;b=J[c+44>>2]}b=J[c+52>>2]+(b<<2)|0;f=L[g>>1]|L[g+2>>1]<<16;I[b>>1]=f;I[b+2>>1]=f>>>16;J[c+44>>2]=J[c+44>>2]+1;i=J[c- -64>>2];n:{if((i|0)!=J[c+68>>2]){break n}l=i?i<<1:1;if((l|0)<=(i|0)){break n}o:{if(!l){f=0;break o}J[8369]=J[8369]+1;f=ia[J[6782]](l<<2,16)|0;i=J[c+64>>2]}p:{if((i|0)<=0){break p}k=0;b=0;if(i-1>>>0>=3){t=i&-4;j=0;while(1){e=b<<2;h=e+f|0;p=e+J[c+72>>2]|0;p=L[p>>1]|L[p+2>>1]<<16;I[h>>1]=p;I[h+2>>1]=p>>>16;h=e|4;p=h+f|0;h=h+J[c+72>>2]|0;h=L[h>>1]|L[h+2>>1]<<16;I[p>>1]=h;I[p+2>>1]=h>>>16;h=e|8;p=h+f|0;h=h+J[c+72>>2]|0;h=L[h>>1]|L[h+2>>1]<<16;I[p>>1]=h;I[p+2>>1]=h>>>16;e=e|12;h=e+f|0;e=e+J[c+72>>2]|0;e=L[e>>1]|L[e+2>>1]<<16;I[h>>1]=e;I[h+2>>1]=e>>>16;b=b+4|0;j=j+4|0;if((t|0)!=(j|0)){continue}break}}e=i&3;if(!e){break p}while(1){i=b<<2;j=i+f|0;i=i+J[c+72>>2]|0;i=L[i>>1]|L[i+2>>1]<<16;I[j>>1]=i;I[j+2>>1]=i>>>16;b=b+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}b=J[c+72>>2];if(!(b?!b|!K[c+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+72>>2]=f;H[c+76|0]=1;J[c+68>>2]=l;i=J[c+64>>2]}b=J[c+72>>2]+(i<<2)|0;f=L[g+8>>1]|L[g+10>>1]<<16;I[b>>1]=f;I[b+2>>1]=f>>>16;J[c+64>>2]=J[c+64>>2]+1;if((d|0)<J[c+48>>2]){e=0;i=0;l=0;o=0;k=J[c+48>>2];d=J[c+4>>2];q:{if((k|0)<=(d|0)){break q}r:{if((k|0)<=J[c+8>>2]){e=J[c+12>>2];break r}if(k){J[8369]=J[8369]+1;e=ia[J[6782]](k<<2,16)|0;b=J[c+4>>2]}else{b=d}f=J[c+12>>2];s:{t:{if((b|0)>0){if(b-1>>>0>=3){t=b&-4;while(1){j=i<<2;J[j+e>>2]=J[f+j>>2];h=j|4;J[h+e>>2]=J[f+h>>2];h=j|8;J[h+e>>2]=J[f+h>>2];j=j|12;J[j+e>>2]=J[f+j>>2];i=i+4|0;l=l+4|0;if((t|0)!=(l|0)){continue}break}}b=b&3;if(!b){break t}while(1){j=i<<2;J[j+e>>2]=J[f+j>>2];i=i+1|0;o=o+1|0;if((b|0)!=(o|0)){continue}break}break t}if(f){break t}break s}if(f?K[c+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](f)}}J[c+12>>2]=e;H[c+16|0]=1;J[c+8>>2]=k}qa((d<<2)+e|0,0,k-d<<2);J[c+4>>2]=k;h=k<<2;f=J[c+24>>2];if((f|0)<(k|0)){u:{if((k|0)<=J[c+28>>2]){e=J[c+32>>2];break u}v:{if(!k){e=0;b=f;break v}J[8369]=J[8369]+1;e=ia[J[6782]](h,16)|0;b=J[c+24>>2]}j=J[c+32>>2];w:{if((b|0)>0){o=0;i=0;if(b-1>>>0>=3){p=b&-4;l=0;while(1){t=i<<2;J[t+e>>2]=J[j+t>>2];B=t|4;J[B+e>>2]=J[j+B>>2];B=t|8;J[B+e>>2]=J[j+B>>2];t=t|12;J[t+e>>2]=J[j+t>>2];i=i+4|0;l=l+4|0;if((p|0)!=(l|0)){continue}break}}b=b&3;if(!b){break w}while(1){l=i<<2;J[l+e>>2]=J[j+l>>2];i=i+1|0;o=o+1|0;if((b|0)!=(o|0)){continue}break}break w}if(j){break w}J[c+32>>2]=e;J[c+28>>2]=k;H[c+36|0]=1;break u}if(j?K[c+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](j)}J[c+32>>2]=e;H[c+36|0]=1;J[c+28>>2]=k}qa((f<<2)+e|0,0,k-f<<2)}J[c+24>>2]=k;if((k|0)>0){qa(J[c+12>>2],255,h);qa(J[c+32>>2],255,h)}if((d|0)<=0){break q}f=J[c+32>>2];e=J[c+72>>2];k=J[c+12>>2];i=0;while(1){o=i<<2;b=o+e|0;b=k+(((L[b+2>>1]<<16)+I[b>>1]&J[c+48>>2]-1)<<2)|0;J[f+o>>2]=J[b>>2];J[b>>2]=i;i=i+1|0;if((d|0)!=(i|0)){continue}break}}o=I[g+8>>1]+(L[g+10>>1]<<16)&J[c+48>>2]-1}b=J[c+12>>2]+(o<<2)|0;J[J[c+32>>2]+(D<<2)>>2]=J[b>>2];J[b>>2]=D;break h}b=J[c+52>>2]+(b<<2)|0;d=L[g>>1]|L[g+2>>1]<<16;I[b>>1]=d;I[b+2>>1]=d>>>16}}if(!G){d=J[a+36>>2];continue}break}f=J[a+28>>2]}y=y+1|0;if((y|0)<(f|0)){continue}break}i=0;if((f|0)<=0){break a}i=(f|0)>0;b=J[a+16>>2];l=J[a+36>>2];y=0;while(1){d=l+P(y,36)|0;c=J[d+4>>2];if((c|0)>=3){z=c-1|0;k=J[d+12>>2];e=b+(J[k>>2]<<4)|0;n=N[a+72>>2];q=N[a+68>>2];s=N[a+64>>2];d=1;while(1){o=b+(J[k+(d<<2)>>2]<<4)|0;m=N[o+8>>2];d=d+1|0;j=b+(J[k+((d|0)%(c|0)<<2)>>2]<<4)|0;v=N[j+8>>2];u=N[e>>2];O=N[o>>2];S=Q(u-O);r=N[e+4>>2];T=N[j+4>>2];C=Q(r-T);U=N[j>>2];V=Q(u-U);W=N[o+4>>2];x=Q(r-W);A=Q(Q(S*C)-Q(V*x));_=x;x=N[e+8>>2];X=Q(x-v);Z=Q(x-m);C=Q(Q(_*X)-Q(C*Z));x=Q(Q(Q(x+m)+v)*Q(.3333333432674408));m=Q(Q(Z*V)-Q(X*S));m=Q(Q(Y(Q(Q(A*A)+Q(Q(C*C)+Q(m*m)))))*Q(.5));n=Q(n+Q(x*m));N[a+72>>2]=n;q=Q(q+Q(Q(Q(T+Q(r+W))*Q(.3333333432674408))*m));N[a+68>>2]=q;s=Q(s+Q(Q(Q(U+Q(u+O))*Q(.3333333432674408))*m));N[a+64>>2]=s;w=Q(w+m);if((d|0)!=(z|0)){continue}break}}y=y+1|0;if((y|0)!=(f|0)){continue}break}}J[a+96>>2]=2139095039;m=Q(Q(1)/w);q=Q(m*N[a+64>>2]);N[a+64>>2]=q;s=Q(m*N[a+68>>2]);N[a+68>>2]=s;w=Q(m*N[a+72>>2]);N[a+72>>2]=w;u=Q(3.4028234663852886e38);m=Q(3.4028234663852886e38);if(i){e=J[a+36>>2];b=0;while(1){d=e+P(b,36)|0;n=Q(R(Q(N[d+32>>2]+Q(Q(w*N[d+28>>2])+Q(Q(q*N[d+20>>2])+Q(N[d+24>>2]*s))))));if(n<m){N[a+96>>2]=n;m=n}b=b+1|0;if((f|0)!=(b|0)){continue}break}}f=J[a+8>>2];x:{if((f|0)<=0){v=Q(-3.4028234663852886e38);n=Q(3.4028234663852886e38);q=Q(-3.4028234663852886e38);s=Q(-3.4028234663852886e38);w=Q(3.4028234663852886e38);break x}e=J[a+16>>2];s=Q(-3.4028234663852886e38);d=0;w=Q(3.4028234663852886e38);q=Q(-3.4028234663852886e38);v=Q(-3.4028234663852886e38);n=Q(3.4028234663852886e38);while(1){b=e+(d<<4)|0;r=N[b+8>>2];s=s<r?r:s;n=n>r?r:n;r=N[b+4>>2];q=q<r?r:q;u=r<u?r:u;r=N[b>>2];v=r>v?r:v;w=r<w?r:w;d=d+1|0;if((f|0)!=(d|0)){continue}break}}d=0;J[a+128>>2]=0;x=Q(s-n);N[a+124>>2]=x;r=Q(q-u);N[a+120>>2]=r;A=Q(v-w);N[a+116>>2]=A;J[a+112>>2]=0;N[a+108>>2]=n+s;N[a+104>>2]=u+q;N[a+100>>2]=v+w;b=r>A;f=x>(b?r:A)?2:b;b=f<<2;n=N[b+(a+116|0)>>2];m=Q(m/Q(1.7320507764816284));N[a+84>>2]=m;N[a+88>>2]=m;N[a+80>>2]=m;b=b+(a+80|0)|0;n=Q(n*Q(.5));N[b>>2]=n;n=Q(Q(n-m)*Q(.0009765625));y:{z:{while(1){if(Vl(a)){break z}N[b>>2]=N[b>>2]-n;d=d+1|0;if((d|0)!=1024){continue}break}N[a+84>>2]=m;N[a+88>>2]=m;N[a+80>>2]=m;break y}d=a+80|0;b=1<<f&3;f=d+(b<<2)|0;d=d+((1<<b&3)<<2)|0;m=Q(Q(N[a+96>>2]-m)*Q(.0009765625));b=0;while(1){A:{n=N[d>>2];q=N[f>>2];N[f>>2]=m+q;N[d>>2]=m+N[d>>2];if(!Vl(a)){break A}b=b+1|0;if((b|0)!=1024){continue}break y}break}N[f>>2]=q;N[d>>2]=n}a=J[g+88>>2];if(!(a?!a|!K[g+92|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[g+88>>2]=0;H[g+92|0]=1;J[g+80>>2]=0;J[g+84>>2]=0;a=J[g+68>>2];if(!(a?!a|!K[g+72|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[g+68>>2]=0;H[g+72|0]=1;J[g+60>>2]=0;J[g+64>>2]=0;a=J[g+48>>2];if(!(a?!a|!K[g+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[g+48>>2]=0;H[g+52|0]=1;J[g+40>>2]=0;J[g+44>>2]=0;a=J[g+28>>2];if(!(a?!a|!K[g+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=g+96|0}function aB(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=0,R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=0,W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=0,aa=0,ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ga=Q(0),ha=Q(0),ia=Q(0),ja=Q(0),ka=Q(0),la=0,ma=0;e=J[a+32>>2];$=e+328|0;c=J[a+28>>2];aa=c+328|0;e=e+4|0;c=c+4|0;if(K[a+739|0]){R=N[J[a+32>>2]+344>>2];T=N[J[a+28>>2]+344>>2];d=Q(R+T);i=d>Q(0)?Q(R/d):Q(.5);o=Q(Q(1)-i);d=N[a+672>>2];j=N[e+40>>2];t=N[a+664>>2];s=N[e+32>>2];p=N[e+36>>2];g=N[a+668>>2];m=N[e+56>>2];ga=Q(Q(Q(d*j)+Q(Q(t*s)+Q(p*g)))+m);y=Q(ga-m);M=y;m=N[a+592>>2];k=N[c+40>>2];n=N[a+560>>2];x=N[c+32>>2];h=N[a+576>>2];A=N[c+36>>2];U=Q(Q(m*k)+Q(Q(n*x)+Q(h*A)));q=N[a+656>>2];E=Q(q*j);j=N[a+624>>2];u=Q(j*s);s=N[a+640>>2];W=Q(E+Q(u+Q(s*p)));p=Q(Q(U*i)+Q(W*o));E=p;S=Q(p*p);u=N[c+8>>2];z=N[c>>2];C=N[c+4>>2];ba=Q(Q(m*u)+Q(Q(n*z)+Q(C*h)));w=N[e+8>>2];I=N[e>>2];X=N[e+4>>2];ca=Q(Q(q*w)+Q(Q(j*I)+Q(X*s)));p=Q(Q(ba*i)+Q(ca*o));D=N[c+24>>2];L=N[c+16>>2];G=N[c+20>>2];ea=Q(Q(m*D)+Q(Q(n*L)+Q(h*G)));Z=N[e+24>>2];h=j;j=N[e+16>>2];m=s;s=N[e+20>>2];fa=Q(Q(q*Z)+Q(Q(h*j)+Q(m*s)));h=Q(Q(ea*i)+Q(fa*o));q=Q(Q(1)/Q(Y(Q(S+Q(Q(p*p)+Q(h*h))))));m=Q(E*q);E=Q(y*m);n=N[e+48>>2];X=Q(n+Q(Q(d*w)+Q(Q(t*I)+Q(X*g))));y=Q(X-n);n=Q(p*q);j=Q(Q(d*Z)+Q(Q(t*j)+Q(s*g)));d=N[e+52>>2];Z=Q(j+d);j=Q(Z-d);t=Q(h*q);d=Q(E+Q(Q(y*n)+Q(j*t)));s=Q(m*d);I=Q(M-s);g=N[a+608>>2];h=N[a+600>>2];q=N[a+604>>2];p=N[c+56>>2];ha=Q(Q(Q(g*k)+Q(Q(h*x)+Q(A*q)))+p);p=Q(ha-p);w=N[c+48>>2];ia=Q(w+Q(Q(g*u)+Q(Q(h*z)+Q(C*q))));w=Q(ia-w);h=Q(Q(g*D)+Q(Q(h*L)+Q(G*q)));g=N[c+52>>2];ja=Q(h+g);h=Q(ja-g);g=Q(Q(m*p)+Q(Q(w*n)+Q(h*t)));E=Q(m*g);S=Q(E-s);q=Q(I-Q(o*S));s=j;j=Q(t*d);da=Q(s-j);_=Q(t*g);M=Q(_-j);j=Q(da-Q(o*M));d=Q(n*d);ka=Q(y-d);g=Q(n*g);d=Q(g-d);s=Q(ka-Q(o*d));E=Q(p-E);p=Q(E+Q(i*S));S=Q(h-_);y=Q(S+Q(i*M));g=Q(w-g);w=Q(g+Q(i*d));e=R<Q(1.1920928955078125e-7);c=T<Q(1.1920928955078125e-7);d=Q(Q(i*I)+Q(o*E));h=Q(Q(i*ka)+Q(o*g));I=Q(Q(i*da)+Q(o*S));g=Q(Q(d*d)+Q(Q(h*h)+Q(I*I)));a:{if(g>Q(1.1920928955078125e-7)){k=Q(Q(1)/Q(Y(g)));g=Q(d*k);d=Q(I*k);h=Q(h*k);break a}g=N[a+588>>2];d=Q(g*u);u=N[a+556>>2];h=Q(u*z);z=N[a+572>>2];h=Q(d+Q(h+Q(C*z)));d=Q(Q(g*D)+Q(Q(u*L)+Q(z*G)));g=Q(Q(g*k)+Q(Q(u*x)+Q(z*A)))}r=J[b+24>>2];l=c|e;f=J[b+12>>2];N[f+8>>2]=Q(w*d)-Q(h*y);N[f+4>>2]=Q(p*h)-Q(g*w);N[f>>2]=Q(y*g)-Q(d*p);c=J[b+20>>2];N[c+8>>2]=-Q(Q(s*d)-Q(h*j));N[c+4>>2]=-Q(Q(q*h)-Q(g*s));N[c>>2]=-Q(Q(j*g)-Q(d*q));k=Q(Q(m*h)-Q(g*n));x=Q(Q(t*g)-Q(d*m));u=Q(Q(s*k)-Q(x*j));A=Q(Q(n*d)-Q(h*t));z=Q(Q(q*x)-Q(A*s));C=Q(Q(j*A)-Q(k*q));D=Q(Q(w*k)-Q(x*y));L=Q(Q(p*x)-Q(A*w));G=Q(Q(y*A)-Q(k*p));I=Q(-j);E=Q(-s);S=Q(-q);da=Q(-y);_=Q(-w);M=Q(-p);B=K[a+716|0];if(!(!(T<Q(1.1920928955078125e-7)|R<Q(1.1920928955078125e-7))|!B)){D=Q(i*D);L=Q(i*L);G=Q(i*G);z=Q(o*z);C=Q(o*C);u=Q(o*u)}v=r<<2;e=v+f|0;N[e+8>>2]=D;N[e+4>>2]=L;N[e>>2]=G;N[c+v>>2]=-C;O=r+1|0;N[c+(O<<2)>>2]=-z;V=r+2|0;N[c+(V<<2)>>2]=-u;s=Q(Q(s*t)+Q(n*I));q=Q(Q(q*n)+Q(m*E));j=Q(Q(j*m)+Q(t*S));w=Q(Q(w*t)+Q(n*da));p=Q(Q(p*n)+Q(m*_));y=Q(Q(y*m)+Q(t*M));if(l){w=Q(i*w);p=Q(i*p);y=Q(i*y);s=Q(o*s);j=Q(o*j);q=Q(o*q)}i=Q(-t);o=Q(-n);R=Q(-m);l=r<<1;v=l<<2;e=v+f|0;N[e+8>>2]=w;N[e+4>>2]=p;N[e>>2]=y;N[c+v>>2]=-j;la=l|1;N[c+(la<<2)>>2]=-q;ma=l+2|0;N[c+(ma<<2)>>2]=-s;b:{if(K[a+736|0]){q=Q(-A);j=Q(-k);s=Q(-x);p=Q(-g);y=Q(-d);w=Q(-h);e=J[b+28>>2];break b}u=N[b+4>>2];z=N[b>>2];e=J[b+8>>2];N[e+8>>2]=g;N[e+4>>2]=d;N[e>>2]=h;v=r<<2;F=v+e|0;N[F+8>>2]=A;N[F+4>>2]=k;N[F>>2]=x;l=l<<2;e=l+e|0;N[e+8>>2]=m;N[e+4>>2]=t;N[e>>2]=n;e=J[b+16>>2];p=Q(-g);N[e+8>>2]=p;y=Q(-d);N[e+4>>2]=y;w=Q(-h);N[e>>2]=w;s=Q(-x);N[e+v>>2]=s;j=Q(-k);N[e+(O<<2)>>2]=j;q=Q(-A);N[e+(V<<2)>>2]=q;N[e+l>>2]=o;N[e+(la<<2)>>2]=i;N[e+(ma<<2)>>2]=R;e=J[b+28>>2];u=Q(z*u);z=Q(ga-ha);C=Q(X-ia);D=Q(Z-ja);N[e>>2]=u*Q(Q(g*z)+Q(Q(h*C)+Q(D*d)));N[e+v>>2]=u*Q(Q(A*z)+Q(Q(x*C)+Q(D*k)));N[e+l>>2]=u*Q(Q(m*z)+Q(Q(n*C)+Q(D*t)))}l=P(r,12);N[l+f>>2]=h;v=l+8|0;N[v+f>>2]=g;F=l+4|0;N[F+f>>2]=d;r=r<<4;N[r+f>>2]=x;O=r|4;N[O+f>>2]=k;V=r|8;N[V+f>>2]=A;N[c+l>>2]=w;N[c+v>>2]=p;N[c+F>>2]=y;N[c+r>>2]=s;N[c+O>>2]=j;N[c+V>>2]=q;q=Q(N[b>>2]*N[b+4>>2]);j=Q(Q(ba*fa)-Q(ca*ea));p=Q(j*g);g=Q(Q(ea*W)-Q(fa*U));s=Q(g*h);h=Q(Q(U*ca)-Q(W*ba));N[e+l>>2]=q*Q(p+Q(s+Q(h*d)));N[e+r>>2]=q*Q(Q(j*A)+Q(Q(g*x)+Q(h*k)));c:{d:{if(B){l=!K[a+737|0];d=Q(N[a+708>>2]*N[a+732>>2]);e=d>Q(0)?1:2;break d}if(!K[a+737|0]){break c}l=0;d=Q(0);e=0}r=P(J[b+24>>2],5);v=r<<2;N[v+f>>2]=n;F=v+8|0;N[F+f>>2]=m;O=f;f=v+4|0;N[O+f>>2]=t;N[c+F>>2]=R;N[c+f>>2]=i;N[c+v>>2]=o;c=a+688|0;i=xe(c);o=ye(c);c=J[b+28>>2];J[v+c>>2]=0;f=J[a+748>>2];g=N[(f&2?a+760|0:b+4|0)>>2];if(!(l|(B|0)!=0&i==o)){if(f&4){N[J[b+32>>2]+(r<<2)>>2]=N[a+752>>2]}h=od(N[a+728>>2],i,o,N[a+680>>2],Q(g*N[b>>2]));c=J[b+28>>2];f=r<<2;l=c+f|0;N[l>>2]=Q(Q(h*N[a+680>>2])*N[a+732>>2])+N[l>>2];N[f+J[b+36>>2]>>2]=-N[a+684>>2];N[f+J[b+40>>2]>>2]=N[a+684>>2]}if(!B){break c}f=r<<2;c=f+c|0;N[c>>2]=Q(Q(g*N[b>>2])*d)+N[c>>2];if(H[a+748|0]&1){N[f+J[b+32>>2]>>2]=N[a+756>>2]}e:{if(i==o){J[J[b+36>>2]+(r<<2)>>2]=-8388609;d=Q(3.4028234663852886e38);break e}f=J[b+36>>2]+(r<<2)|0;if((e|0)==1){J[f>>2]=0;e=1;d=Q(3.4028234663852886e38);break e}J[f>>2]=-8388609;d=Q(0)}N[J[b+40>>2]+(r<<2)>>2]=d;i=N[a+704>>2];f:{if(!(i>Q(0))){break f}d=Q(Q(Q(N[aa+8>>2]*m)+Q(Q(N[aa>>2]*n)+Q(N[aa+4>>2]*t)))-Q(Q(N[$+8>>2]*m)+Q(Q(N[$>>2]*n)+Q(t*N[$+4>>2]))));g:{if((e|0)==1){if(!(d<Q(0))){break f}d=Q(d*Q(-i));if(d>N[c>>2]){break g}break f}if(!(d>Q(0))){break f}d=Q(d*Q(-i));if(!(d<N[c>>2])){break f}}N[c>>2]=d}N[c>>2]=N[a+700>>2]*N[c>>2]}return}g=N[a+656>>2];z=N[e+40>>2];ea=Q(g*z);h=N[a+624>>2];C=N[e+32>>2];k=N[a+640>>2];D=N[e+36>>2];fa=Q(Q(h*C)+Q(k*D));L=N[e+24>>2];I=Q(g*L);G=N[e+16>>2];T=N[e+20>>2];ga=Q(Q(h*G)+Q(k*T));x=N[a+592>>2];d=N[c+40>>2];X=Q(x*d);A=N[a+560>>2];i=N[c+32>>2];q=N[a+576>>2];o=N[c+36>>2];Z=Q(Q(A*i)+Q(q*o));j=N[a+588>>2];ha=Q(j*d);s=N[a+556>>2];p=N[a+572>>2];ia=Q(Q(s*i)+Q(p*o));y=N[a+584>>2];ja=Q(y*d);w=N[a+552>>2];R=N[a+568>>2];E=Q(Q(w*i)+Q(R*o));m=N[c+24>>2];S=Q(x*m);n=N[c+16>>2];t=N[c+20>>2];da=Q(Q(A*n)+Q(q*t));u=N[a+672>>2];M=Q(u*z);z=N[a+664>>2];U=Q(z*C);C=N[a+668>>2];D=Q(Q(M+Q(U+Q(D*C)))+N[e+56>>2]);L=Q(Q(Q(u*L)+Q(Q(z*G)+Q(T*C)))+N[e+52>>2]);G=N[a+608>>2];T=N[a+600>>2];U=N[a+604>>2];W=N[c+56>>2];ba=Q(Q(Q(G*d)+Q(Q(T*i)+Q(o*U)))+W);d=N[c+52>>2];ca=Q(Q(Q(G*m)+Q(Q(T*n)+Q(t*U)))+d);M=h;h=N[e>>2];_=N[e+4>>2];M=Q(Q(M*h)+Q(_*k));k=N[e+8>>2];ka=Q(g*k);i=N[c>>2];o=N[c+4>>2];A=Q(Q(A*i)+Q(o*q));g=N[c+8>>2];q=Q(x*g);h=Q(N[e+48>>2]+Q(Q(u*k)+Q(Q(z*h)+Q(_*C))));k=N[c+48>>2];x=Q(k+Q(Q(G*g)+Q(Q(T*i)+Q(o*U))));r=J[b+24>>2];B=K[a+736|0];if(!B){f=J[b+8>>2];J[f>>2]=1065353216;l=(r<<2)+4|0;J[l+f>>2]=1065353216;v=(r<<3)+8|0;J[v+f>>2]=1065353216;f=J[b+16>>2];J[f>>2]=-1082130432;J[f+l>>2]=-1082130432;J[f+v>>2]=-1082130432;W=N[c+56>>2];k=N[c+48>>2];d=N[c+52>>2]}c=J[b+12>>2];J[c+12>>2]=0;u=Q(ba-W);N[c+4>>2]=u;J[c>>2]=0;d=Q(ca-d);N[c+8>>2]=-d;l=r<<2;f=l+c|0;J[f+12>>2]=0;k=Q(x-k);N[f+8>>2]=k;J[f+4>>2]=0;N[f>>2]=-u;v=r<<3;f=v+c|0;J[f+8>>2]=0;J[f+12>>2]=0;N[f+4>>2]=-k;N[f>>2]=d;d=N[e+48>>2];k=N[e+56>>2];u=N[e+52>>2];f=J[b+20>>2];J[f+12>>2]=0;J[f>>2]=0;u=Q(L-u);N[f+8>>2]=u;k=Q(D-k);N[f+4>>2]=-k;e=f+l|0;J[e+12>>2]=0;d=Q(h-d);N[e+8>>2]=-d;J[e+4>>2]=0;N[e>>2]=k;e=f+v|0;J[e+8>>2]=0;J[e+12>>2]=0;N[e+4>>2]=d;N[e>>2]=-u;d=Q(N[b>>2]*N[b+4>>2]);e=J[b+28>>2];if(!B){N[e>>2]=d*Q(h-x);N[e+l>>2]=d*Q(L-ca);N[e+(r<<3)>>2]=d*Q(D-ba)}l=P(r,12);h=Q(Q(y*g)+Q(Q(w*i)+Q(R*o)));N[l+c>>2]=h;v=l+8|0;k=Q(ja+E);N[v+c>>2]=k;F=l+4|0;x=Q(Q(y*m)+Q(Q(w*n)+Q(R*t)));N[F+c>>2]=x;B=r<<4;g=Q(Q(j*g)+Q(Q(s*i)+Q(o*p)));N[B+c>>2]=g;O=B|4;n=Q(Q(j*m)+Q(Q(s*n)+Q(p*t)));N[O+c>>2]=n;V=B|8;t=Q(ha+ia);N[V+c>>2]=t;N[f+l>>2]=-h;N[f+v>>2]=-k;N[f+F>>2]=-x;N[f+B>>2]=-g;N[f+O>>2]=-n;N[f+V>>2]=-t;i=Q(q+A);m=Q(I+ga);A=Q(ka+M);o=Q(S+da);q=Q(Q(i*m)-Q(A*o));p=Q(q*k);k=Q(ea+fa);j=m;m=Q(X+Z);j=Q(Q(o*k)-Q(j*m));s=Q(j*h);h=Q(Q(m*A)-Q(k*i));N[e+l>>2]=Q(p+Q(s+Q(x*h)))*d;N[e+B>>2]=Q(Q(q*t)+Q(Q(j*g)+Q(n*h)))*d;v=K[a+716|0];h:{i:{if(v){l=!K[a+737|0];t=Q(N[a+708>>2]*N[a+732>>2]);e=t>Q(0)?1:2;break i}if(!K[a+737|0]){break h}l=0;t=Q(0);e=0}r=P(r,5);B=r<<2;N[B+c>>2]=i;F=B+8|0;N[F+c>>2]=m;O=c;c=B+4|0;N[O+c>>2]=o;N[f+F>>2]=-m;N[c+f>>2]=-o;N[f+B>>2]=-i;c=a+688|0;d=xe(c);n=ye(c);c=J[b+28>>2];J[B+c>>2]=0;f=J[a+748>>2];g=N[(f&2?a+760|0:b+4|0)>>2];if(!(l|(v|0)!=0&d==n)){if(f&4){N[J[b+32>>2]+(r<<2)>>2]=N[a+752>>2]}h=od(N[a+728>>2],d,n,N[a+680>>2],Q(g*N[b>>2]));c=J[b+28>>2];f=r<<2;l=c+f|0;N[l>>2]=Q(Q(h*N[a+680>>2])*N[a+732>>2])+N[l>>2];N[f+J[b+36>>2]>>2]=-N[a+684>>2];N[f+J[b+40>>2]>>2]=N[a+684>>2]}if(!v){break h}f=r<<2;c=f+c|0;N[c>>2]=Q(Q(g*N[b>>2])*t)+N[c>>2];if(H[a+748|0]&1){N[f+J[b+32>>2]>>2]=N[a+756>>2]}j:{if(d==n){J[J[b+36>>2]+(r<<2)>>2]=-8388609;d=Q(3.4028234663852886e38);break j}f=J[b+36>>2]+(r<<2)|0;if((e|0)==1){J[f>>2]=0;e=1;d=Q(3.4028234663852886e38);break j}J[f>>2]=-8388609;d=Q(0)}N[J[b+40>>2]+(r<<2)>>2]=d;n=N[a+704>>2];k:{if(!(n>Q(0))){break k}d=Q(Q(Q(N[aa+8>>2]*m)+Q(Q(N[aa>>2]*i)+Q(o*N[aa+4>>2])))-Q(Q(N[$+8>>2]*m)+Q(Q(N[$>>2]*i)+Q(o*N[$+4>>2]))));l:{if((e|0)==1){if(!(d<Q(0))){break k}d=Q(d*Q(-n));if(d>N[c>>2]){break l}break k}if(!(d>Q(0))){break k}d=Q(d*Q(-n));if(!(d<N[c>>2])){break k}}N[c>>2]=d}N[c>>2]=N[a+700>>2]*N[c>>2]}}function mz(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=0,f=Q(0),g=0,h=Q(0),i=0,j=Q(0),k=0,l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=0,x=0,y=0,z=Q(0),A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=0,G=0,I=0,L=0,M=0,O=0,S=0,T=Q(0),U=Q(0),V=0,W=Q(0),X=Q(0),Z=Q(0),_=Q(0);e=ga-176|0;ga=e;i=J[b+36>>2];a:{if(H[i+100|0]&1){break a}W=N[i+88>>2]>Q(0)?N[a+16>>2]:N[a+20>>2];x=ga-32|0;ga=x;F=J[a+8>>2];l=J[F+4>>2];g=J[J[a+4>>2]+684>>2];k=J[F+12>>2];n=N[k+20>>2];p=N[k+36>>2];h=N[k+24>>2];u=N[k+52>>2];d=N[k+40>>2];f=N[k+56>>2];r=N[k+32>>2];j=N[k>>2];s=N[k+16>>2];v=N[k+4>>2];z=N[k+8>>2];o=N[k+48>>2];C=N[i+8>>2];A=N[i+12>>2];E=N[i+16>>2];J[x+12>>2]=0;D=d;d=Q(E-f);f=Q(C-o);o=h;h=Q(A-u);N[x+8>>2]=Q(D*d)+Q(Q(z*f)+Q(o*h));N[x+4>>2]=Q(p*d)+Q(Q(v*f)+Q(h*n));N[x>>2]=Q(r*d)+Q(Q(j*f)+Q(h*s));d=Q(Q(1)/N[g+76>>2]);f=Q(Q(d*N[x>>2])/Q(3));b=f<Q(0);h=f;f=Q(Q(1)-f);b:{if(Q(R(f))<Q(2147483648)){c=~~f;break b}c=-2147483648}b=b?c:0;f=Q(h+Q(b|0));c:{if(Q(R(f))<Q(2147483648)){c=~~f;break c}c=-2147483648}q=c-b|0;b=(q&65535)+16|0;h=Q(Q(d*N[x+4>>2])/Q(3));m=h<Q(0);b=b^q>>>5&134215680^b<<16;o=h;h=Q(Q(1)-h);d:{if(Q(R(h))<Q(2147483648)){t=~~h;break d}t=-2147483648}m=m?t:0;h=Q(o+Q(m|0));e:{if(Q(R(h))<Q(2147483648)){w=~~h;break e}w=-2147483648}B=w-m|0;b=b+(B&65535)+(b>>>11)|0;d=Q(Q(d*N[x+8>>2])/Q(3));y=d<Q(0);m=J[g+68>>2];b=b^B>>>5&134215680^b<<16;o=d;d=Q(Q(1)-d);f:{if(Q(R(d))<Q(2147483648)){t=~~d;break f}t=-2147483648}y=y?t:0;d=Q(o+Q(y|0));g:{if(Q(R(d))<Q(2147483648)){t=~~d;break g}t=-2147483648}y=t-y|0;b=b+(y&65535)+(b>>>11)|0;b=b^y>>>5&134215680^b<<16;b=b+(l&65535)+(b>>>11)|0;b=b^l>>>5&134215680^b<<16;b=(b>>>11|0)+b|0;b=b<<3^b;b=(b>>>5|0)+b|0;b=b<<4^b;b=(b>>>17|0)+b|0;b=b<<25^b;G=(b>>>6|0)+b|0;I=J[g+60>>2];L=((G>>>0)%(I>>>0)<<2)+m|0;b=J[L>>2];J[g+96>>2]=J[g+96>>2]+1;d=Q(Q(d-Q(t|0))*Q(3));h:{if(Q(R(d))<Q(2147483648)){t=~~d;break h}t=-2147483648}O=t;n=Q(O|0);h=Q(Q(h-Q(w|0))*Q(3));i:{if(Q(R(h))<Q(2147483648)){t=~~h;break i}t=-2147483648}S=t;p=Q(S|0);f=Q(Q(f-Q(c|0))*Q(3));j:{if(Q(R(f))<Q(2147483648)){t=~~f;break j}t=-2147483648}u=Q(d-n);h=Q(h-p);f=Q(f-Q(t|0));c=J[g+92>>2];k:{if(b){while(1){c=c+1|0;J[g+92>>2]=c;if(!(J[b+272>>2]!=(G|0)|(q|0)!=J[b+256>>2]|((B|0)!=J[b+260>>2]|(y|0)!=J[b+264>>2]))&(l|0)==J[b+276>>2]){break k}b=J[b+280>>2];if(b){continue}break}}J[g+92>>2]=c+1;b=J[g+84>>2];J[g+84>>2]=b+1;if((b|0)>=J[g+88>>2]){w=0;J[8355]=J[8355]+1;l:{if((I|0)<=0){break l}while(1){c=(w<<2)+m|0;b=J[c>>2];J[c>>2]=0;if(b){while(1){c=J[b+280>>2];ta(b);b=c;if(c){continue}break}}w=w+1|0;if((I|0)==(w|0)){break l}m=J[g+68>>2];continue}}J[g+92>>2]=1;J[g+96>>2]=1;J[g+84>>2]=0;J[g+76>>2]=1048576e3;J[g+80>>2]=0}b=ua(284);m=qa(b,0,272);J[m+280>>2]=J[L>>2];J[L>>2]=m;J[m+272>>2]=G;J[m+276>>2]=l;J[m+264>>2]=y;J[m+260>>2]=B;J[m+256>>2]=q;B=0;r=Q(0);c=ga-144|0;ga=c;d=N[g+76>>2];n=Q(Q(Q(J[m+256>>2])*Q(3))*d);s=Q(d*Q(Q(J[m+264>>2])*Q(3)));v=Q(d*Q(Q(J[m+260>>2])*Q(3)));l=c+80|4;while(1){p=Q(Q(d*Q(B|0))+s);w=0;while(1){J[c+20>>2]=0;N[c+16>>2]=p;N[c+8>>2]=Q(d*Q(0))+n;j=Q(Q(d*Q(w|0))+v);N[c+12>>2]=j;q=J[m+276>>2];J[c+80>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[c+100>>2]=1065353216;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+120>>2]=1065353216;J[c+140>>2]=0;J[c+132>>2]=0;J[c+136>>2]=0;J[c+124>>2]=0;J[c+128>>2]=0;m:{if(J[q+4>>2]>19){d=Q(0);break m}d=Ke(c+8|0,q,c+80|0,c+24|0);q=J[m+276>>2]}y=(m+(w<<4)|0)+(B<<2)|0;N[y>>2]=d;d=N[g+76>>2];J[c+20>>2]=0;N[c+16>>2]=p;N[c+12>>2]=j;N[c+8>>2]=d+n;J[c+80>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[c+100>>2]=1065353216;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+120>>2]=1065353216;J[c+140>>2]=0;J[c+132>>2]=0;J[c+136>>2]=0;J[c+124>>2]=0;J[c+128>>2]=0;if(J[q+4>>2]<=19){r=Ke(c+8|0,q,c+80|0,c+24|0);q=J[m+276>>2]}N[y- -64>>2]=r;d=N[g+76>>2];J[c+20>>2]=0;N[c+16>>2]=p;N[c+12>>2]=j;N[c+8>>2]=Q(d+d)+n;J[c+80>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[c+100>>2]=1065353216;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+120>>2]=1065353216;J[c+140>>2]=0;J[c+132>>2]=0;J[c+136>>2]=0;J[c+124>>2]=0;J[c+128>>2]=0;r=Q(0);n:{if(J[q+4>>2]>19){d=Q(0);break n}d=Ke(c+8|0,q,c+80|0,c+24|0);q=J[m+276>>2]}N[y+128>>2]=d;d=N[g+76>>2];J[c+20>>2]=0;N[c+16>>2]=p;N[c+12>>2]=j;N[c+8>>2]=Q(d*Q(3))+n;J[c+80>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[c+100>>2]=1065353216;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+120>>2]=1065353216;J[c+140>>2]=0;J[c+132>>2]=0;J[c+136>>2]=0;J[c+124>>2]=0;J[c+128>>2]=0;if(J[q+4>>2]<=19){d=Ke(c+8|0,q,c+80|0,c+24|0)}else{d=Q(0)}N[y+192>>2]=d;w=w+1|0;if((w|0)!=4){d=N[g+76>>2];continue}break}B=B+1|0;if((B|0)!=4){d=N[g+76>>2];continue}break}ga=c+144|0}J[b+268>>2]=J[g+80>>2];g=(t<<6)+b|0;m=g- -64|0;l=S<<4;q=l+16|0;w=m+q|0;b=O<<2;c=b+4|0;j=N[w+c>>2];s=N[b+w>>2];q=g+q|0;d=N[q+c>>2];n=N[b+q>>2];p=Q(d-n);D=Q(Q(Q(Q(j-s)-p)*f)+p);m=l+m|0;v=N[m+c>>2];z=N[b+m>>2];t=c;c=g+l|0;p=N[t+c>>2];r=N[b+c>>2];o=Q(p-r);o=Q(Q(Q(Q(v-z)-o)*f)+o);o=Q(Q(Q(D-o)*h)+o);D=o;X=Q(o*o);E=Q(j-d);o=Q(v-p);T=Q(s-n);C=Q(z-r);A=Q(Q(Q(T-C)*h)+C);A=Q(Q(Q(Q(Q(Q(E-o)*h)+o)-A)*u)+A);v=Q(j-v);j=Q(d-p);v=Q(Q(Q(v-j)*f)+j);j=Q(n-r);j=Q(Q(Q(Q(s-z)-j)*f)+j);j=Q(Q(Q(v-j)*u)+j);s=Q(Q(1)/Q(Y(Q(X+Q(Q(A*A)+Q(j*j))))));N[x+24>>2]=D*s;N[x+20>>2]=j*s;N[x+16>>2]=A*s;s=Q(d+Q(E*f));d=Q(p+Q(o*f));o=Q(Q(Q(s-d)*h)+d);d=Q(r+Q(C*f));d=Q(Q(Q(Q(n+Q(T*f))-d)*h)+d);d=Q(Q(Q(Q(o-d)*u)+d)-W);b=d<Q(0);if(b){J[e+72>>2]=J[F+8>>2];r=N[k+8>>2];j=N[k>>2];s=N[k+4>>2];u=N[k+24>>2];v=N[k+16>>2];z=N[k+20>>2];p=N[k+40>>2];o=N[k+32>>2];C=N[k+36>>2];f=N[x+24>>2];h=N[x+16>>2];n=N[x+20>>2];J[e+88>>2]=0;p=Q(Q(p*f)+Q(Q(o*h)+Q(n*C)));N[e+84>>2]=p;u=Q(Q(u*f)+Q(Q(v*h)+Q(n*z)));N[e+80>>2]=u;f=Q(Q(r*f)+Q(Q(j*h)+Q(s*n)));N[e+76>>2]=f;N[e+92>>2]=-Q(Q(p*Q(N[i+16>>2]-Q(d*p)))+Q(Q(f*Q(N[i+8>>2]-Q(d*f)))+Q(u*Q(N[i+12>>2]-Q(d*u)))))}ga=x+32|0;if(!b){break a}d=N[i+88>>2];b=J[a+12>>2];o:{if(!b){if(!(Q(d+Q(0))>Q(0))){break a}c=J[J[a+8>>2]+8>>2]+4|0;break o}U=N[b+344>>2];if(!(Q(d+U)>Q(0))){break a}c=b+4|0}if(!(H[33412]&1)){J[8341]=0;J[8342]=0;H[33412]=1;J[8351]=0;J[8352]=0;J[8349]=0;J[8350]=0;J[8347]=0;J[8348]=0;J[8345]=0;J[8346]=0;J[8343]=0;J[8344]=0}f=N[c+52>>2];h=N[i+12>>2];r=N[c+56>>2];n=N[i+16>>2];u=N[c+48>>2];p=N[i+8>>2];J[e+68>>2]=0;u=Q(p-u);N[e+56>>2]=u;r=Q(n-r);N[e+64>>2]=r;j=Q(h-f);N[e+60>>2]=j;g=b?b+264|0:33364;p:{if(!b){c=J[a+4>>2];f=N[c+452>>2];s=Q(0);break p}s=N[b+328>>2];v=N[b+332>>2];c=J[a+4>>2];f=N[c+452>>2];Z=Q(Q(Q(Q(s*j)-Q(u*v))+N[b+320>>2])*f);z=N[b+336>>2];_=Q(Q(Q(Q(z*u)-Q(r*s))+N[b+316>>2])*f);s=Q(Q(Q(Q(v*r)-Q(j*z))+N[b+312>>2])*f)}v=N[c+316>>2];z=N[i+32>>2];o=N[i+28>>2];C=N[J[J[a+8>>2]+8>>2]+224>>2];A=N[i+24>>2];J[e+96>>2]=i;u=N[e+84>>2];r=N[e+80>>2];j=N[e+76>>2];hk(e+8|0,f,d,U,g,e+56|0);b=J[e+20>>2];J[e+108>>2]=J[e+16>>2];J[e+112>>2]=b;b=J[e+28>>2];J[e+116>>2]=J[e+24>>2];J[e+120>>2]=b;b=J[e+36>>2];J[e+124>>2]=J[e+32>>2];J[e+128>>2]=b;b=J[e+44>>2];J[e+132>>2]=J[e+40>>2];J[e+136>>2]=b;b=J[e+52>>2];J[e+140>>2]=J[e+48>>2];J[e+144>>2]=b;b=e- -64|0;c=J[b+4>>2];J[e+156>>2]=J[b>>2];J[e+160>>2]=c;b=J[e+12>>2];J[e+100>>2]=J[e+8>>2];J[e+104>>2]=b;b=J[e+60>>2];J[e+148>>2]=J[e+56>>2];J[e+152>>2]=b;g=J[a+4>>2];N[e+164>>2]=d*N[g+452>>2];n=Q(Q(n-z)-Z);p=Q(Q(p-A)-s);h=Q(Q(h-o)-_);d=Q(Q(n*u)+Q(Q(j*p)+Q(r*h)));f=Q(v*C);n=Q(n-Q(u*d));o=Q(n*n);n=Q(p-Q(j*d));h=Q(h-Q(r*d));N[e+168>>2]=Q(o+Q(Q(n*n)+Q(h*h)))<Q(f*Q(d*Q(d*f)))?Q(0):Q(Q(1)-f);N[e+172>>2]=N[g+(J[J[J[a+8>>2]+8>>2]+204>>2]&3?328:324)>>2];k=J[g+812>>2];q:{if((k|0)!=J[g+816>>2]){break q}l=k?k<<1:1;if((l|0)<=(k|0)){break q}if(l){J[8369]=J[8369]+1;V=ia[J[6782]](P(l,104),16)|0;k=J[g+812>>2]}if((k|0)>0){while(1){c=P(M,104);b=c+V|0;c=c+J[g+820>>2]|0;i=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=i;J[b+24>>2]=J[c+24>>2];i=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=i;i=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=i;i=J[c+40>>2];J[b+36>>2]=J[c+36>>2];J[b+40>>2]=i;i=J[c+32>>2];J[b+28>>2]=J[c+28>>2];J[b+32>>2]=i;i=J[c+56>>2];J[b+52>>2]=J[c+52>>2];J[b+56>>2]=i;i=J[c+48>>2];J[b+44>>2]=J[c+44>>2];J[b+48>>2]=i;i=J[c+64>>2];J[b+60>>2]=J[c+60>>2];J[b+64>>2]=i;i=J[c+72>>2];J[b+68>>2]=J[c+68>>2];J[b+72>>2]=i;i=J[c+80>>2];J[b+76>>2]=J[c+76>>2];J[b+80>>2]=i;i=J[c+88>>2];J[b+84>>2]=J[c+84>>2];J[b+88>>2]=i;i=J[c+96>>2];J[b+92>>2]=J[c+92>>2];J[b+96>>2]=i;J[b+100>>2]=J[c+100>>2];M=M+1|0;if((M|0)!=(k|0)){continue}break}}b=J[g+820>>2];if(!(b?!b|!K[g+824|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[g+820>>2]=V;H[g+824|0]=1;J[g+816>>2]=l;k=J[g+812>>2]}c=J[e+76>>2];b=J[g+820>>2]+P(k,104)|0;J[b>>2]=J[e+72>>2];J[b+4>>2]=c;J[b+24>>2]=J[e+96>>2];c=J[e+92>>2];J[b+16>>2]=J[e+88>>2];J[b+20>>2]=c;c=J[e+84>>2];J[b+8>>2]=J[e+80>>2];J[b+12>>2]=c;c=J[e+112>>2];J[b+36>>2]=J[e+108>>2];J[b+40>>2]=c;c=J[e+104>>2];J[b+28>>2]=J[e+100>>2];J[b+32>>2]=c;c=J[e+128>>2];J[b+52>>2]=J[e+124>>2];J[b+56>>2]=c;c=J[e+120>>2];J[b+44>>2]=J[e+116>>2];J[b+48>>2]=c;c=J[e+144>>2];J[b+68>>2]=J[e+140>>2];J[b+72>>2]=c;c=J[e+136>>2];J[b+60>>2]=J[e+132>>2];J[b+64>>2]=c;c=J[e+152>>2];J[b+76>>2]=J[e+148>>2];J[b+80>>2]=c;c=J[e+160>>2];J[b+84>>2]=J[e+156>>2];J[b+88>>2]=c;c=J[e+168>>2];J[b+92>>2]=J[e+164>>2];J[b+96>>2]=c;J[b+100>>2]=J[e+172>>2];J[g+812>>2]=J[g+812>>2]+1;a=J[a+12>>2];if(!a){break a}kb(a,0)}ga=e+176|0}function Tj(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,N=0,O=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;m=ga-48|0;ga=m;A=J[e>>2];h=b;s=J[d>>2];if(s){h=J[s+12>>2]}w=J[h+96>>2];x=J[h+92>>2];z=J[h+88>>2];l=J[b+96>>2];I=J[c+96>>2]-l|0;i=J[(s?s:A)+12>>2];j=J[b+92>>2];n=J[i+92>>2]-j|0;h=c;K=J[c+92>>2]-j|0;f=J[i+96>>2]-l|0;c=P(I,n)-P(K,f)|0;S=c;O=c>>31;g=I>>31;c=jI(c,O,I,g);o=ha;k=J[b+88>>2];i=J[i+88>>2]-k|0;L=J[h+88>>2]-k|0;b=P(i,K)-P(n,L)|0;T=b;Q=b>>31;n=L>>31;b=jI(b,Q,L,n);B=c-b|0;C=o-(ha+(b>>>0>c>>>0)|0)|0;c=jI(B,C,x,x>>31);o=ha;t=K>>31;b=jI(T,Q,K,t);v=ha;p=c;c=P(f,L)-P(i,I)|0;U=c;R=c>>31;c=jI(c,R,I,g);D=b-c|0;E=v-(ha+(b>>>0<c>>>0)|0)|0;c=jI(D,E,z,z>>31);b=p+c|0;f=ha+o|0;f=b>>>0<c>>>0?f+1|0:f;c=b;b=jI(L,n,U,R);i=ha;n=c;c=jI(K,t,S,O);F=b-c|0;G=i-(ha+(b>>>0<c>>>0)|0)|0;c=jI(F,G,w,w>>31);b=n+c|0;f=ha+f|0;n=b;i=b>>>0<c>>>0?f+1|0:f;b=jI(S,O,k,k>>31);c=ha;l=jI(T,Q,l,l>>31);b=l+b|0;g=ha+c|0;g=b>>>0<l>>>0?g+1|0:g;c=jI(U,R,j,j>>31);b=c+b|0;g=ha+g|0;N=b;r=b>>>0<c>>>0?g+1|0:g;h=A?J[A+12>>2]:h;t=J[h+96>>2];v=J[h+92>>2];y=J[h+88>>2];b=A;a:{if(!s){break a}b=A;if(!J[s+12>>2]){break a}b=J[J[s+8>>2]+4>>2];k=J[b+12>>2];h=k;c=J[h+92>>2];j=c;c=c>>31;l=jI(j,c,U,R);f=ha;p=l;h=J[h+88>>2];l=h;o=h>>31;g=jI(h,o,S,O);h=p+g|0;f=ha+f|0;f=g>>>0>h>>>0?f+1|0:f;u=h;h=J[k+96>>2];p=h;q=h>>31;g=jI(h,q,T,Q);h=u+g|0;k=ha+f|0;k=g>>>0>h>>>0?k+1|0:k;b:{if(h>>>0<N>>>0&(r|0)>=(k|0)|(k|0)<(r|0)){break b}h=b+12|0;u=J[a+100>>2];while(1){if((u|0)==J[b+20>>2]){break b}c=jI(j,c,B,C);j=ha;l=jI(l,o,D,E);c=l+c|0;f=ha+j|0;f=c>>>0<l>>>0?f+1|0:f;l=jI(p,q,F,G);c=l+c|0;f=ha+f|0;f=c>>>0<l>>>0?f+1|0:f;l=c;c=f;if(l>>>0<=n>>>0&(i|0)>=(c|0)|(c|0)<(i|0)){break b}J[d>>2]=b;i=J[h>>2];w=J[i+96>>2];x=J[i+92>>2];z=J[i+88>>2];if(i){b=J[J[b+8>>2]+4>>2];h=b+12|0;n=l;i=c;g=J[b+12>>2];c=J[g+92>>2];j=c;c=c>>31;f=jI(j,c,U,R);k=ha;l=J[g+88>>2];o=l>>31;p=jI(l,o,S,O);f=p+f|0;k=ha+k|0;k=f>>>0<p>>>0?k+1|0:k;M=f;f=J[g+96>>2];p=f;q=f>>31;H=jI(f,q,T,Q);f=M+H|0;g=ha+k|0;g=f>>>0<H>>>0?g+1|0:g;if(f>>>0<N>>>0&(r|0)>=(g|0)|(g|0)<(r|0)){break b}continue}break}n=l;i=c}b=J[e>>2]}c=jI(B,C,v,v>>31);h=ha;l=jI(D,E,y,y>>31);c=l+c|0;f=ha+h|0;f=c>>>0<l>>>0?f+1|0:f;h=jI(F,G,t,t>>31);c=h+c|0;k=ha+f|0;j=c;c=c>>>0<h>>>0?k+1|0:k;c:{if(!b){b=0;break c}if(!J[b+12>>2]){break c}h=J[J[b+8>>2]>>2];k=J[h+12>>2];f=k;l=J[f+92>>2];o=l>>31;g=jI(l,o,U,R);u=ha;f=J[f+88>>2];p=f;q=f>>31;H=jI(f,q,S,O);f=H+g|0;g=ha+u|0;g=f>>>0<H>>>0?g+1|0:g;M=f;f=J[k+96>>2];u=f;H=f>>31;k=jI(f,H,T,Q);f=M+k|0;g=ha+g|0;g=f>>>0<k>>>0?g+1|0:g;if(f>>>0<N>>>0&(r|0)>=(g|0)|(g|0)<(r|0)){break c}k=h+12|0;W=J[a+100>>2];while(1){f=h;if((W|0)==J[f+20>>2]){break c}h=jI(l,o,B,C);l=ha;o=jI(p,q,D,E);h=o+h|0;g=ha+l|0;g=h>>>0<o>>>0?g+1|0:g;l=jI(F,G,u,H);h=l+h|0;g=ha+g|0;g=h>>>0<l>>>0?g+1|0:g;o=h;l=g;if(h>>>0<=j>>>0&(c|0)>=(g|0)|(c|0)>(g|0)){break c}J[e>>2]=f;b=J[k>>2];t=J[b+96>>2];v=J[b+92>>2];y=J[b+88>>2];if(b){h=J[J[f+8>>2]>>2];k=h+12|0;j=o;c=l;b=f;u=J[h+12>>2];f=u;l=J[f+92>>2];o=l>>31;g=jI(l,o,U,R);H=ha;f=J[f+88>>2];p=f;q=f>>31;M=jI(f,q,S,O);f=M+g|0;g=ha+H|0;g=f>>>0<M>>>0?g+1|0:g;M=f;f=J[u+96>>2];u=f;H=f>>31;V=jI(f,H,T,Q);M=M+V|0;f=ha+g|0;f=M>>>0<V>>>0?f+1|0:f;if(N>>>0>M>>>0&(r|0)>=(f|0)|(f|0)<(r|0)){break c}continue}break}b=f;j=o;c=l}i=c-((j>>>0<n>>>0)+i|0)|0;d:{n=j-n|0;if(!!n&(i|0)>=0|(i|0)>0){while(1){b=J[d>>2];while(1){e:{A=(P(v-x|0,K)+P(y-z|0,L)|0)+P(t-w|0,I)|0;c=A;l=c;o=c>>31;if(!b|!J[b+12>>2]){break e}r=J[J[b>>2]+8>>2];if(J[r+20>>2]<=J[a+100>>2]){break e}h=J[r+12>>2];c=J[h+92>>2];f=c-x|0;k=J[h+88>>2];g=k-z|0;h=J[h+96>>2];p=h-w|0;j=(P(f,K)+P(g,L)|0)+P(p,I)|0;f=jI(B,C,f,f>>31);q=ha;N=jI(D,E,g,g>>31);f=N+f|0;g=ha+q|0;q=jI(F,G,p,p>>31);p=q+f|0;f=ha+(f>>>0<N>>>0?g+1|0:g)|0;g=p;f=g>>>0<q>>>0?f+1|0:f;f:{if(!(g|f)){if((j|0)<0){break f}break e}if((f|0)>0|(f|0)>=0){break e}J[m+32>>2]=0-g;J[m+36>>2]=0-(((g|0)!=0)+f|0);c=(j|0)>0;J[m+40>>2]=c?-1:j>>>31|0;b=j;h=(b|0)<0;J[m+24>>2]=c?b:h?0-b|0:0;j=b>>31;J[m+28>>2]=c?j:h?0-(((b|0)!=0)+j|0)|0:0;g:{if((A|0)>0){J[m+16>>2]=1;j=l;c=o;h=-1;break g}if((A|0)<0){J[m+16>>2]=-1;j=0-l|0;c=0-(((l|0)!=0)+o|0)|0;h=1;break g}J[m+16>>2]=0;j=0;c=0;h=0}J[m>>2]=j;J[m+4>>2]=c;b=n;c=i;h:{if(!!b&(c|0)>=0|(c|0)>0){break h}c=0;b=0;if((i|0)>0|(i|0)>=0){break h}J[m+16>>2]=h;c=0-(((n|0)!=0)+i|0)|0;b=0-n|0}J[m+8>>2]=b;J[m+12>>2]=c;if((yc(m+24|0,m)|0)<0){break e}i=J[r+12>>2];h=J[i+96>>2];c=J[i+92>>2];b=J[d>>2];k=J[i+88>>2]}b=(b|0)==(s|0)?0:r;J[d>>2]=b;i=v-c|0;i=jI(B,C,i,i>>31);n=ha;f=i;i=y-k|0;l=jI(D,E,i,i>>31);i=f+l|0;g=ha+n|0;g=i>>>0<l>>>0?g+1|0:g;f=i;i=t-h|0;n=jI(F,G,i,i>>31);i=f+n|0;f=ha+g|0;f=i>>>0<n>>>0?f+1|0:f;n=i;i=f;z=k;x=c;w=h;continue}break}b=J[e>>2];if(!b|!J[b+12>>2]){break d}r=J[J[b+8>>2]>>2];if(J[r+20>>2]<=J[a+100>>2]){break d}b=J[r+12>>2];h=J[b+92>>2];j=h-v|0;c=j;f=c>>31;c=jI(c,f,U,R);k=ha;g=c;v=J[b+88>>2];y=v-y|0;c=y;p=c>>31;q=jI(c,p,S,O);c=g+q|0;g=ha+k|0;g=c>>>0<q>>>0?g+1|0:g;k=c;c=J[b+96>>2];t=c-t|0;b=t;q=b>>31;b=jI(T,Q,b,q);if((k|0)!=(0-b|0)|(0-(ha+((b|0)!=0)|0)|0)!=(g|0)){break d}b=h-x|0;b=jI(B,C,b,b>>31);h=ha;k=b;b=v-z|0;g=jI(D,E,b,b>>31);b=k+g|0;k=ha+h|0;k=b>>>0<g>>>0?k+1|0:k;h=b;b=c-w|0;c=jI(F,G,b,b>>31);b=h+c|0;g=ha+k|0;h=b;g=b>>>0<c>>>0?g+1|0:g;b=g;if(!h&(b|0)<=0|(b|0)<0){break d}c=(P(j,K)+P(y,L)|0)+P(t,I)|0;j=jI(j,f,B,C);f=ha;k=jI(D,E,y,p);j=k+j|0;g=ha+f|0;g=j>>>0<k>>>0?g+1|0:g;k=jI(F,G,t,q);j=k+j|0;f=ha+g|0;f=j>>>0<k>>>0?f+1|0:f;i:{if(!(f|j)){if((c|0)<0){break i}break d}if((f|0)>0|(f|0)>=0){break d}J[m+32>>2]=0-j;J[m+36>>2]=0-(((j|0)!=0)+f|0);j=(c|0)>0;J[m+40>>2]=j?-1:c>>>31|0;f=(c|0)<0;J[m+24>>2]=j?c:f?0-c|0:0;k=c>>31;J[m+28>>2]=j?k:f?0-(((c|0)!=0)+k|0)|0:0;j:{if((A|0)>0){J[m+16>>2]=1;j=-1;break j}if((A|0)<0){J[m+16>>2]=-1;c=l;l=0-c|0;o=0-(((c|0)!=0)+o|0)|0;j=1;break j}J[m+16>>2]=0;l=0;o=0;j=0}J[m>>2]=l;J[m+4>>2]=o;l=i;c=n;k:{if(!!c&(i|0)>=0|(i|0)>0){break k}l=0;c=0;if((i|0)>0|(i|0)>=0){break k}J[m+16>>2]=j;l=0-(((n|0)!=0)+i|0)|0;c=0-n|0}J[m+8>>2]=c;J[m+12>>2]=l;if((yc(m+24|0,m)|0)<=0){break d}}J[e>>2]=r;c=J[r+12>>2];t=J[c+96>>2];v=J[c+92>>2];y=J[c+88>>2];n=h;i=b;continue}}if((i|0)>0|(i|0)>=0){break d}while(1){r=(P(v-x|0,K)+P(y-z|0,L)|0)+P(t-w|0,I)|0;c=r;l=c;o=c>>31;l:{if(!b|!J[b+12>>2]){break l}s=J[J[b+4>>2]+8>>2];if(J[s+20>>2]<=J[a+100>>2]){break l}j=J[s+12>>2];c=J[j+92>>2];f=c-v|0;h=J[j+88>>2];g=h-y|0;k=J[j+96>>2];p=k-t|0;j=(P(f,K)+P(g,L)|0)+P(p,I)|0;f=jI(B,C,f,f>>31);q=ha;N=jI(D,E,g,g>>31);g=N+f|0;f=ha+q|0;q=jI(F,G,p,p>>31);p=q+g|0;g=ha+(g>>>0<N>>>0?f+1|0:f)|0;f=p;g=f>>>0<q>>>0?g+1|0:g;m:{if(!(f|g)){if((j|0)>0){break m}break l}if((g|0)>0|(g|0)>=0){break l}J[m+32>>2]=0-f;J[m+36>>2]=0-(((f|0)!=0)+g|0);c=(j|0)>0;J[m+40>>2]=c?-1:j>>>31|0;b=j;h=(b|0)<0;J[m+24>>2]=c?b:h?0-b|0:0;j=b>>31;J[m+28>>2]=c?j:h?0-(((b|0)!=0)+j|0)|0:0;n:{if((r|0)>0){J[m+16>>2]=1;j=l;c=o;h=-1;break n}if((r|0)<0){J[m+16>>2]=-1;j=0-l|0;c=0-(((l|0)!=0)+o|0)|0;h=1;break n}J[m+16>>2]=0;j=0;c=0;h=0}J[m>>2]=j;J[m+4>>2]=c;b=n;c=i;o:{if(!!b&(c|0)>=0|(c|0)>0){break o}c=0;b=0;if((i|0)>0|(i|0)>=0){break o}J[m+16>>2]=h;c=0-(((n|0)!=0)+i|0)|0;b=0-n|0}J[m+8>>2]=b;J[m+12>>2]=c;if((yc(m+24|0,m)|0)>0){break l}i=J[s+12>>2];k=J[i+96>>2];c=J[i+92>>2];b=J[e>>2];h=J[i+88>>2]}b=(b|0)==(A|0)?0:s;J[e>>2]=b;i=c-x|0;i=jI(B,C,i,i>>31);n=ha;f=i;i=h-z|0;l=jI(D,E,i,i>>31);i=f+l|0;f=ha+n|0;f=i>>>0<l>>>0?f+1|0:f;l=i;i=k-w|0;n=jI(F,G,i,i>>31);i=l+n|0;g=ha+f|0;g=i>>>0<n>>>0?g+1|0:g;n=i;i=g;y=h;v=c;t=k;continue}b=J[d>>2];if(!b|!J[b+12>>2]){break d}s=J[J[b+8>>2]+4>>2];if(J[s+20>>2]<=J[a+100>>2]){break d}b=J[s+12>>2];h=J[b+92>>2];j=h-x|0;c=j;k=c>>31;c=jI(c,k,U,R);f=ha;u=c;g=J[b+88>>2];x=g-z|0;c=x;z=c>>31;p=jI(c,z,S,O);c=u+p|0;f=ha+f|0;f=c>>>0<p>>>0?f+1|0:f;u=c;c=J[b+96>>2];w=c-w|0;b=w;p=b>>31;b=jI(T,Q,b,p);if((u|0)!=(0-b|0)|(0-(ha+((b|0)!=0)|0)|0)!=(f|0)){break d}b=v-h|0;b=jI(B,C,b,b>>31);h=ha;u=b;b=y-g|0;f=jI(D,E,b,b>>31);b=u+f|0;g=ha+h|0;g=b>>>0<f>>>0?g+1|0:g;f=b;b=t-c|0;c=jI(F,G,b,b>>31);b=f+c|0;f=ha+g|0;f=b>>>0<c>>>0?f+1|0:f;c=b;if((f|0)>0|(f|0)>=0){break d}b=(P(j,K)+P(x,L)|0)+P(w,I)|0;h=jI(j,k,B,C);j=ha;g=jI(D,E,x,z);h=g+h|0;k=ha+j|0;k=g>>>0>h>>>0?k+1|0:k;j=jI(F,G,w,p);h=j+h|0;g=ha+k|0;g=h>>>0<j>>>0?g+1|0:g;p:{if(!(g|h)){if((b|0)<=0){break d}break p}if((g|0)>0|(g|0)>=0){break d}J[m+32>>2]=0-h;J[m+36>>2]=0-(((h|0)!=0)+g|0);h=(b|0)>0;J[m+40>>2]=h?-1:b>>>31|0;j=(b|0)<0;J[m+24>>2]=h?b:j?0-b|0:0;k=b>>31;J[m+28>>2]=h?k:j?0-(((b|0)!=0)+k|0)|0:0;q:{if((r|0)>0){J[m+16>>2]=1;j=-1;break q}if((r|0)<0){J[m+16>>2]=-1;b=l;l=0-b|0;o=0-(((b|0)!=0)+o|0)|0;j=1;break q}J[m+16>>2]=0;l=0;o=0;j=0}J[m>>2]=l;J[m+4>>2]=o;h=i;b=n;r:{if(!!b&(h|0)>=0|(h|0)>0){break r}h=0;b=0;if((i|0)>0|(i|0)>=0){break r}J[m+16>>2]=j;h=0-(((n|0)!=0)+i|0)|0;b=0-n|0}J[m+8>>2]=b;J[m+12>>2]=h;if((yc(m+24|0,m)|0)>=0){break d}}J[d>>2]=s;i=J[s+12>>2];w=J[i+96>>2];x=J[i+92>>2];b=J[e>>2];z=J[i+88>>2];n=c;i=f;continue}}ga=m+48|0}function dk(a,b,c,d,e){var f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0),z=0,A=Q(0),B=Q(0),C=0,D=0,E=Q(0),F=Q(0),G=0,I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ia=0;p=ga-48|0;ga=p;ia=N[b+52>>2]<N[a+12>>2];if(ia){i=N[b+44>>2];q=N[b+36>>2];m=N[b+40>>2];h=Q(Q(i*i)+Q(Q(q*q)+Q(m*m)));E=N[b+48>>2];G=K[33296];if(!(G&1)){if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;g=J[7380];J[7362]=J[7379];J[7363]=g;g=J[7384];J[7366]=J[7383];J[7367]=g;g=J[7388];J[7370]=J[7387];J[7371]=g;J[7376]=0;J[7377]=0;g=J[7382];J[7364]=J[7381];J[7365]=g;g=J[7386];J[7368]=J[7385];J[7369]=g;g=J[7390];J[7372]=J[7389];J[7373]=g}H[33296]=1;g=J[7363];J[8308]=J[7362];J[8309]=g;g=J[7367];J[8312]=J[7366];J[8313]=g;g=J[7371];J[8316]=J[7370];J[8317]=g;g=J[7375];J[8320]=J[7374];J[8321]=g;g=J[7365];J[8310]=J[7364];J[8311]=g;g=J[7369];J[8314]=J[7368];J[8315]=g;g=J[7373];J[8318]=J[7372];J[8319]=g;g=J[7377];J[8322]=J[7376];J[8323]=g;G=1}f=J[c+8>>2];g=J[c>>2];z=f?f+4|0:g?g+60|0:33232;j=N[z+48>>2];l=N[b+4>>2];n=N[z+56>>2];k=N[b+12>>2];A=N[z+52>>2];u=N[b+8>>2];if(!(G&1)){G=1;if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;f=J[7380];J[7362]=J[7379];J[7363]=f;f=J[7384];J[7366]=J[7383];J[7367]=f;f=J[7388];J[7370]=J[7387];J[7371]=f;J[7376]=0;J[7377]=0;f=J[7382];J[7364]=J[7381];J[7365]=f;f=J[7386];J[7368]=J[7385];J[7369]=f;f=J[7390];J[7372]=J[7389];J[7373]=f}H[33296]=1;f=J[7363];J[8308]=J[7362];J[8309]=f;f=J[7367];J[8312]=J[7366];J[8313]=f;f=J[7371];J[8316]=J[7370];J[8317]=f;f=J[7375];J[8320]=J[7374];J[8321]=f;f=J[7365];J[8310]=J[7364];J[8311]=f;f=J[7369];J[8314]=J[7368];J[8315]=f;f=J[7373];J[8318]=J[7372];J[8319]=f;f=J[7377];J[8322]=J[7376];J[8323]=f}j=Q(l-j);l=Q(k-n);n=Q(u-A);k=i;i=Q(Q(1)/Q(Y(h)));A=Q(k*i);u=Q(m*i);w=Q(q*i);v=J[d+8>>2];f=J[d>>2];v=v?v+4|0:f?f+60|0:33232;i=Q(N[b+20>>2]-N[v+48>>2]);q=Q(N[b+28>>2]-N[v+56>>2]);m=Q(N[b+24>>2]-N[v+52>>2]);a:{b:{C=J[c+4>>2];if(!C){if(g){break b}k=Q(0);h=Q(0);break a}h=N[C+328>>2];k=N[C+332>>2];r=Q(Q(h*n)-Q(j*k));o=N[C+336>>2];s=Q(Q(o*j)-Q(l*h));t=Q(Q(k*l)-Q(n*o));k=N[C+312>>2];o=N[C+320>>2];h=N[C+316>>2];break a}h=N[g+332>>2];k=N[g+336>>2];r=Q(Q(h*n)-Q(j*k));o=N[g+340>>2];s=Q(Q(o*j)-Q(l*h));t=Q(Q(k*l)-Q(n*o));k=N[g+316>>2];o=N[g+324>>2];h=N[g+320>>2]}x=Q(o+r);y=Q(h+s);B=Q(k+t);c:{d:{D=J[d+4>>2];if(!D){if(f){break d}s=Q(0);o=Q(0);h=Q(0);k=Q(0);t=Q(0);r=Q(0);break c}h=N[D+328>>2];r=N[D+332>>2];k=Q(Q(h*m)-Q(i*r));s=N[D+336>>2];h=Q(Q(s*i)-Q(q*h));o=Q(Q(r*q)-Q(m*s));s=N[D+316>>2];t=N[D+320>>2];r=N[D+312>>2];break c}h=N[f+332>>2];r=N[f+336>>2];k=Q(Q(h*m)-Q(i*r));s=N[f+340>>2];h=Q(Q(s*i)-Q(q*h));o=Q(Q(r*q)-Q(m*s));s=N[f+320>>2];t=N[f+324>>2];r=N[f+316>>2]}F=N[a+12>>2];R=N[b+52>>2];b=J[c+4>>2];J[e+4>>2]=J[c>>2];J[e+8>>2]=b;J[e+12>>2]=J[c+8>>2];b=J[d+4>>2];J[e+16>>2]=J[d>>2];J[e+20>>2]=b;J[e+24>>2]=J[d+8>>2];k=Q(x-Q(t+k));r=Q(B-Q(r+o));s=Q(y-Q(s+h));h=Q(Q(k*A)+Q(Q(r*w)+Q(u*s)));o=Q(A*h);if(!(G&1)){if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;b=J[7380];J[7362]=J[7379];J[7363]=b;b=J[7384];J[7366]=J[7383];J[7367]=b;b=J[7388];J[7370]=J[7387];J[7371]=b;J[7376]=0;J[7377]=0;b=J[7382];J[7364]=J[7381];J[7365]=b;b=J[7386];J[7368]=J[7385];J[7369]=b;b=J[7390];J[7372]=J[7389];J[7373]=b}H[33296]=1;b=J[7363];J[8308]=J[7362];J[8309]=b;b=J[7367];J[8312]=J[7366];J[8313]=b;b=J[7371];J[8316]=J[7370];J[8317]=b;b=J[7375];J[8320]=J[7374];J[8321]=b;b=J[7365];J[8310]=J[7364];J[8311]=b;b=J[7369];J[8314]=J[7368];J[8315]=b;b=J[7373];J[8318]=J[7372];J[8319]=b;b=J[7377];J[8322]=J[7376];J[8323]=b;G=1}t=N[z+36>>2];x=N[z+20>>2];y=N[z+40>>2];B=N[z+24>>2];I=N[z+4>>2];L=N[z+8>>2];M=N[z+32>>2];O=N[z>>2];P=N[z+16>>2];J[e+40>>2]=0;N[e+28>>2]=Q(M*l)+Q(Q(O*j)+Q(n*P));N[e+36>>2]=Q(y*l)+Q(Q(L*j)+Q(n*B));N[e+32>>2]=Q(t*l)+Q(Q(I*j)+Q(n*x));if(!(G&1)){if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;b=J[7380];J[7362]=J[7379];J[7363]=b;b=J[7384];J[7366]=J[7383];J[7367]=b;b=J[7388];J[7370]=J[7387];J[7371]=b;J[7376]=0;J[7377]=0;b=J[7382];J[7364]=J[7381];J[7365]=b;b=J[7386];J[7368]=J[7385];J[7369]=b;b=J[7390];J[7372]=J[7389];J[7373]=b}H[33296]=1;b=J[7363];J[8308]=J[7362];J[8309]=b;b=J[7367];J[8312]=J[7366];J[8313]=b;b=J[7371];J[8316]=J[7370];J[8317]=b;b=J[7375];J[8320]=J[7374];J[8321]=b;b=J[7365];J[8310]=J[7364];J[8311]=b;b=J[7369];J[8314]=J[7368];J[8315]=b;b=J[7373];J[8318]=J[7372];J[8319]=b;b=J[7377];J[8322]=J[7376];J[8323]=b}t=N[v+36>>2];x=N[v+20>>2];y=N[v+40>>2];B=N[v+24>>2];I=N[v+4>>2];L=N[v+8>>2];M=N[v+32>>2];O=N[v>>2];P=N[v+16>>2];J[e+192>>2]=0;N[e+188>>2]=q;N[e+184>>2]=m;c=e+180|0;N[c>>2]=i;J[e+176>>2]=0;N[e+172>>2]=l;N[e+168>>2]=n;N[e+164>>2]=j;J[e+56>>2]=0;J[e+156>>2]=0;J[e+160>>2]=0;J[e+60>>2]=1065353216;J[e+64>>2]=1065353216;N[e+208>>2]=E;N[e+204>>2]=A;N[e+200>>2]=u;N[e+196>>2]=w;J[e+84>>2]=0;j=Q(R-F);N[e+80>>2]=A*j;N[e+76>>2]=u*j;N[e+72>>2]=w*j;J[e+68>>2]=1065353216;N[e+44>>2]=Q(M*q)+Q(Q(O*i)+Q(m*P));N[e+52>>2]=Q(y*q)+Q(Q(L*i)+Q(m*B));N[e+48>>2]=Q(t*q)+Q(Q(I*i)+Q(m*x));H[e+152|0]=0;j=N[a+16>>2];l=Q(k-o);i=Q(l*l);l=Q(r-Q(w*h));r=Q(l*l);l=Q(s-Q(u*h));N[e+212>>2]=Q(i+Q(r+Q(l*l)))<Q(j*Q(h*Q(h*j)))?Q(1):j;e:{if(C){a=C+344|0}else{j=Q(0);if(!g){break e}a=g+128|0}j=N[a>>2]}b=K[33360];if(!(b&1)){J[8328]=0;J[8329]=0;H[33360]=1;J[8338]=0;J[8339]=0;J[8336]=0;J[8337]=0;J[8334]=0;J[8335]=0;J[8332]=0;J[8333]=0;J[8330]=0;J[8331]=0;b=1}f:{if(D){a=D+344|0}else{l=Q(0);if(!f){break f}a=f+128|0}l=N[a>>2]}if(!(b&1)){J[8328]=0;J[8329]=0;H[33360]=1;J[8338]=0;J[8339]=0;J[8336]=0;J[8337]=0;J[8334]=0;J[8335]=0;J[8332]=0;J[8333]=0;J[8330]=0;J[8331]=0}a=C?C+264|0:g?g+180|0:33312;u=N[a+40>>2];w=N[a+24>>2];o=N[a+36>>2];t=N[a+20>>2];b=D?D+264|0:f?f+180|0:33312;E=N[b+40>>2];x=N[b+24>>2];y=N[b+36>>2];B=N[b+20>>2];n=N[e+168>>2];F=N[a+8>>2];R=N[a+4>>2];I=N[a+32>>2];i=N[e+164>>2];L=N[a>>2];q=N[e+172>>2];M=N[a+16>>2];m=N[c+4>>2];O=N[b+8>>2];P=N[b+4>>2];T=N[b+32>>2];h=N[c>>2];U=N[b>>2];k=N[c+8>>2];V=N[b+16>>2];J[p+44>>2]=0;J[p+28>>2]=0;J[p+12>>2]=0;W=Q(Q(I*n)+Q(Q(L*Q(0))-Q(M*q)));X=Q(Q(o*n)+Q(Q(R*Q(0))-Q(t*q)));Z=Q(Q(u*n)+Q(Q(F*Q(0))-Q(w*q)));_=Q(Q(T*m)+Q(Q(U*Q(0))-Q(V*k)));$=Q(Q(y*m)+Q(Q(P*Q(0))-Q(B*k)));aa=Q(Q(E*m)+Q(Q(O*Q(0))-Q(x*k)));r=Q(Q(j-Q(Q(Q(W*Q(0))+Q(q*X))-Q(n*Z)))+Q(l-Q(Q(Q(_*Q(0))+Q(k*$))-Q(m*aa))));ba=Q(Q(Q(F*q)+Q(w*Q(0)))-Q(u*i));ca=Q(Q(Q(R*q)+Q(t*Q(0)))-Q(o*i));da=Q(Q(Q(L*q)+Q(M*Q(0)))-Q(I*i));ea=Q(Q(Q(O*k)+Q(x*Q(0)))-Q(E*h));fa=Q(Q(Q(P*k)+Q(B*Q(0)))-Q(y*h));ha=Q(Q(Q(U*k)+Q(V*Q(0)))-Q(T*h));s=Q(Q(j-Q(Q(i*ba)+Q(Q(ca*Q(0))-Q(q*da))))+Q(l-Q(Q(h*ea)+Q(Q(fa*Q(0))-Q(k*ha)))));A=Q(Q(Q(0)-Q(Q(Z*Q(0))+Q(Q(n*W)-Q(X*i))))+Q(Q(0)-Q(Q(aa*Q(0))+Q(Q(m*_)-Q($*h)))));S=Q(Q(Q(0)-Q(Q(Q(da*Q(0))+Q(q*ca))-Q(n*ba)))+Q(Q(0)-Q(Q(Q(ha*Q(0))+Q(k*fa))-Q(m*ea))));F=Q(Q(u*Q(0))+Q(Q(i*w)-Q(F*n)));o=Q(Q(o*Q(0))+Q(Q(i*t)-Q(R*n)));t=Q(Q(I*Q(0))+Q(Q(i*M)-Q(L*n)));E=Q(Q(E*Q(0))+Q(Q(h*x)-Q(O*m)));x=Q(Q(y*Q(0))+Q(Q(h*B)-Q(P*m)));y=Q(Q(T*Q(0))+Q(Q(h*V)-Q(U*m)));u=Q(Q(Q(0)-Q(Q(i*F)+Q(Q(o*Q(0))-Q(q*t))))+Q(Q(0)-Q(Q(h*E)+Q(Q(x*Q(0))-Q(k*y)))));w=Q(Q(Q(0)-Q(Q(Q(t*Q(0))+Q(q*o))-Q(n*F)))+Q(Q(0)-Q(Q(Q(y*Q(0))+Q(k*x))-Q(m*E))));B=Q(Q(S*u)-Q(w*s));o=Q(Q(j-Q(Q(F*Q(0))+Q(Q(n*t)-Q(o*i))))+Q(l-Q(Q(E*Q(0))+Q(Q(m*y)-Q(x*h)))));n=Q(Q(Q(0)-Q(Q(ba*Q(0))+Q(Q(n*da)-Q(ca*i))))+Q(Q(0)-Q(Q(ea*Q(0))+Q(Q(m*ha)-Q(fa*h)))));m=Q(Q(s*o)-Q(u*n));l=Q(Q(Q(0)-Q(Q(i*Z)+Q(Q(X*Q(0))-Q(q*W))))+Q(Q(0)-Q(Q(h*aa)+Q(Q($*Q(0))-Q(k*_)))));i=Q(Q(n*w)-Q(o*S));j=Q(Q(1)/Q(Q(A*B)+Q(Q(r*m)+Q(l*i))));N[p+40>>2]=Q(Q(r*s)-Q(S*l))*j;N[p+36>>2]=Q(Q(l*w)-Q(u*r))*j;N[p+32>>2]=B*j;N[p+24>>2]=Q(Q(A*S)-Q(n*r))*j;N[p+20>>2]=Q(Q(r*o)-Q(w*A))*j;N[p+16>>2]=i*j;N[p+8>>2]=Q(Q(l*n)-Q(s*A))*j;N[p+4>>2]=Q(Q(A*u)-Q(o*l))*j;N[p>>2]=m*j;a=J[p+12>>2];J[e+112>>2]=J[p+8>>2];J[e+116>>2]=a;a=J[p+4>>2];J[e+104>>2]=J[p>>2];J[e+108>>2]=a;a=J[p+20>>2];J[e+120>>2]=J[p+16>>2];J[e+124>>2]=a;a=J[p+28>>2];J[e+128>>2]=J[p+24>>2];J[e+132>>2]=a;a=J[p+36>>2];J[e+136>>2]=J[p+32>>2];J[e+140>>2]=a;a=J[p+44>>2];J[e+144>>2]=J[p+40>>2];J[e+148>>2]=a}ga=p+48|0;return ia}function Ac(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=0,p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=0,v=Q(0),w=0,x=0;p=ga-32|0;ga=p;Bd(a);H[a+280|0]=1;J[a>>2]=20932;J[a+276>>2]=0;H[a+408|0]=1;J[a+284>>2]=0;J[a+268>>2]=0;J[a+272>>2]=0;J[a+404>>2]=0;H[a+428|0]=1;J[a+396>>2]=0;J[a+400>>2]=0;J[a+424>>2]=0;H[a+448|0]=1;J[a+416>>2]=0;J[a+420>>2]=0;J[a+444>>2]=0;H[a+496|0]=1;J[a+436>>2]=0;J[a+440>>2]=0;J[a+492>>2]=0;J[a+484>>2]=0;J[a+488>>2]=0;H[a+516|0]=1;J[a+512>>2]=0;H[a+704|0]=1;J[a+684>>2]=b;J[a+504>>2]=0;J[a+508>>2]=0;J[a+700>>2]=0;J[a+692>>2]=0;J[a+696>>2]=0;H[a+724|0]=1;J[a+720>>2]=0;J[a+712>>2]=0;J[a+716>>2]=0;H[a+744|0]=1;J[a+740>>2]=0;J[a+732>>2]=0;J[a+736>>2]=0;H[a+764|0]=1;J[a+760>>2]=0;J[a+752>>2]=0;J[a+756>>2]=0;H[a+784|0]=1;J[a+780>>2]=0;J[a+772>>2]=0;J[a+776>>2]=0;H[a+804|0]=1;H[a+824|0]=1;J[a+800>>2]=0;J[a+792>>2]=0;J[a+796>>2]=0;H[a+844|0]=1;J[a+820>>2]=0;J[a+812>>2]=0;J[a+816>>2]=0;H[a+864|0]=1;J[a+840>>2]=0;J[a+832>>2]=0;J[a+836>>2]=0;H[a+884|0]=1;J[a+860>>2]=0;J[a+852>>2]=0;J[a+856>>2]=0;J[a+880>>2]=0;J[a+872>>2]=0;J[a+876>>2]=0;x=jc(a+928|0);jc(a+988|0);jc(a+1048|0);J[a+1120>>2]=0;H[a+1124|0]=1;H[a+1144|0]=1;b=a+1112|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1140>>2]=0;H[a+1248|0]=1;b=a+1132|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1244>>2]=0;b=a+1236|0;J[b>>2]=0;J[b+4>>2]=0;J[a+288>>2]=0;J[a+292>>2]=1065353216;J[a+236>>2]=8;I[a+472>>1]=0;J[a+296>>2]=0;J[a+300>>2]=0;J[a+304>>2]=0;J[a+308>>2]=0;J[a+312>>2]=0;J[a+476>>2]=0;J[a+388>>2]=1;J[a+380>>2]=0;J[a+384>>2]=4;J[a+372>>2]=0;J[a+376>>2]=1;J[a+364>>2]=1065353216;J[a+368>>2]=1065353216;J[a+356>>2]=1056964608;J[a+360>>2]=1056964608;J[a+348>>2]=1056964608;J[a+352>>2]=1056964608;J[a+340>>2]=1036831949;J[a+344>>2]=1065353216;J[a+332>>2]=1065353216;J[a+336>>2]=1060320051;J[a+324>>2]=1065353216;J[a+328>>2]=1036831949;J[a+316>>2]=1045220557;J[a+320>>2]=0;J[a+528>>2]=0;J[a+532>>2]=0;J[a+520>>2]=0;J[a+524>>2]=0;J[a+536>>2]=1065353216;J[a+540>>2]=0;J[a+544>>2]=0;J[a+548>>2]=0;J[a+552>>2]=0;J[a+556>>2]=1065353216;J[a+560>>2]=0;J[a+564>>2]=0;J[a+568>>2]=0;J[a+572>>2]=0;J[a+576>>2]=1065353216;J[a+580>>2]=0;J[a+584>>2]=1065353216;J[a+588>>2]=0;J[a+592>>2]=0;J[a+596>>2]=0;J[a+600>>2]=0;J[a+604>>2]=1065353216;J[a+608>>2]=0;J[a+612>>2]=0;J[a+616>>2]=0;J[a+620>>2]=0;H[a+924|0]=1;J[a+888>>2]=0;J[a+624>>2]=1065353216;J[a+628>>2]=0;J[a+680>>2]=0;J[a+916>>2]=0;J[a+920>>2]=0;J[a+908>>2]=0;J[a+912>>2]=0;J[a+900>>2]=0;J[a+904>>2]=0;J[a+892>>2]=0;J[a+896>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+4>>2]=1065353216;J[a+16>>2]=0;J[a+20>>2]=0;J[a+28>>2]=0;J[a+32>>2]=0;J[a+24>>2]=1065353216;J[a+36>>2]=0;J[a+40>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;J[a+44>>2]=1065353216;J[a+56>>2]=0;J[a+60>>2]=0;J[a- -64>>2]=0;b=J[a+404>>2];if(!(b?!b|!K[a+408|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+404>>2]=0;H[a+408|0]=1;J[a+396>>2]=0;J[a+400>>2]=0;b=J[a+424>>2];if(!(b?!b|!K[a+428|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+424>>2]=0;H[a+428|0]=1;J[a+416>>2]=0;J[a+420>>2]=0;b=J[a+444>>2];if(!(b?!b|!K[a+448|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+444>>2]=0;H[a+448|0]=1;J[a+436>>2]=0;J[a+440>>2]=0;b=J[a+420>>2];l=J[a+416>>2];a:{if((b|0)!=(l|0)){break a}b=l?l<<1:1;if((l|0)>=(b|0)){b=l;break a}if(b){J[8369]=J[8369]+1;h=ia[J[6782]](b<<2,16)|0;l=J[a+416>>2]}g=J[a+424>>2];b:{c:{if((l|0)>0){if(l-1>>>0>=3){t=l&-4;while(1){i=j<<2;J[i+h>>2]=J[g+i>>2];m=i|4;J[m+h>>2]=J[g+m>>2];m=i|8;J[m+h>>2]=J[g+m>>2];i=i|12;J[i+h>>2]=J[g+i>>2];j=j+4|0;k=k+4|0;if((t|0)!=(k|0)){continue}break}}k=l&3;if(k){while(1){i=j<<2;J[i+h>>2]=J[g+i>>2];j=j+1|0;f=f+1|0;if((k|0)!=(f|0)){continue}break}}if(K[a+428|0]){break c}break b}if(!g|!K[a+428|0]){break b}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}l=J[a+416>>2]}J[a+424>>2]=h;H[a+428|0]=1;J[a+420>>2]=b}g=J[a+424>>2];J[g+(l<<2)>>2]=1;h=l+1|0;J[a+416>>2]=h;d:{if((b|0)!=(h|0)){j=g;f=b;b=h;break d}f=b?b<<1:1;if((f|0)<=(b|0)){j=g;f=b;break d}e:{if(!f){j=0;break e}J[8369]=J[8369]+1;j=ia[J[6782]](f<<2,16)|0;g=J[a+424>>2];b=J[a+416>>2]}f:{g:{if((b|0)>0){l=0;h=0;if(b-1>>>0>=3){t=b&-4;k=0;while(1){i=h<<2;J[i+j>>2]=J[g+i>>2];m=i|4;J[m+j>>2]=J[g+m>>2];m=i|8;J[m+j>>2]=J[g+m>>2];i=i|12;J[i+j>>2]=J[g+i>>2];h=h+4|0;k=k+4|0;if((t|0)!=(k|0)){continue}break}}k=b&3;if(k){while(1){i=h<<2;J[i+j>>2]=J[g+i>>2];h=h+1|0;l=l+1|0;if((k|0)!=(l|0)){continue}break}}if(K[a+428|0]){break g}break f}if(!g|!K[a+428|0]){break f}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}b=J[a+416>>2]}J[a+424>>2]=j;H[a+428|0]=1;J[a+420>>2]=f}J[(b<<2)+j>>2]=2;g=b+1|0;J[a+416>>2]=g;h:{if((g|0)!=(f|0)){h=j;b=f;f=g;break h}b=f?f<<1:1;if((f|0)>=(b|0)){h=j;b=f;break h}i:{if(!b){h=0;break i}J[8369]=J[8369]+1;h=ia[J[6782]](b<<2,16)|0;j=J[a+424>>2];f=J[a+416>>2]}j:{k:{if((f|0)>0){l=0;g=0;if(f-1>>>0>=3){t=f&-4;k=0;while(1){i=g<<2;J[i+h>>2]=J[j+i>>2];m=i|4;J[m+h>>2]=J[j+m>>2];m=i|8;J[m+h>>2]=J[j+m>>2];i=i|12;J[i+h>>2]=J[j+i>>2];g=g+4|0;k=k+4|0;if((t|0)!=(k|0)){continue}break}}k=f&3;if(k){while(1){i=g<<2;J[i+h>>2]=J[j+i>>2];g=g+1|0;l=l+1|0;if((k|0)!=(l|0)){continue}break}}if(K[a+428|0]){break k}break j}if(!j|!K[a+428|0]){break j}}if(j){J[8370]=J[8370]+1;ia[J[6783]](j)}f=J[a+416>>2]}J[a+424>>2]=h;H[a+428|0]=1;J[a+420>>2]=b}J[(f<<2)+h>>2]=3;f=f+1|0;J[a+416>>2]=f;l:{if((b|0)!=(f|0)){g=h;b=f;break l}i=b?b<<1:1;if((i|0)<=(b|0)){g=h;break l}m:{if(!i){g=0;break m}J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;h=J[a+424>>2];b=J[a+416>>2]}n:{o:{if((b|0)>0){f=0;j=0;if(b-1>>>0>=3){t=b&-4;l=0;while(1){k=j<<2;J[k+g>>2]=J[h+k>>2];m=k|4;J[m+g>>2]=J[h+m>>2];m=k|8;J[m+g>>2]=J[h+m>>2];k=k|12;J[k+g>>2]=J[h+k>>2];j=j+4|0;l=l+4|0;if((t|0)!=(l|0)){continue}break}}l=b&3;if(l){while(1){k=j<<2;J[k+g>>2]=J[h+k>>2];j=j+1|0;f=f+1|0;if((l|0)!=(f|0)){continue}break}}if(K[a+428|0]){break o}break n}if(!h|!K[a+428|0]){break n}}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}b=J[a+416>>2]}J[a+424>>2]=g;H[a+428|0]=1;J[a+420>>2]=i}J[(b<<2)+g>>2]=0;J[a+416>>2]=b+1;J[8369]=J[8369]+1;b=ia[J[6782]](20,16)|0;J[b+4>>2]=35;J[b+8>>2]=0;J[b+12>>2]=0;J[b>>2]=13324;J[b+16>>2]=a;J[b+4>>2]=32;J[b>>2]=21236;J[a+192>>2]=b;J[b+12>>2]=1048576e3;b=a+1152|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1148>>2]=1065353216;b=a+1160|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1172|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1168>>2]=1065353216;b=a+1180|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1192|0;J[b>>2]=0;J[b+4>>2]=0;J[a+1188>>2]=1065353216;b=a+1200|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1208|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1216|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1224|0;J[b>>2]=0;J[b+4>>2]=1065353216;h=qk(a);b=h;J[b+12>>2]=1065353216;J[b+16>>2]=1;J[b+4>>2]=1065353216;J[b+8>>2]=1065353216;b=J[a+192>>2];n=Q(ia[J[J[b>>2]+48>>2]](b));b=J[a+712>>2];p:{if((c|0)<=(b|0)){break p}if(J[a+716>>2]<(c|0)){if(c){J[8369]=J[8369]+1;u=ia[J[6782]](P(c,104),16)|0;f=J[a+712>>2]}else{f=b}q:{if((f|0)<=0){break q}if((f|0)!=1){j=f&-2;while(1){g=P(o,104);sa(g+u|0,g+J[a+720>>2]|0,104);g=P(o|1,104);sa(g+u|0,g+J[a+720>>2]|0,104);o=o+2|0;w=w+2|0;if((j|0)!=(w|0)){continue}break}}if(!(f&1)){break q}f=P(o,104);sa(f+u|0,f+J[a+720>>2]|0,104)}f=J[a+720>>2];if(!(f?!f|!K[a+724|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](f)}J[a+720>>2]=u;H[a+724|0]=1;J[a+716>>2]=c}f=(b^-1)+c|0;j=c-b&3;if(j){o=0;while(1){qa(J[a+720>>2]+P(b,104)|0,0,104);b=b+1|0;o=o+1|0;if((j|0)!=(o|0)){continue}break}}if(f>>>0<3){break p}while(1){f=P(b,104);qa(f+J[a+720>>2]|0,0,104);qa((f+J[a+720>>2]|0)+104|0,0,104);qa((f+J[a+720>>2]|0)+208|0,0,104);qa((f+J[a+720>>2]|0)+312|0,0,104);b=b+4|0;if((c|0)!=(b|0)){continue}break}}J[a+712>>2]=c;if((c|0)>0){o=0;while(1){b=qa(J[a+720>>2]+P(o,104)|0,0,104);r=Q(0);s=Q(0);v=Q(0);q=Q(0);u=0;if(d){q=N[d+12>>2];v=N[d+8>>2];r=N[d+4>>2];s=N[d>>2];u=d+16|0}N[b+8>>2]=s;N[b+12>>2]=r;N[b+20>>2]=q;N[b+16>>2]=v;d=J[b+12>>2];J[b+24>>2]=J[b+8>>2];J[b+28>>2]=d;d=J[b+20>>2];J[b+32>>2]=J[b+16>>2];J[b+36>>2]=d;r:{if(!e){q=Q(1);e=0;break r}q=N[e>>2];e=e+4|0}N[b+88>>2]=q>Q(0)?Q(Q(1)/q):Q(0);J[p+28>>2]=0;N[p+24>>2]=n+v;N[p+20>>2]=n+r;N[p+16>>2]=n+s;J[p+12>>2]=0;N[p+8>>2]=v-n;N[p+4>>2]=r-n;N[p>>2]=s-n;J[b+96>>2]=Db(x,p,b);J[b+4>>2]=h;d=u;o=o+1|0;if((o|0)!=(c|0)){continue}break}}b=a+892|0;c=J[a+928>>2];s:{if(c){d=J[a+192>>2];n=Q(ia[J[J[d>>2]+48>>2]](d));q=N[c>>2];r=N[c+4>>2];s=N[c+8>>2];J[a+904>>2]=0;N[a+900>>2]=s-n;N[a+896>>2]=r-n;N[a+892>>2]=q-n;q=N[c+20>>2];r=N[c+24>>2];s=N[c+16>>2];J[a+920>>2]=0;N[a+916>>2]=n+r;N[a+912>>2]=n+q;c=a+908|0;N[c>>2]=n+s;d=J[a+188>>2];if(!d){break s}e=J[a+684>>2];f=J[e+32>>2];ia[J[J[f>>2]+16>>2]](f,d,b,c,J[e+36>>2]);break s}J[b>>2]=0;J[b+4>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;J[b+8>>2]=0;J[b+12>>2]=0}ga=p+32|0;return a}function eA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;u=ga-16|0;ga=u;ya(2495);c=J[a+180>>2];n=J[a+212>>2];a:{if((c|0)>=(n|0)){break a}if((n|0)>J[a+184>>2]){if(n){J[8369]=J[8369]+1;m=ia[J[6782]](n<<2,16)|0;e=J[a+180>>2]}else{e=c}b:{if((e|0)<=0){break b}if(e-1>>>0>=3){h=e&-4;while(1){i=g<<2;J[i+m>>2]=J[i+J[a+188>>2]>>2];f=i|4;J[f+m>>2]=J[f+J[a+188>>2]>>2];f=i|8;J[f+m>>2]=J[f+J[a+188>>2]>>2];i=i|12;J[i+m>>2]=J[i+J[a+188>>2]>>2];g=g+4|0;d=d+4|0;if((h|0)!=(d|0)){continue}break}}e=e&3;if(!e){break b}while(1){d=g<<2;J[d+m>>2]=J[d+J[a+188>>2]>>2];g=g+1|0;j=j+1|0;if((e|0)!=(j|0)){continue}break}}e=J[a+188>>2];if(!(e?!e|!K[a+192|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+188>>2]=m;H[a+192|0]=1;J[a+184>>2]=n}e=n+(c^-1)|0;d=n-c&3;if(d){g=0;while(1){J[J[a+188>>2]+(c<<2)>>2]=0;c=c+1|0;g=g+1|0;if((d|0)!=(g|0)){continue}break}}if(e>>>0<3){break a}while(1){e=c<<2;J[e+J[a+188>>2]>>2]=0;J[(e+J[a+188>>2]|0)+4>>2]=0;J[(e+J[a+188>>2]|0)+8>>2]=0;J[(e+J[a+188>>2]|0)+12>>2]=0;c=c+4|0;if((n|0)!=(c|0)){continue}break}}J[a+180>>2]=n;if((ia[J[J[a>>2]+104>>2]](a)|0)>0){c=0;while(1){e=c<<2;J[e+J[a+188>>2]>>2]=J[e+J[a+220>>2]>>2];c=c+1|0;if((ia[J[J[a>>2]+104>>2]](a)|0)>(c|0)){continue}break}}c=J[a+180>>2];if((c|0)>=2){Ek(a+176|0,u+8|0,0,c-1|0)}c=ia[J[J[a>>2]+104>>2]](a)|0;c=c?J[a+188>>2]:0;e=J[a+180>>2];g=J[a+196>>2];J[g+20>>2]=ia[J[J[a>>2]+20>>2]](a);J[g+16>>2]=e;J[g+12>>2]=c;J[g+4>>2]=b;e=J[g+32>>2];c:{if((e|0)>=0){break c}if(J[g+36>>2]<0){c=J[g+40>>2];if(!(c?!c|!K[g+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[g+44|0]=1;J[g+36>>2]=0;J[g+40>>2]=0}d=0;c=e;m=0-c&3;if(m){while(1){J[J[g+40>>2]+(c<<2)>>2]=0;c=c+1|0;d=d+1|0;if((m|0)!=(d|0)){continue}break}}if(e>>>0>4294967292){break c}while(1){e=c<<2;J[e+J[g+40>>2]>>2]=0;J[(e+J[g+40>>2]|0)+4>>2]=0;J[(e+J[g+40>>2]|0)+8>>2]=0;J[(e+J[g+40>>2]|0)+12>>2]=0;c=c+4|0;if(c){continue}break}}J[g+32>>2]=0;e=J[g+52>>2];d:{if((e|0)>=0){break d}if(J[g+56>>2]<0){c=J[g+60>>2];if(!(c?!c|!K[g- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[g+64|0]=1;J[g+56>>2]=0;J[g+60>>2]=0}d=0;c=e;m=0-c&3;if(m){while(1){J[J[g+60>>2]+(c<<2)>>2]=0;c=c+1|0;d=d+1|0;if((m|0)!=(d|0)){continue}break}}if(e>>>0>4294967292){break d}while(1){e=c<<2;J[e+J[g+60>>2]>>2]=0;J[(e+J[g+60>>2]|0)+4>>2]=0;J[(e+J[g+60>>2]|0)+8>>2]=0;J[(e+J[g+60>>2]|0)+12>>2]=0;c=c+4|0;if(c){continue}break}}J[g+52>>2]=0;e=J[g+72>>2];e:{if((e|0)>=0){break e}if(J[g+76>>2]<0){c=J[g+80>>2];if(!(c?!c|!K[g+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[g+84|0]=1;J[g+76>>2]=0;J[g+80>>2]=0}d=0;c=e;m=0-c&3;if(m){while(1){J[J[g+80>>2]+(c<<2)>>2]=0;c=c+1|0;d=d+1|0;if((m|0)!=(d|0)){continue}break}}if(e>>>0>4294967292){break e}while(1){e=c<<2;J[e+J[g+80>>2]>>2]=0;J[(e+J[g+80>>2]|0)+4>>2]=0;J[(e+J[g+80>>2]|0)+8>>2]=0;J[(e+J[g+80>>2]|0)+12>>2]=0;c=c+4|0;if(c){continue}break}}J[g+72>>2]=0;c=J[a+200>>2];e=J[a+24>>2];A=c,B=J[a+8>>2],C=ia[J[J[e>>2]+36>>2]](e)|0,z=J[J[c>>2]+8>>2],ia[z](A|0,B|0,C|0);f=J[a+204>>2];i=J[a+24>>2];t=J[a+196>>2];j=0;g=0;m=0;v=ga-16|0;ga=v;n=a;ya(2390);c=J[f+28>>2];f:{if((c|0)>=0){break f}if(J[f+32>>2]<0){a=J[f+36>>2];if(!(a?!a|!K[f+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[f+40|0]=1;J[f+32>>2]=0;J[f+36>>2]=0}a=c;e=0-c&3;if(e){while(1){J[J[f+36>>2]+(a<<2)>>2]=0;a=a+1|0;j=j+1|0;if((e|0)!=(j|0)){continue}break}}if(c>>>0>4294967292){break f}while(1){c=a<<2;J[c+J[f+36>>2]>>2]=0;J[(c+J[f+36>>2]|0)+4>>2]=0;J[(c+J[f+36>>2]|0)+8>>2]=0;J[(c+J[f+36>>2]|0)+12>>2]=0;a=a+4|0;if(a){continue}break}}J[f+28>>2]=0;a=0;l=ga-16|0;ga=l;o=f+4|0;h=J[o+4>>2];g:{if((h|0)<=0){break g}j=J[o+12>>2];while(1){c=a;k=j+(c<<3)|0;d=k;e=J[d>>2];if((c|0)!=(e|0)){while(1){c=j+(e<<3)|0;J[d>>2]=J[c>>2];c=J[c>>2];d=j+(c<<3)|0;e=J[d>>2];if((c|0)!=(e|0)){continue}break}}J[k>>2]=c;a=a+1|0;if((h|0)!=(a|0)){continue}break}if((h|0)<2){break g}Nk(o,l+8|0,0,h-1|0)}ga=l+16|0;p=J[f+8>>2];if((p|0)>0){c=0;while(1){a=c;e=c+1|0;h=(e|0)<(p|0)?p:e;d=h-1|0;j=J[f+16>>2];k=J[j+(c<<3)>>2];while(1){h:{e=c;if((c|0)==(d|0)){e=d;c=h;break h}c=e+1|0;if((k|0)==J[(c<<3)+j>>2]){continue}}break}i:{s=(a|0)>(e|0);if(s){break i}h=1;l=(e-a|0)+1|0;q=l&1;o=J[n+16>>2];d=a;if((a|0)!=(e|0)){w=l&-2;l=0;while(1){r=(d<<3)+j|0;y=J[(J[r+4>>2]<<2)+o>>2];if((k|0)==J[y+208>>2]){x=h;h=J[y+216>>2];h=x&((h|0)!=4&(h|0)!=1)}r=J[(J[r+12>>2]<<2)+o>>2];if((k|0)==J[r+208>>2]){x=h;h=J[r+216>>2];h=x&((h|0)!=4&(h|0)!=1)}d=d+2|0;l=l+2|0;if((w|0)!=(l|0)){continue}break}}j:{if(!q){break j}d=J[(J[((d<<3)+j|0)+4>>2]<<2)+o>>2];if((k|0)!=J[d+208>>2]){break j}d=J[d+216>>2];h=(d|0)!=4&(d|0)!=1&h}if(h&1){if(s){break i}while(1){d=J[J[n+16>>2]+(J[((a<<3)+j|0)+4>>2]<<2)>>2];if((k|0)==J[d+208>>2]&(J[d+216>>2]&-2)!=4){J[d+216>>2]=2}if((a|0)==(e|0)){break i}a=a+1|0;j=J[f+16>>2];continue}}while(1){d=J[(J[((a<<3)+j|0)+4>>2]<<2)+o>>2];if(!((k|0)!=J[d+208>>2]|J[d+216>>2]!=2)){if((J[d+216>>2]&-2)!=4){J[d+216>>2]=3}J[d+220>>2]=0}if((a|0)==(e|0)){break i}a=a+1|0;o=J[n+16>>2];j=J[f+16>>2];continue}}if((c|0)<(p|0)){continue}break}}c=i;p=ia[J[J[c>>2]+36>>2]](c)|0;if((p|0)>0){j=0;while(1){k=ia[J[J[c>>2]+40>>2]](c,j)|0;a=J[k+744>>2];e=J[k+740>>2];k:{if(!(J[e+216>>2]!=2?e:0)&(!a|J[a+216>>2]==2)){break k}d=J[e+204>>2];if(!(!(d&2)|J[e+216>>2]==2|d&4)){kb(a,0)}d=J[a+204>>2];if(!(!(d&2)|J[a+216>>2]==2|d&4)){kb(e,0)}if(!K[f+64|0]){break k}if(!(ia[J[J[c>>2]+28>>2]](c,e,a)|0)){break k}h=J[f+28>>2];l:{if((h|0)!=J[f+32>>2]){break l}i=h?h<<1:1;if((i|0)<=(h|0)){break l}m:{if(!i){e=0;break m}J[8369]=J[8369]+1;e=ia[J[6782]](i<<2,16)|0;h=J[f+28>>2]}n:{if((h|0)<=0){break n}o=0;a=0;if(h-1>>>0>=3){s=h&-4;l=0;while(1){d=a<<2;J[d+e>>2]=J[d+J[f+36>>2]>>2];q=d|4;J[q+e>>2]=J[q+J[f+36>>2]>>2];q=d|8;J[q+e>>2]=J[q+J[f+36>>2]>>2];d=d|12;J[d+e>>2]=J[d+J[f+36>>2]>>2];a=a+4|0;l=l+4|0;if((s|0)!=(l|0)){continue}break}}d=h&3;if(!d){break n}while(1){l=a<<2;J[l+e>>2]=J[l+J[f+36>>2]>>2];a=a+1|0;o=o+1|0;if((d|0)!=(o|0)){continue}break}}a=J[f+36>>2];if(!(!a|!K[f+40|0])){if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}h=J[f+28>>2]}J[f+36>>2]=e;H[f+40|0]=1;J[f+32>>2]=i}J[J[f+36>>2]+(h<<2)>>2]=k;J[f+28>>2]=h+1}j=j+1|0;if((p|0)!=(j|0)){continue}break}}xa();e=J[f+8>>2];ya(2731);o:{if(!K[f+64|0]){a=ia[J[J[c>>2]+44>>2]](c)|0;c=ia[J[J[c>>2]+36>>2]](c)|0;ia[J[J[t>>2]+8>>2]](t,J[n+16>>2],J[n+8>>2],a,c,-1);break o}j=J[f+28>>2];if((j|0)>=2){Mk(f+24|0,v+8|0,0,j-1|0)}if((e|0)<=0){break o}a=1;while(1){c=J[f+16>>2];o=J[c+(g<<3)>>2];l=1;p:{if((e|0)<=(g|0)){break p}while(1){s=J[J[n+16>>2]+(J[((g<<3)+c|0)+4>>2]<<2)>>2];d=J[f+48>>2];q:{if((d|0)!=J[f+52>>2]){break q}p=d?d<<1:1;if((p|0)<=(d|0)){break q}r:{if(!p){i=0;break r}J[8369]=J[8369]+1;i=ia[J[6782]](p<<2,16)|0;d=J[f+48>>2]}s:{if((d|0)<=0){break s}h=0;c=0;if(d-1>>>0>=3){w=d&-4;q=0;while(1){k=c<<2;J[k+i>>2]=J[k+J[f+56>>2]>>2];r=k|4;J[r+i>>2]=J[r+J[f+56>>2]>>2];r=k|8;J[r+i>>2]=J[r+J[f+56>>2]>>2];k=k|12;J[k+i>>2]=J[k+J[f+56>>2]>>2];c=c+4|0;q=q+4|0;if((w|0)!=(q|0)){continue}break}}k=d&3;if(!k){break s}while(1){q=c<<2;J[q+i>>2]=J[q+J[f+56>>2]>>2];c=c+1|0;h=h+1|0;if((k|0)!=(h|0)){continue}break}}c=J[f+56>>2];if(!(!c|!K[f+60|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[f+48>>2]}J[f+56>>2]=i;H[f+60|0]=1;J[f+52>>2]=p}J[J[f+56>>2]+(d<<2)>>2]=s;J[f+48>>2]=d+1;c=J[s+216>>2];l=((c|0)==2|(c|0)==5)&l;g=g+1|0;if((e|0)==(g|0)){g=e;break p}c=J[f+16>>2];if((o|0)==J[c+(g<<3)>>2]){continue}break}}h=0;c=0;t:{if((j|0)<=(m|0)){break t}k=J[f+36>>2];i=k+(m<<2)|0;c=J[i>>2];d=J[J[c+740>>2]+208>>2];if((d|0)<0){d=J[J[c+744>>2]+208>>2]}c=0;if((d|0)!=(o|0)){break t}a=m+1|0;d=(a|0)<(j|0)?j:a;h=d-1|0;a=m;while(1){u:{if((a|0)==(h|0)){a=d;break u}a=a+1|0;p=J[k+(a<<2)>>2];c=J[J[p+740>>2]+208>>2];if((c|0)<0){c=J[J[p+744>>2]+208>>2]}if((c|0)==(o|0)){continue}}break}h=a-m|0;c=i}if(!l){ia[J[J[t>>2]+8>>2]](t,J[f+56>>2],J[f+48>>2],c,h,o)}d=J[f+48>>2];v:{if((d|0)>=0){break v}if(J[f+52>>2]<0){c=J[f+56>>2];if(!(c?!c|!K[f+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[f+60|0]=1;J[f+52>>2]=0;J[f+56>>2]=0}i=0;c=d;l=0-c&3;if(l){while(1){J[J[f+56>>2]+(c<<2)>>2]=0;c=c+1|0;i=i+1|0;if((l|0)!=(i|0)){continue}break}}if(d>>>0>4294967292){break v}while(1){d=c<<2;J[d+J[f+56>>2]>>2]=0;J[(d+J[f+56>>2]|0)+4>>2]=0;J[(d+J[f+56>>2]|0)+8>>2]=0;J[(d+J[f+56>>2]|0)+12>>2]=0;c=c+4|0;if(c){continue}break}}m=h?a:m;J[f+48>>2]=0;if((e|0)>(g|0)){continue}break}}xa();ga=v+16|0;Dk(J[n+196>>2]);a=J[n+200>>2];ia[J[J[a>>2]+16>>2]](a,b,J[n+72>>2]);xa();ga=u+16|0}function IB(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0,f=Q(0),g=Q(0),h=0,i=0,j=Q(0),k=Q(0),l=0,m=0,n=0,o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=0;i=ga-80|0;ga=i;if(!(!K[a+171|0]&N[a+172>>2]<=Q(0))){H[a+168|0]=ia[J[J[a>>2]+48>>2]](a);g=Q(N[a+16>>2]-Q(N[a+44>>2]*c));N[a+16>>2]=g;a:{if(!(g>Q(0))){break a}f=N[a+28>>2];if(!(f<g)){break a}N[a+16>>2]=f;g=f}b:{if(!(g<Q(0))){break b}f=Q(R(N[a+24>>2]));if(!(f<Q(R(g)))){break b}g=Q(-f);N[a+16>>2]=g}N[a+20>>2]=g*c;h=J[a+8>>2];d=J[h+16>>2];J[i+24>>2]=J[h+12>>2];J[i+28>>2]=d;d=J[h+8>>2];J[i+16>>2]=J[h+4>>2];J[i+20>>2]=d;d=J[h+32>>2];J[i+40>>2]=J[h+28>>2];J[i+44>>2]=d;d=J[h+24>>2];J[i+32>>2]=J[h+20>>2];J[i+36>>2]=d;d=J[h+48>>2];J[i+56>>2]=J[h+44>>2];J[i+60>>2]=d;d=J[h+40>>2];J[i+48>>2]=J[h+36>>2];J[i+52>>2]=d;d=ga-240|0;ga=d;if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}h=J[a+176>>2]<<4;n=h+31904|0;j=N[n>>2];m=h+31908|0;g=N[m>>2];l=h+31912|0;f=N[l>>2];J[a+124>>2]=0;k=f;f=N[a+20>>2];f=Q(N[a+52>>2]+(f>Q(0)?f:Q(0)));N[a+120>>2]=Q(k*f)+N[a+100>>2];N[a+116>>2]=Q(g*f)+N[a+96>>2];N[a+112>>2]=N[a+92>>2]+Q(j*f);J[d+144>>2]=0;J[d+148>>2]=0;J[d+136>>2]=0;J[d+140>>2]=0;J[d+132>>2]=1065353216;J[d+124>>2]=0;J[d+128>>2]=0;J[d+216>>2]=1065353216;J[d+220>>2]=0;J[d+208>>2]=0;J[d+212>>2]=0;J[d+200>>2]=0;J[d+204>>2]=0;J[d+196>>2]=1065353216;J[d+188>>2]=0;J[d+192>>2]=0;J[d+152>>2]=1065353216;J[d+156>>2]=0;J[d+116>>2]=0;J[d+120>>2]=0;J[d+112>>2]=1065353216;J[d+180>>2]=0;J[d+184>>2]=0;J[d+176>>2]=1065353216;h=J[a+12>>2];r=Q(ia[J[J[h>>2]+48>>2]](h));o=N[n>>2];s=N[a+96>>2];p=N[m>>2];k=N[a+100>>2];j=N[l>>2];g=N[a+92>>2];f=N[a+56>>2];J[d+236>>2]=0;f=Q(r+f);N[d+232>>2]=k+Q(j*f);N[d+228>>2]=s+Q(f*p);N[d+224>>2]=g+Q(o*f);h=J[a+124>>2];J[d+168>>2]=J[a+120>>2];J[d+172>>2]=h;h=J[a+116>>2];J[d+160>>2]=J[a+112>>2];J[d+164>>2]=h;l=J[a+8>>2];if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}h=J[a+176>>2]<<4;j=N[h+31904>>2];g=N[h+31908>>2];f=N[h+31912>>2];J[d+28>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+44>>2]=0;J[d+48>>2]=0;J[d+104>>2]=0;J[d+108>>2]=1060439169;N[d+100>>2]=-f;N[d+96>>2]=-g;J[d+84>>2]=0;J[d+12>>2]=1065353216;J[d+20>>2]=0;J[d+24>>2]=0;J[d+8>>2]=19248;N[d+92>>2]=-j;J[d+88>>2]=l;h=J[l+188>>2];I[d+16>>1]=L[h+4>>1];I[d+18>>1]=L[h+6>>1];h=J[a+12>>2];c:{if(K[a+170|0]){$e(l,h,d+176|0,d+112|0,d+8|0,N[b+56>>2]);break c}ic(b,h,d+176|0,d+112|0,d+8|0,Q(0))}g=N[d+12>>2];d:{if(g<Q(1)){if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}h=J[a+176>>2]<<4;e:{if(!(Q(Q(N[d+60>>2]*N[h+31912>>2])+Q(Q(N[d+52>>2]*N[h+31904>>2])+Q(N[d+56>>2]*N[h+31908>>2])))>Q(0))){break e}N[a+108>>2]=N[a+52>>2]*g;if(K[a+180|0]){f=Q(Q(1)-g);N[a+92>>2]=Q(f*N[a+92>>2])+Q(g*N[a+112>>2]);N[a+96>>2]=Q(f*N[a+96>>2])+Q(g*N[a+116>>2]);N[a+100>>2]=Q(f*N[a+100>>2])+Q(g*N[a+120>>2]);break e}h=J[a+116>>2];J[a+92>>2]=J[a+112>>2];J[a+96>>2]=h;h=J[a+124>>2];J[a+100>>2]=J[a+120>>2];J[a+104>>2]=h}J[a+16>>2]=0;J[a+20>>2]=0;break d}N[a+108>>2]=N[a+52>>2];h=J[a+124>>2];J[a+100>>2]=J[a+120>>2];J[a+104>>2]=h;h=J[a+116>>2];J[a+92>>2]=J[a+112>>2];J[a+96>>2]=h}ga=d+240|0;q=i- -64|0;f:{if(K[a+171|0]){il(a,b,a+60|0);break f}k=N[a+172>>2];N[a+172>>2]=k-c;j=N[a- -64>>2];g=N[a+68>>2];f=N[a+60>>2];J[i+12>>2]=0;o=g;g=c<k?c:k;N[i+8>>2]=o*g;N[i+4>>2]=g*j;N[i>>2]=g*f;il(a,b,i)}e=ga-416|0;ga=e;d=J[a+124>>2];J[e+216>>2]=J[a+120>>2];J[e+220>>2]=d;d=J[a+116>>2];J[e+208>>2]=J[a+112>>2];J[e+212>>2]=d;f=N[a+16>>2];g=Q((f<Q(0)?Q(-f):Q(0))*c);g:{if(!(g>Q(0))){break g}f=N[a+24>>2];if(!(f<g)){break g}g=K[a+168|0]?f:K[a+169|0]?g:f}if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}d=J[a+176>>2]<<4;n=d+31912|0;j=N[n>>2];f=N[d+31908>>2];m=d+31904|0;g=Q(g+N[a+108>>2]);r=Q(N[m>>2]*g);o=Q(N[a+112>>2]-r);N[a+112>>2]=o;s=Q(g*f);p=Q(N[a+116>>2]-s);N[a+116>>2]=p;k=Q(g*j);g=Q(N[a+120>>2]-k);N[a+120>>2]=g;f=N[a+40>>2];l=J[a+8>>2];J[e+124>>2]=0;J[e+128>>2]=0;J[e+132>>2]=0;J[e+136>>2]=0;J[e+140>>2]=0;J[e+144>>2]=0;J[e+180>>2]=0;J[e+108>>2]=1065353216;J[e+116>>2]=0;J[e+120>>2]=0;J[e+184>>2]=l;J[e+104>>2]=19248;d=J[n+4>>2];J[e+196>>2]=J[n>>2];J[e+200>>2]=d;d=J[m+4>>2];J[e+188>>2]=J[m>>2];J[e+192>>2]=d;N[e+204>>2]=f;h=J[l+188>>2];I[e+112>>1]=L[h+4>>1];I[e+114>>1]=L[h+6>>1];J[e+20>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;J[e+40>>2]=0;J[e+76>>2]=0;J[e+4>>2]=1065353216;J[e+12>>2]=0;J[e+16>>2]=0;J[e+80>>2]=l;J[e>>2]=19248;d=J[n+4>>2];J[e+92>>2]=J[n>>2];J[e+96>>2]=d;d=J[m+4>>2];J[e+84>>2]=J[m>>2];J[e+88>>2]=d;N[e+100>>2]=f;I[e+8>>1]=L[h+4>>1];I[e+10>>1]=L[h+6>>1];m=e+224|4;l=e+288|4;h=e+352|4;h:{while(1){J[e+352>>2]=1065353216;J[h+8>>2]=0;J[h+12>>2]=0;J[h>>2]=0;J[h+4>>2]=0;J[e+372>>2]=1065353216;J[e+384>>2]=0;J[e+388>>2]=0;J[e+376>>2]=0;J[e+380>>2]=0;J[e+392>>2]=1065353216;J[e+396>>2]=0;J[e+288>>2]=1065353216;J[l+8>>2]=0;J[l+12>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[e+308>>2]=1065353216;J[e+320>>2]=0;J[e+324>>2]=0;J[e+312>>2]=0;J[e+316>>2]=0;J[e+328>>2]=1065353216;J[e+332>>2]=0;J[e+224>>2]=1065353216;J[m+8>>2]=0;J[m+12>>2]=0;J[m>>2]=0;J[m+4>>2]=0;J[e+244>>2]=1065353216;J[e+256>>2]=0;J[e+260>>2]=0;J[e+248>>2]=0;J[e+252>>2]=0;J[e+264>>2]=1065353216;J[e+268>>2]=0;d=J[a+104>>2];J[e+408>>2]=J[a+100>>2];J[e+412>>2]=d;d=J[a+96>>2];J[e+400>>2]=J[a+92>>2];J[e+404>>2]=d;d=J[a+124>>2];J[e+344>>2]=J[a+120>>2];J[e+348>>2]=d;d=J[a+116>>2];J[e+336>>2]=J[a+112>>2];J[e+340>>2]=d;N[e+276>>2]=p-s;N[e+280>>2]=g-k;J[e+284>>2]=0;N[e+272>>2]=o-r;i:{if(K[a+170|0]){$e(J[a+8>>2],J[a+12>>2],e+352|0,e+288|0,e+104|0,N[b+56>>2]);if(N[e+108>>2]<Q(1)){break i}$e(J[a+8>>2],J[a+12>>2],e+352|0,e+224|0,e,N[b+56>>2]);break i}ic(b,J[a+12>>2],e+352|0,e+288|0,e+104|0,N[b+56>>2]);if(N[e+108>>2]<Q(1)){break i}ic(b,J[a+12>>2],e+352|0,e+224|0,e,N[b+56>>2])}f=N[a+16>>2];f=Q((f<Q(0)?Q(-f):Q(0))*c);n=K[a+182|0];j:{if(n){d=1;if(N[e+108>>2]<Q(1)){break j}d=N[e+4>>2]<Q(1);break j}d=N[e+4>>2]<Q(1)}k:{l:{m:{if(!(f>Q(0))){break m}j=N[a+52>>2];if((j>f^-1|d^-1|t)&1){break m}if(K[a+168|0]|!K[a+169|0]){break l}t=0}g=N[e+108>>2];if(!(g<Q(1)|t)){break k}b=K[a+181|0];f=N[e+168>>2];H[a+181|0]=0;H[a+169|0]=0;J[a+16>>2]=0;J[a+20>>2]=0;c=N[a+96>>2];g=n?b?g:Q(Q(c-f)*Q(.5)):g;f=Q(Q(1)-g);N[a+92>>2]=Q(f*N[a+92>>2])+Q(g*N[a+112>>2]);N[a+96>>2]=Q(f*c)+Q(g*N[a+116>>2]);N[a+100>>2]=Q(f*N[a+100>>2])+Q(g*N[a+120>>2]);break h}d=J[e+212>>2];J[a+112>>2]=J[e+208>>2];J[a+116>>2]=d;d=J[e+220>>2];J[a+120>>2]=J[e+216>>2];J[a+124>>2]=d;if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}d=J[a+176>>2]<<4;g=N[d+31912>>2];f=N[d+31908>>2];j=Q(j+N[a+108>>2]);o=Q(N[a+112>>2]-Q(N[d+31904>>2]*j));N[a+112>>2]=o;p=Q(N[a+116>>2]-Q(j*f));N[a+116>>2]=p;g=Q(N[a+120>>2]-Q(j*g));N[a+120>>2]=g;t=1;continue}break}H[a+181|0]=1;n:{if(!n){break n}p=N[a+24>>2];if(!(p<f)|!(K[a+169|0]?K[a+168|0]:1)){break n}k=Q(k+N[a+120>>2]);j=Q(s+N[a+116>>2]);g=Q(r+N[a+112>>2]);if(!K[31952]){J[7977]=0;J[7978]=0;J[7976]=1065353216;J[7979]=0;J[7980]=0;J[7982]=0;J[7983]=0;J[7981]=1065353216;J[7984]=0;J[7985]=0;J[7986]=1065353216;J[7987]=0;H[31952]=1}b=J[a+176>>2]<<4;f=N[b+31904>>2];c=N[b+31908>>2];o=k;k=Q(p+N[a+108>>2]);N[a+120>>2]=o-Q(k*N[b+31912>>2]);N[a+116>>2]=j-Q(k*c);N[a+112>>2]=g-Q(f*k)}b=J[a+116>>2];J[a+92>>2]=J[a+112>>2];J[a+96>>2]=b;b=J[a+124>>2];J[a+100>>2]=J[a+120>>2];J[a+104>>2]=b}ga=e+416|0;b=J[a+104>>2];J[q+8>>2]=J[a+100>>2];J[q+12>>2]=b;b=J[a+96>>2];J[q>>2]=J[a+92>>2];J[q+4>>2]=b;b=J[a+8>>2];J[b+260>>2]=J[b+260>>2]+1;a=J[i+28>>2];J[b+12>>2]=J[i+24>>2];J[b+16>>2]=a;a=J[i+20>>2];J[b+4>>2]=J[i+16>>2];J[b+8>>2]=a;a=J[i+44>>2];J[b+28>>2]=J[i+40>>2];J[b+32>>2]=a;a=J[i+36>>2];J[b+20>>2]=J[i+32>>2];J[b+24>>2]=a;a=J[i+52>>2];J[b+36>>2]=J[i+48>>2];J[b+40>>2]=a;a=J[i+60>>2];J[b+44>>2]=J[i+56>>2];J[b+48>>2]=a;a=J[q+4>>2];J[b+52>>2]=J[q>>2];J[b+56>>2]=a;a=J[q+12>>2];J[b+60>>2]=J[q+8>>2];J[b+64>>2]=a}ga=i+80|0}function zG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=0,E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0);g=ga-176|0;ga=g;$=J[b+4>>2];aa=J[c+4>>2];if(!(J[$+68>>2]==J[a+40>>2]&J[aa+68>>2]==J[a+44>>2])){h=J[a+8>>2];r=J[h+8>>2];if((r|0)>0){while(1){i=J[(J[h+16>>2]+P(f,12)|0)+8>>2];if(i){ia[J[J[i>>2]>>2]](i)|0;j=J[a+4>>2];ia[J[J[j>>2]+60>>2]](j,i)}f=f+1|0;if((r|0)!=(f|0)){continue}break}h=J[a+8>>2]}Am(h)}J[g+20>>2]=0;J[g+12>>2]=0;J[g+16>>2]=0;H[g+24|0]=1;i=J[a+8>>2];s=J[i+8>>2];a:{if((s|0)<=0){break a}while(1){h=J[(J[i+16>>2]+P(l,12)|0)+8>>2];if(h){ia[J[J[h>>2]+16>>2]](h,g+8|0);f=0;j=J[g+12>>2];if((j|0)>0){while(1){k=J[J[g+20>>2]+(f<<2)>>2];if(J[k+748>>2]){J[e+4>>2]=k;h=J[k+740>>2];j=J[J[e+8>>2]+8>>2];r=(h|0)==(j|0);m=h;h=J[J[e+12>>2]+8>>2];ab(k,(r?m:h)+4|0,(r?h:j)+4|0);J[e+4>>2]=0;j=J[g+12>>2]}f=f+1|0;if((j|0)>(f|0)){continue}break}}b:{if((j|0)>=0){break b}if(J[g+16>>2]<0){h=J[g+20>>2];if(!(h?!h|!K[g+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](h)}H[g+24|0]=1;J[g+16>>2]=0;J[g+20>>2]=0}s=0;f=j;h=0-f&3;if(h){while(1){J[J[g+20>>2]+(f<<2)>>2]=0;f=f+1|0;s=s+1|0;if((h|0)!=(s|0)){continue}break}}if(j>>>0>4294967292){break b}while(1){h=f<<2;J[h+J[g+20>>2]>>2]=0;J[(h+J[g+20>>2]|0)+4>>2]=0;J[(h+J[g+20>>2]|0)+8>>2]=0;J[(h+J[g+20>>2]|0)+12>>2]=0;f=f+4|0;if(f){continue}break}}J[g+12>>2]=0;s=J[i+8>>2]}l=l+1|0;if((s|0)>(l|0)){continue}break}h=J[g+20>>2];if(!h|!K[g+24|0]){break a}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}}r=J[$+64>>2];j=J[aa+64>>2];f=J[a+4>>2];h=J[a+8>>2];J[g+168>>2]=J[a+32>>2];J[g+164>>2]=h;J[g+160>>2]=e;J[g+156>>2]=d;J[g+152>>2]=f;J[g+140>>2]=0;J[g+136>>2]=9936;J[g+148>>2]=c;J[g+144>>2]=b;h=J[r>>2];c:{if(!h){break c}d=J[j>>2];if(!d){break c}f=J[b+12>>2];w=N[f+8>>2];n=Q(-N[f+48>>2]);t=N[f+24>>2];p=N[f+52>>2];x=N[f+40>>2];u=N[f+56>>2];e=J[c+12>>2];v=N[e+56>>2];q=N[e+48>>2];o=N[e+52>>2];ea=Q(Q(Q(Q(w*n)-Q(t*p))-Q(x*u))+Q(Q(v*x)+Q(Q(q*w)+Q(t*o))));y=N[f+4>>2];C=N[f+20>>2];z=N[f+36>>2];fa=Q(Q(Q(Q(y*n)-Q(C*p))-Q(z*u))+Q(Q(v*z)+Q(Q(q*y)+Q(C*o))));I=N[e+40>>2];E=N[e+24>>2];L=N[e+8>>2];F=N[e+36>>2];M=N[e+20>>2];G=N[e+4>>2];W=N[f>>2];A=Q(W*n);n=N[f+16>>2];A=Q(A-Q(n*p));p=N[f+32>>2];ha=Q(Q(A-Q(p*u))+Q(Q(v*p)+Q(Q(q*W)+Q(n*o))));v=N[e+16>>2];q=N[e>>2];o=N[e+32>>2];J[8369]=J[8369]+1;e=ia[J[6782]](1024,16)|0;J[e+4>>2]=d;J[e>>2]=h;da=Q(Q(I*x)+Q(Q(L*w)+Q(t*E)));T=Q(R(da));A=Q(Q(F*x)+Q(Q(G*w)+Q(t*M)));U=Q(R(A));O=Q(Q(o*x)+Q(Q(q*w)+Q(t*v)));V=Q(R(O));S=Q(Q(I*z)+Q(Q(L*y)+Q(C*E)));w=Q(R(S));t=Q(Q(F*z)+Q(Q(G*y)+Q(C*M)));x=Q(R(t));y=Q(Q(o*z)+Q(Q(q*y)+Q(C*v)));C=Q(R(y));z=Q(Q(I*p)+Q(Q(L*W)+Q(n*E)));I=Q(R(z));E=Q(Q(F*p)+Q(Q(G*W)+Q(n*M)));L=Q(R(E));F=Q(Q(o*p)+Q(Q(q*W)+Q(n*v)));M=Q(R(F));X=124;f=128;l=128;j=1;while(1){d:{e:{f:{r=j-1|0;s=r<<3;d=s+e|0;D=J[d>>2];B=J[d+4>>2];G=N[B+24>>2];n=N[B+8>>2];ba=Q(Q(Q(G-n)*Q(.5))+Q(0));p=N[B+16>>2];u=N[B>>2];ca=Q(Q(Q(p-u)*Q(.5))+Q(0));v=N[B+20>>2];o=N[B+4>>2];W=Q(Q(Q(v-o)*Q(.5))+Q(0));q=Q(Q(ba*I)+Q(Q(ca*M)+Q(L*W)));n=Q(Q(G+n)*Q(.5));u=Q(Q(p+u)*Q(.5));v=Q(Q(v+o)*Q(.5));o=Q(ha+Q(Q(n*z)+Q(Q(u*F)+Q(E*v))));g:{if(!(N[D>>2]<=Q(q+o))|!(N[D+16>>2]>=Q(o-q))){break g}q=Q(Q(ba*w)+Q(Q(ca*C)+Q(x*W)));o=Q(fa+Q(Q(n*S)+Q(Q(u*y)+Q(t*v))));if(!(N[D+4>>2]<=Q(q+o))|!(N[D+20>>2]>=Q(o-q))){break g}q=Q(Q(ba*T)+Q(Q(ca*V)+Q(U*W)));o=Q(ea+Q(Q(n*da)+Q(Q(u*O)+Q(A*v))));if(!(N[D+8>>2]<=Q(q+o))|!(N[D+24>>2]>=Q(o-q))){break g}h:{if((r|0)<=(X|0)){d=f;h=e;break h}d=f<<1;i:{if((f|0)>=(d|0)){h=e;break i}if((d|0)<=(l|0)){h=e;break i}j:{if(!f){h=0;break j}J[8369]=J[8369]+1;h=ia[J[6782]](f<<4,16)|0;if((f|0)<=0){break j}l=0;X=0;if(f-1>>>0>=3){Z=f&-4;Y=0;while(1){_=X<<3;m=_+h|0;k=e+_|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;i=_|8;m=i+h|0;k=e+i|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;i=_|16;m=i+h|0;k=e+i|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;i=_|24;m=i+h|0;k=e+i|0;i=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=i;X=X+4|0;Y=Y+4|0;if((Z|0)!=(Y|0)){continue}break}}m=f&3;if(!m){break j}while(1){f=X<<3;k=f+h|0;i=e+f|0;f=J[i+4>>2];J[k>>2]=J[i>>2];J[k+4>>2]=f;X=X+1|0;l=l+1|0;if((m|0)!=(l|0)){continue}break}}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}l=d}X=d-4|0}e=J[B+40>>2];if(J[D+40>>2]){f=J[D+36>>2];if(e){e=h+s|0;J[e+4>>2]=J[B+36>>2];J[e>>2]=f;e=J[D+40>>2];f=(j<<3)+h|0;J[f+4>>2]=J[B+36>>2];J[f>>2]=e;e=J[D+36>>2];J[f+12>>2]=J[B+40>>2];J[f+8>>2]=e;e=J[D+40>>2];J[f+20>>2]=J[B+40>>2];J[f+16>>2]=e;j=j+3|0;break e}e=h+s|0;J[e+4>>2]=B;J[e>>2]=f;f=J[D+40>>2];e=(j<<3)+h|0;J[e+4>>2]=B;J[e>>2]=f;break f}if(e){e=h+s|0;J[e+4>>2]=J[B+36>>2];J[e>>2]=D;e=(j<<3)+h|0;J[e+4>>2]=J[B+40>>2];J[e>>2]=D;break f}ia[J[J[g+136>>2]+8>>2]](g+136|0,D,B);f=d;e=h}j=r;break d}j=j+1|0}f=d;e=h}if(j){continue}break}if(!e){break c}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}}Y=J[a+8>>2];if(J[Y+8>>2]>0){j=0;while(1){h=P(j,12);d=h+J[Y+16>>2]|0;r=J[d+8>>2];k:{if(!r){break k}f=J[$+24>>2]+P(J[d>>2],80)|0;e=J[f+64>>2];d=J[b+12>>2];v=N[d+52>>2];q=N[d+56>>2];y=N[f+48>>2];C=N[f+52>>2];z=N[f+56>>2];I=N[f+4>>2];E=N[f+20>>2];L=N[f+36>>2];F=N[f+8>>2];M=N[f+24>>2];G=N[f+40>>2];T=N[d+20>>2];A=N[d+24>>2];n=N[f>>2];U=N[d+36>>2];p=N[f+16>>2];O=N[d+40>>2];u=N[f+32>>2];o=N[d+48>>2];V=N[d+8>>2];S=N[d>>2];w=N[d+4>>2];t=N[d+16>>2];x=N[d+32>>2];f=0;J[g+68>>2]=0;J[g+52>>2]=0;J[g+36>>2]=0;J[g+20>>2]=0;N[g+40>>2]=Q(u*O)+Q(Q(n*x)+Q(U*p));N[g+24>>2]=Q(u*A)+Q(Q(n*t)+Q(T*p));N[g+8>>2]=Q(u*V)+Q(Q(n*S)+Q(w*p));N[g+48>>2]=Q(G*O)+Q(Q(F*x)+Q(U*M));N[g+44>>2]=Q(L*O)+Q(Q(I*x)+Q(U*E));N[g+32>>2]=Q(G*A)+Q(Q(F*t)+Q(T*M));N[g+28>>2]=Q(L*A)+Q(Q(I*t)+Q(T*E));N[g+16>>2]=Q(G*V)+Q(Q(F*S)+Q(w*M));N[g+12>>2]=Q(L*V)+Q(Q(I*S)+Q(w*E));N[g+64>>2]=q+Q(Q(z*O)+Q(Q(y*x)+Q(U*C)));N[g+60>>2]=v+Q(Q(z*A)+Q(Q(y*t)+Q(T*C)));N[g+56>>2]=o+Q(Q(z*V)+Q(Q(y*S)+Q(w*C)));d=g+8|0;ia[J[J[e>>2]+8>>2]](e,d,g+120|0,g+104|0);i=J[aa+24>>2]+P(J[(h+J[Y+16>>2]|0)+4>>2],80)|0;e=J[i+64>>2];l=J[c+12>>2];v=N[l+52>>2];q=N[l+56>>2];y=N[i+48>>2];C=N[i+52>>2];z=N[i+56>>2];I=N[i+4>>2];E=N[i+20>>2];L=N[i+36>>2];F=N[i+8>>2];M=N[i+24>>2];G=N[i+40>>2];T=N[l+20>>2];A=N[l+24>>2];n=N[i>>2];U=N[l+36>>2];p=N[i+16>>2];O=N[l+40>>2];u=N[i+32>>2];o=N[l+48>>2];V=N[l+8>>2];S=N[l>>2];w=N[l+4>>2];t=N[l+16>>2];x=N[l+32>>2];J[g+68>>2]=0;J[g+52>>2]=0;J[g+36>>2]=0;J[g+20>>2]=0;N[g+40>>2]=Q(u*O)+Q(Q(n*x)+Q(U*p));N[g+24>>2]=Q(u*A)+Q(Q(n*t)+Q(T*p));N[g+8>>2]=Q(u*V)+Q(Q(n*S)+Q(w*p));N[g+48>>2]=Q(G*O)+Q(Q(F*x)+Q(U*M));N[g+44>>2]=Q(L*O)+Q(Q(I*x)+Q(U*E));N[g+32>>2]=Q(G*A)+Q(Q(F*t)+Q(T*M));N[g+28>>2]=Q(L*A)+Q(Q(I*t)+Q(T*E));N[g+16>>2]=Q(G*V)+Q(Q(F*S)+Q(w*M));N[g+12>>2]=Q(L*V)+Q(Q(I*S)+Q(w*E));N[g+64>>2]=q+Q(Q(z*O)+Q(Q(y*x)+Q(U*C)));N[g+60>>2]=v+Q(Q(z*A)+Q(Q(y*t)+Q(T*C)));N[g+56>>2]=o+Q(Q(z*V)+Q(Q(y*S)+Q(w*C)));ia[J[J[e>>2]+8>>2]](e,d,g+88|0,g+72|0);d=0;l:{if(N[g+120>>2]>N[g+72>>2]){break l}d=0;if(N[g+104>>2]<N[g+88>>2]){break l}d=1}if(!(N[g+124>>2]>N[g+76>>2])&(!(N[g+108>>2]<N[g+92>>2])&(N[g+112>>2]<N[g+96>>2]|N[g+128>>2]>N[g+80>>2]?f:d))){break k}ia[J[J[r>>2]>>2]](r)|0;d=J[a+4>>2];ia[J[J[d>>2]+60>>2]](d,r);d=h+J[Y+16>>2]|0;i=J[d+4>>2];l=J[d>>2];h=J[a+16>>2];m:{if((h|0)!=J[a+20>>2]){break m}Z=h?h<<1:1;if((Z|0)<=(h|0)){break m}n:{if(!Z){s=0;break n}J[8369]=J[8369]+1;s=ia[J[6782]](P(Z,12),16)|0;h=J[a+16>>2]}o:{if((h|0)<=0){break o}r=h&1;if((h|0)!=1){e=h&-2;h=0;while(1){d=P(f,12);m=d+s|0;k=d+J[a+24>>2]|0;d=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=d;J[m+8>>2]=J[k+8>>2];d=P(f|1,12);m=d+s|0;k=d+J[a+24>>2]|0;d=J[k+4>>2];J[m>>2]=J[k>>2];J[m+4>>2]=d;J[m+8>>2]=J[k+8>>2];f=f+2|0;h=h+2|0;if((e|0)!=(h|0)){continue}break}}if(!r){break o}d=P(f,12);h=d+s|0;e=d+J[a+24>>2]|0;d=J[e+4>>2];J[h>>2]=J[e>>2];J[h+4>>2]=d;J[h+8>>2]=J[e+8>>2]}d=J[a+24>>2];if(!(d?!d|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+24>>2]=s;H[a+28|0]=1;J[a+20>>2]=Z;h=J[a+16>>2]}d=J[a+24>>2]+P(h,12)|0;J[d+8>>2]=0;J[d+4>>2]=i;J[d>>2]=l;J[a+16>>2]=J[a+16>>2]+1}j=j+1|0;if((j|0)<J[Y+8>>2]){continue}break}}if(J[a+16>>2]>0){f=0;while(1){c=J[a+8>>2];b=J[a+24>>2]+P(f,12)|0;ia[J[J[c>>2]+8>>2]](c,J[b>>2],J[b+4>>2])|0;f=f+1|0;if((f|0)<J[a+16>>2]){continue}break}}b=J[a+24>>2];if(!(b?!b|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+24>>2]=0;H[a+28|0]=1;J[a+16>>2]=0;J[a+20>>2]=0;ga=g+176|0}function az(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=Q(0),k=Q(0),l=Q(0),m=0,n=0,o=0,p=Q(0),q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=0,E=0,F=Q(0),G=Q(0);f=ga-176|0;ga=f;i=J[a+48>>2];e=J[a+52>>2];a:{if(!e){break a}e=J[e+20>>2];if(!e){break a}if(!(ia[J[J[e>>2]+48>>2]](e)&1)){break a}J[f+40>>2]=0;J[f+44>>2]=0;J[f+32>>2]=1065353216;J[f+36>>2]=1065353216;g=J[J[a+52>>2]+20>>2];e=J[a+8>>2];u=N[e+52>>2];p=N[e+12>>2];s=N[e+8>>2];v=N[e+56>>2];w=N[e+28>>2];y=N[e+20>>2];z=N[e+24>>2];A=N[e+60>>2];B=N[e+44>>2];C=N[e+36>>2];t=N[e+40>>2];x=N[e+4>>2];j=N[b+8>>2];k=N[b>>2];l=N[b+4>>2];J[f+148>>2]=0;N[f+144>>2]=A+Q(Q(j*B)+Q(Q(k*C)+Q(l*t)));N[f+140>>2]=v+Q(Q(j*w)+Q(Q(k*y)+Q(l*z)));N[f+136>>2]=u+Q(Q(j*p)+Q(Q(k*x)+Q(l*s)));p=N[e+8>>2];s=N[e+12>>2];j=N[b+20>>2];k=N[b+24>>2];x=N[e+4>>2];l=N[b+16>>2];J[f+20>>2]=0;N[f+16>>2]=A+Q(Q(k*B)+Q(Q(l*C)+Q(t*j)));N[f+12>>2]=v+Q(Q(k*w)+Q(Q(l*y)+Q(z*j)));N[f+8>>2]=u+Q(Q(k*s)+Q(Q(l*x)+Q(j*p)));o=f+136|0;h=f+8|0;n=f+32|0;ia[J[J[g>>2]+8>>2]](g,o,h,n);g=J[J[a+52>>2]+20>>2];u=N[e+52>>2];p=N[e+8>>2];s=N[e+12>>2];v=N[e+56>>2];w=N[e+20>>2];y=N[e+24>>2];z=N[e+28>>2];A=N[e+60>>2];B=N[e+36>>2];C=N[e+40>>2];j=N[b+20>>2];t=N[e+44>>2];k=N[b+24>>2];x=N[e+4>>2];l=N[b+16>>2];J[f+148>>2]=0;N[f+144>>2]=A+Q(Q(k*t)+Q(Q(l*B)+Q(j*C)));N[f+140>>2]=v+Q(Q(k*z)+Q(Q(l*w)+Q(j*y)));N[f+136>>2]=u+Q(Q(k*s)+Q(Q(l*x)+Q(j*p)));p=N[e+8>>2];s=N[e+12>>2];j=N[b+36>>2];k=N[b+40>>2];x=N[e+4>>2];l=N[b+32>>2];J[f+20>>2]=0;N[f+16>>2]=A+Q(Q(k*t)+Q(Q(l*B)+Q(C*j)));N[f+12>>2]=v+Q(Q(k*z)+Q(Q(l*w)+Q(y*j)));N[f+8>>2]=u+Q(Q(k*s)+Q(Q(l*x)+Q(j*p)));ia[J[J[g>>2]+8>>2]](g,o,h,n);g=J[J[a+52>>2]+20>>2];u=N[e+52>>2];p=N[e+8>>2];s=N[e+12>>2];v=N[e+56>>2];w=N[e+20>>2];y=N[e+24>>2];z=N[e+28>>2];A=N[e+60>>2];B=N[e+36>>2];C=N[e+40>>2];j=N[b+36>>2];t=N[e+44>>2];k=N[b+40>>2];x=N[e+4>>2];l=N[b+32>>2];J[f+148>>2]=0;N[f+144>>2]=A+Q(Q(k*t)+Q(Q(l*B)+Q(j*C)));N[f+140>>2]=v+Q(Q(k*z)+Q(Q(l*w)+Q(j*y)));N[f+136>>2]=u+Q(Q(k*s)+Q(Q(l*x)+Q(j*p)));p=N[e+12>>2];s=N[e+8>>2];x=N[e+4>>2];j=N[b+8>>2];k=N[b>>2];l=N[b+4>>2];J[f+20>>2]=0;N[f+16>>2]=A+Q(Q(j*t)+Q(Q(k*B)+Q(C*l)));N[f+12>>2]=v+Q(Q(j*z)+Q(Q(k*w)+Q(y*l)));N[f+8>>2]=u+Q(Q(j*p)+Q(Q(k*x)+Q(l*s)));ia[J[J[g>>2]+8>>2]](g,o,h,n)}e=c<<21|d;J[f+168>>2]=e;J[f+160>>2]=e;b:{c:{g=e+(d<<15^-1)|0;g=P(g>>10^g,9);g=g>>6^g;g=(g<<11^-1)+g|0;g=J[a+108>>2]-1&(g>>16^g);if(g>>>0>=M[a- -64>>2]){break c}g=J[J[a+72>>2]+(g<<2)>>2];if((g|0)==-1){break c}o=J[a+92>>2];h=J[a+132>>2];while(1){n=g<<2;if((e|0)!=J[n+h>>2]){g=J[o+n>>2];if((g|0)!=-1){continue}break c}break}e=J[a+112>>2];if(!e){break c}g=J[(e+(g<<3)|0)+4>>2];b=J[a+8>>2];J[g+8>>2]=J[J[b+192>>2]+8>>2];e=J[a+4>>2];o=J[e+192>>2];J[f+48>>2]=-1;J[f+52>>2]=-1;J[f+44>>2]=e+4;J[f+40>>2]=e;J[f+36>>2]=o;J[f+32>>2]=0;J[f+156>>2]=d;J[f+152>>2]=c;J[f+148>>2]=b+4;J[f+144>>2]=b;J[f+140>>2]=g;J[f+136>>2]=0;c=f+32|0;d=f+136|0;b=ia[J[J[i>>2]+8>>2]](i,c,d,0)|0;ia[J[J[b>>2]+8>>2]](b,c,d,J[a+52>>2],J[a+44>>2]);ia[J[J[b>>2]>>2]](b)|0;ia[J[J[i>>2]+60>>2]](i,b);break b}l=N[b+20>>2];y=N[b+36>>2];z=N[b+24>>2];A=N[b+40>>2];u=N[b+4>>2];B=N[b+32>>2];v=N[b+8>>2];w=N[b>>2];C=N[b+16>>2];J[f+124>>2]=0;J[f+108>>2]=0;J[f+92>>2]=0;J[f+76>>2]=0;J[f+60>>2]=0;k=Q(C-w);t=Q(y-u);p=Q(B-w);s=Q(l-u);j=Q(Q(k*t)-Q(p*s));x=j;F=Q(j*j);j=Q(A-v);G=Q(s*j);s=Q(z-v);t=Q(G-Q(t*s));k=Q(Q(s*p)-Q(j*k));p=Q(Q(1)/Q(Y(Q(F+Q(Q(t*t)+Q(k*k))))));j=Q(Q(x*p)*Q(.05999999865889549));N[f+120>>2]=A-j;k=Q(Q(k*p)*Q(.05999999865889549));N[f+116>>2]=y-k;N[f+104>>2]=z-j;N[f+100>>2]=l-k;N[f+88>>2]=v-j;N[f+84>>2]=u-k;N[f+72>>2]=A+j;N[f+68>>2]=y+k;N[f+56>>2]=z+j;N[f+52>>2]=l+k;J[f+44>>2]=0;l=Q(Q(t*p)*Q(.05999999865889549));N[f+112>>2]=B-l;N[f+96>>2]=C-l;N[f+80>>2]=w-l;N[f+64>>2]=B+l;N[f+48>>2]=C+l;N[f+40>>2]=v+j;N[f+36>>2]=u+k;N[f+32>>2]=w+l;J[8369]=J[8369]+1;e=ia[J[6782]](112,16)|0;Xe(e,f+32|0,6);b=J[a+8>>2];J[e+8>>2]=J[J[b+192>>2]+8>>2];g=J[a+4>>2];o=J[g+192>>2];J[f+152>>2]=-1;J[f+156>>2]=-1;J[f+148>>2]=g+4;J[f+144>>2]=g;J[f+140>>2]=o;J[f+136>>2]=0;J[f+28>>2]=d;J[f+24>>2]=c;J[f+20>>2]=b+4;J[f+16>>2]=b;J[f+12>>2]=e;J[f+8>>2]=0;c=f+136|0;d=f+8|0;b=ia[J[J[i>>2]+8>>2]](i,c,d,0)|0;ia[J[J[b>>2]+8>>2]](b,c,d,J[a+52>>2],J[a+44>>2]);ia[J[J[b>>2]>>2]](b)|0;ia[J[J[i>>2]+60>>2]](i,b);J[f+172>>2]=e;d:{e:{f:{g:{h:{i:{e=a+60|0;b=J[e+48>>2];c=J[f+160>>2];a=(c<<15^-1)+c|0;a=P(a>>10^a,9);a=a>>6^a;a=(a<<11^-1)+a|0;o=b-1&(a>>16^a);j:{if(o>>>0>=M[e+4>>2]){break j}a=J[J[e+12>>2]+(o<<2)>>2];if((a|0)==-1){break j}d=J[e+32>>2];i=J[e+72>>2];while(1){g=a<<2;if((c|0)==J[g+i>>2]){break i}a=J[d+g>>2];if((a|0)!=-1){continue}break}}E=J[e+44>>2];a=E;k:{if((b|0)!=(a|0)){break k}a=b;n=a?a<<1:1;if((a|0)>=(n|0)){break k}l:{if(!n){d=0;c=b;break l}J[8369]=J[8369]+1;d=ia[J[6782]](n<<3,16)|0;c=J[e+44>>2]}m:{if((c|0)<=0){break m}i=0;a=0;if(c-1>>>0>=3){q=c&-4;g=0;while(1){h=a<<3;m=h+d|0;r=h+J[e+52>>2]|0;D=J[r+4>>2];J[m>>2]=J[r>>2];J[m+4>>2]=D;m=h|8;r=m+d|0;m=m+J[e+52>>2]|0;D=J[m+4>>2];J[r>>2]=J[m>>2];J[r+4>>2]=D;m=h|16;r=m+d|0;m=m+J[e+52>>2]|0;D=J[m+4>>2];J[r>>2]=J[m>>2];J[r+4>>2]=D;h=h|24;m=h+d|0;h=h+J[e+52>>2]|0;r=J[h+4>>2];J[m>>2]=J[h>>2];J[m+4>>2]=r;a=a+4|0;g=g+4|0;if((q|0)!=(g|0)){continue}break}}c=c&3;if(!c){break m}while(1){g=a<<3;h=g+d|0;g=g+J[e+52>>2]|0;q=J[g+4>>2];J[h>>2]=J[g>>2];J[h+4>>2]=q;a=a+1|0;i=i+1|0;if((c|0)!=(i|0)){continue}break}}a=J[e+52>>2];if(!(a?!a|!K[e+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[e+52>>2]=d;H[e+56|0]=1;J[e+48>>2]=n;a=J[e+44>>2]}c=J[f+172>>2];a=J[e+52>>2]+(a<<3)|0;J[a>>2]=J[f+168>>2];J[a+4>>2]=c;J[e+44>>2]=J[e+44>>2]+1;i=J[e- -64>>2];if((i|0)!=J[e+68>>2]){break e}n=i?i<<1:1;if((n|0)<=(i|0)){break e}n:{if(!n){d=0;break n}J[8369]=J[8369]+1;d=ia[J[6782]](n<<2,16)|0;i=J[e+64>>2]}c=J[e+72>>2];if((i|0)<=0){break h}g=0;a=0;if(i-1>>>0>=3){m=i&-4;q=0;while(1){h=a<<2;J[h+d>>2]=J[c+h>>2];r=h|4;J[r+d>>2]=J[c+r>>2];r=h|8;J[r+d>>2]=J[c+r>>2];h=h|12;J[h+d>>2]=J[c+h>>2];a=a+4|0;q=q+4|0;if((m|0)!=(q|0)){continue}break}}i=i&3;if(!i){break g}while(1){h=a<<2;J[h+d>>2]=J[c+h>>2];a=a+1|0;g=g+1|0;if((i|0)!=(g|0)){continue}break}break g}b=J[f+172>>2];a=J[e+52>>2]+(a<<3)|0;J[a>>2]=J[f+168>>2];J[a+4>>2]=b;break d}if(!c){break f}}if(c?K[e+76|0]:0){J[8370]=J[8370]+1;ia[J[6783]](c)}i=J[e+64>>2]}J[e+72>>2]=d;J[e+68>>2]=n;H[e+76|0]=1}J[J[e+72>>2]+(i<<2)>>2]=J[f+160>>2];J[e+64>>2]=J[e+64>>2]+1;if((b|0)<J[e+48>>2]){d=0;i=0;n=0;o=0;g=J[e+48>>2];b=J[e+4>>2];o:{if((g|0)<=(b|0)){break o}p:{if((g|0)<=J[e+8>>2]){d=J[e+12>>2];break p}if(g){J[8369]=J[8369]+1;d=ia[J[6782]](g<<2,16)|0;a=J[e+4>>2]}else{a=b}c=J[e+12>>2];q:{r:{if((a|0)>0){if(a-1>>>0>=3){q=a&-4;while(1){h=i<<2;J[h+d>>2]=J[c+h>>2];m=h|4;J[m+d>>2]=J[c+m>>2];m=h|8;J[m+d>>2]=J[c+m>>2];h=h|12;J[h+d>>2]=J[c+h>>2];i=i+4|0;n=n+4|0;if((q|0)!=(n|0)){continue}break}}a=a&3;if(!a){break r}while(1){h=i<<2;J[h+d>>2]=J[c+h>>2];i=i+1|0;o=o+1|0;if((a|0)!=(o|0)){continue}break}break r}if(c){break r}break q}if(c?K[e+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](c)}}J[e+12>>2]=d;H[e+16|0]=1;J[e+8>>2]=g}qa((b<<2)+d|0,0,g-b<<2);J[e+4>>2]=g;m=g<<2;c=J[e+24>>2];if((c|0)<(g|0)){s:{if((g|0)<=J[e+28>>2]){d=J[e+32>>2];break s}t:{if(!g){d=0;a=c;break t}J[8369]=J[8369]+1;d=ia[J[6782]](m,16)|0;a=J[e+24>>2]}h=J[e+32>>2];u:{if((a|0)>0){o=0;i=0;if(a-1>>>0>=3){r=a&-4;n=0;while(1){q=i<<2;J[q+d>>2]=J[h+q>>2];D=q|4;J[D+d>>2]=J[h+D>>2];D=q|8;J[D+d>>2]=J[h+D>>2];q=q|12;J[q+d>>2]=J[h+q>>2];i=i+4|0;n=n+4|0;if((r|0)!=(n|0)){continue}break}}a=a&3;if(!a){break u}while(1){n=i<<2;J[n+d>>2]=J[h+n>>2];i=i+1|0;o=o+1|0;if((a|0)!=(o|0)){continue}break}break u}if(h){break u}J[e+32>>2]=d;J[e+28>>2]=g;H[e+36|0]=1;break s}if(h?K[e+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](h)}J[e+32>>2]=d;H[e+36|0]=1;J[e+28>>2]=g}qa((c<<2)+d|0,0,g-c<<2)}J[e+24>>2]=g;if((g|0)>0){qa(J[e+12>>2],255,m);qa(J[e+32>>2],255,m)}if((b|0)<=0){break o}c=J[e+32>>2];d=J[e+72>>2];g=J[e+12>>2];i=0;while(1){o=i<<2;a=J[o+d>>2];a=(a<<15^-1)+a|0;a=P(a>>10^a,9);a=a>>6^a;a=(a<<11^-1)+a|0;a=g+((J[e+48>>2]-1&(a>>16^a))<<2)|0;J[c+o>>2]=J[a>>2];J[a>>2]=i;i=i+1|0;if((b|0)!=(i|0)){continue}break}}a=J[f+160>>2];a=(a<<15^-1)+a|0;a=P(a>>10^a,9);a=a>>6^a;a=(a<<11^-1)+a|0;o=J[e+48>>2]-1&(a>>16^a)}a=J[e+12>>2]+(o<<2)|0;J[J[e+32>>2]+(E<<2)>>2]=J[a>>2];J[a>>2]=E}}ga=f+176|0}function Fg(a,b,c){var d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=0,v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=0,R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=0,W=0,X=Q(0),Z=Q(0),_=0;e=ga-96|0;ga=e;J[a+376>>2]=0;J[a+364>>2]=4;J[a+368>>2]=0;k=a+316|0;J[a+360>>2]=k;J[a+356>>2]=a+284;J[a+352>>2]=a+252;J[a+348>>2]=a+220;f=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=f;f=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=f;f=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=f;f=J[b+36>>2];J[a+32>>2]=J[b+32>>2];J[a+36>>2]=f;f=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=f;f=J[b+52>>2];J[a+48>>2]=J[b+48>>2];J[a+52>>2]=f;f=J[b+44>>2];J[a+40>>2]=J[b+40>>2];J[a+44>>2]=f;w=b- -64|0;f=J[w+4>>2];m=a- -64|0;J[m>>2]=J[w>>2];J[m+4>>2]=f;f=J[b+60>>2];J[a+56>>2]=J[b+56>>2];J[a+60>>2]=f;f=J[b+84>>2];J[a+80>>2]=J[b+80>>2];J[a+84>>2]=f;f=J[b+76>>2];J[a+72>>2]=J[b+72>>2];J[a+76>>2]=f;f=J[b+100>>2];J[a+96>>2]=J[b+96>>2];J[a+100>>2]=f;f=J[b+92>>2];J[a+88>>2]=J[b+88>>2];J[a+92>>2]=f;f=J[b+108>>2];J[a+104>>2]=J[b+104>>2];J[a+108>>2]=f;f=J[b+116>>2];J[a+112>>2]=J[b+112>>2];J[a+116>>2]=f;f=J[b+124>>2];b=J[b+120>>2];J[a+144>>2]=0;J[a+180>>2]=0;J[a+120>>2]=b;J[a+124>>2]=f;b=J[c+4>>2];J[a+128>>2]=J[c>>2];J[a+132>>2]=b;b=J[c+12>>2];J[a+136>>2]=J[c+8>>2];J[a+140>>2]=b;J[a+364>>2]=3;J[a+164>>2]=0;J[a+328>>2]=0;J[a+180>>2]=1;J[a+148>>2]=k;h=N[a+136>>2];i=N[a+128>>2];d=N[a+132>>2];g=Q(Q(h*h)+Q(Q(i*i)+Q(d*d)));b=g>Q(0);h=b?Q(-h):Q(0);i=b?Q(-i):Q(1);d=b?Q(-d):Q(0);j=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(i*i)+Q(d*d))))));N[a+324>>2]=h*j;N[a+320>>2]=d*j;N[k>>2]=i*j;Za(e+16|0,a,k);b=J[e+28>>2];J[a+340>>2]=J[e+24>>2];J[a+344>>2]=b;b=J[e+20>>2];J[a+332>>2]=J[e+16>>2];J[a+336>>2]=b;J[a+164>>2]=1065353216;c=J[a+148>>2];b=J[c+20>>2];J[a+128>>2]=J[c+16>>2];J[a+132>>2]=b;b=J[c+28>>2];J[a+136>>2]=J[c+24>>2];J[a+140>>2]=b;b=J[c+28>>2];J[e+72>>2]=J[c+24>>2];J[e+76>>2]=b;b=J[c+20>>2];J[e+64>>2]=J[c+16>>2];J[e+68>>2]=b;b=J[c+28>>2];J[e+56>>2]=J[c+24>>2];J[e+60>>2]=b;b=J[c+20>>2];J[e+48>>2]=J[c+16>>2];J[e+52>>2]=b;b=J[c+28>>2];J[e+40>>2]=J[c+24>>2];J[e+44>>2]=b;b=J[c+20>>2];J[e+32>>2]=J[c+16>>2];J[e+36>>2]=b;b=J[c+28>>2];J[e+24>>2]=J[c+24>>2];J[e+28>>2]=b;b=J[c+20>>2];J[e+16>>2]=J[c+16>>2];J[e+20>>2]=b;d=N[a+136>>2];n=N[a+132>>2];j=N[a+128>>2];u=J[a+368>>2];while(1){a:{b:{o=Q(Y(Q(Q(d*d)+Q(Q(j*j)+Q(n*n)))));c:{if(o<Q(9999999747378752e-20)){J[a+376>>2]=1;break c}v=P(u,36)+a|0;w=v+148|0;f=J[v+180>>2];c=w+(f<<2)|0;J[c+16>>2]=0;b=J[a+364>>2]-1|0;J[a+364>>2]=b;C=c;c=J[((b<<2)+a|0)+348>>2];J[C>>2]=c;J[v+180>>2]=f+1;J[c+12>>2]=0;i=Q(Q(1)/o);N[c+8>>2]=i*Q(-d);N[c+4>>2]=i*Q(-n);N[c>>2]=i*Q(-j);Za(e+80|0,a,c);b=J[e+92>>2];J[c+24>>2]=J[e+88>>2];J[c+28>>2]=b;b=J[e+84>>2];J[c+16>>2]=J[e+80>>2];J[c+20>>2]=b;d:{f=J[v+180>>2];m=J[(w+(f<<2)|0)-4>>2];j=N[m+24>>2];d=Q(j-N[e+24>>2]);s=Q(d*d);h=N[m+16>>2];d=Q(h-N[e+16>>2]);p=Q(d*d);i=N[m+20>>2];d=Q(i-N[e+20>>2]);if(Q(s+Q(p+Q(d*d)))<Q(9999999747378752e-20)){break d}d=Q(j-N[e+40>>2]);s=Q(d*d);d=Q(h-N[e+32>>2]);p=Q(d*d);d=Q(i-N[e+36>>2]);if(Q(s+Q(p+Q(d*d)))<Q(9999999747378752e-20)){break d}d=Q(j-N[e+56>>2]);s=Q(d*d);d=Q(h-N[e+48>>2]);p=Q(d*d);d=Q(i-N[e+52>>2]);if(Q(s+Q(p+Q(d*d)))<Q(9999999747378752e-20)){break d}d=Q(j-N[e+72>>2]);s=Q(d*d);d=Q(h-N[e+64>>2]);p=Q(d*d);d=Q(i-N[e+68>>2]);if(Q(s+Q(p+Q(d*d)))<Q(9999999747378752e-20)){break d}b=J[m+28>>2];W=W+1&3;c=(e+16|0)+(W<<4)|0;J[c+8>>2]=J[m+24>>2];J[c+12>>2]=b;b=J[m+20>>2];J[c>>2]=J[m+16>>2];J[c+4>>2]=b;d=Q(Q(Q(N[a+136>>2]*j)+Q(Q(N[a+128>>2]*h)+Q(N[a+132>>2]*i)))/o);R=d>R?d:R;if(Q(Q(o*Q(-9999999747378752e-20))+Q(o-R))<=Q(0)){u=J[a+368>>2];c=P(u,36)+a|0;b=J[c+180>>2]-1|0;J[c+180>>2]=b;c=J[(c+(b<<2)|0)+148>>2];b=J[a+364>>2];J[a+364>>2]=b+1;J[((b<<2)+a|0)+348>>2]=c;break c}J[e+12>>2]=0;e:{f:{g:{switch(f-2|0){case 0:c=J[v+152>>2];h=N[c+24>>2];b=J[w>>2];x=N[b+24>>2];n=Q(h-x);i=N[c+16>>2];q=N[b+16>>2];o=Q(i-q);g=N[c+20>>2];r=N[b+20>>2];j=Q(g-r);d=Q(Q(n*n)+Q(Q(o*o)+Q(j*j)));if(!(d>Q(0))){break e}t=Q(Q(-Q(Q(x*n)+Q(Q(q*o)+Q(r*j))))/d);if(t>=Q(1)){J[e+80>>2]=0;J[e+84>>2]=1065353216;J[e+12>>2]=2;g=Q(Q(h*h)+Q(Q(i*i)+Q(g*g)));break f}if(t<=Q(0)){J[e+80>>2]=1065353216;J[e+84>>2]=0;J[e+12>>2]=1;g=Q(Q(x*x)+Q(Q(q*q)+Q(r*r)));break f}J[e+12>>2]=3;N[e+84>>2]=t;N[e+80>>2]=Q(1)-t;d=Q(x+Q(n*t));p=Q(d*d);d=Q(q+Q(o*t));g=Q(d*d);d=Q(r+Q(j*t));g=Q(p+Q(g+Q(d*d)));break f;case 1:g=Me(J[w>>2]+16|0,J[v+152>>2]+16|0,J[v+156>>2]+16|0,e+80|0,e+12|0);break f;case 2:break g;default:break f}}l=ga-32|0;ga=l;d=Q(-1);m=J[v+152>>2]+16|0;s=N[m+4>>2];k=J[v+160>>2]+16|0;D=N[k+4>>2];E=Q(s-D);f=J[w>>2]+16|0;p=N[f+8>>2];F=N[k+8>>2];G=Q(p-F);X=Q(E*Q(-G));c=J[v+156>>2]+16|0;i=N[c>>2];H=N[k>>2];z=Q(i-H);S=N[f>>2];I=Q(S-H);Z=Q(I*E);t=N[c+8>>2];A=Q(t-F);h=N[m>>2];K=Q(h-H);T=N[f+4>>2];L=Q(T-D);x=Q(K*Q(-L));U=N[m+8>>2];M=Q(U-F);q=Q(M*Q(-I));g=N[c+4>>2];B=Q(g-D);r=Q(L*M);n=Q(G*K);y=Q(Q(X*z)+Q(Q(Z*A)+Q(Q(x*A)+Q(Q(q*B)+Q(Q(r*z)+Q(n*B))))));h:{if(!(y>Q(0)|y<Q(0))){break h}o=Q(h-i);j=Q(T-s);h=Q(S-h);g=Q(s-g);s=Q(p*Q(Q(o*j)-Q(h*g)));i=Q(p-U);p=Q(g*i);g=Q(U-t);if(!(Q(Q(s+Q(Q(S*Q(p-Q(j*g)))+Q(T*Q(Q(g*h)-Q(i*o)))))*y)<=Q(0))){break h}J[l+24>>2]=0;J[l+16>>2]=0;J[l+20>>2]=0;J[l+12>>2]=0;if(Q(y*Q(Q(F*Q(Z+x))+Q(Q(H*Q(r+X))+Q(D*Q(n+q)))))>Q(0)){d=Me(f,m,k,l+16|0,l+12|0);b=J[l+12>>2];J[e+12>>2]=b&2|b<<1&8|b&1;N[e+80>>2]=N[l+16>>2];g=N[l+20>>2];J[e+88>>2]=0;N[e+84>>2]=g;N[e+92>>2]=N[l+24>>2]}i:{if(!(Q(y*Q(Q(N[k+8>>2]*Q(Q(K*B)-Q(z*E)))+Q(Q(N[k>>2]*Q(Q(E*A)-Q(B*M)))+Q(N[k+4>>2]*Q(Q(M*z)-Q(A*K))))))>Q(0))){break i}g=Me(m,c,k,l+16|0,l+12|0);if(!(d<Q(0)|g<d)){break i}J[e+12>>2]=J[l+12>>2]<<1&14;N[e+84>>2]=N[l+16>>2];d=N[l+20>>2];J[e+80>>2]=0;N[e+88>>2]=d;N[e+92>>2]=N[l+24>>2];d=g}j:{if(!(Q(y*Q(Q(N[k+8>>2]*Q(Q(z*L)-Q(I*B)))+Q(Q(N[k>>2]*Q(Q(B*G)-Q(L*A)))+Q(N[k+4>>2]*Q(Q(A*I)-Q(G*z))))))>Q(0))){break j}g=Me(c,f,k,l+16|0,l+12|0);if(!(d<Q(0)|g<d)){break j}b=J[l+12>>2];J[e+12>>2]=b>>>1&1|b<<1&8|b<<2&4;N[e+88>>2]=N[l+16>>2];d=N[l+20>>2];J[e+84>>2]=0;N[e+80>>2]=d;N[e+92>>2]=N[l+24>>2];d=g}if(!(d<Q(0))){break h}J[e+12>>2]=15;q=N[c>>2];r=N[m+4>>2];n=N[k+8>>2];o=N[c+4>>2];j=N[m+8>>2];h=N[k>>2];i=N[c+8>>2];g=N[m>>2];d=N[k+4>>2];t=Q(Q(Q(Q(Q(q*r)*n)+Q(Q(Q(Q(Q(o*j)*h)+Q(Q(i*g)*d))-Q(Q(j*q)*d))-Q(Q(g*o)*n)))-Q(Q(r*i)*h))/y);N[e+80>>2]=t;q=N[f>>2];r=N[c+4>>2];n=N[k+8>>2];o=N[f+4>>2];j=N[c+8>>2];h=N[k>>2];i=N[f+8>>2];g=N[c>>2];d=N[k+4>>2];x=Q(Q(Q(Q(Q(q*r)*n)+Q(Q(Q(Q(Q(o*j)*h)+Q(Q(i*g)*d))-Q(Q(j*q)*d))-Q(Q(g*o)*n)))-Q(Q(r*i)*h))/y);N[e+84>>2]=x;q=N[m>>2];r=N[f+4>>2];n=N[k+8>>2];o=N[m+4>>2];j=N[f+8>>2];h=N[k>>2];i=N[m+8>>2];g=N[f>>2];d=N[k+4>>2];d=Q(Q(Q(Q(Q(q*r)*n)+Q(Q(Q(Q(Q(o*j)*h)+Q(Q(i*g)*d))-Q(Q(j*q)*d))-Q(Q(g*o)*n)))-Q(Q(r*i)*h))/y);N[e+88>>2]=d;N[e+92>>2]=Q(1)-Q(Q(t+x)+d);d=Q(0)}ga=l+32|0;g=d}if(!(g>=Q(0))){break e}u=1-u|0;V=P(u,36)+a|0;J[V+180>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+128>>2]=0;J[a+132>>2]=0;J[a+368>>2]=u;k=J[v+180>>2];if(!k){d=Q(0);C=J[e+12>>2];n=Q(0);j=Q(0);break b}c=J[a+364>>2];d=Q(0);O=0;C=J[e+12>>2];n=Q(0);j=Q(0);b=0;while(1){m=b<<2;w=m+v|0;l=J[w+148>>2];k:{if(C>>>b&1){f=V+(O<<2)|0;J[f+148>>2]=l;h=N[m+(e+80|0)>>2];O=O+1|0;J[V+180>>2]=O;N[f+164>>2]=h;f=J[w+148>>2];i=N[f+24>>2];d=N[f+20>>2];j=Q(Q(h*N[f+16>>2])+N[a+128>>2]);N[a+128>>2]=j;n=Q(Q(h*d)+N[a+132>>2]);N[a+132>>2]=n;d=Q(Q(h*i)+N[a+136>>2]);N[a+136>>2]=d;break k}f=c+1|0;J[a+364>>2]=f;J[((c<<2)+a|0)+348>>2]=l;c=f}b=b+1|0;if((k|0)!=(b|0)){continue}break}break b}u=J[a+368>>2];c=P(u,36)+a|0;b=J[c+180>>2]-1|0;J[c+180>>2]=b;c=J[(c+(b<<2)|0)+148>>2];b=J[a+364>>2];J[a+364>>2]=b+1;J[((b<<2)+a|0)+348>>2]=c;break c}u=J[a+368>>2];c=P(u,36)+a|0;b=J[c+180>>2]-1|0;J[c+180>>2]=b;c=J[(c+(b<<2)|0)+148>>2];b=J[a+364>>2];J[a+364>>2]=b+1;J[((b<<2)+a|0)+348>>2]=c}b=J[a+376>>2];break a}_=_+1|0;b=_>>>0<128?(C|0)==15?1:J[a+376>>2]:2;J[a+376>>2]=b;if(!b){continue}}break}J[a+372>>2]=(P(u,36)+a|0)+148;d=Q(0);l:{switch(b|0){case 0:d=N[a+136>>2];p=Q(d*d);d=N[a+128>>2];g=Q(d*d);d=N[a+132>>2];d=Q(Y(Q(p+Q(g+Q(d*d)))));case 1:N[a+144>>2]=d;break;default:break l}}ga=e+96|0;return b}function rH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=0,D=Q(0),E=Q(0),F=0,G=0,H=0,I=0,K=0,L=Q(0),M=Q(0),O=Q(0);e=ga-144|0;ga=e;f=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[f>>2]+56>>2]](f,b,Q(1));a:{b:{c:{d:{e:{f:{g:{h:{i:{j:{f=J[c+4>>2];switch(f|0){case 31:break j;case 28:break c;case 13:break d;case 11:break e;case 10:break f;case 9:break g;case 8:break h;case 0:break i;default:break b}}s=J[c+16>>2];if((s|0)<=0){break a}while(1){f=s-1|0;i=J[c+24>>2]+P(f,80)|0;B=J[i+64>>2];o=N[i+56>>2];p=N[i+48>>2];w=N[i+52>>2];x=N[i+32>>2];y=N[i>>2];z=N[i+16>>2];A=N[i+36>>2];q=N[i+4>>2];r=N[i+20>>2];t=N[i+40>>2];D=N[i+8>>2];E=N[i+24>>2];L=N[b+48>>2];M=N[b+52>>2];O=N[b+56>>2];g=N[b+8>>2];h=N[b>>2];j=N[b+4>>2];k=N[b+24>>2];l=N[b+16>>2];m=N[b+20>>2];u=N[b+40>>2];v=N[b+32>>2];n=N[b+36>>2];J[e+60>>2]=0;J[e+44>>2]=0;J[e+28>>2]=0;J[e+12>>2]=0;N[e+40>>2]=Q(t*u)+Q(Q(D*v)+Q(E*n));N[e+36>>2]=Q(A*u)+Q(Q(q*v)+Q(r*n));N[e+32>>2]=Q(x*u)+Q(Q(y*v)+Q(z*n));N[e+24>>2]=Q(t*k)+Q(Q(D*l)+Q(E*m));N[e+20>>2]=Q(A*k)+Q(Q(q*l)+Q(r*m));N[e+16>>2]=Q(x*k)+Q(Q(y*l)+Q(z*m));N[e+8>>2]=Q(t*g)+Q(Q(D*h)+Q(E*j));N[e+4>>2]=Q(A*g)+Q(Q(q*h)+Q(r*j));N[e>>2]=Q(x*g)+Q(Q(y*h)+Q(z*j));N[e+56>>2]=O+Q(Q(o*u)+Q(Q(p*v)+Q(w*n)));N[e+52>>2]=M+Q(Q(o*k)+Q(Q(p*l)+Q(w*m)));N[e+48>>2]=L+Q(Q(o*g)+Q(Q(p*h)+Q(w*j)));ia[J[J[a>>2]+28>>2]](a,e,B,d);i=s>>>0>1;s=f;if(i){continue}break}break a}f=J[c+40>>2];J[e+8>>2]=J[c+36>>2];J[e+12>>2]=f;f=J[c+32>>2];J[e>>2]=J[c+28>>2];J[e+4>>2]=f;g=Q(ia[J[J[c>>2]+48>>2]](c));h=Q(ia[J[J[c>>2]+48>>2]](c));j=Q(Q(ia[J[J[c>>2]+48>>2]](c))+N[e+8>>2]);N[e+8>>2]=j;g=Q(g+N[e>>2]);N[e>>2]=g;h=Q(h+N[e+4>>2]);N[e+4>>2]=h;a=ia[J[J[a>>2]+20>>2]](a)|0;J[e+140>>2]=0;N[e+136>>2]=-j;N[e+132>>2]=-h;N[e+128>>2]=-g;ia[J[J[a>>2]+72>>2]](a,e+128|0,e,b,d);break a}g=Q(ia[J[J[c>>2]+48>>2]](c));a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+16>>2]](a,g,b,d);break a}f=J[c+92>>2];if((f|0)<=0){break a}while(1){i=f-1|0;s=J[c+100>>2]+(i<<4)|0;g=N[s+8>>2];h=N[s>>2];j=N[s+4>>2];s=ia[J[J[a>>2]+20>>2]](a)|0;x=N[J[c+120>>2]+(i<<2)>>2];y=N[b+48>>2];z=N[b+52>>2];A=N[b+56>>2];k=N[b+8>>2];l=N[b>>2];m=N[b+4>>2];u=N[b+24>>2];v=N[b+16>>2];n=N[b+20>>2];o=N[b+40>>2];p=N[b+32>>2];w=N[b+36>>2];J[e+60>>2]=0;J[e+44>>2]=0;J[e+28>>2]=0;J[e+12>>2]=0;q=Q(p*Q(0));r=Q(w*Q(0));N[e+40>>2]=o+Q(q+r);t=Q(o*Q(0));N[e+36>>2]=t+Q(q+w);N[e+32>>2]=t+Q(p+r);q=Q(v*Q(0));r=Q(n*Q(0));N[e+24>>2]=u+Q(q+r);t=Q(u*Q(0));N[e+20>>2]=t+Q(q+n);N[e+16>>2]=t+Q(v+r);q=Q(l*Q(0));r=Q(m*Q(0));N[e+8>>2]=k+Q(q+r);t=Q(k*Q(0));N[e+4>>2]=t+Q(q+m);N[e>>2]=t+Q(l+r);N[e+56>>2]=A+Q(Q(g*o)+Q(Q(h*p)+Q(j*w)));N[e+52>>2]=z+Q(Q(g*u)+Q(Q(h*v)+Q(j*n)));N[e+48>>2]=y+Q(Q(g*k)+Q(Q(h*l)+Q(j*m)));ia[J[J[s>>2]+16>>2]](s,x,e,d);s=f>>>0>1;f=i;if(s){continue}break}break a}f=J[c+52>>2];c=c+28|0;g=N[(f<<2)+c>>2];h=N[c+((f+2|0)%3<<2)>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+76>>2]](a,h,g,f,b,d);break a}f=J[c+68>>2];g=N[c+56>>2];h=N[c+60>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+84>>2]](a,g,h,f,b,d);break a}f=J[c+52>>2];g=Q(ia[J[J[c>>2]+92>>2]](c));i=J[c+40>>2];J[e+8>>2]=J[c+36>>2];J[e+12>>2]=i;i=J[c+32>>2];J[e>>2]=J[c+28>>2];J[e+4>>2]=i;h=Q(ia[J[J[c>>2]+48>>2]](c));j=Q(ia[J[J[c>>2]+48>>2]](c));N[e+8>>2]=Q(ia[J[J[c>>2]+48>>2]](c))+N[e+8>>2];N[e>>2]=h+N[e>>2];N[e+4>>2]=j+N[e+4>>2];h=N[(f<<2)+e>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+80>>2]](a,g,h,f,b,d);break a}g=N[c- -64>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[a>>2]+88>>2]](a,c+48|0,g,b,d);break a}k:{if((f|0)>6){break k}B=J[c+52>>2];if(B){if(J[B+28>>2]<=0){break k}while(1){j=Q(0);l:{H=P(G,36);f=H+J[B+36>>2]|0;F=J[f+4>>2];if(!F){g=Q(0);h=Q(0);break l}g=Q(0);h=Q(0);if((F|0)<=0){break l}C=J[f+12>>2];f=J[(C+(F<<2)|0)-4>>2];s=0;while(1){i=J[(s<<2)+C>>2];I=i<<4;C=I+J[B+16>>2]|0;t=N[C>>2];D=N[C+4>>2];E=N[C+8>>2];C=ia[J[J[a>>2]+20>>2]](a)|0;K=J[B+16>>2];f=K+(f<<4)|0;k=N[f+8>>2];l=N[f>>2];m=N[f+4>>2];u=N[b+48>>2];v=N[b+8>>2];n=N[b>>2];o=N[b+4>>2];p=N[b+52>>2];w=N[b+24>>2];x=N[b+16>>2];y=N[b+20>>2];z=N[b+56>>2];A=N[b+40>>2];q=N[b+32>>2];r=N[b+36>>2];J[e+12>>2]=0;N[e+8>>2]=z+Q(Q(k*A)+Q(Q(l*q)+Q(m*r)));N[e+4>>2]=p+Q(Q(k*w)+Q(Q(l*x)+Q(m*y)));N[e>>2]=u+Q(Q(k*v)+Q(Q(l*n)+Q(m*o)));f=I+K|0;k=N[f+8>>2];l=N[f>>2];m=N[f+4>>2];J[e+140>>2]=0;N[e+136>>2]=z+Q(Q(k*A)+Q(Q(l*q)+Q(r*m)));N[e+132>>2]=p+Q(Q(k*w)+Q(Q(l*x)+Q(y*m)));N[e+128>>2]=u+Q(Q(k*v)+Q(Q(l*n)+Q(o*m)));ia[J[J[C>>2]+8>>2]](C,e,e+128|0,d);h=Q(h+E);g=Q(g+D);j=Q(j+t);s=s+1|0;f=J[B+36>>2]+H|0;if((s|0)>=J[f+4>>2]){break l}C=J[f+12>>2];f=i;continue}}f=ia[J[J[a>>2]+20>>2]](a)|0;if(ia[J[J[f>>2]+48>>2]](f)&16384){J[e+8>>2]=0;J[e+12>>2]=0;J[e>>2]=1065353216;J[e+4>>2]=1065353216;f=J[B+36>>2]+H|0;q=N[f+28>>2];r=N[f+20>>2];t=N[f+24>>2];f=ia[J[J[a>>2]+20>>2]](a)|0;k=N[b+48>>2];l=N[b+8>>2];m=N[b>>2];u=N[b+4>>2];v=N[b+52>>2];n=N[b+24>>2];o=N[b+16>>2];p=N[b+20>>2];w=N[b+56>>2];x=N[b+40>>2];y=N[b+32>>2];z=N[b+36>>2];J[e+140>>2]=0;A=Q(Q(1)/Q(F|0));h=Q(A*h);j=Q(A*j);g=Q(A*g);N[e+136>>2]=w+Q(Q(x*h)+Q(Q(y*j)+Q(z*g)));N[e+132>>2]=v+Q(Q(h*n)+Q(Q(j*o)+Q(g*p)));N[e+128>>2]=k+Q(Q(h*l)+Q(Q(j*m)+Q(g*u)));J[e+124>>2]=0;h=Q(h+q);j=Q(j+r);g=Q(g+t);N[e+120>>2]=w+Q(Q(x*h)+Q(Q(y*j)+Q(z*g)));N[e+116>>2]=v+Q(Q(h*n)+Q(Q(j*o)+Q(g*p)));N[e+112>>2]=k+Q(Q(h*l)+Q(Q(j*m)+Q(g*u)));ia[J[J[f>>2]+8>>2]](f,e+128|0,e+112|0,e)}G=G+1|0;if((G|0)<J[B+28>>2]){continue}break}break k}if((ia[J[J[c>>2]+100>>2]](c)|0)<=0){break k}f=0;while(1){ia[J[J[c>>2]+104>>2]](c,f,e,e+128|0);g=N[b+48>>2];h=N[b+8>>2];j=N[b>>2];k=N[b+4>>2];l=N[b+52>>2];m=N[b+24>>2];u=N[b+16>>2];v=N[b+20>>2];n=N[b+56>>2];o=N[b+40>>2];p=N[b+32>>2];w=N[b+36>>2];J[e+124>>2]=0;x=N[e+8>>2];y=N[e>>2];z=N[e+4>>2];N[e+120>>2]=n+Q(Q(o*x)+Q(Q(p*y)+Q(w*z)));N[e+116>>2]=l+Q(Q(x*m)+Q(Q(y*u)+Q(z*v)));N[e+112>>2]=g+Q(Q(x*h)+Q(Q(y*j)+Q(z*k)));J[e+108>>2]=0;q=n;n=N[e+136>>2];r=Q(o*n);o=N[e+128>>2];t=Q(p*o);p=N[e+132>>2];N[e+104>>2]=q+Q(r+Q(t+Q(w*p)));N[e+100>>2]=l+Q(Q(n*m)+Q(Q(o*u)+Q(v*p)));N[e+96>>2]=g+Q(Q(n*h)+Q(Q(o*j)+Q(k*p)));i=ia[J[J[a>>2]+20>>2]](a)|0;ia[J[J[i>>2]+8>>2]](i,e+112|0,e+96|0,d);f=f+1|0;if((ia[J[J[c>>2]+100>>2]](c)|0)>(f|0)){continue}break}}f=J[c+4>>2];if(f-21>>>0<=8){J[e+136>>2]=1566444395;J[e+140>>2]=0;J[e+128>>2]=1566444395;J[e+132>>2]=1566444395;J[e+120>>2]=-581039253;J[e+124>>2]=0;J[e+112>>2]=-581039253;J[e+116>>2]=-581039253;J[e+8>>2]=ia[J[J[a>>2]+20>>2]](a);J[e+4>>2]=8552;J[e>>2]=8528;f=J[d+12>>2];J[e+20>>2]=J[d+8>>2];J[e+24>>2]=f;f=J[d+4>>2];J[e+12>>2]=J[d>>2];J[e+16>>2]=f;f=J[b+12>>2];J[e+36>>2]=J[b+8>>2];J[e+40>>2]=f;f=J[b+4>>2];J[e+28>>2]=J[b>>2];J[e+32>>2]=f;f=J[b+20>>2];J[e+44>>2]=J[b+16>>2];J[e+48>>2]=f;f=J[b+28>>2];J[e+52>>2]=J[b+24>>2];J[e+56>>2]=f;f=J[b+44>>2];J[e+68>>2]=J[b+40>>2];J[e+72>>2]=f;f=J[b+36>>2];J[e+60>>2]=J[b+32>>2];J[e+64>>2]=f;f=J[b+52>>2];J[e+76>>2]=J[b+48>>2];J[e+80>>2]=f;f=J[b+60>>2];J[e+84>>2]=J[b+56>>2];J[e+88>>2]=f;ia[J[J[c>>2]+64>>2]](c,e,e+112|0,e+128|0);f=J[c+4>>2]}if((f|0)!=3){break a}J[e+136>>2]=1566444395;J[e+140>>2]=0;J[e+128>>2]=1566444395;J[e+132>>2]=1566444395;J[e+120>>2]=-581039253;J[e+124>>2]=0;J[e+112>>2]=-581039253;J[e+116>>2]=-581039253;J[e+8>>2]=ia[J[J[a>>2]+20>>2]](a);J[e+4>>2]=8552;J[e>>2]=8528;a=J[d+12>>2];J[e+20>>2]=J[d+8>>2];J[e+24>>2]=a;a=J[d+4>>2];J[e+12>>2]=J[d>>2];J[e+16>>2]=a;a=J[b+12>>2];J[e+36>>2]=J[b+8>>2];J[e+40>>2]=a;a=J[b+4>>2];J[e+28>>2]=J[b>>2];J[e+32>>2]=a;a=J[b+20>>2];J[e+44>>2]=J[b+16>>2];J[e+48>>2]=a;a=J[b+28>>2];J[e+52>>2]=J[b+24>>2];J[e+56>>2]=a;a=J[b+44>>2];J[e+68>>2]=J[b+40>>2];J[e+72>>2]=a;a=J[b+36>>2];J[e+60>>2]=J[b+32>>2];J[e+64>>2]=a;a=J[b+52>>2];J[e+76>>2]=J[b+48>>2];J[e+80>>2]=a;a=J[b+60>>2];J[e+84>>2]=J[b+56>>2];J[e+88>>2]=a;a=J[c+92>>2];ia[J[J[a>>2]+8>>2]](a,e|4,e+112|0,e+128|0)}ga=e+144|0}function Xl(a,b,c,d,e){var f=0,g=Q(0),h=0,i=0,j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=0,s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);k=ga-48|0;ga=k;H[a+60|0]=c;a:{if(c){g=N[d>>2];m=N[d+4>>2];n=N[d+8>>2];J[a+16>>2]=0;o=Q(n-Q(1));N[a+12>>2]=o;m=Q(m-Q(1));N[a+8>>2]=m;n=Q(g-Q(1));N[a+4>>2]=n;v=N[e>>2];q=N[e+4>>2];g=N[e+8>>2];H[a+60|0]=1;J[a+32>>2]=0;t=Q(g+Q(1));N[a+28>>2]=t;u=Q(q+Q(1));N[a+24>>2]=u;q=Q(v+Q(1));N[a+20>>2]=q;w=Q(Q(65533)/Q(t-o));N[a+44>>2]=w;x=Q(Q(65533)/Q(u-m));N[a+40>>2]=x;y=Q(Q(65533)/Q(q-n));N[a+36>>2]=y;g=Q(Q(o-o)*w);b:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break b}c=0}z=Q((c&65534)>>>0);g=Q(Q(m-m)*x);c:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break c}c=0}v=Q(m+Q(Q((c&65534)>>>0)/x));g=Q(Q(n-n)*y);d:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break d}c=0}g=Q(Q(n+Q(Q((c&65534)>>>0)/y))-Q(1));if(g<n){N[a+4>>2]=g;n=g}g=Q(v-Q(1));if(g<m){N[a+8>>2]=g;m=g}g=Q(Q(o+Q(z/w))-Q(1));if(g<o){N[a+12>>2]=g;o=g}g=Q(Q(w*Q(t-o))+Q(1));e:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break e}c=0}z=Q((c|1)>>>0);g=Q(Q(x*Q(u-m))+Q(1));f:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break f}c=0}v=Q(m+Q(Q((c|1)>>>0)/x));g=Q(Q(y*Q(q-n))+Q(1));g:{if(g<Q(4294967296)&g>=Q(0)){c=~~g>>>0;break g}c=0}g=Q(Q(n+Q(Q((c|1)>>>0)/y))+Q(1));if(g>q){N[a+20>>2]=g;q=g}g=Q(v+Q(1));if(g>u){N[a+24>>2]=g;u=g}g=Q(Q(o+Q(z/w))+Q(1));if(g>t){N[a+28>>2]=g;t=g}J[a+48>>2]=0;N[a+44>>2]=Q(65533)/Q(t-o);N[a+40>>2]=Q(65533)/Q(u-m);N[a+36>>2]=Q(65533)/Q(q-n);J[k+32>>2]=a;J[k+28>>2]=a+104;J[k+24>>2]=15472;ia[J[J[b>>2]+8>>2]](b,k+24|0,a+4|0,a+20|0);c=J[a+128>>2];r=J[a+108>>2];j=r<<1;h:{if((c|0)>=(j|0)){break h}if((j|0)>J[a+132>>2]){i:{if(!r){e=0;d=c;break i}J[8369]=J[8369]+1;e=ia[J[6782]](r<<5,16)|0;d=J[a+128>>2]}j:{if((d|0)<=0){break j}b=0;if((d|0)!=1){s=d&-2;while(1){i=b<<4;h=i+e|0;p=i+J[a+136>>2]|0;f=J[p+4>>2];J[h>>2]=J[p>>2];J[h+4>>2]=f;f=J[p+12>>2];J[h+8>>2]=J[p+8>>2];J[h+12>>2]=f;f=i|16;h=f+e|0;i=f+J[a+136>>2]|0;f=J[i+4>>2];J[h>>2]=J[i>>2];J[h+4>>2]=f;f=J[i+12>>2];J[h+8>>2]=J[i+8>>2];J[h+12>>2]=f;b=b+2|0;l=l+2|0;if((s|0)!=(l|0)){continue}break}}if(!(d&1)){break j}b=b<<4;d=b+e|0;f=b+J[a+136>>2]|0;b=J[f+4>>2];J[d>>2]=J[f>>2];J[d+4>>2]=b;b=J[f+12>>2];J[d+8>>2]=J[f+8>>2];J[d+12>>2]=b}b=J[a+136>>2];if(!(b?!b|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+136>>2]=e;H[a+140|0]=1;J[a+132>>2]=j}e=j+(c^-1)|0;d=j-c&3;if(d){b=0;while(1){f=J[a+136>>2]+(c<<4)|0;J[f>>2]=0;J[f+4>>2]=0;J[f+8>>2]=0;J[f+12>>2]=0;c=c+1|0;b=b+1|0;if((d|0)!=(b|0)){continue}break}}if(e>>>0<3){break h}while(1){d=c<<4;b=d+J[a+136>>2]|0;J[b>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;J[b+12>>2]=0;b=d+J[a+136>>2]|0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;b=d+J[a+136>>2]|0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;b=d+J[a+136>>2]|0;J[b+56>>2]=0;J[b+60>>2]=0;J[b+48>>2]=0;J[b+52>>2]=0;c=c+4|0;if((j|0)!=(c|0)){continue}break}}J[a+128>>2]=j;break a}J[k+40>>2]=15604;J[k+44>>2]=a- -64;J[k+32>>2]=-581039253;J[k+36>>2]=0;J[k+24>>2]=-581039253;J[k+28>>2]=-581039253;J[k+16>>2]=1566444395;J[k+20>>2]=0;J[k+8>>2]=1566444395;J[k+12>>2]=1566444395;ia[J[J[b>>2]+8>>2]](b,k+40|0,k+24|0,k+8|0);b=J[a+88>>2];r=J[a+68>>2];l=r<<1;k:{if((b|0)>=(l|0)){break k}if((l|0)>J[a+92>>2]){if(r){J[8369]=J[8369]+1;p=ia[J[6782]](r<<7,16)|0;c=J[a+88>>2]}else{c=b}l:{if((c|0)<=0){break l}e=0;if((c|0)!=1){s=c&-2;while(1){i=e<<6;h=i+p|0;j=i+J[a+96>>2]|0;d=J[j+4>>2];J[h>>2]=J[j>>2];J[h+4>>2]=d;d=J[j+60>>2];J[h+56>>2]=J[j+56>>2];J[h+60>>2]=d;d=J[j+52>>2];J[h+48>>2]=J[j+48>>2];J[h+52>>2]=d;d=J[j+44>>2];J[h+40>>2]=J[j+40>>2];J[h+44>>2]=d;d=J[j+36>>2];J[h+32>>2]=J[j+32>>2];J[h+36>>2]=d;d=J[j+28>>2];J[h+24>>2]=J[j+24>>2];J[h+28>>2]=d;d=J[j+20>>2];J[h+16>>2]=J[j+16>>2];J[h+20>>2]=d;d=J[j+12>>2];J[h+8>>2]=J[j+8>>2];J[h+12>>2]=d;d=i|64;h=d+p|0;i=d+J[a+96>>2]|0;d=J[i+4>>2];J[h>>2]=J[i>>2];J[h+4>>2]=d;d=J[i+12>>2];J[h+8>>2]=J[i+8>>2];J[h+12>>2]=d;d=J[i+20>>2];J[h+16>>2]=J[i+16>>2];J[h+20>>2]=d;d=J[i+28>>2];J[h+24>>2]=J[i+24>>2];J[h+28>>2]=d;d=J[i+36>>2];J[h+32>>2]=J[i+32>>2];J[h+36>>2]=d;d=J[i+44>>2];J[h+40>>2]=J[i+40>>2];J[h+44>>2]=d;d=J[i+52>>2];J[h+48>>2]=J[i+48>>2];J[h+52>>2]=d;d=J[i+60>>2];J[h+56>>2]=J[i+56>>2];J[h+60>>2]=d;e=e+2|0;f=f+2|0;if((s|0)!=(f|0)){continue}break}}if(!(c&1)){break l}c=e<<6;d=c+p|0;e=c+J[a+96>>2]|0;c=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=c;c=J[e+60>>2];J[d+56>>2]=J[e+56>>2];J[d+60>>2]=c;c=J[e+52>>2];J[d+48>>2]=J[e+48>>2];J[d+52>>2]=c;c=J[e+44>>2];J[d+40>>2]=J[e+40>>2];J[d+44>>2]=c;c=J[e+36>>2];J[d+32>>2]=J[e+32>>2];J[d+36>>2]=c;c=J[e+28>>2];J[d+24>>2]=J[e+24>>2];J[d+28>>2]=c;c=J[e+20>>2];J[d+16>>2]=J[e+16>>2];J[d+20>>2]=c;c=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=c}c=J[a+96>>2];if(!(c?!c|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+96>>2]=p;H[a+100|0]=1;J[a+92>>2]=l}e=l+(b^-1)|0;c=l-b&3;if(c){d=0;while(1){f=J[a+96>>2]+(b<<6)|0;J[f>>2]=0;J[f+4>>2]=0;J[f+56>>2]=0;J[f+60>>2]=0;J[f+48>>2]=0;J[f+52>>2]=0;J[f+40>>2]=0;J[f+44>>2]=0;J[f+32>>2]=0;J[f+36>>2]=0;J[f+24>>2]=0;J[f+28>>2]=0;J[f+16>>2]=0;J[f+20>>2]=0;J[f+8>>2]=0;J[f+12>>2]=0;b=b+1|0;d=d+1|0;if((c|0)!=(d|0)){continue}break}}if(e>>>0<3){break k}while(1){d=b<<6;c=d+J[a+96>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=d+J[a+96>>2]|0;J[c+120>>2]=0;J[c+124>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+96>>2]=0;J[c+100>>2]=0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;c=c- -64|0;J[c>>2]=0;J[c+4>>2]=0;c=d+J[a+96>>2]|0;J[c+184>>2]=0;J[c+188>>2]=0;J[c+176>>2]=0;J[c+180>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;c=d+J[a+96>>2]|0;J[c+248>>2]=0;J[c+252>>2]=0;J[c+240>>2]=0;J[c+244>>2]=0;J[c+232>>2]=0;J[c+236>>2]=0;J[c+224>>2]=0;J[c+228>>2]=0;J[c+216>>2]=0;J[c+220>>2]=0;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=0;J[c+204>>2]=0;J[c+192>>2]=0;J[c+196>>2]=0;b=b+4|0;if((l|0)!=(b|0)){continue}break}}J[a+88>>2]=l}J[a+56>>2]=0;Yg(a,0,r);if(!(J[a+152>>2]|!K[a+60|0])){if(J[a+156>>2]){b=1}else{J[8369]=J[8369]+1;s=ia[J[6782]](32,16)|0;h=J[a+152>>2];m:{if((h|0)<=0){break m}d=0;if((h|0)!=1){e=h&-2;l=0;while(1){f=d<<5;c=f+s|0;i=f+J[a+160>>2]|0;b=J[i+4>>2];J[c>>2]=J[i>>2];J[c+4>>2]=b;b=J[i+28>>2];J[c+24>>2]=J[i+24>>2];J[c+28>>2]=b;b=J[i+20>>2];J[c+16>>2]=J[i+16>>2];J[c+20>>2]=b;b=J[i+12>>2];J[c+8>>2]=J[i+8>>2];J[c+12>>2]=b;b=f|32;c=b+s|0;f=b+J[a+160>>2]|0;b=J[f+4>>2];J[c>>2]=J[f>>2];J[c+4>>2]=b;b=J[f+12>>2];J[c+8>>2]=J[f+8>>2];J[c+12>>2]=b;b=J[f+20>>2];J[c+16>>2]=J[f+16>>2];J[c+20>>2]=b;b=J[f+28>>2];J[c+24>>2]=J[f+24>>2];J[c+28>>2]=b;d=d+2|0;l=l+2|0;if((e|0)!=(l|0)){continue}break}}if(!(h&1)){break m}b=d<<5;c=b+s|0;d=b+J[a+160>>2]|0;b=J[d+4>>2];J[c>>2]=J[d>>2];J[c+4>>2]=b;b=J[d+28>>2];J[c+24>>2]=J[d+24>>2];J[c+28>>2]=b;b=J[d+20>>2];J[c+16>>2]=J[d+16>>2];J[c+20>>2]=b;b=J[d+12>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=b}b=J[a+160>>2];if(!(b?!b|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+160>>2]=s;H[a+164|0]=1;J[a+156>>2]=1;b=J[a+152>>2]+1|0}J[a+152>>2]=b;d=J[a+160>>2];c=J[a+136>>2];I[d>>1]=L[c>>1];I[d+2>>1]=L[c+2>>1];I[d+4>>1]=L[c+4>>1];I[d+6>>1]=L[c+6>>1];I[d+8>>1]=L[c+8>>1];b=L[c+10>>1];J[d+12>>2]=0;I[d+10>>1]=b;b=J[c+12>>2];J[d+16>>2]=(b|0)>=0?1:0-b|0}J[a+168>>2]=J[a+152>>2];b=J[a+116>>2];if(!(b?!b|!K[a+120|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+116>>2]=0;H[a+120|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+76>>2]=0;H[a+80|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;ga=k+48|0}function cB(a){a=a|0;var b=0,c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=0,W=0,X=0,Z=Q(0),_=Q(0),$=0;B=ga-48|0;ga=B;if(K[a+738|0]){J[a+744>>2]=0;J[a+36>>2]=0;a:{if(K[a+736|0]){break a}e=N[a+672>>2];b=J[a+32>>2];r=N[b+44>>2];g=N[a+664>>2];v=N[b+36>>2];f=N[a+668>>2];E=N[b+40>>2];C=N[b+60>>2];O=Q(Q(Q(e*r)+Q(Q(g*v)+Q(f*E)))+C);h=N[a+608>>2];c=J[a+28>>2];F=N[c+44>>2];s=N[a+600>>2];u=N[c+36>>2];x=N[a+604>>2];I=N[c+40>>2];d=N[c+60>>2];S=Q(Q(Q(h*F)+Q(Q(s*u)+Q(x*I)))+d);k=Q(O-S);w=N[b+12>>2];i=N[b+4>>2];m=N[b+8>>2];j=N[b+52>>2];T=Q(Q(Q(e*w)+Q(Q(g*i)+Q(f*m)))+j);n=N[c+12>>2];p=N[c+4>>2];l=N[c+8>>2];t=N[c+52>>2];U=Q(Q(Q(h*n)+Q(Q(s*p)+Q(x*l)))+t);o=Q(T-U);y=N[b+28>>2];z=N[b+20>>2];A=N[b+24>>2];G=N[b+56>>2];Z=Q(Q(Q(e*y)+Q(Q(g*z)+Q(f*A)))+G);H=N[c+28>>2];e=s;s=N[c+20>>2];f=x;x=N[c+24>>2];D=N[c+56>>2];_=Q(Q(Q(h*H)+Q(Q(e*s)+Q(f*x)))+D);e=Q(Z-_);g=Q(Q(k*k)+Q(Q(o*o)+Q(e*e)));b:{if(!(g>Q(1.1920928955078125e-7))){g=Q(0);f=Q(0);e=Q(1);break b}h=Q(Q(1)/Q(Y(g)));f=Q(k*h);g=Q(e*h);e=Q(o*h)}J[B+12>>2]=0;N[B+4>>2]=g;N[B>>2]=e;N[B+8>>2]=f;c:{if(Q(R(f))>Q(.7071067690849304)){k=Q(Q(g*g)+Q(f*f));h=Q(Q(1)/Q(Y(k)));k=Q(k*h);o=Q(h*Q(-f));L=Q(o*e);f=Q(g*h);g=Q(f*Q(-e));break c}k=Q(Q(e*e)+Q(g*g));h=Q(Q(1)/Q(Y(k)));L=Q(k*h);M=Q(h*Q(-g));g=Q(f*M);o=Q(e*h);k=Q(o*Q(-f));f=Q(0)}N[B+40>>2]=L;N[B+36>>2]=g;N[B+24>>2]=f;N[B+20>>2]=o;N[B+32>>2]=k;N[B+16>>2]=M;while(1){k=N[b+344>>2];o=N[c+344>>2];W=(V<<4)+B|0;$=J[W+12>>2];q=P(V,84)+a|0;X=q+56|0;J[X>>2]=J[W+8>>2];J[X+4>>2]=$;X=J[W+4>>2];J[q+48>>2]=J[W>>2];J[q+52>>2]=X;J[q+76>>2]=0;J[q+92>>2]=0;L=u;u=Q(U-t);e=N[q+52>>2];g=N[q+48>>2];f=Q(_-D);h=Q(Q(u*e)-Q(g*f));t=p;D=f;f=N[q+56>>2];p=Q(S-d);d=Q(Q(D*f)-Q(e*p));D=s;s=Q(Q(p*g)-Q(f*u));u=Q(Q(L*h)+Q(Q(t*d)+Q(D*s)));N[q- -64>>2]=u;l=Q(Q(I*h)+Q(Q(l*d)+Q(x*s)));N[q+68>>2]=l;d=Q(Q(F*h)+Q(Q(n*d)+Q(H*s)));N[q+72>>2]=d;n=Q(Z-G);h=Q(T-j);j=Q(Q(g*n)-Q(e*h));s=i;i=Q(O-C);e=Q(Q(e*i)-Q(n*f));g=Q(Q(h*f)-Q(i*g));f=Q(Q(v*j)+Q(Q(s*e)+Q(z*g)));N[q+80>>2]=f;i=Q(Q(E*j)+Q(Q(m*e)+Q(A*g)));N[q+84>>2]=i;e=Q(Q(r*j)+Q(Q(w*e)+Q(y*g)));N[q+88>>2]=e;g=N[c+404>>2];m=N[c+400>>2];j=N[c+396>>2];J[q+108>>2]=0;j=Q(u*j);N[q+96>>2]=j;m=Q(l*m);N[q+100>>2]=m;g=Q(d*g);N[q+104>>2]=g;n=N[b+404>>2];h=N[b+400>>2];r=N[b+396>>2];J[q+124>>2]=0;r=Q(f*r);N[q+112>>2]=r;h=Q(i*h);N[q+116>>2]=h;n=Q(e*n);N[q+120>>2]=n;N[q+128>>2]=Q(k+Q(o+Q(Q(g*d)+Q(Q(j*u)+Q(l*m)))))+Q(Q(n*e)+Q(Q(r*f)+Q(i*h)));V=V+1|0;if((V|0)==3){break a}C=N[b+60>>2];G=N[b+56>>2];j=N[b+52>>2];d=N[c+60>>2];D=N[c+56>>2];t=N[c+52>>2];r=N[b+44>>2];y=N[b+28>>2];w=N[b+12>>2];E=N[b+40>>2];A=N[b+24>>2];m=N[b+8>>2];v=N[b+36>>2];z=N[b+20>>2];i=N[b+4>>2];F=N[c+44>>2];H=N[c+28>>2];n=N[c+12>>2];I=N[c+40>>2];x=N[c+24>>2];l=N[c+8>>2];u=N[c+36>>2];s=N[c+20>>2];p=N[c+4>>2];continue}}e=N[a+576>>2];g=N[a+560>>2];f=N[a+592>>2];d:{if(Q(R(f))>Q(.7071067690849304)){d=Q(Q(e*e)+Q(f*f));j=Q(Q(1)/Q(Y(d)));i=Q(d*j);d=Q(j*Q(-f));m=Q(g*d);j=Q(e*j);n=Q(j*Q(-g));l=Q(0);break d}i=Q(Q(g*g)+Q(e*e));d=Q(Q(1)/Q(Y(i)));m=Q(i*d);l=Q(d*Q(-e));n=Q(f*l);d=Q(g*d);i=Q(d*Q(-f));j=Q(0)}b=J[a+32>>2];o=N[b+36>>2];y=N[b+20>>2];t=N[b+40>>2];z=N[b+8>>2];A=N[b+24>>2];p=N[b+44>>2];G=N[b+12>>2];H=N[b+28>>2];c=J[a+28>>2];r=N[c+44>>2];v=N[c+36>>2];E=N[c+40>>2];C=N[c+12>>2];F=N[c+8>>2];s=N[c+28>>2];u=N[c+20>>2];x=N[c+24>>2];D=N[b+4>>2];I=N[c+4>>2];J[a+344>>2]=0;J[a+328>>2]=0;J[a+308>>2]=0;J[a+312>>2]=0;J[a+300>>2]=0;J[a+304>>2]=0;h=Q(Q(r*j)+Q(Q(v*l)+Q(d*E)));k=Q(Q(C*j)+Q(Q(I*l)+Q(d*F)));d=Q(Q(s*j)+Q(Q(u*l)+Q(d*x)));j=Q(Q(r*h)+Q(Q(C*k)+Q(s*d)));N[a+324>>2]=j;l=Q(Q(E*h)+Q(Q(F*k)+Q(x*d)));N[a+320>>2]=l;w=Q(Q(v*h)+Q(Q(I*k)+Q(u*d)));N[a+316>>2]=w;k=Q(-k);p=Q(Q(Q(G*k)-Q(H*d))-Q(p*h));N[a+340>>2]=p;t=Q(Q(Q(z*k)-Q(A*d))-Q(t*h));N[a+336>>2]=t;d=Q(Q(Q(D*k)-Q(y*d))-Q(o*h));N[a+332>>2]=d;h=N[c+400>>2];k=N[c+404>>2];o=N[c+396>>2];J[a+360>>2]=0;k=Q(j*k);N[a+356>>2]=k;h=Q(l*h);N[a+352>>2]=h;o=Q(w*o);N[a+348>>2]=o;y=N[b+400>>2];z=N[b+404>>2];A=N[b+396>>2];J[a+376>>2]=0;z=Q(p*z);N[a+372>>2]=z;y=Q(t*y);N[a+368>>2]=y;A=Q(d*A);N[a+364>>2]=A;N[a+380>>2]=Q(Q(k*j)+Q(Q(o*w)+Q(l*h)))+Q(Q(z*p)+Q(Q(A*d)+Q(t*y)));w=N[c+36>>2];p=N[c+20>>2];k=N[c+40>>2];t=N[c+8>>2];o=N[c+24>>2];h=N[c+44>>2];y=N[c+12>>2];z=N[c+28>>2];A=N[b+36>>2];G=N[b+20>>2];H=N[b+40>>2];D=N[b+8>>2];L=N[b+24>>2];M=N[b+44>>2];d=N[b+12>>2];O=N[b+28>>2];S=N[c+4>>2];T=N[b+4>>2];J[a+428>>2]=0;J[a+412>>2]=0;J[a+392>>2]=0;J[a+396>>2]=0;J[a+384>>2]=0;J[a+388>>2]=0;j=Q(Q(C*m)+Q(Q(I*i)+Q(n*F)));l=Q(-j);U=Q(d*l);d=Q(Q(s*m)+Q(Q(u*i)+Q(n*x)));i=Q(Q(r*m)+Q(Q(v*i)+Q(n*E)));m=Q(Q(U-Q(O*d))-Q(M*i));N[a+424>>2]=m;n=Q(Q(Q(D*l)-Q(L*d))-Q(H*i));N[a+420>>2]=n;l=Q(Q(Q(T*l)-Q(G*d))-Q(A*i));N[a+416>>2]=l;h=Q(Q(h*i)+Q(Q(y*j)+Q(d*z)));N[a+408>>2]=h;k=Q(Q(k*i)+Q(Q(t*j)+Q(d*o)));N[a+404>>2]=k;d=Q(Q(w*i)+Q(Q(S*j)+Q(d*p)));N[a+400>>2]=d;i=N[c+400>>2];j=N[c+404>>2];w=N[c+396>>2];J[a+444>>2]=0;j=Q(h*j);N[a+440>>2]=j;i=Q(k*i);N[a+436>>2]=i;w=Q(d*w);N[a+432>>2]=w;p=N[b+400>>2];t=N[b+404>>2];o=N[b+396>>2];J[a+460>>2]=0;t=Q(m*t);N[a+456>>2]=t;p=Q(n*p);N[a+452>>2]=p;o=Q(l*o);N[a+448>>2]=o;N[a+464>>2]=Q(Q(j*h)+Q(Q(w*d)+Q(k*i)))+Q(Q(t*m)+Q(Q(o*l)+Q(n*p)));l=N[c+36>>2];h=N[c+20>>2];n=N[c+40>>2];k=N[c+8>>2];w=N[c+24>>2];j=N[c+44>>2];p=N[c+12>>2];t=N[c+28>>2];o=N[b+36>>2];y=N[b+20>>2];z=N[b+40>>2];A=N[b+8>>2];G=N[b+24>>2];H=N[b+44>>2];d=N[b+12>>2];D=N[b+28>>2];L=N[c+4>>2];M=N[b+4>>2];J[a+512>>2]=0;J[a+496>>2]=0;J[a+476>>2]=0;J[a+480>>2]=0;J[a+468>>2]=0;J[a+472>>2]=0;i=Q(Q(C*f)+Q(Q(I*g)+Q(e*F)));m=Q(-i);C=Q(d*m);d=Q(Q(s*f)+Q(Q(u*g)+Q(e*x)));e=Q(Q(r*f)+Q(Q(v*g)+Q(e*E)));g=Q(Q(C-Q(D*d))-Q(H*e));N[a+508>>2]=g;f=Q(Q(Q(A*m)-Q(G*d))-Q(z*e));N[a+504>>2]=f;m=Q(Q(Q(M*m)-Q(y*d))-Q(o*e));N[a+500>>2]=m;j=Q(Q(j*e)+Q(Q(p*i)+Q(d*t)));N[a+492>>2]=j;n=Q(Q(n*e)+Q(Q(k*i)+Q(d*w)));N[a+488>>2]=n;e=Q(Q(l*e)+Q(Q(L*i)+Q(d*h)));N[a+484>>2]=e;d=N[c+400>>2];i=N[c+404>>2];l=N[c+396>>2];J[a+528>>2]=0;i=Q(j*i);N[a+524>>2]=i;d=Q(n*d);N[a+520>>2]=d;l=Q(e*l);N[a+516>>2]=l;h=N[b+400>>2];r=N[b+404>>2];v=N[b+396>>2];J[a+724>>2]=0;J[a+544>>2]=0;r=Q(g*r);N[a+540>>2]=r;h=Q(f*h);N[a+536>>2]=h;v=Q(m*v);N[a+532>>2]=v;N[a+548>>2]=Q(Q(i*j)+Q(Q(l*e)+Q(n*d)))+Q(Q(r*g)+Q(Q(v*m)+Q(f*h)));e=N[a+652>>2];g=N[a+620>>2];f=N[a+636>>2];j=Q(Q(N[b+44>>2]*e)+Q(Q(N[b+36>>2]*g)+Q(f*N[b+40>>2])));n=N[c+44>>2];d=N[a+584>>2];l=N[c+36>>2];i=N[a+552>>2];m=N[a+568>>2];h=N[c+40>>2];s=Q(j*Q(Q(n*d)+Q(Q(l*i)+Q(m*h))));r=Q(Q(N[b+12>>2]*e)+Q(Q(N[b+4>>2]*g)+Q(f*N[b+8>>2])));v=N[c+12>>2];E=N[c+4>>2];C=N[c+8>>2];p=Q(r*Q(Q(v*d)+Q(Q(E*i)+Q(m*C))));F=N[c+28>>2];u=Q(F*d);d=N[c+20>>2];x=Q(d*i);i=N[c+24>>2];u=Q(u+Q(x+Q(m*i)));m=Q(Q(N[b+28>>2]*e)+Q(Q(N[b+20>>2]*g)+Q(f*N[b+24>>2])));e=N[a+588>>2];g=N[a+556>>2];f=N[a+572>>2];e=Q($a(Q(s+Q(p+Q(u*m))),Q(Q(j*Q(Q(n*e)+Q(Q(l*g)+Q(h*f))))+Q(Q(r*Q(Q(v*e)+Q(Q(E*g)+Q(C*f))))+Q(Q(Q(F*e)+Q(Q(d*g)+Q(i*f)))*m))))*N[a+732>>2]);N[a+728>>2]=e;Pk(a+688|0,e);c=a;b=J[a+28>>2];f=N[a+592>>2];d=N[a+560>>2];i=N[a+576>>2];e=Q(Q(N[b+44>>2]*f)+Q(Q(N[b+36>>2]*d)+Q(i*N[b+40>>2])));g=Q(Q(N[b+12>>2]*f)+Q(Q(N[b+4>>2]*d)+Q(i*N[b+8>>2])));f=Q(Q(N[b+28>>2]*f)+Q(Q(N[b+20>>2]*d)+Q(i*N[b+24>>2])));a=J[a+32>>2];N[c+720>>2]=Q(1)/Q(Q(Q(e*Q(Q(e*N[b+304>>2])+Q(Q(N[b+272>>2]*g)+Q(f*N[b+288>>2]))))+Q(Q(g*Q(Q(N[b+296>>2]*e)+Q(Q(g*N[b+264>>2])+Q(f*N[b+280>>2]))))+Q(f*Q(Q(N[b+300>>2]*e)+Q(Q(N[b+268>>2]*g)+Q(f*N[b+284>>2]))))))+Q(Q(e*Q(Q(e*N[a+304>>2])+Q(Q(N[a+272>>2]*g)+Q(f*N[a+288>>2]))))+Q(Q(g*Q(Q(N[a+296>>2]*e)+Q(Q(g*N[a+264>>2])+Q(f*N[a+280>>2]))))+Q(f*Q(Q(N[a+300>>2]*e)+Q(Q(N[a+268>>2]*g)+Q(f*N[a+284>>2])))))))}ga=B+48|0}function Jn(a){a=a|0;var b=Q(0),c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=0,r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=0;s=ga-48|0;ga=s;J[s+44>>2]=a;p=J[s+44>>2];ia[J[J[p>>2]+112>>2]](p);c=ga-16|0;ga=c;J[c+12>>2]=p+68;a=ga-16|0;J[a+12>>2]=J[c+12>>2];ga=c+16|0;a:{if(!J[J[a+12>>2]>>2]){g=ga+-64|0;ga=g;H[g+56|0]=1;J[g+48>>2]=0;J[g+52>>2]=0;h=p+68|0;a=J[h+72>>2];i=ia[J[J[a>>2]+12>>2]](a)|0;J[g+32>>2]=0;J[g+36>>2]=0;J[g+24>>2]=0;J[g+28>>2]=0;J[g+16>>2]=0;J[g+20>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;b:{if((i|0)<=0){J[g+44>>2]=i;break b}J[8369]=J[8369]+1;c=ia[J[6782]](P(i,36),16)|0;J[g+52>>2]=c;J[g+48>>2]=i;H[g+56|0]=1;J[c+8>>2]=0;J[c+12>>2]=0;J[c>>2]=0;J[c+4>>2]=0;a=J[g+28>>2];J[c+16>>2]=J[g+24>>2];J[c+20>>2]=a;a=J[g+36>>2];J[c+24>>2]=J[g+32>>2];J[c+28>>2]=a;J[c+32>>2]=0;c:{if((i|0)==1){break c}a=1;c=i-1|0;q=c&1;if((i|0)!=2){f=c&-2;while(1){d=P(a,36);j=d+J[g+52>>2]|0;c=j;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=J[g+28>>2];J[j+16>>2]=J[g+24>>2];J[j+20>>2]=c;c=J[g+36>>2];J[j+24>>2]=J[g+32>>2];J[j+28>>2]=c;J[j+32>>2]=0;d=d+J[g+52>>2]|0;c=d;J[c+44>>2]=0;J[c+48>>2]=0;J[c+36>>2]=0;J[c+40>>2]=0;c=J[g+28>>2];J[d+52>>2]=J[g+24>>2];J[d+56>>2]=c;c=J[g+36>>2];J[d+60>>2]=J[g+32>>2];J[d+64>>2]=c;J[d+68>>2]=0;a=a+2|0;k=k+2|0;if((f|0)!=(k|0)){continue}break}}if(!q){break c}c=J[g+52>>2]+P(a,36)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;a=J[g+28>>2];J[c+16>>2]=J[g+24>>2];J[c+20>>2]=a;a=J[g+36>>2];J[c+24>>2]=J[g+32>>2];J[c+28>>2]=a;J[c+32>>2]=0}J[g+44>>2]=i;if((i|0)<=0){break b}a=0;j=J[g+52>>2];if((i|0)!=1){f=i&-2;k=0;while(1){d=J[h+72>>2];c=j+P(a,36)|0;ia[J[J[d>>2]+16>>2]](d,a,c);J[c+32>>2]=a;q=a|1;d=j+P(q,36)|0;c=J[h+72>>2];ia[J[J[c>>2]+16>>2]](c,q,d);J[d+32>>2]=q;a=a+2|0;k=k+2|0;if((f|0)!=(k|0)){continue}break}}if(!(i&1)){break b}d=J[h+72>>2];c=j+P(a,36)|0;ia[J[J[d>>2]+16>>2]](d,a,c);J[c+32>>2]=a}k=0;i=0;F=g+40|0;c=J[F+4>>2];d:{if((c|0)<=0){n=Q(-3.4028234663852886e38);o=Q(-3.4028234663852886e38);l=Q(3.4028234663852886e38);m=Q(-3.4028234663852886e38);r=Q(3.4028234663852886e38);b=Q(3.4028234663852886e38);break d}a=J[F+12>>2];m=Q(-3.4028234663852886e38);r=Q(3.4028234663852886e38);l=Q(3.4028234663852886e38);v=Q(3.4028234663852886e38);o=Q(-3.4028234663852886e38);n=Q(-3.4028234663852886e38);while(1){d=a+P(k,36)|0;b=N[d+16>>2];m=b>m?b:m;b=N[d+8>>2];v=b<v?b:v;b=N[d+4>>2];l=b<l?b:l;b=N[d>>2];r=b<r?b:r;b=N[d+24>>2];n=b>n?b:n;b=N[d+20>>2];o=b>o?b:o;k=k+1|0;if((c|0)!=(k|0)){continue}break}n=Q(n+Q(1));o=Q(o+Q(1));m=Q(m+Q(1));l=Q(l+Q(-1));r=Q(r+Q(-1));b=Q(v+Q(-1))}N[h+24>>2]=r;J[h>>2]=0;J[h+68>>2]=0;J[h+52>>2]=0;N[h+48>>2]=n;N[h+44>>2]=o;N[h+40>>2]=m;J[h+36>>2]=0;N[h+32>>2]=b;N[h+28>>2]=l;N[h- -64>>2]=Q(65535)/Q(n-b);N[h+60>>2]=Q(65535)/Q(o-l);N[h+56>>2]=Q(65535)/Q(m-r);a=J[h+8>>2];k=J[F+4>>2];E=k<<1;if((a|0)<(E|0)){if((E|0)>J[h+12>>2]){if(k){J[8369]=J[8369]+1;y=ia[J[6782]](k<<5,16)|0;c=J[h+8>>2]}else{c=a}e:{if((c|0)<=0){break e}k=0;if((c|0)!=1){q=c&-2;while(1){j=k<<4;f=j+y|0;e=j+J[h+16>>2]|0;d=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=d;d=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=d;d=j|16;f=d+y|0;j=d+J[h+16>>2]|0;d=J[j+4>>2];J[f>>2]=J[j>>2];J[f+4>>2]=d;d=J[j+12>>2];J[f+8>>2]=J[j+8>>2];J[f+12>>2]=d;k=k+2|0;i=i+2|0;if((q|0)!=(i|0)){continue}break}}if(!(c&1)){break e}c=k<<4;d=c+y|0;f=c+J[h+16>>2]|0;c=J[f+4>>2];J[d>>2]=J[f>>2];J[d+4>>2]=c;c=J[f+12>>2];J[d+8>>2]=J[f+8>>2];J[d+12>>2]=c}c=J[h+16>>2];if(!(c?!c|!K[h+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[h+16>>2]=y;H[h+20|0]=1;J[h+12>>2]=E}d=E+(a^-1)|0;c=E-a&3;if(c){k=0;while(1){J[(J[h+16>>2]+(a<<4)|0)+12>>2]=0;a=a+1|0;k=k+1|0;if((c|0)!=(k|0)){continue}break}}if(d>>>0>=3){while(1){c=a<<4;J[(c+J[h+16>>2]|0)+12>>2]=0;J[(c+J[h+16>>2]|0)+28>>2]=0;J[(c+J[h+16>>2]|0)+44>>2]=0;J[(c+J[h+16>>2]|0)+60>>2]=0;a=a+4|0;if((E|0)!=(a|0)){continue}break}}k=J[F+4>>2]}J[h+8>>2]=E;Jg(h,F,0,k);a=J[g+52>>2];if(!(a?!a|!K[g+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=g- -64|0;break a}j=ga-16|0;ga=j;J[j+12>>2]=p+68;i=ga-32|0;ga=i;e=J[j+12>>2];a=J[e>>2];if(a){y=J[e+16>>2];while(1){d=a;a=a-1|0;q=a<<4;c=q+y|0;f=J[c+12>>2];f:{if((f|0)>=0){c=J[e+72>>2];ia[J[J[c>>2]+16>>2]](c,f,i);n=N[e+56>>2];x=N[e+40>>2];t=N[e+24>>2];o=N[e+60>>2];z=N[e+44>>2];u=N[e+28>>2];l=N[i>>2];m=N[i+4>>2];y=J[e+16>>2];c=q+y|0;A=N[e+48>>2];w=N[e+32>>2];b=N[i+8>>2];b=b<w?w:b;v=N[e+64>>2];b=Q(Q(Q((b>A?A:b)-w)*v)+Q(.5));g:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break g}d=0}I[c+4>>1]=d;b=m<u?u:m;b=Q(Q(o*Q((b>z?z:b)-u))+Q(.5));h:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break h}d=0}I[c+2>>1]=d;b=l<t?t:l;b=Q(Q(Q((b>x?x:b)-t)*n)+Q(.5));i:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break i}d=0}I[c>>1]=d;l=N[i+16>>2];m=N[i+20>>2];b=N[i+24>>2];b=b<w?w:b;b=Q(Q(v*Q((b>A?A:b)-w))+Q(.5));j:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break j}d=0}I[c+10>>1]=d;b=m<u?u:m;b=Q(Q(o*Q((b>z?z:b)-u))+Q(.5));k:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break k}d=0}I[c+8>>1]=d;b=l<t?t:l;b=Q(Q(n*Q((b>x?x:b)-t))+Q(.5));if(b<Q(4294967296)&b>=Q(0)){I[c+6>>1]=~~b>>>0;break f}I[c+6>>1]=0;break f}B=N[e+24>>2];f=(d<<4)+y|0;t=N[e+56>>2];b=Q(B+Q(Q(L[f+6>>1])/t));r=b>Q(-3.4028234663852886e38)?b:Q(-3.4028234663852886e38);u=N[e+64>>2];C=N[e+32>>2];b=Q(Q(Q(L[f+4>>1])/u)+C);w=b<Q(3.4028234663852886e38)?b:Q(3.4028234663852886e38);x=N[e+60>>2];D=N[e+28>>2];b=Q(Q(Q(L[f+2>>1])/x)+D);z=b<Q(3.4028234663852886e38)?b:Q(3.4028234663852886e38);b=Q(Q(Q(L[f>>1])/t)+B);A=b<Q(3.4028234663852886e38)?b:Q(3.4028234663852886e38);b=Q(C+Q(Q(L[f+10>>1])/u));n=b>Q(-3.4028234663852886e38)?b:Q(-3.4028234663852886e38);b=Q(D+Q(Q(L[f+8>>1])/x));o=b>Q(-3.4028234663852886e38)?b:Q(-3.4028234663852886e38);f=J[f+12>>2];d=d+((f|0)>=0?1:0-f|0)|0;if(d){d=(d<<4)+y|0;b=Q(B+Q(Q(L[d+6>>1])/t));r=b>r?b:r;b=Q(Q(Q(L[d+4>>1])/u)+C);w=b<w?b:w;b=Q(Q(Q(L[d+2>>1])/x)+D);z=b<z?b:z;b=Q(Q(Q(L[d>>1])/t)+B);A=b<A?b:A;b=Q(C+Q(Q(L[d+10>>1])/u));n=b>n?b:n;b=Q(D+Q(Q(L[d+8>>1])/x));o=b>o?b:o}l=N[e+40>>2];m=N[e+44>>2];v=N[e+48>>2];b=n<C?C:n;b=Q(Q(u*Q((b>v?v:b)-C))+Q(.5));l:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break l}d=0}I[c+10>>1]=d;b=o<D?D:o;b=Q(Q(x*Q((b>m?m:b)-D))+Q(.5));m:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break m}d=0}I[c+8>>1]=d;b=r<B?B:r;b=Q(Q(t*Q((b>l?l:b)-B))+Q(.5));n:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break n}d=0}I[c+6>>1]=d;b=w<C?C:w;b=Q(Q(Q((b>v?v:b)-C)*u)+Q(.5));o:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break o}d=0}I[c+4>>1]=d;b=z<D?D:z;b=Q(Q(Q((b>m?m:b)-D)*x)+Q(.5));p:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break p}d=0}I[c+2>>1]=d;b=A<B?B:A;b=Q(Q(Q((b>l?l:b)-B)*t)+Q(.5));q:{if(b<Q(4294967296)&b>=Q(0)){d=~~b>>>0;break q}d=0}I[c>>1]=d}if(a){continue}break}}ga=i+32|0;ga=j+16|0}ia[J[J[p>>2]+116>>2]](p);j=ga-16|0;ga=j;c=s+8|0;J[j+12>>2]=c;J[j+8>>2]=p+68;a=J[j+8>>2];Nd(c);i=ga-16|0;ga=i;J[i+12>>2]=a;J[i+8>>2]=0;J[i+4>>2]=c;c=J[i+8>>2];a=J[i+4>>2];e=ga-48|0;ga=e;J[e+44>>2]=J[i+12>>2];J[e+40>>2]=c;J[e+36>>2]=a;a=J[e+40>>2];c=ga-16|0;q=J[e+44>>2];J[c+12>>2]=q+4;J[c+8>>2]=a;a=J[J[c+12>>2]+12>>2]+(J[c+8>>2]<<4)|0;d=q+24|0;c=q+56|0;Dh(e+16|0,a,d,c);a=J[e+20>>2];f=J[e+36>>2];J[f>>2]=J[e+16>>2];J[f+4>>2]=a;a=J[e+28>>2];J[f+8>>2]=J[e+24>>2];J[f+12>>2]=a;a=J[e+40>>2];f=ga-16|0;J[f+12>>2]=q+4;J[f+8>>2]=a;Dh(e,(J[J[f+12>>2]+12>>2]+(J[f+8>>2]<<4)|0)+6|0,d,c);a=J[e+4>>2];c=J[e+36>>2];J[c+16>>2]=J[e>>2];J[c+20>>2]=a;a=J[e+12>>2];J[c+24>>2]=J[e+8>>2];J[c+28>>2]=a;ga=e+48|0;ga=i+16|0;ga=j+16|0;a=J[s+12>>2];J[p+16>>2]=J[s+8>>2];J[p+20>>2]=a;a=J[s+36>>2];J[p+40>>2]=J[s+32>>2];J[p+44>>2]=a;a=J[s+28>>2];J[p+32>>2]=J[s+24>>2];J[p+36>>2]=a;a=J[s+20>>2];J[p+24>>2]=J[s+16>>2];J[p+28>>2]=a;ga=s+48|0}function zb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=0;e=ga-272|0;ga=e;J[a+56>>2]=0;J[e+264>>2]=0;J[e+268>>2]=0;J[e+256>>2]=0;J[e+260>>2]=0;g=J[b+12>>2];J[e+168>>2]=J[b+8>>2];J[e+172>>2]=g;g=J[b+4>>2];J[e+160>>2]=J[b>>2];J[e+164>>2]=g;g=J[b+28>>2];J[e+184>>2]=J[b+24>>2];J[e+188>>2]=g;g=J[b+20>>2];J[e+176>>2]=J[b+16>>2];J[e+180>>2]=g;g=J[b+44>>2];J[e+200>>2]=J[b+40>>2];J[e+204>>2]=g;g=J[b+36>>2];J[e+192>>2]=J[b+32>>2];J[e+196>>2]=g;g=J[b+60>>2];J[e+216>>2]=J[b+56>>2];J[e+220>>2]=g;g=J[b+52>>2];J[e+208>>2]=J[b+48>>2];J[e+212>>2]=g;g=J[b+76>>2];J[e+104>>2]=J[b+72>>2];J[e+108>>2]=g;g=J[b+68>>2];J[e+96>>2]=J[b+64>>2];J[e+100>>2]=g;g=J[b+92>>2];J[e+120>>2]=J[b+88>>2];J[e+124>>2]=g;g=J[b+84>>2];J[e+112>>2]=J[b+80>>2];J[e+116>>2]=g;g=J[b+108>>2];J[e+136>>2]=J[b+104>>2];J[e+140>>2]=g;g=J[b+100>>2];J[e+128>>2]=J[b+96>>2];J[e+132>>2]=g;g=J[b+124>>2];J[e+152>>2]=J[b+120>>2];J[e+156>>2]=g;g=J[b+116>>2];J[e+144>>2]=J[b+112>>2];J[e+148>>2]=g;f=N[e+212>>2];i=N[e+148>>2];z=Q(Q(f+i)*Q(.5));N[e+212>>2]=f-z;f=N[e+216>>2];h=N[e+152>>2];A=Q(Q(f+h)*Q(.5));N[e+216>>2]=f-A;N[e+148>>2]=i-z;N[e+152>>2]=h-A;f=N[e+208>>2];i=N[e+144>>2];B=Q(Q(f+i)*Q(.5));N[e+208>>2]=f-B;N[e+144>>2]=i-B;l=J[J[a+28>>2]+4>>2]-17>>>0<=1?J[J[a+32>>2]+4>>2]-17>>>0<2:l;f=N[a+44>>2];i=N[a+48>>2];J[7717]=J[7717]+1;J[a+68>>2]=0;J[a+12>>2]=0;J[a+16>>2]=0;J[a+4>>2]=0;J[a+8>>2]=1065353216;J[a+60>>2]=-1;J[a+64>>2]=0;g=K[a+52|0];Ie(J[a+24>>2]);o=g?Q(0):f;p=g?Q(0):i;r=Q(o+p);g=a+4|0;v=N[e+136>>2];w=N[e+132>>2];x=N[e+120>>2];G=N[e+116>>2];H=N[e+200>>2];I=N[e+196>>2];L=N[e+184>>2];M=N[e+180>>2];i=Q(0xde0b6b000000000);O=N[e+148>>2];P=N[e+144>>2];R=N[e+128>>2];S=N[e+112>>2];T=N[e+104>>2];U=N[e+100>>2];V=N[e+96>>2];W=N[e+216>>2];X=N[e+212>>2];Z=N[e+208>>2];_=N[e+192>>2];$=N[e+176>>2];aa=N[e+168>>2];ba=N[e+164>>2];ca=N[e+160>>2];a:{b:{c:{while(1){m=N[b+32>>2];s=N[b>>2];t=N[b+16>>2];u=N[b+36>>2];C=N[b+4>>2];D=N[b+20>>2];E=N[b+40>>2];f=N[a+12>>2];j=N[b+8>>2];k=N[a+4>>2];F=N[b+24>>2];h=N[a+8>>2];J[e+252>>2]=0;q=j;j=Q(-k);N[e+248>>2]=Q(Q(q*j)-Q(F*h))-Q(E*f);N[e+244>>2]=Q(Q(C*j)-Q(D*h))-Q(u*f);N[e+240>>2]=Q(Q(s*j)-Q(t*h))-Q(m*f);j=N[b+96>>2];m=N[b+64>>2];s=N[b+80>>2];t=N[b+100>>2];u=N[b+68>>2];C=N[b+84>>2];D=N[b+104>>2];E=N[b+72>>2];F=N[b+88>>2];J[e+236>>2]=0;N[e+232>>2]=Q(D*f)+Q(Q(E*k)+Q(h*F));N[e+228>>2]=Q(t*f)+Q(Q(u*k)+Q(h*C));N[e+224>>2]=Q(j*f)+Q(Q(m*k)+Q(h*s));Ue(e+80|0,J[a+28>>2],e+240|0);Ue(e- -64|0,J[a+32>>2],e+224|0);J[e+60>>2]=0;f=N[e+88>>2];h=N[e+80>>2];j=N[e+84>>2];k=Q(Q(Q(f*H)+Q(Q(h*_)+Q(j*I)))+W);N[e+56>>2]=k;s=Q(Q(Q(f*L)+Q(Q(h*$)+Q(j*M)))+X);N[e+52>>2]=s;t=Q(Q(Q(f*aa)+Q(Q(h*ca)+Q(j*ba)))+Z);N[e+48>>2]=t;J[e+44>>2]=0;f=N[e+72>>2];h=N[e+64>>2];m=N[e+68>>2];j=Q(Q(Q(f*v)+Q(Q(h*R)+Q(m*w)))+N[e+152>>2]);N[e+40>>2]=j;u=Q(Q(Q(f*x)+Q(Q(h*S)+Q(m*G)))+O);N[e+36>>2]=u;f=Q(Q(Q(f*T)+Q(Q(h*V)+Q(m*U)))+P);N[e+32>>2]=f;if(l){J[e+40>>2]=0;J[e+56>>2]=0;j=Q(0);k=Q(0)}J[e+28>>2]=0;h=Q(k-j);N[e+24>>2]=h;f=Q(t-f);N[e+16>>2]=f;k=Q(s-u);N[e+20>>2]=k;f=Q(Q(N[a+12>>2]*h)+Q(Q(N[a+4>>2]*f)+Q(k*N[a+8>>2])));if(!(!(f>Q(0))|!(Q(f*f)>Q(i*N[b+128>>2])))){J[a+68>>2]=10;break c}if(nl(J[a+24>>2],e+16|0)){J[a+68>>2]=1;break c}f=Q(i-f);if(f<=Q(i*Q(9.999999974752427e-7))){J[a+68>>2]=f<=Q(0)?2:11;break c}rl(J[a+24>>2],e+16|0,e+48|0,e+32|0);d:{if(!ol(J[a+24>>2],e)){l=3;break d}f=N[e+8>>2];h=Q(f*f);f=N[e>>2];j=Q(f*f);f=N[e+4>>2];f=Q(h+Q(j+Q(f*f)));if(f<Q(9.999999974752427e-7)){l=J[e+4>>2];J[g>>2]=J[e>>2];J[g+4>>2]=l;l=J[e+12>>2];J[g+8>>2]=J[e+8>>2];J[g+12>>2]=l;l=6;break d}if(Q(i-f)<=Q(i*Q(1.1920928955078125e-7))){l=12;i=f;break d}n=J[e+4>>2];J[g>>2]=J[e>>2];J[g+4>>2]=n;n=J[e+12>>2];J[g+8>>2]=J[e+8>>2];J[g+12>>2]=n;n=J[a+64>>2];J[a+64>>2]=n+1;if((n|0)>1e3){break b}if(J[J[a+24>>2]>>2]==4){J[a+68>>2]=13;break b}i=f;continue}break}J[a+68>>2]=l}ml(J[a+24>>2],e+240|0,e+224|0);l=J[g+12>>2];J[e+264>>2]=J[g+8>>2];J[e+268>>2]=l;l=J[g+4>>2];J[e+256>>2]=J[g>>2];J[e+260>>2]=l;f=N[a+12>>2];h=N[a+4>>2];k=N[a+8>>2];j=Q(Q(f*f)+Q(Q(h*h)+Q(k*k)));if(+j<1e-4){J[a+68>>2]=5}if(j>Q(1.4210854715202004e-14)){j=Q(Q(1)/Q(Y(j)));N[e+256>>2]=j*N[e+256>>2];N[e+260>>2]=j*N[e+260>>2];N[e+264>>2]=j*N[e+264>>2];m=Q(Y(i));i=Q(o/m);N[e+240>>2]=N[e+240>>2]-Q(i*h);N[e+244>>2]=N[e+244>>2]-Q(i*k);N[e+248>>2]=N[e+248>>2]-Q(i*f);i=Q(p/m);N[e+224>>2]=Q(i*h)+N[e+224>>2];N[e+228>>2]=Q(i*k)+N[e+228>>2];N[e+232>>2]=Q(i*f)+N[e+232>>2];y=1;J[a+60>>2]=1;f=Q(Q(Q(1)/j)-r);break a}J[a+60>>2]=2}f=Q(0)}l=J[a+20>>2];da=!l;n=1;e:{if(!J[a+72>>2]){break e}n=1;if(!l){break e}n=1;if(!J[a+68>>2]){break e}n=!(+Q(r+f)<.01)}f:{g:{h:{if(da|n&y){break h}n=!y;J[7716]=J[7716]+1;J[g+8>>2]=0;J[g+12>>2]=0;J[g>>2]=0;J[g+4>>2]=0;if(ia[J[J[l>>2]+8>>2]](l,J[a+24>>2],J[a+28>>2],J[a+32>>2],e+160|0,e+96|0,g,e+80|0,e- -64|0,d)|0){j=Q(0);l=9;h=N[e+72>>2];r=N[e+88>>2];o=Q(h-r);m=N[e+64>>2];v=N[e+80>>2];i=Q(m-v);w=N[e+68>>2];x=N[e+84>>2];p=Q(w-x);k=Q(Q(o*o)+Q(Q(i*i)+Q(p*p)));if(k<=Q(1.4210854715202004e-14)){j=N[a+16>>2];o=N[a+12>>2];i=N[a+4>>2];p=N[a+8>>2];k=Q(Q(o*o)+Q(Q(i*i)+Q(p*p)))}i:{if(!(k>Q(1.4210854715202004e-14))){break i}l=8;h=Q(r-h);q=Q(h*h);h=Q(v-m);m=Q(h*h);h=Q(x-w);h=Q(-Q(Y(Q(q+Q(m+Q(h*h))))));if(!(n|h<f)){break i}d=J[e+92>>2];J[e+248>>2]=J[e+88>>2];J[e+252>>2]=d;d=J[e+76>>2];J[e+232>>2]=J[e+72>>2];J[e+236>>2]=d;d=J[e+84>>2];J[e+240>>2]=J[e+80>>2];J[e+244>>2]=d;d=J[e+68>>2];J[e+224>>2]=J[e+64>>2];J[e+228>>2]=d;N[e+268>>2]=j;f=Q(Q(1)/Q(Y(k)));N[e+264>>2]=o*f;N[e+260>>2]=p*f;N[e+256>>2]=i*f;J[a+60>>2]=3;f=h;break g}J[a+60>>2]=l;if(y){break g}break f}h=N[a+12>>2];k=N[a+4>>2];j=N[a+8>>2];if(!(Q(Q(h*h)+Q(Q(k*k)+Q(j*j)))>Q(0))){break h}i=Q(N[e+88>>2]-N[e+72>>2]);q=Q(i*i);i=Q(N[e+80>>2]-N[e+64>>2]);m=Q(i*i);i=Q(N[e+84>>2]-N[e+68>>2]);i=Q(Q(Y(Q(q+Q(m+Q(i*i)))))-r);if(n|i<f){d=J[e+92>>2];J[e+248>>2]=J[e+88>>2];J[e+252>>2]=d;d=J[e+76>>2];J[e+232>>2]=J[e+72>>2];J[e+236>>2]=d;N[e+248>>2]=N[e+248>>2]-Q(o*h);N[e+232>>2]=Q(p*h)+N[e+232>>2];d=J[e+68>>2];J[e+224>>2]=J[e+64>>2];J[e+228>>2]=d;d=J[e+84>>2];J[e+240>>2]=J[e+80>>2];J[e+244>>2]=d;N[e+224>>2]=Q(p*k)+N[e+224>>2];N[e+228>>2]=Q(p*j)+N[e+228>>2];N[e+240>>2]=N[e+240>>2]-Q(o*k);N[e+244>>2]=N[e+244>>2]-Q(o*j);d=J[g+12>>2];J[e+264>>2]=J[g+8>>2];J[e+268>>2]=d;d=J[g+4>>2];J[e+256>>2]=J[g>>2];J[e+260>>2]=d;h=N[e+264>>2];k=N[e+256>>2];j=N[e+260>>2];f=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(k*k)+Q(j*j))))));N[e+264>>2]=h*f;N[e+260>>2]=j*f;N[e+256>>2]=k*f;J[a+60>>2]=6;f=i;break g}J[a+60>>2]=5}if(!y){break f}}if(!(N[b+128>>2]>Q(f*f)?1:f<Q(0))){break f}j:{if(!J[a+76>>2]){break j}b=J[a+28>>2];d=e+80|0;l=e- -64|0;ia[J[J[b>>2]+8>>2]](b,e+160|0,d,l);i=N[e+88>>2];h=N[e+72>>2];k=N[e+80>>2];j=N[e+64>>2];o=N[e+84>>2];p=N[e+68>>2];b=J[a+32>>2];ia[J[J[b>>2]+8>>2]](b,e+96|0,d,l);q=Q(Q(Q(h+i)*Q(.5))-Q(Q(N[e+88>>2]+N[e+72>>2])*Q(.5)));i=N[e+264>>2];h=N[e+256>>2];j=Q(Q(Q(Q(j+k)*Q(.5))-Q(Q(N[e+80>>2]+N[e+64>>2])*Q(.5)))*h);k=N[e+260>>2];if(!(Q(Q(q*i)+Q(j+Q(Q(Q(Q(p+o)*Q(.5))-Q(Q(N[e+84>>2]+N[e+68>>2])*Q(.5)))*k)))<Q(0))){break j}N[e+264>>2]=-i;N[e+260>>2]=-k;N[e+256>>2]=-h}b=J[e+260>>2];J[g>>2]=J[e+256>>2];J[g+4>>2]=b;b=J[e+268>>2];J[g+8>>2]=J[e+264>>2];J[g+12>>2]=b;N[a+56>>2]=f;J[e+92>>2]=0;N[e+88>>2]=A+N[e+232>>2];N[e+84>>2]=z+N[e+228>>2];N[e+80>>2]=B+N[e+224>>2];ia[J[J[c>>2]+16>>2]](c,e+256|0,e+80|0,f)}ga=e+272|0}function ll(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=Q(0),q=Q(0),r=0,s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=0,y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=0,I=0,L=0,M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=0,V=0,W=0,X=Q(0),Y=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0);l=ga+-64|0;ga=l;J[l+52>>2]=0;J[l+44>>2]=0;J[l+48>>2]=0;H[l+56|0]=1;h=J[d+4>>2];if((h|0)>0){J[8369]=J[8369]+1;J[l+52>>2]=ia[J[6782]](h<<4,16);H[l+56|0]=1;J[l+48>>2]=h}r=J[b+28>>2];a:{if((r|0)<=0){break a}w=N[c+40>>2];y=N[c+36>>2];v=N[c+24>>2];A=N[c+20>>2];L=J[b+36>>2];B=N[a+8>>2];z=N[a+4>>2];D=N[a>>2];E=N[c+32>>2];M=N[c+16>>2];O=N[c+8>>2];R=N[c+4>>2];C=N[c>>2];p=Q(3.4028234663852886e38);i=-1;while(1){h=L+P(m,36)|0;q=N[h+28>>2];s=N[h+20>>2];u=N[h+24>>2];q=Q(Q(Q(Q(w*q)+Q(Q(E*s)+Q(u*y)))*B)+Q(Q(Q(Q(O*q)+Q(Q(C*s)+Q(u*R)))*D)+Q(Q(Q(v*q)+Q(Q(M*s)+Q(u*A)))*z)));h=q<p;p=h?q:p;i=h?m:i;m=m+1|0;if((r|0)!=(m|0)){continue}break}if((i|0)<0){break a}F=J[b+36>>2]+P(i,36)|0;V=J[F+4>>2];b:{if((V|0)<=0){h=d;break b}r=l+40|0;L=0;while(1){h=L;L=h+1|0;W=(V|0)==(L|0);j=J[b+16>>2];i=J[F+12>>2];m=j+(J[i+((W?0:L)<<2)>>2]<<4)|0;C=N[m+8>>2];S=N[m>>2];T=N[m+4>>2];h=j+(J[i+(h<<2)>>2]<<4)|0;p=N[h+8>>2];q=N[h>>2];s=N[h+4>>2];aa=N[c+56>>2];ba=N[c+48>>2];ca=N[c+52>>2];u=N[c+40>>2];w=N[c+32>>2];y=N[c+36>>2];v=N[F+28>>2];A=N[c+8>>2];B=N[F+20>>2];z=N[c>>2];D=N[F+24>>2];E=N[c+4>>2];M=N[c+24>>2];O=N[c+16>>2];R=N[c+20>>2];J[l+36>>2]=0;C=Q(p-C);S=Q(q-S);T=Q(s-T);X=Q(Q(A*C)+Q(Q(z*S)+Q(E*T)));Y=Q(Q(M*v)+Q(Q(O*B)+Q(R*D)));Z=Q(Q(A*v)+Q(Q(z*B)+Q(E*D)));_=Q(Q(M*C)+Q(Q(O*S)+Q(T*R)));$=Q(Q(X*Y)-Q(Z*_));N[l+32>>2]=-$;C=Q(Q(u*C)+Q(Q(w*S)+Q(T*y)));v=Q(Q(u*v)+Q(Q(w*B)+Q(y*D)));B=Q(Q(C*Z)-Q(v*X));N[l+28>>2]=-B;v=Q(-Q(Q(_*v)-Q(Y*C)));N[l+24>>2]=v;h=r;B=Q(-Q(Q(Q(Q(ba+Q(Q(p*A)+Q(Q(q*z)+Q(s*E))))*v)-Q(Q(ca+Q(Q(p*M)+Q(Q(q*O)+Q(s*R))))*B))-Q(Q(aa+Q(Q(p*u)+Q(Q(q*w)+Q(s*y))))*$)));G=0;r=d;c:{U=J[d+4>>2];if((U|0)<2){break c}z=N[l+32>>2];i=J[r+12>>2];d=(i+(U<<4)|0)-16|0;q=N[d+8>>2];D=N[l+24>>2];s=N[d>>2];u=N[d+4>>2];E=N[l+28>>2];p=Q(Q(Q(z*q)+Q(Q(D*s)+Q(u*E)))+B);while(1){d=(G<<4)+i|0;w=N[d+8>>2];y=N[d>>2];v=N[d+4>>2];A=Q(Q(Q(z*w)+Q(Q(D*y)+Q(v*E)))+B);z=N[d+12>>2];d:{e:{if(p<Q(0)){if(A<Q(0)){d=J[h+4>>2];f:{if((d|0)!=J[h+8>>2]){break f}t=d?d<<1:1;if((t|0)<=(d|0)){break f}g:{if(!t){m=0;break g}J[8369]=J[8369]+1;m=ia[J[6782]](t<<4,16)|0;d=J[h+4>>2]}h:{if((d|0)<=0){break h}i=0;if((d|0)!=1){I=d&-2;j=0;while(1){n=i<<4;o=n+m|0;k=n+J[h+12>>2]|0;x=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=x;x=J[k+12>>2];J[o+8>>2]=J[k+8>>2];J[o+12>>2]=x;k=n|16;n=k+m|0;k=k+J[h+12>>2]|0;o=J[k+4>>2];J[n>>2]=J[k>>2];J[n+4>>2]=o;o=J[k+12>>2];J[n+8>>2]=J[k+8>>2];J[n+12>>2]=o;i=i+2|0;j=j+2|0;if((I|0)!=(j|0)){continue}break}}if(!(d&1)){break h}d=i<<4;i=d+m|0;d=d+J[h+12>>2]|0;j=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=j;j=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=j}d=J[h+12>>2];if(!(d?!d|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[h+12>>2]=m;H[h+16|0]=1;J[h+8>>2]=t;d=J[h+4>>2]}d=J[h+12>>2]+(d<<4)|0;N[d+12>>2]=z;N[d+8>>2]=w;N[d+4>>2]=v;N[d>>2]=y;break e}p=Q(p/Q(p-A));q=Q(Q(Q(w-q)*p)+q);u=Q(Q(Q(v-u)*p)+u);p=Q(Q(Q(y-s)*p)+s);d=J[h+4>>2];i:{if((d|0)!=J[h+8>>2]){break i}t=d?d<<1:1;if((t|0)<=(d|0)){break i}j:{if(!t){m=0;break j}J[8369]=J[8369]+1;m=ia[J[6782]](t<<4,16)|0;d=J[h+4>>2]}k:{if((d|0)<=0){break k}i=0;if((d|0)!=1){I=d&-2;j=0;while(1){n=i<<4;o=n+m|0;k=n+J[h+12>>2]|0;x=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=x;x=J[k+12>>2];J[o+8>>2]=J[k+8>>2];J[o+12>>2]=x;k=n|16;n=k+m|0;k=k+J[h+12>>2]|0;o=J[k+4>>2];J[n>>2]=J[k>>2];J[n+4>>2]=o;o=J[k+12>>2];J[n+8>>2]=J[k+8>>2];J[n+12>>2]=o;i=i+2|0;j=j+2|0;if((I|0)!=(j|0)){continue}break}}if(!(d&1)){break k}d=i<<4;i=d+m|0;d=d+J[h+12>>2]|0;j=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=j;j=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=j}d=J[h+12>>2];if(!(d?!d|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[h+12>>2]=m;H[h+16|0]=1;J[h+8>>2]=t;d=J[h+4>>2]}d=J[h+12>>2]+(d<<4)|0;J[d+12>>2]=0;N[d+8>>2]=q;N[d+4>>2]=u;N[d>>2]=p;break e}if(!(A<Q(0))){break d}p=Q(p/Q(p-A));q=Q(Q(Q(w-q)*p)+q);u=Q(Q(Q(v-u)*p)+u);p=Q(Q(Q(y-s)*p)+s);d=J[h+4>>2];l:{if((d|0)!=J[h+8>>2]){break l}t=d?d<<1:1;if((t|0)<=(d|0)){break l}m:{if(!t){m=0;break m}J[8369]=J[8369]+1;m=ia[J[6782]](t<<4,16)|0;d=J[h+4>>2]}n:{if((d|0)<=0){break n}i=0;if((d|0)!=1){I=d&-2;j=0;while(1){n=i<<4;o=n+m|0;k=n+J[h+12>>2]|0;x=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=x;x=J[k+12>>2];J[o+8>>2]=J[k+8>>2];J[o+12>>2]=x;k=n|16;n=k+m|0;k=k+J[h+12>>2]|0;o=J[k+4>>2];J[n>>2]=J[k>>2];J[n+4>>2]=o;o=J[k+12>>2];J[n+8>>2]=J[k+8>>2];J[n+12>>2]=o;i=i+2|0;j=j+2|0;if((I|0)!=(j|0)){continue}break}}if(!(d&1)){break n}d=i<<4;i=d+m|0;d=d+J[h+12>>2]|0;j=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=j;j=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=j}d=J[h+12>>2];if(!(d?!d|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[h+12>>2]=m;H[h+16|0]=1;J[h+8>>2]=t;d=J[h+4>>2]}d=J[h+12>>2]+(d<<4)|0;J[d+12>>2]=0;N[d+8>>2]=q;N[d+4>>2]=u;N[d>>2]=p;d=J[h+4>>2]+1|0;J[h+4>>2]=d;o:{if(J[h+8>>2]!=(d|0)){break o}t=d?d<<1:1;if((t|0)<=(d|0)){break o}p:{if(!t){m=0;break p}J[8369]=J[8369]+1;m=ia[J[6782]](t<<4,16)|0;d=J[h+4>>2]}q:{if((d|0)<=0){break q}i=0;if((d|0)!=1){I=d&-2;j=0;while(1){n=i<<4;o=n+m|0;k=n+J[h+12>>2]|0;x=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=x;x=J[k+12>>2];J[o+8>>2]=J[k+8>>2];J[o+12>>2]=x;k=n|16;n=k+m|0;k=k+J[h+12>>2]|0;o=J[k+4>>2];J[n>>2]=J[k>>2];J[n+4>>2]=o;o=J[k+12>>2];J[n+8>>2]=J[k+8>>2];J[n+12>>2]=o;i=i+2|0;j=j+2|0;if((I|0)!=(j|0)){continue}break}}if(!(d&1)){break q}d=i<<4;i=d+m|0;d=d+J[h+12>>2]|0;j=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=j;j=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=j}d=J[h+12>>2];if(!(d?!d|!K[h+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[h+12>>2]=m;H[h+16|0]=1;J[h+8>>2]=t;d=J[h+4>>2]}d=J[h+12>>2]+(d<<4)|0;N[d+12>>2]=z;N[d+8>>2]=w;N[d+4>>2]=v;N[d>>2]=y}J[h+4>>2]=J[h+4>>2]+1}G=G+1|0;if((U|0)==(G|0)){break c}z=N[l+32>>2];E=N[l+28>>2];D=N[l+24>>2];i=J[r+12>>2];p=A;q=w;u=v;s=y;continue}}d=J[r+4>>2];r:{if((d|0)>=0){break r}if(J[r+8>>2]<0){m=J[r+12>>2];if(!(m?!m|!K[r+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](m)}H[r+16|0]=1;J[r+8>>2]=0;J[r+12>>2]=0}i=0;m=d;G=0-d&3;if(G){while(1){t=J[l+12>>2];j=J[r+12>>2]+(m<<4)|0;J[j>>2]=J[l+8>>2];J[j+4>>2]=t;t=J[l+20>>2];J[j+8>>2]=J[l+16>>2];J[j+12>>2]=t;m=m+1|0;i=i+1|0;if((G|0)!=(i|0)){continue}break}}if(d>>>0>4294967292){break r}while(1){j=J[l+12>>2];d=m<<4;i=d+J[r+12>>2]|0;J[i>>2]=J[l+8>>2];J[i+4>>2]=j;j=J[l+20>>2];J[i+8>>2]=J[l+16>>2];J[i+12>>2]=j;j=J[l+20>>2];i=d+J[r+12>>2]|0;J[i+24>>2]=J[l+16>>2];J[i+28>>2]=j;j=J[l+12>>2];J[i+16>>2]=J[l+8>>2];J[i+20>>2]=j;j=J[l+20>>2];i=d+J[r+12>>2]|0;J[i+40>>2]=J[l+16>>2];J[i+44>>2]=j;j=J[l+12>>2];J[i+32>>2]=J[l+8>>2];J[i+36>>2]=j;i=J[l+20>>2];d=d+J[r+12>>2]|0;J[d+56>>2]=J[l+16>>2];J[d+60>>2]=i;i=J[l+12>>2];J[d+48>>2]=J[l+8>>2];J[d+52>>2]=i;m=m+4|0;if(m){continue}break}}J[r+4>>2]=0;d=h;if(!W){continue}break}}i=J[h+4>>2];if((i|0)<=0){break a}p=N[F+28>>2];q=N[F+20>>2];s=N[F+24>>2];u=Q(Q(N[c+40>>2]*p)+Q(Q(N[c+32>>2]*q)+Q(s*N[c+36>>2])));w=Q(Q(N[c+8>>2]*p)+Q(Q(N[c>>2]*q)+Q(s*N[c+4>>2])));p=Q(Q(N[c+24>>2]*p)+Q(Q(N[c+16>>2]*q)+Q(s*N[c+20>>2])));q=Q(N[F+32>>2]-Q(Q(u*N[c+56>>2])+Q(Q(w*N[c+48>>2])+Q(p*N[c+52>>2]))));r=0;while(1){b=J[h+12>>2]+(r<<4)|0;s=Q(q+Q(Q(u*N[b+8>>2])+Q(Q(w*N[b>>2])+Q(p*N[b+4>>2]))));s=e>=s?e:s;if(s<=f){c=J[b+12>>2];J[l+32>>2]=J[b+8>>2];J[l+36>>2]=c;c=J[b+4>>2];J[l+24>>2]=J[b>>2];J[l+28>>2]=c;ia[J[J[g>>2]+16>>2]](g,a,l+24|0,s);i=J[h+4>>2]}r=r+1|0;if((r|0)<(i|0)){continue}break}}a=J[l+52>>2];if(!(a?!a|!K[l+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=l- -64|0}function GA(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=Q(0),D=0,E=Q(0),F=0,G=Q(0),I=Q(0),L=0,M=Q(0),O=Q(0),S=0,T=0,U=0,V=0,W=0,X=Q(0),Z=0,_=Q(0),$=Q(0),aa=Q(0),ba=0,ca=0,da=Q(0),ea=Q(0),fa=Q(0),ga=Q(0),ha=Q(0),ia=Q(0);V=J[a+28>>2];k=V;E=N[k+344>>2];W=J[a+32>>2];q=W;C=N[q+344>>2];h=Q(E+C);u=h>Q(0)?Q(C/h):Q(.5);v=Q(Q(1)-u);w=N[a+920>>2];x=N[a+904>>2];d=N[a+856>>2];i=N[a+840>>2];I=N[a+888>>2];r=N[a+824>>2];t=J[b+24>>2];Z=K[a+49|0];a:{if(Z){c=Q(Q(u*d)+Q(v*w));s=Q(Q(u*r)+Q(v*I));h=Q(Q(u*i)+Q(v*x));p=Q(Q(1)/Q(Y(Q(Q(c*c)+Q(Q(s*s)+Q(h*h))))));h=Q(h*p);s=Q(s*p);p=Q(c*p);if(Q(R(p))>Q(.7071067690849304)){c=Q(Q(h*h)+Q(p*p));m=Q(Q(1)/Q(Y(c)));l=Q(m*Q(-p));y=Q(s*l);n=Q(h*m);z=Q(n*Q(-s));c=Q(c*m);break a}g=Q(Q(s*s)+Q(h*h));c=Q(Q(1)/Q(Y(g)));y=Q(g*c);g=Q(c*Q(-h));z=Q(p*g);l=Q(s*c);c=Q(l*Q(-p));break a}y=N[a+864>>2];z=N[a+848>>2];n=N[a+860>>2];l=N[a+844>>2];g=N[a+828>>2];s=r;h=i;p=d;c=N[a+832>>2]}ca=K[a+180|0];da=N[a+880>>2];ea=N[a+944>>2];fa=N[a+876>>2];ga=N[a+940>>2];ha=N[a+872>>2];ia=N[a+936>>2];o=J[b+12>>2];N[o+8>>2]=n;N[o+4>>2]=l;N[o>>2]=g;e=t<<2;N[e+o>>2]=c;j=e+8|0;N[j+o>>2]=y;D=e+4|0;N[D+o>>2]=z;f=J[b+20>>2];M=Q(-n);N[f+8>>2]=M;G=Q(-l);N[f+4>>2]=G;O=Q(-g);N[f>>2]=O;X=Q(-y);N[f+j>>2]=X;_=Q(-z);N[f+D>>2]=_;$=Q(-c);N[f+e>>2]=$;m=N[a+280>>2];D=J[b+28>>2];j=D;T=J[a+300>>2];if(!(T&128)){m=Q(m*N[b+4>>2])}m=Q(m*N[b>>2]);aa=Q(Q(r*x)-Q(I*i));i=Q(Q(i*w)-Q(x*d));d=Q(Q(d*I)-Q(w*r));N[j>>2]=m*Q(Q(aa*n)+Q(Q(i*g)+Q(d*l)));N[e+D>>2]=m*Q(Q(aa*y)+Q(Q(i*c)+Q(d*z)));if(T&64){e=J[b+32>>2];N[e>>2]=N[a+292>>2];N[e+(t<<2)>>2]=N[a+292>>2]}ba=C<Q(1.1920928955078125e-7)|E<Q(1.1920928955078125e-7);U=P(t,3);j=t<<1;d=N[q+60>>2];i=N[q+56>>2];m=N[k+60>>2];r=N[k+56>>2];w=N[q+52>>2];x=N[k+52>>2];b:{if(Z){d=Q(N[a+944>>2]-d);l=Q(N[a+936>>2]-w);n=Q(N[a+940>>2]-i);c=Q(Q(d*p)+Q(Q(l*s)+Q(h*n)));g=Q(p*c);y=Q(d-g);m=Q(N[a+880>>2]-m);z=Q(N[a+872>>2]-x);r=Q(N[a+876>>2]-r);d=Q(Q(m*p)+Q(Q(z*s)+Q(h*r)));C=Q(p*d);i=Q(N[a+1080>>2]-N[a+1032>>2]);g=Q(Q(C+Q(p*i))-g);w=Q(y-Q(v*g));O=n;n=Q(h*c);G=Q(O-n);E=Q(h*d);n=Q(Q(E+Q(h*i))-n);x=Q(G-Q(v*n));c=Q(s*c);l=Q(l-c);d=Q(s*d);c=Q(Q(d+Q(s*i))-c);I=Q(l-Q(v*c));i=Q(m-C);C=Q(i+Q(u*g));r=Q(r-E);E=Q(r+Q(u*n));g=Q(z-d);M=Q(g+Q(u*c));c=Q(Q(u*y)+Q(v*i));g=Q(Q(u*l)+Q(v*g));d=Q(Q(u*G)+Q(v*r));i=Q(Q(c*c)+Q(Q(g*g)+Q(d*d)));c:{if(i>Q(1.1920928955078125e-7)){n=c;c=Q(Q(1)/Q(Y(i)));n=Q(n*c);l=Q(d*c);g=Q(g*c);break c}n=N[a+860>>2];l=N[a+844>>2];g=N[a+828>>2]}A=j<<2;e=A+o|0;N[e+8>>2]=Q(M*l)-Q(g*E);N[e+4>>2]=Q(C*g)-Q(n*M);N[e>>2]=Q(E*n)-Q(l*C);N[f+A>>2]=-Q(Q(x*n)-Q(l*w));B=(j|1)<<2;N[B+f>>2]=-Q(Q(w*g)-Q(n*I));F=j+2<<2;N[F+f>>2]=-Q(Q(I*l)-Q(g*x));z=Q(Q(p*g)-Q(n*s));c=Q(Q(h*n)-Q(l*p));G=Q(Q(I*z)-Q(c*x));y=Q(Q(s*l)-Q(g*h));d=Q(Q(w*c)-Q(y*I));O=Q(Q(x*y)-Q(z*w));i=Q(Q(M*z)-Q(c*E));r=Q(Q(C*c)-Q(y*M));m=Q(Q(E*y)-Q(z*C));if(K[a+297|0]!=0&ba){i=Q(u*i);r=Q(u*r);m=Q(u*m);G=Q(v*G);O=Q(v*O);d=Q(v*d)}q=U<<2;e=q+o|0;N[e+8>>2]=i;N[e+4>>2]=r;N[e>>2]=m;S=q+8|0;N[S+f>>2]=-G;L=q+4|0;N[f+L>>2]=-d;N[f+q>>2]=-O;k=J[b+8>>2];N[A+k>>2]=g;N[k+B>>2]=l;N[k+F>>2]=n;e=k+q|0;N[e+8>>2]=y;N[e+4>>2]=z;N[e>>2]=c;e=J[b+16>>2];N[A+e>>2]=-g;N[e+B>>2]=-l;N[e+F>>2]=-n;N[e+S>>2]=-y;N[e+L>>2]=-z;N[e+q>>2]=-c;i=Q(0);r=Q(0);m=Q(0);break b}q=j<<2;r=Q(i-r);m=Q(d-m);d=Q(Q(r*n)-Q(l*m));N[q+o>>2]=u*d;B=q|4;i=Q(w-x);w=Q(Q(m*g)-Q(n*i));N[B+o>>2]=u*w;F=q+8|0;x=Q(Q(i*l)-Q(g*r));N[F+o>>2]=u*x;N[f+q>>2]=v*d;N[f+B>>2]=v*w;N[f+F>>2]=v*x;A=U<<2;S=A+8|0;d=Q(Q(i*z)-Q(c*r));N[S+o>>2]=u*d;L=A+4|0;w=Q(Q(m*c)-Q(y*i));N[L+o>>2]=u*w;x=Q(Q(r*y)-Q(z*m));N[o+A>>2]=u*x;N[f+S>>2]=v*d;N[f+L>>2]=v*w;N[f+A>>2]=v*x;k=J[b+8>>2];N[q+k>>2]=g;N[k+B>>2]=l;N[k+F>>2]=n;N[k+S>>2]=y;N[k+L>>2]=z;N[k+A>>2]=c;e=J[b+16>>2];N[q+e>>2]=O;N[e+B>>2]=G;N[e+F>>2]=M;N[e+S>>2]=X;N[e+L>>2]=_;N[e+A>>2]=$;I=Q(0);x=Q(0);w=Q(0);M=Q(0);E=Q(0);C=Q(0)}d=N[a+264>>2];j=j<<2;q=j+D|0;if(!(T&32)){d=Q(d*N[b+4>>2])}d=Q(d*N[b>>2]);O=n;n=Q(ea-da);X=g;g=Q(ia-ha);G=Q(ga-fa);N[q>>2]=d*Q(Q(O*n)+Q(Q(X*g)+Q(G*l)));q=U<<2;N[q+D>>2]=d*Q(Q(y*n)+Q(Q(c*g)+Q(G*z)));if(T&16){L=j;j=J[b+32>>2];N[L+j>>2]=N[a+276>>2];N[j+q>>2]=N[a+276>>2]}g=ca?Q(1):Q(-1);d:{e:{U=K[a+296|0];f:{if(U){c=Q(g*N[a+1032>>2]);q=c>Q(0)?2:1;j=K[a+1096|0];break f}if(!K[a+1096|0]){break e}q=0;c=Q(0);j=1}F=t<<4;N[F+k>>2]=s;t=t<<2;S=t|1;A=S<<2;N[A+k>>2]=h;L=k;k=t|2;B=k<<2;N[L+B>>2]=p;N[e+F>>2]=-s;N[e+A>>2]=-h;N[e+B>>2]=-p;F=(U|0)!=0;e=f+(k<<2)|0;g:{h:{if(Z){if(ba){break g}A=t<<2;N[A+o>>2]=Q(E*p)-Q(h*C);B=S<<2;N[B+o>>2]=Q(C*s)-Q(p*M);N[o+(k<<2)>>2]=Q(M*h)-Q(s*E);N[f+A>>2]=-Q(Q(x*p)-Q(h*w));N[f+B>>2]=-Q(Q(w*s)-Q(p*I));d=Q(-Q(Q(I*h)-Q(s*x)));break h}k=t<<2;d=Q(Q(r*p)-Q(h*m));N[k+o>>2]=u*d;m=Q(Q(m*s)-Q(p*i));N[o+A>>2]=u*m;i=Q(Q(i*h)-Q(s*r));N[o+B>>2]=u*i;N[f+k>>2]=v*d;N[f+A>>2]=v*m;d=Q(v*i)}N[e>>2]=d}d=N[a+188>>2];i=N[a+184>>2];f=t<<2;J[f+D>>2]=0;e=J[b+36>>2];J[f+e>>2]=0;k=J[b+40>>2];J[f+k>>2]=0;r=N[(T&512?a+232|0:b+4|0)>>2];if(!(!j|F&d==i)){if(T&1){N[J[b+32>>2]+(t<<2)>>2]=N[a+212>>2]}m=od(N[a+1080>>2],N[a+184>>2],N[a+188>>2],N[a+1100>>2],Q(r*N[b>>2]));D=J[b+28>>2];j=t<<2;e=D+j|0;N[e>>2]=N[e>>2]-Q(Q(m*g)*N[a+1100>>2]);e=J[b+36>>2];f=j+e|0;N[f>>2]=N[f>>2]-Q(N[a+1104>>2]*N[b>>2]);k=J[b+40>>2];j=j+k|0;N[j>>2]=Q(N[a+1104>>2]*N[b>>2])+N[j>>2]}f=5;if(!U){break d}o=t<<2;j=o+D|0;N[j>>2]=Q(Q(r*N[b>>2])*c)+N[j>>2];if(H[a+301|0]&1){N[o+J[b+32>>2]>>2]=N[a+244>>2]}k=(t<<2)+k|0;i:{j:{if(d==i){J[(t<<2)+e>>2]=-8388609;break j}e=(t<<2)+e|0;if((q|0)==1){J[e>>2]=-8388609;q=1;c=Q(0);break i}J[e>>2]=0}c=Q(3.4028234663852886e38)}N[k>>2]=c;c=Q(Q(1)-N[a+240>>2]);k:{if(!(c>Q(0)|c<Q(0))){break k}d=Q(R(c));c=Q(g*Q(Q(Q(N[V+320>>2]*p)+Q(Q(N[V+312>>2]*s)+Q(h*N[V+316>>2])))-Q(Q(N[W+320>>2]*p)+Q(Q(N[W+312>>2]*s)+Q(h*N[W+316>>2])))));l:{if((q|0)==1){if(!(c<Q(0))){break k}l=Q(c*Q(-d));if(l>N[j>>2]){break l}break k}if(!(c>Q(0))){break k}l=Q(c*Q(-d));if(!(l<N[j>>2])){break k}}N[j>>2]=l}N[j>>2]=N[a+232>>2]*N[j>>2];break d}f=4}o=K[a+297|0];m:{n:{if(o){k=!K[a+1112|0];l=N[a+1088>>2];e=l>Q(0)?1:2;break n}if(!K[a+1112|0]){break m}k=0;l=Q(0);e=0}t=J[b+12>>2];j=P(J[b+24>>2],f);f=j<<2;N[t+f>>2]=s;T=f+8|0;N[T+t>>2]=p;q=f+4|0;N[q+t>>2]=h;t=J[b+20>>2];N[t+T>>2]=-p;N[q+t>>2]=-h;N[f+t>>2]=-s;f=J[a+300>>2];r=N[(f&2048?a+248|0:b+4|0)>>2];g=N[a+192>>2];i=N[a+196>>2];if(!(k|(o|0)!=0&g==i)){d=i;c=g;if(f&4){N[J[b+32>>2]+(j<<2)>>2]=N[a+228>>2];d=N[a+196>>2];c=N[a+192>>2]}c=od(N[a+1084>>2],c,d,N[a+1116>>2],Q(r*N[b>>2]));D=J[b+28>>2];f=j<<2;N[D+f>>2]=c*N[a+1116>>2];N[f+J[b+36>>2]>>2]=N[b>>2]*Q(-N[a+1120>>2]);N[f+J[b+40>>2]>>2]=N[a+1120>>2]*N[b>>2]}if(!o){break m}o=j<<2;f=o+D|0;N[f>>2]=Q(Q(r*N[b>>2])*l)+N[f>>2];if(K[a+301|0]&4){N[o+J[b+32>>2]>>2]=N[a+260>>2]}o:{if(g==i){J[J[b+36>>2]+(j<<2)>>2]=-8388609;c=Q(3.4028234663852886e38);break o}o=J[b+36>>2]+(j<<2)|0;if((e|0)==1){J[o>>2]=0;e=1;c=Q(3.4028234663852886e38);break o}J[o>>2]=-8388609;c=Q(0)}N[J[b+40>>2]+(j<<2)>>2]=c;c=Q(Q(1)-N[a+256>>2]);p:{if(!(c>Q(0)|c<Q(0))){break p}c=Q(R(c));b=J[a+28>>2];g=Q(Q(N[b+336>>2]*p)+Q(Q(N[b+328>>2]*s)+Q(h*N[b+332>>2])));b=J[a+32>>2];h=Q(g-Q(Q(N[b+336>>2]*p)+Q(Q(N[b+328>>2]*s)+Q(h*N[b+332>>2]))));q:{if((e|0)==1){if(!(h<Q(0))){break p}h=Q(h*Q(-c));if(h>N[f>>2]){break q}break p}if(!(h>Q(0))){break p}h=Q(h*Q(-c));if(!(h<N[f>>2])){break p}}N[f>>2]=h}N[f>>2]=N[a+248>>2]*N[f>>2]}}function OD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;h=ga-48|0;ga=h;e=N[a+40>>2];f=N[a+24>>2];j=Q(Q(1)/N[a+116>>2]);k=N[a+56>>2];g=Q(Q(j*N[d+8>>2])+k);g=f>g?f:g;g=e<g?e:g;m=(g<Q(0)?-.5:.5)+ +g;a:{if(R(m)<2147483648){o=~~m;break a}o=-2147483648}o=o+1|0;j=Q(Q(j*N[c+8>>2])+k);f=f>j?f:j;e=e<f?e:f;m=(e<Q(0)?-.5:.5)+ +e;b:{if(R(m)<2147483648){l=~~m;break b}l=-2147483648}q=l-1|0;e=N[a+36>>2];f=N[a+20>>2];j=Q(Q(1)/N[a+112>>2]);k=N[a+52>>2];g=Q(Q(j*N[d+4>>2])+k);g=f>g?f:g;g=e<g?e:g;m=(g<Q(0)?-.5:.5)+ +g;c:{if(R(m)<2147483648){l=~~m;break c}l=-2147483648}r=l+1|0;j=Q(Q(j*N[c+4>>2])+k);f=f>j?f:j;e=e<f?e:f;m=(e<Q(0)?-.5:.5)+ +e;d:{if(R(m)<2147483648){l=~~m;break d}l=-2147483648}s=l-1|0;e=N[a+32>>2];f=N[a+16>>2];j=Q(Q(1)/N[a+108>>2]);k=N[a+48>>2];g=Q(Q(j*N[d>>2])+k);g=f>g?f:g;g=e<g?e:g;m=(g<Q(0)?-.5:.5)+ +g;e:{if(R(m)<2147483648){d=~~m;break e}d=-2147483648}d=d+1|0;j=Q(Q(j*N[c>>2])+k);f=f>j?f:j;e=e<f?e:f;m=(e<Q(0)?-.5:.5)+ +e;f:{if(R(m)<2147483648){c=~~m;break f}c=-2147483648}c=c-1|0;l=J[a+68>>2]-1|0;p=J[a+64>>2]-1|0;g:{h:{switch(J[a+104>>2]){case 0:l=(o|0)<(l|0)?o:l;n=(q|0)>0?q:0;p=(p|0)>(r|0)?r:p;t=(s|0)>0?s:0;break g;case 1:l=(o|0)<(l|0)?o:l;n=(q|0)>0?q:0;p=(d|0)<(p|0)?d:p;t=(c|0)>0?c:0;break g;case 2:break h;default:break g}}l=(l|0)>(r|0)?r:l;n=(s|0)>0?s:0;p=(d|0)<(p|0)?d:p;t=(c|0)>0?c:0}if(!((p|0)<=(t|0)|(n|0)>=(l|0))){while(1){q=n&1;o=n+1|0;j=Q(o|0);k=Q(n|0);d=t;while(1){i:{j:{c=d;if(!(K[a+100|0]|(d+n&1?0:K[a+101|0])|(q?0:K[a+102|0]))){g=Q(ia[J[J[a>>2]+68>>2]](a,c,n));k:{l:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+12>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(g-i);break k;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+12>>2]=0;e=Q(g-e);f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break k;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+12>>2]=0;f=Q(g-f);e=Q(Q(c|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break k;default:break l}}e=N[h+4>>2];f=N[h>>2];g=N[h+8>>2]}N[h>>2]=f*N[a+108>>2];N[h+4>>2]=e*N[a+112>>2];N[h+8>>2]=g*N[a+116>>2];g=Q(ia[J[J[a>>2]+68>>2]](a,c,o));m:{n:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+28>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(g-i);break m;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+28>>2]=0;e=Q(g-e);f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break m;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+28>>2]=0;f=Q(g-f);e=Q(Q(c|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break m;default:break n}}e=N[h+20>>2];f=N[h+16>>2];g=N[h+24>>2]}N[h+16>>2]=f*N[a+108>>2];N[h+20>>2]=e*N[a+112>>2];N[h+24>>2]=g*N[a+116>>2];d=c+1|0;g=Q(ia[J[J[a>>2]+68>>2]](a,d,n));o:{p:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+44>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break o;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+44>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break o;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+44>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break o;default:break p}}e=N[h+36>>2];f=N[h+32>>2];g=N[h+40>>2]}N[h+32>>2]=f*N[a+108>>2];N[h+36>>2]=e*N[a+112>>2];N[h+40>>2]=g*N[a+116>>2];ia[J[J[b>>2]+8>>2]](b,h,c,n);g=Q(ia[J[J[a>>2]+68>>2]](a,d,n));q:{r:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+12>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break q;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+12>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break q;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+12>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break q;default:break r}}e=N[h+4>>2];f=N[h>>2];g=N[h+8>>2]}N[h>>2]=f*N[a+108>>2];N[h+4>>2]=e*N[a+112>>2];N[h+8>>2]=g*N[a+116>>2];g=Q(ia[J[J[a>>2]+68>>2]](a,d,o));s:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+44>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break i;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+44>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break i;case 0:break s;default:break j}}e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+44>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break i}g=Q(ia[J[J[a>>2]+68>>2]](a,c,n));t:{u:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+12>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(g-i);break t;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+12>>2]=0;e=Q(g-e);f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break t;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+12>>2]=0;f=Q(g-f);e=Q(Q(c|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break t;default:break u}}e=N[h+4>>2];f=N[h>>2];g=N[h+8>>2]}N[h>>2]=f*N[a+108>>2];N[h+4>>2]=e*N[a+112>>2];N[h+8>>2]=g*N[a+116>>2];d=c+1|0;g=Q(ia[J[J[a>>2]+68>>2]](a,d,n));v:{w:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+28>>2]=0;e=Q(k-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break v;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+28>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(k-Q(i*Q(.5)));break v;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+28>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(k-Q(i*Q(.5)));break v;default:break w}}e=N[h+20>>2];f=N[h+16>>2];g=N[h+24>>2]}N[h+16>>2]=f*N[a+108>>2];N[h+20>>2]=e*N[a+112>>2];N[h+24>>2]=g*N[a+116>>2];g=Q(ia[J[J[a>>2]+68>>2]](a,d,o));x:{y:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+44>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break x;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+44>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break x;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+44>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break x;default:break y}}e=N[h+36>>2];f=N[h+32>>2];g=N[h+40>>2]}N[h+32>>2]=f*N[a+108>>2];N[h+36>>2]=e*N[a+112>>2];N[h+40>>2]=g*N[a+116>>2];ia[J[J[b>>2]+8>>2]](b,h,c,n);g=Q(ia[J[J[a>>2]+68>>2]](a,d,o));z:{A:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+28>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(g-i);break z;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+28>>2]=0;e=Q(g-e);f=Q(Q(d|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break z;case 0:e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+28>>2]=0;f=Q(g-f);e=Q(Q(d|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break z;default:break A}}e=N[h+20>>2];f=N[h+16>>2];g=N[h+24>>2]}N[h+16>>2]=f*N[a+108>>2];N[h+20>>2]=e*N[a+112>>2];N[h+24>>2]=g*N[a+116>>2];g=Q(ia[J[J[a>>2]+68>>2]](a,c,o));B:{switch(J[a+104>>2]){case 2:f=N[a+80>>2];e=N[a+84>>2];i=N[a+56>>2];J[h+44>>2]=0;e=Q(j-Q(e*Q(.5)));f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(g-i);break i;case 1:f=N[a+80>>2];i=N[a+84>>2];e=N[a+52>>2];J[h+44>>2]=0;e=Q(g-e);f=Q(Q(c|0)-Q(f*Q(.5)));g=Q(j-Q(i*Q(.5)));break i;case 0:break B;default:break j}}e=N[a+80>>2];i=N[a+84>>2];f=N[a+48>>2];J[h+44>>2]=0;f=Q(g-f);e=Q(Q(c|0)-Q(e*Q(.5)));g=Q(j-Q(i*Q(.5)));break i}e=N[h+36>>2];f=N[h+32>>2];g=N[h+40>>2]}N[h+32>>2]=f*N[a+108>>2];N[h+36>>2]=e*N[a+112>>2];N[h+40>>2]=g*N[a+116>>2];ia[J[J[b>>2]+8>>2]](b,h,c,n);if((d|0)!=(p|0)){continue}break}n=o;if((l|0)!=(n|0)){continue}break}}ga=h+48|0}function bf(a,b,c,d){var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=0,M=0,O=Q(0),R=Q(0),S=Q(0),T=Q(0);e=ga-704|0;ga=e;f=e+624|0;J[f+4>>2]=35;J[f+8>>2]=0;J[f>>2]=14268;J[f+44>>2]=1025758986;J[f+20>>2]=1065353216;J[f+24>>2]=0;J[f+12>>2]=1065353216;J[f+16>>2]=1065353216;J[f>>2]=13984;J[e+668>>2]=0;J[e+652>>2]=0;J[e+628>>2]=8;J[e+624>>2]=16132;f=J[c+12>>2];a:{m=J[c+4>>2];o=J[m+4>>2];if((o|0)<=19){J[e+616>>2]=0;J[e+620>>2]=0;J[e+448>>2]=6804;N[e+612>>2]=N[d+4>>2];H[e+420|0]=0;J[e+396>>2]=953267991;o=e+680|0;J[o+12>>2]=m;L=e+624|0;J[o+8>>2]=L;M=e+88|0;J[o+4>>2]=M;J[o>>2]=19004;y=e+72|0;J[y+12>>2]=m;J[y+8>>2]=L;J[y+4>>2]=M;J[y>>2]=18356;m=J[d+16>>2]&8?y:o;b:{if(!(ia[J[J[m>>2]+8>>2]](m,a,b,f,f,e+448|0)|0)){break b}g=N[e+588>>2];i=N[e+580>>2];h=N[e+584>>2];j=Q(Q(g*g)+Q(Q(i*i)+Q(h*h)));if(!(j>Q(9999999747378752e-20))){break b}k=N[e+612>>2];if(!(k<N[d+4>>2])){break b}l=g;g=Q(Q(1)/Q(Y(j)));N[e+588>>2]=l*g;N[e+584>>2]=h*g;N[e+580>>2]=i*g;a=J[c+8>>2];J[e+44>>2]=0;J[e+40>>2]=a;a=J[e+592>>2];J[e+56>>2]=J[e+588>>2];J[e+60>>2]=a;a=J[e+584>>2];J[e+48>>2]=J[e+580>>2];J[e+52>>2]=a;N[e+64>>2]=k;Q(ia[J[J[d>>2]+12>>2]](d,e+40|0,1))}break a}y=o-21|0;if(y>>>0<=8){u=N[f+20>>2];h=N[f+36>>2];r=N[f+24>>2];n=N[f+52>>2];j=N[f+56>>2];k=N[f+40>>2];s=N[f+32>>2];p=N[f+16>>2];l=N[f>>2];q=N[f+4>>2];t=N[f+48>>2];w=N[f+8>>2];i=N[a+52>>2];v=N[a+56>>2];g=N[a+48>>2];J[e+460>>2]=0;n=Q(-n);B=Q(r*n);x=Q(Q(B-Q(w*t))-Q(k*j));C=Q(v*k);D=Q(r*i);N[e+456>>2]=x+Q(C+Q(Q(g*w)+D));E=Q(u*n);z=Q(Q(E-Q(q*t))-Q(h*j));F=Q(v*h);G=Q(u*i);N[e+452>>2]=z+Q(F+Q(Q(g*q)+G));I=Q(p*n);O=Q(Q(I-Q(l*t))-Q(s*j));R=Q(v*s);S=Q(p*i);N[e+448>>2]=O+Q(R+Q(Q(g*l)+S));v=N[b+52>>2];n=N[b+56>>2];i=N[b+48>>2];J[e+52>>2]=0;A=x;x=Q(n*k);T=Q(i*w);w=Q(r*v);N[e+48>>2]=A+Q(x+Q(T+w));A=z;z=Q(n*h);r=Q(i*q);q=Q(u*v);N[e+44>>2]=A+Q(z+Q(r+q));n=Q(n*s);A=Q(i*l);l=Q(p*v);N[e+40>>2]=O+Q(n+Q(A+l));c:{switch(y|0){case 0:a=J[c+8>>2];c=e+88|0;o=e+448|0;y=e+40|0;Ag(c,o,y,J[d+16>>2]);J[e+140>>2]=m;J[e+136>>2]=a;J[e+132>>2]=d;J[e+88>>2]=6872;a=J[f+12>>2];J[e+152>>2]=J[f+8>>2];J[e+156>>2]=a;a=J[f+4>>2];J[e+144>>2]=J[f>>2];J[e+148>>2]=a;a=J[f+28>>2];J[e+168>>2]=J[f+24>>2];J[e+172>>2]=a;a=J[f+20>>2];J[e+160>>2]=J[f+16>>2];J[e+164>>2]=a;a=J[f+44>>2];J[e+184>>2]=J[f+40>>2];J[e+188>>2]=a;a=J[f+36>>2];J[e+176>>2]=J[f+32>>2];J[e+180>>2]=a;a=J[f+60>>2];J[e+200>>2]=J[f+56>>2];J[e+204>>2]=a;a=J[f+52>>2];J[e+192>>2]=J[f+48>>2];J[e+196>>2]=a;N[e+128>>2]=N[d+4>>2];b=ga-16|0;ga=b;a=J[m+48>>2];J[b+8>>2]=c;J[b+4>>2]=a;J[b>>2]=12328;c=J[m+52>>2];a=ga-32|0;ga=a;J[a+24>>2]=0;J[a+28>>2]=0;J[a+16>>2]=0;J[a+20>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;d:{if(K[c+60|0]){um(c,b,o,y,a+16|0,a,J[c+56>>2]);break d}vm(c,b,o,y,a+16|0,a)}ga=a+32|0;ga=b+16|0;break a;case 4:a=J[c+8>>2];b=e+88|0;c=e+448|0;o=e+40|0;Ag(b,c,o,J[d+16>>2]);J[e+140>>2]=m;J[e+136>>2]=a;J[e+132>>2]=d;J[e+88>>2]=6872;a=J[f+12>>2];J[e+152>>2]=J[f+8>>2];J[e+156>>2]=a;a=J[f+4>>2];J[e+144>>2]=J[f>>2];J[e+148>>2]=a;a=J[f+28>>2];J[e+168>>2]=J[f+24>>2];J[e+172>>2]=a;a=J[f+20>>2];J[e+160>>2]=J[f+16>>2];J[e+164>>2]=a;a=J[f+44>>2];J[e+184>>2]=J[f+40>>2];J[e+188>>2]=a;a=J[f+36>>2];J[e+176>>2]=J[f+32>>2];J[e+180>>2]=a;a=J[f+60>>2];J[e+200>>2]=J[f+56>>2];J[e+204>>2]=a;a=J[f+52>>2];J[e+192>>2]=J[f+48>>2];J[e+196>>2]=a;N[e+128>>2]=N[d+4>>2];ia[J[J[m>>2]+144>>2]](m,b,c,o);break a;default:break c}}u=N[f>>2];r=N[f+4>>2];j=Q(-j);A=Q(k*j);k=N[f+8>>2];t=Q(-t);p=Q(A+Q(Q(k*t)+B));N[e+688>>2]=Q(C+Q(Q(g*k)+D))+p;J[e+692>>2]=0;h=Q(Q(h*j)+Q(Q(r*t)+E));N[e+684>>2]=Q(F+Q(Q(g*r)+G))+h;A=Q(R+Q(Q(g*u)+S));g=Q(Q(s*j)+Q(Q(u*t)+I));N[e+680>>2]=A+g;J[e+84>>2]=0;N[e+80>>2]=Q(x+Q(Q(i*k)+w))+p;N[e+76>>2]=Q(z+Q(Q(i*r)+q))+h;N[e+72>>2]=Q(n+Q(Q(i*u)+l))+g;a=J[c+8>>2];Ag(e+88|0,e+680|0,e+72|0,J[d+16>>2]);J[e+140>>2]=m;J[e+136>>2]=a;J[e+132>>2]=d;J[e+88>>2]=7056;a=J[f+12>>2];J[e+152>>2]=J[f+8>>2];J[e+156>>2]=a;a=J[f+4>>2];J[e+144>>2]=J[f>>2];J[e+148>>2]=a;a=J[f+28>>2];J[e+168>>2]=J[f+24>>2];J[e+172>>2]=a;a=J[f+20>>2];J[e+160>>2]=J[f+16>>2];J[e+164>>2]=a;a=J[f+44>>2];J[e+184>>2]=J[f+40>>2];J[e+188>>2]=a;a=J[f+36>>2];J[e+176>>2]=J[f+32>>2];J[e+180>>2]=a;a=J[f+60>>2];J[e+200>>2]=J[f+56>>2];J[e+204>>2]=a;a=J[f+52>>2];J[e+192>>2]=J[f+48>>2];J[e+196>>2]=a;N[e+128>>2]=N[d+4>>2];a=J[e+692>>2];J[e+32>>2]=J[e+688>>2];J[e+36>>2]=a;a=J[e+684>>2];J[e+24>>2]=J[e+680>>2];J[e+28>>2]=a;g=N[e+72>>2];if(g<N[e+24>>2]){N[e+24>>2]=g}i=N[e+76>>2];if(i<N[e+28>>2]){N[e+28>>2]=i}h=N[e+80>>2];if(h<N[e+32>>2]){N[e+32>>2]=h}j=N[e+84>>2];if(j<N[e+36>>2]){N[e+36>>2]=j}a=J[e+692>>2];J[e+16>>2]=J[e+688>>2];J[e+20>>2]=a;a=J[e+684>>2];J[e+8>>2]=J[e+680>>2];J[e+12>>2]=a;if(g>N[e+8>>2]){N[e+8>>2]=g}if(i>N[e+12>>2]){N[e+12>>2]=i}if(h>N[e+16>>2]){N[e+16>>2]=h}if(j>N[e+20>>2]){N[e+20>>2]=j}ia[J[J[m>>2]+64>>2]](m,e+88|0,e+24|0,e+8|0);break a}if((o|0)!=31){break a}o=J[m- -64>>2];c=J[c+8>>2];J[e+64>>2]=d;J[e+60>>2]=b;J[e+56>>2]=a;J[e+52>>2]=f;J[e+48>>2]=m;J[e+44>>2]=c;J[e+40>>2]=7244;if(o){g=N[f+20>>2];i=N[f+36>>2];h=N[f+24>>2];j=N[f+52>>2];q=N[a+52>>2];k=N[f+40>>2];s=N[f+56>>2];p=N[a+56>>2];w=N[f>>2];t=N[f+16>>2];u=N[f+32>>2];v=N[f+4>>2];l=N[f+8>>2];r=N[f+48>>2];n=N[a+48>>2];J[e+100>>2]=0;p=Q(p-s);x=l;l=Q(n-r);q=Q(q-j);N[e+96>>2]=Q(k*p)+Q(Q(x*l)+Q(h*q));N[e+92>>2]=Q(i*p)+Q(Q(v*l)+Q(q*g));N[e+88>>2]=Q(u*p)+Q(Q(w*l)+Q(q*t));p=N[b+52>>2];l=N[b+56>>2];q=N[f>>2];w=N[f+4>>2];v=N[f+8>>2];n=N[b+48>>2];J[e+460>>2]=0;x=k;k=Q(l-s);s=Q(n-r);l=h;h=Q(p-j);N[e+456>>2]=Q(x*k)+Q(Q(v*s)+Q(l*h));N[e+452>>2]=Q(i*k)+Q(Q(w*s)+Q(g*h));N[e+448>>2]=Q(u*k)+Q(Q(q*s)+Q(t*h));Vm(J[o>>2],e+88|0,e+448|0,e+40|0);break a}b=J[m+16>>2];if((b|0)<=0){break a}c=0;while(1){a=J[m+24>>2]+P(c,80)|0;d=J[a+64>>2];p=N[a+56>>2];l=N[a+48>>2];q=N[a+52>>2];w=N[a+32>>2];v=N[a>>2];n=N[a+16>>2];B=N[a+36>>2];x=N[a+4>>2];C=N[a+20>>2];D=N[a+40>>2];E=N[a+8>>2];z=N[a+24>>2];F=N[f+52>>2];G=N[f+56>>2];g=N[f+24>>2];i=N[f+20>>2];h=N[f+40>>2];j=N[f+36>>2];I=N[f+48>>2];k=N[f+8>>2];s=N[f>>2];t=N[f+4>>2];u=N[f+16>>2];r=N[f+32>>2];J[e+148>>2]=0;J[e+132>>2]=0;J[e+116>>2]=0;J[e+100>>2]=0;N[e+128>>2]=Q(D*h)+Q(Q(E*r)+Q(z*j));N[e+124>>2]=Q(B*h)+Q(Q(x*r)+Q(C*j));N[e+120>>2]=Q(w*h)+Q(Q(v*r)+Q(n*j));N[e+112>>2]=Q(D*g)+Q(Q(E*u)+Q(z*i));N[e+108>>2]=Q(B*g)+Q(Q(x*u)+Q(C*i));N[e+104>>2]=Q(w*g)+Q(Q(v*u)+Q(n*i));N[e+96>>2]=Q(D*k)+Q(Q(E*s)+Q(t*z));N[e+92>>2]=Q(B*k)+Q(Q(x*s)+Q(t*C));N[e+88>>2]=Q(w*k)+Q(Q(v*s)+Q(n*t));N[e+144>>2]=G+Q(Q(p*h)+Q(Q(l*r)+Q(j*q)));N[e+140>>2]=F+Q(Q(p*g)+Q(Q(l*u)+Q(i*q)));N[e+136>>2]=I+Q(Q(p*k)+Q(Q(l*s)+Q(t*q)));J[e+700>>2]=c;J[e+696>>2]=-1;J[e+688>>2]=J[e+44>>2];J[e+684>>2]=d;J[e+680>>2]=0;J[e+692>>2]=e+88;J[e+460>>2]=-65535;J[e+464>>2]=0;J[e+452>>2]=1065353216;J[e+456>>2]=0;J[e+472>>2]=c;J[e+448>>2]=7420;a=J[e+64>>2];J[e+468>>2]=a;N[e+452>>2]=N[a+4>>2];J[e+464>>2]=J[a+16>>2];bf(J[e+56>>2],J[e+60>>2],e+680|0,e+448|0);c=c+1|0;if((b|0)==(c|0)){break a}f=J[e+52>>2];m=J[e+48>>2];continue}}ga=e+704|0}function sp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=Q(0),v=0,w=0,x=0,y=Q(0),z=Q(0);t=ga-16|0;ga=t;J[t+12>>2]=a;J[t+8>>2]=b;J[t+4>>2]=c;j=J[t+12>>2];w=J[t+4>>2];a=0;v=J[t+8>>2];if((v|0)>=2){h=J[j+712>>2];b=P(h,h);m=ua((b|0)!=(b&1073741823)?-1:b<<2);if((h|0)>0){d=h&-2;f=h&1;while(1){c=P(a,h);k=(c+a<<2)+m|0;b=0;e=0;if((h|0)!=1){while(1){a:{if((a|0)!=(b|0)){J[(P(b,h)+a<<2)+m>>2]=2147483647;J[(b+c<<2)+m>>2]=2147483647;break a}J[k>>2]=0}g=b|1;b:{if((g|0)!=(a|0)){J[(P(h,g)+a<<2)+m>>2]=2147483647;J[(c+g<<2)+m>>2]=2147483647;break b}J[k>>2]=0}b=b+2|0;e=e+2|0;if((d|0)!=(e|0)){continue}break}}c:{if(!f){break c}if((a|0)!=(b|0)){J[(P(b,h)+a<<2)+m>>2]=2147483647;J[(b+c<<2)+m>>2]=2147483647;break c}J[k>>2]=0}a=a+1|0;if((h|0)!=(a|0)){continue}break}}a=J[j+732>>2];if((a|0)>0){c=J[j+720>>2];k=J[j+740>>2];b=0;while(1){e=k+P(b,52)|0;g=(J[e+12>>2]-c|0)/104|0;e=(J[e+8>>2]-c|0)/104|0;J[(P(g,h)+e<<2)+m>>2]=1;J[(g+P(e,h)<<2)+m>>2]=1;b=b+1|0;if((a|0)!=(b|0)){continue}break}}d:{e:{if((v|0)!=2){if((h|0)<=0){break d}while(1){n=P(h,i);c=0;while(1){a=c+1|0;if((a|0)<(h|0)){e=P(c,h);g=(e+i<<2)+m|0;b=a;while(1){k=J[g>>2]+J[(b+n<<2)+m>>2]|0;d=(b+e<<2)+m|0;if(k>>>0<M[d>>2]){J[(P(b,h)+c<<2)+m>>2]=k;J[d>>2]=k}b=b+1|0;if((h|0)!=(b|0)){continue}break}}c=a;if((a|0)!=(h|0)){continue}break}i=i+1|0;if((i|0)!=(h|0)){continue}break}break e}if(h){e=0;J[8369]=J[8369]+1;n=ia[J[6782]](P(h,20),16)|0;b=0;if(h-1>>>0>=3){k=h&2147483644;c=0;while(1){a=P(b,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;a=P(b|1,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;a=P(b|2,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;a=P(b|3,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;b=b+4|0;c=c+4|0;if((k|0)!=(c|0)){continue}break}}c=h&3;if(c){while(1){a=P(b,20)+n|0;J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;J[a+12>>2]=0;b=b+1|0;e=e+1|0;if((c|0)!=(e|0)){continue}break}}a=J[j+732>>2]}if((a|0)>0){k=0;while(1){a=J[j+740>>2]+P(k,52)|0;b=J[j+720>>2];p=(J[a+12>>2]-b|0)/104|0;r=(J[a+8>>2]-b|0)/104|0;e=P(r,20)+n|0;a=J[e+4>>2];f:{g:{if((a|0)<=0){break g}c=J[e+12>>2];b=0;while(1){if((p|0)!=J[c+(b<<2)>>2]){b=b+1|0;if((b|0)!=(a|0)){continue}break g}break}if((a|0)!=(b|0)){break f}}h:{if(J[e+8>>2]!=(a|0)){break h}q=a?a<<1:1;if((q|0)<=(a|0)){break h}i:{if(!q){g=0;break i}J[8369]=J[8369]+1;g=ia[J[6782]](q<<2,16)|0;a=J[e+4>>2]}d=J[e+12>>2];j:{k:{if((a|0)>0){c=0;b=0;if(a-1>>>0>=3){o=a&-4;i=0;while(1){f=b<<2;J[f+g>>2]=J[d+f>>2];s=f|4;J[s+g>>2]=J[d+s>>2];s=f|8;J[s+g>>2]=J[d+s>>2];f=f|12;J[f+g>>2]=J[d+f>>2];b=b+4|0;i=i+4|0;if((o|0)!=(i|0)){continue}break}}a=a&3;if(!a){break k}while(1){i=b<<2;J[i+g>>2]=J[d+i>>2];b=b+1|0;c=c+1|0;if((a|0)!=(c|0)){continue}break}break k}if(!d){break j}}if(d?K[e+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}a=J[e+4>>2]}H[e+16|0]=1;J[e+12>>2]=g;J[e+8>>2]=q}J[J[e+12>>2]+(a<<2)>>2]=p;J[e+4>>2]=J[e+4>>2]+1}g=P(p,20)+n|0;a=J[g+4>>2];l:{m:{if((a|0)<=0){break m}c=J[g+12>>2];b=0;while(1){if((r|0)!=J[c+(b<<2)>>2]){b=b+1|0;if((b|0)!=(a|0)){continue}break m}break}if((a|0)!=(b|0)){break l}}n:{if(J[g+8>>2]!=(a|0)){break n}f=a?a<<1:1;if((f|0)<=(a|0)){break n}o:{if(!f){e=0;break o}J[8369]=J[8369]+1;e=ia[J[6782]](f<<2,16)|0;a=J[g+4>>2]}d=J[g+12>>2];p:{q:{if((a|0)>0){p=0;b=0;if(a-1>>>0>=3){q=a&-4;c=0;while(1){i=b<<2;J[i+e>>2]=J[d+i>>2];o=i|4;J[o+e>>2]=J[d+o>>2];o=i|8;J[o+e>>2]=J[d+o>>2];i=i|12;J[i+e>>2]=J[d+i>>2];b=b+4|0;c=c+4|0;if((q|0)!=(c|0)){continue}break}}a=a&3;if(!a){break q}while(1){c=b<<2;J[c+e>>2]=J[c+d>>2];b=b+1|0;p=p+1|0;if((a|0)!=(p|0)){continue}break}break q}if(!d){break p}}if(d?K[g+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}a=J[g+4>>2]}H[g+16|0]=1;J[g+12>>2]=e;J[g+8>>2]=f}J[J[g+12>>2]+(a<<2)>>2]=r;J[g+4>>2]=J[g+4>>2]+1}k=k+1|0;if((k|0)<J[j+732>>2]){continue}break}}r:{if(h){e=0;while(1){g=P(e,20)+n|0;a=J[g+4>>2];if((a|0)>0){p=P(e,h);q=J[g+12>>2];k=0;while(1){d=J[q+(k<<2)>>2];i=P(d,20)+n|0;c=J[i+4>>2];if((c|0)>0){r=(P(d,h)+e<<2)+m|0;o=J[i+12>>2];b=0;while(1){a=J[o+(b<<2)>>2];s:{if((a|0)==(e|0)){break s}f=P(a,h);s=(f+e<<2)+m|0;f=J[(d+f<<2)+m>>2]+J[r>>2]|0;if(M[s>>2]<=f>>>0){break s}J[(a+p<<2)+m>>2]=f;J[s>>2]=f;c=J[i+4>>2]}b=b+1|0;if((c|0)>(b|0)){continue}break}a=J[g+4>>2]}k=k+1|0;if((k|0)<(a|0)){continue}break}}e=e+1|0;if((h|0)!=(e|0)){continue}break}if(!h){break r}a=0;while(1){b=P(a,20)+n|0;c=J[b+12>>2];if(!(c?!c|!K[b+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}H[b+16|0]=1;J[b+12>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;a=a+1|0;if((h|0)!=(a|0)){continue}break}break r}if(!n){break e}}if(n){J[8370]=J[8370]+1;ia[J[6783]](n)}}if((h|0)<=0){i=0;break d}i=0;a=0;while(1){n=a;a=a+1|0;if((h|0)>(a|0)){s=P(h,n);c=a;while(1){if(J[(c+s<<2)+m>>2]==(v|0)){b=J[j+720>>2];k=w;if(!k){k=J[J[j+880>>2]>>2]}q=b+P(n,104)|0;r=b+P(c,104)|0;b=J[j+732>>2];t:{if((b|0)!=J[j+736>>2]){break t}o=b?b<<1:1;if((o|0)<=(b|0)){break t}u:{if(!o){g=0;break u}J[8369]=J[8369]+1;g=ia[J[6782]](P(o,52),16)|0;b=J[j+732>>2]}v:{if((b|0)<=0){break v}e=0;if((b|0)!=1){x=b&-2;p=0;while(1){d=P(e,52);f=d+g|0;d=d+J[j+740>>2]|0;l=J[d+4>>2];J[f>>2]=J[d>>2];J[f+4>>2]=l;J[f+48>>2]=J[d+48>>2];l=J[d+44>>2];J[f+40>>2]=J[d+40>>2];J[f+44>>2]=l;l=J[d+36>>2];J[f+32>>2]=J[d+32>>2];J[f+36>>2]=l;l=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=l;l=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=l;l=J[d+12>>2];J[f+8>>2]=J[d+8>>2];J[f+12>>2]=l;d=P(e|1,52);f=d+g|0;d=d+J[j+740>>2]|0;l=J[d+4>>2];J[f>>2]=J[d>>2];J[f+4>>2]=l;l=J[d+12>>2];J[f+8>>2]=J[d+8>>2];J[f+12>>2]=l;l=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=l;l=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=l;l=J[d+36>>2];J[f+32>>2]=J[d+32>>2];J[f+36>>2]=l;l=J[d+44>>2];J[f+40>>2]=J[d+40>>2];J[f+44>>2]=l;J[f+48>>2]=J[d+48>>2];e=e+2|0;p=p+2|0;if((x|0)!=(p|0)){continue}break}}if(!(b&1)){break v}e=P(e,52);b=e+g|0;e=e+J[j+740>>2]|0;d=J[e+4>>2];J[b>>2]=J[e>>2];J[b+4>>2]=d;J[b+48>>2]=J[e+48>>2];d=J[e+44>>2];J[b+40>>2]=J[e+40>>2];J[b+44>>2]=d;d=J[e+36>>2];J[b+32>>2]=J[e+32>>2];J[b+36>>2]=d;d=J[e+28>>2];J[b+24>>2]=J[e+24>>2];J[b+28>>2]=d;d=J[e+20>>2];J[b+16>>2]=J[e+16>>2];J[b+20>>2]=d;d=J[e+12>>2];J[b+8>>2]=J[e+8>>2];J[b+12>>2]=d}b=J[j+740>>2];if(!(b?!b|!K[j+744|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[j+740>>2]=g;H[j+744|0]=1;J[j+736>>2]=o;b=J[j+732>>2]}b=J[j+740>>2]+P(b,52)|0;J[b+8>>2]=0;J[b+12>>2]=0;J[b+4>>2]=k;J[b>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+48>>2]=0;b=J[j+732>>2];J[j+732>>2]=b+1;k=P(b,52);b=k+J[j+740>>2]|0;J[b+8>>2]=r;J[b+12>>2]=q;u=Q(N[r+16>>2]-N[q+16>>2]);y=Q(u*u);u=Q(N[r+8>>2]-N[q+8>>2]);z=Q(u*u);u=Q(N[r+12>>2]-N[q+12>>2]);N[b+16>>2]=Y(Q(y+Q(z+Q(u*u))));H[j+924|0]=1;b=k+J[j+740>>2]|0;H[b+20|0]=K[b+20|0]|1;i=i+1|0}c=c+1|0;if((h|0)!=(c|0)){continue}break}}if((a|0)!=(h|0)){continue}break}}ta(m)}ga=t+16|0;return i|0}function zF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;N[a+20>>2]=O[b+32>>3];N[a+24>>2]=O[b+40>>3];N[a+28>>2]=O[b+48>>3];N[a+32>>2]=O[b+56>>3];N[a+4>>2]=O[b>>3];N[a+8>>2]=O[b+8>>3];N[a+12>>2]=O[b+16>>3];N[a+16>>2]=O[b+24>>3];N[a+36>>2]=O[b+64>>3];N[a+40>>2]=O[b+72>>3];N[a+44>>2]=O[b+80>>3];N[a+48>>2]=O[b+88>>3];J[a+56>>2]=J[b+96>>2];H[a+60|0]=J[b+100>>2]!=0;f=J[a+88>>2];k=J[b+104>>2];a:{if((f|0)>=(k|0)){break a}if((k|0)>J[a+92>>2]){if(k){J[8369]=J[8369]+1;j=ia[J[6782]](k<<6,16)|0;c=J[a+88>>2]}else{c=f}b:{if((c|0)<=0){break b}if((c|0)!=1){m=c&-2;while(1){h=l<<6;g=h+j|0;i=h+J[a+96>>2]|0;e=J[i+4>>2];J[g>>2]=J[i>>2];J[g+4>>2]=e;e=J[i+60>>2];J[g+56>>2]=J[i+56>>2];J[g+60>>2]=e;e=J[i+52>>2];J[g+48>>2]=J[i+48>>2];J[g+52>>2]=e;e=J[i+44>>2];J[g+40>>2]=J[i+40>>2];J[g+44>>2]=e;e=J[i+36>>2];J[g+32>>2]=J[i+32>>2];J[g+36>>2]=e;e=J[i+28>>2];J[g+24>>2]=J[i+24>>2];J[g+28>>2]=e;e=J[i+20>>2];J[g+16>>2]=J[i+16>>2];J[g+20>>2]=e;e=J[i+12>>2];J[g+8>>2]=J[i+8>>2];J[g+12>>2]=e;e=h|64;g=e+j|0;h=e+J[a+96>>2]|0;e=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=e;e=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=e;e=J[h+20>>2];J[g+16>>2]=J[h+16>>2];J[g+20>>2]=e;e=J[h+28>>2];J[g+24>>2]=J[h+24>>2];J[g+28>>2]=e;e=J[h+36>>2];J[g+32>>2]=J[h+32>>2];J[g+36>>2]=e;e=J[h+44>>2];J[g+40>>2]=J[h+40>>2];J[g+44>>2]=e;e=J[h+52>>2];J[g+48>>2]=J[h+48>>2];J[g+52>>2]=e;e=J[h+60>>2];J[g+56>>2]=J[h+56>>2];J[g+60>>2]=e;l=l+2|0;d=d+2|0;if((m|0)!=(d|0)){continue}break}}if(!(c&1)){break b}c=l<<6;d=c+j|0;e=c+J[a+96>>2]|0;c=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=c;c=J[e+60>>2];J[d+56>>2]=J[e+56>>2];J[d+60>>2]=c;c=J[e+52>>2];J[d+48>>2]=J[e+48>>2];J[d+52>>2]=c;c=J[e+44>>2];J[d+40>>2]=J[e+40>>2];J[d+44>>2]=c;c=J[e+36>>2];J[d+32>>2]=J[e+32>>2];J[d+36>>2]=c;c=J[e+28>>2];J[d+24>>2]=J[e+24>>2];J[d+28>>2]=c;c=J[e+20>>2];J[d+16>>2]=J[e+16>>2];J[d+20>>2]=c;c=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=c}c=J[a+96>>2];if(!(c?!c|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+96>>2]=j;H[a+100|0]=1;J[a+92>>2]=k}d=k+(f^-1)|0;c=k-f&3;if(c){j=0;while(1){e=J[a+96>>2]+(f<<6)|0;J[e>>2]=0;J[e+4>>2]=0;J[e+56>>2]=0;J[e+60>>2]=0;J[e+48>>2]=0;J[e+52>>2]=0;J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;f=f+1|0;j=j+1|0;if((c|0)!=(j|0)){continue}break}}if(d>>>0<3){break a}while(1){d=f<<6;c=d+J[a+96>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=d+J[a+96>>2]|0;J[c+120>>2]=0;J[c+124>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+96>>2]=0;J[c+100>>2]=0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;c=c- -64|0;J[c>>2]=0;J[c+4>>2]=0;c=d+J[a+96>>2]|0;J[c+184>>2]=0;J[c+188>>2]=0;J[c+176>>2]=0;J[c+180>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;c=d+J[a+96>>2]|0;J[c+248>>2]=0;J[c+252>>2]=0;J[c+240>>2]=0;J[c+244>>2]=0;J[c+232>>2]=0;J[c+236>>2]=0;J[c+224>>2]=0;J[c+228>>2]=0;J[c+216>>2]=0;J[c+220>>2]=0;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=0;J[c+204>>2]=0;J[c+192>>2]=0;J[c+196>>2]=0;f=f+4|0;if((k|0)!=(f|0)){continue}break}}J[a+88>>2]=k;if((k|0)>0){c=J[a+96>>2];d=J[b+112>>2];j=0;while(1){f=c+(j<<6)|0;N[f+16>>2]=O[d+32>>3];N[f+20>>2]=O[d+40>>3];N[f+24>>2]=O[d+48>>3];N[f+28>>2]=O[d+56>>3];N[f>>2]=O[d>>3];N[f+4>>2]=O[d+8>>3];N[f+8>>2]=O[d+16>>3];N[f+12>>2]=O[d+24>>3];J[f+32>>2]=J[d+64>>2];J[f+36>>2]=J[d+68>>2];J[f+40>>2]=J[d+72>>2];d=d+80|0;j=j+1|0;if((k|0)!=(j|0)){continue}break}}d=J[a+128>>2];n=J[b+108>>2];c:{if((d|0)>=(n|0)){break c}if((n|0)>J[a+132>>2]){d:{if(!n){l=0;c=d;break d}J[8369]=J[8369]+1;l=ia[J[6782]](n<<4,16)|0;c=J[a+128>>2]}e:{if((c|0)<=0){break e}f=0;if((c|0)!=1){m=c&-2;i=0;while(1){h=f<<4;g=h+l|0;k=h+J[a+136>>2]|0;e=J[k+4>>2];J[g>>2]=J[k>>2];J[g+4>>2]=e;e=J[k+12>>2];J[g+8>>2]=J[k+8>>2];J[g+12>>2]=e;e=h|16;g=e+l|0;h=e+J[a+136>>2]|0;e=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=e;e=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=e;f=f+2|0;i=i+2|0;if((m|0)!=(i|0)){continue}break}}if(!(c&1)){break e}c=f<<4;f=c+l|0;e=c+J[a+136>>2]|0;c=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=c;c=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=c}c=J[a+136>>2];if(!(c?!c|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+136>>2]=l;H[a+140|0]=1;J[a+132>>2]=n}e=n+(d^-1)|0;c=n-d&3;if(c){f=0;while(1){g=J[a+136>>2]+(d<<4)|0;J[g>>2]=0;J[g+4>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;d=d+1|0;f=f+1|0;if((c|0)!=(f|0)){continue}break}}if(e>>>0<3){break c}while(1){f=d<<4;c=f+J[a+136>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=f+J[a+136>>2]|0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;c=f+J[a+136>>2]|0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;c=f+J[a+136>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;d=d+4|0;if((n|0)!=(d|0)){continue}break}}J[a+128>>2]=n;if((n|0)>0){c=J[a+136>>2];d=J[b+116>>2];j=0;while(1){f=c+(j<<4)|0;J[f+12>>2]=J[d+12>>2];I[f+6>>1]=L[d+6>>1];I[f+8>>1]=L[d+8>>1];I[f+10>>1]=L[d+10>>1];I[f>>1]=L[d>>1];I[f+2>>1]=L[d+2>>1];I[f+4>>1]=L[d+4>>1];d=d+16|0;j=j+1|0;if((n|0)!=(j|0)){continue}break}}J[a+144>>2]=J[b+120>>2];d=J[a+152>>2];h=J[b+124>>2];if(!((d|0)>=(h|0)|(h|0)<=J[a+156>>2])){f:{if(!h){i=0;break f}J[8369]=J[8369]+1;i=ia[J[6782]](h<<5,16)|0;d=J[a+152>>2]}g:{if((d|0)<=0){break g}l=0;if((d|0)!=1){e=d&-2;j=0;while(1){g=l<<5;f=g+i|0;m=g+J[a+160>>2]|0;c=J[m+4>>2];J[f>>2]=J[m>>2];J[f+4>>2]=c;c=J[m+28>>2];J[f+24>>2]=J[m+24>>2];J[f+28>>2]=c;c=J[m+20>>2];J[f+16>>2]=J[m+16>>2];J[f+20>>2]=c;c=J[m+12>>2];J[f+8>>2]=J[m+8>>2];J[f+12>>2]=c;c=g|32;f=c+i|0;g=c+J[a+160>>2]|0;c=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=c;c=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=c;c=J[g+20>>2];J[f+16>>2]=J[g+16>>2];J[f+20>>2]=c;c=J[g+28>>2];J[f+24>>2]=J[g+24>>2];J[f+28>>2]=c;l=l+2|0;j=j+2|0;if((e|0)!=(j|0)){continue}break}}if(!(d&1)){break g}c=l<<5;f=c+i|0;d=c+J[a+160>>2]|0;c=J[d+4>>2];J[f>>2]=J[d>>2];J[f+4>>2]=c;c=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=c;c=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=c;c=J[d+12>>2];J[f+8>>2]=J[d+8>>2];J[f+12>>2]=c}c=J[a+160>>2];if(!(c?!c|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+160>>2]=i;H[a+164|0]=1;J[a+156>>2]=h}J[a+152>>2]=h;if((h|0)>0){c=J[a+160>>2];d=J[b+128>>2];a=0;while(1){b=c+(a<<5)|0;I[b+6>>1]=L[d+14>>1];I[b+8>>1]=L[d+16>>1];I[b+10>>1]=L[d+18>>1];I[b>>1]=L[d+8>>1];I[b+2>>1]=L[d+10>>1];I[b+4>>1]=L[d+12>>1];J[b+12>>2]=J[d>>2];J[b+16>>2]=J[d+4>>2];d=d+20|0;a=a+1|0;if((h|0)!=(a|0)){continue}break}}}function AF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;N[a+20>>2]=N[b+16>>2];N[a+24>>2]=N[b+20>>2];N[a+28>>2]=N[b+24>>2];N[a+32>>2]=N[b+28>>2];N[a+4>>2]=N[b>>2];N[a+8>>2]=N[b+4>>2];N[a+12>>2]=N[b+8>>2];N[a+16>>2]=N[b+12>>2];N[a+36>>2]=N[b+32>>2];N[a+40>>2]=N[b+36>>2];N[a+44>>2]=N[b+40>>2];N[a+48>>2]=N[b+44>>2];J[a+56>>2]=J[b+48>>2];H[a+60|0]=J[b+52>>2]!=0;f=J[a+88>>2];k=J[b+56>>2];a:{if((f|0)>=(k|0)){break a}if((k|0)>J[a+92>>2]){if(k){J[8369]=J[8369]+1;j=ia[J[6782]](k<<6,16)|0;c=J[a+88>>2]}else{c=f}b:{if((c|0)<=0){break b}if((c|0)!=1){m=c&-2;while(1){h=l<<6;g=h+j|0;i=h+J[a+96>>2]|0;e=J[i+4>>2];J[g>>2]=J[i>>2];J[g+4>>2]=e;e=J[i+60>>2];J[g+56>>2]=J[i+56>>2];J[g+60>>2]=e;e=J[i+52>>2];J[g+48>>2]=J[i+48>>2];J[g+52>>2]=e;e=J[i+44>>2];J[g+40>>2]=J[i+40>>2];J[g+44>>2]=e;e=J[i+36>>2];J[g+32>>2]=J[i+32>>2];J[g+36>>2]=e;e=J[i+28>>2];J[g+24>>2]=J[i+24>>2];J[g+28>>2]=e;e=J[i+20>>2];J[g+16>>2]=J[i+16>>2];J[g+20>>2]=e;e=J[i+12>>2];J[g+8>>2]=J[i+8>>2];J[g+12>>2]=e;e=h|64;g=e+j|0;h=e+J[a+96>>2]|0;e=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=e;e=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=e;e=J[h+20>>2];J[g+16>>2]=J[h+16>>2];J[g+20>>2]=e;e=J[h+28>>2];J[g+24>>2]=J[h+24>>2];J[g+28>>2]=e;e=J[h+36>>2];J[g+32>>2]=J[h+32>>2];J[g+36>>2]=e;e=J[h+44>>2];J[g+40>>2]=J[h+40>>2];J[g+44>>2]=e;e=J[h+52>>2];J[g+48>>2]=J[h+48>>2];J[g+52>>2]=e;e=J[h+60>>2];J[g+56>>2]=J[h+56>>2];J[g+60>>2]=e;l=l+2|0;d=d+2|0;if((m|0)!=(d|0)){continue}break}}if(!(c&1)){break b}c=l<<6;d=c+j|0;e=c+J[a+96>>2]|0;c=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=c;c=J[e+60>>2];J[d+56>>2]=J[e+56>>2];J[d+60>>2]=c;c=J[e+52>>2];J[d+48>>2]=J[e+48>>2];J[d+52>>2]=c;c=J[e+44>>2];J[d+40>>2]=J[e+40>>2];J[d+44>>2]=c;c=J[e+36>>2];J[d+32>>2]=J[e+32>>2];J[d+36>>2]=c;c=J[e+28>>2];J[d+24>>2]=J[e+24>>2];J[d+28>>2]=c;c=J[e+20>>2];J[d+16>>2]=J[e+16>>2];J[d+20>>2]=c;c=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=c}c=J[a+96>>2];if(!(c?!c|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+96>>2]=j;H[a+100|0]=1;J[a+92>>2]=k}d=k+(f^-1)|0;c=k-f&3;if(c){j=0;while(1){e=J[a+96>>2]+(f<<6)|0;J[e>>2]=0;J[e+4>>2]=0;J[e+56>>2]=0;J[e+60>>2]=0;J[e+48>>2]=0;J[e+52>>2]=0;J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;f=f+1|0;j=j+1|0;if((c|0)!=(j|0)){continue}break}}if(d>>>0<3){break a}while(1){d=f<<6;c=d+J[a+96>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=d+J[a+96>>2]|0;J[c+120>>2]=0;J[c+124>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;J[c+104>>2]=0;J[c+108>>2]=0;J[c+96>>2]=0;J[c+100>>2]=0;J[c+88>>2]=0;J[c+92>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;c=c- -64|0;J[c>>2]=0;J[c+4>>2]=0;c=d+J[a+96>>2]|0;J[c+184>>2]=0;J[c+188>>2]=0;J[c+176>>2]=0;J[c+180>>2]=0;J[c+168>>2]=0;J[c+172>>2]=0;J[c+160>>2]=0;J[c+164>>2]=0;J[c+152>>2]=0;J[c+156>>2]=0;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;c=d+J[a+96>>2]|0;J[c+248>>2]=0;J[c+252>>2]=0;J[c+240>>2]=0;J[c+244>>2]=0;J[c+232>>2]=0;J[c+236>>2]=0;J[c+224>>2]=0;J[c+228>>2]=0;J[c+216>>2]=0;J[c+220>>2]=0;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=0;J[c+204>>2]=0;J[c+192>>2]=0;J[c+196>>2]=0;f=f+4|0;if((k|0)!=(f|0)){continue}break}}J[a+88>>2]=k;if((k|0)>0){c=J[a+96>>2];d=J[b+64>>2];j=0;while(1){f=c+(j<<6)|0;N[f+16>>2]=N[d+16>>2];N[f+20>>2]=N[d+20>>2];N[f+24>>2]=N[d+24>>2];N[f+28>>2]=N[d+28>>2];N[f>>2]=N[d>>2];N[f+4>>2]=N[d+4>>2];N[f+8>>2]=N[d+8>>2];N[f+12>>2]=N[d+12>>2];J[f+32>>2]=J[d+32>>2];J[f+36>>2]=J[d+36>>2];J[f+40>>2]=J[d+40>>2];d=d+48|0;j=j+1|0;if((k|0)!=(j|0)){continue}break}}d=J[a+128>>2];n=J[b+60>>2];c:{if((d|0)>=(n|0)){break c}if((n|0)>J[a+132>>2]){d:{if(!n){l=0;c=d;break d}J[8369]=J[8369]+1;l=ia[J[6782]](n<<4,16)|0;c=J[a+128>>2]}e:{if((c|0)<=0){break e}f=0;if((c|0)!=1){m=c&-2;i=0;while(1){h=f<<4;g=h+l|0;k=h+J[a+136>>2]|0;e=J[k+4>>2];J[g>>2]=J[k>>2];J[g+4>>2]=e;e=J[k+12>>2];J[g+8>>2]=J[k+8>>2];J[g+12>>2]=e;e=h|16;g=e+l|0;h=e+J[a+136>>2]|0;e=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=e;e=J[h+12>>2];J[g+8>>2]=J[h+8>>2];J[g+12>>2]=e;f=f+2|0;i=i+2|0;if((m|0)!=(i|0)){continue}break}}if(!(c&1)){break e}c=f<<4;f=c+l|0;e=c+J[a+136>>2]|0;c=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=c;c=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=c}c=J[a+136>>2];if(!(c?!c|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+136>>2]=l;H[a+140|0]=1;J[a+132>>2]=n}e=n+(d^-1)|0;c=n-d&3;if(c){f=0;while(1){g=J[a+136>>2]+(d<<4)|0;J[g>>2]=0;J[g+4>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;d=d+1|0;f=f+1|0;if((c|0)!=(f|0)){continue}break}}if(e>>>0<3){break c}while(1){f=d<<4;c=f+J[a+136>>2]|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;c=f+J[a+136>>2]|0;J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;c=f+J[a+136>>2]|0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;c=f+J[a+136>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;d=d+4|0;if((n|0)!=(d|0)){continue}break}}J[a+128>>2]=n;if((n|0)>0){c=J[a+136>>2];d=J[b+68>>2];j=0;while(1){f=c+(j<<4)|0;J[f+12>>2]=J[d+12>>2];I[f+6>>1]=L[d+6>>1];I[f+8>>1]=L[d+8>>1];I[f+10>>1]=L[d+10>>1];I[f>>1]=L[d>>1];I[f+2>>1]=L[d+2>>1];I[f+4>>1]=L[d+4>>1];d=d+16|0;j=j+1|0;if((n|0)!=(j|0)){continue}break}}J[a+144>>2]=J[b+76>>2];d=J[a+152>>2];h=J[b+80>>2];if(!((d|0)>=(h|0)|(h|0)<=J[a+156>>2])){f:{if(!h){i=0;break f}J[8369]=J[8369]+1;i=ia[J[6782]](h<<5,16)|0;d=J[a+152>>2]}g:{if((d|0)<=0){break g}l=0;if((d|0)!=1){e=d&-2;j=0;while(1){g=l<<5;f=g+i|0;m=g+J[a+160>>2]|0;c=J[m+4>>2];J[f>>2]=J[m>>2];J[f+4>>2]=c;c=J[m+28>>2];J[f+24>>2]=J[m+24>>2];J[f+28>>2]=c;c=J[m+20>>2];J[f+16>>2]=J[m+16>>2];J[f+20>>2]=c;c=J[m+12>>2];J[f+8>>2]=J[m+8>>2];J[f+12>>2]=c;c=g|32;f=c+i|0;g=c+J[a+160>>2]|0;c=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=c;c=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=c;c=J[g+20>>2];J[f+16>>2]=J[g+16>>2];J[f+20>>2]=c;c=J[g+28>>2];J[f+24>>2]=J[g+24>>2];J[f+28>>2]=c;l=l+2|0;j=j+2|0;if((e|0)!=(j|0)){continue}break}}if(!(d&1)){break g}c=l<<5;f=c+i|0;d=c+J[a+160>>2]|0;c=J[d+4>>2];J[f>>2]=J[d>>2];J[f+4>>2]=c;c=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=c;c=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=c;c=J[d+12>>2];J[f+8>>2]=J[d+8>>2];J[f+12>>2]=c}c=J[a+160>>2];if(!(c?!c|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+160>>2]=i;H[a+164|0]=1;J[a+156>>2]=h}J[a+152>>2]=h;if((h|0)>0){c=J[a+160>>2];d=J[b+72>>2];a=0;while(1){b=c+(a<<5)|0;I[b+6>>1]=L[d+14>>1];I[b+8>>1]=L[d+16>>1];I[b+10>>1]=L[d+18>>1];I[b>>1]=L[d+8>>1];I[b+2>>1]=L[d+10>>1];I[b+4>>1]=L[d+12>>1];J[b+12>>2]=J[d>>2];J[b+16>>2]=J[d+4>>2];d=d+20|0;a=a+1|0;if((h|0)!=(a|0)){continue}break}}}function rG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),S=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0),ka=0,la=0,ma=Q(0),na=Q(0),oa=0,pa=Q(0);d=ga-48|0;ga=d;a:{if(!J[a+12>>2]){break a}m=K[a+16|0];k=m?c:b;f=J[k+12>>2];y=N[f+56>>2];z=N[f+52>>2];A=N[f+48>>2];o=m?b:c;m=J[o+12>>2];B=N[m+56>>2];fa=N[m+48>>2];C=N[m+52>>2];k=J[k+4>>2];w=N[f+32>>2];D=N[f+16>>2];E=N[f>>2];F=N[f+36>>2];n=N[f+20>>2];s=N[f+4>>2];h=N[m+40>>2];i=N[m+24>>2];g=N[m+8>>2];j=N[m+32>>2];p=N[m+16>>2];r=N[m>>2];t=N[m+36>>2];l=N[f+40>>2];u=N[m+20>>2];H=N[f+24>>2];x=N[m+4>>2];I=N[f+8>>2];m=J[o+4>>2];L=N[m+56>>2];v=N[m+48>>2];M=N[m+52>>2];J[d+28>>2]=0;X=Q(Q(j*l)+Q(Q(r*I)+Q(H*p)));v=Q(-v);Z=Q(Q(t*l)+Q(Q(x*I)+Q(H*u)));l=Q(Q(h*l)+Q(Q(g*I)+Q(H*i)));N[d+24>>2]=Q(Q(X*v)-Q(M*Z))-Q(L*l);H=Q(Q(j*F)+Q(Q(r*s)+Q(n*p)));I=Q(Q(t*F)+Q(Q(x*s)+Q(n*u)));_=Q(Q(h*F)+Q(Q(g*s)+Q(n*i)));N[d+20>>2]=Q(Q(H*v)-Q(M*I))-Q(L*_);$=Q(Q(j*w)+Q(Q(r*E)+Q(D*p)));q=M;M=Q(Q(t*w)+Q(Q(x*E)+Q(D*u)));ha=L;L=Q(Q(h*w)+Q(Q(g*E)+Q(D*i)));N[d+16>>2]=Q(Q($*v)-Q(q*M))-Q(ha*L);ia[J[J[k>>2]+64>>2]](d+32|0,k,d+16|0);f=J[o+12>>2];v=N[f+48>>2];U=N[f+32>>2];V=N[f+16>>2];q=N[f+8>>2];P=N[f+4>>2];O=N[f>>2];S=N[f+56>>2];G=N[f+52>>2];W=N[f+40>>2];aa=N[f+36>>2];ja=N[f+24>>2];ba=N[f+20>>2];ca=N[m+64>>2];F=N[m+56>>2];n=N[m+48>>2];s=N[m+52>>2];w=N[d+40>>2];D=N[d+32>>2];E=N[d+36>>2];f=J[a+12>>2];da=N[f+752>>2];J[e+4>>2]=f;ea=Q(Q(y*h)+Q(Q(A*g)+Q(z*i)));ha=g;g=Q(-fa);l=Q(Q(ea+Q(Q(Q(ha*g)-Q(i*C))-Q(h*B)))+Q(Q(w*l)+Q(Q(D*L)+Q(_*E))));p=Q(Q(Q(Q(y*j)+Q(Q(A*r)+Q(z*p)))+Q(Q(Q(r*g)-Q(p*C))-Q(j*B)))+Q(Q(w*X)+Q(Q(D*$)+Q(H*E))));r=Q(Q(Q(Q(y*t)+Q(Q(A*x)+Q(z*u)))+Q(Q(Q(x*g)-Q(u*C))-Q(t*B)))+Q(Q(w*Z)+Q(Q(D*M)+Q(I*E))));h=Q(Q(Q(F*l)+Q(Q(n*p)+Q(s*r)))-ca);if(h<da){f=J[o+12>>2];t=N[f+24>>2];u=N[f+20>>2];x=N[f+40>>2];y=N[f+36>>2];z=N[f+16>>2];A=N[f+32>>2];i=N[m+56>>2];B=N[f+8>>2];g=N[m+48>>2];C=N[f>>2];j=N[m+52>>2];w=N[f+4>>2];J[d+28>>2]=0;N[d+16>>2]=Q(B*i)+Q(Q(C*g)+Q(w*j));N[d+24>>2]=Q(x*i)+Q(Q(A*g)+Q(j*y));N[d+20>>2]=Q(t*i)+Q(Q(z*g)+Q(j*u));J[d+12>>2]=0;i=Q(l-Q(F*h));g=Q(p-Q(n*h));j=Q(r-Q(s*h));N[d+8>>2]=Q(Q(i*W)+Q(Q(g*U)+Q(j*aa)))+S;N[d+4>>2]=Q(Q(i*ja)+Q(Q(g*V)+Q(j*ba)))+G;N[d>>2]=Q(Q(i*q)+Q(Q(g*O)+Q(P*j)))+v;ia[J[J[e>>2]+16>>2]](e,d+16|0,d,h)}b:{if(J[k+4>>2]>6|J[J[e+4>>2]+748>>2]>=J[a+24>>2]){break b}i=N[m+56>>2];c:{if(Q(R(i))>Q(.7071067690849304)){h=N[m+52>>2];g=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(i*i)))));h=Q(h*g);i=Q(g*Q(-i));g=Q(0);break c}h=N[m+48>>2];g=N[m+52>>2];j=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(g*g)))));i=Q(h*j);h=Q(0);g=Q(j*Q(-g))}j=Q(ia[J[J[k>>2]+16>>2]](k));j=Q(Q(T(Q(N[6778]/j),Q(.39269909262657166)))*Q(.5));p=Ga(j);f=J[a+20>>2];H=Ha(j);if((f|0)<=0){break b}q=h;h=Q(p/Q(Y(Q(Q(h*h)+Q(Q(g*g)+Q(i*i))))));I=Q(q*h);L=Q(i*h);M=Q(g*h);while(1){i=N[m+52>>2];j=N[m+48>>2];h=N[m+56>>2];g=Q(Q(Q(Q(6.2831854820251465)/Q(f|0))*Q(oa|0))*Q(.5));p=Q(Ga(g)/Q(Y(Q(Q(h*h)+Q(Q(j*j)+Q(i*i))))));h=Q(h*p);i=Q(i*p);g=Ha(g);j=Q(j*p);p=Q(Q(h*I)+Q(Q(i*L)+Q(Q(g*H)+Q(M*j))));r=Q(Q(h*L)+Q(Q(Q(g*M)-Q(H*j))-Q(i*I)));t=Q(Q(j*I)+Q(Q(Q(g*L)-Q(H*i))-Q(h*M)));u=Q(Q(i*M)+Q(Q(Q(g*I)-Q(H*h))-Q(j*L)));N[d+28>>2]=Q(Q(Q(p*g)-Q(j*r))-Q(t*i))-Q(u*h);N[d+24>>2]=Q(Q(r*i)+Q(Q(p*h)+Q(g*u)))-Q(t*j);N[d+20>>2]=Q(Q(u*j)+Q(Q(p*i)+Q(g*t)))-Q(r*h);N[d+16>>2]=Q(Q(t*h)+Q(Q(p*j)+Q(g*r)))-Q(u*i);f=ga-48|0;ga=f;o=K[a+16|0];ka=o?c:b;k=J[ka+12>>2];fa=N[k+56>>2];X=N[k+52>>2];Z=N[k+48>>2];la=o?b:c;o=J[la+12>>2];_=N[o+56>>2];aa=N[o+48>>2];$=N[o+52>>2];ka=J[ka+4>>2];h=N[o+40>>2];i=N[o+8>>2];g=N[o+24>>2];j=N[o+32>>2];p=N[o>>2];r=N[o+16>>2];t=N[o+36>>2];y=N[k+40>>2];z=N[k+32>>2];A=N[k+36>>2];u=N[o+4>>2];B=N[k+8>>2];C=N[k>>2];w=N[k+4>>2];x=N[o+20>>2];D=N[k+24>>2];E=N[k+16>>2];F=N[k+20>>2];s=N[d+28>>2];v=N[d+24>>2];n=N[d+16>>2];l=N[d+20>>2];o=J[la+4>>2];U=N[o+56>>2];ja=N[o+48>>2];V=N[o+52>>2];J[f+28>>2]=0;q=Q(Q(2)/Q(Q(s*s)+Q(Q(v*v)+Q(Q(n*n)+Q(l*l)))));G=Q(n*q);ba=Q(n*G);P=Q(l*q);ca=Q(l*P);O=Q(Q(1)-Q(ba+ca));q=Q(v*q);da=Q(n*q);ea=Q(s*P);S=Q(da+ea);ma=Q(l*q);na=Q(s*G);l=Q(ma-na);G=Q(Q(y*O)+Q(Q(z*S)+Q(A*l)));W=Q(Q(O*B)+Q(Q(S*C)+Q(w*l)));l=Q(Q(O*D)+Q(Q(S*E)+Q(F*l)));O=Q(-ja);N[f+24>>2]=Q(Q(Q(Q(j*G)+Q(Q(p*W)+Q(r*l)))*O)-Q(V*Q(Q(t*G)+Q(Q(u*W)+Q(x*l)))))-Q(U*Q(Q(h*G)+Q(Q(i*W)+Q(g*l))));l=Q(ma+na);P=Q(n*P);S=Q(s*q);n=Q(P-S);G=Q(v*q);s=Q(Q(1)-Q(ba+G));v=Q(Q(y*l)+Q(Q(z*n)+Q(A*s)));q=Q(Q(l*B)+Q(Q(n*C)+Q(w*s)));n=Q(Q(l*D)+Q(Q(n*E)+Q(F*s)));N[f+20>>2]=Q(Q(Q(Q(j*v)+Q(Q(p*q)+Q(r*n)))*O)-Q(V*Q(Q(t*v)+Q(Q(u*q)+Q(x*n)))))-Q(U*Q(Q(h*v)+Q(Q(i*q)+Q(g*n))));n=Q(da-ea);s=Q(Q(1)-Q(ca+G));l=Q(P+S);v=Q(Q(y*n)+Q(Q(z*s)+Q(A*l)));q=Q(Q(n*B)+Q(Q(s*C)+Q(w*l)));n=Q(Q(n*D)+Q(Q(s*E)+Q(F*l)));N[f+16>>2]=Q(Q(Q(Q(j*v)+Q(Q(p*q)+Q(r*n)))*O)-Q(V*Q(Q(t*v)+Q(Q(u*q)+Q(x*n)))))-Q(U*Q(Q(h*v)+Q(Q(i*q)+Q(g*n))));ia[J[J[ka>>2]+64>>2]](f+32|0,ka,f+16|0);k=J[la+12>>2];P=N[k+48>>2];O=N[k+32>>2];S=N[k+16>>2];G=N[k+8>>2];W=N[k+4>>2];ja=N[k>>2];ba=N[k+56>>2];ca=N[k+52>>2];da=N[k+40>>2];ea=N[k+36>>2];ma=N[k+24>>2];na=N[k+20>>2];pa=N[o+64>>2];v=N[o+56>>2];U=N[o+48>>2];V=N[o+52>>2];n=N[f+40>>2];s=N[f+32>>2];l=N[f+36>>2];k=J[a+12>>2];q=N[k+752>>2];J[e+4>>2]=k;ha=q;q=Q(-aa);aa=Q(Q(Q(Q(fa*h)+Q(Q(Z*i)+Q(X*g)))+Q(Q(Q(i*q)-Q(g*$))-Q(h*_)))+Q(Q(n*Q(Q(y*h)+Q(Q(B*i)+Q(D*g))))+Q(Q(s*Q(Q(z*h)+Q(Q(C*i)+Q(E*g))))+Q(l*Q(Q(A*h)+Q(Q(w*i)+Q(F*g)))))));p=Q(Q(Q(Q(fa*j)+Q(Q(Z*p)+Q(X*r)))+Q(Q(Q(p*q)-Q(r*$))-Q(j*_)))+Q(Q(n*Q(Q(y*j)+Q(Q(B*p)+Q(D*r))))+Q(Q(s*Q(Q(z*j)+Q(Q(C*p)+Q(E*r))))+Q(l*Q(Q(A*j)+Q(Q(w*p)+Q(F*r)))))));r=Q(Q(Q(Q(fa*t)+Q(Q(Z*u)+Q(X*x)))+Q(Q(Q(u*q)-Q(x*$))-Q(t*_)))+Q(Q(n*Q(Q(y*t)+Q(Q(B*u)+Q(D*x))))+Q(Q(s*Q(Q(z*t)+Q(Q(C*u)+Q(E*x))))+Q(l*Q(Q(A*t)+Q(Q(w*u)+Q(F*x)))))));h=Q(Q(Q(v*aa)+Q(Q(U*p)+Q(V*r)))-pa);if(ha>h){k=J[la+12>>2];t=N[k+24>>2];u=N[k+20>>2];x=N[k+40>>2];y=N[k+36>>2];z=N[k+16>>2];A=N[k+32>>2];i=N[o+56>>2];B=N[k+8>>2];g=N[o+48>>2];C=N[k>>2];j=N[o+52>>2];w=N[k+4>>2];J[f+28>>2]=0;N[f+16>>2]=Q(B*i)+Q(Q(C*g)+Q(w*j));N[f+24>>2]=Q(x*i)+Q(Q(A*g)+Q(j*y));N[f+20>>2]=Q(t*i)+Q(Q(z*g)+Q(j*u));J[f+12>>2]=0;i=Q(aa-Q(v*h));g=Q(p-Q(U*h));j=Q(r-Q(V*h));N[f+8>>2]=Q(Q(i*da)+Q(Q(g*O)+Q(j*ea)))+ba;N[f+4>>2]=Q(Q(i*ma)+Q(Q(g*S)+Q(j*na)))+ca;N[f>>2]=Q(Q(i*G)+Q(Q(g*ja)+Q(W*j)))+P;ia[J[J[e>>2]+16>>2]](e,f+16|0,f,h)}ga=f+48|0;f=J[a+20>>2];oa=oa+1|0;if((f|0)>(oa|0)){continue}break}}if(!K[a+8|0]|!J[J[a+12>>2]+748>>2]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];f=J[J[e+8>>2]+8>>2];b=(c|0)==(f|0);k=a;a=J[J[e+12>>2]+8>>2];ab(k,(b?c:a)+4|0,(b?a:f)+4|0)}ga=d+48|0}function Eg(a,b,c,d,e,f,g){var h=Q(0),i=0,j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=0,v=Q(0),w=0,x=0,y=0,z=0,A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),O=Q(0);k=ga-9824|0;ga=k;i=c;c=k+9696|0;Gg(a,b,i,d,f,c,g);a=k+9448|0;J[a>>2]=0;J[a+4>>2]=0;J[k+9440>>2]=0;J[k+9444>>2]=0;J[k+9676>>2]=0;J[k+9680>>2]=0;J[k+9688>>2]=2;a=0;J[k+9456>>2]=0;h=N[e>>2];j=N[e+4>>2];l=N[e+8>>2];J[k+28>>2]=0;N[k+24>>2]=-l;N[k+20>>2]=-j;N[k+16>>2]=-h;a:{b:{c:{switch(Fg(k+9312|0,c,k+16|0)-1|0){case 0:c=k- -64|0;J[c>>2]=0;J[c+4>>2]=0;J[k+72>>2]=0;J[k+9292>>2]=0;J[k+16>>2]=9;J[k+9296>>2]=0;J[k+9300>>2]=0;J[k+56>>2]=0;J[k+60>>2]=0;c=0;while(1){g=P(127-c|0,56);d=g+(k+16|0)|0;J[d+2156>>2]=a;J[d+2152>>2]=0;d=d+2108|0;if(a){J[a+44>>2]=d}J[k+9304>>2]=d;i=k+2124|0;a=i+P(126-c|0,56)|0;J[a+44>>2]=0;J[a+48>>2]=d;J[(g+i|0)+44>>2]=a;J[k+9304>>2]=a;c=c+2|0;if((c|0)!=128){continue}break};J[k+9308>>2]=128;h=N[e>>2];j=N[e+4>>2];l=N[e+8>>2];a=0;J[k+12>>2]=0;N[k+8>>2]=-l;N[k+4>>2]=-j;N[k>>2]=-h;g=k+16|0;u=ga-32|0;ga=u;d:{e:{B=k+9312|0;i=J[B+372>>2];if(M[i+32>>2]<2){break e}if(!eb(B)){break e}c=J[g+9280>>2];if(c){e=J[g+9292>>2];d=J[g+9284>>2];while(1){p=J[c+48>>2];if(p){J[p+44>>2]=J[c+44>>2]}p=J[c+44>>2];if(p){J[p+48>>2]=J[c+48>>2]}if(J[g+9280>>2]==(c|0)){J[g+9280>>2]=J[c+48>>2]}J[c+44>>2]=0;J[c+48>>2]=J[g+9288>>2];p=J[g+9288>>2];if(p){J[p+44>>2]=c}d=d-1|0;J[g+9288>>2]=c;e=e+1|0;c=J[g+9280>>2];if(c){continue}break}J[g+9292>>2]=e;J[g+9284>>2]=d}J[g+9276>>2]=0;J[g>>2]=0;e=J[i>>2];d=J[i+12>>2];h=N[d+16>>2];n=Q(N[e+16>>2]-h);c=J[i+4>>2];j=N[d+20>>2];m=Q(N[c+20>>2]-j);p=J[i+8>>2];l=N[d+24>>2];o=Q(N[p+24>>2]-l);q=Q(N[e+20>>2]-j);r=Q(N[c+24>>2]-l);s=Q(N[p+16>>2]-h);l=Q(N[e+24>>2]-l);h=Q(N[c+16>>2]-h);j=Q(N[p+20>>2]-j);f:{if(!(Q(Q(Q(Q(n*m)*o)+Q(Q(Q(Q(Q(q*r)*s)+Q(Q(l*h)*j))-Q(Q(r*n)*j))-Q(Q(h*q)*o)))-Q(Q(m*l)*s))<Q(0))){d=c;c=e;break f}J[i+4>>2]=e;J[i>>2]=c;J[i+16>>2]=lI(J[i+16>>2],J[i+20>>2]);J[i+20>>2]=ha;d=e}d=td(g,c,d,p,1);p=td(g,J[i+4>>2],J[i>>2],J[i+12>>2],1);t=td(g,J[i+8>>2],J[i+4>>2],J[i+12>>2],1);w=td(g,J[i>>2],J[i+8>>2],J[i+12>>2],1);if(J[g+9284>>2]!=4){break e}e=J[g+9280>>2];c=J[e+48>>2];if(c){h=N[e+16>>2];h=Q(h*h);while(1){j=N[c+16>>2];j=Q(j*j);i=j<h;e=i?c:e;h=i?j:h;c=J[c+48>>2];if(c){continue}break}}x=J[e+28>>2];y=J[e+24>>2];z=J[e+20>>2];h=N[e+16>>2];r=N[e+12>>2];n=N[e+8>>2];j=N[e+4>>2];l=N[e>>2];J[d+32>>2]=p;H[d+52|0]=0;J[p+32>>2]=d;H[p+52|0]=0;J[d+36>>2]=t;H[d+53|0]=0;J[t+32>>2]=d;H[t+52|0]=1;J[d+40>>2]=w;H[d+54|0]=0;J[w+32>>2]=d;H[w+52|0]=2;J[p+36>>2]=w;H[p+53|0]=2;J[w+40>>2]=p;H[w+54|0]=1;J[p+40>>2]=t;H[p+54|0]=1;J[t+36>>2]=p;H[t+53|0]=2;H[t+54|0]=1;J[t+40>>2]=w;J[w+36>>2]=t;H[w+53|0]=2;J[g>>2]=0;d=0;while(1){g:{h:{i=J[g+9276>>2];if(i>>>0<=63){c=0;J[u+8>>2]=0;J[u>>2]=0;J[u+4>>2]=0;J[g+9276>>2]=i+1;d=d+1|0;H[e+55|0]=d;m=N[e+8>>2];o=N[e>>2];q=N[e+4>>2];i=g+(i<<5)|0;J[i+72>>2]=0;v=m;m=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(o*o)+Q(q*q))))));N[i+68>>2]=v*m;N[i- -64>>2]=q*m;p=i+60|0;N[p>>2]=o*m;Za(u+16|0,B,p);t=J[u+28>>2];J[i+84>>2]=J[u+24>>2];J[i+88>>2]=t;t=J[u+20>>2];J[i+76>>2]=J[u+16>>2];J[i+80>>2]=t;if(!(Q(Q(Q(N[e+8>>2]*N[i+84>>2])+Q(Q(N[e>>2]*N[i+76>>2])+Q(N[e+4>>2]*N[i+80>>2])))-N[e+16>>2])>Q(9999999747378752e-20))){J[g>>2]=7;break g}while(1){i=Dg(g,d,p,J[((c<<2)+e|0)+32>>2],K[(c+e|0)+52|0],u);if(!i){break h}t=c>>>0<2;c=c+1|0;if(t){continue}break}break h}J[g>>2]=6;break g}if(!(i&M[u+8>>2]>2)){J[g>>2]=4;break g}c=J[u>>2];i=J[u+4>>2];J[c+36>>2]=i;H[c+53|0]=2;J[i+40>>2]=c;H[i+54|0]=1;c=J[e+48>>2];if(c){J[c+44>>2]=J[e+44>>2]}c=J[e+44>>2];if(c){J[c+48>>2]=J[e+48>>2]}if(J[g+9280>>2]==(e|0)){J[g+9280>>2]=J[e+48>>2]}J[g+9284>>2]=J[g+9284>>2]-1;J[e+44>>2]=0;J[e+48>>2]=J[g+9288>>2];c=J[g+9288>>2];if(c){J[c+44>>2]=e}J[g+9288>>2]=e;J[g+9292>>2]=J[g+9292>>2]+1;e=J[g+9280>>2];c=J[e+48>>2];if(c){h=N[e+16>>2];h=Q(h*h);while(1){j=N[c+16>>2];j=Q(j*j);i=j<h;e=i?c:e;h=i?j:h;c=J[c+48>>2];if(c){continue}break}}x=J[e+28>>2];y=J[e+24>>2];z=J[e+20>>2];h=N[e+16>>2];r=N[e+12>>2];n=N[e+8>>2];j=N[e+4>>2];l=N[e>>2];if((d|0)!=255){continue}}break}N[g+56>>2]=h;N[g+40>>2]=l;J[g+4>>2]=z;N[g+52>>2]=r;N[g+48>>2]=n;N[g+44>>2]=j;J[g+36>>2]=3;J[g+12>>2]=x;J[g+8>>2]=y;l=Q(l*h);m=Q(N[y+16>>2]-l);j=Q(j*h);o=Q(N[x+20>>2]-j);q=Q(N[x+16>>2]-l);r=Q(N[y+20>>2]-j);s=Q(Q(m*o)-Q(q*r));h=Q(n*h);n=Q(N[x+24>>2]-h);v=o;o=Q(N[y+24>>2]-h);r=Q(Q(r*n)-Q(v*o));n=Q(Q(o*q)-Q(n*m));n=Q(Y(Q(Q(s*s)+Q(Q(r*r)+Q(n*n)))));N[g+20>>2]=n;m=Q(N[x+16>>2]-l);o=Q(N[z+20>>2]-j);q=Q(N[z+16>>2]-l);r=Q(N[x+20>>2]-j);s=Q(Q(m*o)-Q(q*r));A=Q(s*s);v=r;r=Q(N[z+24>>2]-h);s=o;o=Q(N[x+24>>2]-h);s=Q(Q(v*r)-Q(s*o));m=Q(Q(o*q)-Q(r*m));m=Q(Y(Q(A+Q(Q(s*s)+Q(m*m)))));N[g+24>>2]=m;o=Q(N[z+16>>2]-l);q=Q(N[y+20>>2]-j);l=Q(N[y+16>>2]-l);j=Q(N[z+20>>2]-j);r=Q(Q(o*q)-Q(l*j));v=j;j=Q(N[y+24>>2]-h);h=Q(N[z+24>>2]-h);q=Q(Q(v*j)-Q(q*h));h=Q(Q(h*l)-Q(j*o));j=Q(Y(Q(Q(r*r)+Q(Q(q*q)+Q(h*h)))));h=Q(j+Q(n+m));N[g+28>>2]=j/h;N[g+24>>2]=m/h;N[g+20>>2]=n/h;c=J[g>>2];break d}c=8;J[g>>2]=8;h=Q(0);l=Q(1);j=Q(0);n=N[k+8>>2];m=N[k>>2];o=N[k+4>>2];q=Q(Y(Q(Q(n*n)+Q(Q(m*m)+Q(o*o)))));if(q>Q(0)){l=Q(Q(1)/q);j=Q(l*Q(-n));h=Q(l*Q(-o));l=Q(l*Q(-m))}J[g+52>>2]=0;J[g+56>>2]=0;N[g+48>>2]=j;N[g+44>>2]=h;N[g+40>>2]=l;J[g+36>>2]=1;d=J[i>>2];J[g+20>>2]=1065353216;J[g+4>>2]=d}ga=u+32|0;if((c|0)==9){break b}i:{if(!J[k+52>>2]){h=Q(0);j=Q(0);l=Q(0);break i}l=Q(0);j=Q(0);h=Q(0);while(1){c=J[k+9816>>2];d=J[k+9820>>2];e=J[k+9696>>2]+(d>>1)|0;g=(k+16|0)+(a<<2)|0;i=J[g+4>>2];if(d&1){c=J[c+J[e>>2]>>2]}ia[c|0](k,e,i);n=N[g+20>>2];l=Q(l+Q(n*N[k+8>>2]));j=Q(j+Q(n*N[k+4>>2]));h=Q(h+Q(N[k>>2]*n));a=a+1|0;if(a>>>0<M[k+52>>2]){continue}break}}a=1;J[f>>2]=1;n=N[b+52>>2];m=N[b+24>>2];o=N[b+20>>2];q=N[b+56>>2];r=N[b+40>>2];s=N[b+36>>2];v=N[b+48>>2];A=N[b+8>>2];C=N[b>>2];D=N[b+4>>2];E=N[b+16>>2];F=N[b+32>>2];J[f+16>>2]=0;N[f+12>>2]=q+Q(Q(l*r)+Q(Q(h*F)+Q(j*s)));N[f+8>>2]=n+Q(Q(l*m)+Q(Q(h*E)+Q(j*o)));N[f+4>>2]=v+Q(Q(l*A)+Q(Q(h*C)+Q(j*D)));r=N[b+52>>2];s=N[b+20>>2];v=N[b+24>>2];A=N[b+56>>2];C=N[b+36>>2];D=N[b+40>>2];E=N[b+48>>2];F=N[b+8>>2];G=N[b>>2];I=N[b+4>>2];L=N[b+16>>2];O=N[b+32>>2];m=N[k+60>>2];o=N[k- -64>>2];q=N[k+56>>2];n=N[k+72>>2];J[f+48>>2]=0;J[f+32>>2]=0;N[f+52>>2]=-n;N[f+44>>2]=-o;N[f+40>>2]=-m;N[f+36>>2]=-q;l=Q(l-Q(n*o));h=Q(h-Q(q*n));j=Q(j-Q(n*m));N[f+28>>2]=A+Q(Q(D*l)+Q(Q(O*h)+Q(C*j)));N[f+24>>2]=r+Q(Q(l*v)+Q(Q(h*L)+Q(j*s)));N[f+20>>2]=E+Q(Q(l*F)+Q(Q(h*G)+Q(j*I)));break a;case 1:break c;default:break a}}J[f>>2]=2;break a}J[f>>2]=3}ga=k+9824|0;return a}function hh(a,b,c,d,e,f){var g=0,h=0,i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=0;g=ga-640|0;ga=g;h=J[d+12>>2];y=J[d+4>>2];i=J[y+4>>2];a:{if((i|0)<=19){N[g+636>>2]=f;J[g+632>>2]=0;J[g+464>>2]=6804;N[g+628>>2]=N[e+4>>2];H[g+436|0]=0;J[g+412>>2]=953267991;J[g+16>>2]=18432;i=g+80|0;J[i+20>>2]=0;J[i+16>>2]=y;J[i+12>>2]=a;J[i+8>>2]=g+16;J[i+4>>2]=g+104;J[i>>2]=18208;b:{if(!(ia[J[J[i>>2]+8>>2]](i,b,c,h,h,g+464|0)|0)){break b}f=N[g+604>>2];j=N[g+596>>2];k=N[g+600>>2];m=Q(Q(f*f)+Q(Q(j*j)+Q(k*k)));if(!(m>Q(9999999747378752e-20))){break b}l=N[g+628>>2];if(!(l<N[e+4>>2])){break b}n=f;f=Q(Q(1)/Q(Y(m)));N[g+604>>2]=n*f;N[g+600>>2]=k*f;N[g+596>>2]=j*f;a=J[d+8>>2];J[g+36>>2]=0;J[g+32>>2]=a;a=J[g+608>>2];J[g+48>>2]=J[g+604>>2];J[g+52>>2]=a;a=J[g+596>>2];b=J[g+600>>2];d=J[g+624>>2];c=g- -64|0;J[c>>2]=J[g+620>>2];J[c+4>>2]=d;J[g+40>>2]=a;J[g+44>>2]=b;a=J[g+616>>2];J[g+56>>2]=J[g+612>>2];J[g+60>>2]=a;N[g+72>>2]=l;Q(ia[J[J[e>>2]+12>>2]](e,g+32|0,1))}break a}E=i-21|0;if(E>>>0<=8){c:{switch(E|0){case 0:j=N[h+20>>2];k=N[h+36>>2];p=N[h+52>>2];m=N[h+24>>2];t=N[h+56>>2];l=N[h+40>>2];n=N[h+32>>2];w=N[h>>2];x=N[h+16>>2];o=N[h+4>>2];q=N[h+8>>2];r=N[h+48>>2];u=N[b+52>>2];v=N[b+56>>2];z=N[b+48>>2];J[g+44>>2]=0;r=Q(-r);A=Q(Q(Q(q*r)-Q(m*p))-Q(l*t));N[g+40>>2]=A+Q(Q(v*l)+Q(Q(z*q)+Q(m*u)));B=Q(Q(Q(o*r)-Q(j*p))-Q(k*t));N[g+36>>2]=B+Q(Q(v*k)+Q(Q(z*o)+Q(j*u)));r=Q(Q(Q(w*r)-Q(x*p))-Q(n*t));N[g+32>>2]=r+Q(Q(v*n)+Q(Q(z*w)+Q(x*u)));p=N[c+52>>2];t=N[c+56>>2];u=N[c+48>>2];J[g+92>>2]=0;N[g+88>>2]=A+Q(Q(t*l)+Q(Q(u*q)+Q(m*p)));N[g+84>>2]=B+Q(Q(t*k)+Q(Q(u*o)+Q(j*p)));N[g+80>>2]=r+Q(Q(t*n)+Q(Q(u*w)+Q(x*p)));p=N[c+20>>2];t=N[c+36>>2];u=N[c+24>>2];v=N[c+40>>2];z=N[c+32>>2];r=N[c>>2];A=N[c+16>>2];B=N[c+4>>2];s=N[c+8>>2];J[g+508>>2]=0;J[g+512>>2]=0;J[g+492>>2]=0;J[g+516>>2]=0;J[g+520>>2]=0;J[g+524>>2]=0;N[g+504>>2]=Q(v*l)+Q(Q(s*q)+Q(m*u));N[g+500>>2]=Q(t*l)+Q(Q(B*q)+Q(m*p));N[g+488>>2]=Q(v*k)+Q(Q(s*o)+Q(j*u));N[g+484>>2]=Q(t*k)+Q(Q(B*o)+Q(j*p));J[g+476>>2]=0;N[g+496>>2]=Q(z*l)+Q(Q(r*q)+Q(m*A));N[g+480>>2]=Q(z*k)+Q(Q(r*o)+Q(j*A));N[g+472>>2]=Q(v*n)+Q(Q(s*w)+Q(x*u));N[g+468>>2]=Q(t*n)+Q(Q(B*w)+Q(x*p));N[g+464>>2]=Q(z*n)+Q(Q(r*w)+Q(x*A));d=J[d+8>>2];i=g+104|0;tl(i,a,b,c,h,Q(ia[J[J[y>>2]+48>>2]](y)));J[g+324>>2]=y;J[g+320>>2]=d;J[g+104>>2]=7592;J[g+316>>2]=e;j=N[e+4>>2];N[g+312>>2]=f;N[g+304>>2]=j;c=g+16|0;ia[J[J[a>>2]+8>>2]](a,g+464|0,c,g);a=ga-16|0;ga=a;b=J[y+48>>2];J[a+8>>2]=i;J[a+4>>2]=b;J[a>>2]=12496;d=g+32|0;e=g+80|0;b=J[y+52>>2];d:{if(K[b+60|0]){um(b,a,d,e,c,g,J[b+56>>2]);break d}vm(b,a,d,e,c,g)}ga=a+16|0;break a;case 7:N[g+276>>2]=f;J[g+272>>2]=0;J[g+104>>2]=6804;N[g+268>>2]=N[e+4>>2];i=g+32|0;J[i+20>>2]=y;J[i+16>>2]=0;J[i+12>>2]=a;J[i+4>>2]=0;J[i+8>>2]=0;J[i>>2]=18208;e:{if(!(ia[J[J[i>>2]+8>>2]](i,b,c,h,h,g+104|0)|0)){break e}f=N[g+244>>2];j=N[g+236>>2];k=N[g+240>>2];m=Q(Q(f*f)+Q(Q(j*j)+Q(k*k)));if(!(m>Q(9999999747378752e-20))){break e}l=N[g+268>>2];if(!(l<N[e+4>>2])){break e}n=f;f=Q(Q(1)/Q(Y(m)));N[g+244>>2]=n*f;N[g+240>>2]=k*f;N[g+236>>2]=j*f;a=J[d+8>>2];J[g+468>>2]=0;J[g+464>>2]=a;a=J[g+248>>2];J[g+480>>2]=J[g+244>>2];J[g+484>>2]=a;a=J[g+236>>2];b=J[g+240>>2];c=J[g+264>>2];J[g+496>>2]=J[g+260>>2];J[g+500>>2]=c;J[g+472>>2]=a;J[g+476>>2]=b;a=J[g+256>>2];J[g+488>>2]=J[g+252>>2];J[g+492>>2]=a;N[g+504>>2]=l;Q(ia[J[J[e>>2]+12>>2]](e,g+464|0,1))}break a;default:break c}}t=N[b+52>>2];u=N[b+56>>2];m=N[h+52>>2];v=N[h+56>>2];z=N[c+52>>2];r=N[c+56>>2];k=N[h+20>>2];l=N[h+36>>2];w=N[h+24>>2];x=N[h+40>>2];A=N[b+48>>2];R=N[h+48>>2];B=N[c+48>>2];j=N[h+32>>2];n=N[h>>2];o=N[h+16>>2];q=N[h+4>>2];p=N[h+8>>2];s=N[c+20>>2];C=N[c+36>>2];D=N[c+24>>2];F=N[c+40>>2];G=N[c+32>>2];I=N[c>>2];L=N[c+16>>2];M=N[c+4>>2];O=N[c+8>>2];J[g+508>>2]=0;J[g+512>>2]=0;J[g+492>>2]=0;J[g+516>>2]=0;J[g+520>>2]=0;J[g+524>>2]=0;N[g+504>>2]=Q(F*x)+Q(Q(O*p)+Q(w*D));N[g+500>>2]=Q(C*x)+Q(Q(M*p)+Q(w*s));N[g+488>>2]=Q(F*l)+Q(Q(O*q)+Q(k*D));N[g+484>>2]=Q(C*l)+Q(Q(M*q)+Q(k*s));J[g+476>>2]=0;N[g+496>>2]=Q(G*x)+Q(Q(I*p)+Q(w*L));N[g+480>>2]=Q(G*l)+Q(Q(I*q)+Q(k*L));N[g+472>>2]=Q(F*j)+Q(Q(O*n)+Q(o*D));N[g+468>>2]=Q(C*j)+Q(Q(M*n)+Q(o*s));N[g+464>>2]=Q(G*j)+Q(Q(I*n)+Q(o*L));d=J[d+8>>2];tl(g+104|0,a,b,c,h,Q(ia[J[J[y>>2]+48>>2]](y)));J[g+324>>2]=y;J[g+320>>2]=d;J[g+104>>2]=7804;J[g+316>>2]=e;s=N[e+4>>2];N[g+312>>2]=f;N[g+304>>2]=s;ia[J[J[a>>2]+8>>2]](a,g+464|0,g+32|0,g+80|0);J[g+28>>2]=0;s=Q(-R);C=Q(Q(Q(p*s)-Q(w*m))-Q(x*v));D=Q(Q(Q(q*s)-Q(k*m))-Q(l*v));f=Q(D+Q(Q(r*l)+Q(Q(B*q)+Q(k*z))));s=Q(Q(Q(n*s)-Q(o*m))-Q(j*v));v=Q(s+Q(Q(u*j)+Q(Q(A*n)+Q(o*t))));m=v;j=Q(s+Q(Q(r*j)+Q(Q(B*n)+Q(o*z))));if(m>j){N[g+16>>2]=j;m=j}q=Q(D+Q(Q(u*l)+Q(Q(A*q)+Q(k*t))));l=q;if(f<l){N[g+20>>2]=f;l=f}o=Q(C+Q(Q(u*x)+Q(Q(A*p)+Q(w*t))));n=o;k=Q(C+Q(Q(r*x)+Q(Q(B*p)+Q(w*z))));if(k<o){N[g+24>>2]=k;n=k}J[g+12>>2]=0;N[g+16>>2]=N[g+32>>2]+m;N[g+20>>2]=N[g+36>>2]+l;N[g+24>>2]=N[g+40>>2]+n;N[g>>2]=N[g+80>>2]+(j>v?j:v);N[g+4>>2]=N[g+84>>2]+(f>q?f:q);N[g+8>>2]=N[g+88>>2]+(k>o?k:o);ia[J[J[y>>2]+64>>2]](y,g+104|0,g+16|0,g);break a}if((i|0)!=31){break a}ya(3176);if(J[y+16>>2]>0){E=0;while(1){i=J[y+24>>2]+P(E,80)|0;S=J[i+64>>2];p=N[i+56>>2];t=N[i+48>>2];u=N[i+52>>2];v=N[i+32>>2];z=N[i>>2];r=N[i+16>>2];A=N[i+36>>2];B=N[i+4>>2];s=N[i+20>>2];C=N[i+40>>2];D=N[i+8>>2];F=N[i+24>>2];G=N[h+48>>2];I=N[h+52>>2];L=N[h+56>>2];j=N[h+8>>2];k=N[h>>2];m=N[h+4>>2];l=N[h+24>>2];n=N[h+16>>2];w=N[h+20>>2];x=N[h+40>>2];o=N[h+32>>2];q=N[h+36>>2];J[g+164>>2]=0;J[g+148>>2]=0;J[g+132>>2]=0;J[g+116>>2]=0;N[g+144>>2]=Q(C*x)+Q(Q(D*o)+Q(F*q));N[g+140>>2]=Q(A*x)+Q(Q(B*o)+Q(s*q));N[g+136>>2]=Q(v*x)+Q(Q(z*o)+Q(r*q));N[g+128>>2]=Q(C*l)+Q(Q(D*n)+Q(F*w));N[g+124>>2]=Q(A*l)+Q(Q(B*n)+Q(s*w));N[g+120>>2]=Q(v*l)+Q(Q(z*n)+Q(r*w));N[g+112>>2]=Q(C*j)+Q(Q(D*k)+Q(F*m));N[g+108>>2]=Q(A*j)+Q(Q(B*k)+Q(s*m));N[g+104>>2]=Q(v*j)+Q(Q(z*k)+Q(r*m));N[g+160>>2]=L+Q(Q(p*x)+Q(Q(t*o)+Q(u*q)));N[g+156>>2]=I+Q(Q(p*l)+Q(Q(t*n)+Q(u*w)));N[g+152>>2]=G+Q(Q(p*j)+Q(Q(t*k)+Q(u*m)));J[g+40>>2]=-65535;J[g+48>>2]=E;J[g+32>>2]=8020;J[g+44>>2]=e;N[g+36>>2]=N[e+4>>2];i=J[d+8>>2];J[g+484>>2]=E;J[g+480>>2]=-1;J[g+472>>2]=i;J[g+468>>2]=S;J[g+464>>2]=d;J[g+476>>2]=g+104;hh(a,b,c,g+464|0,g+32|0,f);E=E+1|0;if((E|0)<J[y+16>>2]){continue}break}}xa()}ga=g+640|0}function NA(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=Q(0),l=Q(0),m=0,n=0,o=0,p=0,q=0,r=0;a:{if(!(H[i+64|0]&1)){break a}p=J[a+68>>2];n=J[a+28>>2];m=J[a+48>>2];if((m|0)>0){e=P(J[a+192>>2],1664525)+1013904223|0;b:{if((m|0)==1){break b}d=J[a+136>>2];c=J[d+4>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=f>>>2^f;f=d+(((f>>>1^f)&1)<<2)|0;J[d+4>>2]=J[f>>2];J[f>>2]=c;if((m|0)==2){break b}c=J[d+8>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=d+(((f>>>2^f)>>>0)%3<<2)|0;J[d+8>>2]=J[f>>2];J[f>>2]=c;if((m|0)==3){break b}c=4;f=J[d+12>>2];e=P(e,1664525)+1013904223|0;j=e^e>>>16;j=j>>>8^j;j=j>>>4^j;j=d+(((j>>>2^j)&3)<<2)|0;J[d+12>>2]=J[j>>2];J[j>>2]=f;if((m|0)==4){break b}while(1){f=c;c=f+1|0;j=d+(f<<2)|0;r=J[j>>2];q=j;e=P(e,1664525)+1013904223|0;j=e;c:{if(f>>>0>65535){break c}o=e>>>16^e;j=o;if(f>>>0>255){break c}o=o^o>>>8;j=o;if(f>>>0>15){break c}j=o^o>>>4}f=((j>>>0)%(c>>>0)<<2)+d|0;J[q>>2]=J[f>>2];J[f>>2]=r;if((c|0)!=(m|0)){continue}break}}J[a+192>>2]=e}if(J[i+20>>2]<=(b|0)){break a}if((n|0)>0){e=P(J[a+192>>2],1664525)+1013904223|0;d:{if((n|0)==1){break d}d=J[a+116>>2];c=J[d+4>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=f>>>2^f;f=d+(((f>>>1^f)&1)<<2)|0;J[d+4>>2]=J[f>>2];J[f>>2]=c;if((n|0)==2){break d}c=J[d+8>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=d+(((f>>>2^f)>>>0)%3<<2)|0;J[d+8>>2]=J[f>>2];J[f>>2]=c;if((n|0)==3){break d}c=4;f=J[d+12>>2];e=P(e,1664525)+1013904223|0;j=e^e>>>16;j=j>>>8^j;j=j>>>4^j;j=d+(((j>>>2^j)&3)<<2)|0;J[d+12>>2]=J[j>>2];J[j>>2]=f;if((n|0)==4){break d}while(1){f=c;c=f+1|0;j=d+(f<<2)|0;o=J[j>>2];q=j;e=P(e,1664525)+1013904223|0;j=e;e:{if(f>>>0>65535){break e}m=e>>>16^e;j=m;if(f>>>0>255){break e}m=m^m>>>8;j=m;if(f>>>0>15){break e}j=m^m>>>4}f=((j>>>0)%(c>>>0)<<2)+d|0;J[q>>2]=J[f>>2];J[f>>2]=o;if((c|0)!=(n|0)){continue}break}}J[a+192>>2]=e}if((p|0)<=0){break a}e=P(J[a+192>>2],1664525)+1013904223|0;f:{if((p|0)==1){break f}d=J[a+156>>2];c=J[d+4>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=f>>>2^f;f=d+(((f>>>1^f)&1)<<2)|0;J[d+4>>2]=J[f>>2];J[f>>2]=c;if((p|0)==2){break f}c=J[d+8>>2];e=P(e,1664525)+1013904223|0;f=e^e>>>16;f=f>>>8^f;f=f>>>4^f;f=d+(((f>>>2^f)>>>0)%3<<2)|0;J[d+8>>2]=J[f>>2];J[f>>2]=c;if((p|0)==3){break f}c=4;f=J[d+12>>2];e=P(e,1664525)+1013904223|0;j=e^e>>>16;j=j>>>8^j;j=j>>>4^j;j=d+(((j>>>2^j)&3)<<2)|0;J[d+12>>2]=J[j>>2];J[j>>2]=f;if((p|0)==4){break f}while(1){f=c;c=f+1|0;j=d+(f<<2)|0;m=J[j>>2];o=j;e=P(e,1664525)+1013904223|0;j=e;g:{if(f>>>0>65535){break g}n=e>>>16^e;j=n;if(f>>>0>255){break g}n=n^n>>>8;j=n;if(f>>>0>15){break g}j=n^n>>>4}f=((j>>>0)%(c>>>0)<<2)+d|0;J[o>>2]=J[f>>2];J[f>>2]=m;if((c|0)!=(p|0)){continue}break}}J[a+192>>2]=e}e=J[a+48>>2];h:{i:{if(H[i+65|0]&1){if((e|0)>0){c=0;while(1){d=J[a+56>>2]+P(J[J[a+136>>2]+(c<<2)>>2],152)|0;if(J[d+136>>2]>(b|0)){e=J[a+16>>2];Qb(e+P(J[d+144>>2],244)|0,e+P(J[d+148>>2],244)|0,d);e=J[a+48>>2]}c=c+1|0;if((e|0)>(c|0)){continue}break}}if(J[i+20>>2]<=(b|0)){break h}if((h|0)>0){e=0;while(1){b=(e<<2)+g|0;c=J[b>>2];if(K[c+20|0]){c=yb(a,J[c+28>>2],N[i+12>>2]);d=yb(a,J[J[b>>2]+32>>2],N[i+12>>2]);b=J[b>>2];f=P(c,244);c=J[a+16>>2];ia[J[J[b>>2]+24>>2]](b,f+c|0,c+P(d,244)|0,N[i+12>>2])}e=e+1|0;if((h|0)!=(e|0)){continue}break}}c=J[a+28>>2];b=J[i+64>>2];if(!(b&512)){break i}if((c|0)<=0){break h}f=b&16?2:1;e=0;while(1){d=J[a+16>>2];b=J[a+36>>2]+P(J[J[a+116>>2]+(e<<2)>>2],152)|0;wg(d+P(J[b+144>>2],244)|0,d+P(J[b+148>>2],244)|0,b);d=P(e,f)<<2;k=N[b+100>>2];g=k>Q(0);if(g){b=J[a+76>>2]+P(J[d+J[a+156>>2]>>2],152)|0;l=N[b+104>>2];N[b+124>>2]=k*l;N[b+120>>2]=k*Q(-l);h=J[a+16>>2];Qb(h+P(J[b+144>>2],244)|0,h+P(J[b+148>>2],244)|0,b)}if(!(!(K[i+64|0]&16)|!g)){b=J[a+76>>2]+P(J[(d+J[a+156>>2]|0)+4>>2],152)|0;l=N[b+104>>2];N[b+124>>2]=k*l;N[b+120>>2]=k*Q(-l);d=J[a+16>>2];Qb(d+P(J[b+144>>2],244)|0,d+P(J[b+148>>2],244)|0,b)}e=e+1|0;if((c|0)!=(e|0)){continue}break}break h}if((e|0)>0){c=0;while(1){d=J[a+56>>2]+P(J[J[a+136>>2]+(c<<2)>>2],152)|0;if(J[d+136>>2]>(b|0)){e=J[a+16>>2];Qb(e+P(J[d+144>>2],244)|0,e+P(J[d+148>>2],244)|0,d);e=J[a+48>>2]}c=c+1|0;if((e|0)>(c|0)){continue}break}}if(J[i+20>>2]<=(b|0)){break h}if((h|0)>0){e=0;while(1){b=(e<<2)+g|0;c=J[b>>2];if(K[c+20|0]){c=yb(a,J[c+28>>2],N[i+12>>2]);d=yb(a,J[J[b>>2]+32>>2],N[i+12>>2]);b=J[b>>2];f=P(c,244);c=J[a+16>>2];ia[J[J[b>>2]+24>>2]](b,f+c|0,c+P(d,244)|0,N[i+12>>2])}e=e+1|0;if((h|0)!=(e|0)){continue}break}}c=J[a+28>>2];if((c|0)>0){e=0;while(1){d=J[a+16>>2];b=J[a+36>>2]+P(J[J[a+116>>2]+(e<<2)>>2],152)|0;wg(d+P(J[b+144>>2],244)|0,d+P(J[b+148>>2],244)|0,b);e=e+1|0;if((c|0)!=(e|0)){continue}break}}d=J[a+68>>2];if((d|0)>0){c=0;while(1){b=J[a+76>>2]+P(J[J[a+156>>2]+(c<<2)>>2],152)|0;k=N[(J[a+36>>2]+P(J[b+140>>2],152)|0)+100>>2];if(k>Q(0)){l=N[b+104>>2];N[b+124>>2]=k*l;N[b+120>>2]=k*Q(-l);e=J[a+16>>2];Qb(e+P(J[b+144>>2],244)|0,e+P(J[b+148>>2],244)|0,b)}c=c+1|0;if((d|0)!=(c|0)){continue}break}}d=J[a+88>>2];if((d|0)<=0){break h}c=0;while(1){b=J[a+96>>2]+P(c,152)|0;k=N[(J[a+36>>2]+P(J[b+140>>2],152)|0)+100>>2];if(k>Q(0)){l=k;k=N[b+104>>2];l=Q(l*k);k=k<l?k:l;N[b+124>>2]=k;N[b+120>>2]=-k;e=J[a+16>>2];Qb(e+P(J[b+144>>2],244)|0,e+P(J[b+148>>2],244)|0,b)}c=c+1|0;if((d|0)!=(c|0)){continue}break}break h}if((c|0)>0){e=0;while(1){d=J[a+16>>2];b=J[a+36>>2]+P(J[J[a+116>>2]+(e<<2)>>2],152)|0;wg(d+P(J[b+144>>2],244)|0,d+P(J[b+148>>2],244)|0,b);e=e+1|0;if((c|0)!=(e|0)){continue}break}}d=J[a+68>>2];if((d|0)>0){c=0;while(1){b=J[a+76>>2]+P(J[J[a+156>>2]+(c<<2)>>2],152)|0;k=N[(J[a+36>>2]+P(J[b+140>>2],152)|0)+100>>2];if(k>Q(0)){l=N[b+104>>2];N[b+124>>2]=k*l;N[b+120>>2]=k*Q(-l);e=J[a+16>>2];Qb(e+P(J[b+144>>2],244)|0,e+P(J[b+148>>2],244)|0,b)}c=c+1|0;if((d|0)!=(c|0)){continue}break}}d=J[a+88>>2];if((d|0)<=0){break h}c=0;while(1){b=J[a+96>>2]+P(c,152)|0;k=N[(J[a+36>>2]+P(J[b+140>>2],152)|0)+100>>2];if(k>Q(0)){l=k;k=N[b+104>>2];l=Q(l*k);k=k<l?k:l;N[b+124>>2]=k;N[b+120>>2]=-k;e=J[a+16>>2];Qb(e+P(J[b+144>>2],244)|0,e+P(J[b+148>>2],244)|0,b)}c=c+1|0;if((d|0)!=(c|0)){continue}break}}return Q(Q(0))}\nfunction sm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;J[a+168>>2]=J[a+152>>2];H[b+80|0]=1;H[b+60|0]=0;J[b+52>>2]=282;J[b>>2]=12132;J[b+76>>2]=0;H[b+100|0]=1;J[b+68>>2]=0;J[b+72>>2]=0;J[b+96>>2]=0;H[b+120|0]=1;J[b+88>>2]=0;J[b+92>>2]=0;J[b+116>>2]=0;H[b+140|0]=1;J[b+108>>2]=0;J[b+112>>2]=0;J[b+136>>2]=0;H[b+164|0]=1;J[b+144>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;J[b+160>>2]=0;J[b+152>>2]=0;J[b+156>>2]=0;J[b+168>>2]=0;J[b+28>>2]=2139095039;J[b+32>>2]=0;J[b+20>>2]=2139095039;J[b+24>>2]=2139095039;J[b+12>>2]=-8388609;J[b+16>>2]=0;J[b+4>>2]=-8388609;J[b+8>>2]=-8388609;c=J[a+56>>2];a:{if(d){J[b+56>>2]=c<<8&16711680|c<<24|(c>>>8&65280|c>>>24);H[b+4|0]=K[a+7|0];H[b+5|0]=K[a+6|0];H[b+6|0]=K[a+5|0];H[b+7|0]=K[a+4|0];H[b+8|0]=K[a+11|0];H[b+9|0]=K[a+10|0];H[b+10|0]=K[a+9|0];H[b+11|0]=K[a+8|0];H[b+12|0]=K[a+15|0];H[b+13|0]=K[a+14|0];H[b+14|0]=K[a+13|0];H[b+15|0]=K[a+12|0];H[b+16|0]=K[a+19|0];H[b+17|0]=K[a+18|0];H[b+18|0]=K[a+17|0];H[b+19|0]=K[a+16|0];H[b+20|0]=K[a+23|0];H[b+21|0]=K[a+22|0];H[b+22|0]=K[a+21|0];H[b+23|0]=K[a+20|0];H[b+24|0]=K[a+27|0];H[b+25|0]=K[a+26|0];H[b+26|0]=K[a+25|0];H[b+27|0]=K[a+24|0];H[b+28|0]=K[a+31|0];H[b+29|0]=K[a+30|0];H[b+30|0]=K[a+29|0];H[b+31|0]=K[a+28|0];H[b+32|0]=K[a+35|0];H[b+33|0]=K[a+34|0];H[b+34|0]=K[a+33|0];H[b+35|0]=K[a+32|0];H[b+36|0]=K[a+39|0];H[b+37|0]=K[a+38|0];H[b+38|0]=K[a+37|0];H[b+39|0]=K[a+36|0];H[b+40|0]=K[a+43|0];H[b+41|0]=K[a+42|0];H[b+42|0]=K[a+41|0];H[b+43|0]=K[a+40|0];H[b+44|0]=K[a+47|0];H[b+45|0]=K[a+46|0];H[b+46|0]=K[a+45|0];H[b+47|0]=K[a+44|0];H[b+48|0]=K[a+51|0];H[b+49|0]=K[a+50|0];H[b+50|0]=K[a+49|0];H[b+51|0]=K[a+48|0];c=J[a+144>>2];J[b+144>>2]=c<<24|c<<8&16711680|(c>>>8&65280|c>>>24);c=J[a+168>>2];c=c<<24|c<<8&16711680|(c>>>8&65280|c>>>24);break a}J[b+56>>2]=c;c=J[a+16>>2];J[b+12>>2]=J[a+12>>2];J[b+16>>2]=c;c=J[a+8>>2];J[b+4>>2]=J[a+4>>2];J[b+8>>2]=c;c=J[a+32>>2];J[b+28>>2]=J[a+28>>2];J[b+32>>2]=c;c=J[a+24>>2];J[b+20>>2]=J[a+20>>2];J[b+24>>2]=c;c=J[a+48>>2];J[b+44>>2]=J[a+44>>2];J[b+48>>2]=c;c=J[a+40>>2];J[b+36>>2]=J[a+36>>2];J[b+40>>2]=c;J[b+144>>2]=J[a+144>>2];c=J[a+168>>2]}J[b+168>>2]=c;H[b+60|0]=K[a+60|0];i=b+172|0;j=J[a+56>>2];b:{if(K[a+60|0]){c=J[b+136>>2];if(!(c?!c|!K[b+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[b+136>>2]=i;H[b+140|0]=0;c:{if(!d){if((j|0)<=0){break c}h=J[a+136>>2];while(1){f=e<<4;c=f+i|0;f=f+h|0;I[c>>1]=L[f>>1];I[c+2>>1]=L[f+2>>1];I[c+4>>1]=L[f+4>>1];I[c+6>>1]=L[f+6>>1];I[c+8>>1]=L[f+8>>1];I[c+10>>1]=L[f+10>>1];J[c+12>>2]=J[f+12>>2];e=e+1|0;if((j|0)!=(e|0)){continue}break}break c}if((j|0)<=0){break c}h=J[a+136>>2];while(1){f=e<<4;c=f+i|0;f=f+h|0;g=L[f>>1];I[c>>1]=g<<8|g>>>8;g=L[f+2>>1];I[c+2>>1]=g<<8|g>>>8;g=L[f+4>>1];I[c+4>>1]=g<<8|g>>>8;g=L[f+6>>1];I[c+6>>1]=g<<8|g>>>8;g=L[f+8>>1];I[c+8>>1]=g<<8|g>>>8;g=L[f+10>>1];I[c+10>>1]=g<<8|g>>>8;g=c;c=J[f+12>>2];J[g+12>>2]=c<<24|c<<8&16711680|(c>>>8&65280|c>>>24);e=e+1|0;if((j|0)!=(e|0)){continue}break}}f=b+128|0;e=j<<4;break b}c=J[b+96>>2];if(!(c?!c|!K[b+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[b+96>>2]=i;H[b+100|0]=0;J[b+92>>2]=j;J[b+88>>2]=j;d:{e:{if(!d){if((j|0)>0){break e}c=i;break d}if((j|0)<=0){c=i;break d}g=J[a+96>>2];c=i;while(1){h=f<<6;c=h+c|0;e=g+h|0;H[c|0]=K[e+3|0];H[c+1|0]=K[e+2|0];H[c+2|0]=K[e+1|0];H[c+3|0]=K[e|0];H[c+4|0]=K[e+7|0];H[c+5|0]=K[e+6|0];H[c+6|0]=K[e+5|0];H[c+7|0]=K[e+4|0];H[c+8|0]=K[e+11|0];H[c+9|0]=K[e+10|0];H[c+10|0]=K[e+9|0];H[c+11|0]=K[e+8|0];H[c+12|0]=K[e+15|0];H[c+13|0]=K[e+14|0];H[c+14|0]=K[e+13|0];H[c+15|0]=K[e+12|0];c=h+J[b+96>>2]|0;e=h+J[a+96>>2]|0;H[c+16|0]=K[e+19|0];H[c+17|0]=K[e+18|0];H[c+18|0]=K[e+17|0];H[c+19|0]=K[e+16|0];H[c+20|0]=K[e+23|0];H[c+21|0]=K[e+22|0];H[c+22|0]=K[e+21|0];H[c+23|0]=K[e+20|0];H[c+24|0]=K[e+27|0];H[c+25|0]=K[e+26|0];H[c+26|0]=K[e+25|0];H[c+27|0]=K[e+24|0];H[c+28|0]=K[e+31|0];H[c+29|0]=K[e+30|0];H[c+30|0]=K[e+29|0];H[c+31|0]=K[e+28|0];c=J[b+96>>2];k=h+c|0;g=J[a+96>>2];h=h+g|0;e=J[h+32>>2];J[k+32>>2]=e<<24|e<<8&16711680|(e>>>8&65280|e>>>24);e=J[h+36>>2];J[k+36>>2]=e<<24|e<<8&16711680|(e>>>8&65280|e>>>24);e=J[h+40>>2];J[k+40>>2]=e<<24|e<<8&16711680|(e>>>8&65280|e>>>24);f=f+1|0;if((j|0)!=(f|0)){continue}break}break d}f=J[a+96>>2];c=i;while(1){h=e<<6;c=h+c|0;f=f+h|0;g=J[f+4>>2];J[c>>2]=J[f>>2];J[c+4>>2]=g;g=J[f+12>>2];J[c+8>>2]=J[f+8>>2];J[c+12>>2]=g;f=h+J[a+96>>2]|0;g=J[f+20>>2];c=h+J[b+96>>2]|0;J[c+16>>2]=J[f+16>>2];J[c+20>>2]=g;g=J[f+28>>2];J[c+24>>2]=J[f+24>>2];J[c+28>>2]=g;c=J[b+96>>2];g=h+c|0;f=J[a+96>>2];h=h+f|0;J[g+32>>2]=J[h+32>>2];J[g+36>>2]=J[h+36>>2];J[g+40>>2]=J[h+40>>2];e=e+1|0;if((j|0)!=(e|0)){continue}break}}f=b+88|0;e=j<<6;if(!K[b+100|0]){break b}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}}J[f>>2]=0;J[f+4>>2]=0;H[f+5|0]=0;H[f+6|0]=0;H[f+7|0]=0;H[f+8|0]=0;H[f+9|0]=0;H[f+10|0]=0;H[f+11|0]=0;H[f+12|0]=0;i=e+i|0;c=J[a+168>>2];e=J[b+160>>2];if(!(e?!e|!K[b+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[b+160>>2]=i;H[b+164|0]=0;J[b+156>>2]=c;J[b+152>>2]=c;f=J[a+168>>2];f:{if(!d){if((f|0)<=0){break f}f=J[a+160>>2];e=0;while(1){d=e<<5;c=d+i|0;d=d+f|0;I[c>>1]=L[d>>1];I[c+2>>1]=L[d+2>>1];I[c+4>>1]=L[d+4>>1];I[c+6>>1]=L[d+6>>1];I[c+8>>1]=L[d+8>>1];I[c+10>>1]=L[d+10>>1];J[c+12>>2]=J[d+12>>2];d=J[d+16>>2];J[c+28>>2]=0;J[c+20>>2]=0;J[c+24>>2]=0;J[c+16>>2]=d;e=e+1|0;if((e|0)<J[a+168>>2]){continue}break}break f}if((f|0)<=0){break f}j=J[a+160>>2];e=0;while(1){c=e<<5;a=c+i|0;c=c+j|0;d=L[c>>1];I[a>>1]=d<<8|d>>>8;d=L[c+2>>1];I[a+2>>1]=d<<8|d>>>8;d=L[c+4>>1];I[a+4>>1]=d<<8|d>>>8;d=L[c+6>>1];I[a+6>>1]=d<<8|d>>>8;d=L[c+8>>1];I[a+8>>1]=d<<8|d>>>8;d=L[c+10>>1];I[a+10>>1]=d<<8|d>>>8;d=J[c+12>>2];J[a+12>>2]=d<<24|d<<8&16711680|(d>>>8&65280|d>>>24);d=a;a=J[c+16>>2];J[d+16>>2]=a<<24|a<<8&16711680|(a>>>8&65280|a>>>24);e=e+1|0;if((f|0)!=(e|0)){continue}break}}if(i?K[b+164|0]:0){J[8370]=J[8370]+1;ia[J[6783]](i)}J[b>>2]=0;H[b+157|0]=0;H[b+158|0]=0;H[b+159|0]=0;H[b+160|0]=0;H[b+161|0]=0;H[b+162|0]=0;H[b+163|0]=0;H[b+164|0]=0;J[b+152>>2]=0;J[b+156>>2]=0;return 1}function eb(a){var b=0,c=0,d=0,e=Q(0),f=0,g=0,h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0);d=ga-32|0;ga=d;a:{b:{c:{d:{e:{f:{k=J[a+372>>2];switch(J[k+32>>2]-1|0){case 3:break c;case 2:break d;case 1:break e;case 0:break f;default:break b}}c=J[a+364>>2];J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d>>2]=1065353216;J[k+20>>2]=0;c=c-1|0;J[a+364>>2]=c;b=J[((c<<2)+a|0)+348>>2];J[k+32>>2]=2;J[k+4>>2]=b;l=N[d+8>>2];h=N[d>>2];e=N[d+4>>2];J[b+12>>2]=0;i=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(h*h)+Q(e*e))))));N[b+8>>2]=l*i;N[b+4>>2]=e*i;N[b>>2]=h*i;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;g:{if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;j=J[a+364>>2];g=J[b+(c<<2)>>2];J[((j<<2)+a|0)+348>>2]=g;f=J[a+372>>2];b=J[f+32>>2];c=(b<<2)+f|0;J[c+16>>2]=0;J[a+364>>2]=j;J[c>>2]=g;J[f+32>>2]=b+1;J[g+12>>2]=0;N[g+8>>2]=i*Q(-l);N[g+4>>2]=i*Q(-e);N[g>>2]=i*Q(-h);Za(d+16|0,a,g);c=J[d+28>>2];J[g+24>>2]=J[d+24>>2];J[g+28>>2]=c;c=J[d+20>>2];J[g+16>>2]=J[d+16>>2];J[g+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;c=J[b+(c<<2)>>2];g=J[a+364>>2];J[a+364>>2]=g+1;b=(g<<2)+a|0;J[b+348>>2]=c;f=J[a+372>>2];j=J[f+32>>2];J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d+4>>2]=1065353216;c=f+(j<<2)|0;J[c+16>>2]=0;J[a+364>>2]=g;b=J[b+348>>2];J[c>>2]=b;J[f+32>>2]=j+1;l=N[d+8>>2];h=N[d>>2];e=N[d+4>>2];J[b+12>>2]=0;i=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(h*h)+Q(e*e))))));N[b+8>>2]=l*i;N[b+4>>2]=e*i;N[b>>2]=h*i;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;j=J[a+364>>2];g=J[b+(c<<2)>>2];J[((j<<2)+a|0)+348>>2]=g;f=J[a+372>>2];b=J[f+32>>2];c=(b<<2)+f|0;J[c+16>>2]=0;J[a+364>>2]=j;J[c>>2]=g;J[f+32>>2]=b+1;J[g+12>>2]=0;N[g+8>>2]=i*Q(-l);N[g+4>>2]=i*Q(-e);N[g>>2]=i*Q(-h);Za(d+16|0,a,g);c=J[d+28>>2];J[g+24>>2]=J[d+24>>2];J[g+28>>2]=c;c=J[d+20>>2];J[g+16>>2]=J[d+16>>2];J[g+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;c=J[b+(c<<2)>>2];g=J[a+364>>2];J[a+364>>2]=g+1;b=(g<<2)+a|0;J[b+348>>2]=c;f=J[a+372>>2];j=J[f+32>>2];J[d+8>>2]=0;J[d+12>>2]=0;J[d+8>>2]=1065353216;J[d>>2]=0;J[d+4>>2]=0;c=f+(j<<2)|0;J[c+16>>2]=0;J[a+364>>2]=g;b=J[b+348>>2];J[c>>2]=b;J[f+32>>2]=j+1;l=N[d+8>>2];h=N[d>>2];e=N[d+4>>2];J[b+12>>2]=0;i=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(h*h)+Q(e*e))))));N[b+8>>2]=l*i;N[b+4>>2]=e*i;N[b>>2]=h*i;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;j=J[a+364>>2];g=J[b+(c<<2)>>2];J[((j<<2)+a|0)+348>>2]=g;f=J[a+372>>2];b=J[f+32>>2];c=(b<<2)+f|0;J[c+16>>2]=0;J[a+364>>2]=j;J[c>>2]=g;J[f+32>>2]=b+1;J[g+12>>2]=0;N[g+8>>2]=i*Q(-l);N[g+4>>2]=i*Q(-e);N[g>>2]=i*Q(-h);Za(d+16|0,a,g);c=J[d+28>>2];J[g+24>>2]=J[d+24>>2];J[g+28>>2]=c;c=J[d+20>>2];J[g+16>>2]=J[d+16>>2];J[g+20>>2]=c;if(eb(a)){break g}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;b=J[b+(c<<2)>>2];c=J[a+364>>2];J[a+364>>2]=c+1;J[((c<<2)+a|0)+348>>2]=b;break b}f=1;break a}b=J[k+4>>2];c=J[k>>2];p=Q(N[b+20>>2]-N[c+20>>2]);r=Q(-p);q=Q(N[b+24>>2]-N[c+24>>2]);n=Q(-q);o=Q(N[b+16>>2]-N[c+16>>2]);i=Q(-o);while(1){h:{J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;J[d+(g<<2)>>2]=1065353216;l=N[d+4>>2];h=N[d>>2];m=Q(Q(o*l)+Q(h*r));e=N[d+8>>2];l=Q(Q(p*e)+Q(l*n));h=Q(Q(q*h)+Q(e*i));e=Q(Q(m*m)+Q(Q(l*l)+Q(h*h)));if(e>Q(0)){f=J[a+372>>2];j=J[f+32>>2];b=(j<<2)+f|0;J[b+16>>2]=0;c=J[a+364>>2]-1|0;J[a+364>>2]=c;k=b;b=J[((c<<2)+a|0)+348>>2];J[k>>2]=b;J[f+32>>2]=j+1;J[b+12>>2]=0;e=Q(Q(1)/Q(Y(e)));N[b+8>>2]=m*e;N[b+4>>2]=h*e;N[b>>2]=l*e;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;if(eb(a)){break h}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;j=J[a+364>>2];k=J[b+(c<<2)>>2];J[((j<<2)+a|0)+348>>2]=k;f=J[a+372>>2];b=J[f+32>>2];c=(b<<2)+f|0;J[c+16>>2]=0;J[a+364>>2]=j;J[c>>2]=k;J[f+32>>2]=b+1;J[k+12>>2]=0;N[k+8>>2]=e*Q(-m);N[k+4>>2]=e*Q(-h);N[k>>2]=e*Q(-l);Za(d+16|0,a,k);c=J[d+28>>2];J[k+24>>2]=J[d+24>>2];J[k+28>>2]=c;c=J[d+20>>2];J[k+16>>2]=J[d+16>>2];J[k+20>>2]=c;if(eb(a)){break h}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;b=J[b+(c<<2)>>2];c=J[a+364>>2];J[a+364>>2]=c+1;J[((c<<2)+a|0)+348>>2]=b}g=g+1|0;if((g|0)!=3){continue}break b}break}f=1;break a}j=J[k+4>>2];b=J[k>>2];h=N[b+16>>2];o=Q(N[j+16>>2]-h);c=J[k+8>>2];e=N[b+20>>2];i=Q(N[c+20>>2]-e);l=Q(N[c+16>>2]-h);e=Q(N[j+20>>2]-e);n=Q(Q(o*i)-Q(l*e));m=e;e=N[b+24>>2];h=Q(N[c+24>>2]-e);e=Q(N[j+24>>2]-e);i=Q(Q(m*h)-Q(i*e));h=Q(Q(e*l)-Q(h*o));e=Q(Q(n*n)+Q(Q(i*i)+Q(h*h)));if(!(e>Q(0))){break b}J[k+28>>2]=0;c=J[a+364>>2]-1|0;J[a+364>>2]=c;b=J[((c<<2)+a|0)+348>>2];J[k+32>>2]=4;J[k+12>>2]=b;J[b+12>>2]=0;e=Q(Q(1)/Q(Y(e)));N[b+8>>2]=n*e;N[b+4>>2]=h*e;N[b>>2]=i*e;Za(d+16|0,a,b);c=J[d+28>>2];J[b+24>>2]=J[d+24>>2];J[b+28>>2]=c;c=J[d+20>>2];J[b+16>>2]=J[d+16>>2];J[b+20>>2]=c;f=1;if(eb(a)){break a}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;f=J[b+(c<<2)>>2];J[((J[a+364>>2]<<2)+a|0)+348>>2]=f;j=J[a+372>>2];b=J[j+32>>2];c=(b<<2)+j|0;J[c>>2]=f;J[c+16>>2]=0;J[j+32>>2]=b+1;J[f+12>>2]=0;N[f+8>>2]=e*Q(-n);N[f+4>>2]=e*Q(-h);N[f>>2]=e*Q(-i);Za(d+16|0,a,f);c=J[d+28>>2];J[f+24>>2]=J[d+24>>2];J[f+28>>2]=c;c=J[d+20>>2];J[f+16>>2]=J[d+16>>2];J[f+20>>2]=c;f=1;if(eb(a)){break a}b=J[a+372>>2];c=J[b+32>>2]-1|0;J[b+32>>2]=c;b=J[b+(c<<2)>>2];c=J[a+364>>2];J[a+364>>2]=c+1;J[((c<<2)+a|0)+348>>2]=b;break b}j=J[k>>2];b=J[k+12>>2];h=N[b+16>>2];p=Q(N[j+16>>2]-h);c=J[k+4>>2];m=N[b+20>>2];r=Q(N[c+20>>2]-m);a=J[k+8>>2];e=N[b+24>>2];q=Q(N[a+24>>2]-e);n=Q(N[j+20>>2]-m);o=Q(N[c+24>>2]-e);i=Q(N[a+16>>2]-h);l=Q(N[j+24>>2]-e);h=Q(N[c+16>>2]-h);e=Q(N[a+20>>2]-m);e=Q(Q(Q(Q(p*r)*q)+Q(Q(Q(Q(Q(n*o)*i)+Q(Q(l*h)*e))-Q(Q(o*p)*e))-Q(Q(h*n)*q)))-Q(Q(r*l)*i));f=1;if(e>Q(0)|e<Q(0)){break a}}f=0}ga=d+32|0;return f}function lk(a){var b=0,c=0,d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=0,y=Q(0),z=0,A=0,B=Q(0),C=Q(0),D=0,E=Q(0),F=0,G=Q(0),I=Q(0),L=0,M=0,O=0,P=0,R=0,S=0,T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=0,_=Q(0),$=0;d=ga-192|0;ga=d;ya(2603);c=J[a+1112>>2];if((c|0)>0){P=a+1048|0;Z=J[5806];_=N[5805];w=d+144|4;while(1){b=J[J[a+1120>>2]+(L<<2)>>2];F=J[b+24>>2];if(F){J[w+40>>2]=0;J[w+32>>2]=0;J[w+36>>2]=0;J[w+24>>2]=0;J[w+28>>2]=0;J[w+16>>2]=0;J[w+20>>2]=0;J[w+8>>2]=0;J[w+12>>2]=0;J[w>>2]=0;J[w+4>>2]=0;J[d+184>>2]=966609233;J[d+164>>2]=961656599;J[d+144>>2]=953267991;x=J[b+24>>2];R=(x|0)<=0;a:{if(R){j=Q(0);f=Q(0);g=Q(0);break a}$=x&1;e=J[b+32>>2];z=J[b+12>>2];b:{if((x|0)==1){g=Q(0);c=0;f=Q(0);j=Q(0);break b}M=x&-2;g=Q(0);c=0;f=Q(0);j=Q(0);D=0;while(1){A=c<<2;O=J[A+e>>2];k=N[z+A>>2];S=A|4;A=J[e+S>>2];i=N[z+S>>2];j=Q(Q(j+Q(N[O+8>>2]*k))+Q(N[A+8>>2]*i));g=Q(Q(g+Q(k*N[O+16>>2]))+Q(i*N[A+16>>2]));f=Q(Q(f+Q(k*N[O+12>>2]))+Q(i*N[A+12>>2]));c=c+2|0;D=D+2|0;if((M|0)!=(D|0)){continue}break}}if(!$){break a}M=e;e=c<<2;c=J[M+e>>2];k=N[e+z>>2];j=Q(j+Q(N[c+8>>2]*k));g=Q(g+Q(k*N[c+16>>2]));f=Q(f+Q(k*N[c+12>>2]))}J[b+240>>2]=0;l=g;g=N[b+128>>2];q=Q(l*g);N[b+236>>2]=q;p=Q(f*g);N[b+232>>2]=p;u=Q(j*g);N[b+228>>2]=u;if(!R){D=J[b+52>>2];A=J[b+32>>2];c=0;m=Q(9999999747378752e-20);j=Q(.00019999999494757503);f=Q(0);g=Q(.00029999998514540493);i=N[d+168>>2];h=N[d+160>>2];n=N[d+152>>2];l=N[d+148>>2];k=Q(0);while(1){z=J[A+(c<<2)>>2];s=N[z+16>>2];v=N[z+12>>2];e=D+(c<<4)|0;r=N[e>>2];t=N[e+4>>2];o=Q(N[z+8>>2]-u);n=Q(Q(o*N[e+8>>2])+n);N[d+152>>2]=n;l=Q(Q(o*t)+l);N[d+148>>2]=l;m=Q(Q(o*r)+m);N[d+144>>2]=m;r=N[e>>2];t=N[e+4>>2];o=Q(v-p);i=Q(Q(o*N[e+8>>2])+i);N[d+168>>2]=i;j=Q(Q(o*t)+j);N[d+164>>2]=j;h=Q(Q(o*r)+h);N[d+160>>2]=h;v=N[e>>2];r=N[e+4>>2];o=Q(s-q);g=Q(Q(o*N[e+8>>2])+g);N[d+184>>2]=g;f=Q(Q(o*r)+f);N[d+180>>2]=f;k=Q(Q(o*v)+k);N[d+176>>2]=k;c=c+1|0;if((x|0)!=(c|0)){continue}break}}if(!K[33308]){J[8326]=Z;N[8325]=_;H[33308]=1}Qj(d+144|0,d+96|0,d+48|0);c=J[b+240>>2];J[b+116>>2]=J[b+236>>2];J[b+120>>2]=c;c=J[b+232>>2];J[b+108>>2]=J[b+228>>2];J[b+112>>2]=c;c=J[d+108>>2];J[b+68>>2]=J[d+104>>2];J[b+72>>2]=c;c=J[d+100>>2];J[b+60>>2]=J[d+96>>2];J[b+64>>2]=c;c=J[d+124>>2];J[b+84>>2]=J[d+120>>2];J[b+88>>2]=c;c=J[d+116>>2];J[b+76>>2]=J[d+112>>2];J[b+80>>2]=c;c=J[d+132>>2];J[b+92>>2]=J[d+128>>2];J[b+96>>2]=c;c=J[d+140>>2];J[b+100>>2]=J[d+136>>2];J[b+104>>2]=c;f=N[b+68>>2];g=N[b- -64>>2];j=N[b+84>>2];i=N[b+76>>2];k=N[b+80>>2];n=N[b+172>>2];l=N[b+140>>2];p=N[b+156>>2];u=N[b+148>>2];s=N[b+164>>2];m=N[b+100>>2];v=N[b+168>>2];o=N[b+92>>2];r=N[b+136>>2];q=N[b+96>>2];t=N[b+152>>2];h=N[b+60>>2];G=N[b+132>>2];J[b+316>>2]=0;J[b+320>>2]=0;J[b+224>>2]=0;J[b+208>>2]=0;J[b+192>>2]=0;J[b+324>>2]=0;J[b+328>>2]=0;J[b+332>>2]=0;J[b+336>>2]=0;J[b+340>>2]=0;J[b+344>>2]=0;y=Q(Q(n*m)+Q(Q(l*o)+Q(p*q)));B=Q(Q(s*m)+Q(Q(G*o)+Q(u*q)));C=Q(Q(v*m)+Q(Q(r*o)+Q(t*q)));T=Q(Q(m*y)+Q(Q(o*B)+Q(q*C)));N[b+220>>2]=T;U=Q(Q(j*y)+Q(Q(i*B)+Q(k*C)));N[b+216>>2]=U;V=Q(Q(f*y)+Q(Q(h*B)+Q(g*C)));N[b+212>>2]=V;y=Q(Q(n*j)+Q(Q(l*i)+Q(p*k)));B=Q(Q(s*j)+Q(Q(G*i)+Q(u*k)));C=Q(Q(v*j)+Q(Q(r*i)+Q(t*k)));W=Q(Q(m*y)+Q(Q(o*B)+Q(q*C)));N[b+204>>2]=W;X=Q(Q(j*y)+Q(Q(i*B)+Q(k*C)));N[b+200>>2]=X;y=Q(Q(f*y)+Q(Q(h*B)+Q(g*C)));N[b+196>>2]=y;n=Q(Q(n*f)+Q(Q(l*h)+Q(g*p)));l=Q(Q(s*f)+Q(Q(G*h)+Q(u*g)));p=Q(Q(v*f)+Q(Q(r*h)+Q(g*t)));v=Q(Q(m*n)+Q(Q(o*l)+Q(q*p)));N[b+188>>2]=v;r=Q(Q(j*n)+Q(Q(i*l)+Q(p*k)));N[b+184>>2]=r;t=Q(Q(f*n)+Q(Q(h*l)+Q(g*p)));N[b+180>>2]=t;c:{if((F|0)<=0){f=Q(0);g=Q(0);i=Q(0);h=Q(0);n=Q(0);l=Q(0);break c}x=J[b+32>>2];G=N[b+236>>2];B=N[b+232>>2];C=N[b+228>>2];z=J[b+12>>2];c=0;f=Q(0);g=Q(0);i=Q(0);h=Q(0);n=Q(0);l=Q(0);while(1){D=c<<2;e=J[D+x>>2];E=N[e+44>>2];s=N[e+48>>2];p=N[z+D>>2];u=Q(N[e+40>>2]*p);l=Q(u+l);N[b+316>>2]=l;s=Q(p*s);h=Q(s+h);N[b+324>>2]=h;p=Q(p*E);n=Q(p+n);N[b+320>>2]=n;E=N[e+16>>2];Y=Q(N[e+8>>2]-C);I=Q(N[e+12>>2]-B);f=Q(Q(Q(Y*p)-Q(u*I))+f);N[b+340>>2]=f;E=Q(E-G);g=Q(Q(Q(E*u)-Q(s*Y))+g);N[b+336>>2]=g;i=Q(i+Q(Q(I*s)-Q(p*E)));N[b+332>>2]=i;c=c+1|0;if((F|0)!=(c|0)){continue}break}}J[b+328>>2]=0;J[b+344>>2]=0;p=N[b+128>>2];I=Q(p*h);h=Q(Q(1)-N[b+356>>2]);N[b+324>>2]=I*h;N[b+320>>2]=Q(p*n)*h;N[b+316>>2]=Q(l*p)*h;h=Q(Q(1)-N[b+360>>2]);N[b+340>>2]=h*Q(Q(T*f)+Q(Q(V*i)+Q(g*U)));N[b+336>>2]=Q(Q(W*f)+Q(Q(y*i)+Q(g*X)))*h;N[b+332>>2]=Q(Q(v*f)+Q(Q(t*i)+Q(r*g)))*h;qa(b+244|0,0,72);d:{f=N[b+364>>2];if(!(f>Q(0))|J[b+24>>2]<=0){break d}c=0;while(1){e=J[b+52>>2]+(c<<4)|0;g=N[e+8>>2];i=N[e>>2];h=N[e+4>>2];n=N[b+108>>2];l=N[b+68>>2];p=N[b+60>>2];u=N[b+64>>2];s=N[b+112>>2];v=N[b+76>>2];r=N[b+116>>2];e=J[J[b+32>>2]+(c<<2)>>2];J[e+20>>2]=0;t=N[e+16>>2];N[e+16>>2]=t+Q(f*Q(Q(r+Q(Q(g*m)+Q(Q(i*o)+Q(h*q))))-t));m=N[e+12>>2];N[e+12>>2]=m+Q(f*Q(Q(s+Q(Q(g*j)+Q(Q(i*v)+Q(h*k))))-m));j=N[e+8>>2];N[e+8>>2]=j+Q(f*Q(Q(n+Q(Q(g*l)+Q(Q(i*p)+Q(h*u))))-j));c=c+1|0;if((c|0)>=J[b+24>>2]){break d}f=N[b+364>>2];m=N[b+100>>2];q=N[b+96>>2];o=N[b+92>>2];j=N[b+84>>2];k=N[b+80>>2];continue}}e:{if(!K[b+377|0]){break e}c=1;x=J[b+32>>2];e=J[x>>2];f=N[e+8>>2];g=f;i=N[e+12>>2];h=i;n=N[e+16>>2];l=n;k=N[e+20>>2];j=k;if((F|0)>1){while(1){e=J[x+(c<<2)>>2];m=N[e+8>>2];f=f<m?m:f;g=g>m?m:g;m=N[e+20>>2];k=k<m?m:k;o=N[e+16>>2];n=n<o?o:n;q=N[e+12>>2];i=i<q?q:i;j=j>m?m:j;l=l>o?o:l;h=h>q?q:h;c=c+1|0;if((F|0)!=(c|0)){continue}break}}N[d+44>>2]=k;N[d+40>>2]=n;N[d+36>>2]=i;N[d+32>>2]=f;N[d+28>>2]=j;N[d+24>>2]=l;N[d+20>>2]=h;N[d+16>>2]=g;c=J[b+348>>2];if(c){j=N[b+316>>2];g=N[b+320>>2];k=N[b+324>>2];f=N[a+452>>2];J[d+12>>2]=0;N[d+8>>2]=Q(f*k)*Q(3);N[d+4>>2]=Q(f*g)*Q(3);N[d>>2]=Q(j*f)*Q(3);Cd(P,c,d+16|0,d,N[a+464>>2]);break e}J[b+348>>2]=Db(P,d+16|0,b)}c=J[a+1112>>2]}L=L+1|0;if((L|0)<(c|0)){continue}break}}xa();ga=d+192|0}function yo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=ga-800|0;ga=f;J[f+796>>2]=a;J[f+792>>2]=b;J[f+788>>2]=c;J[f+784>>2]=d;J[f+780>>2]=e;a=J[f+796>>2];c=J[f+784>>2];b=ga-16|0;J[b+12>>2]=J[f+792>>2];d=J[b+12>>2];J[b+12>>2]=J[f+792>>2];e=J[b+12>>2]+4|0;J[b+12>>2]=J[f+792>>2];g=f+744|0;na(g,d,e,J[b+12>>2]+8|0);b=f+760|0;za(b,c,g);c=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+792>>2];h=f+712|0;na(h,d,e,J[g+12>>2]+8|0);d=f+728|0;za(d,c,h);ia[J[J[a>>2]+8>>2]](a,b,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+680|0;na(g,c,d,J[e+12>>2]+8|0);c=f+696|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+792>>2];h=f+648|0;na(h,d,e,J[g+12>>2]+8|0);d=f+664|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+616|0;na(g,c,d,J[e+12>>2]+8|0);c=f+632|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+792>>2];h=f+584|0;na(h,d,e,J[g+12>>2]+8|0);d=f+600|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+552|0;na(g,c,d,J[e+12>>2]+8|0);c=f+568|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+792>>2];h=f+520|0;na(h,d,e,J[g+12>>2]+8|0);d=f+536|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+488|0;na(g,c,d,J[e+12>>2]+8|0);c=f+504|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+456|0;na(h,d,e,J[g+12>>2]+8|0);d=f+472|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+424|0;na(g,c,d,J[e+12>>2]+8|0);c=f+440|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+392|0;na(h,d,e,J[g+12>>2]+8|0);d=f+408|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+360|0;na(g,c,d,J[e+12>>2]+8|0);c=f+376|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+328|0;na(h,d,e,J[g+12>>2]+8|0);d=f+344|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+792>>2];g=f+296|0;na(g,c,d,J[e+12>>2]+8|0);c=f+312|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+264|0;na(h,d,e,J[g+12>>2]+8|0);d=f+280|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+788>>2];g=f+232|0;na(g,c,d,J[e+12>>2]+8|0);c=f+248|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+200|0;na(h,d,e,J[g+12>>2]+8|0);d=f+216|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+788>>2];g=f+168|0;na(g,c,d,J[e+12>>2]+8|0);c=f+184|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+136|0;na(h,d,e,J[g+12>>2]+8|0);d=f+152|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+788>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+788>>2];g=f+104|0;na(g,c,d,J[e+12>>2]+8|0);c=f+120|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+788>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+72|0;na(h,d,e,J[g+12>>2]+8|0);d=f+88|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);b=J[f+784>>2];c=ga-16|0;J[c+12>>2]=J[f+792>>2];c=J[c+12>>2];d=ga-16|0;J[d+12>>2]=J[f+788>>2];d=J[d+12>>2]+4|0;e=ga-16|0;J[e+12>>2]=J[f+788>>2];g=f+40|0;na(g,c,d,J[e+12>>2]+8|0);c=f+56|0;za(c,b,g);b=J[f+784>>2];d=ga-16|0;J[d+12>>2]=J[f+792>>2];d=J[d+12>>2];e=ga-16|0;J[e+12>>2]=J[f+792>>2];e=J[e+12>>2]+4|0;g=ga-16|0;J[g+12>>2]=J[f+788>>2];h=f+8|0;na(h,d,e,J[g+12>>2]+8|0);d=f+24|0;za(d,b,h);ia[J[J[a>>2]+8>>2]](a,c,d,J[f+780>>2]);ga=f+800|0}function pd(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),E=Q(0),F=Q(0),G=Q(0),I=0,L=0,M=0,O=0,P=0,S=0,V=0,W=0,X=0,Z=0,_=0,$=0,aa=0;f=N[b+52>>2];e=N[b+56>>2];p=N[a+96>>2];s=N[a+100>>2];t=N[a+104>>2];q=N[b+20>>2];r=N[b+24>>2];k=N[a- -64>>2];o=N[a+80>>2];u=N[a+52>>2];l=N[a+68>>2];v=N[a+84>>2];h=N[a+56>>2];w=N[b+36>>2];i=N[a+72>>2];y=N[b+40>>2];m=N[a+88>>2];d=N[b+48>>2];g=N[b+8>>2];z=N[b>>2];A=N[b+4>>2];B=N[b+16>>2];n=N[a+48>>2];j=N[b+32>>2];J[a+1124>>2]=0;J[a+1108>>2]=0;J[a+1092>>2]=0;J[a+1076>>2]=0;M=a+1104|0;N[M>>2]=Q(m*y)+Q(Q(h*j)+Q(i*w));O=a+1100|0;N[O>>2]=Q(v*y)+Q(Q(u*j)+Q(l*w));P=a+1096|0;N[P>>2]=Q(o*y)+Q(Q(n*j)+Q(k*w));S=a+1088|0;N[S>>2]=Q(m*r)+Q(Q(h*B)+Q(i*q));V=a+1084|0;N[V>>2]=Q(v*r)+Q(Q(u*B)+Q(l*q));W=a+1080|0;N[W>>2]=Q(o*r)+Q(Q(n*B)+Q(k*q));X=a+1072|0;N[X>>2]=Q(m*g)+Q(Q(h*z)+Q(A*i));Z=a+1068|0;N[Z>>2]=Q(v*g)+Q(Q(u*z)+Q(A*l));N[a+1064>>2]=Q(o*g)+Q(Q(n*z)+Q(k*A));_=a+1120|0;N[_>>2]=e+Q(Q(t*y)+Q(Q(p*j)+Q(w*s)));$=a+1116|0;N[$>>2]=f+Q(Q(t*r)+Q(Q(p*B)+Q(q*s)));aa=a+1112|0;N[aa>>2]=d+Q(Q(t*g)+Q(Q(p*z)+Q(A*s)));f=N[c+52>>2];e=N[c+56>>2];p=N[a+160>>2];s=N[a+164>>2];t=N[a+168>>2];q=N[c+20>>2];r=N[c+24>>2];k=N[a+128>>2];o=N[a+144>>2];u=N[a+116>>2];l=N[a+132>>2];v=N[a+148>>2];h=N[a+120>>2];i=N[a+136>>2];w=N[c+36>>2];m=N[a+152>>2];y=N[c+40>>2];d=N[c+48>>2];g=N[c+8>>2];z=N[c>>2];A=N[c+4>>2];B=N[c+16>>2];n=N[a+112>>2];j=N[c+32>>2];J[a+1188>>2]=0;J[a+1172>>2]=0;J[a+1156>>2]=0;J[a+1140>>2]=0;N[a+1168>>2]=Q(m*y)+Q(Q(h*j)+Q(i*w));N[a+1164>>2]=Q(v*y)+Q(Q(u*j)+Q(l*w));N[a+1160>>2]=Q(o*y)+Q(Q(n*j)+Q(k*w));N[a+1152>>2]=Q(m*r)+Q(Q(h*B)+Q(i*q));N[a+1148>>2]=Q(v*r)+Q(Q(u*B)+Q(l*q));N[a+1144>>2]=Q(o*r)+Q(Q(n*B)+Q(k*q));N[a+1136>>2]=Q(m*g)+Q(Q(h*z)+Q(A*i));N[a+1132>>2]=Q(v*g)+Q(Q(u*z)+Q(A*l));N[a+1128>>2]=Q(o*g)+Q(Q(n*z)+Q(k*A));I=a+1184|0;N[I>>2]=e+Q(Q(t*y)+Q(Q(p*j)+Q(w*s)));c=a+1180|0;N[c>>2]=f+Q(Q(t*r)+Q(Q(p*B)+Q(q*s)));b=a+1176|0;N[b>>2]=d+Q(Q(t*g)+Q(Q(p*z)+Q(A*s)));J[a+1268>>2]=0;s=N[X>>2];o=N[W>>2];u=N[O>>2];l=N[P>>2];v=N[V>>2];f=Q(Q(o*u)-Q(l*v));t=N[a+1064>>2];h=N[M>>2];i=N[S>>2];e=Q(Q(v*h)-Q(u*i));k=N[Z>>2];d=Q(Q(i*l)-Q(h*o));j=Q(Q(1)/Q(Q(s*f)+Q(Q(t*e)+Q(k*d))));m=Q(N[I>>2]-N[_>>2]);n=Q(N[b>>2]-N[aa>>2]);g=Q(Q(f*j)*n);f=Q(N[c>>2]-N[$>>2]);p=Q(Q(Q(Q(Q(t*v)-Q(o*k))*j)*m)+Q(g+Q(f*Q(Q(Q(k*l)-Q(u*t))*j))));N[a+1264>>2]=p;l=Q(Q(Q(Q(Q(s*o)-Q(i*t))*j)*m)+Q(Q(Q(d*j)*n)+Q(f*Q(Q(Q(t*h)-Q(l*s))*j))));N[a+1260>>2]=l;f=Q(Q(Q(Q(Q(k*i)-Q(v*s))*j)*m)+Q(Q(Q(e*j)*n)+Q(f*Q(Q(Q(s*u)-Q(h*k))*j))));N[a+1256>>2]=f;N[a+840>>2]=f;e=N[a+680>>2];d=N[a+696>>2];a:{if(!(e>d)){if(e>f){J[a+856>>2]=2;d=Q(f-e);break a}if(d<f){J[a+856>>2]=1;d=Q(f-d);break a}}J[a+856>>2]=0;d=Q(0)}N[a+844>>2]=l;N[a+824>>2]=d;e=N[a+684>>2];d=N[a+700>>2];b:{if(!(e>d)){c:{if(!(e>l)){if(!(d<l)){break c}J[a+860>>2]=1;d=Q(l-d);break b}J[a+860>>2]=2;d=Q(l-e);break b}}J[a+860>>2]=0;d=Q(0)}N[a+848>>2]=p;N[a+828>>2]=d;e=N[a+688>>2];d=N[a+704>>2];d:{if(!(e>d)){e:{if(!(e>p)){if(!(d<p)){break e}J[a+864>>2]=1;d=Q(p-d);break d}J[a+864>>2]=2;d=Q(p-e);break d}}J[a+864>>2]=0;d=Q(0)}N[a+832>>2]=d;C=N[a+1072>>2];g=N[a+1080>>2];z=N[a+1100>>2];A=N[a+1096>>2];k=N[a+1084>>2];o=Q(Q(g*z)-Q(A*k));w=N[a+1064>>2];F=N[a+1104>>2];G=N[a+1088>>2];e=Q(Q(k*F)-Q(z*G));y=N[a+1068>>2];d=Q(Q(G*A)-Q(F*g));E=Q(Q(1)/Q(Q(C*o)+Q(Q(w*e)+Q(y*d))));B=N[a+1164>>2];u=Q(Q(Q(C*g)-Q(G*w))*E);j=N[a+1132>>2];l=Q(d*E);v=Q(Q(Q(w*F)-Q(A*C))*E);p=N[a+1148>>2];s=Q(Q(B*u)+Q(Q(j*l)+Q(v*p)));h=Q(Q(Q(y*G)-Q(k*C))*E);i=Q(e*E);m=Q(Q(Q(C*z)-Q(F*y))*E);t=Q(Q(B*h)+Q(Q(j*i)+Q(m*p)));n=Q(-C);f=Q(-G);q=N[a+1160>>2];k=Q(Q(Q(w*k)-Q(g*y))*E);r=N[a+1128>>2];o=Q(o*E);g=N[a+1144>>2];e=Q(Q(Q(y*A)-Q(z*w))*E);d=Q(Q(q*k)+Q(Q(r*o)+Q(g*e)));f:{g:{if(d<Q(1)){if(d>Q(-1)){N[a+1192>>2]=$a(Q(-Q(Q(B*k)+Q(Q(j*o)+Q(e*p)))),Q(Q(N[a+1168>>2]*k)+Q(Q(N[a+1136>>2]*o)+Q(e*N[a+1152>>2]))));c=a+1196|0;e=Q(T(Q(U(d,Q(-1))),Q(1)));b=(D(e),x(2));I=b&2147483647;h:{if(I>>>0>=1065353216){d=Q(+e*1.5707963267948966+7.52316384526264e-37);if((I|0)==1065353216){break h}d=Q(Q(0)/Q(e-e));break h}i:{if(I>>>0<=1056964607){if(I-8388608>>>0<956301312){break i}d=Q(e*e);d=Q(Q(e*Q(Q(Q(Q(d*Q(Q(d*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*d)/Q(Q(d*Q(-.7066296339035034))+Q(1))))+e);break h}d=Q(Q(Q(1)-Q(R(e)))*Q(.5));L=Y(+d);L=L+L*+Q(Q(Q(Q(d*Q(Q(d*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*d)/Q(Q(d*Q(-.7066296339035034))+Q(1)));d=Q(1.5707963267948966-(L+L));e=(b|0)>=0?d:Q(-d)}d=e}N[c>>2]=d;d=$a(Q(-Q(Q(q*u)+Q(Q(r*l)+Q(g*v)))),Q(Q(q*h)+Q(Q(r*i)+Q(g*m))));break f}J[a+1196>>2]=-1077342245;N[a+1192>>2]=-$a(t,s);break g}J[a+1196>>2]=1070141403;N[a+1192>>2]=$a(t,s)}d=Q(0)}J[a+1236>>2]=0;N[a+1200>>2]=d;J[a+1252>>2]=0;J[a+1220>>2]=0;h=Q(Q(C*g)+Q(r*f));i=Q(Q(G*q)-Q(g*F));m=Q(Q(F*r)+Q(q*n));d=Q(Q(1)/Q(Y(Q(Q(h*h)+Q(Q(i*i)+Q(m*m))))));N[a+1232>>2]=h*d;N[a+1228>>2]=m*d;N[a+1224>>2]=i*d;f=Q(Q(r*m)-Q(i*g));e=Q(Q(g*h)-Q(m*q));d=Q(Q(q*i)-Q(h*r));n=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(e*e)+Q(d*d))))));N[a+1248>>2]=f*n;N[a+1244>>2]=d*n;N[a+1240>>2]=e*n;f=Q(Q(i*G)-Q(C*m));e=Q(Q(m*F)-Q(G*h));d=Q(Q(h*C)-Q(F*i));n=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(e*e)+Q(d*d))))));N[a+1216>>2]=f*n;N[a+1212>>2]=d*n;N[a+1208>>2]=e*n;if(K[a+1301|0]){d=N[J[a+28>>2]+344>>2];e=N[J[a+32>>2]+344>>2];H[a+1280|0]=d<Q(1.1920928955078125e-7)|e<Q(1.1920928955078125e-7);d=Q(d+e);d=d>Q(0)?Q(e/d):Q(.5);N[a+1272>>2]=d;N[a+1276>>2]=Q(1)-d}}function TB(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=0,v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=0,F=0;a=ga-4240|0;ga=a;F=J[c+4>>2]-17>>>0<=1?J[d+4>>2]-17>>>0<2:F;while(1){Je();q=w<<4;k=N[q+30888>>2];n=N[q+30880>>2];l=N[q+30884>>2];r=N[e+32>>2];s=N[e>>2];t=N[e+16>>2];p=N[e+36>>2];x=N[e+4>>2];y=N[e+20>>2];z=N[e+40>>2];m=N[e+8>>2];A=N[e+24>>2];u=q+(a+1264|0)|0;J[u+12>>2]=0;B=m;m=Q(-n);N[u+8>>2]=Q(Q(B*m)-Q(A*l))-Q(z*k);N[u+4>>2]=Q(Q(x*m)-Q(y*l))-Q(p*k);N[u>>2]=Q(Q(s*m)-Q(t*l))-Q(r*k);m=N[f+32>>2];r=N[f>>2];s=N[f+16>>2];t=N[f+36>>2];p=N[f+4>>2];x=N[f+20>>2];y=N[f+40>>2];z=N[f+8>>2];A=N[f+24>>2];q=q+(a+272|0)|0;J[q+12>>2]=0;N[q+8>>2]=Q(y*k)+Q(Q(z*n)+Q(l*A));N[q+4>>2]=Q(t*k)+Q(Q(p*n)+Q(l*x));N[q>>2]=Q(m*k)+Q(Q(r*n)+Q(l*s));w=w+1|0;if((w|0)!=42){continue}break}q=42;E=ia[J[J[c>>2]+84>>2]](c)|0;if((E|0)>0){u=a+3256|0;w=0;while(1){ia[J[J[c>>2]+88>>2]](c,w,a+3248|0);m=N[e+8>>2];r=N[e>>2];s=N[e+4>>2];t=N[e+24>>2];p=N[e+16>>2];x=N[e+20>>2];k=N[u>>2];l=N[a+3248>>2];n=N[a+3252>>2];N[u>>2]=Q(N[e+40>>2]*k)+Q(Q(N[e+32>>2]*l)+Q(n*N[e+36>>2]));J[a+3260>>2]=0;N[a+3252>>2]=Q(t*k)+Q(Q(p*l)+Q(n*x));N[a+3248>>2]=Q(m*k)+Q(Q(r*l)+Q(s*n));Je();C=J[u+4>>2];o=q<<4;v=o+30888|0;J[v>>2]=J[u>>2];J[v+4>>2]=C;C=J[a+3252>>2];v=o+30880|0;J[v>>2]=J[a+3248>>2];J[v+4>>2]=C;r=N[e+32>>2];s=N[e>>2];t=N[e+16>>2];p=N[e+36>>2];x=N[e+4>>2];y=N[e+20>>2];l=N[e+40>>2];k=N[e+8>>2];z=N[e+24>>2];v=o+(a+1264|0)|0;J[v+12>>2]=0;n=N[a+3248>>2];m=Q(-n);D=Q(k*m);k=N[a+3252>>2];B=l;l=N[u>>2];N[v+8>>2]=Q(D-Q(z*k))-Q(B*l);N[v+4>>2]=Q(Q(x*m)-Q(y*k))-Q(p*l);N[v>>2]=Q(Q(s*m)-Q(t*k))-Q(r*l);m=N[f+32>>2];r=N[f>>2];s=N[f+16>>2];t=N[f+36>>2];p=N[f+4>>2];x=N[f+20>>2];y=N[f+40>>2];z=N[f+8>>2];A=N[f+24>>2];o=o+(a+272|0)|0;J[o+12>>2]=0;N[o+8>>2]=Q(y*l)+Q(Q(z*n)+Q(k*A));N[o+4>>2]=Q(t*l)+Q(Q(p*n)+Q(k*x));N[o>>2]=Q(m*l)+Q(Q(r*n)+Q(k*s));q=q+1|0;w=w+1|0;if((E|0)!=(w|0)){continue}break}}E=ia[J[J[d>>2]+84>>2]](d)|0;if((E|0)>0){u=a+3256|0;w=0;while(1){ia[J[J[d>>2]+88>>2]](d,w,a+3248|0);m=N[f+8>>2];r=N[f>>2];s=N[f+4>>2];t=N[f+24>>2];p=N[f+16>>2];x=N[f+20>>2];k=N[u>>2];l=N[a+3248>>2];n=N[a+3252>>2];N[u>>2]=Q(N[f+40>>2]*k)+Q(Q(N[f+32>>2]*l)+Q(n*N[f+36>>2]));J[a+3260>>2]=0;N[a+3252>>2]=Q(t*k)+Q(Q(p*l)+Q(n*x));N[a+3248>>2]=Q(m*k)+Q(Q(r*l)+Q(s*n));Je();C=J[u+4>>2];o=q<<4;v=o+30888|0;J[v>>2]=J[u>>2];J[v+4>>2]=C;C=J[a+3252>>2];v=o+30880|0;J[v>>2]=J[a+3248>>2];J[v+4>>2]=C;r=N[e+32>>2];s=N[e>>2];t=N[e+16>>2];p=N[e+36>>2];x=N[e+4>>2];y=N[e+20>>2];l=N[e+40>>2];k=N[e+8>>2];z=N[e+24>>2];v=o+(a+1264|0)|0;J[v+12>>2]=0;n=N[a+3248>>2];m=Q(-n);D=Q(k*m);k=N[a+3252>>2];B=l;l=N[u>>2];N[v+8>>2]=Q(D-Q(z*k))-Q(B*l);N[v+4>>2]=Q(Q(x*m)-Q(y*k))-Q(p*l);N[v>>2]=Q(Q(s*m)-Q(t*k))-Q(r*l);m=N[f+32>>2];r=N[f>>2];s=N[f+16>>2];t=N[f+36>>2];p=N[f+4>>2];x=N[f+20>>2];y=N[f+40>>2];z=N[f+8>>2];A=N[f+24>>2];o=o+(a+272|0)|0;J[o+12>>2]=0;N[o+8>>2]=Q(y*l)+Q(Q(z*n)+Q(k*A));N[o+4>>2]=Q(t*l)+Q(Q(p*n)+Q(k*x));N[o>>2]=Q(m*l)+Q(Q(r*n)+Q(k*s));q=q+1|0;w=w+1|0;if((E|0)!=(w|0)){continue}break}}ia[J[J[c>>2]+76>>2]](c,a+1264|0,a+3248|0,q);ia[J[J[d>>2]+76>>2]](d,a+272|0,a+2256|0,q);a:{if((q|0)<=0){m=Q(0xde0b6b000000000);k=Q(0);l=Q(0);n=Q(0);x=Q(0);break a}w=0;m=Q(0xde0b6b000000000);x=Q(0);n=Q(0);l=Q(0);k=Q(0);while(1){Je();u=w<<4;r=F?Q(0):N[u+30888>>2];s=N[u+30880>>2];t=N[u+30884>>2];b:{if(!(+Q(Q(r*r)+Q(Q(s*s)+Q(t*t)))>.01)){break b}o=u+(a+2256|0)|0;p=N[o+8>>2];y=N[o>>2];z=N[o+4>>2];o=u+(a+3248|0)|0;A=N[o+8>>2];D=N[o>>2];B=N[o+4>>2];p=Q(Q(r*(F?Q(0):Q(Q(Q(Q(p*N[f+40>>2])+Q(Q(y*N[f+32>>2])+Q(z*N[f+36>>2])))+N[f+56>>2])-Q(Q(Q(A*N[e+40>>2])+Q(Q(D*N[e+32>>2])+Q(B*N[e+36>>2])))+N[e+56>>2]))))+Q(Q(s*Q(Q(Q(Q(p*N[f+8>>2])+Q(Q(y*N[f>>2])+Q(z*N[f+4>>2])))+N[f+48>>2])-Q(Q(Q(A*N[e+8>>2])+Q(Q(D*N[e>>2])+Q(B*N[e+4>>2])))+N[e+48>>2])))+Q(t*Q(Q(Q(Q(p*N[f+24>>2])+Q(Q(y*N[f+16>>2])+Q(z*N[f+20>>2])))+N[f+52>>2])-Q(Q(Q(A*N[e+24>>2])+Q(Q(D*N[e+16>>2])+Q(B*N[e+20>>2])))+N[e+52>>2])))));if(!(p<m)){break b}x=N[u+30892>>2];k=s;l=t;n=r;m=p}w=w+1|0;if((w|0)!=(q|0)){continue}break}}Dc(c);Dc(d);q=0;if(!(m<Q(0))){r=Dc(c);s=Dc(d);b=Bg(a+192|0,c,d,b,0);t=N[e+52>>2];p=N[e+56>>2];y=N[e+48>>2];d=J[e+12>>2];c=a- -64|0;J[c>>2]=J[e+8>>2];J[c+4>>2]=d;c=J[e+4>>2];J[a+56>>2]=J[e>>2];J[a+60>>2]=c;c=J[e+28>>2];J[a+80>>2]=J[e+24>>2];J[a+84>>2]=c;c=J[e+20>>2];J[a+72>>2]=J[e+16>>2];J[a+76>>2]=c;c=J[e+40>>2];d=J[e+44>>2];w=J[e+32>>2];e=J[e+36>>2];J[a+116>>2]=0;m=Q(m+Q(Q(r+s)+Q(.5)));N[a+112>>2]=p+Q(n*m);N[a+108>>2]=t+Q(l*m);J[a+96>>2]=c;J[a+100>>2]=d;N[a+104>>2]=y+Q(k*m);J[a+88>>2]=w;J[a+92>>2]=e;c=J[f+12>>2];J[a+128>>2]=J[f+8>>2];J[a+132>>2]=c;c=J[f+4>>2];J[a+120>>2]=J[f>>2];J[a+124>>2]=c;c=J[f+28>>2];J[a+144>>2]=J[f+24>>2];J[a+148>>2]=c;c=J[f+20>>2];J[a+136>>2]=J[f+16>>2];J[a+140>>2]=c;c=J[f+44>>2];J[a+160>>2]=J[f+40>>2];J[a+164>>2]=c;c=J[f+36>>2];J[a+152>>2]=J[f+32>>2];J[a+156>>2]=c;c=J[f+60>>2];J[a+176>>2]=J[f+56>>2];J[a+180>>2]=c;c=J[f+52>>2];J[a+168>>2]=J[f+48>>2];J[a+172>>2]=c;J[a+184>>2]=1566444395;H[a+48|0]=0;J[a+8>>2]=18660;J[b+16>>2]=0;N[b+12>>2]=-n;N[b+8>>2]=-l;N[b+4>>2]=-k;zb(b,a+56|0,a+8|0,j,0);b=K[a+48|0];if(b){r=N[a+44>>2];s=N[a+32>>2];t=N[a+36>>2];p=N[a+28>>2];J[h+12>>2]=0;m=Q(m-r);N[h>>2]=p-Q(k*m);N[h+8>>2]=t-Q(n*m);N[h+4>>2]=s-Q(l*m);c=J[a+40>>2];J[i+8>>2]=J[a+36>>2];J[i+12>>2]=c;c=J[a+32>>2];J[i>>2]=J[a+28>>2];J[i+4>>2]=c;N[g+12>>2]=x;N[g+8>>2]=n;N[g+4>>2]=l;N[g>>2]=k}q=(b|0)!=0}ga=a+4240|0;return q|0}function Jk(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=0,g=Q(0),h=0,i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=0,s=0,t=0,u=0,v=0,w=Q(0),x=0,y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),M=0,O=Q(0),R=Q(0);ya(3024);c=J[a+84>>2];if(c){ia[c|0](a,b)}ia[J[J[a>>2]+140>>2]](a,b);J[a+32>>2]=0;N[a+28>>2]=b;J[a+48>>2]=ia[J[J[a>>2]+20>>2]](a);c=ga-464|0;ga=c;ya(2512);ya(2773);if(J[a+308>>2]>0){while(1){e=J[a+24>>2];ia[J[J[e>>2]+16>>2]](e,J[J[a+316>>2]+(k<<2)>>2]);k=k+1|0;if((k|0)<J[a+308>>2]){continue}break}}e=J[a+316>>2];if(!(e?!e|!K[a+320|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+316>>2]=0;H[a+320|0]=1;J[a+308>>2]=0;J[a+312>>2]=0;xa();if(J[a+232>>2]>0){s=c- -64|0;k=0;while(1){e=J[J[a+240>>2]+(k<<2)>>2];J[e+244>>2]=1065353216;a:{b:{switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}if(K[e+204|0]&3){break a}ve(e,b,c+400|0);if(!K[a+44|0]){break a}g=N[e+252>>2];g=Q(g*g);if(g==Q(0)){break a}i=Q(N[c+456>>2]-N[e+60>>2]);l=Q(i*i);i=Q(N[c+448>>2]-N[e+52>>2]);q=Q(i*i);i=Q(N[c+452>>2]-N[e+56>>2]);if(!(g<Q(l+Q(q+Q(i*i))))){break a}ya(2363);if(J[J[e+192>>2]+4>>2]<=19){J[8145]=J[8145]+1;d=J[a+68>>2];d=ia[J[J[d>>2]+36>>2]](d)|0;h=J[a+24>>2];J[c+308>>2]=1065353216;J[c+312>>2]=-65535;f=J[e+64>>2];J[c+324>>2]=J[e+60>>2];J[c+328>>2]=f;f=J[e+56>>2];J[c+316>>2]=J[e+52>>2];J[c+320>>2]=f;f=J[c+460>>2];J[c+340>>2]=J[c+456>>2];J[c+344>>2]=f;f=J[c+452>>2];J[c+332>>2]=J[c+448>>2];J[c+336>>2]=f;J[c+380>>2]=0;J[c+304>>2]=20664;J[c+392>>2]=d;J[c+396>>2]=h;J[c+388>>2]=0;J[c+384>>2]=e;g=N[e+248>>2];h=c+248|0;d=h;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[c+292>>2]=g;N[c+276>>2]=g;J[c+252>>2]=8;J[c+248>>2]=16132;N[c+388>>2]=N[a+56>>2];d=J[e+188>>2];I[c+312>>1]=L[d+4>>1];I[c+314>>1]=L[d+6>>1];d=J[c+412>>2];J[c+192>>2]=J[c+408>>2];J[c+196>>2]=d;d=J[c+404>>2];J[c+184>>2]=J[c+400>>2];J[c+188>>2]=d;d=J[c+428>>2];J[c+208>>2]=J[c+424>>2];J[c+212>>2]=d;d=J[c+420>>2];J[c+200>>2]=J[c+416>>2];J[c+204>>2]=d;d=J[c+444>>2];J[c+224>>2]=J[c+440>>2];J[c+228>>2]=d;d=J[c+436>>2];J[c+216>>2]=J[c+432>>2];J[c+220>>2]=d;d=J[c+460>>2];J[c+240>>2]=J[c+456>>2];J[c+244>>2]=d;d=J[c+452>>2];J[c+232>>2]=J[c+448>>2];J[c+236>>2]=d;d=e+4|0;f=J[d+12>>2];J[c+192>>2]=J[d+8>>2];J[c+196>>2]=f;f=J[d+4>>2];J[c+184>>2]=J[d>>2];J[c+188>>2]=f;f=J[e+32>>2];J[c+208>>2]=J[e+28>>2];J[c+212>>2]=f;f=J[e+24>>2];J[c+200>>2]=J[e+20>>2];J[c+204>>2]=f;f=J[e+48>>2];J[c+224>>2]=J[e+44>>2];J[c+228>>2]=f;f=J[e+40>>2];J[c+216>>2]=J[e+36>>2];J[c+220>>2]=f;ic(a,h,d,c+184|0,c+304|0,Q(0));g=N[c+308>>2];if(g<Q(1)){m=Q(g*Q(N[c+448>>2]-N[e+52>>2]));n=Q(g*Q(N[c+452>>2]-N[e+56>>2]));o=Q(g*Q(N[c+456>>2]-N[e+60>>2]));G=Q(Q(Q(m*Q(-N[c+348>>2]))-Q(n*N[c+352>>2]))-Q(o*N[c+356>>2]));d=J[a+24>>2];u=ia[J[J[d>>2]+12>>2]](d,e,J[c+380>>2])|0;d=J[a+308>>2];c:{if((d|0)!=J[a+312>>2]){break c}t=d?d<<1:1;if((t|0)<=(d|0)){break c}d:{if(!t){h=0;break d}J[8369]=J[8369]+1;h=ia[J[6782]](t<<2,16)|0;d=J[a+308>>2]}e:{if((d|0)<=0){break e}v=0;f=0;if(d-1>>>0>=3){M=d&-4;p=0;while(1){j=f<<2;J[j+h>>2]=J[j+J[a+316>>2]>>2];r=j|4;J[r+h>>2]=J[r+J[a+316>>2]>>2];r=j|8;J[r+h>>2]=J[r+J[a+316>>2]>>2];j=j|12;J[j+h>>2]=J[j+J[a+316>>2]>>2];f=f+4|0;p=p+4|0;if((M|0)!=(p|0)){continue}break}}j=d&3;if(!j){break e}while(1){p=f<<2;J[p+h>>2]=J[p+J[a+316>>2]>>2];f=f+1|0;v=v+1|0;if((j|0)!=(v|0)){continue}break}}f=J[a+316>>2];if(!(!f|!K[a+320|0])){if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}d=J[a+308>>2]}J[a+316>>2]=h;H[a+320|0]=1;J[a+312>>2]=t}J[J[a+316>>2]+(d<<2)>>2]=u;J[a+308>>2]=d+1;d=J[c+380>>2];y=N[d+20>>2];z=N[d+36>>2];A=N[d+40>>2];B=N[d+8>>2];C=N[d+24>>2];g=N[d+60>>2];O=N[d+52>>2];i=N[d+56>>2];D=N[d+44>>2];l=N[d+12>>2];E=N[d+28>>2];F=N[d+4>>2];q=N[e+60>>2];w=N[e+52>>2];R=N[e+56>>2];J[c+8>>2]=0;J[c+12>>2]=0;J[c+28>>2]=0;J[c>>2]=0;J[c+4>>2]=0;o=Q(o+q);m=Q(m+w);n=Q(n+R);w=Q(Q(D*o)+Q(Q(l*m)+Q(E*n)));q=l;l=Q(-O);N[c+24>>2]=w+Q(Q(Q(q*l)-Q(E*i))-Q(D*g));N[c+20>>2]=Q(Q(o*A)+Q(Q(m*B)+Q(n*C)))+Q(Q(Q(B*l)-Q(C*i))-Q(A*g));N[c+16>>2]=Q(Q(o*z)+Q(Q(m*F)+Q(n*y)))+Q(Q(Q(F*l)-Q(y*i))-Q(z*g));d=J[c+352>>2];J[s>>2]=J[c+348>>2];J[s+4>>2]=d;d=J[c+360>>2];J[s+8>>2]=J[c+356>>2];J[s+12>>2]=d;H[c+116|0]=0;J[c+112>>2]=0;J[c+92>>2]=0;J[c+84>>2]=0;J[c+88>>2]=0;N[c+80>>2]=G;J[c+144>>2]=0;J[c+148>>2]=0;J[c+136>>2]=0;J[c+140>>2]=0;J[c+128>>2]=0;J[c+132>>2]=0;J[c+120>>2]=0;J[c+124>>2]=0;d=P(ul(u,c),184)+u|0;J[d+96>>2]=0;N[d+88>>2]=T(Q(U(Q(N[e+224>>2]*N[J[c+380>>2]+224>>2]),Q(-10))),Q(10));h=J[e+56>>2];J[d+52>>2]=J[e+52>>2];J[d+56>>2]=h;h=J[e+64>>2];J[d+60>>2]=J[e+60>>2];J[d+64>>2]=h;J[d+48>>2]=0;N[d+44>>2]=o;N[d+40>>2]=n;N[d+36>>2]=m}}xa()}k=k+1|0;if((k|0)<J[a+232>>2]){continue}break}}xa();ga=c+464|0;ia[J[J[a>>2]+44>>2]](a);ia[J[J[a>>2]+148>>2]](a);N[a+104>>2]=b;ia[J[J[a>>2]+152>>2]](a,a+92|0);ia[J[J[a>>2]+144>>2]](a,b);ya(2618);if(J[a+280>>2]>0){while(1){c=J[J[a+288>>2]+(x<<2)>>2];ia[J[J[c>>2]+8>>2]](c,a,b);x=x+1|0;if((x|0)<J[a+280>>2]){continue}break}}xa();ia[J[J[a>>2]+156>>2]](a,b);c=J[a+80>>2];if(c){ia[c|0](a,b)}xa()}function KA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=0,i=0,j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=0,p=0;c=J[d+64>>2];a:{if(!(c&4)){break a}b=J[a+28>>2];if((b|0)<=0){break a}l=J[a+76>>2];i=J[a+36>>2];if(c&16){c=0;while(1){e=i+P(c,152)|0;h=J[e+132>>2];N[h+120>>2]=N[e+100>>2];e=l+P(J[e+140>>2],152)|0;N[h+124>>2]=N[e+100>>2];N[h+128>>2]=N[e+252>>2];c=c+1|0;if((b|0)!=(c|0)){continue}break}break a}c=0;if((b|0)!=1){p=b&-2;while(1){h=i+P(c,152)|0;o=J[h+132>>2];N[o+120>>2]=N[h+100>>2];N[o+124>>2]=N[(l+P(J[h+140>>2],152)|0)+100>>2];h=i+P(c|1,152)|0;o=J[h+132>>2];N[o+120>>2]=N[h+100>>2];N[o+124>>2]=N[(l+P(J[h+140>>2],152)|0)+100>>2];c=c+2|0;e=e+2|0;if((p|0)!=(e|0)){continue}break}}if(!(b&1)){break a}b=i+P(c,152)|0;c=J[b+132>>2];N[c+120>>2]=N[b+100>>2];N[c+124>>2]=N[(l+P(J[b+140>>2],152)|0)+100>>2]}p=J[a+48>>2];if((p|0)>0){o=J[a+56>>2];l=0;while(1){c=o+P(l,152)|0;e=J[c+132>>2];b=J[e+44>>2];if(b){i=J[e+28>>2];j=N[i+356>>2];k=N[c+24>>2];m=N[i+352>>2];n=N[c+20>>2];f=N[c+100>>2];g=Q(Q(1)/N[d+12>>2]);N[b>>2]=N[b>>2]+Q(Q(Q(N[c+16>>2]*f)*N[i+348>>2])*g);N[b+4>>2]=Q(Q(m*Q(f*n))*g)+N[b+4>>2];N[b+8>>2]=Q(Q(j*Q(f*k))*g)+N[b+8>>2];h=J[e+32>>2];j=N[h+356>>2];k=N[c+56>>2];m=N[h+352>>2];n=N[c+52>>2];f=N[c+100>>2];g=Q(Q(1)/N[d+12>>2]);N[b+32>>2]=N[b+32>>2]+Q(Q(Q(N[c+48>>2]*f)*N[h+348>>2])*g);N[b+36>>2]=Q(Q(m*Q(f*n))*g)+N[b+36>>2];N[b+40>>2]=Q(Q(j*Q(f*k))*g)+N[b+40>>2];j=N[i+552>>2];k=N[c+8>>2];m=N[i+548>>2];n=N[c+4>>2];f=N[c+100>>2];g=Q(Q(1)/N[d+12>>2]);N[b+16>>2]=N[b+16>>2]+Q(Q(Q(N[c>>2]*N[i+544>>2])*f)*g);N[b+20>>2]=Q(Q(f*Q(n*m))*g)+N[b+20>>2];N[b+24>>2]=Q(Q(f*Q(k*j))*g)+N[b+24>>2];j=N[h+552>>2];k=N[c+40>>2];m=N[h+548>>2];n=N[c+36>>2];f=N[c+100>>2];g=Q(Q(1)/N[d+12>>2]);N[b+48>>2]=N[b+48>>2]+Q(Q(Q(N[c+32>>2]*N[h+544>>2])*f)*g);N[b+52>>2]=Q(Q(f*Q(n*m))*g)+N[b+52>>2];N[b+56>>2]=Q(Q(f*Q(k*j))*g)+N[b+56>>2]}f=N[c+100>>2];N[e+36>>2]=f;if(N[e+16>>2]<=Q(R(f))){H[e+20|0]=0}l=l+1|0;if((p|0)!=(l|0)){continue}break}}l=J[a+8>>2];if((l|0)>0){e=J[a+16>>2];h=0;while(1){i=P(h,244);b=i+e|0;c=J[b+240>>2];if(c){b:{if(J[d+44>>2]){m=N[d+12>>2];j=N[d+52>>2];c=ga-80|0;ga=c;c:{if(!J[b+240>>2]){break c}N[b+176>>2]=N[b+64>>2]+N[b+176>>2];N[b+192>>2]=N[b+80>>2]+N[b+192>>2];N[b+180>>2]=N[b+68>>2]+N[b+180>>2];N[b+184>>2]=N[b+72>>2]+N[b+184>>2];N[b+196>>2]=N[b+84>>2]+N[b+196>>2];N[b+200>>2]=N[b+88>>2]+N[b+200>>2];k=N[b+160>>2];d:{if(!(!(N[b+144>>2]!=Q(0)|N[b+148>>2]!=Q(0))&N[b+152>>2]==Q(0))){f=N[b+168>>2];g=N[b+164>>2];break d}f=N[b+168>>2];g=N[b+164>>2];if(k!=Q(0)|g!=Q(0)){break d}if(f==Q(0)){break c}}J[c+12>>2]=0;N[c+8>>2]=f*j;N[c+4>>2]=g*j;N[c>>2]=k*j;Rb(b,b+144|0,c,m,c+16|0);e=J[c+28>>2];J[b+8>>2]=J[c+24>>2];J[b+12>>2]=e;e=J[c+20>>2];J[b>>2]=J[c+16>>2];J[b+4>>2]=e;e=J[c+44>>2];J[b+24>>2]=J[c+40>>2];J[b+28>>2]=e;e=J[c+36>>2];J[b+16>>2]=J[c+32>>2];J[b+20>>2]=e;e=J[c+52>>2];J[b+32>>2]=J[c+48>>2];J[b+36>>2]=e;e=J[c+60>>2];J[b+40>>2]=J[c+56>>2];J[b+44>>2]=e;e=J[c+68>>2];J[b+48>>2]=J[c+64>>2];J[b+52>>2]=e;e=J[c+76>>2];J[b+56>>2]=J[c+72>>2];J[b+60>>2]=e}ga=c+80|0;e=J[a+16>>2];b=i+e|0;j=N[b+176>>2];c=J[b+240>>2];f=N[b+184>>2];g=N[b+180>>2];break b}j=Q(N[b+64>>2]+N[b+176>>2]);N[b+176>>2]=j;N[b+192>>2]=N[b+80>>2]+N[b+192>>2];g=Q(N[b+68>>2]+N[b+180>>2]);N[b+180>>2]=g;f=Q(N[b+72>>2]+N[b+184>>2]);N[b+184>>2]=f;N[b+196>>2]=N[b+84>>2]+N[b+196>>2];N[b+200>>2]=N[b+88>>2]+N[b+200>>2]}b=e+i|0;k=N[b+212>>2];m=N[b+216>>2];n=N[b+208>>2];J[c+324>>2]=0;N[c+312>>2]=j+n;J[c+260>>2]=J[c+260>>2]+1;N[c+320>>2]=f+m;N[c+316>>2]=g+k;b=i+J[a+16>>2]|0;f=N[b+228>>2];g=N[b+196>>2];j=N[b+232>>2];k=N[b+200>>2];m=N[b+224>>2];n=N[b+192>>2];b=J[b+240>>2];J[b+340>>2]=0;N[b+328>>2]=n+m;N[b+336>>2]=k+j;N[b+332>>2]=g+f;J[b+260>>2]=J[b+260>>2]+1;if(J[d+44>>2]){c=i+J[a+16>>2]|0;b=J[c+240>>2];J[b+260>>2]=J[b+260>>2]+1;e=J[c+12>>2];J[b+12>>2]=J[c+8>>2];J[b+16>>2]=e;e=J[c+4>>2];J[b+4>>2]=J[c>>2];J[b+8>>2]=e;e=J[c+28>>2];J[b+28>>2]=J[c+24>>2];J[b+32>>2]=e;e=J[c+20>>2];J[b+20>>2]=J[c+16>>2];J[b+24>>2]=e;e=J[c+36>>2];J[b+36>>2]=J[c+32>>2];J[b+40>>2]=e;e=J[c+44>>2];J[b+44>>2]=J[c+40>>2];J[b+48>>2]=e;e=J[c+60>>2];J[b+60>>2]=J[c+56>>2];J[b+64>>2]=e;e=J[c+52>>2];J[b+52>>2]=J[c+48>>2];J[b+56>>2]=e}e=J[a+16>>2];J[J[(i+e|0)+240>>2]+212>>2]=-1;l=J[a+8>>2]}h=h+1|0;if((l|0)>(h|0)){continue}break}}if((J[a+28>>2]&J[a+32>>2])<0){b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+40|0]=1;J[a+32>>2]=0;J[a+36>>2]=0}J[a+28>>2]=0;if((J[a+48>>2]&J[a+52>>2])<0){b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+60|0]=1;J[a+52>>2]=0;J[a+56>>2]=0}J[a+48>>2]=0;if((J[a+68>>2]&J[a+72>>2])<0){b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+80|0]=1;J[a+72>>2]=0;J[a+76>>2]=0}J[a+68>>2]=0;if((J[a+88>>2]&J[a+92>>2])<0){b=J[a+96>>2];if(!(b?!b|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+100|0]=1;J[a+92>>2]=0;J[a+96>>2]=0}J[a+88>>2]=0;if((J[a+8>>2]&J[a+12>>2])<0){b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+20|0]=1;J[a+12>>2]=0;J[a+16>>2]=0}J[a+8>>2]=0;return Q(Q(0))}function ez(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0),L=Q(0),M=Q(0),O=0,R=Q(0),S=Q(0),U=0,V=0,W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=0,fa=Q(0),ga=0;O=J[c+36>>2];c=J[O+12>>2];W=N[c+8>>2];y=J[b+36>>2];E=N[y+8>>2];F=Q(W-E);b=J[O+8>>2];X=N[b+8>>2];m=Q(X-E);p=Q(F-m);e=J[O+16>>2];Z=N[e+12>>2];G=N[y+12>>2];u=Q(Z-G);_=N[b+12>>2];l=Q(_-G);i=Q(u-l);$=N[e+8>>2];v=Q($-E);d=Q(v-m);aa=N[c+12>>2];I=Q(aa-G);n=Q(I-l);w=Q(Q(p*i)-Q(d*n));ba=N[e+16>>2];L=N[y+16>>2];x=Q(ba-L);ca=N[b+16>>2];o=Q(ca-L);f=Q(x-o);da=N[c+16>>2];M=Q(da-L);B=Q(M-o);C=Q(Q(n*f)-Q(i*B));D=Q(Q(B*d)-Q(f*p));d=Q(Q(w*w)+Q(Q(C*C)+Q(D*D)));a:{if(!(d>Q(1.1920928955078125e-7))){i=Q(3.4028234663852886e38);break a}i=Q(3.4028234663852886e38);d=Q(Q(1)/Q(Y(d)));z=Q(w*d);f=Q(C*d);A=Q(D*d);h=Q(Q(o*z)+Q(Q(m*f)+Q(l*A)));g=Q(h*h);if(!(g<Q(3.4028234663852886e38))){break a}d=Q(f*h);r=Q(m-d);f=Q(A*h);i=Q(I-f);s=Q(F-d);A=Q(l-f);h=Q(z*h);q=Q(M-h);z=Q(o-h);b:{c:{if(!(Q(Q(Q(Q(r*i)-Q(s*A))*w)+Q(Q(Q(Q(A*q)-Q(i*z))*C)+Q(D*Q(Q(z*s)-Q(q*r)))))>Q(0))){break c}R=Q(u-f);S=Q(v-d);fa=Q(Q(Q(s*R)-Q(S*i))*w);t=i;i=Q(x-h);if(!(Q(fa+Q(Q(Q(Q(t*i)-Q(R*q))*C)+Q(D*Q(Q(q*S)-Q(i*s)))))>Q(0))){break c}if(Q(Q(Q(Q(S*A)-Q(r*R))*w)+Q(Q(Q(Q(R*z)-Q(A*i))*C)+Q(D*Q(Q(i*r)-Q(z*S)))))>Q(0)){break b}}d=Q(Q(B*B)+Q(Q(p*p)+Q(n*n)));i=Q(3.4028234663852886e38);d:{if(!(d>Q(1.1920928955078125e-7))){break d}r=Q(Q(-Q(Q(o*B)+Q(Q(m*p)+Q(l*n))))/d);q=r<Q(0)?Q(0):Q(T(r,Q(1)));r=Q(o+Q(B*q));s=Q(m+Q(p*q));q=Q(l+Q(n*q));d=Q(Q(r*r)+Q(Q(s*s)+Q(q*q)));i=Q(3.4028234663852886e38);if(!(d<Q(3.4028234663852886e38))){break d}i=d}d=Q(x-M);f=Q(v-F);h=Q(u-I);g=Q(Q(d*d)+Q(Q(f*f)+Q(h*h)));e:{if(!(g>Q(1.1920928955078125e-7))){break e}t=d;d=Q(Q(-Q(Q(M*d)+Q(Q(F*f)+Q(I*h))))/g);g=d<Q(0)?Q(0):Q(T(d,Q(1)));d=Q(M+Q(t*g));f=Q(F+Q(f*g));h=Q(I+Q(h*g));g=Q(Q(d*d)+Q(Q(f*f)+Q(h*h)));if(!(g<i)){break e}i=g;s=f;q=h;r=d}d=Q(o-x);f=Q(m-v);g=Q(l-u);h=Q(Q(d*d)+Q(Q(f*f)+Q(g*g)));if(!(h>Q(1.1920928955078125e-7))){break a}t=d;d=Q(Q(-Q(Q(x*d)+Q(Q(v*f)+Q(u*g))))/h);m=d<Q(0)?Q(0):Q(T(d,Q(1)));h=Q(x+Q(t*m));d=Q(v+Q(f*m));f=Q(u+Q(g*m));g=Q(Q(h*h)+Q(Q(d*d)+Q(f*f)));if(!(g<i)){break a}}i=g;s=d;q=f;r=h}d=Q(L-N[y+32>>2]);g=Q(d*d);d=Q(E-N[y+24>>2]);f=Q(d*d);d=Q(G-N[y+28>>2]);d=Q(Y(Q(g+Q(f+Q(d*d)))));u=Q(Q(d+d)+N[a+12>>2]);f:{if(!(Q(u*u)>i)){break f}o=Q(E+s);d=Q(X-o);p=Q(G+q);f=Q(aa-p);h=Q(W-o);g=Q(_-p);v=Q(Q(d*f)-Q(h*g));n=Q(L+r);m=Q(da-n);l=Q(ca-n);w=Q(Q(g*m)-Q(f*l));o=Q($-o);p=Q(Z-p);x=Q(Q(o*g)-Q(d*p));t=g;g=Q(ba-n);n=Q(Q(p*l)-Q(t*g));t=Q(n*n);n=Q(Q(g*d)-Q(l*o));n=Q(Y(Q(Q(x*x)+Q(t+Q(n*n)))));d=Q(Q(l*h)-Q(m*d));l=Q(Y(Q(Q(v*v)+Q(Q(w*w)+Q(d*d)))));d=Q(Q(h*p)-Q(o*f));t=Q(d*d);d=Q(Q(f*g)-Q(p*m));f=Q(d*d);d=Q(Q(m*o)-Q(g*h));f=Q(Y(Q(t+Q(f+Q(d*d)))));d=Q(Q(1)/Q(n+Q(l+f)));h=N[y+88>>2];g=N[e+88>>2];m=Q(l*d);l=N[b+88>>2];f=Q(f*d);o=Q(n*d);d=N[c+88>>2];g=l<=Q(0)?Q(0):d<=Q(0)?Q(0):g<=Q(0)?Q(0):Q(Q(g*m)+Q(Q(l*f)+Q(o*d)));d=Q(h+g);if(!(d>Q(0))){break f}c=J[a+4>>2];l=N[c+316>>2];a=J[a+8>>2];p=N[a+316>>2];l=l>p?l:p;h=Q(Q(h/d)*N[c+332>>2]);d=Q(Q(g/d)*N[a+332>>2]);i=Q(Q(-1)/Q(Y(i)));r=Q(i*r);q=Q(i*q);i=Q(s*i);b=J[c+832>>2];g:{if((b|0)!=J[c+836>>2]){break g}U=b?b<<1:1;if((U|0)<=(b|0)){break g}if(U){J[8369]=J[8369]+1;V=ia[J[6782]](P(U,56),16)|0;b=J[c+832>>2]}h:{if((b|0)<=0){break h}a=0;if((b|0)!=1){ga=b&-2;while(1){e=P(a,56);j=e+V|0;e=e+J[c+840>>2]|0;k=J[e+4>>2];J[j>>2]=J[e>>2];J[j+4>>2]=k;k=J[e+52>>2];J[j+48>>2]=J[e+48>>2];J[j+52>>2]=k;k=J[e+44>>2];J[j+40>>2]=J[e+40>>2];J[j+44>>2]=k;k=J[e+36>>2];J[j+32>>2]=J[e+32>>2];J[j+36>>2]=k;k=J[e+28>>2];J[j+24>>2]=J[e+24>>2];J[j+28>>2]=k;k=J[e+20>>2];J[j+16>>2]=J[e+16>>2];J[j+20>>2]=k;k=J[e+12>>2];J[j+8>>2]=J[e+8>>2];J[j+12>>2]=k;e=P(a|1,56);j=e+V|0;e=e+J[c+840>>2]|0;k=J[e+4>>2];J[j>>2]=J[e>>2];J[j+4>>2]=k;k=J[e+12>>2];J[j+8>>2]=J[e+8>>2];J[j+12>>2]=k;k=J[e+20>>2];J[j+16>>2]=J[e+16>>2];J[j+20>>2]=k;k=J[e+28>>2];J[j+24>>2]=J[e+24>>2];J[j+28>>2]=k;k=J[e+36>>2];J[j+32>>2]=J[e+32>>2];J[j+36>>2]=k;k=J[e+44>>2];J[j+40>>2]=J[e+40>>2];J[j+44>>2]=k;k=J[e+52>>2];J[j+48>>2]=J[e+48>>2];J[j+52>>2]=k;a=a+2|0;ea=ea+2|0;if((ea|0)!=(ga|0)){continue}break}}if(!(b&1)){break h}a=P(a,56);b=a+V|0;a=a+J[c+840>>2]|0;e=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=e;e=J[a+52>>2];J[b+48>>2]=J[a+48>>2];J[b+52>>2]=e;e=J[a+44>>2];J[b+40>>2]=J[a+40>>2];J[b+44>>2]=e;e=J[a+36>>2];J[b+32>>2]=J[a+32>>2];J[b+36>>2]=e;e=J[a+28>>2];J[b+24>>2]=J[a+24>>2];J[b+28>>2]=e;e=J[a+20>>2];J[b+16>>2]=J[a+16>>2];J[b+20>>2]=e;e=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=e}a=J[c+840>>2];if(!(a?!a|!K[c+844|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+840>>2]=V;H[c+844|0]=1;J[c+836>>2]=U;b=J[c+832>>2]}a=J[c+840>>2]+P(b,56)|0;N[a+48>>2]=h;N[a+44>>2]=l;N[a+40>>2]=u;N[a+24>>2]=i;N[a+8>>2]=f;J[a+4>>2]=O;J[a>>2]=y;N[a+52>>2]=d;J[a+36>>2]=0;N[a+32>>2]=r;N[a+28>>2]=q;J[a+20>>2]=0;N[a+16>>2]=m;N[a+12>>2]=o;J[c+832>>2]=J[c+832>>2]+1}}function zm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=Q(0),G=Q(0),H=0,I=0;d=ga-144|0;ga=d;J[d+108>>2]=0;g=N[b+80>>2];f=N[b+96>>2];m=N[b+120>>2];y=N[b+56>>2];D=N[b+112>>2];G=N[b+116>>2];C=N[b+52>>2];i=N[b+68>>2];h=N[b+84>>2];r=N[b+100>>2];j=N[b+20>>2];t=N[b+36>>2];s=N[b+72>>2];l=N[b+88>>2];u=N[b+24>>2];n=N[b+104>>2];z=N[b+40>>2];o=N[b+64>>2];A=N[b+32>>2];v=N[b>>2];x=N[b+16>>2];F=N[b+48>>2];p=N[b+4>>2];B=N[b+8>>2];J[d+100>>2]=0;J[d+84>>2]=0;J[d+68>>2]=0;N[d+80>>2]=Q(n*z)+Q(Q(s*B)+Q(u*l));N[d+76>>2]=Q(n*t)+Q(Q(s*p)+Q(j*l));N[d- -64>>2]=Q(r*z)+Q(Q(i*B)+Q(u*h));N[d+60>>2]=Q(r*t)+Q(Q(i*p)+Q(j*h));m=Q(y-m);y=Q(F-D);D=Q(C-G);N[d+96>>2]=Q(n*m)+Q(Q(s*y)+Q(l*D));N[d+92>>2]=Q(r*m)+Q(Q(i*y)+Q(D*h));J[d+52>>2]=0;N[d+72>>2]=Q(n*A)+Q(Q(s*v)+Q(x*l));N[d+56>>2]=Q(r*A)+Q(Q(i*v)+Q(x*h));N[d+48>>2]=Q(f*z)+Q(Q(o*B)+Q(g*u));N[d+44>>2]=Q(f*t)+Q(Q(o*p)+Q(g*j));N[d+40>>2]=Q(f*A)+Q(Q(o*v)+Q(g*x));N[d+88>>2]=Q(f*m)+Q(Q(o*y)+Q(D*g));t=Q(0);u=Q(0);z=Q(0);q=ga-32|0;ga=q;k=J[a+4>>2];A=Q(N[k+28>>2]*N[k+12>>2]);r=Q(A+N[a+12>>2]);k=J[a+8>>2];g=N[k- -64>>2];p=Q(N[d+96>>2]-g);f=N[k+56>>2];s=Q(N[k+72>>2]-f);i=N[k+60>>2];l=Q(N[k+92>>2]-i);n=Q(N[k+88>>2]-f);o=Q(N[k+76>>2]-i);h=Q(Q(s*l)-Q(n*o));j=h;w=Q(h*h);h=Q(N[k+96>>2]-g);m=l;l=Q(N[k+80>>2]-g);g=Q(Q(o*h)-Q(m*l));h=Q(Q(l*n)-Q(h*s));n=Q(Q(1)/Q(Y(Q(w+Q(Q(g*g)+Q(h*h))))));s=Q(j*n);l=Q(g*n);n=Q(h*n);g=Q(Q(p*s)+Q(Q(Q(N[d+88>>2]-f)*l)+Q(Q(N[d+92>>2]-i)*n)));if(g<Q(0)){s=Q(-s);n=Q(-n);l=Q(-l);g=Q(-g)}a:{if(!(g<r)){break a}H=J[d+100>>2];J[q+24>>2]=J[d+96>>2];J[q+28>>2]=H;H=J[d+92>>2];J[q+16>>2]=J[d+88>>2];J[q+20>>2]=H;J[q+12>>2]=0;N[q+8>>2]=s;N[q+4>>2]=n;N[q>>2]=l;o=N[k+96>>2];j=N[k+80>>2];v=Q(o-j);x=N[k+88>>2];p=N[k+72>>2];C=Q(x-p);f=N[q+4>>2];i=N[q>>2];B=N[k+92>>2];m=N[k+76>>2];h=Q(B-m);y=N[q+24>>2];F=Q(Q(Q(C*f)-Q(i*h))*Q(y-j));w=h;h=N[q+8>>2];D=N[q+16>>2];G=N[q+20>>2];v=Q(F+Q(Q(Q(Q(w*h)-Q(f*v))*Q(D-p))+Q(Q(G-m)*Q(Q(v*i)-Q(h*C)))));w=j;j=N[k+64>>2];C=Q(w-j);w=p;p=N[k+56>>2];F=Q(w-p);w=m;m=N[k+60>>2];w=Q(w-m);C=Q(Q(Q(Q(F*f)-Q(i*w))*Q(y-j))+Q(Q(Q(Q(w*h)-Q(f*C))*Q(D-p))+Q(Q(G-m)*Q(Q(C*i)-Q(h*F)))));p=Q(p-x);m=Q(m-B);y=Q(Q(Q(p*f)-Q(i*m))*Q(y-o));w=f;f=Q(j-o);f=Q(y+Q(Q(Q(Q(m*h)-Q(w*f))*Q(D-x))+Q(Q(G-B)*Q(Q(f*i)-Q(h*p)))));b:{if(!(!(f>Q(0))|!(C>Q(0)))){k=1;if(v>Q(0)){break b}}k=C<=Q(0)&v<=Q(0)&f<=Q(0)}c:{if(k){i=N[d+96>>2];t=Q(i-Q(g*s));h=N[d+92>>2];u=Q(h-Q(g*n));f=N[d+88>>2];z=Q(f-Q(g*l));v=Q(r*r);break c}k=J[a+8>>2];if((ia[J[J[k>>2]+100>>2]](k)|0)<=0){break a}v=Q(r*r);k=0;while(1){E=J[a+8>>2];ia[J[J[E>>2]+104>>2]](E,k,q+16|0,q);f=Q(0);x=N[q+24>>2];r=Q(N[q+8>>2]-x);g=Q(N[d+96>>2]-x);p=N[q+16>>2];o=Q(N[q>>2]-p);i=Q(N[d+88>>2]-p);B=N[q+20>>2];h=Q(N[d+92>>2]-B);j=Q(N[q+4>>2]-B);m=Q(Q(r*g)+Q(Q(o*i)+Q(h*j)));d:{if(!(m>Q(0))){break d}f=Q(Q(r*r)+Q(Q(o*o)+Q(j*j)));if(f>m){f=Q(m/f);g=Q(g-Q(r*f));h=Q(h-Q(j*f));i=Q(i-Q(o*f));break d}g=Q(g-r);h=Q(h-j);i=Q(i-o);f=Q(1)}if(Q(Q(g*g)+Q(Q(i*i)+Q(h*h)))<v){z=Q(p+Q(o*f));u=Q(B+Q(j*f));I=1;t=Q(x+Q(r*f))}E=J[a+8>>2];k=k+1|0;if((ia[J[J[E>>2]+100>>2]](E)|0)>(k|0)){continue}break}E=0;if(!I){break a}i=N[d+96>>2];h=N[d+92>>2];f=N[d+88>>2]}g=Q(i-t);f=Q(f-z);i=Q(h-u);h=Q(Q(g*g)+Q(Q(f*f)+Q(i*i)));if(!(h<v)){break a}e:{if(h>Q(1.1920928955078125e-7)){J[d+124>>2]=0;l=g;h=Q(Y(h));g=Q(Q(1)/h);N[d+120>>2]=l*g;N[d+116>>2]=i*g;N[d+112>>2]=f*g;A=Q(A-h);break e}J[d+124>>2]=0;N[d+120>>2]=s;N[d+116>>2]=n;N[d+112>>2]=l}J[d+140>>2]=0;N[d+136>>2]=t;N[d+132>>2]=u;N[d+128>>2]=z;N[d+108>>2]=-A;E=1}ga=q+32|0;f:{if(!E){break f}if(e){h=N[b+72>>2];r=N[b+64>>2];s=N[b+68>>2];l=N[b+88>>2];n=N[b+80>>2];o=N[b+84>>2];j=N[b+104>>2];t=N[b+96>>2];u=N[b+100>>2];g=N[d+120>>2];f=N[d+112>>2];i=N[d+116>>2];J[d+36>>2]=0;z=Q(Q(j*g)+Q(Q(t*f)+Q(i*u)));N[d+32>>2]=-z;A=Q(Q(l*g)+Q(Q(n*f)+Q(i*o)));N[d+28>>2]=-A;v=Q(Q(h*g)+Q(Q(r*f)+Q(s*i)));N[d+24>>2]=-v;x=N[b+112>>2];p=N[b+116>>2];g=N[b+120>>2];J[d+20>>2]=0;f=N[d+136>>2];m=Q(j*f);i=N[d+128>>2];j=N[d+132>>2];m=Q(g+Q(m+Q(Q(t*i)+Q(u*j))));g=N[d+108>>2];N[d+16>>2]=m+Q(z*g);N[d+12>>2]=Q(p+Q(Q(f*l)+Q(Q(i*n)+Q(j*o))))+Q(A*g);N[d+8>>2]=Q(x+Q(Q(f*h)+Q(Q(i*r)+Q(j*s))))+Q(v*g);ia[J[J[c>>2]+16>>2]](c,d+24|0,d+8|0,g);break f}g=N[b+72>>2];f=N[b+64>>2];i=N[b+68>>2];h=N[b+88>>2];r=N[b+80>>2];s=N[b+84>>2];l=N[b+104>>2];n=N[b+96>>2];o=N[b+100>>2];J[d+36>>2]=0;j=N[d+120>>2];t=N[d+112>>2];u=N[d+116>>2];N[d+32>>2]=Q(l*j)+Q(Q(n*t)+Q(o*u));N[d+28>>2]=Q(h*j)+Q(Q(r*t)+Q(u*s));N[d+24>>2]=Q(g*j)+Q(Q(f*t)+Q(i*u));j=N[b+112>>2];t=N[b+116>>2];u=N[b+120>>2];J[d+20>>2]=0;m=l;l=N[d+136>>2];p=n;n=N[d+128>>2];w=o;o=N[d+132>>2];N[d+16>>2]=u+Q(Q(m*l)+Q(Q(p*n)+Q(w*o)));N[d+12>>2]=t+Q(Q(l*h)+Q(Q(n*r)+Q(o*s)));N[d+8>>2]=j+Q(Q(l*g)+Q(Q(n*f)+Q(o*i)));ia[J[J[c>>2]+16>>2]](c,d+24|0,d+8|0,N[d+108>>2])}ga=d+144|0}function Kp(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=Q(0),p=Q(0),q=Q(0);n=ga-16|0;ga=n;J[n+12>>2]=a;J[n+8>>2]=b;N[n+4>>2]=c;a=J[n+8>>2];c=N[n+4>>2];b=0;m=ga-32|0;ga=m;e=J[n+12>>2];if(J[e+716>>2]==J[e+712>>2]){d=J[e+720>>2];a:{f=J[e+712>>2];if((f|0)<=0){break a}g=d;while(1){g=J[(P(i,104)+g|0)+96>>2];if(g){J[g+36>>2]=i}i=i+1|0;if((f|0)==(i|0)){break a}g=J[e+720>>2];continue}}j=f?d:0;f=J[e+732>>2];if((f|0)>0){i=0;while(1){g=P(i,52);d=g+J[e+740>>2]|0;J[d+8>>2]=(J[d+8>>2]-j|0)/104;d=g+J[e+740>>2]|0;J[d+12>>2]=(J[d+12>>2]-j|0)/104;i=i+1|0;if((f|0)!=(i|0)){continue}break}}f=J[e+752>>2];if((f|0)>0){g=0;while(1){k=P(g,44);d=k+J[e+760>>2]|0;J[d+8>>2]=(J[d+8>>2]-j|0)/104;d=k+J[e+760>>2]|0;J[d+12>>2]=(J[d+12>>2]-j|0)/104;d=k+J[e+760>>2]|0;J[d+16>>2]=(J[d+16>>2]-j|0)/104;d=J[(k+J[e+760>>2]|0)+40>>2];if(d){J[d+36>>2]=g}g=g+1|0;if((f|0)!=(g|0)){continue}break}}l=J[e+792>>2];b:{if((l|0)<=0){break b}k=J[e+800>>2];i=0;if((l|0)!=1){g=l&-2;f=0;while(1){d=k+P(i,96)|0;J[d>>2]=(J[d>>2]-j|0)/104;d=k+P(i|1,96)|0;J[d>>2]=(J[d>>2]-j|0)/104;i=i+2|0;f=f+2|0;if((g|0)!=(f|0)){continue}break}}if(!(l&1)){break b}d=k+P(i,96)|0;J[d>>2]=(J[d>>2]-j|0)/104}f=J[e+692>>2];if((f|0)>0){g=J[e+700>>2];l=0;while(1){i=0;k=P(l,60);if(J[(k+g|0)+24>>2]>0){while(1){d=(g+k|0)+(i<<2)|0;J[d+28>>2]=(J[d+28>>2]-j|0)/104;i=i+1|0;g=J[e+700>>2];if((i|0)<J[(k+g|0)+24>>2]){continue}break}}l=l+1|0;if((f|0)!=(l|0)){continue}break}}f=J[e+712>>2]<<1|1;if((f|0)>J[e+716>>2]){J[8369]=J[8369]+1;l=ia[J[6782]](P(f,104),16)|0;k=J[e+712>>2];c:{if((k|0)<=0){break c}if((k|0)!=1){g=k&-2;while(1){d=P(h,104);sa(d+l|0,d+J[e+720>>2]|0,104);d=P(h|1,104);sa(d+l|0,d+J[e+720>>2]|0,104);h=h+2|0;b=b+2|0;if((g|0)!=(b|0)){continue}break}}if(!(k&1)){break c}b=P(h,104);sa(b+l|0,b+J[e+720>>2]|0,104)}b=J[e+720>>2];if(!(b?!b|!K[e+724|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[e+720>>2]=l;H[e+724|0]=1;J[e+716>>2]=f}h=0;d=J[e+720>>2];d:{f=J[e+712>>2];if((f|0)<=0){break d}b=d;while(1){g=P(h,104)+b|0;b=J[g+96>>2];if(b){J[b+36>>2]=g}h=h+1|0;if((f|0)==(h|0)){break d}b=J[e+720>>2];continue}}j=f?d:0;k=J[e+732>>2];e:{if((k|0)<=0){break e}h=0;if((k|0)!=1){f=k&-2;b=0;while(1){g=P(h,52);d=g+J[e+740>>2]|0;J[d+8>>2]=j+P(J[d+8>>2],104);d=g+J[e+740>>2]|0;J[d+12>>2]=j+P(J[d+12>>2],104);g=P(h|1,52);d=g+J[e+740>>2]|0;J[d+8>>2]=j+P(J[d+8>>2],104);d=g+J[e+740>>2]|0;J[d+12>>2]=j+P(J[d+12>>2],104);h=h+2|0;b=b+2|0;if((f|0)!=(b|0)){continue}break}}if(!(k&1)){break e}d=P(h,52);b=d+J[e+740>>2]|0;J[b+8>>2]=j+P(J[b+8>>2],104);b=d+J[e+740>>2]|0;J[b+12>>2]=j+P(J[b+12>>2],104)}g=J[e+752>>2];if((g|0)>0){h=0;while(1){d=P(h,44);b=d+J[e+760>>2]|0;J[b+8>>2]=j+P(J[b+8>>2],104);b=d+J[e+760>>2]|0;J[b+12>>2]=j+P(J[b+12>>2],104);b=d+J[e+760>>2]|0;J[b+16>>2]=j+P(J[b+16>>2],104);d=d+J[e+760>>2]|0;b=J[d+40>>2];if(b){J[b+36>>2]=d}h=h+1|0;if((g|0)!=(h|0)){continue}break}}g=J[e+792>>2];f:{if((g|0)<=0){break f}f=J[e+800>>2];l=0;h=0;if(g-1>>>0>=3){d=g&-4;i=0;while(1){b=f+P(h,96)|0;J[b>>2]=j+P(J[b>>2],104);b=f+P(h|1,96)|0;J[b>>2]=j+P(J[b>>2],104);b=f+P(h|2,96)|0;J[b>>2]=j+P(J[b>>2],104);b=f+P(h|3,96)|0;J[b>>2]=j+P(J[b>>2],104);h=h+4|0;i=i+4|0;if((d|0)!=(i|0)){continue}break}}d=g&3;if(!d){break f}while(1){b=f+P(h,96)|0;J[b>>2]=j+P(J[b>>2],104);h=h+1|0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}g=J[e+692>>2];if((g|0)>0){h=J[e+700>>2];i=0;while(1){b=0;f=P(i,60);if(J[(f+h|0)+24>>2]>0){while(1){d=(f+h|0)+(b<<2)|0;J[d+28>>2]=j+P(J[d+28>>2],104);b=b+1|0;h=J[e+700>>2];if((b|0)<J[(f+h|0)+24>>2]){continue}break}}i=i+1|0;if((g|0)!=(i|0)){continue}break}}}b=J[e+192>>2];o=Q(ia[J[J[b>>2]+48>>2]](b));b=J[e+712>>2];g:{if((b|0)!=J[e+716>>2]){break g}l=b?b<<1:1;if((l|0)<=(b|0)){break g}h:{if(!l){g=0;break h}J[8369]=J[8369]+1;g=ia[J[6782]](P(l,104),16)|0;b=J[e+712>>2]}i:{if((b|0)<=0){break i}k=b&1;h=0;if((b|0)!=1){f=b&-2;b=0;while(1){d=P(h,104);sa(d+g|0,d+J[e+720>>2]|0,104);d=P(h|1,104);sa(d+g|0,d+J[e+720>>2]|0,104);h=h+2|0;b=b+2|0;if((f|0)!=(b|0)){continue}break}}if(!k){break i}b=P(h,104);sa(b+g|0,b+J[e+720>>2]|0,104)}b=J[e+720>>2];if(!(b?!b|!K[e+724|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[e+720>>2]=g;H[e+724|0]=1;J[e+716>>2]=l;b=J[e+712>>2]}qa(J[e+720>>2]+P(b,104)|0,0,104);b=J[e+712>>2];J[e+712>>2]=b+1;f=qa(J[e+720>>2]+P(b,104)|0,0,104);b=J[a+12>>2];J[f+16>>2]=J[a+8>>2];J[f+20>>2]=b;b=J[a+4>>2];J[f+8>>2]=J[a>>2];J[f+12>>2]=b;g=J[a>>2];d=J[a+4>>2];b=J[a+12>>2];J[f+32>>2]=J[a+8>>2];J[f+36>>2]=b;J[f+24>>2]=g;J[f+28>>2]=d;N[f+88>>2]=c>Q(0)?Q(Q(1)/c):Q(0);J[f+4>>2]=J[J[e+880>>2]>>2];p=N[f+8>>2];q=N[f+12>>2];c=N[f+16>>2];J[m+28>>2]=0;N[m+24>>2]=o+c;N[m+20>>2]=o+q;J[m+12>>2]=0;N[m+16>>2]=o+p;N[m+8>>2]=c-o;N[m+4>>2]=q-o;N[m>>2]=p-o;J[f+96>>2]=Db(e+928|0,m,f);ga=m+32|0;ga=n+16|0}function Jg(a,b,c,d){var e=Q(0),f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=0,v=Q(0),w=Q(0),x=0,y=0,z=0,A=Q(0),B=Q(0),C=Q(0),D=0,E=0,F=0,G=0;x=J[a>>2];J[a>>2]=x+1;a:{if((d-c|0)==1){q=N[a+48>>2];j=N[a+32>>2];c=J[b+12>>2]+P(c,36)|0;e=N[c+8>>2];e=e<j?j:e;n=N[a- -64>>2];e=Q(Q(Q((e>q?q:e)-j)*n)+Q(.5));b:{if(e<Q(4294967296)&e>=Q(0)){d=~~e>>>0;break b}d=0}k=N[a+40>>2];i=N[c>>2];r=N[a+60>>2];p=N[a+44>>2];e=N[a+28>>2];o=N[c+4>>2];v=N[a+56>>2];g=N[a+24>>2];a=J[a+16>>2];b=a+(x<<4)|0;I[b+4>>1]=d;o=e>o?e:o;o=Q(Q(r*Q((p<o?p:o)-e))+Q(.5));c:{if(o<Q(4294967296)&o>=Q(0)){d=~~o>>>0;break c}d=0}I[b+2>>1]=d;i=g>i?g:i;i=Q(Q(Q((k<i?k:i)-g)*v)+Q(.5));d:{if(i<Q(4294967296)&i>=Q(0)){d=~~i>>>0;break d}d=0}I[b>>1]=d;i=N[c+16>>2];o=N[c+20>>2];w=n;n=N[c+24>>2];n=j>n?j:n;j=Q(Q(w*Q((q<n?q:n)-j))+Q(.5));e:{if(j<Q(4294967296)&j>=Q(0)){d=~~j>>>0;break e}d=0}I[b+10>>1]=d;j=e>o?e:o;e=Q(Q(r*Q((j>p?p:j)-e))+Q(.5));f:{if(e<Q(4294967296)&e>=Q(0)){d=~~e>>>0;break f}d=0}I[b+8>>1]=d;e=g>i?g:i;e=Q(Q(v*Q((e>k?k:e)-g))+Q(.5));g:{if(e<Q(4294967296)&e>=Q(0)){d=~~e>>>0;break g}d=0}I[b+6>>1]=d;b=J[c+32>>2];break a}u=b;b=c;h=d-b|0;h:{i:{j:{if((b|0)>=(d|0)){k=Q(h|0);break j}m=J[u+12>>2];f=b;while(1){l=m+P(f,36)|0;p=Q(p+Q(Q(N[l+16>>2]+N[l>>2])*Q(.5)));e=Q(e+Q(Q(N[l+24>>2]+N[l+8>>2])*Q(.5)));g=Q(g+Q(Q(N[l+20>>2]+N[l+4>>2])*Q(.5)));f=f+1|0;if((f|0)!=(d|0)){continue}break}k=Q(h|0);if((b|0)<(d|0)){break i}}e=Q(0);g=Q(0);break h}j=Q(Q(1)/k);q=Q(j*e);i=Q(j*g);p=Q(j*p);l=J[u+12>>2];g=Q(0);e=Q(0);j=Q(0);while(1){n=j;f=l+P(b,36)|0;j=Q(Q(Q(N[f+16>>2]+N[f>>2])*Q(.5))-p);j=Q(n+Q(j*j));n=g;g=Q(Q(Q(N[f+24>>2]+N[f+8>>2])*Q(.5))-q);g=Q(n+Q(g*g));n=e;e=Q(Q(Q(N[f+20>>2]+N[f+4>>2])*Q(.5))-i);e=Q(n+Q(e*e));b=b+1|0;if((d|0)!=(b|0)){continue}break}}k=Q(Q(1)/Q(k+Q(-1)));j=Q(k*j);e=Q(k*e);b=j<e;h=Q(k*g)>(b?e:j)?2:b;e=Q(0);g=Q(0);j=Q(0);l=ga+-64|0;J[l+28>>2]=0;m=(c|0)>=(d|0);if(!m){y=J[u+12>>2];b=c;while(1){f=y+P(b,36)|0;e=Q(Q(Q(N[f+16>>2]+N[f>>2])*Q(.5))+e);g=Q(Q(Q(N[f+24>>2]+N[f+8>>2])*Q(.5))+g);j=Q(Q(Q(N[f+20>>2]+N[f+4>>2])*Q(.5))+j);b=b+1|0;if((d|0)!=(b|0)){continue}break}}y=d-c|0;k=Q(Q(1)/Q(y|0));N[l+24>>2]=k*g;N[l+20>>2]=k*j;N[l+16>>2]=k*e;f=c;if(!m){b=h<<2;e=N[b+(l+16|0)>>2];D=b+l|0;b=c;f=b;while(1){m=J[u+12>>2];h=m+P(b,36)|0;g=N[h+4>>2];j=N[h+20>>2];k=N[h+8>>2];p=N[h+24>>2];q=N[h>>2];i=N[h+16>>2];J[l+12>>2]=0;N[l>>2]=Q(i+q)*Q(.5);N[l+8>>2]=Q(p+k)*Q(.5);N[l+4>>2]=Q(j+g)*Q(.5);if(e<N[D>>2]){s=J[h+12>>2];J[l+40>>2]=J[h+8>>2];J[l+44>>2]=s;s=J[h+4>>2];J[l+32>>2]=J[h>>2];J[l+36>>2]=s;s=J[h+28>>2];J[l+56>>2]=J[h+24>>2];J[l+60>>2]=s;s=J[h+20>>2];J[l+48>>2]=J[h+16>>2];J[l+52>>2]=s;s=J[h+32>>2];z=P(f,36);m=m+z|0;t=J[m+4>>2];J[h>>2]=J[m>>2];J[h+4>>2]=t;t=J[m+12>>2];J[h+8>>2]=J[m+8>>2];J[h+12>>2]=t;t=J[m+20>>2];J[h+16>>2]=J[m+16>>2];J[h+20>>2]=t;t=J[m+28>>2];J[h+24>>2]=J[m+24>>2];J[h+28>>2]=t;J[h+32>>2]=J[m+32>>2];m=J[l+36>>2];h=J[u+12>>2]+z|0;J[h>>2]=J[l+32>>2];J[h+4>>2]=m;m=J[l+56>>2];z=J[l+60>>2];t=J[l+48>>2];E=J[l+52>>2];F=J[l+44>>2];G=J[l+40>>2];J[h+32>>2]=s;J[h+8>>2]=G;J[h+12>>2]=F;J[h+16>>2]=t;J[h+20>>2]=E;J[h+24>>2]=m;J[h+28>>2]=z;f=f+1|0}b=b+1|0;if((d|0)!=(b|0)){continue}break}}b=(y>>1)+c|0;h=b;b=(y|0)/3|0;l=(b+c|0)>=(f|0)?h:((b^-1)+d|0)<=(f|0)?h:f;k:{if((c|0)>=(d|0)){e=Q(3.4028234663852886e38);g=Q(-3.4028234663852886e38);j=Q(-3.4028234663852886e38);p=Q(3.4028234663852886e38);k=Q(-3.4028234663852886e38);q=Q(3.4028234663852886e38);break k}h=J[u+12>>2];k=Q(-3.4028234663852886e38);q=Q(3.4028234663852886e38);b=c;p=Q(3.4028234663852886e38);e=Q(3.4028234663852886e38);j=Q(-3.4028234663852886e38);g=Q(-3.4028234663852886e38);while(1){f=h+P(b,36)|0;i=N[f+16>>2];k=k<i?i:k;i=N[f+8>>2];e=e>i?i:e;i=N[f+4>>2];p=i<p?i:p;i=N[f>>2];q=i<q?i:q;i=N[f+24>>2];g=g<i?i:g;i=N[f+20>>2];j=j<i?i:j;b=b+1|0;if((d|0)!=(b|0)){continue}break}}A=N[a+60>>2];v=N[a+44>>2];i=N[a+28>>2];B=N[a- -64>>2];n=N[a+48>>2];r=N[a+32>>2];b=J[a+16>>2]+(x<<4)|0;C=N[a+56>>2];w=N[a+40>>2];o=N[a+24>>2];k=k<o?o:k;k=Q(Q(C*Q((k>w?w:k)-o))+Q(.5));l:{if(k<Q(4294967296)&k>=Q(0)){f=~~k>>>0;break l}f=0}I[b+6>>1]=f;k=o>q?o:q;k=Q(Q(Q((k>w?w:k)-o)*C)+Q(.5));m:{if(k<Q(4294967296)&k>=Q(0)){f=~~k>>>0;break m}f=0}I[b>>1]=f;g=g<r?r:g;g=Q(Q(B*Q((g>n?n:g)-r))+Q(.5));n:{if(g<Q(4294967296)&g>=Q(0)){f=~~g>>>0;break n}f=0}I[b+10>>1]=f;g=j<i?i:j;g=Q(Q(A*Q((g>v?v:g)-i))+Q(.5));o:{if(g<Q(4294967296)&g>=Q(0)){f=~~g>>>0;break o}f=0}I[b+8>>1]=f;e=e<r?r:e;e=Q(Q(Q((e>n?n:e)-r)*B)+Q(.5));p:{if(e<Q(4294967296)&e>=Q(0)){f=~~e>>>0;break p}f=0}I[b+4>>1]=f;e=i>p?i:p;e=Q(Q(Q((e>v?v:e)-i)*A)+Q(.5));q:{if(e<Q(4294967296)&e>=Q(0)){f=~~e>>>0;break q}f=0}I[b+2>>1]=f;Jg(a,u,c,l);Jg(a,u,l,d);b=x-J[a>>2]|0;a=J[a+16>>2]}J[((x<<4)+a|0)+12>>2]=b}function By(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=0,s=Q(0),t=Q(0),u=0;g=J[a+24>>2];if((g|0)>0){while(1){a:{b:{e=J[J[a+32>>2]+(q<<2)>>2];switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}d=0;g=ga+-64|0;ga=g;ik(e,0);k=J[e+732>>2];if((k|0)>0){while(1){c=J[e+740>>2]+P(d,52)|0;f=J[c+8>>2];j=N[f+28>>2];h=J[c+12>>2];n=N[h+28>>2];i=N[f+32>>2];l=N[h+32>>2];b=N[f+24>>2];m=N[h+24>>2];J[c+48>>2]=0;b=Q(m-b);N[c+36>>2]=b;i=Q(l-i);N[c+44>>2]=i;j=Q(n-j);N[c+40>>2]=j;N[c+32>>2]=Q(1)/Q(N[c+24>>2]*Q(Q(i*i)+Q(Q(b*b)+Q(j*j))));d=d+1|0;if((k|0)!=(d|0)){continue}break}}h=J[e+792>>2];if((h|0)>0){f=0;while(1){d=J[e+800>>2]+P(f,96)|0;c=J[d+20>>2];n=N[c+12>>2];l=N[c+8>>2];m=N[c+4>>2];p=N[c+28>>2];s=N[c+20>>2];t=N[c+24>>2];b=N[d+12>>2];i=N[d+4>>2];j=N[d+8>>2];N[g+56>>2]=Q(N[c+44>>2]*b)+Q(Q(N[c+36>>2]*i)+Q(j*N[c+40>>2]));J[g+60>>2]=0;N[g+52>>2]=Q(p*b)+Q(Q(s*i)+Q(j*t));N[g+48>>2]=Q(n*b)+Q(Q(m*i)+Q(l*j));hk(g,N[e+452>>2],N[J[d>>2]+88>>2],N[c+344>>2],c+264|0,g+48|0);c=J[g+12>>2];J[d+36>>2]=J[g+8>>2];J[d+40>>2]=c;c=J[g+4>>2];J[d+28>>2]=J[g>>2];J[d+32>>2]=c;c=J[g+28>>2];J[d+52>>2]=J[g+24>>2];J[d+56>>2]=c;c=J[g+20>>2];J[d+44>>2]=J[g+16>>2];J[d+48>>2]=c;c=J[g+44>>2];J[d+68>>2]=J[g+40>>2];J[d+72>>2]=c;c=J[g+36>>2];J[d+60>>2]=J[g+32>>2];J[d+64>>2]=c;c=J[g+60>>2];J[d+84>>2]=J[g+56>>2];J[d+88>>2]=c;c=J[g+52>>2];J[d+76>>2]=J[g+48>>2];J[d+80>>2]=c;N[d+92>>2]=N[e+452>>2]*N[J[d>>2]+88>>2];kb(J[d+20>>2],0);f=f+1|0;if((h|0)!=(f|0)){continue}break}}h=J[e+372>>2];c:{if((h|0)<=0){break c}d=J[e+396>>2];if((d|0)>0){f=0;while(1){c=0;if((d|0)>0){while(1){ia[(J[J[e+404>>2]+(c<<2)>>2]?0:937)|0](e,Q(1));d=J[e+396>>2];c=c+1|0;if((d|0)>(c|0)){continue}break}h=J[e+372>>2]}f=f+1|0;if((h|0)>(f|0)){continue}break}}f=J[e+712>>2];if((f|0)<=0){break c}d=0;while(1){b=N[e+452>>2];c=J[e+720>>2]+P(d,104)|0;J[c+20>>2]=0;N[c+8>>2]=Q(b*N[c+40>>2])+N[c+24>>2];N[c+16>>2]=Q(b*N[c+48>>2])+N[c+32>>2];N[c+12>>2]=Q(b*N[c+44>>2])+N[c+28>>2];d=d+1|0;if((f|0)!=(d|0)){continue}break}}c=J[e+376>>2];d:{if((c|0)<=0){break d}d=J[e+416>>2];f=0;while(1){if((d|0)>0){b=Q(Q(f|0)/Q(c|0));c=0;while(1){ia[J[(J[J[e+424>>2]+(c<<2)>>2]<<2)+21872>>2]](e,Q(1),b);d=J[e+416>>2];c=c+1|0;if((d|0)>(c|0)){continue}break}c=J[e+376>>2]}f=f+1|0;if((f|0)<(c|0)){continue}break}f=J[e+712>>2];if((f|0)<=0){break d}b=Q(N[e+456>>2]*Q(Q(1)-N[e+296>>2]));d=0;while(1){c=J[e+720>>2]+P(d,104)|0;J[c+52>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+64>>2]=0;J[c+68>>2]=0;N[c+40>>2]=b*Q(N[c+8>>2]-N[c+24>>2]);N[c+48>>2]=b*Q(N[c+16>>2]-N[c+32>>2]);N[c+44>>2]=b*Q(N[c+12>>2]-N[c+28>>2]);d=d+1|0;if((f|0)!=(d|0)){continue}break}}h=J[e+380>>2];e:{if((h|0)<=0){break e}b=N[e+456>>2];i=N[e+292>>2];k=J[e+712>>2];f:{if((k|0)>0){c=0;if((k|0)!=1){h=k&-2;f=0;while(1){d=J[e+720>>2]+P(c,104)|0;o=J[d+12>>2];J[d+24>>2]=J[d+8>>2];J[d+28>>2]=o;o=J[d+20>>2];J[d+32>>2]=J[d+16>>2];J[d+36>>2]=o;d=J[e+720>>2]+P(c|1,104)|0;o=J[d+12>>2];J[d+24>>2]=J[d+8>>2];J[d+28>>2]=o;o=J[d+20>>2];J[d+32>>2]=J[d+16>>2];J[d+36>>2]=o;c=c+2|0;f=f+2|0;if((h|0)!=(f|0)){continue}break}}if(k&1){d=J[e+720>>2]+P(c,104)|0;c=J[d+12>>2];f=J[d+8>>2];J[d+24>>2]=f;J[d+28>>2]=c;c=J[d+20>>2];J[d+32>>2]=J[d+16>>2];J[d+36>>2]=c}h=J[e+380>>2];if((h|0)<=0){break f}}f=0;d=J[e+436>>2];if((d|0)<=0){break f}while(1){c=0;if((d|0)>0){while(1){ia[J[(J[J[e+444>>2]+(c<<2)>>2]<<2)+21872>>2]](e,Q(1),Q(0));d=J[e+436>>2];c=c+1|0;if((d|0)>(c|0)){continue}break}h=J[e+380>>2]}f=f+1|0;if((h|0)>(f|0)){continue}break}}f=J[e+712>>2];if((f|0)<=0){break e}b=Q(i*b);h=J[e+720>>2];d=0;while(1){c=h+P(d,104)|0;N[c+40>>2]=Q(b*Q(N[c+8>>2]-N[c+24>>2]))+N[c+40>>2];N[c+44>>2]=Q(b*Q(N[c+12>>2]-N[c+28>>2]))+N[c+44>>2];N[c+48>>2]=Q(b*Q(N[c+16>>2]-N[c+32>>2]))+N[c+48>>2];d=d+1|0;if((f|0)!=(d|0)){continue}break}}f=0;k=J[e+1112>>2];if((k|0)>0){o=J[e+1120>>2];while(1){d=J[o+(f<<2)>>2];g:{if(!(N[d+352>>2]>Q(0))){break g}r=J[d+24>>2];if((r|0)<=0){break g}u=J[d+32>>2];h=0;while(1){c=J[u+(h<<2)>>2];h:{if(!(N[c+88>>2]>Q(0))){break h}b=N[d+332>>2];i=Q(N[c+28>>2]-N[d+232>>2]);j=Q(N[c+24>>2]-N[d+228>>2]);l=N[d+336>>2];n=Q(Q(Q(b*i)-Q(j*l))+N[d+324>>2]);m=Q(N[c+32>>2]-N[d+236>>2]);p=i;i=N[d+340>>2];l=Q(N[d+316>>2]+Q(Q(l*m)-Q(p*i)));m=Q(N[d+320>>2]+Q(Q(i*j)-Q(m*b)));b=N[c+48>>2];i=N[c+40>>2];j=N[c+44>>2];if(!(Q(Q(n*n)+Q(Q(l*l)+Q(m*m)))<=Q(Q(b*b)+Q(Q(i*i)+Q(j*j))))){break h}p=b;n=Q(n-b);b=N[d+352>>2];N[c+48>>2]=p+Q(n*b);N[c+44>>2]=j+Q(b*Q(m-j));N[c+40>>2]=i+Q(b*Q(l-i))}h=h+1|0;if((r|0)!=(h|0)){continue}break}}f=f+1|0;if((k|0)!=(f|0)){continue}break}}ik(e,1);ga=g- -64|0;g=J[a+24>>2]}q=q+1|0;if((q|0)<(g|0)){continue}break}}}function zo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=ga-400|0;ga=e;J[e+396>>2]=a;J[e+392>>2]=b;J[e+388>>2]=c;J[e+384>>2]=d;a=J[e+396>>2];b=ga-16|0;J[b+12>>2]=J[e+392>>2];c=J[b+12>>2];J[b+12>>2]=J[e+392>>2];d=J[b+12>>2]+4|0;J[b+12>>2]=J[e+392>>2];f=e+368|0;na(f,c,d,J[b+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];g=e+352|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+336|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];g=e+320|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+304|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];g=e+288|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+272|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];g=e+256|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+240|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+224|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+208|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+192|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+176|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+160|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+392>>2];f=e+144|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+128|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];f=e+112|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+96|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];f=e+80|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e- -64|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+388>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];f=e+48|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];g=e+32|0;na(g,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,g,J[e+384>>2]);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+388>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];f=e+16|0;na(f,b,c,J[d+12>>2]+8|0);b=ga-16|0;J[b+12>>2]=J[e+392>>2];b=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[e+392>>2];c=J[c+12>>2]+4|0;d=ga-16|0;J[d+12>>2]=J[e+388>>2];na(e,b,c,J[d+12>>2]+8|0);ia[J[J[a>>2]+8>>2]](a,f,e,J[e+384>>2]);ga=e+400|0}function ul(a,b){var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=0,V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=0;k=J[a+748>>2];a:{if((k|0)==4){c=N[a+84>>2];d=N[b+80>>2];k=c<d;w=k?0:-1;g=N[a+268>>2];c=k?c:d;k=g<c;U=k?1:w;d=N[a+452>>2];c=k?g:c;k=d<c;w=N[a+636>>2]<(k?d:c);k=w?3:k?2:U;l=N[b>>2];b:{c:{d:{e:{if(K[27116]){if(!k){o=N[a+564>>2];s=N[a+380>>2];c=Q(o-s);h=N[a+560>>2];t=N[a+376>>2];e=Q(h-t);q=N[a+556>>2];x=N[a+372>>2];m=Q(q-x);g=N[b+8>>2];j=N[b+4>>2];break e}r=N[a+188>>2];d=Q(l-r);h=N[a+560>>2];t=N[a+376>>2];e=Q(h-t);q=N[a+556>>2];x=N[a+372>>2];m=Q(q-x);j=N[b+4>>2];u=N[a+192>>2];c=Q(j-u);g=Q(Q(d*e)-Q(m*c));n=Q(g*g);i=c;o=N[a+564>>2];s=N[a+380>>2];c=Q(o-s);g=N[b+8>>2];v=N[a+196>>2];p=Q(g-v);f=Q(Q(i*c)-Q(e*p));d=Q(Q(p*m)-Q(c*d));ca=Q(n+Q(Q(f*f)+Q(d*d)));if((k|0)!=1){break e}d=Q(l-N[a+4>>2]);f=Q(-d);j=Q(j-N[a+8>>2]);y=Q(-j);g=Q(g-N[a+12>>2]);z=Q(-g);m=Q(0);break d}f:{g:{h:{i:{if(!k){j=N[a+380>>2];c=N[a+564>>2];m=Q(j-c);g=N[a+376>>2];e=N[a+560>>2];i=Q(g-e);v=N[a+372>>2];p=N[a+556>>2];A=Q(v-p);u=N[b+4>>2];L=Q(u-e);Y=Q(-L);B=Q(l-p);Z=Q(-B);r=N[b+8>>2];M=Q(r-c);_=Q(-M);E=Q(l-v);D=Q(-E);F=Q(r-j);V=Q(-F);G=Q(u-g);d=Q(-G);break i}f=N[a+188>>2];s=Q(l-f);g=N[a+376>>2];e=N[a+560>>2];i=Q(g-e);v=N[a+372>>2];p=N[a+556>>2];A=Q(v-p);u=N[b+4>>2];y=N[a+192>>2];t=Q(u-y);c=Q(Q(s*i)-Q(A*t));h=Q(c*c);j=N[a+380>>2];c=N[a+564>>2];m=Q(j-c);r=N[b+8>>2];z=N[a+196>>2];x=Q(r-z);d=Q(Q(t*m)-Q(i*x));o=Q(d*d);d=Q(Q(x*A)-Q(m*s));o=Q(h+Q(o+Q(d*d)));E=Q(l-v);C=Q(y-e);d=Q(f-p);G=Q(u-g);h=Q(Q(E*C)-Q(d*G));q=Q(h*h);D=Q(z-c);F=Q(r-j);h=Q(Q(G*D)-Q(C*F));n=Q(h*h);h=Q(Q(F*d)-Q(D*E));h=Q(q+Q(n+Q(h*h)));o=h<o?o:h;B=Q(l-p);h=Q(y-g);q=Q(f-v);L=Q(u-e);n=Q(Q(B*h)-Q(q*L));H=Q(n*n);n=Q(z-j);M=Q(r-c);h=Q(Q(L*n)-Q(h*M));I=Q(h*h);h=Q(Q(M*q)-Q(n*B));h=Q(H+Q(I+Q(h*h)));ca=h<o?o:h;Y=Q(-L);Z=Q(-B);_=Q(-M);if((k|0)==1){break h}D=Q(-E);V=Q(-F);d=Q(-G)}o=N[a+4>>2];H=Q(l-o);h=N[a+8>>2];I=Q(u-h);f=Q(Q(H*i)-Q(A*I));n=Q(f*f);q=N[a+12>>2];O=Q(r-q);f=Q(Q(I*m)-Q(i*O));m=Q(Q(O*A)-Q(m*H));m=Q(n+Q(Q(f*f)+Q(m*m)));n=Q(h-e);S=Q(o-p);f=Q(Q(E*n)+Q(S*d));i=Q(f*f);T=Q(q-c);f=Q(Q(G*T)+Q(n*V));s=Q(f*f);f=Q(Q(F*S)+Q(T*D));f=Q(i+Q(s+Q(f*f)));m=f<m?m:f;i=Q(h-g);A=Q(o-v);f=Q(Q(B*i)+Q(A*Y));s=Q(f*f);C=Q(q-j);f=Q(Q(L*C)+Q(i*_));t=Q(f*f);f=Q(Q(M*A)+Q(C*Z));f=Q(s+Q(t+Q(f*f)));m=f<m?m:f;z=N[a+196>>2];x=Q(r-z);y=N[a+192>>2];t=Q(u-y);f=N[a+188>>2];s=Q(l-f);$=Q(-H);aa=Q(-I);ba=Q(-O);if((k|0)==2){p=Q(q-z);n=Q(h-y);B=Q(o-f);c=Q(-t);W=Q(-s);X=Q(-x);e=Q(0);break f}D=Q(z-c);C=Q(y-e);d=Q(f-p);W=Q(-s);X=Q(-x);c=Q(-t);break g}W=Q(-s);X=Q(-x);o=N[a+4>>2];S=Q(o-p);q=N[a+12>>2];T=Q(q-c);h=N[a+8>>2];n=Q(h-e);H=Q(l-o);$=Q(-H);I=Q(u-h);aa=Q(-I);O=Q(r-q);ba=Q(-O);m=Q(0);c=Q(-t)}e=Q(Q(H*C)+Q(d*aa));i=Q(e*e);e=Q(Q(I*D)+Q(C*ba));d=Q(Q(O*d)+Q(D*$));d=Q(i+Q(Q(e*e)+Q(d*d)));e=Q(Q(s*n)+Q(S*c));i=Q(e*e);e=Q(Q(t*T)+Q(n*X));p=Q(e*e);e=Q(Q(x*S)+Q(T*W));e=Q(i+Q(p+Q(e*e)));d=d>e?d:e;n=Q(h-y);i=Q(B*n);B=Q(o-f);e=Q(i+Q(B*Y));i=Q(e*e);p=Q(q-z);e=Q(Q(L*p)+Q(n*_));A=Q(e*e);e=Q(Q(M*B)+Q(p*Z));e=Q(i+Q(A+Q(e*e)));e=d>e?d:e;i=Q(0);if(w){break b}C=Q(q-j);i=Q(h-g);A=Q(o-v);G=Q(u-g);d=Q(-G);E=Q(l-v);D=Q(-E);F=Q(r-j);V=Q(-F)}g=Q(y-g);l=Q(f-v);r=Q(Q(H*g)+Q(l*aa));j=Q(z-j);g=Q(Q(I*j)+Q(g*ba));f=Q(g*g);g=Q(Q(O*l)+Q(j*$));g=Q(Q(r*r)+Q(f+Q(g*g)));c=Q(Q(s*i)+Q(A*c));j=Q(c*c);c=Q(Q(t*C)+Q(i*X));i=Q(c*c);c=Q(Q(x*A)+Q(C*W));c=Q(j+Q(i+Q(c*c)));c=c<g?g:c;d=Q(Q(E*n)+Q(B*d));j=Q(d*d);d=Q(Q(G*p)+Q(n*V));i=Q(d*d);d=Q(Q(F*B)+Q(p*D));d=Q(j+Q(i+Q(d*d)));i=c>d?c:d;break b}d=Q(l-N[a+4>>2]);j=Q(j-N[a+8>>2]);l=Q(Q(d*e)-Q(m*j));g=Q(g-N[a+12>>2]);e=Q(Q(j*c)-Q(e*g));c=Q(Q(g*m)-Q(c*d));m=Q(Q(l*l)+Q(Q(e*e)+Q(c*c)));v=N[a+196>>2];u=N[a+192>>2];r=N[a+188>>2];f=Q(-d);y=Q(-j);z=Q(-g);e=Q(0);if((k|0)==2){break c}}c=Q(h-u);e=Q(q-r);l=Q(Q(d*c)+Q(e*y));i=Q(l*l);l=Q(o-v);c=Q(Q(j*l)+Q(c*z));h=Q(c*c);c=Q(Q(g*e)+Q(l*f));e=Q(i+Q(h+Q(c*c)));i=Q(0);if(w){break b}}c=Q(t-u);i=Q(d*c);d=Q(x-r);l=Q(i+Q(d*y));i=j;j=Q(s-v);c=Q(Q(i*j)+Q(c*z));i=Q(c*c);c=Q(Q(g*d)+Q(j*f));i=Q(Q(l*l)+Q(i+Q(c*c)))}c=Q(R(ca));k=c>Q(-0xde0b6b000000000);w=k?0:-1;d=Q(R(m));c=k?c:Q(-0xde0b6b000000000);k=d>c;w=k?1:w;g=Q(R(e));c=k?d:c;k=g>c;k=Q(R(i))>(k?g:c)?3:k?2:w;w=P(k,184)+a|0;U=J[w+116>>2];if(!U){break a}da=J[7969];if(!da){break a}ia[da|0](U)|0;J[w+116>>2]=0;break a}J[a+748>>2]=k+1}w=a;a=(k|0)>0?k:0;sa((w+P(a,184)|0)+4|0,b,184);return a}function FG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=0,I=Q(0),L=Q(0),M=0,O=0,R=0;f=ga-176|0;ga=f;g=K[a+28|0];F=g?b:c;M=g?c:b;O=J[M+4>>2];if(J[O+68>>2]!=J[a+40>>2]){r=J[a+12>>2];if((r|0)>0){g=0;while(1){G=g<<2;h=J[G+J[a+20>>2]>>2];if(h){ia[J[J[h>>2]>>2]](h)|0;h=J[a+4>>2];ia[J[J[h>>2]+60>>2]](h,J[J[a+20>>2]+G>>2])}g=g+1|0;if((r|0)!=(g|0)){continue}break}}Km(a,b,c)}h=J[O+64>>2];g=J[a+20>>2];b=J[a+4>>2];J[f+172>>2]=J[a+32>>2];J[f+168>>2]=g;J[f+164>>2]=e;J[f+160>>2]=d;J[f+156>>2]=b;J[f+152>>2]=F;J[f+148>>2]=M;J[f+144>>2]=9780;J[f+60>>2]=0;J[f+52>>2]=0;J[f+56>>2]=0;H[f+64|0]=1;b=J[a+12>>2];a:{if((b|0)<=0){break a}c=0;while(1){d=J[(c<<2)+g>>2];if(d){ia[J[J[d>>2]+16>>2]](d,f+48|0);g=0;d=J[f+52>>2];if((d|0)>0){while(1){b=J[J[f+60>>2]+(g<<2)>>2];if(J[b+748>>2]){J[e+4>>2]=b;r=J[b+740>>2];G=J[J[e+8>>2]+8>>2];d=(r|0)==(G|0);R=b;b=J[J[e+12>>2]+8>>2];ab(R,(d?r:b)+4|0,(d?b:G)+4|0);J[e+4>>2]=0;d=J[f+52>>2]}g=g+1|0;if((g|0)<(d|0)){continue}break}}b:{if((d|0)>=0){break b}if(J[f+56>>2]<0){b=J[f+60>>2];if(!(b?!b|!K[f+64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[f+64|0]=1;J[f+56>>2]=0;J[f+60>>2]=0}b=0;g=d;r=0-g&3;if(r){while(1){J[J[f+60>>2]+(g<<2)>>2]=0;g=g+1|0;b=b+1|0;if((r|0)!=(b|0)){continue}break}}if(d>>>0>4294967292){break b}while(1){b=g<<2;J[b+J[f+60>>2]>>2]=0;J[(b+J[f+60>>2]|0)+4>>2]=0;J[(b+J[f+60>>2]|0)+8>>2]=0;J[(b+J[f+60>>2]|0)+12>>2]=0;g=g+4|0;if(g){continue}break}}J[f+52>>2]=0;b=J[a+12>>2]}c=c+1|0;if((c|0)<(b|0)){g=J[a+20>>2];continue}break}b=J[f+60>>2];if(!b|!K[f+64|0]){break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}c:{d:{if(h){b=J[M+12>>2];s=N[b+52>>2];t=N[b+56>>2];c=J[F+12>>2];u=N[c+52>>2];v=N[c+56>>2];i=N[b+20>>2];j=N[b+36>>2];w=N[c+20>>2];x=N[c+36>>2];y=N[c+24>>2];k=N[b+24>>2];z=N[c+40>>2];l=N[b+40>>2];A=N[c+32>>2];m=N[b+32>>2];B=N[c>>2];n=N[b>>2];C=N[c+16>>2];o=N[b+16>>2];D=N[b+48>>2];E=N[c+48>>2];p=N[b+4>>2];I=N[c+4>>2];L=N[c+8>>2];q=N[b+8>>2];J[f+108>>2]=0;J[f+92>>2]=0;J[f+76>>2]=0;N[f+88>>2]=Q(z*l)+Q(Q(L*q)+Q(k*y));N[f+84>>2]=Q(x*l)+Q(Q(I*q)+Q(k*w));N[f+72>>2]=Q(z*j)+Q(Q(L*p)+Q(i*y));N[f+68>>2]=Q(x*j)+Q(Q(I*p)+Q(i*w));D=Q(-D);N[f+104>>2]=Q(Q(Q(q*D)-Q(k*s))-Q(l*t))+Q(Q(v*l)+Q(Q(E*q)+Q(k*u)));N[f+100>>2]=Q(Q(Q(p*D)-Q(i*s))-Q(j*t))+Q(Q(v*j)+Q(Q(E*p)+Q(i*u)));J[f+60>>2]=0;N[f+48>>2]=Q(A*m)+Q(Q(B*n)+Q(o*C));N[f+80>>2]=Q(A*l)+Q(Q(B*q)+Q(k*C));N[f+64>>2]=Q(A*j)+Q(Q(B*p)+Q(i*C));N[f+56>>2]=Q(z*m)+Q(Q(L*n)+Q(o*y));N[f+52>>2]=Q(x*m)+Q(Q(I*n)+Q(o*w));N[f+96>>2]=Q(Q(Q(n*D)-Q(o*s))-Q(m*t))+Q(Q(v*m)+Q(Q(E*n)+Q(o*u)));b=J[F+4>>2];ia[J[J[b>>2]+8>>2]](b,f+48|0,f+128|0,f+112|0);b=J[f+140>>2];J[f+24>>2]=J[f+136>>2];J[f+28>>2]=b;b=J[f+124>>2];J[f+40>>2]=J[f+120>>2];J[f+44>>2]=b;b=J[f+116>>2];J[f+32>>2]=J[f+112>>2];J[f+36>>2]=b;b=J[f+132>>2];J[f+16>>2]=J[f+128>>2];J[f+20>>2]=b;Vb(h,J[h>>2],f+16|0,f+144|0);break d}g=0;b=J[a+12>>2];if((b|0)<=0){break c}while(1){Jm(f+144|0,J[(J[O+24>>2]+P(g,80)|0)+64>>2],g);g=g+1|0;if((b|0)!=(g|0)){continue}break}}h=J[a+12>>2];if((h|0)<=0){break c}e=0;while(1){d=e<<2;e:{if(!J[d+J[a+20>>2]>>2]){break e}b=J[O+24>>2]+P(e,80)|0;g=J[b+64>>2];c=J[M+12>>2];I=N[c+52>>2];L=N[c+56>>2];s=N[b+48>>2];t=N[b+52>>2];u=N[b+56>>2];v=N[b+4>>2];w=N[b+20>>2];x=N[b+36>>2];y=N[b+8>>2];z=N[b+24>>2];A=N[b+40>>2];i=N[c+20>>2];j=N[c+24>>2];B=N[b>>2];C=N[b+16>>2];k=N[c+36>>2];E=N[b+32>>2];l=N[c+40>>2];D=N[c+48>>2];m=N[c+8>>2];n=N[c>>2];o=N[c+4>>2];p=N[c+16>>2];q=N[c+32>>2];b=0;J[f+108>>2]=0;J[f+92>>2]=0;J[f+76>>2]=0;J[f+60>>2]=0;N[f+80>>2]=Q(E*l)+Q(Q(B*q)+Q(k*C));N[f+64>>2]=Q(E*j)+Q(Q(B*p)+Q(i*C));N[f+48>>2]=Q(E*m)+Q(Q(B*n)+Q(o*C));N[f+88>>2]=Q(A*l)+Q(Q(y*q)+Q(k*z));N[f+84>>2]=Q(x*l)+Q(Q(v*q)+Q(k*w));N[f+72>>2]=Q(A*j)+Q(Q(y*p)+Q(i*z));N[f+68>>2]=Q(x*j)+Q(Q(v*p)+Q(i*w));N[f+56>>2]=Q(A*m)+Q(Q(y*n)+Q(o*z));N[f+52>>2]=Q(x*m)+Q(Q(v*n)+Q(o*w));N[f+104>>2]=L+Q(Q(u*l)+Q(Q(s*q)+Q(k*t)));N[f+100>>2]=I+Q(Q(u*j)+Q(Q(s*p)+Q(i*t)));N[f+96>>2]=D+Q(Q(u*m)+Q(Q(s*n)+Q(o*t)));ia[J[J[g>>2]+8>>2]](g,f+48|0,f+16|0,f+128|0);c=J[F+4>>2];ia[J[J[c>>2]+8>>2]](c,J[F+12>>2],f+112|0,f);c=0;f:{if(N[f+16>>2]>N[f>>2]){break f}c=0;if(N[f+128>>2]<N[f+112>>2]){break f}c=1}if(!(N[f+20>>2]>N[f+4>>2])&(!(N[f+132>>2]<N[f+116>>2])&(N[f+136>>2]<N[f+120>>2]|N[f+24>>2]>N[f+8>>2]?b:c))){break e}b=J[d+J[a+20>>2]>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+4>>2];ia[J[J[b>>2]+60>>2]](b,J[d+J[a+20>>2]>>2]);J[d+J[a+20>>2]>>2]=0}e=e+1|0;if((h|0)!=(e|0)){continue}break}}ga=f+176|0}function sl(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0,F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=0,ea=Q(0),fa=0;g=ga-96|0;ga=g;Ie(J[a+4>>2]);V=N[d+40>>2];W=N[d+36>>2];X=N[d+24>>2];Z=N[d+20>>2];G=N[b+20>>2];H=N[b+36>>2];I=N[b+24>>2];y=N[b+52>>2];m=N[c+52>>2];z=N[d+52>>2];l=N[e+52>>2];K=N[b+40>>2];A=N[b+56>>2];h=N[c+56>>2];B=N[d+56>>2];i=N[e+56>>2];_=N[d+32>>2];$=N[d+16>>2];aa=N[d+8>>2];ba=N[d+4>>2];ca=N[d>>2];L=N[b>>2];M=N[b+16>>2];O=N[b+32>>2];P=N[b+4>>2];R=N[b+8>>2];C=N[b+48>>2];j=N[c+48>>2];D=N[d+48>>2];p=N[e+48>>2];r=J[a+8>>2];J[g+60>>2]=0;x=Q(Q(j-C)-Q(p-D));j=Q(-x);t=Q(Q(m-y)-Q(l-z));u=Q(Q(h-A)-Q(i-B));N[g+56>>2]=Q(Q(R*j)-Q(I*t))-Q(K*u);N[g+52>>2]=Q(Q(P*j)-Q(G*t))-Q(H*u);N[g+48>>2]=Q(Q(L*j)-Q(M*t))-Q(O*u);ia[J[J[r>>2]+64>>2]](g+80|0,r,g+48|0);h=N[b+52>>2];i=N[b+24>>2];p=N[b+20>>2];j=N[b+56>>2];m=N[b+40>>2];l=N[b+36>>2];k=N[b+16>>2];n=N[b+48>>2];s=N[b+8>>2];o=N[b>>2];q=N[b+4>>2];v=N[b+32>>2];J[g+76>>2]=0;S=j;j=N[g+88>>2];w=Q(m*j);m=N[g+80>>2];T=l;l=N[g+84>>2];v=Q(S+Q(w+Q(Q(v*m)+Q(T*l))));N[g+72>>2]=v;n=Q(n+Q(Q(j*s)+Q(Q(m*o)+Q(l*q))));N[g+64>>2]=n;h=Q(h+Q(Q(j*i)+Q(Q(m*k)+Q(l*p))));N[g+68>>2]=h;r=J[a+12>>2];j=N[d+20>>2];m=N[d+36>>2];l=N[d+24>>2];i=N[d+40>>2];p=N[d>>2];k=N[d+16>>2];s=N[d+32>>2];o=N[d+4>>2];q=N[d+8>>2];J[g+28>>2]=0;N[g+24>>2]=Q(i*u)+Q(Q(q*x)+Q(t*l));N[g+20>>2]=Q(m*u)+Q(Q(o*x)+Q(t*j));N[g+16>>2]=Q(s*u)+Q(Q(p*x)+Q(t*k));ia[J[J[r>>2]+64>>2]](g+32|0,r,g+16|0);p=N[d+56>>2];k=N[d+40>>2];s=N[d+36>>2];j=N[d+52>>2];m=N[d+24>>2];l=N[d+20>>2];o=N[d+32>>2];i=N[d+48>>2];q=N[d+8>>2];w=N[d>>2];U=N[d+4>>2];F=N[d+16>>2];J[g+60>>2]=0;J[g+92>>2]=0;S=j;j=N[g+40>>2];ea=Q(m*j);m=N[g+32>>2];T=l;l=N[g+36>>2];F=Q(S+Q(ea+Q(Q(F*m)+Q(T*l))));N[g+52>>2]=F;h=Q(h-F);N[g+84>>2]=h;i=Q(i+Q(Q(j*q)+Q(Q(m*w)+Q(l*U))));N[g+48>>2]=i;i=Q(n-i);N[g+80>>2]=i;j=Q(p+Q(Q(j*k)+Q(Q(m*o)+Q(l*s))));N[g+56>>2]=j;k=Q(v-j);N[g+88>>2]=k;s=Q(0);j=Q(0);m=Q(0);l=Q(0);p=Q(0);n=Q(0);a:{b:{if(!(Q(Q(k*k)+Q(Q(i*i)+Q(h*h)))>Q(9999999747378752e-20))){break b}r=32;while(1){if(!r){break b}E=J[a+8>>2];J[g+12>>2]=0;h=Q(-N[g+80>>2]);i=N[g+84>>2];k=N[g+88>>2];N[g+8>>2]=Q(Q(R*h)-Q(I*i))-Q(K*k);N[g+4>>2]=Q(Q(P*h)-Q(G*i))-Q(H*k);N[g>>2]=Q(Q(L*h)-Q(M*i))-Q(O*k);da=g+16|0;ia[J[J[E>>2]+64>>2]](da,E,g);J[g+76>>2]=0;h=N[g+24>>2];i=N[g+16>>2];k=N[g+20>>2];N[g+72>>2]=A+Q(Q(h*K)+Q(Q(i*O)+Q(H*k)));N[g+68>>2]=y+Q(Q(h*I)+Q(Q(i*M)+Q(G*k)));N[g+64>>2]=C+Q(Q(h*R)+Q(Q(i*L)+Q(P*k)));E=J[a+12>>2];J[g+12>>2]=0;h=N[g+88>>2];i=N[g+80>>2];k=N[g+84>>2];N[g+8>>2]=Q(V*h)+Q(Q(aa*i)+Q(X*k));N[g+4>>2]=Q(W*h)+Q(Q(ba*i)+Q(Z*k));N[g>>2]=Q(_*h)+Q(Q(ca*i)+Q($*k));ia[J[J[E>>2]+64>>2]](da,E,g);J[g+60>>2]=0;J[g+44>>2]=0;k=N[g+24>>2];o=N[g+16>>2];q=N[g+20>>2];h=Q(z+Q(Q(k*X)+Q(Q(o*$)+Q(Z*q))));N[g+52>>2]=h;v=Q(N[g+68>>2]-h);N[g+36>>2]=v;h=N[g+84>>2];i=Q(D+Q(Q(k*aa)+Q(Q(o*ca)+Q(ba*q))));N[g+48>>2]=i;w=Q(N[g+64>>2]-i);N[g+32>>2]=w;i=N[g+80>>2];k=Q(B+Q(Q(k*V)+Q(Q(o*_)+Q(W*q))));N[g+56>>2]=k;o=Q(N[g+72>>2]-k);N[g+40>>2]=o;if(n>Q(1)){break a}k=N[g+88>>2];o=Q(Q(k*o)+Q(Q(i*w)+Q(v*h)));if(o>Q(0)){j=Q(Q(k*u)+Q(Q(i*x)+Q(t*h)));if(j>=Q(-1.4210854715202004e-14)){break a}m=N[b+48>>2];l=N[c+48>>2];p=N[b+52>>2];y=N[c+52>>2];A=N[b+56>>2];C=N[c+56>>2];D=N[d+48>>2];q=N[e+48>>2];z=N[d+52>>2];w=N[e+52>>2];B=N[d+56>>2];U=N[e+56>>2];J[g+44>>2]=0;N[g+36>>2]=v;n=Q(n-Q(o/j));j=Q(Q(1)-n);B=Q(Q(B*j)+Q(n*U));z=Q(Q(j*z)+Q(n*w));D=Q(Q(j*D)+Q(n*q));A=Q(Q(j*A)+Q(n*C));y=Q(Q(j*p)+Q(n*y));C=Q(Q(j*m)+Q(n*l));p=N[g+92>>2];m=h;l=k;j=i}if(!nl(J[a+4>>2],g+32|0)){rl(J[a+4>>2],g+32|0,g- -64|0,g+48|0)}if(!ol(J[a+4>>2],g+80|0)){break b}r=r-1|0;h=N[g+88>>2];i=Q(h*h);h=N[g+80>>2];k=Q(h*h);h=N[g+84>>2];if(Q(i+Q(k+Q(h*h)))>Q(9999999747378752e-20)){continue}break}}N[f+164>>2]=n;n=Q(0);i=Q(0);h=Q(0);k=Q(Q(l*l)+Q(Q(j*j)+Q(m*m)));if(k>=Q(1.4210854715202004e-14)){h=l;l=Q(Q(1)/Q(Y(k)));i=Q(h*l);n=Q(m*l);s=Q(j*l);h=p}N[f+132>>2]=s;N[f+144>>2]=h;N[f+140>>2]=i;N[f+136>>2]=n;if(Q(-N[f+172>>2])<=Q(Q(i*u)+Q(Q(s*x)+Q(t*n)))){break a}ml(J[a+4>>2],g+16|0,g);a=J[g+12>>2];J[f+156>>2]=J[g+8>>2];J[f+160>>2]=a;a=J[g+4>>2];J[f+148>>2]=J[g>>2];J[f+152>>2]=a;fa=1}ga=g+96|0;return fa|0}function Qj(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=0;w=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=w;w=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=w;w=J[a+28>>2];J[b+24>>2]=J[a+24>>2];J[b+28>>2]=w;w=J[a+20>>2];J[b+16>>2]=J[a+16>>2];J[b+20>>2]=w;w=J[a+36>>2];J[b+32>>2]=J[a+32>>2];J[b+36>>2]=w;w=J[a+44>>2];J[b+40>>2]=J[a+40>>2];J[b+44>>2]=w;e=N[a+8>>2];f=N[a+20>>2];l=N[a+40>>2];g=N[a+24>>2];i=N[a+36>>2];j=N[a+4>>2];m=N[a+32>>2];n=N[a+16>>2];h=N[a>>2];J[c+44>>2]=0;J[c+28>>2]=0;J[c+12>>2]=0;p=Q(Q(n*i)-Q(m*f));k=Q(Q(f*l)-Q(i*g));o=Q(Q(g*m)-Q(l*n));d=Q(Q(1)/Q(Q(e*p)+Q(Q(h*k)+Q(j*o))));q=Q(Q(Q(e*i)-Q(l*j))*d);N[c+4>>2]=q;r=Q(Q(Q(j*g)-Q(f*e))*d);N[c+8>>2]=r;o=Q(o*d);N[c+16>>2]=o;s=Q(Q(Q(h*l)-Q(m*e))*d);N[c+20>>2]=s;t=Q(Q(Q(e*n)-Q(g*h))*d);N[c+24>>2]=t;p=Q(p*d);N[c+32>>2]=p;u=Q(Q(Q(j*m)-Q(i*h))*d);N[c+36>>2]=u;v=Q(Q(Q(h*f)-Q(n*j))*d);N[c+40>>2]=v;k=Q(k*d);N[c>>2]=k;a:{b:{if(!J[8326]){break b}while(1){d=Q(R(k));e=Q(R(o));j=Q(R(p));h=Q(Q(d+e)+j);f=Q(R(q));l=Q(R(s));g=Q(R(u));i=Q(Q(f+l)+g);h=h>i?h:i;i=Q(R(r));m=Q(R(t));n=Q(R(v));y=Q(Q(i+m)+n);d=Q(Q(d+f)+i);e=Q(Q(e+l)+m);d=d>e?d:e;e=Q(Q(j+g)+n);e=Q((h>y?h:y)*(d>e?d:e));if(e<Q(1.1920928955078125e-7)){break b}y=N[b>>2];f=Q(R(y));j=N[b+16>>2];g=Q(R(j));h=N[b+32>>2];n=Q(R(h));d=Q(Q(f+g)+n);z=N[b+4>>2];B=Q(R(z));m=N[b+20>>2];C=Q(R(m));l=N[b+36>>2];D=Q(R(l));i=Q(Q(B+C)+D);E=d>i?d:i;A=N[b+8>>2];F=Q(R(A));i=N[b+24>>2];G=Q(R(i));d=N[b+40>>2];H=Q(R(d));x=Q(Q(F+G)+H);E=E>x?E:x;f=Q(Q(f+B)+F);g=Q(Q(g+C)+G);f=f>g?f:g;g=Q(Q(n+D)+H);f=Q(E*(f>g?f:g));if(f<Q(1.1920928955078125e-7)){break b}J[b+44>>2]=0;J[b+28>>2]=0;J[b+12>>2]=0;x=d;e=cg(Q(e/f),Q(.25));d=Q(e+Q(-2));e=Q(Q(1)/e);B=Q(Q(Q(x*d)+Q(v*e))*Q(.5));f=Q(x+B);N[b+40>>2]=f;C=Q(Q(Q(l*d)+Q(t*e))*Q(.5));l=Q(l+C);N[b+36>>2]=l;D=Q(Q(Q(h*d)+Q(r*e))*Q(.5));g=Q(h+D);N[b+32>>2]=g;F=Q(Q(Q(i*d)+Q(u*e))*Q(.5));i=Q(i+F);N[b+24>>2]=i;G=Q(Q(Q(m*d)+Q(s*e))*Q(.5));m=Q(m+G);N[b+20>>2]=m;H=Q(Q(Q(j*d)+Q(q*e))*Q(.5));n=Q(j+H);N[b+16>>2]=n;x=A;A=Q(Q(Q(A*d)+Q(p*e))*Q(.5));j=Q(x+A);N[b+8>>2]=j;x=z;z=Q(Q(Q(z*d)+Q(o*e))*Q(.5));h=Q(x+z);N[b+4>>2]=h;x=y;y=Q(Q(Q(y*d)+Q(k*e))*Q(.5));e=Q(x+y);N[b>>2]=e;J[c+44>>2]=0;J[c+28>>2]=0;J[c+12>>2]=0;q=Q(Q(n*l)-Q(g*m));k=Q(Q(m*f)-Q(l*i));r=Q(Q(i*g)-Q(f*n));d=Q(Q(1)/Q(Q(j*q)+Q(Q(e*k)+Q(h*r))));v=Q(Q(Q(e*m)-Q(n*h))*d);N[c+40>>2]=v;u=Q(Q(Q(h*g)-Q(l*e))*d);N[c+36>>2]=u;p=Q(q*d);N[c+32>>2]=p;t=Q(Q(Q(j*n)-Q(i*e))*d);N[c+24>>2]=t;s=Q(Q(Q(e*f)-Q(g*j))*d);N[c+20>>2]=s;o=Q(r*d);N[c+16>>2]=o;r=Q(Q(Q(h*i)-Q(m*j))*d);N[c+8>>2]=r;q=Q(Q(Q(j*l)-Q(f*h))*d);N[c+4>>2]=q;k=Q(k*d);N[c>>2]=k;d=Q(Q(R(D))+Q(Q(R(y))+Q(R(H))));e=Q(Q(R(C))+Q(Q(R(z))+Q(R(G))));d=d>e?d:e;e=Q(Q(R(B))+Q(Q(R(A))+Q(R(F))));if(Q(E*N[8325])>=(d>e?d:e)){break a}I=I+1|0;if(I>>>0<M[8326]){continue}break}}d=N[b+36>>2];e=N[b+20>>2];j=N[b+40>>2];h=N[b+24>>2];f=N[a+36>>2];l=N[a+20>>2];g=N[a+4>>2];i=N[b+4>>2];m=N[a+40>>2];n=N[a+24>>2];q=N[a+8>>2];r=N[b+8>>2];o=N[a+32>>2];s=N[b+32>>2];t=N[a>>2];p=N[b>>2];u=N[a+16>>2];v=N[b+16>>2];J[c+44>>2]=0;J[c+28>>2]=0;J[c+12>>2]=0;k=Q(Q(o*s)+Q(Q(t*p)+Q(v*u)));N[c>>2]=Q(k+k)*Q(.5);k=Q(Q(m*j)+Q(Q(q*r)+Q(h*n)));N[c+40>>2]=Q(k+k)*Q(.5);k=Q(Q(Q(Q(f*j)+Q(Q(g*r)+Q(h*l)))+Q(Q(m*d)+Q(Q(q*i)+Q(e*n))))*Q(.5));N[c+36>>2]=k;j=Q(Q(Q(Q(o*j)+Q(Q(t*r)+Q(h*u)))+Q(Q(m*s)+Q(Q(q*p)+Q(v*n))))*Q(.5));N[c+32>>2]=j;N[c+24>>2]=k;h=Q(Q(f*d)+Q(Q(g*i)+Q(e*l)));N[c+20>>2]=Q(h+h)*Q(.5);d=Q(Q(Q(Q(o*d)+Q(Q(t*i)+Q(e*u)))+Q(Q(f*s)+Q(Q(g*p)+Q(v*l))))*Q(.5));N[c+16>>2]=d;N[c+8>>2]=j;N[c+4>>2]=d;return}d=N[a+32>>2];e=N[a>>2];j=N[a+16>>2];h=N[b+32>>2];f=N[b>>2];l=N[b+16>>2];g=N[a+36>>2];i=N[a+4>>2];m=N[a+20>>2];n=N[b+36>>2];q=N[b+4>>2];r=N[b+20>>2];o=N[a+40>>2];s=N[b+40>>2];t=N[a+8>>2];p=N[b+8>>2];u=N[a+24>>2];v=N[b+24>>2];J[c+44>>2]=0;J[c+28>>2]=0;J[c+12>>2]=0;k=Q(Q(o*s)+Q(Q(t*p)+Q(v*u)));N[c+40>>2]=Q(k+k)*Q(.5);k=Q(Q(Q(Q(g*s)+Q(Q(i*p)+Q(v*m)))+Q(Q(o*n)+Q(Q(t*q)+Q(r*u))))*Q(.5));N[c+36>>2]=k;o=Q(Q(Q(Q(d*s)+Q(Q(e*p)+Q(v*j)))+Q(Q(o*h)+Q(Q(t*f)+Q(l*u))))*Q(.5));N[c+32>>2]=o;N[c+24>>2]=k;s=Q(Q(g*n)+Q(Q(i*q)+Q(r*m)));N[c+20>>2]=Q(s+s)*Q(.5);g=Q(Q(Q(Q(d*n)+Q(Q(e*q)+Q(r*j)))+Q(Q(g*h)+Q(Q(i*f)+Q(l*m))))*Q(.5));N[c+16>>2]=g;N[c+8>>2]=o;N[c+4>>2]=g;d=Q(Q(d*h)+Q(Q(e*f)+Q(l*j)));N[c>>2]=Q(d+d)*Q(.5)}function vg(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=0;B=K[a+180|0];C=K[a+48|0];a:{if(C?B:1){x=N[b+52>>2];z=N[b+56>>2];j=N[a+100>>2];k=N[a+104>>2];l=N[a+108>>2];d=N[b+20>>2];g=N[b+24>>2];y=N[a+68>>2];p=N[a+84>>2];q=N[a+56>>2];r=N[a+72>>2];s=N[a+88>>2];t=N[a+60>>2];h=N[b+36>>2];u=N[a+76>>2];m=N[b+40>>2];v=N[a+92>>2];A=N[b+48>>2];n=N[b+8>>2];o=N[b>>2];e=N[b+4>>2];f=N[b+16>>2];w=N[a+52>>2];i=N[b+32>>2];J[a+884>>2]=0;J[a+868>>2]=0;J[a+852>>2]=0;J[a+836>>2]=0;N[a+864>>2]=Q(v*m)+Q(Q(t*i)+Q(u*h));N[a+860>>2]=Q(s*m)+Q(Q(q*i)+Q(r*h));N[a+856>>2]=Q(p*m)+Q(Q(w*i)+Q(y*h));N[a+848>>2]=Q(v*g)+Q(Q(t*f)+Q(u*d));N[a+844>>2]=Q(s*g)+Q(Q(q*f)+Q(r*d));N[a+840>>2]=Q(p*g)+Q(Q(w*f)+Q(y*d));N[a+832>>2]=Q(v*n)+Q(Q(t*o)+Q(e*u));N[a+828>>2]=Q(s*n)+Q(Q(q*o)+Q(e*r));N[a+824>>2]=Q(p*n)+Q(Q(w*o)+Q(y*e));N[a+880>>2]=z+Q(Q(l*m)+Q(Q(j*i)+Q(h*k)));N[a+876>>2]=x+Q(Q(l*g)+Q(Q(j*f)+Q(d*k)));N[a+872>>2]=A+Q(Q(l*n)+Q(Q(j*o)+Q(e*k)));j=N[a+172>>2];d=N[c+40>>2];k=N[a+164>>2];g=N[c+32>>2];h=N[c+36>>2];l=N[a+168>>2];y=Q(Q(j*d)+Q(Q(k*g)+Q(h*l)));e=N[c+24>>2];f=N[c+16>>2];i=N[c+20>>2];m=Q(Q(j*e)+Q(Q(k*f)+Q(i*l)));p=N[a+156>>2];q=N[a+124>>2];r=N[a+140>>2];n=Q(Q(p*d)+Q(Q(q*g)+Q(r*h)));s=N[a+152>>2];t=N[a+120>>2];u=N[a+136>>2];o=Q(Q(s*d)+Q(Q(t*g)+Q(u*h)));v=N[a+148>>2];w=N[a+116>>2];x=N[a+132>>2];z=Q(Q(v*d)+Q(Q(w*g)+Q(x*h)));g=Q(Q(p*e)+Q(Q(q*f)+Q(r*i)));h=Q(Q(s*e)+Q(Q(t*f)+Q(u*i)));i=Q(Q(v*e)+Q(Q(w*f)+Q(x*i)));d=N[c+8>>2];e=N[c>>2];f=N[c+4>>2];j=Q(Q(j*d)+Q(Q(k*e)+Q(f*l)));k=Q(Q(p*d)+Q(Q(q*e)+Q(f*r)));l=Q(Q(s*d)+Q(Q(t*e)+Q(f*u)));d=Q(Q(v*d)+Q(Q(w*e)+Q(x*f)));break a}x=N[c+52>>2];z=N[c+56>>2];j=N[a+164>>2];k=N[a+168>>2];l=N[a+172>>2];d=N[c+20>>2];g=N[c+24>>2];y=N[a+132>>2];p=N[a+148>>2];q=N[a+120>>2];r=N[a+136>>2];s=N[a+152>>2];t=N[a+124>>2];h=N[c+36>>2];u=N[a+140>>2];m=N[c+40>>2];v=N[a+156>>2];A=N[c+48>>2];n=N[c+8>>2];o=N[c>>2];e=N[c+4>>2];f=N[c+16>>2];w=N[a+116>>2];i=N[c+32>>2];J[a+884>>2]=0;J[a+868>>2]=0;J[a+852>>2]=0;J[a+836>>2]=0;N[a+864>>2]=Q(v*m)+Q(Q(t*i)+Q(u*h));N[a+860>>2]=Q(s*m)+Q(Q(q*i)+Q(r*h));N[a+856>>2]=Q(p*m)+Q(Q(w*i)+Q(y*h));N[a+848>>2]=Q(v*g)+Q(Q(t*f)+Q(u*d));N[a+844>>2]=Q(s*g)+Q(Q(q*f)+Q(r*d));N[a+840>>2]=Q(p*g)+Q(Q(w*f)+Q(y*d));N[a+832>>2]=Q(v*n)+Q(Q(t*o)+Q(e*u));N[a+828>>2]=Q(s*n)+Q(Q(q*o)+Q(e*r));N[a+824>>2]=Q(p*n)+Q(Q(w*o)+Q(y*e));N[a+880>>2]=z+Q(Q(l*m)+Q(Q(j*i)+Q(h*k)));N[a+876>>2]=x+Q(Q(l*g)+Q(Q(j*f)+Q(d*k)));N[a+872>>2]=A+Q(Q(l*n)+Q(Q(j*o)+Q(e*k)));j=N[a+108>>2];d=N[b+40>>2];k=N[a+100>>2];g=N[b+32>>2];h=N[b+36>>2];l=N[a+104>>2];y=Q(Q(j*d)+Q(Q(k*g)+Q(h*l)));e=N[b+24>>2];f=N[b+16>>2];i=N[b+20>>2];m=Q(Q(j*e)+Q(Q(k*f)+Q(i*l)));p=N[a+92>>2];q=N[a+60>>2];r=N[a+76>>2];n=Q(Q(p*d)+Q(Q(q*g)+Q(r*h)));s=N[a+88>>2];t=N[a+56>>2];u=N[a+72>>2];o=Q(Q(s*d)+Q(Q(t*g)+Q(u*h)));v=N[a+84>>2];w=N[a+52>>2];x=N[a+68>>2];z=Q(Q(v*d)+Q(Q(w*g)+Q(x*h)));g=Q(Q(p*e)+Q(Q(q*f)+Q(r*i)));h=Q(Q(s*e)+Q(Q(t*f)+Q(u*i)));i=Q(Q(v*e)+Q(Q(w*f)+Q(x*i)));d=N[b+8>>2];e=N[b>>2];f=N[b+4>>2];j=Q(Q(j*d)+Q(Q(k*e)+Q(f*l)));k=Q(Q(p*d)+Q(Q(q*e)+Q(f*r)));l=Q(Q(s*d)+Q(Q(t*e)+Q(f*u)));c=b;d=Q(Q(v*d)+Q(Q(w*e)+Q(x*f)))}e=N[c+56>>2];f=N[c+52>>2];N[a+936>>2]=N[c+48>>2]+j;J[a+932>>2]=0;N[a+928>>2]=n;N[a+924>>2]=o;N[a+920>>2]=z;J[a+916>>2]=0;N[a+912>>2]=g;N[a+908>>2]=h;N[a+904>>2]=i;J[a+900>>2]=0;N[a+896>>2]=k;N[a+892>>2]=l;N[a+888>>2]=d;J[a+948>>2]=0;N[a+940>>2]=m+f;N[a+944>>2]=y+e;b=J[a+876>>2];J[a+968>>2]=J[a+872>>2];J[a+972>>2]=b;b=J[a+884>>2];J[a+976>>2]=J[a+880>>2];J[a+980>>2]=b;b=J[a+948>>2];J[a+992>>2]=J[a+944>>2];J[a+996>>2]=b;b=J[a+940>>2];J[a+984>>2]=J[a+936>>2];J[a+988>>2]=b;e=N[a+840>>2];f=N[a+856>>2];i=N[a+824>>2];J[a+964>>2]=0;N[a+960>>2]=f;N[a+956>>2]=e;N[a+952>>2]=i;b:{if(B|C){n=N[a+972>>2];g=Q(N[a+988>>2]-n);o=N[a+968>>2];h=Q(N[a+984>>2]-o);m=N[a+976>>2];d=Q(N[a+992>>2]-m);break b}n=N[a+972>>2];g=Q(n-N[a+988>>2]);o=N[a+968>>2];h=Q(o-N[a+984>>2]);m=N[a+976>>2];d=Q(m-N[a+992>>2])}N[a+1016>>2]=h;J[a+1028>>2]=0;N[a+1024>>2]=d;N[a+1020>>2]=g;J[a+1012>>2]=0;j=Q(Q(f*d)+Q(Q(i*h)+Q(e*g)));N[a+1032>>2]=j;N[a+1008>>2]=Q(f*j)+m;N[a+1004>>2]=n+Q(e*j);N[a+1e3>>2]=o+Q(i*j);N[a+1036>>2]=Q(d*N[a+860>>2])+Q(Q(h*N[a+828>>2])+Q(N[a+844>>2]*g));N[a+1040>>2]=Q(d*N[a+864>>2])+Q(Q(h*N[a+832>>2])+Q(N[a+848>>2]*g))}function Dn(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=0,g=0,h=0;f=ga-96|0;ga=f;J[f+92>>2]=a;J[f+88>>2]=b;J[f+84>>2]=c;a=J[f+92>>2];b=f+8|0;_i(b);ia[J[J[a>>2]+20>>2]](a,J[f+88>>2],b);d=N[f+72>>2];a=ga-32|0;ga=a;J[a+28>>2]=J[f+84>>2];J[a+24>>2]=b;J[a+20>>2]=b+16;J[a+16>>2]=b+32;N[a+12>>2]=d;c=J[a+28>>2];b=ga-16|0;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+16>>2];a:{if(N[J[b+12>>2]>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]>>2];break a}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2]}b:{if(e>d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+16>>2];c:{if(N[J[b+12>>2]>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]>>2];break c}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2]}break b}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]>>2]}b=ga-16|0;J[b+12>>2]=c;N[J[b+12>>2]>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+16>>2];d:{if(N[J[b+12>>2]+4>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+4>>2];break d}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2]}e:{if(e>d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+16>>2];f:{if(N[J[b+12>>2]+4>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+4>>2];break f}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2]}break e}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]+4>>2]}b=ga-16|0;J[b+12>>2]=c;N[J[b+12>>2]+4>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+16>>2];g:{if(N[J[b+12>>2]+8>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+8>>2];break g}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2]}h:{if(e>d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+16>>2];i:{if(N[J[b+12>>2]+8>>2]<d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+8>>2];break i}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2]}break h}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]+8>>2]}b=ga-16|0;J[b+12>>2]=c;N[J[b+12>>2]+8>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+16>>2];j:{if(N[J[b+12>>2]>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]>>2];break j}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2]}k:{if(e<d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+16>>2];l:{if(N[J[b+12>>2]>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]>>2];break l}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]>>2]}break k}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]>>2]}b=ga-16|0;J[b+12>>2]=c+16;N[J[b+12>>2]>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+16>>2];m:{if(N[J[b+12>>2]+4>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+4>>2];break m}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2]}n:{if(e<d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+16>>2];o:{if(N[J[b+12>>2]+4>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+4>>2];break o}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+4>>2]}break n}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]+4>>2]}b=ga-16|0;J[b+12>>2]=c+16;N[J[b+12>>2]+4>>2]=d;J[b+12>>2]=J[a+24>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+16>>2];p:{if(N[J[b+12>>2]+8>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+8>>2];break p}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2]}q:{if(e<d){b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+16>>2];r:{if(N[J[b+12>>2]+8>>2]>d){b=ga-16|0;J[b+12>>2]=J[a+16>>2];d=N[J[b+12>>2]+8>>2];break r}b=ga-16|0;J[b+12>>2]=J[a+20>>2];d=N[J[b+12>>2]+8>>2]}break q}b=ga-16|0;J[b+12>>2]=J[a+24>>2];d=N[J[b+12>>2]+8>>2]}b=ga-16|0;h=c+16|0;J[b+12>>2]=h;N[J[b+12>>2]+8>>2]=d;d=N[a+12>>2];J[b+12>>2]=c;g=J[b+12>>2];N[g>>2]=N[g>>2]-d;d=N[a+12>>2];J[b+12>>2]=c;g=J[b+12>>2];N[g+4>>2]=N[g+4>>2]-d;d=N[a+12>>2];J[b+12>>2]=c;c=J[b+12>>2];N[c+8>>2]=N[c+8>>2]-d;d=N[a+12>>2];J[b+12>>2]=h;c=J[b+12>>2];N[c>>2]=N[c>>2]+d;d=N[a+12>>2];J[b+12>>2]=h;c=J[b+12>>2];N[c+4>>2]=N[c+4>>2]+d;d=N[a+12>>2];J[b+12>>2]=h;b=J[b+12>>2];N[b+8>>2]=N[b+8>>2]+d;ga=a+32|0;ga=f+96|0}function cA(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0);c=ga-288|0;ga=c;ya(2666);if(J[a+232>>2]>0){while(1){e=J[J[a+240>>2]+(h<<2)>>2];J[e+244>>2]=1065353216;a:{b:{switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}if(K[e+204|0]&3){break a}ve(e,b,c+224|0);c:{d:{if(!K[a+44|0]){break d}f=N[e+252>>2];f=Q(f*f);if(f==Q(0)){break d}i=Q(N[c+280>>2]-N[e+60>>2]);m=Q(i*i);i=Q(N[c+272>>2]-N[e+52>>2]);j=Q(i*i);i=Q(N[c+276>>2]-N[e+56>>2]);if(!(f<Q(m+Q(j+Q(i*i))))){break d}ya(3079);if(J[J[e+192>>2]+4>>2]<=19){J[8145]=J[8145]+1;d=J[a+68>>2];d=ia[J[J[d>>2]+36>>2]](d)|0;k=J[a+24>>2];J[c+132>>2]=1065353216;J[c+136>>2]=-65535;g=J[e+64>>2];J[c+148>>2]=J[e+60>>2];J[c+152>>2]=g;g=J[e+56>>2];J[c+140>>2]=J[e+52>>2];J[c+144>>2]=g;g=J[c+284>>2];J[c+164>>2]=J[c+280>>2];J[c+168>>2]=g;g=J[c+276>>2];J[c+156>>2]=J[c+272>>2];J[c+160>>2]=g;J[c+204>>2]=0;J[c+128>>2]=20664;J[c+216>>2]=d;J[c+220>>2]=k;J[c+212>>2]=0;J[c+208>>2]=e;f=N[e+248>>2];k=c+72|0;d=k;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[c+116>>2]=f;N[c+100>>2]=f;J[c+76>>2]=8;J[c+72>>2]=16132;N[c+212>>2]=N[a+56>>2];d=J[e+188>>2];I[c+136>>1]=L[d+4>>1];I[c+138>>1]=L[d+6>>1];d=J[c+236>>2];J[c+16>>2]=J[c+232>>2];J[c+20>>2]=d;d=J[c+228>>2];J[c+8>>2]=J[c+224>>2];J[c+12>>2]=d;d=J[c+252>>2];J[c+32>>2]=J[c+248>>2];J[c+36>>2]=d;d=J[c+244>>2];J[c+24>>2]=J[c+240>>2];J[c+28>>2]=d;d=J[c+268>>2];J[c+48>>2]=J[c+264>>2];J[c+52>>2]=d;d=J[c+260>>2];J[c+40>>2]=J[c+256>>2];J[c+44>>2]=d;d=J[c+284>>2];J[c+64>>2]=J[c+280>>2];J[c+68>>2]=d;d=J[c+276>>2];J[c+56>>2]=J[c+272>>2];J[c+60>>2]=d;d=e+4|0;g=J[d+12>>2];J[c+16>>2]=J[d+8>>2];J[c+20>>2]=g;g=J[d+4>>2];J[c+8>>2]=J[d>>2];J[c+12>>2]=g;g=J[e+32>>2];J[c+32>>2]=J[e+28>>2];J[c+36>>2]=g;g=J[e+24>>2];J[c+24>>2]=J[e+20>>2];J[c+28>>2]=g;g=J[e+48>>2];J[c+48>>2]=J[e+44>>2];J[c+52>>2]=g;g=J[e+40>>2];J[c+40>>2]=J[e+36>>2];J[c+44>>2]=g;ic(a,k,d,c+8|0,c+128|0,Q(0));f=N[c+132>>2];if(f<Q(1)){break c}}xa()}xk(e,c+224|0);break a}N[e+244>>2]=f;d=c+224|0;ve(e,Q(f*b),d);J[e+244>>2]=0;xk(e,d);xa()}h=h+1|0;if((h|0)<J[a+232>>2]){continue}break}}if(K[a+275|0]){ya(2862);h=J[a+308>>2];if((h|0)>0){while(1){k=J[J[a+316>>2]+(v<<2)>>2];if(J[k+748>>2]>0){e=J[k+744>>2];e=J[e+236>>2]<<30>>31&e;d=J[k+740>>2];d=J[d+236>>2]<<30>>31&d;g=0;while(1){b=Q(N[d+228>>2]*N[e+228>>2]);e:{if(!(b>Q(0))){break e}h=k+P(g,184)|0;f=N[h+124>>2];if(f==Q(0)){break e}s=N[h+44>>2];y=N[e+60>>2];t=N[h+40>>2];z=N[e+56>>2];u=N[h+36>>2];A=N[e+52>>2];i=Q(b*Q(f*Q(-N[h+76>>2])));j=Q(b*Q(f*Q(-N[h+72>>2])));f=Q(b*Q(f*Q(-N[h+68>>2])));b=N[d+344>>2];if(b!=Q(0)){o=N[h+60>>2];w=N[d+60>>2];n=N[h+56>>2];p=N[d+56>>2];q=N[h+52>>2];x=N[d+52>>2];r=Q(f*N[d+348>>2]);N[d+312>>2]=Q(b*r)+N[d+312>>2];l=Q(j*N[d+352>>2]);N[d+316>>2]=Q(b*l)+N[d+316>>2];m=b;b=Q(i*N[d+356>>2]);N[d+320>>2]=Q(m*b)+N[d+320>>2];m=N[d+552>>2];B=N[d+304>>2];C=N[d+296>>2];D=N[d+300>>2];E=N[d+548>>2];F=N[d+288>>2];G=N[d+280>>2];H=N[d+284>>2];q=Q(q-x);p=Q(n-p);n=Q(Q(q*l)-Q(r*p));o=Q(o-w);l=Q(Q(p*b)-Q(l*o));b=Q(Q(o*r)-Q(b*q));N[d+328>>2]=Q(Q(Q(N[d+272>>2]*n)+Q(Q(N[d+264>>2]*l)+Q(b*N[d+268>>2])))*N[d+544>>2])+N[d+328>>2];N[d+332>>2]=Q(E*Q(Q(F*n)+Q(Q(G*l)+Q(b*H))))+N[d+332>>2];N[d+336>>2]=Q(m*Q(Q(B*n)+Q(Q(C*l)+Q(b*D))))+N[d+336>>2]}b=N[e+344>>2];if(b==Q(0)){break e}f=Q(N[e+348>>2]*Q(-f));N[e+312>>2]=Q(b*f)+N[e+312>>2];j=Q(N[e+352>>2]*Q(-j));N[e+316>>2]=Q(b*j)+N[e+316>>2];m=b;b=Q(N[e+356>>2]*Q(-i));N[e+320>>2]=Q(m*b)+N[e+320>>2];r=N[e+552>>2];l=N[e+304>>2];n=N[e+296>>2];o=N[e+300>>2];w=N[e+548>>2];p=N[e+288>>2];q=N[e+280>>2];x=N[e+284>>2];u=Q(u-A);t=Q(t-z);i=Q(Q(u*j)-Q(f*t));s=Q(s-y);j=Q(Q(t*b)-Q(j*s));b=Q(Q(s*f)-Q(b*u));N[e+328>>2]=Q(Q(Q(N[e+272>>2]*i)+Q(Q(N[e+264>>2]*j)+Q(b*N[e+268>>2])))*N[e+544>>2])+N[e+328>>2];N[e+332>>2]=Q(w*Q(Q(p*i)+Q(Q(q*j)+Q(b*x))))+N[e+332>>2];N[e+336>>2]=Q(r*Q(Q(l*i)+Q(Q(n*j)+Q(b*o))))+N[e+336>>2]}g=g+1|0;if((g|0)<J[k+748>>2]){continue}break}h=J[a+308>>2]}v=v+1|0;if((v|0)<(h|0)){continue}break}}xa()}xa();ga=c+288|0}function aj(a,b,c,d,e){var f=0,g=Q(0);f=ga-32|0;ga=f;J[f+24>>2]=a;J[f+20>>2]=b;J[f+16>>2]=c;J[f+12>>2]=d;N[f+8>>2]=e;a=J[f+24>>2];J[f+28>>2]=a;b=ga-16|0;J[b+12>>2]=a;J[b+12>>2]=a+16;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+12>>2];a:{if(N[J[b+12>>2]>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]>>2];break a}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2]}b:{if(g>e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+12>>2];c:{if(N[J[b+12>>2]>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]>>2];break c}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2]}break b}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]>>2]}b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+12>>2];d:{if(N[J[b+12>>2]+4>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+4>>2];break d}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2]}e:{if(g>e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+12>>2];f:{if(N[J[b+12>>2]+4>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+4>>2];break f}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2]}break e}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]+4>>2]}b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+4>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+12>>2];g:{if(N[J[b+12>>2]+8>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+8>>2];break g}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2]}h:{if(g>e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+12>>2];i:{if(N[J[b+12>>2]+8>>2]<e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+8>>2];break i}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2]}break h}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]+8>>2]}b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+8>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+12>>2];j:{if(N[J[b+12>>2]>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]>>2];break j}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2]}k:{if(g<e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2];J[b+12>>2]=J[f+12>>2];l:{if(N[J[b+12>>2]>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]>>2];break l}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]>>2]}break k}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]>>2]}b=ga-16|0;J[b+12>>2]=a+16;N[J[b+12>>2]>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+12>>2];m:{if(N[J[b+12>>2]+4>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+4>>2];break m}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2]}n:{if(g<e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[f+12>>2];o:{if(N[J[b+12>>2]+4>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+4>>2];break o}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+4>>2]}break n}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]+4>>2]}b=ga-16|0;J[b+12>>2]=a+16;N[J[b+12>>2]+4>>2]=e;J[b+12>>2]=J[f+20>>2];g=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+12>>2];p:{if(N[J[b+12>>2]+8>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+8>>2];break p}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2]}q:{if(g<e){b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[f+12>>2];r:{if(N[J[b+12>>2]+8>>2]>e){b=ga-16|0;J[b+12>>2]=J[f+12>>2];e=N[J[b+12>>2]+8>>2];break r}b=ga-16|0;J[b+12>>2]=J[f+16>>2];e=N[J[b+12>>2]+8>>2]}break q}b=ga-16|0;J[b+12>>2]=J[f+20>>2];e=N[J[b+12>>2]+8>>2]}b=ga-16|0;c=a+16|0;J[b+12>>2]=c;N[J[b+12>>2]+8>>2]=e;e=N[f+8>>2];J[b+12>>2]=a;d=J[b+12>>2];N[d>>2]=N[d>>2]-e;e=N[f+8>>2];J[b+12>>2]=a;d=J[b+12>>2];N[d+4>>2]=N[d+4>>2]-e;e=N[f+8>>2];J[b+12>>2]=a;a=J[b+12>>2];N[a+8>>2]=N[a+8>>2]-e;e=N[f+8>>2];J[b+12>>2]=c;a=J[b+12>>2];N[a>>2]=N[a>>2]+e;e=N[f+8>>2];J[b+12>>2]=c;a=J[b+12>>2];N[a+4>>2]=N[a+4>>2]+e;e=N[f+8>>2];J[b+12>>2]=c;a=J[b+12>>2];N[a+8>>2]=N[a+8>>2]+e;ga=f+32|0}function Ab(a,b,c,d,e,f,g){var h=0,i=0,j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0),I=Q(0),M=Q(0),O=Q(0),P=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0);i=ga+-64|0;ga=i;r=e<<4;h=r+J[a+16>>2]|0;s=L[h>>1];l=L[h+2>>1];u=L[h+4>>1];m=N[a+28>>2];n=N[a+60>>2];o=N[a+32>>2];p=N[a- -64>>2];k=N[a+24>>2];j=N[a+56>>2];J[i+44>>2]=0;N[i+40>>2]=o+Q(Q(u>>>0)/p);N[i+36>>2]=m+Q(Q(l>>>0)/n);N[i+32>>2]=k+Q(Q(s>>>0)/j);s=L[h+6>>1];l=L[h+8>>1];h=L[h+10>>1];J[i+60>>2]=0;N[i+56>>2]=o+Q(Q(h>>>0)/p);N[i+52>>2]=m+Q(Q(l>>>0)/n);N[i+48>>2]=k+Q(Q(s>>>0)/j);s=f<<4;h=s+J[b+16>>2]|0;l=L[h>>1];u=L[h+2>>1];F=L[h+4>>1];m=N[b+28>>2];n=N[b+60>>2];o=N[b+32>>2];p=N[b- -64>>2];k=N[b+24>>2];j=N[b+56>>2];J[i+12>>2]=0;N[i+8>>2]=o+Q(Q(F>>>0)/p);N[i+4>>2]=m+Q(Q(u>>>0)/n);N[i>>2]=k+Q(Q(l>>>0)/j);l=L[h+6>>1];u=L[h+8>>1];h=L[h+10>>1];J[i+28>>2]=0;N[i+24>>2]=o+Q(Q(h>>>0)/p);N[i+20>>2]=m+Q(Q(u>>>0)/n);N[i+16>>2]=k+Q(Q(l>>>0)/j);h=0;G=N[d+24>>2];n=N[i+24>>2];j=Q(Q(n+N[i+8>>2])*Q(.5));I=N[d+16>>2];o=N[i+16>>2];q=Q(Q(o+N[i>>2])*Q(.5));p=N[i+20>>2];t=Q(Q(p+N[i+4>>2])*Q(.5));M=N[d+20>>2];m=N[i+48>>2];k=Q(Q(m+N[i+32>>2])*Q(.5));v=Q(Q(N[d>>2]+Q(Q(G*j)+Q(Q(I*q)+Q(t*M))))-k);m=Q(m-k);y=N[d+72>>2];n=Q(n-j);z=N[d+64>>2];o=Q(o-q);p=Q(p-t);A=N[d+68>>2];a:{if(Q(R(v))>Q(m+Q(Q(y*n)+Q(Q(z*o)+Q(p*A))))){break a}O=N[d+40>>2];P=N[d+32>>2];S=N[d+36>>2];k=N[i+52>>2];w=Q(Q(k+N[i+36>>2])*Q(.5));x=Q(Q(N[d+4>>2]+Q(Q(O*j)+Q(Q(P*q)+Q(t*S))))-w);k=Q(k-w);w=N[d+88>>2];B=N[d+80>>2];C=N[d+84>>2];if(Q(R(x))>Q(k+Q(Q(w*n)+Q(Q(B*o)+Q(p*C))))){break a}T=N[d+56>>2];U=N[d+48>>2];V=N[d+52>>2];q=Q(N[d+8>>2]+Q(Q(T*j)+Q(Q(U*q)+Q(t*V))));j=N[i+56>>2];t=Q(Q(j+N[i+40>>2])*Q(.5));q=Q(q-t);j=Q(j-t);t=N[d+104>>2];D=N[d+96>>2];E=N[d+100>>2];if(Q(R(q))>Q(j+Q(Q(t*n)+Q(Q(D*o)+Q(p*E))))|Q(R(Q(Q(q*U)+Q(Q(v*I)+Q(x*P)))))>Q(o+Q(Q(j*D)+Q(Q(m*z)+Q(k*B))))|Q(R(Q(Q(q*V)+Q(Q(v*M)+Q(x*S)))))>Q(p+Q(Q(j*E)+Q(Q(m*A)+Q(k*C))))){break a}l=Q(R(Q(Q(q*T)+Q(Q(v*G)+Q(x*O)))))>Q(n+Q(Q(j*t)+Q(Q(m*y)+Q(k*w))));h=!l;if(!g|l){break a}b:{if(Q(R(Q(Q(q*P)-Q(U*x))))>Q(Q(n*A)+Q(Q(p*y)+Q(Q(k*D)+Q(j*B))))){break b}W=Q(-x);if(Q(R(Q(Q(q*S)+Q(V*W))))>Q(Q(n*z)+Q(Q(o*y)+Q(Q(k*E)+Q(j*C))))|Q(R(Q(Q(q*O)+Q(T*W))))>Q(Q(p*z)+Q(Q(o*A)+Q(Q(k*t)+Q(j*w))))|Q(R(Q(Q(v*U)-Q(I*q))))>Q(Q(n*C)+Q(Q(p*w)+Q(Q(m*D)+Q(j*z))))){break b}q=Q(-q);if(Q(R(Q(Q(v*V)+Q(M*q))))>Q(Q(n*B)+Q(Q(o*w)+Q(Q(m*E)+Q(j*A))))|Q(R(Q(Q(v*T)+Q(G*q))))>Q(Q(p*B)+Q(Q(o*C)+Q(Q(m*t)+Q(j*y))))|Q(R(Q(Q(x*I)-Q(P*v))))>Q(Q(n*E)+Q(Q(p*t)+Q(Q(m*B)+Q(k*z))))){break b}j=Q(-v);if(Q(R(Q(Q(x*M)+Q(S*j))))>Q(Q(n*D)+Q(Q(o*t)+Q(Q(m*C)+Q(k*A))))){break b}h=1;if(!(Q(R(Q(Q(x*G)+Q(O*j))))>Q(Q(p*D)+Q(Q(o*E)+Q(Q(m*w)+Q(k*y)))))){break a}}h=0}c:{if(!h){break c}h=J[(s+J[b+16>>2]|0)+12>>2];s=J[(r+J[a+16>>2]|0)+12>>2];if((s|0)>=0){if((h|0)>=0){f=J[c+4>>2];d:{if((f|0)!=J[c+8>>2]){break d}e=f?f<<1:1;if((e|0)<=(f|0)){break d}e:{if(!e){d=0;break e}J[8369]=J[8369]+1;d=ia[J[6782]](e<<3,16)|0;f=J[c+4>>2]}a=J[c+12>>2];f:{g:{if((f|0)>0){b=0;if((f|0)!=1){l=f&-2;g=0;while(1){r=b<<3;u=r+d|0;F=a+r|0;J[u>>2]=J[F>>2];J[u+4>>2]=J[F+4>>2];r=r|8;u=r+d|0;r=a+r|0;J[u>>2]=J[r>>2];J[u+4>>2]=J[r+4>>2];b=b+2|0;g=g+2|0;if((l|0)!=(g|0)){continue}break}}if(f&1){b=b<<3;g=b+d|0;b=a+b|0;J[g>>2]=J[b>>2];J[g+4>>2]=J[b+4>>2]}if(K[c+16|0]){break g}break f}if(!a|!K[c+16|0]){break f}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}f=J[c+4>>2]}J[c+12>>2]=d;H[c+16|0]=1;J[c+8>>2]=e}a=J[c+12>>2]+(f<<3)|0;J[a+4>>2]=h;J[a>>2]=s;J[c+4>>2]=f+1;break c}g=f+1|0;Ab(a,b,c,d,e,g,0);l=a;a=J[(J[b+16>>2]+(g<<4)|0)+12>>2];Ab(l,b,c,d,e,(a|0)>=0?f+2|0:g-a|0,0);break c}g=e+1|0;if((h|0)>=0){Ab(a,b,c,d,g,f,0);l=a;a=J[(J[a+16>>2]+(g<<4)|0)+12>>2];Ab(l,b,c,d,(a|0)>=0?e+2|0:g-a|0,f,0);break c}h=f+1|0;Ab(a,b,c,d,g,h,0);f=f+2|0;r=h<<4;s=J[(r+J[b+16>>2]|0)+12>>2];Ab(a,b,c,d,g,(s|0)>=0?f:h-s|0,0);e=e+2|0;s=g<<4;l=J[(s+J[a+16>>2]|0)+12>>2];Ab(a,b,c,d,(l|0)>=0?e:g-l|0,h,0);l=a;a=J[(s+J[a+16>>2]|0)+12>>2];e=(a|0)>=0?e:g-a|0;a=J[(r+J[b+16>>2]|0)+12>>2];Ab(l,b,c,d,e,(a|0)>=0?f:h-a|0,0)}ga=i- -64|0}function $e(a,b,c,d,e,f){var g=0,h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=0,u=0,v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,L=0,M=0,O=0;g=ga-272|0;ga=g;i=J[c+12>>2];J[g+216>>2]=J[c+8>>2];J[g+220>>2]=i;i=J[c+4>>2];J[g+208>>2]=J[c>>2];J[g+212>>2]=i;i=J[c+28>>2];J[g+232>>2]=J[c+24>>2];J[g+236>>2]=i;i=J[c+20>>2];J[g+224>>2]=J[c+16>>2];J[g+228>>2]=i;i=J[c+44>>2];J[g+248>>2]=J[c+40>>2];J[g+252>>2]=i;i=J[c+36>>2];J[g+240>>2]=J[c+32>>2];J[g+244>>2]=i;i=J[c+60>>2];J[g+264>>2]=J[c+56>>2];J[g+268>>2]=i;i=J[c+52>>2];J[g+256>>2]=J[c+48>>2];J[g+260>>2]=i;i=J[d+12>>2];J[g+152>>2]=J[d+8>>2];J[g+156>>2]=i;i=J[d+4>>2];J[g+144>>2]=J[d>>2];J[g+148>>2]=i;i=J[d+28>>2];J[g+168>>2]=J[d+24>>2];J[g+172>>2]=i;i=J[d+20>>2];J[g+160>>2]=J[d+16>>2];J[g+164>>2]=i;i=J[d+44>>2];J[g+184>>2]=J[d+40>>2];J[g+188>>2]=i;i=J[d+36>>2];J[g+176>>2]=J[d+32>>2];J[g+180>>2]=i;i=J[d+60>>2];J[g+200>>2]=J[d+56>>2];J[g+204>>2]=i;i=J[d+52>>2];J[g+192>>2]=J[d+48>>2];J[g+196>>2]=i;J[g+108>>2]=0;N[g+104>>2]=N[g+200>>2]-N[g+264>>2];N[g+100>>2]=N[g+196>>2]-N[g+260>>2];N[g+96>>2]=N[g+192>>2]-N[g+256>>2];t=g+208|0;u=g+16|0;i=g+128|0;hc(t,g+144|0,u,i);J[g+92>>2]=0;k=N[g+128>>2];N[g+88>>2]=k*N[g+24>>2];N[g+84>>2]=k*N[g+20>>2];N[g+80>>2]=k*N[g+16>>2];J[g+72>>2]=0;J[g+76>>2]=0;r=g- -64|0;J[r>>2]=0;J[r+4>>2]=0;Na(t,i);J[g+60>>2]=0;J[g+44>>2]=0;h=N[g+140>>2];l=N[g+136>>2];k=N[g+128>>2];j=N[g+132>>2];m=Q(Q(2)/Q(Q(h*h)+Q(Q(l*l)+Q(Q(k*k)+Q(j*j)))));n=Q(l*m);o=Q(j*n);p=Q(k*m);q=Q(h*p);N[g+52>>2]=o+q;N[g+40>>2]=o-q;o=Q(k*p);v=j;j=Q(j*m);m=Q(v*j);N[g+56>>2]=Q(1)-Q(o+m);l=Q(l*n);N[g+36>>2]=Q(1)-Q(o+l);J[g+28>>2]=0;o=Q(k*n);p=Q(h*j);N[g+48>>2]=o-p;k=Q(k*j);h=Q(h*n);N[g+32>>2]=k+h;N[g+24>>2]=o+p;N[g+20>>2]=k-h;N[g+16>>2]=Q(1)-Q(m+l);nm(b,u,g+96|0,g+80|0,i,g+112|0);if(J[a+268>>2]>0){t=d+48|0;u=c+48|0;d=0;while(1){i=J[J[a+276>>2]+(d<<2)>>2];a:{if(!(ia[J[J[e>>2]+8>>2]](e,J[i+188>>2])|0)){break a}w=J[i+192>>2];C=i+4|0;c=g+16|0;r=g+96|0;ia[J[J[w>>2]+8>>2]](w,C,c,r);J[g+28>>2]=0;J[g+108>>2]=0;N[g+24>>2]=N[g+24>>2]+N[g+136>>2];N[g+20>>2]=N[g+20>>2]+N[g+132>>2];N[g+16>>2]=N[g+16>>2]+N[g+128>>2];N[g+96>>2]=N[g+96>>2]+N[g+112>>2];N[g+100>>2]=N[g+100>>2]+N[g+116>>2];N[g+104>>2]=N[g+104>>2]+N[g+120>>2];J[g+12>>2]=1065353216;w=0;h=N[r>>2];j=N[c>>2];l=Q(Q(h+j)*Q(.5));k=Q(N[t>>2]-l);h=Q(Q(h-j)*Q(.5));D=k>h;j=N[r+4>>2];m=N[c+4>>2];p=Q(Q(j+m)*Q(.5));n=Q(N[t+4>>2]-p);o=Q(N[u>>2]-l);E=h<o;y=Q(-h);F=k<y;j=Q(Q(j-m)*Q(.5));z=Q(-j);G=n<z;H=j<n;l=N[r+8>>2];m=N[c+8>>2];q=Q(Q(l+m)*Q(.5));s=Q(N[t+8>>2]-q);x=Q(Q(l-m)*Q(.5));A=Q(-x);c=s<A;r=F|D<<3|G<<1|H<<4|c<<2|(s>x)<<5;I=o<y;p=Q(N[u+4>>2]-p);K=z>p;L=j<p;q=Q(N[u+8>>2]-q);M=A>q;O=I|E<<3|K<<1|L<<4|M<<2|(q>x)<<5;b:{if(r&O){break b}B=Q(k-o);k=N[g+12>>2];c:{d:{if(I){m=Q(0);l=Q(Q(Q(-o)-h)/B);if(!(l>=Q(0))){break d}m=Q(1);break c}m=Q(0);if(!F){break d}h=Q(Q(Q(-o)-h)/B);if(!(h<k)){break d}k=h}l=Q(0)}v=Q(n-p);e:{f:{if(K){n=Q(0);h=Q(Q(Q(-p)-j)/v);if(!(l<=h)){break f}m=Q(0);n=Q(1);break e}n=Q(0);if(!G){break f}h=Q(Q(Q(-p)-j)/v);if(!(h<k)){break f}k=h}h=l}s=Q(s-q);g:{h:{if(M){l=Q(0);j=Q(Q(Q(-q)-x)/s);if(!(j>=h)){break h}n=Q(0);l=Q(1);m=Q(0);break g}l=Q(0);if(!c){break h}j=Q(Q(Q(-q)-x)/s);if(!(j<k)){break h}k=j}j=h}i:{j:{if(E){h=Q(Q(Q(-y)-o)/B);if(!(j<=h)){break j}m=Q(-1);l=Q(0);n=Q(0);break i}if(!D){break j}h=Q(Q(Q(-y)-o)/B);if(!(h<k)){break j}k=h}h=j}k:{l:{if(L){j=Q(Q(Q(-z)-p)/v);if(!(j>=h)){break l}n=Q(-1);l=Q(0);m=Q(0);break k}if(!H){break l}j=Q(Q(Q(-z)-p)/v);if(!(j<k)){break l}k=j}j=h}m:{n:{if(O&32){h=Q(Q(Q(-A)-q)/s);if(!(j<=h)){break n}n=Q(0);l=Q(-1);m=Q(0);break m}if(!(r&32)){break n}h=Q(Q(Q(-A)-q)/s);if(!(h<k)){break n}k=h}h=j}if(!(h<=k)){break b}N[g+12>>2]=h;J[g+92>>2]=0;N[g+88>>2]=l;N[g+84>>2]=n;N[g+80>>2]=m;w=1}if(!w){break a}r=J[i+192>>2];c=ga-32|0;ga=c;J[c+24>>2]=-1;J[c+28>>2]=-1;J[c+20>>2]=C;J[c+16>>2]=i;J[c+12>>2]=r;J[c+8>>2]=0;hh(b,g+208|0,g+144|0,c+8|0,e,f);ga=c+32|0}d=d+1|0;if((d|0)<J[a+268>>2]){continue}break}}ga=g+272|0}function Qe(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=Q(0),l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);a:{b:{if(K[a+165|0]){d=J[a+88>>2];if(!(!c|(d|0)<=0)){e=J[a+96>>2];n=N[a+168>>2];o=N[b+8>>2];p=N[b+4>>2];q=N[b>>2];c=0;while(1){f=e+(c<<4)|0;k=Q(N[f+8>>2]-o);r=Q(k*k);k=Q(N[f>>2]-q);s=Q(k*k);k=Q(N[f+4>>2]-p);if(n>=Q(r+Q(s+Q(k*k)))){break b}c=c+1|0;if((d|0)!=(c|0)){continue}break}}c=J[a+32>>2];J[c+12>>2]=J[c+12>>2]+1;c:{if(J[a+92>>2]!=(d|0)){break c}h=d?d<<1:1;if((h|0)<=(d|0)){break c}if(h){J[8369]=J[8369]+1;g=ia[J[6782]](h<<4,16)|0;d=J[a+88>>2]}d:{if((d|0)<=0){break d}i=d&1;c=0;if((d|0)!=1){l=d&-2;d=0;while(1){j=c<<4;f=j+g|0;m=j+J[a+96>>2]|0;e=J[m+4>>2];J[f>>2]=J[m>>2];J[f+4>>2]=e;e=J[m+12>>2];J[f+8>>2]=J[m+8>>2];J[f+12>>2]=e;e=j|16;f=e+g|0;j=e+J[a+96>>2]|0;e=J[j+4>>2];J[f>>2]=J[j>>2];J[f+4>>2]=e;e=J[j+12>>2];J[f+8>>2]=J[j+8>>2];J[f+12>>2]=e;c=c+2|0;d=d+2|0;if((l|0)!=(d|0)){continue}break}}if(!i){break d}c=c<<4;f=c+g|0;e=c+J[a+96>>2]|0;c=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=c;c=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=c}c=J[a+96>>2];if(!(c?!c|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+96>>2]=g;H[a+100|0]=1;J[a+92>>2]=h;d=J[a+88>>2]}c=J[b+4>>2];e=J[a+96>>2]+(d<<4)|0;J[e>>2]=J[b>>2];J[e+4>>2]=c;c=J[b+12>>2];J[e+8>>2]=J[b+8>>2];J[e+12>>2]=c;b=J[a+88>>2];J[a+88>>2]=b+1;J[J[a+32>>2]+16>>2]=J[a+96>>2];return b}d=J[a+108>>2];if(!(!c|(d|0)<=0)){e=J[a+116>>2];n=N[a+168>>2];o=N[b+8>>2];p=N[b+4>>2];q=N[b>>2];c=0;while(1){f=e+(c<<2)|0;k=Q(N[f+8>>2]-o);r=Q(k*k);k=Q(N[f>>2]-q);s=Q(k*k);k=Q(N[f+4>>2]-p);if(n>=Q(r+Q(s+Q(k*k)))){break a}c=c+3|0;if((d|0)>(c|0)){continue}break}}e=J[a+112>>2];e:{if((e|0)!=(d|0)){break e}e=d?d<<1:1;if((e|0)<=(d|0)){e=d;break e}if(e){J[8369]=J[8369]+1;h=ia[J[6782]](e<<2,16)|0;d=J[a+108>>2]}i=J[a+116>>2];f:{g:{if((d|0)>0){c=0;if(d-1>>>0>=3){g=d&-4;while(1){l=c<<2;N[l+h>>2]=N[i+l>>2];f=l|4;N[f+h>>2]=N[f+i>>2];f=l|8;N[f+h>>2]=N[f+i>>2];f=l|12;N[f+h>>2]=N[f+i>>2];c=c+4|0;j=j+4|0;if((g|0)!=(j|0)){continue}break}}g=d&3;if(g){while(1){f=c<<2;N[f+h>>2]=N[f+i>>2];c=c+1|0;m=m+1|0;if((g|0)!=(m|0)){continue}break}}if(K[a+120|0]){break g}break f}if(!i|!K[a+120|0]){break f}}if(i){J[8370]=J[8370]+1;ia[J[6783]](i)}d=J[a+108>>2]}J[a+116>>2]=h;J[a+112>>2]=e;H[a+120|0]=1}g=J[a+116>>2];N[g+(d<<2)>>2]=N[b>>2];d=d+1|0;J[a+108>>2]=d;h:{if((d|0)!=(e|0)){c=g;f=e;e=d;break h}f=e?e<<1:1;if((e|0)>=(f|0)){c=g;f=e;break h}i:{if(!f){c=0;break i}J[8369]=J[8369]+1;c=ia[J[6782]](f<<2,16)|0;g=J[a+116>>2];e=J[a+108>>2]}j:{k:{if((e|0)>0){m=0;h=0;if(e-1>>>0>=3){l=e&-4;j=0;while(1){i=h<<2;N[i+c>>2]=N[g+i>>2];d=i|4;N[d+c>>2]=N[d+g>>2];d=i|8;N[d+c>>2]=N[d+g>>2];d=i|12;N[d+c>>2]=N[d+g>>2];h=h+4|0;j=j+4|0;if((l|0)!=(j|0)){continue}break}}l=e&3;if(l){while(1){d=h<<2;N[d+c>>2]=N[d+g>>2];h=h+1|0;m=m+1|0;if((l|0)!=(m|0)){continue}break}}if(K[a+120|0]){break k}break j}if(!g|!K[a+120|0]){break j}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}e=J[a+108>>2]}J[a+116>>2]=c;J[a+112>>2]=f;H[a+120|0]=1}N[(e<<2)+c>>2]=N[b+4>>2];e=e+1|0;J[a+108>>2]=e;l:{if((e|0)!=(f|0)){d=c;f=e;break l}i=f?f<<1:1;if((i|0)<=(f|0)){d=c;break l}m:{if(!i){d=0;break m}J[8369]=J[8369]+1;d=ia[J[6782]](i<<2,16)|0;c=J[a+116>>2];f=J[a+108>>2]}n:{o:{if((f|0)>0){e=0;h=0;if(f-1>>>0>=3){l=f&-4;m=0;while(1){j=h<<2;N[j+d>>2]=N[c+j>>2];g=j|4;N[g+d>>2]=N[c+g>>2];g=j|8;N[g+d>>2]=N[c+g>>2];g=j|12;N[g+d>>2]=N[c+g>>2];h=h+4|0;m=m+4|0;if((l|0)!=(m|0)){continue}break}}l=f&3;if(l){while(1){g=h<<2;N[g+d>>2]=N[c+g>>2];h=h+1|0;e=e+1|0;if((l|0)!=(e|0)){continue}break}}if(K[a+120|0]){break o}break n}if(!c|!K[a+120|0]){break n}}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}f=J[a+108>>2]}J[a+116>>2]=d;J[a+112>>2]=i;H[a+120|0]=1}N[(f<<2)+d>>2]=N[b+8>>2];b=f+1|0;J[a+108>>2]=b;a=J[a+32>>2];J[a+16>>2]=d;J[a+12>>2]=J[a+12>>2]+1;c=((b|0)/3|0)-1|0}return c}return(c>>>0)/3|0}function AB(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=0,g=0,h=0,i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=0,z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0);g=J[a+28>>2];d=g+4|0;f=J[a+32>>2];e=f+4|0;zg(a,d,e,g+264|0,f+264|0);g=J[b+8>>2];J[g>>2]=1065353216;w=J[b+24>>2];j=w<<2;h=j+4|0;J[h+g>>2]=1065353216;m=w<<3;o=m+8|0;J[o+g>>2]=1065353216;n=N[d+20>>2];t=N[d+24>>2];c=N[a+348>>2];k=N[d+36>>2];l=N[a+352>>2];p=N[d+40>>2];i=N[a+356>>2];q=N[d+8>>2];x=N[d>>2];r=N[d+4>>2];u=N[d+16>>2];v=N[d+32>>2];g=J[b+12>>2];J[g+12>>2]=0;J[g>>2]=0;k=Q(Q(p*i)+Q(Q(v*c)+Q(l*k)));N[g+4>>2]=k;n=Q(Q(t*i)+Q(Q(u*c)+Q(l*n)));N[g+8>>2]=-n;f=g+j|0;J[f+12>>2]=0;l=Q(Q(q*i)+Q(Q(x*c)+Q(r*l)));N[f+8>>2]=l;J[f+4>>2]=0;N[f>>2]=-k;f=g+m|0;J[f+8>>2]=0;J[f+12>>2]=0;N[f+4>>2]=-l;N[f>>2]=n;f=J[b+16>>2];J[f>>2]=-1082130432;J[f+h>>2]=-1082130432;J[f+o>>2]=-1082130432;q=N[e+36>>2];x=N[e+40>>2];c=N[a+412>>2];p=N[e+20>>2];i=N[a+416>>2];r=N[e+24>>2];t=N[a+420>>2];u=N[e+8>>2];v=N[e>>2];z=N[e+4>>2];A=N[e+32>>2];B=N[e+16>>2];f=J[b+20>>2];J[f+12>>2]=0;J[f>>2]=0;p=Q(Q(r*t)+Q(Q(B*c)+Q(i*p)));N[f+8>>2]=p;q=Q(Q(x*t)+Q(Q(A*c)+Q(i*q)));N[f+4>>2]=-q;h=f+j|0;J[h+12>>2]=0;i=Q(Q(u*t)+Q(Q(v*c)+Q(z*i)));N[h+8>>2]=-i;J[h+4>>2]=0;N[h>>2]=q;h=f+m|0;J[h+8>>2]=0;J[h+12>>2]=0;N[h+4>>2]=i;N[h>>2]=-p;C=J[a+592>>2];c=Q(N[(C&2?a+600|0:b+4|0)>>2]*N[b>>2]);h=J[b+40>>2];o=J[b+36>>2];s=J[b+28>>2];a:{if(!(C&1)){N[s>>2]=c*Q(Q(Q(i+N[e+48>>2])-l)-N[d+48>>2]);J[o>>2]=-8388609;J[h>>2]=2139095039;N[j+s>>2]=c*Q(Q(Q(p+N[e+52>>2])-n)-N[d+52>>2]);J[j+o>>2]=-8388609;J[h+j>>2]=2139095039;N[m+s>>2]=c*Q(Q(Q(q+N[e+56>>2])-k)-N[d+56>>2]);J[m+o>>2]=-8388609;J[h+m>>2]=2139095039;break a}y=J[b+32>>2];N[s>>2]=c*Q(Q(Q(i+N[e+48>>2])-l)-N[d+48>>2]);J[o>>2]=-8388609;J[h>>2]=2139095039;N[y>>2]=N[a+596>>2];N[j+s>>2]=c*Q(Q(Q(p+N[e+52>>2])-n)-N[d+52>>2]);J[j+o>>2]=-8388609;J[h+j>>2]=2139095039;N[j+y>>2]=N[a+596>>2];N[m+s>>2]=c*Q(Q(Q(q+N[e+56>>2])-k)-N[d+56>>2]);J[m+o>>2]=-8388609;J[h+m>>2]=2139095039;N[m+y>>2]=N[a+596>>2]}e=P(w,3);b:{if(!K[a+526|0]){break b}c=N[a+456>>2];if(!(!(c>N[a+444>>2])|!(c>N[a+448>>2]))){c=N[a+340>>2];l=N[a+308>>2];i=N[a+324>>2];k=N[d+8>>2];n=N[d>>2];t=N[d+4>>2];p=N[d+24>>2];q=N[d+16>>2];x=N[d+20>>2];e=e<<2;h=e+8|0;r=N[a+336>>2];B=N[d+40>>2];u=N[a+304>>2];D=N[d+32>>2];v=N[a+320>>2];E=N[d+36>>2];z=Q(Q(r*B)+Q(Q(u*D)+Q(v*E)));N[h+g>>2]=z;j=e+4|0;A=Q(Q(r*p)+Q(Q(u*q)+Q(v*x)));N[j+g>>2]=A;r=Q(Q(r*k)+Q(Q(u*n)+Q(t*v)));N[e+g>>2]=r;d=w<<4;k=Q(Q(c*k)+Q(Q(l*n)+Q(t*i)));N[d+g>>2]=k;m=d|4;n=Q(Q(c*p)+Q(Q(l*q)+Q(i*x)));N[m+g>>2]=n;y=d|8;c=Q(Q(c*B)+Q(Q(l*D)+Q(i*E)));N[y+g>>2]=c;N[f+h>>2]=-z;N[f+j>>2]=-A;N[e+f>>2]=-r;N[d+f>>2]=-k;N[f+m>>2]=-n;N[f+y>>2]=-c;l=Q(N[b>>2]*N[a+436>>2]);N[e+s>>2]=l*Q(Q(N[a+468>>2]*z)+Q(Q(N[a+460>>2]*r)+Q(A*N[a+464>>2])));N[d+s>>2]=l*Q(Q(N[a+468>>2]*c)+Q(Q(N[a+460>>2]*k)+Q(n*N[a+464>>2])));J[e+o>>2]=-8388609;h=J[b+40>>2];J[e+h>>2]=2139095039;J[d+o>>2]=-8388609;J[d+h>>2]=2139095039;e=P(w,5);break b}l=N[a+464>>2];i=N[a+468>>2];e=e<<2;c=N[a+436>>2];k=Q(c*Q(c*N[a+460>>2]));N[e+g>>2]=k;d=e+8|0;i=Q(c*Q(c*i));N[d+g>>2]=i;j=e+4|0;c=Q(c*Q(c*l));N[j+g>>2]=c;N[d+f>>2]=-i;N[f+j>>2]=-c;N[e+f>>2]=-k;N[e+s>>2]=Q(N[b>>2]*N[a+432>>2])*N[a+504>>2];if(C&4){N[e+J[b+32>>2]>>2]=N[a+604>>2]}J[e+o>>2]=0;J[e+h>>2]=2139095039;e=w<<2}if(K[a+525|0]){l=N[a+480>>2];i=N[a+484>>2];d=e<<2;c=N[a+436>>2];k=Q(c*Q(c*N[a+476>>2]));N[d+g>>2]=k;j=d+8|0;i=Q(c*Q(c*i));N[j+g>>2]=i;m=g;g=d+4|0;c=Q(c*Q(c*l));N[m+g>>2]=c;N[f+j>>2]=-i;N[f+g>>2]=-c;N[d+f>>2]=-k;N[d+J[b+28>>2]>>2]=Q(N[b>>2]*N[a+432>>2])*N[a+508>>2];if(C&4){N[d+J[b+32>>2]>>2]=N[a+604>>2]}g=(e<<2)+h|0;c:{d:{if(N[a+452>>2]>Q(0)){b=J[b+36>>2]+(e<<2)|0;if(N[a+508>>2]>Q(0)){J[b>>2]=0;break d}J[b>>2]=-8388609;c=Q(0);break c}J[J[b+36>>2]+(e<<2)>>2]=-8388609}c=Q(3.4028234663852886e38)}N[g>>2]=c}}function $C(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=0,q=0,r=0,s=0;c=ga-80|0;ga=c;s=ia[J[J[a>>2]+28>>2]](a)|0;if((s|0)>0){i=N[a+12>>2];j=N[a+8>>2];k=N[a+4>>2];while(1){ia[J[J[a>>2]+16>>2]](a,c+76|0,c+52|0,c- -64|0,c+56|0,c+72|0,c+68|0,c+48|0,c+60|0,r);a:{b:{switch(J[c+64>>2]){case 0:c:{switch(J[c+60>>2]-2|0){case 0:d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,J[e>>2])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+12>>2]=0;N[c+8>>2]=i*n;N[c+4>>2]=j*m;N[c>>2]=k*l;f=g+P(h,J[e+4>>2])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+28>>2]=0;N[c+24>>2]=i*n;N[c+20>>2]=j*m;N[c+16>>2]=k*l;e=g+P(h,J[e+8>>2])|0;l=N[e>>2];m=N[e+4>>2];n=N[e+8>>2];J[c+44>>2]=0;N[c+40>>2]=i*n;N[c+36>>2]=j*m;N[c+32>>2]=k*l;ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 1:d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,L[e>>1])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+12>>2]=0;N[c+8>>2]=i*n;N[c+4>>2]=j*m;N[c>>2]=k*l;f=g+P(h,L[e+2>>1])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+28>>2]=0;N[c+24>>2]=i*n;N[c+20>>2]=j*m;N[c+16>>2]=k*l;e=g+P(h,L[e+4>>1])|0;l=N[e>>2];m=N[e+4>>2];n=N[e+8>>2];J[c+44>>2]=0;N[c+40>>2]=i*n;N[c+36>>2]=j*m;N[c+32>>2]=k*l;ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 3:break c;default:break a}}d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,K[e|0])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+12>>2]=0;N[c+8>>2]=i*n;N[c+4>>2]=j*m;N[c>>2]=k*l;f=g+P(h,K[e+1|0])|0;l=N[f>>2];m=N[f+4>>2];n=N[f+8>>2];J[c+28>>2]=0;N[c+24>>2]=i*n;N[c+20>>2]=j*m;N[c+16>>2]=k*l;e=g+P(h,K[e+2|0])|0;l=N[e>>2];m=N[e+4>>2];n=N[e+8>>2];J[c+44>>2]=0;N[c+40>>2]=i*n;N[c+36>>2]=j*m;N[c+32>>2]=k*l;ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 1:break b;default:break a}}d:{switch(J[c+60>>2]-2|0){case 0:d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,J[e>>2])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+12>>2]=0;N[c+8>>2]=i*Q(q);N[c+4>>2]=j*Q(p);N[c>>2]=k*Q(o);f=g+P(h,J[e+4>>2])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+28>>2]=0;N[c+24>>2]=i*Q(q);N[c+20>>2]=j*Q(p);N[c+16>>2]=k*Q(o);e=g+P(h,J[e+8>>2])|0;o=O[e>>3];p=O[e+8>>3];q=O[e+16>>3];J[c+44>>2]=0;N[c+40>>2]=i*Q(q);N[c+36>>2]=j*Q(p);N[c+32>>2]=k*Q(o);ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 1:d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,L[e>>1])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+12>>2]=0;N[c+8>>2]=i*Q(q);N[c+4>>2]=j*Q(p);N[c>>2]=k*Q(o);f=g+P(h,L[e+2>>1])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+28>>2]=0;N[c+24>>2]=i*Q(q);N[c+20>>2]=j*Q(p);N[c+16>>2]=k*Q(o);e=g+P(h,L[e+4>>1])|0;o=O[e>>3];p=O[e+8>>3];q=O[e+16>>3];J[c+44>>2]=0;N[c+40>>2]=i*Q(q);N[c+36>>2]=j*Q(p);N[c+32>>2]=k*Q(o);ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break};break a;case 3:break d;default:break a}}d=0;if(J[c+48>>2]<=0){break a}while(1){g=J[c+76>>2];h=J[c+56>>2];e=J[c+72>>2]+P(J[c+68>>2],d)|0;f=g+P(h,K[e|0])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+12>>2]=0;N[c+8>>2]=i*Q(q);N[c+4>>2]=j*Q(p);N[c>>2]=k*Q(o);f=g+P(h,K[e+1|0])|0;o=O[f>>3];p=O[f+8>>3];q=O[f+16>>3];J[c+28>>2]=0;N[c+24>>2]=i*Q(q);N[c+20>>2]=j*Q(p);N[c+16>>2]=k*Q(o);e=g+P(h,K[e+2|0])|0;o=O[e>>3];p=O[e+8>>3];q=O[e+16>>3];J[c+44>>2]=0;N[c+40>>2]=i*Q(q);N[c+36>>2]=j*Q(p);N[c+32>>2]=k*Q(o);ia[J[J[b>>2]+8>>2]](b,c,r,d);d=d+1|0;if((d|0)<J[c+48>>2]){continue}break}}ia[J[J[a>>2]+24>>2]](a,r);r=r+1|0;if((s|0)!=(r|0)){continue}break}}ga=c+80|0}function Ao(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);f=Q(f);g=Q(g);h=Q(h);i=Q(i);j=j|0;k=Q(k);l=l|0;var m=0;m=ga-2720|0;ga=m;J[m+2716>>2]=a;J[m+2712>>2]=b;J[m+2708>>2]=c;J[m+2704>>2]=d;N[m+2700>>2]=e;N[m+2696>>2]=f;N[m+2692>>2]=g;N[m+2688>>2]=h;N[m+2684>>2]=i;J[m+2680>>2]=j;N[m+2676>>2]=k;H[m+2675|0]=l;b=J[m+2716>>2];a=m+1488|0;c=a+1184|0;while(1){J[(ga-16|0)+12>>2]=a;a=a+16|0;if((c|0)!=(a|0)){continue}break}a=m+304|0;c=a+1184|0;while(1){J[(ga-16|0)+12>>2]=a;a=a+16|0;if((c|0)!=(a|0)){continue}break}J[m+300>>2]=m+1488;J[m+296>>2]=m+304;a=J[m+2712>>2];c=m+256|0;d=m+2700|0;Ia(c,J[m+2708>>2],d);va(m+272|0,a,c);a=J[m+2712>>2];c=m+224|0;Ia(c,J[m+2708>>2],d);Ma(m+240|0,a,c);J[(ga-16|0)+12>>2]=m+208;N[m+204>>2]=N[m+2676>>2]*Q(.01745329238474369);J[m+200>>2]=J[m+2708>>2];J[m+196>>2]=J[m+2704>>2];Ub(m+176|0,J[m+200>>2],J[m+196>>2]);H[m+175|0]=0;H[m+174|0]=0;if(N[m+2696>>2]<=Q(-1.5707963705062866)){N[m+2696>>2]=N[m+204>>2]+Q(-1.5707963705062866);H[m+175|0]=1}if(N[m+2692>>2]>=Q(1.5707963705062866)){N[m+2692>>2]=Q(1.5707963705062866)-N[m+204>>2];H[m+174|0]=1}if(N[m+2696>>2]>N[m+2692>>2]){N[m+2696>>2]=N[m+204>>2]+Q(-1.5707963705062866);N[m+2692>>2]=Q(1.5707963705062866)-N[m+204>>2];H[m+174|0]=1;H[m+175|0]=1}e=Q(Q(N[m+2692>>2]-N[m+2696>>2])/N[m+204>>2]);a:{if(Q(R(e))<Q(2147483648)){a=~~e;break a}a=-2147483648}J[m+168>>2]=a+1;if(J[m+168>>2]<2){J[m+168>>2]=2}N[m+164>>2]=Q(N[m+2692>>2]-N[m+2696>>2])/Q(J[m+168>>2]-1|0);H[m+163|0]=0;b:{if(N[m+2688>>2]>N[m+2684>>2]){N[m+2688>>2]=N[m+204>>2]+Q(-3.1415927410125732);N[m+2684>>2]=3.1415927410125732;H[m+163|0]=1;break b}c:{if(Q(N[m+2684>>2]-N[m+2688>>2])>=Q(6.2831854820251465)){H[m+163|0]=1;break c}H[m+163|0]=0}}e=Q(Q(N[m+2684>>2]-N[m+2688>>2])/N[m+204>>2]);d:{if(Q(R(e))<Q(2147483648)){a=~~e;break d}a=-2147483648}J[m+156>>2]=a+1;if(J[m+156>>2]<2){J[m+156>>2]=2}N[m+152>>2]=Q(N[m+2684>>2]-N[m+2688>>2])/Q(J[m+156>>2]-1|0);J[m+148>>2]=0;while(1){if(J[m+148>>2]<J[m+168>>2]){N[m+144>>2]=Q(Q(J[m+148>>2])*N[m+164>>2])+N[m+2696>>2];N[m+140>>2]=N[m+2700>>2]*Sa(N[m+144>>2]);N[m+136>>2]=N[m+2700>>2]*Ta(N[m+144>>2]);J[m+132>>2]=0;while(1){if(J[m+132>>2]<J[m+156>>2]){N[m+128>>2]=Q(Q(J[m+132>>2])*N[m+152>>2])+N[m+2688>>2];N[m+124>>2]=Sa(N[m+128>>2]);N[m+120>>2]=Ta(N[m+128>>2]);a=J[m+2712>>2];N[m+52>>2]=N[m+136>>2]*N[m+120>>2];c=m+56|0;Xb(c,m+52|0,J[m+196>>2]);d=m+72|0;va(d,a,c);N[m+28>>2]=N[m+136>>2]*N[m+124>>2];a=m+32|0;Xb(a,m+28|0,m+176|0);c=m+88|0;va(c,d,a);a=m+8|0;Xb(a,m+140|0,J[m+200>>2]);va(m+104|0,c,a);c=J[m+108>>2];a=J[m+296>>2]+(J[m+132>>2]<<4)|0;J[a>>2]=J[m+104>>2];J[a+4>>2]=c;c=J[m+116>>2];J[a+8>>2]=J[m+112>>2];J[a+12>>2]=c;e:{if(J[m+148>>2]){a=J[m+132>>2]<<4;ia[J[J[b>>2]+8>>2]](b,a+J[m+300>>2]|0,a+J[m+296>>2]|0,J[m+2680>>2]);break e}if(H[m+174|0]&1){ia[J[J[b>>2]+8>>2]](b,m+240|0,J[m+296>>2]+(J[m+132>>2]<<4)|0,J[m+2680>>2])}}f:{if(J[m+132>>2]){c=J[m+296>>2];a=J[m+132>>2];ia[J[J[b>>2]+8>>2]](b,c+(a-1<<4)|0,c+(a<<4)|0,J[m+2680>>2]);break f}a=J[m+296>>2]+(J[m+132>>2]<<4)|0;c=J[a+4>>2];J[m+208>>2]=J[a>>2];J[m+212>>2]=c;c=J[a+12>>2];J[m+216>>2]=J[a+8>>2];J[m+220>>2]=c}if(!(!(H[m+175|0]&1)|J[m+148>>2]!=(J[m+168>>2]-1|0))){ia[J[J[b>>2]+8>>2]](b,m+272|0,J[m+296>>2]+(J[m+132>>2]<<4)|0,J[m+2680>>2])}if(H[m+2675|0]&1){g:{if(H[m+163|0]&1){if(J[m+132>>2]==(J[m+156>>2]-1|0)){ia[J[J[b>>2]+8>>2]](b,m+208|0,J[m+296>>2]+(J[m+132>>2]<<4)|0,J[m+2680>>2])}break g}if(!((J[m+148>>2]!=(J[m+168>>2]-1|0)?J[m+148>>2]:0)|(J[m+132>>2]!=(J[m+156>>2]-1|0)?J[m+132>>2]:0))){ia[J[J[b>>2]+8>>2]](b,J[m+2712>>2],J[m+296>>2]+(J[m+132>>2]<<4)|0,J[m+2680>>2])}}}J[m+132>>2]=J[m+132>>2]+1;continue}break}J[m+292>>2]=J[m+300>>2];J[m+300>>2]=J[m+296>>2];J[m+296>>2]=J[m+292>>2];J[m+148>>2]=J[m+148>>2]+1;continue}break}ga=m+2720|0}function yb(a,b,c){var d=0,e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);k=ga-256|0;ga=k;g=J[b+212>>2];a:{if((g|0)>=0){break a}b:{d=J[b+236>>2];if(!(d&2)){break b}d=d<<30>>31&b;if(K[d+204|0]&2?0:N[d+344>>2]==Q(0)){break b}g=J[a+8>>2];d=k+8|0;qa(d,0,244);d=Sk(a+4|0,d);a=b?J[b+236>>2]<<30>>31&b:0;J[d+64>>2]=0;J[d+68>>2]=0;J[d+144>>2]=0;J[d+148>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+80>>2]=0;J[d+84>>2]=0;J[d+72>>2]=0;J[d+76>>2]=0;J[d+152>>2]=0;J[d+156>>2]=0;J[d+160>>2]=0;J[d+164>>2]=0;J[d+168>>2]=0;J[d+172>>2]=0;c:{if(a){e=J[a+8>>2];J[d>>2]=J[a+4>>2];J[d+4>>2]=e;e=J[a+16>>2];J[d+8>>2]=J[a+12>>2];J[d+12>>2]=e;e=J[a+32>>2];J[d+24>>2]=J[a+28>>2];J[d+28>>2]=e;e=J[a+24>>2];J[d+16>>2]=J[a+20>>2];J[d+20>>2]=e;e=J[a+48>>2];J[d+40>>2]=J[a+44>>2];J[d+44>>2]=e;e=J[a+40>>2];J[d+32>>2]=J[a+36>>2];J[d+36>>2]=e;e=J[a+64>>2];J[d+56>>2]=J[a+60>>2];J[d+60>>2]=e;e=J[a+56>>2];J[d+48>>2]=J[a+52>>2];J[d+52>>2]=e;h=N[a+352>>2];i=N[a+356>>2];j=N[a+348>>2];f=N[a+344>>2];J[d+240>>2]=a;J[d+140>>2]=0;N[d+136>>2]=f*i;N[d+132>>2]=f*h;N[d+128>>2]=f*j;e=J[a+556>>2];J[d+104>>2]=J[a+552>>2];J[d+108>>2]=e;e=J[a+548>>2];J[d+96>>2]=J[a+544>>2];J[d+100>>2]=e;e=J[a+360>>2];J[d+120>>2]=J[a+356>>2];J[d+124>>2]=e;e=J[a+352>>2];J[d+112>>2]=J[a+348>>2];J[d+116>>2]=e;e=J[a+324>>2];J[d+184>>2]=J[a+320>>2];J[d+188>>2]=e;e=J[a+316>>2];J[d+176>>2]=J[a+312>>2];J[d+180>>2]=e;e=J[a+340>>2];J[d+200>>2]=J[a+336>>2];J[d+204>>2]=e;e=J[a+332>>2];J[d+192>>2]=J[a+328>>2];J[d+196>>2]=e;h=N[a+416>>2];i=N[a+420>>2];j=N[a+412>>2];f=N[a+344>>2];J[d+220>>2]=0;N[d+216>>2]=Q(f*i)*c;N[d+212>>2]=Q(f*h)*c;N[d+208>>2]=Q(f*j)*c;j=N[a+280>>2];l=N[a+296>>2];m=N[a+268>>2];n=N[a+284>>2];o=N[a+300>>2];p=N[a+264>>2];f=N[a+436>>2];h=N[a+428>>2];i=N[a+432>>2];N[d+232>>2]=Q(Q(N[a+304>>2]*f)+Q(Q(N[a+272>>2]*h)+Q(i*N[a+288>>2])))*c;N[d+228>>2]=Q(Q(o*f)+Q(Q(m*h)+Q(i*n)))*c;N[d+224>>2]=Q(Q(l*f)+Q(Q(p*h)+Q(j*i)))*c;break c}J[d+4>>2]=0;J[d+8>>2]=0;J[d>>2]=1065353216;J[d+240>>2]=0;J[d+128>>2]=0;J[d+132>>2]=0;J[d+112>>2]=1065353216;J[d+116>>2]=1065353216;J[d+96>>2]=1065353216;J[d+100>>2]=1065353216;J[d+176>>2]=0;J[d+180>>2]=0;J[d+12>>2]=0;J[d+16>>2]=0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+20>>2]=1065353216;J[d+32>>2]=0;J[d+36>>2]=0;J[d+44>>2]=0;J[d+48>>2]=0;J[d+40>>2]=1065353216;J[d+52>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+136>>2]=0;J[d+140>>2]=0;J[d+120>>2]=1065353216;J[d+124>>2]=0;J[d+104>>2]=1065353216;J[d+108>>2]=0;J[d+232>>2]=0;J[d+224>>2]=0;J[d+228>>2]=0;J[d+216>>2]=0;J[d+220>>2]=0;J[d+208>>2]=0;J[d+212>>2]=0;J[d+200>>2]=0;J[d+204>>2]=0;J[d+192>>2]=0;J[d+196>>2]=0;J[d+184>>2]=0;J[d+188>>2]=0}J[d+236>>2]=0;J[b+212>>2]=g;break a}g=J[a+188>>2];if((g|0)>=0){break a}J[a+188>>2]=J[a+8>>2];b=k+8|0;qa(b,0,244);b=Sk(a+4|0,b);J[b+88>>2]=0;J[b+92>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+64>>2]=0;J[b+68>>2]=0;J[b+144>>2]=0;J[b+148>>2]=0;J[b+152>>2]=0;J[b+156>>2]=0;J[b+160>>2]=0;J[b+164>>2]=0;J[b+168>>2]=0;J[b+172>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;J[b>>2]=1065353216;J[b+12>>2]=0;J[b+16>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+20>>2]=1065353216;J[b+32>>2]=0;J[b+36>>2]=0;J[b+44>>2]=0;J[b+48>>2]=0;J[b+40>>2]=1065353216;J[b+52>>2]=0;J[b+56>>2]=0;J[b+60>>2]=0;J[b+136>>2]=0;J[b+140>>2]=0;J[b+240>>2]=0;J[b+128>>2]=0;J[b+132>>2]=0;J[b+120>>2]=1065353216;J[b+124>>2]=0;J[b+112>>2]=1065353216;J[b+116>>2]=1065353216;J[b+104>>2]=1065353216;J[b+108>>2]=0;J[b+96>>2]=1065353216;J[b+100>>2]=1065353216;J[b+232>>2]=0;J[b+236>>2]=0;J[b+224>>2]=0;J[b+228>>2]=0;J[b+216>>2]=0;J[b+220>>2]=0;J[b+208>>2]=0;J[b+212>>2]=0;J[b+200>>2]=0;J[b+204>>2]=0;J[b+192>>2]=0;J[b+196>>2]=0;J[b+184>>2]=0;J[b+188>>2]=0;J[b+176>>2]=0;J[b+180>>2]=0;g=J[a+188>>2]}ga=k+256|0;return g}function gh(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;d=ga-96|0;ga=d;l=J[a+8>>2];if((l|0)>0){while(1){e=J[J[a+16>>2]+(c<<2)>>2];if(J[e+236>>2]==1){ia[J[J[e>>2]+24>>2]](e,b);l=J[a+8>>2]}c=c+1|0;if((l|0)>(c|0)){continue}break}}H[d+52|0]=1;J[d+48>>2]=0;H[d+72|0]=1;J[d+40>>2]=0;J[d+44>>2]=0;J[d+68>>2]=0;H[d+92|0]=1;J[d+60>>2]=0;J[d+64>>2]=0;J[d+88>>2]=0;J[d+80>>2]=0;J[d+84>>2]=0;J[d+28>>2]=0;H[d+32|0]=1;J[d+20>>2]=0;J[d+24>>2]=0;a:{if((l|0)<=0){break a}c=0;while(1){e=J[J[J[a+16>>2]+(s<<2)>>2]+192>>2];J[d+12>>2]=e;o=c;c=e+(e<<15^-1)|0;c=P(c>>10^c,9);c=c>>6^c;c=(c<<11^-1)+c|0;c=f-1&(c>>16^c);b:{c:{if(o>>>0<=c>>>0){break c}c=J[J[d+28>>2]+(c<<2)>>2];if((c|0)==-1){break c}f=J[d+48>>2];h=J[d+88>>2];while(1){if((e|0)!=J[h+(c<<3)>>2]){c=J[f+(c<<2)>>2];if((c|0)!=-1){continue}break c}break}if(J[d+68>>2]){break b}}J[d>>2]=e;j=0;d:{e:{e=d+16|0;l=J[e+48>>2];c=J[d>>2];f=(c<<15^-1)+c|0;f=P(f>>10^f,9);f=f>>6^f;f=(f<<11^-1)+f|0;r=l-1&(f>>16^f);f:{if(r>>>0>=M[e+4>>2]){break f}f=J[J[e+12>>2]+(r<<2)>>2];if((f|0)==-1){break f}h=J[e+32>>2];n=J[e+72>>2];while(1){if((c|0)==J[n+(f<<3)>>2]){break e}f=J[h+(f<<2)>>2];if((f|0)!=-1){continue}break}}o=J[e+44>>2];c=o;g:{if((l|0)!=(c|0)){break g}c=l;i=c?c<<1:1;if((c|0)>=(i|0)){break g}h:{if(!i){h=0;c=l;break h}J[8369]=J[8369]+1;h=ia[J[6782]](i<<2,16)|0;c=J[e+44>>2]}i:{if((c|0)<=0){break i}n=0;f=0;if(c-1>>>0>=3){p=c&-4;while(1){k=f<<2;J[k+h>>2]=J[k+J[e+52>>2]>>2];g=k|4;J[g+h>>2]=J[g+J[e+52>>2]>>2];g=k|8;J[g+h>>2]=J[g+J[e+52>>2]>>2];k=k|12;J[k+h>>2]=J[k+J[e+52>>2]>>2];f=f+4|0;j=j+4|0;if((p|0)!=(j|0)){continue}break}}j=c&3;if(!j){break i}while(1){k=f<<2;J[k+h>>2]=J[k+J[e+52>>2]>>2];f=f+1|0;n=n+1|0;if((j|0)!=(n|0)){continue}break}}f=J[e+52>>2];if(!(!f|!K[e+56|0])){if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}c=J[e+44>>2]}J[e+52>>2]=h;H[e+56|0]=1;J[e+48>>2]=i}J[J[e+52>>2]+(c<<2)>>2]=J[d+12>>2];J[e+44>>2]=c+1;c=J[e- -64>>2];j:{if((c|0)!=J[e+68>>2]){break j}k=c?c<<1:1;if((k|0)<=(c|0)){break j}k:{if(!k){h=0;break k}J[8369]=J[8369]+1;h=ia[J[6782]](k<<3,16)|0;c=J[e+64>>2]}l:{if((c|0)<=0){break l}n=0;f=0;if(c-1>>>0>=3){p=c&-4;j=0;while(1){i=f<<3;g=i+h|0;m=i+J[e+72>>2]|0;q=J[m+4>>2];J[g>>2]=J[m>>2];J[g+4>>2]=q;g=i|8;m=g+h|0;g=g+J[e+72>>2]|0;q=J[g+4>>2];J[m>>2]=J[g>>2];J[m+4>>2]=q;g=i|16;m=g+h|0;g=g+J[e+72>>2]|0;q=J[g+4>>2];J[m>>2]=J[g>>2];J[m+4>>2]=q;i=i|24;g=i+h|0;i=i+J[e+72>>2]|0;m=J[i+4>>2];J[g>>2]=J[i>>2];J[g+4>>2]=m;f=f+4|0;j=j+4|0;if((p|0)!=(j|0)){continue}break}}c=c&3;if(!c){break l}while(1){j=f<<3;i=j+h|0;j=j+J[e+72>>2]|0;p=J[j+4>>2];J[i>>2]=J[j>>2];J[i+4>>2]=p;f=f+1|0;n=n+1|0;if((c|0)!=(n|0)){continue}break}}c=J[e+72>>2];if(!(c?!c|!K[e+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[e+72>>2]=h;H[e+76|0]=1;J[e+68>>2]=k;c=J[e+64>>2]}f=J[d+4>>2];c=J[e+72>>2]+(c<<3)|0;J[c>>2]=J[d>>2];J[c+4>>2]=f;J[e+64>>2]=J[e+64>>2]+1;if((l|0)<J[e+48>>2]){Sm(e);c=J[d>>2];c=(c<<15^-1)+c|0;c=P(c>>10^c,9);c=c>>6^c;c=(c<<11^-1)+c|0;r=J[e+48>>2]-1&(c>>16^c)}c=J[e+12>>2]+(r<<2)|0;J[J[e+32>>2]+(o<<2)>>2]=J[c>>2];J[c>>2]=o;break d}J[J[e+52>>2]+(f<<2)>>2]=J[d+12>>2]}c=J[d+12>>2];ia[J[J[c>>2]+60>>2]](c,b);l=J[a+8>>2]}s=s+1|0;if((s|0)<(l|0)){c=J[d+20>>2];f=J[d+64>>2];continue}break}a=J[d+88>>2];if(!a|!K[d+92|0]){break a}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}J[d+88>>2]=0;H[d+92|0]=1;J[d+80>>2]=0;J[d+84>>2]=0;a=J[d+68>>2];if(!(a?!a|!K[d+72|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+68>>2]=0;H[d+72|0]=1;J[d+60>>2]=0;J[d+64>>2]=0;a=J[d+48>>2];if(!(a?!a|!K[d+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+48>>2]=0;H[d+52|0]=1;J[d+40>>2]=0;J[d+44>>2]=0;a=J[d+28>>2];if(!(a?!a|!K[d+32|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=d+96|0}function Mj(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,A=0;o=ga-16|0;ga=o;s=(D(a),x(2));c=s&2147483647;a:{if(c>>>0<=1305022426){i=+a;d=i*.6366197723675814+6755399441055744+-6755399441055744;q=i+d*-1.5707963109016418+d*-1.5893254773528196e-8;O[b>>3]=q;c=q<-.7853981852531433;if(R(d)<2147483648){e=~~d}else{e=-2147483648}if(c){d=d+-1;O[b>>3]=i+d*-1.5707963109016418+d*-1.5893254773528196e-8;e=e-1|0;break a}if(!(q>.7853981852531433)){break a}d=d+1;O[b>>3]=i+d*-1.5707963109016418+d*-1.5893254773528196e-8;e=e+1|0;break a}if(c>>>0>=2139095040){O[b>>3]=Q(a-a);break a}e=c;c=(c>>>23|0)-150|0;O[o+8>>3]=(z(2,e-(c<<23)|0),E());t=o+8|0;g=ga-560|0;ga=g;e=(c-3|0)/24|0;r=(e|0)>0?e:0;j=c+P(r,-24)|0;l=J[5824];if((l|0)>=0){e=l+1|0;c=r;while(1){O[(g+320|0)+(f<<3)>>3]=(c|0)<0?0:+J[(c<<2)+23312>>2];c=c+1|0;f=f+1|0;if((e|0)!=(f|0)){continue}break}}k=j-24|0;e=0;f=(l|0)>0?l:0;while(1){c=0;d=0;while(1){d=O[(c<<3)+t>>3]*O[(g+320|0)+(e-c<<3)>>3]+d;c=c+1|0;if((c|0)!=1){continue}break}O[(e<<3)+g>>3]=d;c=(e|0)==(f|0);e=e+1|0;if(!c){continue}break}y=47-j|0;u=48-j|0;A=j-25|0;e=l;b:{while(1){d=O[(e<<3)+g>>3];c=0;f=e;n=(e|0)<=0;if(!n){while(1){m=(g+480|0)+(c<<2)|0;i=d*5.960464477539063e-8;c:{if(R(i)<2147483648){h=~~i;break c}h=-2147483648}i=+(h|0);d=i*-16777216+d;d:{if(R(d)<2147483648){h=~~d;break d}h=-2147483648}J[m>>2]=h;f=f-1|0;d=O[(f<<3)+g>>3]+i;c=c+1|0;if((e|0)!=(c|0)){continue}break}}d=le(d,k);d=d+V(d*.125)*-8;e:{if(R(d)<2147483648){m=~~d;break e}m=-2147483648}d=d-+(m|0);f:{g:{h:{v=(k|0)<=0;i:{if(!v){f=(e<<2)+g|0;h=J[f+476>>2];c=h>>u;p=f;f=h-(c<<u)|0;J[p+476>>2]=f;m=c+m|0;h=f>>y;break i}if(k){break h}h=J[((e<<2)+g|0)+476>>2]>>23}if((h|0)<=0){break f}break g}h=2;if(d>=.5){break g}h=0;break f}c=0;f=0;if(!n){while(1){p=(g+480|0)+(c<<2)|0;n=J[p>>2];w=16777215;j:{k:{if(f){break k}w=16777216;if(n){break k}f=0;break j}J[p>>2]=w-n;f=1}c=c+1|0;if((e|0)!=(c|0)){continue}break}}l:{if(v){break l}c=8388607;m:{switch(A|0){case 1:c=4194303;break;case 0:break m;default:break l}}n=(e<<2)+g|0;J[n+476>>2]=J[n+476>>2]&c}m=m+1|0;if((h|0)!=2){break f}d=1-d;h=2;if(!f){break f}d=d-le(1,k)}if(d==0){f=0;n:{c=e;if((l|0)>=(c|0)){break n}while(1){c=c-1|0;f=J[(g+480|0)+(c<<2)>>2]|f;if((c|0)>(l|0)){continue}break}if(!f){break n}j=k;while(1){j=j-24|0;e=e-1|0;if(!J[(g+480|0)+(e<<2)>>2]){continue}break}break b}c=1;while(1){f=c;c=c+1|0;if(!J[(g+480|0)+(l-f<<2)>>2]){continue}break}f=e+f|0;while(1){e=e+1|0;O[(g+320|0)+(e<<3)>>3]=J[(e+r<<2)+23312>>2];c=0;d=0;while(1){d=O[(c<<3)+t>>3]*O[(g+320|0)+(e-c<<3)>>3]+d;c=c+1|0;if((c|0)!=1){continue}break}O[(e<<3)+g>>3]=d;if((e|0)<(f|0)){continue}break}e=f;continue}break}d=le(d,24-j|0);o:{if(d>=16777216){k=(g+480|0)+(e<<2)|0;i=d*5.960464477539063e-8;p:{if(R(i)<2147483648){c=~~i;break p}c=-2147483648}d=+(c|0)*-16777216+d;q:{if(R(d)<2147483648){f=~~d;break q}f=-2147483648}J[k>>2]=f;e=e+1|0;break o}if(R(d)<2147483648){c=~~d}else{c=-2147483648}j=k}J[(g+480|0)+(e<<2)>>2]=c}d=le(1,j);r:{if((e|0)<0){break r}c=e;while(1){f=c;O[(c<<3)+g>>3]=d*+J[(g+480|0)+(c<<2)>>2];c=c-1|0;d=d*5.960464477539063e-8;if(f){continue}break}if((e|0)<0){break r}c=e;while(1){f=c;j=e-c|0;d=0;c=0;while(1){s:{d=O[(c<<3)+26080>>3]*O[(c+f<<3)+g>>3]+d;if((c|0)>=(l|0)){break s}k=c>>>0<j>>>0;c=c+1|0;if(k){continue}}break}O[(g+160|0)+(j<<3)>>3]=d;c=f-1|0;if((f|0)>0){continue}break}}d=0;if((e|0)>=0){while(1){c=e;e=c-1|0;d=d+O[(g+160|0)+(c<<3)>>3];if(c){continue}break}}O[o>>3]=h?-d:d;ga=g+560|0;e=m&7;d=O[o>>3];if((s|0)<0){O[b>>3]=-d;e=0-e|0;break a}O[b>>3]=d}ga=o+16|0;return e}function Wz(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:{b:{c:{if((f|0)>=0){i=J[a+16>>2];if((i|0)>0){break c}break b}f=J[a+8>>2];Q(ia[J[J[f>>2]+12>>2]](f,b,c,d,e,J[a+12>>2],J[a+16>>2],J[a+4>>2],J[a+20>>2],J[a+24>>2]));return}m=J[a+12>>2];while(1){q=m+(g<<2)|0;j=J[q>>2];h=J[J[j+28>>2]+208>>2];if((h|0)<0){h=J[J[j+32>>2]+208>>2]}if((f|0)==(h|0)){break b}g=g+1|0;if((i|0)!=(g|0)){continue}break}q=0;break a}if((g|0)>=(i|0)){break a}h=i-g|0;k=h&1;j=J[a+12>>2];if((i|0)!=(g+1|0)){i=h&-2;m=0;while(1){l=j+(g<<2)|0;n=J[l>>2];h=J[J[n+28>>2]+208>>2];if((h|0)<0){h=J[J[n+32>>2]+208>>2]}g=g+2|0;o=((f|0)==(h|0))+o|0;l=J[l+4>>2];h=J[J[l+28>>2]+208>>2];if((h|0)<0){h=J[J[l+32>>2]+208>>2]}o=((f|0)==(h|0))+o|0;m=m+2|0;if((i|0)!=(m|0)){continue}break}}if(!k){break a}h=J[j+(g<<2)>>2];g=J[J[h+28>>2]+208>>2];if((g|0)<0){g=J[J[h+32>>2]+208>>2]}o=((f|0)==(g|0))+o|0}f=J[a+4>>2];if(J[f+72>>2]>=2){if((c|0)>0){g=J[a+36>>2];h=J[a+32>>2];j=0;while(1){n=(j<<2)+b|0;d:{if((g|0)!=(h|0)){break d}i=g?g<<1:1;if((i|0)<=(g|0)){h=g;break d}e:{if(!i){f=0;break e}J[8369]=J[8369]+1;f=ia[J[6782]](i<<2,16)|0;g=J[a+32>>2]}h=g;f:{if((g|0)<=0){break f}m=0;g=0;if(h-1>>>0>=3){r=h&-4;k=0;while(1){l=g<<2;J[l+f>>2]=J[l+J[a+40>>2]>>2];p=l|4;J[p+f>>2]=J[p+J[a+40>>2]>>2];p=l|8;J[p+f>>2]=J[p+J[a+40>>2]>>2];l=l|12;J[l+f>>2]=J[l+J[a+40>>2]>>2];g=g+4|0;k=k+4|0;if((r|0)!=(k|0)){continue}break}}k=h&3;if(!k){break f}while(1){l=g<<2;J[l+f>>2]=J[l+J[a+40>>2]>>2];g=g+1|0;m=m+1|0;if((k|0)!=(m|0)){continue}break}}g=J[a+40>>2];if(!(!g|!K[a+44|0])){if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}h=J[a+32>>2]}J[a+40>>2]=f;H[a+44|0]=1;J[a+36>>2]=i;g=i}J[J[a+40>>2]+(h<<2)>>2]=J[n>>2];h=h+1|0;J[a+32>>2]=h;j=j+1|0;if((j|0)!=(c|0)){continue}break}}if((e|0)>0){g=J[a+56>>2];h=J[a+52>>2];j=0;while(1){i=(j<<2)+d|0;g:{if((g|0)!=(h|0)){break g}b=g?g<<1:1;if((b|0)<=(g|0)){h=g;break g}h:{if(!b){f=0;break h}J[8369]=J[8369]+1;f=ia[J[6782]](b<<2,16)|0;g=J[a+52>>2]}h=g;i:{if((g|0)<=0){break i}m=0;g=0;if(h-1>>>0>=3){l=h&-4;k=0;while(1){c=g<<2;J[c+f>>2]=J[c+J[a+60>>2]>>2];n=c|4;J[n+f>>2]=J[n+J[a+60>>2]>>2];n=c|8;J[n+f>>2]=J[n+J[a+60>>2]>>2];c=c|12;J[c+f>>2]=J[c+J[a+60>>2]>>2];g=g+4|0;k=k+4|0;if((l|0)!=(k|0)){continue}break}}c=h&3;if(!c){break i}while(1){k=g<<2;J[k+f>>2]=J[k+J[a+60>>2]>>2];g=g+1|0;m=m+1|0;if((c|0)!=(m|0)){continue}break}}c=J[a+60>>2];if(!(!c|!K[a+64|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}h=J[a+52>>2]}J[a+60>>2]=f;H[a+64|0]=1;J[a+56>>2]=b;g=b}J[J[a+60>>2]+(h<<2)>>2]=J[i>>2];h=h+1|0;J[a+52>>2]=h;j=j+1|0;if((j|0)!=(e|0)){continue}break}}j:{if(!o){h=J[a+72>>2];break j}g=J[a+76>>2];h=J[a+72>>2];j=0;while(1){d=(j<<2)+q|0;k:{if((g|0)!=(h|0)){break k}b=g?g<<1:1;if((b|0)<=(g|0)){h=g;break k}l:{if(!b){f=0;break l}J[8369]=J[8369]+1;f=ia[J[6782]](b<<2,16)|0;g=J[a+72>>2]}h=g;m:{if((g|0)<=0){break m}m=0;g=0;if(h-1>>>0>=3){e=h&-4;k=0;while(1){c=g<<2;J[c+f>>2]=J[c+J[a+80>>2]>>2];i=c|4;J[i+f>>2]=J[i+J[a+80>>2]>>2];i=c|8;J[i+f>>2]=J[i+J[a+80>>2]>>2];c=c|12;J[c+f>>2]=J[c+J[a+80>>2]>>2];g=g+4|0;k=k+4|0;if((e|0)!=(k|0)){continue}break}}c=h&3;if(!c){break m}while(1){e=g<<2;J[e+f>>2]=J[e+J[a+80>>2]>>2];g=g+1|0;m=m+1|0;if((c|0)!=(m|0)){continue}break}}c=J[a+80>>2];if(!(!c|!K[a+84|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}h=J[a+72>>2]}J[a+80>>2]=f;H[a+84|0]=1;J[a+76>>2]=b;g=b}J[J[a+80>>2]+(h<<2)>>2]=J[d>>2];h=h+1|0;J[a+72>>2]=h;j=j+1|0;if((o|0)!=(j|0)){continue}break}}if(J[J[a+4>>2]+72>>2]<(J[a+52>>2]+h|0)){Dk(a)}return}g=J[a+8>>2];Q(ia[J[J[g>>2]+12>>2]](g,b,c,d,e,q,o,f,J[a+20>>2],J[a+24>>2]))}function Bc(a,b,c,d,e,f,g,h,i,j,k){var l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=0,I=0,L=0,M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=0,V=Q(0),W=Q(0),X=Q(0),Y=0,Z=Q(0),_=Q(0);l=J[a+68>>2];m=l;a:{if((l|0)!=J[a+72>>2]){break a}m=l;G=l?l<<1:1;if((l|0)>=(G|0)){break a}if(G){J[8369]=J[8369]+1;I=ia[J[6782]](P(G,152),16)|0;m=J[a+68>>2]}else{m=l}L=m;b:{if((L|0)<=0){break b}m=0;if((L|0)!=1){Y=L&-2;while(1){B=P(m,152);sa(B+I|0,B+J[a+76>>2]|0,152);B=P(m|1,152);sa(B+I|0,B+J[a+76>>2]|0,152);m=m+2|0;U=U+2|0;if((U|0)!=(Y|0)){continue}break}}if(!(L&1)){break b}m=P(m,152);sa(m+I|0,m+J[a+76>>2]|0,152)}m=J[a+76>>2];if(!(m?!m|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](m)}J[a+76>>2]=I;H[a+80|0]=1;J[a+72>>2]=G;m=J[a+68>>2]}J[a+68>>2]=m+1;l=J[a+76>>2]+P(l,152)|0;J[l+140>>2]=e;m=J[a+16>>2];a=J[(m+P(d,244)|0)+240>>2];e=J[(m+P(c,244)|0)+240>>2];J[l+148>>2]=d;J[l+144>>2]=c;M=N[f+84>>2];J[l+132>>2]=0;N[l+104>>2]=M;J[l+96>>2]=0;J[l+100>>2]=0;c:{if(e){f=J[b+4>>2];J[l+16>>2]=J[b>>2];J[l+20>>2]=f;f=J[b+12>>2];J[l+24>>2]=J[b+8>>2];J[l+28>>2]=f;p=N[g+8>>2];n=N[g>>2];o=N[g+4>>2];J[l+12>>2]=0;O=N[l+20>>2];R=N[l+16>>2];C=Q(Q(n*O)-Q(o*R));N[l+8>>2]=C;S=N[l+24>>2];D=Q(Q(p*R)-Q(n*S));N[l+4>>2]=D;E=Q(Q(o*S)-Q(O*p));N[l>>2]=E;p=N[e+552>>2];n=N[e+304>>2];o=N[e+296>>2];v=N[e+300>>2];q=N[e+548>>2];z=N[e+288>>2];r=N[e+280>>2];u=N[e+284>>2];s=N[e+272>>2];w=N[e+268>>2];A=N[e+544>>2];T=N[e+264>>2];J[l+76>>2]=0;s=Q(A*Q(Q(s*C)+Q(Q(T*E)+Q(D*w))));N[l+64>>2]=s;q=Q(q*Q(Q(z*C)+Q(Q(r*E)+Q(D*u))));N[l+68>>2]=q;v=Q(p*Q(Q(n*C)+Q(Q(o*E)+Q(D*v))));N[l+72>>2]=v;break c}J[l+64>>2]=0;J[l+68>>2]=0;J[l>>2]=0;J[l+4>>2]=0;J[l+72>>2]=0;J[l+76>>2]=0;J[l+8>>2]=0;J[l+12>>2]=0;J[l+16>>2]=0;J[l+20>>2]=0;J[l+24>>2]=0;J[l+28>>2]=0}d:{if(a){p=N[b>>2];n=N[b+4>>2];o=N[b+8>>2];J[l+60>>2]=0;V=Q(-o);N[l+56>>2]=V;W=Q(-n);N[l+52>>2]=W;X=Q(-p);N[l+48>>2]=X;t=N[h+8>>2];x=N[h+4>>2];y=N[h>>2];J[l+44>>2]=0;F=Q(Q(p*x)-Q(y*n));N[l+40>>2]=F;y=Q(Q(o*y)-Q(t*p));N[l+36>>2]=y;x=Q(Q(n*t)-Q(x*o));N[l+32>>2]=x;p=N[a+272>>2];o=N[a+268>>2];n=N[a+548>>2];z=N[a+288>>2];r=N[a+280>>2];u=N[a+284>>2];t=N[a+552>>2];w=N[a+304>>2];A=N[a+296>>2];T=N[a+300>>2];Z=N[a+544>>2];_=N[a+264>>2];J[l+92>>2]=0;t=Q(t*Q(Q(w*F)+Q(Q(A*x)+Q(y*T))));N[l+88>>2]=t;n=Q(n*Q(Q(z*F)+Q(Q(r*x)+Q(y*u))));N[l+84>>2]=n;o=Q(Z*Q(Q(p*F)+Q(Q(_*x)+Q(y*o))));N[l+80>>2]=o;break d}J[l+80>>2]=0;J[l+84>>2]=0;J[l+32>>2]=0;J[l+36>>2]=0;J[l+88>>2]=0;J[l+92>>2]=0;J[l+40>>2]=0;J[l+44>>2]=0;J[l+48>>2]=0;J[l+52>>2]=0;J[l+56>>2]=0;J[l+60>>2]=0;n=Q(0);o=Q(0)}z=Q(0);p=i;if(e){i=N[g+4>>2];r=N[g>>2];w=Q(N[b+8>>2]*Q(Q(s*i)-Q(r*q)));u=q;q=N[g+8>>2];i=Q(N[e+344>>2]+Q(w+Q(Q(N[b>>2]*Q(Q(u*q)-Q(i*v)))+Q(Q(Q(v*r)-Q(q*s))*N[b+4>>2]))))}else{i=Q(0)}if(a){s=N[h>>2];q=N[h+4>>2];r=Q(N[b+8>>2]*Q(Q(n*s)-Q(o*q)));u=n;n=N[h+8>>2];n=Q(N[a+344>>2]+Q(r+Q(Q(N[b>>2]*Q(Q(t*q)-Q(u*n)))+Q(Q(Q(o*n)-Q(t*s))*N[b+4>>2]))))}else{n=Q(0)}A=Q(p/Q(i+n));N[l+108>>2]=A;i=Q(0);s=Q(0);q=Q(0);v=Q(0);t=Q(0);n=Q(0);if(e){b=m+P(c,244)|0;q=Q(N[b+176>>2]+N[b+208>>2]);n=N[b+192>>2];v=N[b+200>>2];s=Q(N[b+180>>2]+N[b+212>>2]);t=N[b+196>>2];i=Q(N[b+184>>2]+N[b+216>>2])}o=Q(0);p=Q(0);r=Q(0);u=Q(0);w=Q(0);if(a){a=m+P(d,244)|0;z=Q(N[a+176>>2]+N[a+208>>2]);o=Q(N[a+180>>2]+N[a+212>>2]);r=N[a+200>>2];u=N[a+196>>2];w=N[a+192>>2];p=Q(N[a+184>>2]+N[a+216>>2])}N[l+124>>2]=M;N[l+116>>2]=k;N[l+120>>2]=-M;N[l+112>>2]=A*Q(j-Q(Q(Q(Q(S*i)+Q(Q(R*q)+Q(s*O)))+Q(Q(C*v)+Q(Q(E*n)+Q(t*D))))+Q(Q(Q(V*p)+Q(Q(X*z)+Q(o*W)))+Q(Q(F*r)+Q(Q(x*w)+Q(u*y))))))}function iI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0);h=ga-32|0;ga=h;e=a+4|0;Hc(e,((P(J[a+152>>2],J[a+16>>2])|0)/100|0)+1|0);if(J[a+164>>2]){c=((P(J[a+148>>2],J[a+76>>2])|0)/100|0)+1|0;Hc(a- -64|0,c);c=J[a+164>>2]-c|0;J[a+164>>2]=(c|0)>0?c:0}c=(J[a+144>>2]+1|0)%2|0;J[a+144>>2]=c;c=J[((c<<2)+a|0)+124>>2];if(c){g=a- -64|0;while(1){d=J[c+52>>2];f=d?d+56|0:((J[c+60>>2]<<2)+a|0)+124|0;d=J[c+56>>2];J[f>>2]=d;f=J[c+56>>2];if(f){J[f+52>>2]=J[c+52>>2]}J[c+52>>2]=0;J[c+56>>2]=J[a+132>>2];f=J[a+132>>2];if(f){J[f+52>>2]=c}J[a+132>>2]=c;Fc(e,J[c+48>>2]);f=J[c+28>>2];J[h+8>>2]=J[c+24>>2];J[h+12>>2]=f;f=J[c+20>>2];J[h>>2]=J[c+16>>2];J[h+4>>2]=f;f=J[c+44>>2];J[h+24>>2]=J[c+40>>2];J[h+28>>2]=f;f=J[c+36>>2];J[h+16>>2]=J[c+32>>2];J[h+20>>2]=f;f=Db(g,h,c);J[c+60>>2]=2;J[c+48>>2]=f;c=d;if(c){continue}break}H[a+194|0]=1;J[a+164>>2]=J[a+76>>2]}J[h>>2]=5764;J[h+4>>2]=a;a:{if(!K[a+193|0]){break a}cf(e,J[a+4>>2],J[a- -64>>2],h);if(!K[a+193|0]){break a}c=J[e>>2];cf(e,c,c,h)}b:{if(!K[a+194|0]){break b}c=J[a+136>>2];f=ia[J[J[c>>2]+28>>2]](c)|0;e=J[f+4>>2];if((e|0)<=0){break b}c:{c=J[a+160>>2];d=(P(J[a+156>>2],e)|0)/100|0;c=(c|0)>(d|0)?c:d;g=(c|0)>(e|0)?e:c;if((g|0)>0){c=0;while(1){e=J[f+12>>2]+((J[a+184>>2]+c|0)%(e|0)<<4)|0;i=J[e>>2];d=J[i+48>>2];j=J[e+4>>2];e=J[j+48>>2];d:{e:{if(!(N[d>>2]<=N[e+16>>2])|!(N[d+16>>2]>=N[e>>2])|(!(N[d+4>>2]<=N[e+20>>2])|!(N[d+20>>2]>=N[e+4>>2]))){break e}if(!(N[d+8>>2]<=N[e+24>>2])){break e}if(N[d+24>>2]>=N[e+8>>2]){break d}}d=J[a+136>>2];ia[J[J[d>>2]+12>>2]](d,i,j,b)|0;c=c-1|0;g=g-1|0}e=J[f+4>>2];c=c+1|0;if((g|0)>(c|0)){continue}break}if((e|0)<=0){break c}}J[a+184>>2]=(J[a+184>>2]+g|0)%(e|0);break b}J[a+184>>2]=0}H[a+194|0]=0;J[a+160>>2]=1;J[a+180>>2]=J[a+180>>2]+1;c=J[a+172>>2];d=J[a+168>>2];if(d){m=Q(Q(c>>>0)/Q(d>>>0))}else{m=Q(0)}N[a+176>>2]=m;J[a+172>>2]=c>>>1;J[a+168>>2]=d>>>1;ga=h+32|0;d=0;c=0;j=0;l=ga-16|0;ga=l;e=a;a=J[a+136>>2];if(ia[J[J[a>>2]+56>>2]](a)|0){a=J[e+136>>2];g=ia[J[J[a>>2]+28>>2]](a)|0;a=J[g+4>>2];if((a|0)>=2){lc(g,l+8|0,0,a-1|0);a=J[g+4>>2]}if((a|0)>0){while(1){i=J[g+12>>2]+(j<<4)|0;h=J[i+4>>2];f=d;d=J[i>>2];f:{g:{if((f|0)==(d|0)&(c|0)==(h|0)){break g}c=J[d+48>>2];f=J[h+48>>2];if(!(N[c>>2]<=N[f+16>>2])|!(N[c+16>>2]>=N[f>>2])|(!(N[c+4>>2]<=N[f+20>>2])|!(N[c+20>>2]>=N[f+4>>2]))){break g}if(!(N[c+8>>2]<=N[f+24>>2])){break g}if(N[c+24>>2]>=N[f+8>>2]){break f}}a=J[e+136>>2];ia[J[J[a>>2]+32>>2]](a,i,b);J[i>>2]=0;J[i+4>>2]=0;k=k+1|0;a=J[g+4>>2]}c=h;j=j+1|0;if((j|0)<(a|0)){continue}break}if((a|0)>=2){lc(g,l,0,a-1|0);a=J[g+4>>2]}b=a-k|0;h:{if((k|0)>=0){break h}if((b|0)>J[g+8>>2]){d=0;i:{if((a|0)==(k|0)){break i}J[8369]=J[8369]+1;d=ia[J[6782]](b<<4,16)|0;f=J[g+4>>2];if((f|0)<=0){break i}e=0;while(1){h=e<<4;c=h+d|0;h=h+J[g+12>>2]|0;J[c>>2]=J[h>>2];J[c+4>>2]=J[h+4>>2];J[c+8>>2]=J[h+8>>2];J[c+12>>2]=J[h+12>>2];e=e+1|0;if((f|0)!=(e|0)){continue}break}}c=J[g+12>>2];if(!(c?!c|!K[g+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[g+12>>2]=d;H[g+16|0]=1;J[g+8>>2]=b}e=0;d=0-k&3;if(d){while(1){c=J[g+12>>2]+(a<<4)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;a=a+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(k>>>0>4294967292){break h}while(1){c=a<<4;d=c+J[g+12>>2]|0;J[d>>2]=0;J[d+4>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;d=c+J[g+12>>2]|0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;d=c+J[g+12>>2]|0;J[d+40>>2]=0;J[d+44>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;c=c+J[g+12>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;a=a+4|0;if((b|0)!=(a|0)){continue}break}}a=b}J[g+4>>2]=a}ga=l+16|0}function fz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=Q(0),k=Q(0),l=0,m=0,n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0);d=ga-448|0;ga=d;c=J[c+36>>2];e=J[b+36>>2];b=J[a+24>>2];a:{if(K[J[b+1140>>2]+(J[e+380>>2]+P(J[c+380>>2],J[b+1112>>2])|0)|0]?(b|0)!=J[a+28>>2]|!J[b+1132>>2]:1){b=d+392|0;J[b+4>>2]=35;J[b+8>>2]=0;J[b>>2]=14268;J[b+44>>2]=1025758986;J[b+20>>2]=1065353216;J[b+24>>2]=0;J[b+12>>2]=1065353216;J[b+16>>2]=1065353216;J[b>>2]=13984;J[d+444>>2]=e;J[d+392>>2]=21564;J[d+436>>2]=0;b=d+336|0;J[b+4>>2]=35;J[b+8>>2]=0;J[b>>2]=14268;J[b+44>>2]=1025758986;J[b+20>>2]=1065353216;J[b+24>>2]=0;J[b+12>>2]=1065353216;J[b+16>>2]=1065353216;J[b>>2]=13984;J[d+388>>2]=c;J[d+336>>2]=21564;J[d+380>>2]=0;b=H[29512]&1;b:{c:{d:{if(!b){if(!(H[29564]&1)){break d}break c}if(b){break b}if(H[29564]&1){break c}}J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;b=J[7380];J[7362]=J[7379];J[7363]=b;b=J[7384];J[7366]=J[7383];J[7367]=b;b=J[7388];J[7370]=J[7387];J[7371]=b;J[7376]=0;J[7377]=0;b=J[7382];J[7364]=J[7381];J[7365]=b;b=J[7386];J[7368]=J[7385];J[7369]=b;b=J[7390];J[7372]=J[7389];J[7373]=b}j=N[c+232>>2];k=N[e+232>>2];p=N[c+236>>2];q=N[e+236>>2];r=N[c+228>>2];s=N[e+228>>2];J[d+76>>2]=0;N[d+64>>2]=s-r;N[d+72>>2]=q-p;N[d+68>>2]=k-j;e:{if(!vl(d+392|0,d+336|0,29448,d- -64|0,d+280|0)){break e}J[d+84>>2]=0;J[d+88>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+24>>2]=0;J[d+8>>2]=0;J[d+52>>2]=0;J[d+56>>2]=0;J[d+48>>2]=e;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=c;J[d+68>>2]=0;J[d+72>>2]=0;H[d+216|0]=0;J[d+64>>2]=21096;b=J[d+52>>2];J[d+16>>2]=J[d+48>>2];J[d+20>>2]=b;b=J[d+36>>2];J[d>>2]=J[d+32>>2];J[d+4>>2]=b;if(!dk(a,d+280|0,d+16|0,d,d- -64|0)){break e}J[8369]=J[8369]+1;b=ia[J[6782]](216,16)|0;c=qa(b+4|0,0,212);J[b>>2]=21096;sa(c,d- -64|4,100);c=J[d+180>>2];J[b+112>>2]=J[d+176>>2];J[b+116>>2]=c;c=J[d+172>>2];J[b+104>>2]=J[d+168>>2];J[b+108>>2]=c;c=J[d+196>>2];J[b+128>>2]=J[d+192>>2];J[b+132>>2]=c;c=J[d+188>>2];J[b+120>>2]=J[d+184>>2];J[b+124>>2]=c;c=J[d+204>>2];J[b+136>>2]=J[d+200>>2];J[b+140>>2]=c;c=J[d+212>>2];J[b+144>>2]=J[d+208>>2];J[b+148>>2]=c;H[b+152|0]=K[d+216|0];J[b+212>>2]=J[d+276>>2];c=J[d+272>>2];J[b+204>>2]=J[d+268>>2];J[b+208>>2]=c;c=J[d+264>>2];J[b+196>>2]=J[d+260>>2];J[b+200>>2]=c;c=J[d+256>>2];J[b+188>>2]=J[d+252>>2];J[b+192>>2]=c;c=J[d+248>>2];J[b+180>>2]=J[d+244>>2];J[b+184>>2]=c;c=J[d+240>>2];J[b+172>>2]=J[d+236>>2];J[b+176>>2]=c;c=J[d+232>>2];J[b+164>>2]=J[d+228>>2];J[b+168>>2]=c;c=J[d+224>>2];J[b+156>>2]=J[d+220>>2];J[b+160>>2]=c;c=J[a+24>>2];e=J[c+852>>2];f:{if((e|0)!=J[c+856>>2]){break f}l=e?e<<1:1;if((l|0)<=(e|0)){break f}if(l){J[8369]=J[8369]+1;h=ia[J[6782]](l<<2,16)|0;e=J[c+852>>2]}g:{if((e|0)<=0){break g}if(e-1>>>0>=3){m=e&-4;while(1){f=g<<2;J[f+h>>2]=J[f+J[c+860>>2]>>2];i=f|4;J[i+h>>2]=J[i+J[c+860>>2]>>2];i=f|8;J[i+h>>2]=J[i+J[c+860>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[c+860>>2]>>2];g=g+4|0;n=n+4|0;if((m|0)!=(n|0)){continue}break}}f=e&3;if(!f){break g}while(1){m=g<<2;J[m+h>>2]=J[m+J[c+860>>2]>>2];g=g+1|0;o=o+1|0;if((f|0)!=(o|0)){continue}break}}g=J[c+860>>2];if(!(!g|!K[c+864|0])){if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}e=J[c+852>>2]}J[c+860>>2]=h;H[c+864|0]=1;J[c+856>>2]=l}J[J[c+860>>2]+(e<<2)>>2]=b;J[c+852>>2]=e+1;c=J[a+24>>2];j=N[c+348>>2];a=J[a+28>>2];k=N[a+348>>2];N[b+64>>2]=N[b+64>>2]*(j>k?j:k);N[b+68>>2]=N[b+68>>2]*Q(Q(N[c+360>>2]+N[a+360>>2])*Q(.5))}break a}J[8354]=J[8354]+1}ga=d+448|0}function Iy(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=Q(0),f=0,g=0,h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=0,x=0,y=0,z=0,A=Q(0),B=0,C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=0,L=Q(0);g=J[a+216>>2];D=N[g+4>>2];a:{if(D==Q(0)){break a}f=J[b>>2];if(!(ia[J[J[g>>2]+8>>2]](g,J[f+188>>2])|0)){break a}v=a+68|0;w=a+132|0;g=f+4|0;z=J[a+216>>2];a=ga+-64|0;ga=a;d=J[f+192>>2];b:{if(J[d+4>>2]==32){if(!f|J[f+236>>2]!=8){break b}g=v+48|0;d=w+48|0;if(!(J[f+988>>2]|!J[f+752>>2])){kk(f)}J[a+60>>2]=1065353216;J[a+48>>2]=f;J[a+52>>2]=0;J[a+56>>2]=-1;b=ga-80|0;ga=b;c=N[g>>2];k=N[d>>2];e=N[g+4>>2];j=N[d+4>>2];h=N[g+8>>2];l=N[d+8>>2];J[b+76>>2]=0;h=Q(l-h);N[b+72>>2]=h;e=Q(j-e);N[b+68>>2]=e;c=Q(k-c);N[b+64>>2]=c;n=J[f+988>>2];c:{if(!n){i=J[f+752>>2];if((i|0)<=0){break c}d=0;while(1){n=J[f+760>>2]+P(d,44)|0;c=jk(g,b- -64|0,J[n+8>>2]+8|0,J[n+12>>2]+8|0,J[n+16>>2]+8|0,N[a+60>>2]);if(c>Q(0)){J[a+52>>2]=3;J[a+56>>2]=d;N[a+60>>2]=c;x=x+1|0}d=d+1|0;if((i|0)!=(d|0)){continue}break}break c}k=N[a+60>>2];J[b>>2]=20972;i=J[g+12>>2];J[b+12>>2]=J[g+8>>2];J[b+16>>2]=i;i=J[g+4>>2];y=J[g>>2];J[b+48>>2]=0;N[b+44>>2]=h;N[b+40>>2]=e;J[b+4>>2]=y;J[b+8>>2]=i;N[b+36>>2]=c;i=J[d+12>>2];J[b+28>>2]=J[d+8>>2];J[b+32>>2]=i;i=J[d+4>>2];J[b+20>>2]=J[d>>2];J[b+24>>2]=i;J[b+56>>2]=0;J[b+60>>2]=0;N[b+52>>2]=k;Vm(n,g,d,b);d=J[b+56>>2];if(!d){break c}N[a+60>>2]=N[b+52>>2];J[a+52>>2]=3;J[a+56>>2]=(d-J[f+760>>2]|0)/44;x=1}if(J[f+772>>2]>0){K=J[f+780>>2];n=0;E=N[b+72>>2];F=N[b+68>>2];G=N[b+64>>2];while(1){d=0;while(1){y=(P(n,104)+K|0)+8|0;i=P(d,12);B=J[y+(J[i+21012>>2]<<2)>>2];u=N[B+8>>2];C=J[y+(J[i+21008>>2]<<2)>>2];h=N[C+8>>2];c=Q(u-h);i=J[y+(J[i+21016>>2]<<2)>>2];H=N[i+12>>2];l=N[C+12>>2];e=Q(H-l);A=N[i+8>>2];j=Q(A-h);o=N[B+12>>2];p=Q(o-l);k=Q(Q(c*e)-Q(j*p));q=p;I=N[i+16>>2];p=N[C+16>>2];r=Q(I-p);s=N[B+16>>2];m=Q(s-p);e=Q(Q(q*r)-Q(e*m));j=Q(Q(m*j)-Q(r*c));c=Q(Q(E*k)+Q(Q(G*e)+Q(F*j)));d:{if(Q(R(c))<Q(1.1920928955078125e-7)){break d}r=N[g+8>>2];m=N[g>>2];q=N[g+4>>2];c=Q(Q(-Q(Q(Q(r*k)+Q(Q(m*e)+Q(j*q)))-Q(Q(p*k)+Q(Q(h*e)+Q(l*j)))))/c);if(!(c>Q(11920928955078125e-22))|!(c<N[a+60>>2])){break d}t=Q(m+Q(G*c));h=Q(h-t);m=Q(q+Q(F*c));o=Q(o-m);u=Q(u-t);l=Q(l-m);q=s;s=Q(r+Q(E*c));r=Q(q-s);p=Q(p-s);if(!(Q(Q(k*Q(Q(h*o)-Q(u*l)))+Q(Q(e*Q(Q(l*r)-Q(o*p)))+Q(j*Q(Q(p*u)-Q(r*h)))))>Q(-11920928955078125e-22))){break d}m=Q(H-m);t=Q(A-t);A=Q(k*Q(Q(u*m)-Q(t*o)));q=o;o=Q(I-s);if(!(c>Q(0))|(!(Q(A+Q(Q(e*Q(Q(q*o)-Q(m*r)))+Q(j*Q(Q(r*t)-Q(o*u)))))>Q(-11920928955078125e-22))|!(Q(Q(k*Q(Q(t*l)-Q(h*m)))+Q(Q(e*Q(Q(m*p)-Q(l*o)))+Q(j*Q(Q(o*h)-Q(p*t)))))>Q(-11920928955078125e-22)))){break d}x=x+1|0;J[a+52>>2]=4;J[a+56>>2]=n;N[a+60>>2]=c}d=d+1|0;if((d|0)!=4){continue}break}n=n+1|0;if((n|0)<J[f+772>>2]){continue}break}}ga=b+80|0;if(!x){break b}l=N[a+60>>2];if(!(l<=N[z+4>>2])){break b}J[a+40>>2]=0;b=J[a+56>>2];J[a+44>>2]=b;c=Q(N[w+52>>2]-N[v+52>>2]);k=Q(N[w+48>>2]-N[v+48>>2]);e=Q(N[w+56>>2]-N[v+56>>2]);e:{if(J[a+52>>2]!=3){h=Q(Q(1)/Q(Y(Q(Q(e*e)+Q(Q(k*k)+Q(c*c))))));j=Q(h*Q(-e));c=Q(h*Q(-c));e=Q(h*Q(-k));break e}b=J[f+760>>2]+P(b,44)|0;j=N[b+28>>2];s=Q(j*e);e=N[b+20>>2];q=c;c=N[b+24>>2];if(!(Q(s+Q(Q(e*k)+Q(q*c)))>Q(0))){L=N[b+32>>2];break e}j=Q(-j);c=Q(-c);e=Q(-e)}N[a+28>>2]=L;N[a+24>>2]=j;N[a+20>>2]=c;N[a+32>>2]=l;N[a+16>>2]=e;J[a+8>>2]=f;J[a+12>>2]=a+40;Q(ia[J[J[z>>2]+12>>2]](z,a+8|0,1));break b}b=ga-32|0;ga=b;J[b+24>>2]=-1;J[b+28>>2]=-1;J[b+20>>2]=g;J[b+16>>2]=f;J[b+12>>2]=d;J[b+8>>2]=0;bf(v,w,b+8|0,z);ga=b+32|0}ga=a- -64|0}return D!=Q(0)|0}function qB(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=0,g=Q(0),h=0,i=Q(0),j=0,k=Q(0),l=0,m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0),u=0,v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=0,E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=0,L=0;f=ga-96|0;ga=f;h=J[a+32>>2];l=J[a+28>>2];q=J[b+8>>2];J[q>>2]=1065353216;u=J[b+24>>2];o=u+1<<2;J[o+q>>2]=1065353216;K=u<<1;L=K+2<<2;J[q+L>>2]=1065353216;s=N[l+8>>2];m=N[l+12>>2];n=N[l+20>>2];p=N[l+24>>2];k=N[l+28>>2];i=N[l+36>>2];d=N[l+40>>2];c=N[a+52>>2];r=N[l+44>>2];e=N[a+56>>2];v=N[l+4>>2];g=N[a+48>>2];q=J[b+12>>2];J[q+12>>2]=0;J[q>>2]=0;i=Q(Q(r*e)+Q(Q(i*g)+Q(c*d)));N[q+4>>2]=i;n=Q(Q(k*e)+Q(Q(n*g)+Q(c*p)));N[q+8>>2]=-n;w=u<<2;j=w+q|0;J[j+12>>2]=0;m=Q(Q(m*e)+Q(Q(v*g)+Q(s*c)));N[j+8>>2]=m;J[j+4>>2]=0;N[j>>2]=-i;D=u<<3;j=q+D|0;J[j+8>>2]=0;J[j+12>>2]=0;N[j+4>>2]=-m;N[j>>2]=n;j=J[b+16>>2];if(j){J[j>>2]=-1082130432;J[j+o>>2]=-1082130432;J[j+L>>2]=-1082130432}s=N[h+8>>2];d=N[h+12>>2];k=N[h+36>>2];r=N[h+40>>2];v=N[h+44>>2];p=N[h+20>>2];z=N[h+24>>2];c=N[a+68>>2];A=N[h+28>>2];e=N[a+72>>2];B=N[h+4>>2];g=N[a+64>>2];j=J[b+20>>2];J[j+12>>2]=0;J[j>>2]=0;p=Q(Q(A*e)+Q(Q(p*g)+Q(c*z)));N[j+8>>2]=p;k=Q(Q(v*e)+Q(Q(k*g)+Q(c*r)));N[j+4>>2]=-k;o=j+w|0;J[o+12>>2]=0;c=Q(Q(d*e)+Q(Q(B*g)+Q(s*c)));N[o+8>>2]=-c;J[o+4>>2]=0;N[o>>2]=k;o=j+(K<<2)|0;J[o+8>>2]=0;J[o+12>>2]=0;N[o+4>>2]=c;N[o>>2]=-p;e=N[l+60>>2];g=N[h+60>>2];d=N[l+56>>2];r=N[h+56>>2];o=J[b+28>>2];s=Q(N[b>>2]*N[b+4>>2]);N[o>>2]=s*Q(Q(Q(c+N[h+52>>2])-m)-N[l+52>>2]);N[o+w>>2]=s*Q(Q(Q(p+r)-n)-d);N[o+D>>2]=s*Q(Q(Q(k+g)-i)-e);o=P(u,12);J[o+q>>2]=1065353216;w=u<<4|4;J[w+q>>2]=1065353216;D=q;q=P(u,20)+8|0;J[D+q>>2]=1065353216;J[j+o>>2]=-1082130432;J[j+w>>2]=-1082130432;J[j+q>>2]=-1082130432;e=N[h+12>>2];n=N[h+24>>2];m=N[h+40>>2];g=N[h+8>>2];p=N[h+36>>2];k=N[h+28>>2];d=N[h+20>>2];r=N[h+44>>2];v=N[l+12>>2];z=N[l+4>>2];A=N[l+8>>2];B=N[l+28>>2];E=N[l+20>>2];F=N[l+24>>2];G=N[l+44>>2];H=N[l+36>>2];I=N[l+40>>2];i=N[h+4>>2];J[f+68>>2]=0;J[f+52>>2]=0;x=Q(Q(d*m)-Q(p*n));y=Q(Q(n*r)-Q(m*k));t=Q(Q(k*p)-Q(r*d));c=Q(Q(1)/Q(Q(e*x)+Q(Q(i*y)+Q(g*t))));C=Q(Q(Q(i*n)-Q(d*g))*c);n=Q(Q(Q(g*k)-Q(n*e))*c);k=Q(Q(Q(e*d)-Q(k*i))*c);N[f- -64>>2]=Q(G*C)+Q(Q(H*n)+Q(I*k));d=Q(Q(Q(g*p)-Q(m*i))*c);g=Q(Q(Q(e*m)-Q(r*g))*c);e=Q(Q(Q(i*r)-Q(p*e))*c);N[f+60>>2]=Q(G*d)+Q(Q(H*g)+Q(I*e));N[f+48>>2]=Q(C*B)+Q(Q(n*E)+Q(k*F));N[f+44>>2]=Q(d*B)+Q(Q(g*E)+Q(e*F));J[f+36>>2]=0;i=Q(x*c);m=Q(y*c);c=Q(t*c);N[f+56>>2]=Q(G*i)+Q(Q(H*m)+Q(I*c));N[f+40>>2]=Q(i*B)+Q(Q(m*E)+Q(c*F));N[f+32>>2]=Q(C*v)+Q(Q(n*z)+Q(A*k));N[f+28>>2]=Q(d*v)+Q(Q(g*z)+Q(A*e));N[f+24>>2]=Q(i*v)+Q(Q(m*z)+Q(A*c));h=f+8|0;Na(f+24|0,h);n=N[a+92>>2];c=N[h+12>>2];e=Q(n-c);x=Q(e*e);m=N[a+88>>2];e=N[h+8>>2];g=Q(m-e);y=Q(g*g);p=N[a+80>>2];g=N[h>>2];i=Q(p-g);t=Q(i*i);k=N[a+84>>2];i=N[h+4>>2];d=Q(k-i);C=Q(x+Q(y+Q(t+Q(d*d))));d=Q(n+c);x=Q(d*d);d=Q(m+e);y=Q(d*d);d=Q(p+g);t=Q(d*d);d=Q(k+i);if(!(C<Q(x+Q(y+Q(t+Q(d*d)))))){e=Q(-e);i=Q(-i);g=Q(-g);c=Q(-c)}d=qb(Q(T(Q(U(Q(Q(e*m)+Q(Q(i*k)+Q(Q(c*n)+Q(p*g)))),Q(-1))),Q(1))));N[f+76>>2]=d+d;J[f+92>>2]=0;d=Q(Q(i*p)+Q(Q(Q(n*e)-Q(c*m))-Q(g*k)));r=Q(Q(e*k)+Q(Q(Q(n*g)-Q(c*p))-Q(i*m)));c=Q(Q(g*m)+Q(Q(Q(n*i)-Q(c*k))-Q(e*p)));e=Q(Q(d*d)+Q(Q(r*r)+Q(c*c)));a:{if(e<Q(1.4210854715202004e-14)){J[f+80>>2]=1065353216;J[f+84>>2]=0;N[f+88>>2]=0;break a}t=c;c=Q(Q(1)/Q(Y(e)));N[f+84>>2]=t*c;N[f+80>>2]=r*c;N[f+88>>2]=d*c}c=Q(-N[f+76>>2]);N[f+84>>2]=N[f+84>>2]*c;N[f+88>>2]=N[f+88>>2]*c;a=J[b+24>>2];b=J[b+28>>2];N[P(a,12)+b>>2]=s*Q(N[f+80>>2]*c);N[b+(a<<4)>>2]=s*N[f+84>>2];N[b+P(a,20)>>2]=s*N[f+88>>2];ga=f+96|0}function yl(a,b,c,d){var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=Q(0),D=0,E=Q(0),F=Q(0),G=Q(0),I=Q(0),K=Q(0),L=Q(0),M=0,O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=Q(0),_=0,$=0,aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0);e=ga-240|0;ga=e;a:{if(J[a+16>>2]){Ie(J[a+4>>2]);f=J[a+12>>2];D=J[f+4>>2];M=J[a+16>>2];_=J[M+4>>2];h=Q(ia[J[J[f>>2]+48>>2]](f));B=J[a+16>>2];j=Q(ia[J[J[B>>2]+48>>2]](B));B=J[a+4>>2];$=J[a+8>>2];a=e+160|0;J[a+72>>2]=1;J[a+76>>2]=1;J[a+60>>2]=-1;H[a+52|0]=0;N[a+48>>2]=j;N[a+44>>2]=h;J[a+40>>2]=_;J[a+36>>2]=D;J[a+32>>2]=M;J[a+28>>2]=f;J[a+24>>2]=B;J[a+20>>2]=$;J[a+4>>2]=0;J[a+8>>2]=1065353216;J[a+12>>2]=0;J[a+16>>2]=0;J[a>>2]=18540;J[e+152>>2]=1566444395;f=J[b+12>>2];J[e+32>>2]=J[b+8>>2];J[e+36>>2]=f;f=J[b+4>>2];J[e+24>>2]=J[b>>2];J[e+28>>2]=f;f=J[b+28>>2];J[e+48>>2]=J[b+24>>2];J[e+52>>2]=f;f=J[b+20>>2];J[e+40>>2]=J[b+16>>2];J[e+44>>2]=f;D=J[b+44>>2];f=e- -64|0;J[f>>2]=J[b+40>>2];J[f+4>>2]=D;f=J[b+36>>2];J[e+56>>2]=J[b+32>>2];J[e+60>>2]=f;f=J[b+60>>2];J[e+80>>2]=J[b+56>>2];J[e+84>>2]=f;f=J[b+52>>2];J[e+72>>2]=J[b+48>>2];J[e+76>>2]=f;b=J[c+12>>2];J[e+96>>2]=J[c+8>>2];J[e+100>>2]=b;b=J[c+4>>2];J[e+88>>2]=J[c>>2];J[e+92>>2]=b;b=J[c+20>>2];J[e+104>>2]=J[c+16>>2];J[e+108>>2]=b;b=J[c+28>>2];J[e+112>>2]=J[c+24>>2];J[e+116>>2]=b;b=J[c+44>>2];J[e+128>>2]=J[c+40>>2];J[e+132>>2]=b;b=J[c+36>>2];J[e+120>>2]=J[c+32>>2];J[e+124>>2]=b;b=J[c+52>>2];J[e+136>>2]=J[c+48>>2];J[e+140>>2]=b;b=J[c+60>>2];J[e+144>>2]=J[c+56>>2];J[e+148>>2]=b;zb(a,e+24|0,d,0,0);break a}E=N[b+52>>2];F=N[b+56>>2];G=N[c+52>>2];I=N[c+56>>2];k=N[b+20>>2];l=N[b+36>>2];h=N[c+20>>2];j=N[c+36>>2];g=N[c+24>>2];m=N[b+24>>2];i=N[c+40>>2];p=N[b+40>>2];K=N[b+48>>2];aa=N[c+48>>2];f=J[a+12>>2];q=N[b+32>>2];r=N[b+16>>2];s=N[b>>2];t=N[b+4>>2];x=N[c+32>>2];y=N[c+16>>2];z=N[c>>2];A=N[c+4>>2];n=N[c+8>>2];u=N[b+8>>2];a=J[a+20>>2];v=N[a+52>>2];w=N[a+56>>2];o=N[a+48>>2];J[e+172>>2]=0;O=Q(Q(p*x)+Q(Q(u*z)+Q(m*y)));o=Q(-o);P=Q(Q(p*j)+Q(Q(u*A)+Q(m*h)));C=Q(Q(p*i)+Q(Q(u*n)+Q(m*g)));N[e+168>>2]=Q(Q(O*o)-Q(v*P))-Q(w*C);R=Q(Q(l*x)+Q(Q(t*z)+Q(k*y)));S=Q(Q(l*j)+Q(Q(t*A)+Q(k*h)));T=Q(Q(l*i)+Q(Q(t*n)+Q(k*g)));N[e+164>>2]=Q(Q(R*o)-Q(v*S))-Q(w*T);U=Q(Q(q*x)+Q(Q(s*z)+Q(r*y)));V=Q(Q(q*j)+Q(Q(s*A)+Q(r*h)));W=Q(Q(q*i)+Q(Q(s*n)+Q(r*g)));N[e+160>>2]=Q(Q(U*o)-Q(v*V))-Q(w*W);b=e+160|0;ia[J[J[f>>2]+64>>2]](e+24|0,f,b);k=N[a+52>>2];l=N[a+56>>2];ba=N[a+64>>2];m=N[a+48>>2];p=N[e+24>>2];q=N[e+28>>2];r=N[e+32>>2];ca=N[c+52>>2];s=N[c+24>>2];t=N[c+20>>2];da=N[c+56>>2];u=N[c+40>>2];v=N[c+36>>2];ea=N[c+48>>2];w=N[c+8>>2];o=N[c>>2];X=N[c+4>>2];Y=N[c+16>>2];Z=N[c+32>>2];J[e+172>>2]=0;fa=Q(Q(F*i)+Q(Q(K*n)+Q(E*g)));L=n;n=Q(-aa);g=Q(Q(fa+Q(Q(Q(L*n)-Q(g*G))-Q(i*I)))+Q(Q(r*C)+Q(Q(p*W)+Q(T*q))));L=g;C=Q(l*g);g=Q(Q(Q(Q(F*x)+Q(Q(K*z)+Q(E*y)))+Q(Q(Q(z*n)-Q(y*G))-Q(x*I)))+Q(Q(r*O)+Q(Q(p*U)+Q(R*q))));i=Q(Q(Q(Q(F*j)+Q(Q(K*A)+Q(E*h)))+Q(Q(Q(A*n)-Q(h*G))-Q(j*I)))+Q(Q(r*P)+Q(Q(p*V)+Q(S*q))));h=Q(Q(C+Q(Q(m*g)+Q(k*i)))-ba);j=Q(L-Q(l*h));g=Q(g-Q(m*h));i=Q(i-Q(k*h));N[e+168>>2]=da+Q(Q(u*j)+Q(Q(Z*g)+Q(v*i)));N[e+164>>2]=ca+Q(Q(j*s)+Q(Q(g*Y)+Q(i*t)));N[e+160>>2]=ea+Q(Q(j*w)+Q(Q(g*o)+Q(i*X)));J[e+20>>2]=0;N[e+16>>2]=Q(u*l)+Q(Q(Z*m)+Q(k*v));N[e+12>>2]=Q(s*l)+Q(Q(Y*m)+Q(k*t));N[e+8>>2]=Q(w*l)+Q(Q(o*m)+Q(k*X));ia[J[J[d>>2]+16>>2]](d,e+8|0,b,h)}ga=e+240|0}function zk(a,b){var c=0,d=Q(0),e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);J[a+312>>2]=0;J[a+316>>2]=0;J[a+236>>2]=2;J[a+544>>2]=1065353216;J[a+548>>2]=1065353216;J[a+348>>2]=1065353216;J[a+352>>2]=1065353216;J[a+412>>2]=0;J[a+416>>2]=0;J[a+320>>2]=0;J[a+324>>2]=0;J[a+328>>2]=0;J[a+332>>2]=0;J[a+336>>2]=0;J[a+340>>2]=0;J[a+552>>2]=1065353216;J[a+556>>2]=0;J[a+360>>2]=0;J[a+364>>2]=0;J[a+356>>2]=1065353216;J[a+368>>2]=0;J[a+372>>2]=0;J[a+376>>2]=0;J[a+380>>2]=0;J[a+384>>2]=0;J[a+388>>2]=0;J[a+392>>2]=0;J[a+420>>2]=0;J[a+424>>2]=0;J[a+428>>2]=0;J[a+432>>2]=0;J[a+436>>2]=0;J[a+440>>2]=0;h=N[b+92>>2];d=N[b+96>>2];N[a+448>>2]=d<Q(0)?Q(0):Q(T(d,Q(1)));N[a+444>>2]=h<Q(0)?Q(0):Q(T(h,Q(1)));N[a+472>>2]=N[b+112>>2];N[a+476>>2]=N[b+116>>2];g=J[b+4>>2];J[a+608>>2]=0;J[a+612>>2]=0;J[a+480>>2]=g;H[a+452|0]=K[b+120|0];N[a+456>>2]=N[b+124>>2];N[a+460>>2]=N[b+128>>2];N[a+464>>2]=N[b+132>>2];N[a+468>>2]=N[b+136>>2];a:{if(g){c=a+4|0;ia[J[J[g>>2]+8>>2]](g,c);break a}c=J[b+12>>2];J[a+4>>2]=J[b+8>>2];J[a+8>>2]=c;c=J[b+20>>2];J[a+12>>2]=J[b+16>>2];J[a+16>>2]=c;c=J[b+36>>2];J[a+28>>2]=J[b+32>>2];J[a+32>>2]=c;c=J[b+28>>2];J[a+20>>2]=J[b+24>>2];J[a+24>>2]=c;c=J[b+44>>2];J[a+36>>2]=J[b+40>>2];J[a+40>>2]=c;c=J[b+52>>2];J[a+44>>2]=J[b+48>>2];J[a+48>>2]=c;c=b- -64|0;g=J[c+4>>2];J[a+60>>2]=J[c>>2];J[a+64>>2]=g;c=J[b+60>>2];J[a+52>>2]=J[b+56>>2];J[a+56>>2]=c;c=a+4|0}g=J[c+4>>2];J[a+68>>2]=J[c>>2];J[a+72>>2]=g;g=J[c+12>>2];J[a+76>>2]=J[c+8>>2];J[a+80>>2]=g;c=J[a+32>>2];J[a+92>>2]=J[a+28>>2];J[a+96>>2]=c;c=J[a+24>>2];J[a+84>>2]=J[a+20>>2];J[a+88>>2]=c;c=J[a+40>>2];J[a+100>>2]=J[a+36>>2];J[a+104>>2]=c;c=J[a+48>>2];J[a+108>>2]=J[a+44>>2];J[a+112>>2]=c;c=J[a+56>>2];J[a+116>>2]=J[a+52>>2];J[a+120>>2]=c;c=J[a+64>>2];J[a+124>>2]=J[a+60>>2];J[a+128>>2]=c;J[a+132>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+144>>2]=0;J[a+148>>2]=0;J[a+152>>2]=0;J[a+156>>2]=0;J[a+160>>2]=0;N[a+224>>2]=N[b+100>>2];N[a+232>>2]=N[b+104>>2];N[a+228>>2]=N[b+108>>2];ia[J[J[a>>2]+12>>2]](a,J[b+72>>2]);c=J[8147];J[8147]=c+1;J[a+508>>2]=c;h=Q(0);c=J[a+204>>2];d=N[b>>2];b:{if(d==Q(0)){J[a+204>>2]=c|1;break b}J[a+204>>2]=c&-2;h=Q(Q(1)/d)}N[a+344>>2]=h;J[a+376>>2]=0;N[a+364>>2]=d*N[a+380>>2];N[a+372>>2]=d*N[a+388>>2];N[a+368>>2]=d*N[a+384>>2];e=N[b+84>>2];f=N[b+80>>2];d=N[b+76>>2];J[a+504>>2]=0;J[a+308>>2]=0;J[a+292>>2]=0;J[a+276>>2]=0;J[a+408>>2]=0;d=d!=Q(0)?Q(Q(1)/d):Q(0);N[a+396>>2]=d;f=f!=Q(0)?Q(Q(1)/f):Q(0);N[a+400>>2]=f;e=e!=Q(0)?Q(Q(1)/e):Q(0);N[a+404>>2]=e;n=N[a+12>>2];i=Q(e*n);o=N[a+4>>2];j=Q(d*o);p=N[a+8>>2];k=Q(f*p);N[a+264>>2]=Q(n*i)+Q(Q(o*j)+Q(p*k));q=N[a+28>>2];r=N[a+20>>2];s=N[a+24>>2];N[a+268>>2]=Q(q*i)+Q(Q(r*j)+Q(k*s));t=N[a+44>>2];l=Q(t*i);i=N[a+36>>2];m=Q(i*j);j=N[a+40>>2];N[a+272>>2]=l+Q(m+Q(k*j));k=Q(e*q);l=Q(d*r);m=Q(f*s);N[a+280>>2]=Q(n*k)+Q(Q(o*l)+Q(p*m));N[a+284>>2]=Q(q*k)+Q(Q(r*l)+Q(s*m));N[a+288>>2]=Q(t*k)+Q(Q(i*l)+Q(m*j));e=Q(e*t);d=Q(d*i);f=Q(f*j);N[a+296>>2]=Q(n*e)+Q(Q(o*d)+Q(p*f));N[a+300>>2]=Q(q*e)+Q(Q(r*d)+Q(s*f));N[a+304>>2]=Q(t*e)+Q(Q(i*d)+Q(j*f));J[a+536>>2]=0;J[a+540>>2]=0;J[a+528>>2]=0;J[a+532>>2]=0;J[a+520>>2]=0;J[a+524>>2]=0;J[a+512>>2]=0;J[a+516>>2]=0;J[a+604>>2]=0;J[a+596>>2]=0;J[a+600>>2]=0;J[a+588>>2]=0;J[a+592>>2]=0;J[a+580>>2]=0;J[a+584>>2]=0;J[a+572>>2]=0;J[a+576>>2]=0;N[a+568>>2]=h*N[a+356>>2];N[a+564>>2]=h*N[a+352>>2];N[a+560>>2]=h*N[a+348>>2]}function xG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=0,D=0,E=Q(0),F=Q(0),G=Q(0),H=0,I=0;d=ga-240|0;ga=d;J[a+4>>2]=J[a+4>>2]+1;B=J[c+36>>2];D=P(B,80);H=J[a+12>>2];I=J[H+4>>2];n=J[(D+J[I+24>>2]|0)+64>>2];c=J[a+8>>2];C=J[b+36>>2];b=J[J[c+4>>2]+24>>2]+P(C,80)|0;o=J[b+64>>2];c=J[c+12>>2];E=N[c+52>>2];F=N[c+56>>2];e=N[c+24>>2];f=N[c+20>>2];g=N[c+40>>2];h=N[c+36>>2];G=N[c+48>>2];i=N[c+8>>2];j=N[c>>2];k=N[c+4>>2];l=N[c+16>>2];m=N[c+32>>2];p=N[b+32>>2];q=N[b>>2];r=N[b+16>>2];s=N[b+56>>2];t=N[b+48>>2];u=N[b+52>>2];v=N[b+36>>2];w=N[b+4>>2];x=N[b+20>>2];y=N[b+40>>2];z=N[b+8>>2];A=N[b+24>>2];c=0;J[d+236>>2]=0;J[d+220>>2]=0;J[d+204>>2]=0;N[d+216>>2]=Q(y*g)+Q(Q(z*m)+Q(h*A));N[d+212>>2]=Q(v*g)+Q(Q(w*m)+Q(h*x));N[d+200>>2]=Q(y*e)+Q(Q(z*l)+Q(f*A));N[d+196>>2]=Q(v*e)+Q(Q(w*l)+Q(f*x));N[d+232>>2]=F+Q(Q(s*g)+Q(Q(t*m)+Q(h*u)));N[d+228>>2]=E+Q(Q(s*e)+Q(Q(t*l)+Q(f*u)));J[d+188>>2]=0;N[d+208>>2]=Q(p*g)+Q(Q(q*m)+Q(h*r));N[d+192>>2]=Q(p*e)+Q(Q(q*l)+Q(f*r));N[d+184>>2]=Q(y*i)+Q(Q(z*j)+Q(k*A));N[d+180>>2]=Q(v*i)+Q(Q(w*j)+Q(k*x));N[d+176>>2]=Q(p*i)+Q(Q(q*j)+Q(k*r));N[d+224>>2]=G+Q(Q(s*i)+Q(Q(t*j)+Q(k*u)));b=J[H+12>>2];E=N[b+52>>2];F=N[b+56>>2];e=N[b+24>>2];f=N[b+20>>2];g=N[b+40>>2];h=N[b+36>>2];G=N[b+48>>2];i=N[b+8>>2];j=N[b>>2];k=N[b+4>>2];l=N[b+16>>2];m=N[b+32>>2];b=J[I+24>>2]+D|0;p=N[b+32>>2];q=N[b>>2];r=N[b+16>>2];s=N[b+56>>2];t=N[b+48>>2];u=N[b+52>>2];v=N[b+36>>2];w=N[b+4>>2];x=N[b+20>>2];y=N[b+40>>2];z=N[b+8>>2];A=N[b+24>>2];J[d+172>>2]=0;J[d+156>>2]=0;J[d+140>>2]=0;N[d+152>>2]=Q(y*g)+Q(Q(z*m)+Q(h*A));N[d+148>>2]=Q(v*g)+Q(Q(w*m)+Q(h*x));N[d+136>>2]=Q(y*e)+Q(Q(z*l)+Q(f*A));N[d+132>>2]=Q(v*e)+Q(Q(w*l)+Q(f*x));N[d+168>>2]=F+Q(Q(s*g)+Q(Q(t*m)+Q(h*u)));N[d+164>>2]=E+Q(Q(s*e)+Q(Q(t*l)+Q(f*u)));J[d+124>>2]=0;N[d+144>>2]=Q(p*g)+Q(Q(q*m)+Q(h*r));N[d+128>>2]=Q(p*e)+Q(Q(q*l)+Q(f*r));N[d+120>>2]=Q(y*i)+Q(Q(z*j)+Q(k*A));N[d+116>>2]=Q(v*i)+Q(Q(w*j)+Q(k*x));N[d+112>>2]=Q(p*i)+Q(Q(q*j)+Q(k*r));N[d+160>>2]=G+Q(Q(s*i)+Q(Q(t*j)+Q(k*u)));ia[J[J[o>>2]+8>>2]](o,d+176|0,d+96|0,d+80|0);ia[J[J[n>>2]+8>>2]](n,d+112|0,d- -64|0,d+48|0);b=J[7399];a:{if(b){if(!(ia[b|0](o,n)|0)){break a}}c=N[d+80>>2]<N[d+64>>2]|N[d+96>>2]>N[d+48>>2]?c:1;b=0;if((N[d+88>>2]<N[d+72>>2]|N[d+104>>2]>N[d+56>>2]?b:c)^1|N[d+84>>2]<N[d+68>>2]|N[d+100>>2]>N[d+52>>2]){break a}b=J[a+8>>2];c=J[b+8>>2];J[d+44>>2]=C;J[d+40>>2]=-1;J[d+32>>2]=c;J[d+28>>2]=o;J[d+24>>2]=b;J[d+36>>2]=d+176;b=J[a+12>>2];c=J[b+8>>2];J[d+20>>2]=B;J[d+16>>2]=-1;J[d+8>>2]=c;J[d+4>>2]=n;J[d>>2]=b;J[d+12>>2]=d+112;b=J[a+28>>2];J[7402]=J[7402]+1;c=B<<16|C;c=(c<<15^-1)+c|0;c=P(c>>10^c,9);c=c>>6^c;c=(c<<11^-1)+c|0;c=J[b+12>>2]-1&(c>>16^c);b:{c:{if((c|0)>=J[b+32>>2]){break c}c=J[J[b+40>>2]+(c<<2)>>2];if((c|0)==-1){break c}n=J[b+60>>2];o=J[b+16>>2];while(1){b=o+P(c,12)|0;if(J[b>>2]==(C|0)&J[b+4>>2]==(B|0)){break b}c=J[n+(c<<2)>>2];if((c|0)!=-1){continue}break}}b=0}d:{if(b){c=J[b+8>>2];break d}b=J[a+16>>2];c=ia[J[J[b>>2]+8>>2]](b,d+24|0,d,J[a+32>>2])|0;b=J[a+28>>2];J[(ia[J[J[b>>2]+12>>2]](b,C,B)|0)+8>>2]=c}b=J[a+24>>2];n=J[b+12>>2];o=J[b+8>>2];J[b+12>>2]=d;D=d+24|0;J[b+8>>2]=D;ia[J[J[b>>2]+8>>2]](b,-1,C);b=J[a+24>>2];ia[J[J[b>>2]+12>>2]](b,-1,B);ia[J[J[c>>2]+8>>2]](c,D,d,J[a+20>>2],J[a+24>>2]);a=J[a+24>>2];J[a+8>>2]=o;J[a+12>>2]=n}ga=d+240|0}function mw(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=ga-16|0;ga=m;J[m+12>>2]=a;N[m+8>>2]=b;a=0;c=ga-1120|0;ga=c;j=42;f=J[m+12>>2];e=J[f+44>>2];e=ia[J[J[e>>2]+84>>2]](e)|0;if((e|0)>0){while(1){d=J[f+44>>2];ia[J[J[d>>2]+88>>2]](d,a,c+128|0);Rl();h=J[c+140>>2];d=j<<4;g=d+29864|0;J[g>>2]=J[c+136>>2];J[g+4>>2]=h;g=J[c+132>>2];d=d+29856|0;J[d>>2]=J[c+128>>2];J[d+4>>2]=g;j=j+1|0;a=a+1|0;if((e|0)!=(a|0)){continue}break}}a=0;while(1){e=J[f+44>>2];Rl();d=a<<4;ia[J[J[e>>2]+64>>2]](c,e,d+29856|0);e=d+(c+128|0)|0;d=J[c+12>>2];J[e+8>>2]=J[c+8>>2];J[e+12>>2]=d;d=J[c+4>>2];J[e>>2]=J[c>>2];J[e+4>>2]=d;a=a+1|0;if((j|0)!=(a|0)){continue}break}J[c+116>>2]=4096;J[c+120>>2]=4096;J[c+108>>2]=16;J[c+112>>2]=981668463;J[c+100>>2]=j;J[c+96>>2]=1;J[c+104>>2]=c+128;H[c+92|0]=1;J[c+88>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;J[c+68>>2]=0;H[c+72|0]=1;J[c+60>>2]=0;J[c+64>>2]=0;J[c+20>>2]=0;H[c+24|0]=1;H[c+52|0]=1;J[c+12>>2]=0;J[c+16>>2]=0;J[c+48>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+28>>2]=0;J[c+32>>2]=0;J[c+4>>2]=0;H[c|0]=1;p=Vj(c+56|0,c+96|0,c);if((p|0)!=1){e=J[c+4>>2];a=e;h=J[f+4>>2];if((a|0)>(h|0)){if((e|0)>J[f+8>>2]){a:{if(!e){j=0;break a}J[8369]=J[8369]+1;j=ia[J[6782]](e<<4,16)|0;h=J[f+4>>2]}b:{if((h|0)<=0){break b}a=0;if((h|0)!=1){k=h&-2;while(1){g=a<<4;i=g+j|0;d=g+J[f+12>>2]|0;n=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=n;n=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=n;d=g|16;g=d+j|0;d=d+J[f+12>>2]|0;i=J[d+4>>2];J[g>>2]=J[d>>2];J[g+4>>2]=i;i=J[d+12>>2];J[g+8>>2]=J[d+8>>2];J[g+12>>2]=i;a=a+2|0;l=l+2|0;if((k|0)!=(l|0)){continue}break}}if(!(h&1)){break b}a=a<<4;d=a+j|0;a=a+J[f+12>>2]|0;g=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=g;g=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=g}a=J[f+12>>2];if(!(a?!a|!K[f+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[f+12>>2]=j;H[f+16|0]=1;J[f+8>>2]=e}a=J[c+4>>2]}J[f+4>>2]=e;if((a|0)>0){a=0;while(1){e=a<<4;d=e+J[f+12>>2]|0;e=e+J[c+20>>2]|0;g=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=g;g=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=g;a=a+1|0;if((a|0)<J[c+4>>2]){continue}break}}e=J[c+32>>2];J[f+40>>2]=e;a=e;d=J[f+24>>2];if((a|0)>(d|0)){c:{if((e|0)<=J[f+28>>2]){h=J[f+32>>2];break c}d:{if(!e){h=0;a=d;break d}J[8369]=J[8369]+1;h=ia[J[6782]](e<<2,16)|0;a=J[f+24>>2]}i=J[f+32>>2];e:{g=a;if((a|0)>0){j=0;a=0;if(g-1>>>0>=3){n=g&-4;l=0;while(1){k=a<<2;J[k+h>>2]=J[i+k>>2];o=k|4;J[o+h>>2]=J[i+o>>2];o=k|8;J[o+h>>2]=J[i+o>>2];k=k|12;J[k+h>>2]=J[i+k>>2];a=a+4|0;l=l+4|0;if((n|0)!=(l|0)){continue}break}}g=g&3;if(!g){break e}while(1){l=a<<2;J[l+h>>2]=J[i+l>>2];a=a+1|0;j=j+1|0;if((g|0)!=(j|0)){continue}break}break e}if(i){break e}J[f+32>>2]=h;J[f+28>>2]=e;H[f+36|0]=1;break c}if(i?K[f+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](i)}J[f+32>>2]=h;H[f+36|0]=1;J[f+28>>2]=e}qa((d<<2)+h|0,0,e-d<<2);a=J[f+40>>2]}J[f+24>>2]=e;if((a|0)>0){e=J[f+32>>2];a=0;d=J[c+48>>2];while(1){g=a<<2;J[g+e>>2]=J[d+g>>2];a=a+1|0;if((a|0)<J[f+40>>2]){continue}break}}Uj(c)}a=J[c+48>>2];if(!(a?!a|!K[c+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+48>>2]=0;H[c+52|0]=1;J[c+40>>2]=0;J[c+44>>2]=0;a=J[c+20>>2];if(!(a?!a|!K[c+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}a=J[c+88>>2];if(!(a?!a|!K[c+92|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[c+88>>2]=0;H[c+92|0]=1;J[c+80>>2]=0;J[c+84>>2]=0;a=J[c+68>>2];if(!(a?!a|!K[c+72|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=c+1120|0;ga=m+16|0;return(p|0)!=1|0}function Ke(a,b,c,d){var e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=0;e=ga-672|0;ga=e;g=e+456|0;J[g+4>>2]=35;J[g+8>>2]=0;J[g>>2]=14268;J[g+44>>2]=1025758986;J[g+20>>2]=1065353216;J[g+24>>2]=0;J[g+12>>2]=1065353216;J[g+16>>2]=1065353216;J[g>>2]=13984;N[e+500>>2]=0;N[e+484>>2]=0;J[e+460>>2]=8;J[e+456>>2]=16132;J[e+404>>2]=0;J[e+408>>2]=0;J[e+416>>2]=0;J[e+420>>2]=0;J[e+412>>2]=1065353216;J[e+424>>2]=0;J[e+428>>2]=0;J[e+432>>2]=1065353216;J[e+436>>2]=0;J[e+396>>2]=0;J[e+400>>2]=0;J[e+392>>2]=1065353216;n=J[a+12>>2];J[e+448>>2]=J[a+8>>2];J[e+452>>2]=n;n=J[a+4>>2];J[e+440>>2]=J[a>>2];J[e+444>>2]=n;a=e+512|0;Gg(b,c,g,e+392|0,d,a,0);J[e+144>>2]=0;J[e+148>>2]=0;J[e+136>>2]=0;J[e+140>>2]=0;J[e+372>>2]=0;J[e+376>>2]=0;J[e+384>>2]=2;J[e+152>>2]=0;J[e+664>>2]=1065353216;J[e+668>>2]=0;J[e+656>>2]=1065353216;J[e+660>>2]=1065353216;f=Q(3.4028234663852886e38);a:{b:{c:{switch(Fg(e+8|0,a,e+656|0)|0){case 0:g=J[e+380>>2];if(!J[g+32>>2]){f=Q(0);break b}a=0;f=Q(0);while(1){A=a<<2;n=A+g|0;h=N[n+16>>2];g=J[e+632>>2];u=e+656|0;B=J[e+636>>2];C=J[e+512>>2]+(B>>1)|0;n=J[n>>2];if(B&1){g=J[g+J[C>>2]>>2]}ia[g|0](u,C,n);u=J[e+636>>2];n=J[e+516>>2]+(u>>1)|0;r=Q(h*N[e+664>>2]);s=Q(h*N[e+660>>2]);t=Q(h*N[e+656>>2]);g=J[J[e+380>>2]+A>>2];k=Q(-N[g+8>>2]);o=Q(-N[g+4>>2]);l=Q(-N[g>>2]);g=J[e+632>>2];g=u&1?J[J[n>>2]+g>>2]:g;j=Q(j+r);i=Q(i+s);m=Q(m+t);J[e+652>>2]=0;N[e+648>>2]=Q(N[e+560>>2]*k)+Q(Q(N[e+552>>2]*l)+Q(N[e+556>>2]*o));N[e+644>>2]=Q(N[e+544>>2]*k)+Q(Q(N[e+536>>2]*l)+Q(N[e+540>>2]*o));N[e+640>>2]=Q(N[e+528>>2]*k)+Q(Q(N[e+520>>2]*l)+Q(N[e+524>>2]*o));ia[g|0](e+656|0,n,e+640|0);k=N[e+664>>2];o=N[e+656>>2];l=N[e+660>>2];p=Q(p+Q(h*Q(Q(Q(k*N[e+608>>2])+Q(Q(o*N[e+600>>2])+Q(l*N[e+604>>2])))+N[e+624>>2])));q=Q(q+Q(h*Q(Q(Q(k*N[e+592>>2])+Q(Q(o*N[e+584>>2])+Q(l*N[e+588>>2])))+N[e+620>>2])));f=Q(f+Q(h*Q(Q(Q(k*N[e+576>>2])+Q(Q(o*N[e+568>>2])+Q(l*N[e+572>>2])))+N[e+616>>2])));a=a+1|0;g=J[e+380>>2];if(a>>>0<M[g+32>>2]){continue}break};break b;case 1:break c;default:break a}}if(!Eg(b,c,e+456|0,e+392|0,e+136|0,d,1)){break a}f=Q(N[d+12>>2]-N[d+28>>2]);h=Q(N[d+4>>2]-N[d+20>>2]);j=Q(N[d+8>>2]-N[d+24>>2]);i=Q(Y(Q(Q(f*f)+Q(Q(h*h)+Q(j*j)))));if(i>=Q(1.1920928955078125e-7)){J[d+48>>2]=0;k=f;f=Q(Q(1)/i);N[d+44>>2]=k*f;N[d+40>>2]=j*f;N[d+36>>2]=h*f}f=Q(-i);break a}h=N[c+52>>2];k=N[c+24>>2];o=N[c+20>>2];l=N[c+56>>2];r=N[c+40>>2];s=N[c+36>>2];t=N[c+16>>2];w=N[c+32>>2];v=N[c+48>>2];x=N[c+8>>2];y=N[c>>2];z=N[c+4>>2];J[d+16>>2]=0;v=Q(v+Q(Q(j*x)+Q(Q(m*y)+Q(i*z))));N[d+4>>2]=v;l=Q(l+Q(Q(j*r)+Q(Q(m*w)+Q(i*s))));N[d+12>>2]=l;i=Q(h+Q(Q(j*k)+Q(Q(m*t)+Q(i*o))));N[d+8>>2]=i;h=N[c+52>>2];j=N[c+24>>2];m=N[c+20>>2];k=N[c+56>>2];o=N[c+40>>2];r=N[c+36>>2];s=N[c+48>>2];t=N[c+8>>2];w=N[c>>2];x=N[c+4>>2];y=N[c+16>>2];z=N[c+32>>2];J[d+32>>2]=0;k=Q(k+Q(Q(p*o)+Q(Q(f*z)+Q(q*r))));N[d+28>>2]=k;m=Q(h+Q(Q(p*j)+Q(Q(f*y)+Q(q*m))));N[d+24>>2]=m;f=Q(s+Q(Q(p*t)+Q(Q(f*w)+Q(q*x))));N[d+20>>2]=f;p=Dc(b);q=Dc(e+456|0);J[d+48>>2]=0;h=Q(k-l);j=Q(f-v);i=Q(m-i);m=Q(Y(Q(Q(h*h)+Q(Q(j*j)+Q(i*i)))));f=Q(Q(1)/m);h=Q(h*f);N[d+44>>2]=h;i=Q(i*f);N[d+40>>2]=i;j=Q(j*f);N[d+36>>2]=j;f=Q(p+q);N[d+4>>2]=Q(f*j)+N[d+4>>2];N[d+8>>2]=Q(f*i)+N[d+8>>2];N[d+12>>2]=Q(f*h)+N[d+12>>2];f=Q(m-f)}ga=e+672|0;return f}function ZC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=ga-32|0;ga=e;d=ia[J[J[a>>2]+28>>2]](a)|0;J[b>>2]=0;J[b+20>>2]=d;if(d){q=ia[J[J[c>>2]+16>>2]](c,32,d)|0;l=J[q+8>>2];J[b>>2]=ia[J[J[c>>2]+28>>2]](c,l);r=ia[J[J[a>>2]+28>>2]](a)|0;if((r|0)>0){while(1){ia[J[J[a>>2]+16>>2]](a,e+28|0,e+4|0,e+16|0,e+8|0,e+24|0,e+20|0,e,e+12|0,p);d=J[e>>2];J[l+24>>2]=d;f=J[e+4>>2];J[l>>2]=0;J[l+4>>2]=0;J[l+28>>2]=f;J[l+8>>2]=0;J[l+12>>2]=0;J[l+16>>2]=0;J[l+20>>2]=0;a:{b:{switch(J[e+12>>2]-2|0){case 0:if(!d){break a}f=ia[J[J[c>>2]+16>>2]](c,4,P(d,3))|0;k=J[f+8>>2];J[l+8>>2]=ia[J[J[c>>2]+28>>2]](c,k);if(J[e>>2]>0){d=0;m=J[e+24>>2];while(1){i=k+P(d,12)|0;j=m+P(J[e+20>>2],d)|0;J[i>>2]=J[j>>2];J[i+4>>2]=J[j+4>>2];J[i+8>>2]=J[j+8>>2];d=d+1|0;if((d|0)<J[e>>2]){continue}break}}ia[J[J[c>>2]+20>>2]](c,f,3211,1497453121,J[f+8>>2]);break a;case 1:if(!d){break a}n=ia[J[J[c>>2]+16>>2]](c,8,d)|0;i=J[n+8>>2];J[l+12>>2]=ia[J[J[c>>2]+28>>2]](c,i);j=J[e>>2];c:{if((j|0)<=0){break c}d=0;k=J[e+20>>2];m=J[e+24>>2];if((j|0)!=1){o=j&-2;f=0;while(1){h=i+(d<<3)|0;g=m+P(d,k)|0;I[h>>1]=L[g>>1];I[h+2>>1]=L[g+2>>1];I[h+4>>1]=L[g+4>>1];g=d|1;h=i+(g<<3)|0;g=m+P(g,k)|0;I[h>>1]=L[g>>1];I[h+2>>1]=L[g+2>>1];I[h+4>>1]=L[g+4>>1];d=d+2|0;f=f+2|0;if((o|0)!=(f|0)){continue}break}}if(!(j&1)){break c}f=i+(d<<3)|0;d=m+P(d,k)|0;I[f>>1]=L[d>>1];I[f+2>>1]=L[d+2>>1];I[f+4>>1]=L[d+4>>1]}ia[J[J[c>>2]+20>>2]](c,n,3372,1497453121,J[n+8>>2]);break a;case 3:break b;default:break a}}if(!d){break a}f=ia[J[J[c>>2]+16>>2]](c,4,d)|0;k=J[f+8>>2];J[l+16>>2]=ia[J[J[c>>2]+28>>2]](c,k);d=0;if(J[e>>2]>0){while(1){i=k+(d<<2)|0;j=J[e+24>>2]+P(J[e+20>>2],d)|0;H[i|0]=K[j|0];H[i+1|0]=K[j+1|0];H[i+2|0]=K[j+2|0];d=d+1|0;if((d|0)<J[e>>2]){continue}break}}ia[J[J[c>>2]+20>>2]](c,f,3399,1497453121,J[f+8>>2])}d:{e:{switch(J[e+16>>2]){case 0:d=J[e+4>>2];if(!d){break d}n=ia[J[J[c>>2]+16>>2]](c,16,d)|0;i=J[n+8>>2];J[l>>2]=ia[J[J[c>>2]+28>>2]](c,i);j=J[e+4>>2];f:{if((j|0)<=0){break f}d=0;k=J[e+8>>2];m=J[e+28>>2];if((j|0)!=1){o=j&-2;f=0;while(1){h=i+(d<<4)|0;g=m+P(d,k)|0;N[h>>2]=N[g>>2];N[h+4>>2]=N[g+4>>2];N[h+8>>2]=N[g+8>>2];g=d|1;h=i+(g<<4)|0;g=m+P(g,k)|0;N[h>>2]=N[g>>2];N[h+4>>2]=N[g+4>>2];N[h+8>>2]=N[g+8>>2];d=d+2|0;f=f+2|0;if((o|0)!=(f|0)){continue}break}}if(!(j&1)){break f}f=i+(d<<4)|0;d=m+P(d,k)|0;N[f>>2]=N[d>>2];N[f+4>>2]=N[d+4>>2];N[f+8>>2]=N[d+8>>2]}ia[J[J[c>>2]+20>>2]](c,n,3626,1497453121,J[n+8>>2]);break d;case 1:break e;default:break d}}d=J[e+4>>2];if(!d){break d}n=ia[J[J[c>>2]+16>>2]](c,32,d)|0;i=J[n+8>>2];J[l+4>>2]=ia[J[J[c>>2]+28>>2]](c,i);j=J[e+4>>2];g:{if((j|0)<=0){break g}d=0;k=J[e+8>>2];m=J[e+28>>2];if((j|0)!=1){o=j&-2;f=0;while(1){h=i+(d<<5)|0;g=m+P(d,k)|0;O[h>>3]=O[g>>3];O[h+8>>3]=O[g+8>>3];O[h+16>>3]=O[g+16>>3];g=d|1;h=i+(g<<5)|0;g=m+P(g,k)|0;O[h>>3]=O[g>>3];O[h+8>>3]=O[g+8>>3];O[h+16>>3]=O[g+16>>3];d=d+2|0;f=f+2|0;if((o|0)!=(f|0)){continue}break}}if(!(j&1)){break g}f=i+(d<<5)|0;d=m+P(d,k)|0;O[f>>3]=O[d>>3];O[f+8>>3]=O[d+8>>3];O[f+16>>3]=O[d+16>>3]}ia[J[J[c>>2]+20>>2]](c,n,3998,1497453121,J[n+8>>2])}ia[J[J[a>>2]+24>>2]](a,p);l=l+32|0;p=p+1|0;if((r|0)!=(p|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,q,3226,1497453121,J[q+8>>2])}N[b+4>>2]=N[a+4>>2];N[b+8>>2]=N[a+8>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];ga=e+32|0;return 4081}function vo(a,b,c,d,e,f){a=a|0;b=Q(b);c=Q(c);d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;g=ga-752|0;ga=g;J[g+748>>2]=a;N[g+744>>2]=b;N[g+740>>2]=c;J[g+736>>2]=d;J[g+732>>2]=e;J[g+728>>2]=f;a=J[g+748>>2];J[g+724>>2]=30;d=ga-16|0;J[d+12>>2]=J[g+732>>2];d=J[d+12>>2]+48|0;e=J[d+4>>2];J[g+704>>2]=J[d>>2];J[g+708>>2]=e;e=J[d+12>>2];J[g+712>>2]=J[d+8>>2];J[g+716>>2]=e;N[g+684>>2]=0;N[g+680>>2]=0;N[g+676>>2]=0;d=g+688|0;na(d,g+684|0,g+680|0,g+676|0);N[g+672>>2]=N[g+740>>2]*Q(.5);b=N[g+672>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+736>>2]<<2)>>2]=b;N[g+652>>2]=0;N[g+648>>2]=0;N[g+644>>2]=0;d=g+656|0;na(d,g+652|0,g+648|0,g+644|0);b=N[g+744>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+((J[g+736>>2]+1|0)%3<<2)>>2]=b;N[g+620>>2]=0;N[g+616>>2]=0;N[g+612>>2]=0;d=g+624|0;na(d,g+620|0,g+616|0,g+612|0);b=N[g+744>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+((J[g+736>>2]+2|0)%3<<2)>>2]=b;N[g+588>>2]=0;N[g+584>>2]=0;N[g+580>>2]=0;d=g+592|0;na(d,g+588|0,g+584|0,g+580|0);b=Q(-N[g+672>>2]);e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+736>>2]<<2)>>2]=b;J[g+576>>2]=0;while(1){if(J[g+576>>2]<360){b=Q(Sa(Q(Q(J[g+576>>2])*Q(.01745329238474369)))*N[g+744>>2]);e=ga-16|0;d=g+592|0;J[e+12>>2]=d;N[J[e+12>>2]+((J[g+736>>2]+1|0)%3<<2)>>2]=b;b=Q(Ta(Q(Q(J[g+576>>2])*Q(.01745329238474369)))*N[g+744>>2]);e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+((J[g+736>>2]+2|0)%3<<2)>>2]=b;e=ga-16|0;J[e+12>>2]=J[g+732>>2];f=g+544|0;wa(f,J[e+12>>2],g+688|0);e=g+560|0;h=g+704|0;va(e,h,f);f=ga-16|0;J[f+12>>2]=J[g+732>>2];i=g+512|0;wa(i,J[f+12>>2],d);d=g+528|0;va(d,h,i);ia[J[J[a>>2]+8>>2]](a,e,d,J[g+728>>2]);J[g+576>>2]=J[g+724>>2]+J[g+576>>2];continue}break}d=ga-16|0;J[d+12>>2]=J[g+732>>2];f=g+480|0;e=J[d+12>>2];d=g+688|0;wa(f,e,d);h=g+496|0;e=g+704|0;va(h,e,f);f=ga-16|0;J[f+12>>2]=J[g+732>>2];f=J[f+12>>2];i=g+416|0;$b(i,d);k=g+432|0;j=i;i=g+656|0;va(k,j,i);j=g+448|0;wa(j,f,k);f=g+464|0;va(f,e,j);ia[J[J[a>>2]+8>>2]](a,h,f,J[g+728>>2]);f=ga-16|0;J[f+12>>2]=J[g+732>>2];h=g+384|0;wa(h,J[f+12>>2],d);f=g+400|0;va(f,e,h);h=ga-16|0;J[h+12>>2]=J[g+732>>2];h=J[h+12>>2];k=g+320|0;$b(k,d);j=g+336|0;Ma(j,k,i);i=g+352|0;wa(i,h,j);h=g+368|0;va(h,e,i);ia[J[J[a>>2]+8>>2]](a,f,h,J[g+728>>2]);f=ga-16|0;J[f+12>>2]=J[g+732>>2];h=g+288|0;wa(h,J[f+12>>2],d);f=g+304|0;va(f,e,h);h=ga-16|0;J[h+12>>2]=J[g+732>>2];h=J[h+12>>2];i=g+224|0;$b(i,d);k=g+240|0;j=i;i=g+624|0;va(k,j,i);j=g+256|0;wa(j,h,k);h=g+272|0;va(h,e,j);ia[J[J[a>>2]+8>>2]](a,f,h,J[g+728>>2]);f=ga-16|0;J[f+12>>2]=J[g+732>>2];h=g+192|0;wa(h,J[f+12>>2],d);f=g+208|0;va(f,e,h);h=ga-16|0;J[h+12>>2]=J[g+732>>2];h=J[h+12>>2];k=g+128|0;$b(k,d);j=g+144|0;Ma(j,k,i);i=g+160|0;wa(i,h,j);h=g+176|0;va(h,e,i);ia[J[J[a>>2]+8>>2]](a,f,h,J[g+728>>2]);N[g+108>>2]=0;N[g+104>>2]=0;N[g+100>>2]=0;f=g+112|0;na(f,g+108|0,g+104|0,g+100|0);h=ga-16|0;J[h+12>>2]=f;N[J[h+12>>2]+(J[g+736>>2]<<2)>>2]=1;N[g+76>>2]=0;N[g+72>>2]=0;N[g+68>>2]=0;h=g+80|0;na(h,g+76|0,g+72|0,g+68|0);i=ga-16|0;J[i+12>>2]=h;N[J[i+12>>2]+((J[g+736>>2]+1|0)%3<<2)>>2]=1;i=ga-16|0;J[i+12>>2]=J[g+732>>2];k=g+32|0;wa(k,J[i+12>>2],d);d=g+48|0;Ma(d,e,k);e=ga-16|0;J[e+12>>2]=J[g+732>>2];i=g+16|0;wa(i,J[e+12>>2],f);e=ga-16|0;J[e+12>>2]=J[g+732>>2];wa(g,J[e+12>>2],h);b=N[g+744>>2];ia[J[J[a>>2]+60>>2]](a,d,i,g,b,b,Q(0),Q(6.2831854820251465),J[g+728>>2],0,Q(10));ga=g+752|0}\nfunction VF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0,f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0;e=ga-192|0;ga=e;a:{if(N[J[a+4>>2]+752>>2]<d){break a}o=N[c+8>>2];k=Q(Q(N[b+8>>2]*d)+o);r=N[c+4>>2];m=Q(Q(N[b+4>>2]*d)+r);s=N[c>>2];l=Q(Q(N[b>>2]*d)+s);h=J[J[a+8>>2]+8>>2];n=J[a+4>>2];f=J[n+740>>2];p=(h|0)==(f|0);b:{if(!p){f=J[J[a+12>>2]+8>>2];g=Q(k-N[f+60>>2]);i=Q(l-N[f+52>>2]);j=Q(m-N[f+56>>2]);t=Q(Q(N[f+44>>2]*g)+Q(Q(N[f+12>>2]*i)+Q(j*N[f+28>>2])));u=Q(Q(N[f+40>>2]*g)+Q(Q(N[f+8>>2]*i)+Q(j*N[f+24>>2])));g=Q(Q(N[f+36>>2]*g)+Q(Q(N[f+4>>2]*i)+Q(j*N[f+20>>2])));break b}g=Q(k-N[f+60>>2]);i=Q(l-N[f+52>>2]);j=Q(m-N[f+56>>2]);t=Q(Q(N[f+44>>2]*g)+Q(Q(N[f+12>>2]*i)+Q(j*N[f+28>>2])));u=Q(Q(N[f+40>>2]*g)+Q(Q(N[f+8>>2]*i)+Q(j*N[f+24>>2])));h=J[J[a+12>>2]+8>>2];g=Q(Q(N[f+36>>2]*g)+Q(Q(N[f+4>>2]*i)+Q(j*N[f+20>>2])))}v=N[h+20>>2];w=N[h+36>>2];x=N[h+40>>2];y=N[h+8>>2];z=N[h+24>>2];i=N[h+44>>2];j=N[h+60>>2];A=N[h+12>>2];B=N[h+52>>2];C=N[h+28>>2];D=N[h+56>>2];E=N[h+4>>2];J[e+36>>2]=0;q=i;i=Q(o-j);j=Q(s-B);o=Q(r-D);N[e+32>>2]=Q(q*i)+Q(Q(A*j)+Q(C*o));N[e+28>>2]=Q(x*i)+Q(Q(y*j)+Q(o*z));J[e+20>>2]=0;N[e+16>>2]=t;N[e+12>>2]=u;N[e+8>>2]=g;N[e+24>>2]=Q(w*i)+Q(Q(E*j)+Q(o*v));h=J[b+12>>2];J[e+80>>2]=J[b+8>>2];J[e+84>>2]=h;h=J[b>>2];b=J[b+4>>2];J[e+136>>2]=0;J[e+140>>2]=0;J[e+144>>2]=0;J[e+148>>2]=0;J[e+152>>2]=0;J[e+156>>2]=0;N[e+60>>2]=m;N[e- -64>>2]=k;J[e+68>>2]=0;J[e+72>>2]=h;J[e+76>>2]=b;J[e+128>>2]=0;J[e+132>>2]=0;H[e+124|0]=0;J[e+120>>2]=0;J[e+100>>2]=0;J[e+92>>2]=0;J[e+96>>2]=0;N[e+88>>2]=d;N[e+56>>2]=l;b=J[c+12>>2];J[e+48>>2]=J[c+8>>2];J[e+52>>2]=b;b=J[c+4>>2];J[e+40>>2]=J[c>>2];J[e+44>>2]=b;f=J[n+748>>2];c:{if((f|0)<=0){h=-1;break c}d=N[e+16>>2];m=N[e+12>>2];l=N[e+8>>2];k=N[n+752>>2];k=Q(k*k);b=0;h=-1;while(1){c=n+P(b,184)|0;g=Q(N[c+12>>2]-d);i=Q(g*g);g=Q(N[c+4>>2]-l);q=Q(g*g);g=Q(N[c+8>>2]-m);g=Q(i+Q(q+Q(g*g)));c=g<k;k=c?g:k;h=c?b:h;b=b+1|0;if((f|0)!=(b|0)){continue}break}}b=J[J[a+8>>2]+8>>2];c=J[J[a+12>>2]+8>>2];N[e+92>>2]=T(Q(U(Q(N[b+224>>2]*N[c+224>>2]),Q(-10))),Q(10));N[e+100>>2]=N[b+228>>2]*N[c+228>>2];N[e+96>>2]=T(Q(U(Q(N[b+232>>2]*N[c+232>>2]),Q(-10))),Q(10));d=N[e+80>>2];d:{if(Q(R(d))>Q(.7071067690849304)){l=N[e+76>>2];k=Q(Q(l*l)+Q(d*d));m=Q(Q(1)/Q(Y(k)));g=Q(k*m);i=Q(m*Q(-d));j=N[e+72>>2];k=Q(i*j);d=Q(l*m);l=Q(d*Q(-j));j=Q(0);break d}g=N[e+72>>2];l=N[e+76>>2];k=Q(Q(g*g)+Q(l*l));m=Q(Q(1)/Q(Y(k)));k=Q(k*m);j=Q(m*Q(-l));l=Q(d*j);i=Q(g*m);g=Q(i*Q(-d));d=Q(0)}N[e+184>>2]=k;N[e+180>>2]=l;N[e+168>>2]=d;N[e+164>>2]=i;N[e+176>>2]=g;N[e+160>>2]=j;e:{if(!p){c=a+16|0;f=a+20|0;n=a+28|0;b=a+24|0;break e}c=a+20|0;f=a+16|0;n=a+24|0;b=a+28|0}f=J[f>>2];c=J[c>>2];n=J[n>>2];J[e+116>>2]=J[b>>2];J[e+112>>2]=n;J[e+108>>2]=c;J[e+104>>2]=f;b=J[a+4>>2];f:{if((h|0)>=0){b=b+P(h,184)|0;c=J[b+116>>2];f=J[b+124>>2];n=J[b+128>>2];d=N[b+132>>2];F=J[b+152>>2];sa(b+4|0,e+8|0,184);J[b+152>>2]=F;N[b+132>>2]=d;J[b+124>>2]=f;J[b+128>>2]=n;J[b+116>>2]=c;break f}h=ul(b,e+8|0)}f=J[7403];if(!f){break a}c=J[a+8>>2];b=J[a+12>>2];if(!(K[J[b+8>>2]+204|0]&8?1:K[J[c+8>>2]+204|0]&8)){break a}ia[f|0]((J[a+4>>2]+P(h,184)|0)+4|0,p?c:b,J[e+104>>2],J[e+112>>2],p?b:c,J[e+108>>2],J[e+116>>2])|0}ga=e+192|0}function yz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=0,o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0);d=ga-80|0;ga=d;l=a+4|0;m=a+16|0;a:{b:{e=J[a+8>>2];if(!e){e=J[l>>2];if(e){break b}b=Q(0);break a}b=N[e+332>>2];h=N[a+172>>2];f=N[a+168>>2];g=N[e+336>>2];i=Q(Q(b*h)-Q(f*g));j=N[e+328>>2];k=N[a+164>>2];f=Q(Q(j*f)-Q(k*b));g=Q(Q(g*k)-Q(h*j));h=N[e+316>>2];j=N[e+312>>2];b=N[e+320>>2];break a}b=N[e+336>>2];h=N[a+172>>2];f=N[a+168>>2];g=N[e+340>>2];i=Q(Q(b*h)-Q(f*g));j=N[e+332>>2];k=N[a+164>>2];f=Q(Q(j*f)-Q(k*b));g=Q(Q(g*k)-Q(h*j));h=N[e+320>>2];j=N[e+316>>2];b=N[e+324>>2]}r=Q(b+f);s=Q(h+g);t=Q(j+i);c:{d:{e=J[a+20>>2];if(!e){e=J[m>>2];if(e){break d}h=Q(0);j=Q(0);i=Q(0);g=Q(0);f=Q(0);b=Q(0);break c}b=N[e+332>>2];h=N[a+188>>2];f=N[a+184>>2];g=N[e+336>>2];i=Q(Q(b*h)-Q(f*g));j=N[e+328>>2];k=N[a+180>>2];f=Q(Q(j*f)-Q(k*b));g=Q(Q(g*k)-Q(h*j));h=N[e+316>>2];j=N[e+312>>2];b=N[e+320>>2];break c}b=N[e+336>>2];h=N[a+188>>2];f=N[a+184>>2];g=N[e+340>>2];i=Q(Q(b*h)-Q(f*g));j=N[e+332>>2];k=N[a+180>>2];f=Q(Q(j*f)-Q(k*b));g=Q(Q(g*k)-Q(h*j));h=N[e+320>>2];j=N[e+316>>2];b=N[e+324>>2]}k=N[a+200>>2];o=N[a+204>>2];p=N[a+196>>2];e=d- -64|0;J[e>>2]=0;J[e+4>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;H[d+72|0]=1;e=J[a+84>>2];J[d+48>>2]=J[a+80>>2];J[d+52>>2]=e;e=J[a+76>>2];J[d+40>>2]=J[a+72>>2];J[d+44>>2]=e;b=Q(r-Q(b+f));j=Q(t-Q(j+i));h=Q(s-Q(h+g));i=Q(Q(o*b)+Q(Q(p*j)+Q(k*h)));e:{if(!(i<Q(0))){b=N[d+48>>2];h=N[d+44>>2];i=N[d+40>>2];break e}f=Q(o*i);g=f;b=Q(b-f);f=N[a+212>>2];b=Q(Q(g+Q(b*f))+N[d+48>>2]);g=Q(k*i);h=Q(Q(g+Q(Q(h-g)*f))+N[d+44>>2]);i=Q(p*i);i=Q(N[d+40>>2]+Q(i+Q(Q(j-i)*f)))}e=a+164|0;q=a+180|0;j=N[a+112>>2];k=N[a+108>>2];g=N[a+128>>2];o=N[a+120>>2];p=N[a+124>>2];f=N[a+144>>2];r=N[a+136>>2];s=N[a+140>>2];t=N[a+104>>2];J[d+52>>2]=0;f=Q(Q(Q(f*b)+Q(Q(r*i)+Q(h*s)))*c);N[d+48>>2]=f;g=Q(Q(Q(g*b)+Q(Q(o*i)+Q(h*p)))*c);N[d+44>>2]=g;b=Q(Q(Q(j*b)+Q(Q(t*i)+Q(k*h)))*c);N[d+40>>2]=b;n=J[a+4>>2];f:{if((n|0)==J[a+16>>2]){if(b!=b|g!=g|(f!=f|N[n+368>>2]>Q(Y(Q(Q(f*f)+Q(Q(b*b)+Q(g*g))))))){break f}c=N[n+372>>2];J[d+28>>2]=0;i=Q(c*Q(-0));N[d+24>>2]=i;N[d+20>>2]=i;a=J[d+72>>2];J[d+32>>2]=a;J[d+12>>2]=0;N[d+16>>2]=i;N[d+8>>2]=c*Q(-f);N[d+4>>2]=c*Q(-g);N[d>>2]=c*Q(-b);if(a&1){re(l,d,e);a=K[d+32|0]}if(a&2){zc(l,d+16|0,e)}b=N[J[l>>2]+372>>2];a=J[d+52>>2];J[d+8>>2]=J[d+48>>2];J[d+12>>2]=a;a=J[d+60>>2];J[d+16>>2]=J[d+56>>2];J[d+20>>2]=a;J[d+32>>2]=J[d+72>>2];a=d- -64|0;l=J[a+4>>2];J[d+24>>2]=J[a>>2];J[d+28>>2]=l;N[d+8>>2]=b*N[d+8>>2];N[d+16>>2]=b*N[d+16>>2];a=J[d+44>>2];J[d>>2]=J[d+40>>2];J[d+4>>2]=a;N[d>>2]=b*N[d>>2];N[d+4>>2]=b*N[d+4>>2];N[d+20>>2]=b*N[d+20>>2];N[d+24>>2]=b*N[d+24>>2];a=K[d+32|0];if(a&1){re(m,d,q);a=K[d+32|0]}if(!(a&2)){break f}zc(m,d+16|0,q);break f}a=J[d+52>>2];J[d+8>>2]=J[d+48>>2];J[d+12>>2]=a;a=J[d+60>>2];J[d+16>>2]=J[d+56>>2];J[d+20>>2]=a;a=d- -64|0;n=J[a+4>>2];J[d+24>>2]=J[a>>2];J[d+28>>2]=n;J[d+32>>2]=J[d+72>>2];N[d+8>>2]=-N[d+8>>2];N[d+16>>2]=-N[d+16>>2];a=J[d+44>>2];J[d>>2]=J[d+40>>2];J[d+4>>2]=a;N[d>>2]=-N[d>>2];N[d+4>>2]=-N[d+4>>2];J[d+12>>2]=0;b=N[d+20>>2];c=N[d+24>>2];J[d+28>>2]=0;N[d+24>>2]=-c;N[d+20>>2]=-b;a=K[d+32|0];if(a&1){re(l,d,e);a=K[d+32|0]}if(a&2){zc(l,d+16|0,e)}re(m,d+40|0,q);if(!(K[d+72|0]&2)){break f}zc(m,d+56|0,q)}ga=d+80|0}function Hw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=0,o=0,p=0;l=ga-16|0;ga=l;J[l+12>>2]=a;J[l+8>>2]=b;J[l+4>>2]=c;c=ra(128);n=J[l+12>>2];o=J[l+8>>2];g=J[l+4>>2];b=0;J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;H[c+84|0]=0;J[c+76>>2]=-1082130432;J[c+80>>2]=0;J[c+68>>2]=-1082130432;J[c+72>>2]=-1082130432;J[c+60>>2]=1065353216;J[c+64>>2]=0;J[c+52>>2]=1065353216;J[c+56>>2]=1065353216;J[c>>2]=14084;H[c+104|0]=1;J[c>>2]=15264;J[c+100>>2]=0;H[c+124|0]=1;J[c+92>>2]=0;J[c+96>>2]=0;J[c+120>>2]=0;J[c+112>>2]=0;J[c+116>>2]=0;J[c+4>>2]=9;if((g|0)>0){J[8369]=J[8369]+1;a=ia[J[6782]](g<<4,16)|0;d=J[c+92>>2];a:{if((d|0)<=0){break a}if((d|0)!=1){p=d&-2;while(1){f=b<<4;i=f+a|0;e=f+J[c+100>>2]|0;k=J[e+4>>2];J[i>>2]=J[e>>2];J[i+4>>2]=k;k=J[e+12>>2];J[i+8>>2]=J[e+8>>2];J[i+12>>2]=k;e=f|16;f=e+a|0;e=e+J[c+100>>2]|0;i=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=i;i=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=i;b=b+2|0;h=h+2|0;if((p|0)!=(h|0)){continue}break}}if(!(d&1)){break a}b=b<<4;d=b+a|0;b=b+J[c+100>>2]|0;e=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=e;e=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=e}b=J[c+100>>2];if(!(b?!b|!K[c+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+100>>2]=a;H[c+104|0]=1;J[c+96>>2]=g;d=J[c+112>>2]}J[c+92>>2]=g;if((d|0)<(g|0)){b:{if(J[c+116>>2]>=(g|0)){j=J[c+120>>2];break b}if(g){J[8369]=J[8369]+1;j=ia[J[6782]](g<<2,16)|0;a=J[c+112>>2]}else{a=d}e=J[c+120>>2];c:{d:{if((a|0)>0){i=0;b=0;if(a-1>>>0>=3){p=a&-4;h=0;while(1){f=b<<2;N[f+j>>2]=N[e+f>>2];k=f|4;N[k+j>>2]=N[e+k>>2];k=f|8;N[k+j>>2]=N[e+k>>2];f=f|12;N[f+j>>2]=N[e+f>>2];b=b+4|0;h=h+4|0;if((p|0)!=(h|0)){continue}break}}a=a&3;if(!a){break d}while(1){h=b<<2;N[h+j>>2]=N[e+h>>2];b=b+1|0;i=i+1|0;if((a|0)!=(i|0)){continue}break}break d}if(e){break d}break c}if(e?K[c+124|0]:0){J[8370]=J[8370]+1;ia[J[6783]](e)}}J[c+120>>2]=j;H[c+124|0]=1;J[c+116>>2]=g}qa((d<<2)+j|0,0,g-d<<2)}J[c+112>>2]=g;e:{if((g|0)<=0){break e}b=0;if((g|0)!=1){e=g&-2;j=0;while(1){a=b<<4;d=a+J[c+100>>2]|0;a=a+n|0;h=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=h;h=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=h;a=b<<2;N[a+J[c+120>>2]>>2]=N[a+o>>2];h=b|1;a=h<<4;d=a+J[c+100>>2]|0;a=a+n|0;f=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=f;f=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=f;a=h<<2;N[a+J[c+120>>2]>>2]=N[a+o>>2];b=b+2|0;j=j+2|0;if((e|0)!=(j|0)){continue}break}}if(!(g&1)){break e}a=b<<4;d=a+J[c+100>>2]|0;a=a+n|0;g=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=g;g=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=g;a=b<<2;N[a+J[c+120>>2]>>2]=N[a+o>>2]}a=ga-96|0;ga=a;H[c+84|0]=1;if(!K[29728]){J[7409]=0;J[7410]=0;J[7408]=1065353216;J[7411]=0;J[7412]=0;J[7414]=0;J[7415]=0;J[7413]=1065353216;J[7416]=0;J[7417]=0;J[7421]=0;J[7422]=0;J[7420]=-1082130432;J[7418]=1065353216;J[7419]=0;J[7423]=0;J[7424]=0;J[7426]=0;J[7427]=0;J[7425]=-1082130432;J[7428]=0;J[7429]=0;J[7430]=-1082130432;J[7431]=0;H[29728]=1}a=qa(a,0,96);ia[J[J[c>>2]+76>>2]](c,29632,a,6);m=N[c+44>>2];N[c+68>>2]=N[a>>2]+m;N[c+52>>2]=N[a+48>>2]-m;N[c+72>>2]=m+N[a+20>>2];N[c+56>>2]=N[a+68>>2]-m;N[c+76>>2]=m+N[a+40>>2];N[c+60>>2]=N[a+88>>2]-m;ga=a+96|0;ga=l+16|0;return c|0}function Ue(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);e=ga-48|0;ga=e;a:{b:{switch(J[b+4>>2]){case 8:J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;break a;case 0:d=N[b+28>>2];f=N[b+32>>2];h=N[b+36>>2];i=N[c>>2];g=N[c+4>>2];l=N[c+8>>2];J[a+12>>2]=0;N[a+8>>2]=l>=Q(0)?h:Q(-h);N[a+4>>2]=g>=Q(0)?f:Q(-f);N[a>>2]=i>=Q(0)?d:Q(-d);break a;case 1:d=N[c+8>>2];f=N[c>>2];h=N[c+4>>2];i=Q(Q(d*N[b- -64>>2])+Q(Q(f*N[b+56>>2])+Q(h*N[b+60>>2])));g=Q(Q(d*N[b+80>>2])+Q(Q(f*N[b+72>>2])+Q(h*N[b+76>>2])));c=i<g;b=(b+56|0)+((Q(Q(d*N[b+96>>2])+Q(Q(f*N[b+88>>2])+Q(h*N[b+92>>2])))>(c?g:i)?2:c)<<4)|0;c=J[b+4>>2];j=J[b>>2];d=N[b+8>>2];J[a+12>>2]=0;N[a+8>>2]=d;J[a>>2]=j;J[a+4>>2]=c;break a;case 13:k=J[b+40>>2];J[e+40>>2]=J[b+36>>2];J[e+44>>2]=k;k=J[b+32>>2];J[e+32>>2]=J[b+28>>2];J[e+36>>2]=k;N[e+16>>2]=N[c>>2];f=N[c+4>>2];N[e+20>>2]=f;d=N[c+8>>2];J[e+28>>2]=0;N[e+24>>2]=d;c=1;k=2;c:{d:{e:{b=J[b+52>>2];switch(b-1|0){case 0:break d;case 1:break e;default:break c}}k=1;d=f}c=0;j=b}n=b<<2;b=e+32|0;f=N[n+b>>2];n=b;b=c<<2;h=N[(n|b)>>2];i=N[(b|e+16)>>2];g=Q(Y(Q(Q(i*i)+Q(d*d))));f:{if(g!=Q(0)){h=Q(h/g);N[(c<<2|e)>>2]=i*h;b=j<<2;N[b+e>>2]=N[b+(e+16|0)>>2]<Q(0)?Q(-f):f;N[(k<<2)+e>>2]=d*h;break f}N[(c<<2|e)>>2]=h;b=j<<2;N[b+e>>2]=N[b+(e+16|0)>>2]<Q(0)?Q(-f):f;J[(k<<2)+e>>2]=0}d=N[e>>2];b=J[e+8>>2];J[a+4>>2]=J[e+4>>2];J[a+8>>2]=b;J[a+12>>2]=0;N[a>>2]=d;break a;case 10:k=b+28|0;j=J[b+52>>2];n=j<<2;p=N[k+n>>2];o=N[k+((j+2|0)%3<<2)>>2];d=Q(1);f=N[c+8>>2];h=N[c>>2];i=N[c+4>>2];g=Q(Q(f*f)+Q(Q(h*h)+Q(i*i)));if(!(g<Q(9999999747378752e-20))){d=Q(Q(1)/Q(Y(g)));q=Q(f*d);r=Q(i*d);d=Q(h*d)}J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;N[n+(e+32|0)>>2]=p;f=Q(-0xde0b6b000000000);h=Q(0);i=Q(0);s=Q(o*q);m=N[b+44>>2];t=Q(q*m);g=Q(Q(s+N[e+40>>2])-t);u=Q(o*d);v=Q(d*m);l=Q(Q(u+N[e+32>>2])-v);w=Q(o*r);x=Q(r*m);o=Q(Q(w+N[e+36>>2])-x);m=Q(Q(q*g)+Q(Q(d*l)+Q(r*o)));if(m>Q(-0xde0b6b000000000)){h=o;i=g;y=l;f=m}J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;N[(e+32|0)+(j<<2)>>2]=-p;g=N[e+40>>2];l=N[e+32>>2];o=N[e+36>>2];J[a+12>>2]=0;m=f;f=Q(Q(s+g)-t);p=d;d=Q(Q(u+l)-v);g=Q(Q(w+o)-x);b=m<Q(Q(q*f)+Q(Q(p*d)+Q(r*g)));N[a+8>>2]=b?f:i;N[a+4>>2]=b?g:h;N[a>>2]=b?d:y;break a;case 5:f=N[b+12>>2];h=N[b+20>>2];i=N[b+16>>2];k=J[b+92>>2];j=-1;n=J[b+96>>2];if((n|0)>0){g=Q(N[c>>2]*f);l=Q(N[c+8>>2]*h);o=Q(N[c+4>>2]*i);b=0;d=Q(-3.4028234663852886e38);while(1){c=k+(b<<4)|0;m=Q(Q(N[c+8>>2]*l)+Q(Q(N[c>>2]*g)+Q(o*N[c+4>>2])));c=m>d;d=c?m:d;j=c?b:j;b=b+1|0;if((n|0)!=(b|0)){continue}break}}b=k+(j<<4)|0;d=N[b>>2];g=N[b+4>>2];l=N[b+8>>2];J[a+12>>2]=0;N[a+8>>2]=h*l;N[a+4>>2]=i*g;N[a>>2]=f*d;break a;case 4:f=N[b+12>>2];h=N[b+20>>2];i=N[b+16>>2];k=J[b+104>>2];j=-1;n=J[b+96>>2];if((n|0)>0){g=Q(N[c>>2]*f);l=Q(N[c+8>>2]*h);o=Q(N[c+4>>2]*i);b=0;d=Q(-3.4028234663852886e38);while(1){c=k+(b<<4)|0;m=Q(Q(N[c+8>>2]*l)+Q(Q(N[c>>2]*g)+Q(o*N[c+4>>2])));c=m>d;d=c?m:d;j=c?b:j;b=b+1|0;if((n|0)!=(b|0)){continue}break}}b=k+(j<<4)|0;d=N[b>>2];g=N[b+4>>2];l=N[b+8>>2];J[a+12>>2]=0;N[a+8>>2]=h*l;N[a+4>>2]=i*g;N[a>>2]=f*d;break a;default:break b}}ia[J[J[b>>2]+68>>2]](a,b,c)}ga=e+48|0}function Pq(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);f=Q(f);g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);k=ga-32|0;ga=k;J[k+28>>2]=a;J[k+24>>2]=b;J[k+20>>2]=c;J[k+16>>2]=d;N[k+12>>2]=e;N[k+8>>2]=f;J[k+4>>2]=g;H[k+3|0]=h;l=J[k+28>>2];c=J[k+24>>2];b=J[k+20>>2];a=J[k+16>>2];n=N[k+12>>2];o=N[k+8>>2];h=H[k+3|0]&1;i=ga-288|0;ga=i;j=J[k+4>>2];m=N[j+16>>2];f=N[j+20>>2];e=N[j+12>>2];g=J[j+4>>2];d=J[j>>2];N[i+224>>2]=N[j+8>>2];J[i+216>>2]=d;J[i+220>>2]=g;N[i+212>>2]=o;N[i+208>>2]=e;N[i+204>>2]=n;d=J[c+12>>2];J[i+164>>2]=J[c+8>>2];J[i+168>>2]=d;d=J[c+4>>2];J[i+156>>2]=J[c>>2];J[i+160>>2]=d;c=J[b+12>>2];J[i+180>>2]=J[b+8>>2];J[i+184>>2]=c;c=J[b+4>>2];J[i+172>>2]=J[b>>2];J[i+176>>2]=c;b=J[a+12>>2];J[i+196>>2]=J[a+8>>2];J[i+200>>2]=b;b=J[a+4>>2];J[i+188>>2]=J[a>>2];J[i+192>>2]=b;H[i+260|0]=h;N[i+248>>2]=f;J[i+244>>2]=1036831949;J[i+236>>2]=0;J[i+240>>2]=0;N[i+228>>2]=m;J[i+252>>2]=0;J[i+256>>2]=0;J[i+232>>2]=0;h=0;g=0;d=J[l+136>>2];a:{if((d|0)!=J[l+140>>2]){break a}c=d?d<<1:1;if((c|0)<=(d|0)){break a}if(c){J[8369]=J[8369]+1;h=ia[J[6782]](P(c,284),16)|0;d=J[l+136>>2]}if((d|0)>0){while(1){a=P(g,284);j=a+J[l+144>>2]|0;b=sa(a+h|0,j,92);a=J[j+104>>2];J[b+100>>2]=J[j+100>>2];J[b+104>>2]=a;a=J[j+96>>2];J[b+92>>2]=J[j+92>>2];J[b+96>>2]=a;a=J[j+120>>2];J[b+116>>2]=J[j+116>>2];J[b+120>>2]=a;a=J[j+112>>2];J[b+108>>2]=J[j+108>>2];J[b+112>>2]=a;a=J[j+136>>2];J[b+132>>2]=J[j+132>>2];J[b+136>>2]=a;a=J[j+128>>2];J[b+124>>2]=J[j+124>>2];J[b+128>>2]=a;a=J[j+144>>2];J[b+140>>2]=J[j+140>>2];J[b+144>>2]=a;a=J[j+152>>2];J[b+148>>2]=J[j+148>>2];J[b+152>>2]=a;sa(b+156|0,j+156|0,128);g=g+1|0;if((g|0)!=(d|0)){continue}break}}a=J[l+144>>2];if(!(a?!a|!K[l+148|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[l+144>>2]=h;H[l+148|0]=1;J[l+140>>2]=c;d=J[l+136>>2]}b=sa(J[l+144>>2]+P(d,284)|0,i,92);a=J[i+104>>2];J[b+100>>2]=J[i+100>>2];J[b+104>>2]=a;a=J[i+96>>2];J[b+92>>2]=J[i+92>>2];J[b+96>>2]=a;a=J[i+120>>2];J[b+116>>2]=J[i+116>>2];J[b+120>>2]=a;a=J[i+112>>2];J[b+108>>2]=J[i+108>>2];J[b+112>>2]=a;a=J[i+128>>2];J[b+124>>2]=J[i+124>>2];J[b+128>>2]=a;a=J[i+136>>2];J[b+132>>2]=J[i+132>>2];J[b+136>>2]=a;a=J[i+152>>2];J[b+148>>2]=J[i+148>>2];J[b+152>>2]=a;a=J[i+144>>2];J[b+140>>2]=J[i+140>>2];J[b+144>>2]=a;sa(b+156|0,i+156|0,128);J[l+136>>2]=J[l+136>>2]+1;b=J[l+144>>2]+P(J[l+136>>2],284)|0;H[b-200|0]=0;a=J[l+116>>2];m=N[a+52>>2];p=N[a+12>>2];q=N[a+8>>2];f=N[a+56>>2];r=N[a+28>>2];s=N[a+20>>2];t=N[a+24>>2];e=N[a+60>>2];u=N[a+44>>2];v=N[a+36>>2];w=N[a+40>>2];x=N[a+4>>2];J[b-236>>2]=0;y=e;n=N[b-120>>2];o=N[b-128>>2];e=N[b-124>>2];N[b-240>>2]=y+Q(Q(u*n)+Q(Q(v*o)+Q(w*e)));N[b-244>>2]=f+Q(Q(n*r)+Q(Q(o*s)+Q(t*e)));N[b-248>>2]=m+Q(Q(n*p)+Q(Q(o*x)+Q(q*e)));J[b-220>>2]=0;m=N[b-104>>2];f=N[b-112>>2];e=N[b-108>>2];N[b-224>>2]=Q(u*m)+Q(Q(v*f)+Q(w*e));N[b-228>>2]=Q(r*m)+Q(Q(s*f)+Q(t*e));N[b-232>>2]=Q(p*m)+Q(Q(x*f)+Q(q*e));m=N[b-88>>2];f=N[b-96>>2];e=N[b-92>>2];J[b-204>>2]=0;N[b-208>>2]=Q(u*m)+Q(Q(v*f)+Q(w*e));N[b-212>>2]=Q(r*m)+Q(Q(s*f)+Q(t*e));N[b-216>>2]=Q(p*m)+Q(Q(x*f)+Q(q*e));pg(l,J[l+136>>2]-1|0,0);ga=i+288|0;ga=k+32|0;return b-284|0}function De(a,b,c,d,e,f,g,h,i,j,k,l,m){var n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=0,A=0,B=0,C=0,D=Q(0),E=Q(0),F=Q(0),G=0,H=0,I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=0;z=J[i+24>>2];H=K[b+44|0];G=J[b+56>>2];a:{if(!(G?1:H)){break a}s=J[(l?20:16)+i>>2];w=J[(l?12:8)+i>>2];j=P(j,z);A=j<<2;N[w+A>>2]=N[k>>2];z=j+1|0;B=z<<2;N[B+w>>2]=N[k+4>>2];U=w;w=j+2|0;C=w<<2;N[U+C>>2]=N[k+8>>2];N[s+A>>2]=-N[k>>2];N[s+B>>2]=-N[k+4>>2];N[s+C>>2]=-N[k+8>>2];if(!l){o=N[a+1176>>2];b:{if(K[a+1301|0]){D=Q(N[a+1184>>2]-N[d+56>>2]);n=N[k+8>>2];q=Q(o-N[d+48>>2]);o=N[k>>2];u=Q(N[a+1180>>2]-N[d+52>>2]);r=N[k+4>>2];p=Q(Q(D*n)+Q(Q(q*o)+Q(u*r)));I=Q(N[a+1120>>2]-N[c+56>>2]);L=Q(N[a+1112>>2]-N[c+48>>2]);M=Q(N[a+1116>>2]-N[c+52>>2]);t=Q(Q(I*n)+Q(Q(o*L)+Q(r*M)));O=Q(o*t);x=Q(N[b+52>>2]-N[b+48>>2]);v=Q(o*p);y=Q(Q(O+Q(o*x))-v);R=Q(r*t);E=Q(r*p);F=Q(Q(R+Q(r*x))-E);v=Q(q-v);q=N[a+1276>>2];S=Q(v-Q(q*y));E=Q(Q(u-E)-Q(q*F));u=Q(Q(S*r)-Q(o*E));T=Q(n*t);p=Q(n*p);v=Q(Q(T+Q(n*x))-p);p=Q(Q(D-p)-Q(q*v));t=Q(Q(p*o)-Q(n*S));x=Q(Q(E*n)-Q(r*p));p=N[a+1272>>2];D=Q(Q(L-O)+Q(p*y));F=Q(Q(M-R)+Q(p*F));y=Q(Q(D*r)-Q(o*F));v=Q(Q(I-T)+Q(p*v));o=Q(Q(v*o)-Q(n*D));n=Q(Q(F*n)-Q(r*v));if(!(!K[a+1280|0]|m)){u=Q(q*u);t=Q(q*t);x=Q(q*x);y=Q(p*y);o=Q(p*o);n=Q(p*n)}c=j<<2;a=c+J[i+12>>2]|0;N[a+8>>2]=y;N[a+4>>2]=o;N[a>>2]=n;s=J[i+20>>2];N[c+s>>2]=-x;N[(z<<2)+s>>2]=-t;n=Q(-u);break b}r=N[c+48>>2];n=N[k>>2];m=J[i+12>>2];A=j<<2;B=a+1180|0;q=Q(N[B>>2]-N[c+52>>2]);p=N[k+8>>2];u=N[k+4>>2];C=a+1184|0;t=Q(N[C>>2]-N[c+56>>2]);N[m+A>>2]=Q(q*p)-Q(u*t);c=z<<2;o=Q(o-r);N[c+m>>2]=Q(t*n)-Q(p*o);N[m+(w<<2)>>2]=Q(o*u)-Q(n*q);o=N[d+48>>2];r=N[a+1176>>2];n=N[k>>2];s=J[i+20>>2];q=Q(N[B>>2]-N[d+52>>2]);p=N[k+8>>2];u=N[k+4>>2];t=Q(N[C>>2]-N[d+56>>2]);N[A+s>>2]=-Q(Q(q*p)-Q(u*t));o=Q(r-o);N[c+s>>2]=-Q(Q(t*n)-Q(p*o));n=Q(-Q(Q(o*u)-Q(n*q)))}N[(w<<2)+s>>2]=n}c:{d:{if(G){n=N[b+4>>2];o=N[b>>2];a=J[i+28>>2];J[a+(j<<2)>>2]=0;if(!(!H|n==o)){N[J[i+32>>2]+(j<<2)>>2]=N[b+28>>2]}n=Q(N[i>>2]*N[b+32>>2]);if(l){break d}c=a+(j<<2)|0;N[c>>2]=Q(n*N[b+48>>2])+N[c>>2];break c}a=j<<2;J[a+J[i+28>>2]>>2]=0;s=1;if(!H){break a}N[a+J[i+32>>2]>>2]=N[b+28>>2];n=N[b+8>>2];n=od(N[b+52>>2],N[b>>2],N[b+4>>2],l?n:Q(-n),Q(N[i>>2]*N[b+32>>2]));c=a+J[i+28>>2]|0;N[c>>2]=Q(n*N[b+8>>2])+N[c>>2];N[a+J[i+36>>2]>>2]=-N[b+12>>2];N[a+J[i+40>>2]>>2]=N[b+12>>2];return 1}c=a+(j<<2)|0;N[c>>2]=N[c>>2]-Q(n*N[b+48>>2])}c=j<<2;N[c+J[i+32>>2]>>2]=N[b+36>>2];if(N[b>>2]==N[b+4>>2]){J[c+J[i+36>>2]>>2]=-8388609;J[c+J[i+40>>2]>>2]=2139095039;return 1}s=1;d=(G|0)==1;N[c+J[i+36>>2]>>2]=d?Q(0):Q(-3.4028234663852886e38);N[c+J[i+40>>2]>>2]=d?Q(3.4028234663852886e38):Q(0);r=N[b+40>>2];if(!(r>Q(0))){break a}e:{if(l){n=N[k+8>>2];o=N[k>>2];q=N[k+4>>2];p=Q(Q(N[g+8>>2]*n)+Q(Q(N[g>>2]*o)+Q(N[g+4>>2]*q)));break e}h=f;n=N[k+8>>2];o=N[k>>2];q=N[k+4>>2];p=Q(Q(N[e+8>>2]*n)+Q(Q(N[e>>2]*o)+Q(N[e+4>>2]*q)))}n=Q(p-Q(Q(N[h+8>>2]*n)+Q(Q(N[h>>2]*o)+Q(q*N[h+4>>2]))));if((G|0)==1){if(!(n<Q(0))){break a}n=Q(n*Q(-r));a=a+(j<<2)|0;if(!(n>N[a>>2])){break a}N[a>>2]=n;return 1}if(!(n>Q(0))){break a}n=Q(n*Q(-r));a=a+(j<<2)|0;if(!(n<N[a>>2])){break a}N[a>>2]=n}return s}function lz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c=ga-400|0;ga=c;d=J[b+36>>2];b=c+344|0;J[b+4>>2]=35;J[b+8>>2]=0;J[b>>2]=14268;J[b+44>>2]=1025758986;J[b+20>>2]=1065353216;J[b+24>>2]=0;J[b+12>>2]=1065353216;J[b+16>>2]=1065353216;J[b>>2]=13984;J[c+396>>2]=d;J[c+344>>2]=21564;J[c+388>>2]=0;b=J[a+28>>2];e=J[b+4>>2];a:{if(K[d+376|0]?K[J[b+8>>2]+204|0]&3:0){break a}if(!(H[29512]&1)){if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;b=J[7388];J[7370]=J[7387];J[7371]=b;b=J[7380];J[7362]=J[7379];J[7363]=b;b=J[7384];J[7366]=J[7383];J[7367]=b;J[7376]=0;J[7377]=0;b=J[7390];J[7372]=J[7389];J[7373]=b;b=J[7382];J[7364]=J[7381];J[7365]=b;b=J[7386];J[7368]=J[7385];J[7369]=b;b=J[a+28>>2]}b=J[b+12>>2];J[c+80>>2]=0;J[c+84>>2]=0;J[c+72>>2]=1065353216;J[c+76>>2]=0;if(!vl(c+344|0,e,b,c+72|0,c+288|0)){break a}J[c+92>>2]=0;J[c+96>>2]=0;J[c+84>>2]=0;J[c+88>>2]=0;J[c+76>>2]=0;J[c+80>>2]=0;H[c+224|0]=0;J[c+60>>2]=0;J[c+64>>2]=0;J[c+56>>2]=d;J[c+72>>2]=21096;b=J[J[a+28>>2]+8>>2];J[c+48>>2]=b;J[c+40>>2]=0;d=J[b+236>>2];J[c+32>>2]=0;J[c+16>>2]=b;J[c+44>>2]=b&d<<30>>31;b=J[c+60>>2];J[c+24>>2]=J[c+56>>2];J[c+28>>2]=b;b=J[c+44>>2];J[c+8>>2]=J[c+40>>2];J[c+12>>2]=b;if(!dk(a,c+288|0,c+24|0,c+8|0,c+72|0)){break a}J[8369]=J[8369]+1;b=ia[J[6782]](216,16)|0;d=qa(b+4|0,0,212);J[b>>2]=21096;sa(d,c+72|4,100);d=J[c+188>>2];J[b+112>>2]=J[c+184>>2];J[b+116>>2]=d;d=J[c+180>>2];J[b+104>>2]=J[c+176>>2];J[b+108>>2]=d;d=J[c+204>>2];J[b+128>>2]=J[c+200>>2];J[b+132>>2]=d;d=J[c+196>>2];J[b+120>>2]=J[c+192>>2];J[b+124>>2]=d;d=J[c+212>>2];J[b+136>>2]=J[c+208>>2];J[b+140>>2]=d;d=J[c+220>>2];J[b+144>>2]=J[c+216>>2];J[b+148>>2]=d;H[b+152|0]=K[c+224|0];J[b+212>>2]=J[c+284>>2];d=J[c+280>>2];J[b+204>>2]=J[c+276>>2];J[b+208>>2]=d;d=J[c+272>>2];J[b+196>>2]=J[c+268>>2];J[b+200>>2]=d;d=J[c+264>>2];J[b+188>>2]=J[c+260>>2];J[b+192>>2]=d;d=J[c+256>>2];J[b+180>>2]=J[c+252>>2];J[b+184>>2]=d;d=J[c+248>>2];J[b+172>>2]=J[c+244>>2];J[b+176>>2]=d;d=J[c+240>>2];J[b+164>>2]=J[c+236>>2];J[b+168>>2]=d;d=J[c+232>>2];J[b+156>>2]=J[c+228>>2];J[b+160>>2]=d;d=J[a+24>>2];e=J[d+852>>2];b:{if((e|0)!=J[d+856>>2]){break b}j=e?e<<1:1;if((j|0)<=(e|0)){break b}if(j){J[8369]=J[8369]+1;h=ia[J[6782]](j<<2,16)|0;e=J[d+852>>2]}c:{if((e|0)<=0){break c}if(e-1>>>0>=3){k=e&-4;while(1){f=g<<2;J[f+h>>2]=J[f+J[d+860>>2]>>2];i=f|4;J[i+h>>2]=J[i+J[d+860>>2]>>2];i=f|8;J[i+h>>2]=J[i+J[d+860>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[d+860>>2]>>2];g=g+4|0;l=l+4|0;if((k|0)!=(l|0)){continue}break}}f=e&3;if(!f){break c}while(1){k=g<<2;J[k+h>>2]=J[k+J[d+860>>2]>>2];g=g+1|0;m=m+1|0;if((f|0)!=(m|0)){continue}break}}g=J[d+860>>2];if(!(!g|!K[d+864|0])){if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}e=J[d+852>>2]}J[d+860>>2]=h;H[d+864|0]=1;J[d+856>>2]=j}J[J[d+860>>2]+(e<<2)>>2]=b;J[d+852>>2]=e+1;d=J[a+24>>2];d:{if(K[J[J[a+28>>2]+8>>2]+204|0]&3){N[b+64>>2]=N[d+344>>2]*N[b+64>>2];a=d+356|0;break d}N[b+64>>2]=N[d+340>>2]*N[b+64>>2];a=d+352|0}N[b+68>>2]=N[a>>2]*N[b+68>>2]}ga=c+400|0}function wn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=J[a+108>>2];if(d){ia[J[J[d>>2]+12>>2]](d,J[b+60>>2],c)}j=L[b+12>>1];b=a;h=J[a+60>>2];a=J[a+92>>2];if(!(ia[J[J[a>>2]+56>>2]](a)|0)){a=J[b+92>>2];ia[J[J[a>>2]+16>>2]](a,h+(j<<6)|0,c)}i=L[b+56>>1];d=J[b+60>>2];I[d+54>>1]=L[d+54>>1]-2;I[d+56>>1]=L[d+56>>1]-2;I[d+58>>1]=L[d+58>>1]-2;c=J[b+68>>2];k=h+(j<<6)|0;g=L[k+54>>1]<<2;a=c+g|0;e=L[b+6>>1];I[a>>1]=e;f=L[a+6>>1];if(f){g=d+(L[(c+g|0)+2>>1]<<6)|0;while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d>>1]=L[d>>1]-1;I[g+54>>1]=L[g+54>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1];a=J[b+68>>2]}else{a=c}g=L[k+48>>1];f=g<<2;I[f+c>>1]=e;d=a;a=f+a|0;f=L[a+6>>1];if(f){g=J[b+60>>2]+(L[(d+(g<<2)|0)+2>>1]<<6)|0;e=L[a>>1];while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d>>1]=L[d>>1]-1;I[g+48>>1]=L[g+48>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1]}g=(i<<1)-1|0;a=c+(g<<2)|0;I[a>>1]=e;I[a+2>>1]=0;c=J[b+72>>2];k=h+(j<<6)|0;d=L[k+56>>1]<<2;a=c+d|0;I[a>>1]=e;f=L[a+6>>1];if(f){i=J[b+60>>2]+(L[(c+d|0)+2>>1]<<6)|0;while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d+2>>1]=L[d+2>>1]-1;I[i+56>>1]=L[i+56>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1];a=J[b+72>>2]}else{a=c}i=L[k+50>>1];f=i<<2;I[f+c>>1]=e;d=a;a=f+a|0;f=L[a+6>>1];if(f){i=J[b+60>>2]+(L[(d+(i<<2)|0)+2>>1]<<6)|0;e=L[a>>1];while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d+2>>1]=L[d+2>>1]-1;I[i+50>>1]=L[i+50>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1]}a=c+(g<<2)|0;I[a>>1]=e;I[a+2>>1]=0;c=J[b+76>>2];i=h+(j<<6)|0;d=L[i+58>>1]<<2;a=c+d|0;I[a>>1]=e;f=L[a+6>>1];if(f){h=J[b+60>>2]+(L[(c+d|0)+2>>1]<<6)|0;while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d+4>>1]=L[d+4>>1]-1;I[h+58>>1]=L[h+58>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1];a=J[b+76>>2]}else{a=c}h=L[i+52>>1];f=h<<2;I[f+c>>1]=e;d=a;a=f+a|0;f=L[a+6>>1];if(f){h=J[b+60>>2]+(L[(d+(h<<2)|0)+2>>1]<<6)|0;e=L[a>>1];while(1){d=L[a+4>>1];if(d>>>0<=(e&65535)>>>0){d=(J[b+60>>2]+(f<<6)|0)+(d&1?54:48)|0;I[d+4>>1]=L[d+4>>1]-1;I[h+52>>1]=L[h+52>>1]+1;d=L[a+4>>1]|L[a+6>>1]<<16;e=L[a>>1]|L[a+2>>1]<<16;I[a+4>>1]=e;I[a+6>>1]=e>>>16;I[a>>1]=d;I[a+2>>1]=d>>>16;d=a;a=a+4|0;f=L[d+10>>1];if(f){continue}}break}e=L[b+6>>1]}a=c+(g<<2)|0;I[a>>1]=e;I[a+2>>1]=0;I[(J[b+60>>2]+(j<<6)|0)+48>>1]=L[b+64>>1];I[b+64>>1]=j;I[b+56>>1]=L[b+56>>1]-1}function zB(a){a=a|0;var b=Q(0),c=0,d=Q(0),e=Q(0),f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=0,y=0,z=0,A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Z=Q(0),_=Q(0),$=0;k=ga-48|0;ga=k;if(K[a+527|0]){J[a+36>>2]=0;J[a+576>>2]=0;J[a+580>>2]=0;J[a+516>>2]=0;J[a+520>>2]=0;J[a+584>>2]=0;J[a+588>>2]=0;a:{if(K[a+524|0]){break a}d=N[a+420>>2];c=J[a+32>>2];s=N[c+44>>2];b=N[a+412>>2];l=N[c+36>>2];e=N[a+416>>2];t=N[c+40>>2];m=N[c+60>>2];T=Q(Q(Q(d*s)+Q(Q(b*l)+Q(e*t)))+m);g=N[a+356>>2];f=J[a+28>>2];n=N[f+44>>2];i=N[a+348>>2];u=N[f+36>>2];o=N[a+352>>2];A=N[f+40>>2];p=N[f+60>>2];U=Q(Q(Q(g*n)+Q(Q(i*u)+Q(o*A)))+p);j=Q(T-U);B=N[c+12>>2];C=N[c+4>>2];D=N[c+8>>2];E=N[c+52>>2];V=Q(Q(Q(d*B)+Q(Q(b*C)+Q(e*D)))+E);F=N[f+12>>2];G=N[f+4>>2];H=N[f+8>>2];v=N[f+52>>2];W=Q(Q(Q(g*F)+Q(Q(i*G)+Q(o*H)))+v);q=Q(V-W);I=N[c+28>>2];L=N[c+20>>2];M=N[c+24>>2];O=N[c+56>>2];X=Q(Q(Q(d*I)+Q(Q(b*L)+Q(e*M)))+O);S=N[f+28>>2];e=i;i=N[f+20>>2];d=o;o=N[f+24>>2];r=N[f+56>>2];Z=Q(Q(Q(g*S)+Q(Q(e*i)+Q(d*o)))+r);d=Q(X-Z);b=Q(Q(j*j)+Q(Q(q*q)+Q(d*d)));b:{if(!(b>Q(1.1920928955078125e-7))){b=Q(0);e=Q(0);d=Q(1);break b}g=Q(Q(1)/Q(Y(b)));e=Q(j*g);b=Q(d*g);d=Q(q*g)}J[k+12>>2]=0;N[k+4>>2]=b;N[k>>2]=d;N[k+8>>2]=e;c:{if(Q(R(e))>Q(.7071067690849304)){j=Q(Q(b*b)+Q(e*e));g=Q(Q(1)/Q(Y(j)));j=Q(j*g);q=Q(g*Q(-e));w=Q(q*d);e=Q(b*g);b=Q(e*Q(-d));break c}j=Q(Q(d*d)+Q(b*b));g=Q(Q(1)/Q(Y(j)));w=Q(j*g);_=Q(g*Q(-b));b=Q(e*_);q=Q(d*g);j=Q(q*Q(-e));e=Q(0)}N[k+40>>2]=w;N[k+36>>2]=b;N[k+24>>2]=e;N[k+20>>2]=q;N[k+32>>2]=j;N[k+16>>2]=_;while(1){j=N[c+344>>2];q=N[f+344>>2];y=(x<<4)+k|0;$=J[y+12>>2];h=P(x,84)+a|0;z=h+56|0;J[z>>2]=J[y+8>>2];J[z+4>>2]=$;z=J[y+4>>2];J[h+48>>2]=J[y>>2];J[h+52>>2]=z;J[h+76>>2]=0;J[h+92>>2]=0;v=Q(W-v);d=N[h+52>>2];b=N[h+48>>2];e=Q(Z-r);g=Q(Q(v*d)-Q(b*e));w=Q(u*g);r=e;e=N[h+56>>2];p=Q(U-p);u=Q(Q(r*e)-Q(d*p));r=i;i=Q(Q(p*b)-Q(e*v));p=Q(w+Q(Q(G*u)+Q(r*i)));N[h- -64>>2]=p;o=Q(Q(A*g)+Q(Q(H*u)+Q(o*i)));N[h+68>>2]=o;g=Q(Q(n*g)+Q(Q(F*u)+Q(S*i)));N[h+72>>2]=g;r=l;n=Q(X-O);i=Q(V-E);l=Q(Q(b*n)-Q(d*i));m=Q(T-m);d=Q(Q(d*m)-Q(n*e));b=Q(Q(i*e)-Q(m*b));e=Q(Q(r*l)+Q(Q(C*d)+Q(L*b)));N[h+80>>2]=e;t=Q(Q(t*l)+Q(Q(D*d)+Q(M*b)));N[h+84>>2]=t;d=Q(Q(s*l)+Q(Q(B*d)+Q(I*b)));N[h+88>>2]=d;b=N[f+404>>2];s=N[f+400>>2];l=N[f+396>>2];J[h+108>>2]=0;l=Q(p*l);N[h+96>>2]=l;s=Q(o*s);N[h+100>>2]=s;b=Q(g*b);N[h+104>>2]=b;m=N[c+404>>2];n=N[c+400>>2];i=N[c+396>>2];J[h+124>>2]=0;i=Q(e*i);N[h+112>>2]=i;n=Q(t*n);N[h+116>>2]=n;m=Q(d*m);N[h+120>>2]=m;N[h+128>>2]=Q(j+Q(q+Q(Q(b*g)+Q(Q(l*p)+Q(o*s)))))+Q(Q(m*d)+Q(Q(i*e)+Q(t*n)));x=x+1|0;if((x|0)==3){break a}m=N[c+60>>2];O=N[c+56>>2];E=N[c+52>>2];p=N[f+60>>2];r=N[f+56>>2];v=N[f+52>>2];s=N[c+44>>2];I=N[c+28>>2];B=N[c+12>>2];t=N[c+40>>2];M=N[c+24>>2];D=N[c+8>>2];l=N[c+36>>2];L=N[c+20>>2];C=N[c+4>>2];n=N[f+44>>2];S=N[f+28>>2];F=N[f+12>>2];A=N[f+40>>2];o=N[f+24>>2];H=N[f+8>>2];u=N[f+36>>2];i=N[f+20>>2];G=N[f+4>>2];continue}}f=a;c=J[a+28>>2];a=J[a+32>>2];zg(f,c+4|0,a+4|0,c+264|0,a+264|0)}ga=k+48|0}function vF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=Q(0),i=Q(0),j=0,k=Q(0),l=0,m=0,n=Q(0),o=Q(0),p=0,q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=0;m=ga+-64|0;ga=m;g=J[a+48>>2];J[m+8>>2]=b;J[m+4>>2]=g;J[m>>2]=12644;g=ga-16|0;ga=g;f=J[a+52>>2];a:{if(K[f+60|0]){x=N[f+40>>2];t=N[f+24>>2];h=N[f+8>>2];y=N[f+36>>2];u=N[f+20>>2];s=N[f+4>>2];n=N[c>>2];o=N[c+4>>2];v=N[f+28>>2];k=N[f+12>>2];i=N[c+8>>2];i=k>i?k:i;z=N[f+44>>2];i=Q(Q((i>v?v:i)-k)*z);b:{if(i<Q(4294967296)&i>=Q(0)){a=~~i>>>0;break b}a=0}l=a&65534;I[g+14>>1]=l;o=h>o?h:o;o=Q(x*Q((o>t?t:o)-h));c:{if(o<Q(4294967296)&o>=Q(0)){a=~~o>>>0;break c}a=0}p=a&65534;I[g+12>>1]=p;n=n<s?s:n;n=Q(Q((n>u?u:n)-s)*y);d:{if(n<Q(4294967296)&n>=Q(0)){a=~~n>>>0;break d}a=0}q=a&65534;I[g+10>>1]=q;n=N[d>>2];o=N[d+4>>2];i=N[d+8>>2];i=k>i?k:i;k=Q(Q(z*Q((i>v?v:i)-k))+Q(1));e:{if(k<Q(4294967296)&k>=Q(0)){a=~~k>>>0;break e}a=0}d=a|1;I[g+8>>1]=d;k=h>o?h:o;h=Q(Q(x*Q((k>t?t:k)-h))+Q(1));f:{if(h<Q(4294967296)&h>=Q(0)){a=~~h>>>0;break f}a=0}r=a|1;I[g+6>>1]=r;h=n<s?s:n;h=Q(Q(y*Q((h>u?u:h)-s))+Q(1));g:{if(h<Q(4294967296)&h>=Q(0)){a=~~h>>>0;break g}a=0}w=a|1;I[g+4>>1]=w;h:{switch(J[f+144>>2]){case 0:A=J[f+56>>2];if((A|0)>0){a=J[f+136>>2];while(1){c=J[a+12>>2];f=(c|0)<0;b=q>>>0<=L[a+6>>1]&w>>>0>=L[a>>1]&l>>>0<=L[a+10>>1]&d>>>0>=L[a+4>>1]&p>>>0<=L[a+8>>1]&r>>>0>=L[a+2>>1];if(!(f|!b)){ia[J[J[m>>2]+8>>2]](m,c>>>21|0,c&2097151)}i:{if(!(f&(b^-1))){e=e+1|0;a=a+16|0;break i}b=J[a+12>>2];e=e-b|0;a=a-(b<<4)|0}j=j+1|0;if((e|0)<(A|0)){continue}break}}if(J[7404]>=(j|0)){break a}J[7404]=j;break a;case 1:l=0;if(J[f+152>>2]>0){while(1){a=L[g+10>>1];b=J[f+160>>2]+(l<<5)|0;j:{if(a>>>0>L[b+6>>1]){break j}j=L[g+4>>1];if(j>>>0<L[b>>1]){break j}p=L[g+14>>1];if(p>>>0>L[b+10>>1]){break j}q=L[g+8>>1];if(q>>>0<L[b+4>>1]){break j}r=L[g+12>>1];if(r>>>0>L[b+8>>1]){break j}d=L[g+6>>1];if(d>>>0<L[b+2>>1]){break j}k:{e=J[b+16>>2];if((e|0)<=0){b=0;break k}c=J[b+12>>2];w=e+c|0;e=J[f+136>>2]+(c<<4)|0;b=0;while(1){a=L[e>>1]<=j>>>0&L[e+6>>1]>=a>>>0&L[e+10>>1]>=p>>>0&L[e+4>>1]<=q>>>0&L[e+8>>1]>=r>>>0&L[e+2>>1]<=d>>>0;d=J[e+12>>2];j=(d|0)<0;if(!(j|!a)){ia[J[J[m>>2]+8>>2]](m,d>>>21|0,d&2097151)}l:{if(!(j&(a^-1))){c=c+1|0;e=e+16|0;break l}a=J[e+12>>2];c=c-a|0;e=e-(a<<4)|0}b=b+1|0;if((c|0)>=(w|0)){break k}d=L[g+6>>1];r=L[g+12>>1];q=L[g+8>>1];p=L[g+14>>1];j=L[g+4>>1];a=L[g+10>>1];continue}}if(J[7404]>=(b|0)){break j}J[7404]=b}l=l+1|0;if((l|0)<J[f+152>>2]){continue}break}}break a;case 2:break h;default:break a}}wm(f,J[f+136>>2],m,g+10|0,g+4|0);break a}q=J[f+56>>2];if((q|0)>0){a=J[f+96>>2];while(1){e=0;m:{if(N[c>>2]>N[a+16>>2]){break m}e=0;if(N[d>>2]<N[a>>2]){break m}e=1}b=0;b=N[d+8>>2]<N[a+8>>2]|N[c+8>>2]>N[a+24>>2]?b:e;n:{o:{p:{if(N[d+4>>2]<N[a+4>>2]?1:N[c+4>>2]>N[a+20>>2]){l=J[a+32>>2];r=(l|0)==-1;b=0;break p}l=J[a+32>>2];r=(l|0)==-1;if(!(r&b)){break p}ia[J[J[m>>2]+8>>2]](m,J[a+36>>2],J[a+40>>2]);q=J[f+56>>2];break o}if(b|r){break o}j=j+l|0;a=(l<<6)+a|0;break n}j=j+1|0;a=a- -64|0}p=p+1|0;if((j|0)<(q|0)){continue}break}}if(J[7404]>=(p|0)){break a}J[7404]=p}ga=g+16|0;ga=m- -64|0}function ic(a,b,c,d,e,f){var g=0,h=0,i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=Q(0);g=ga-400|0;ga=g;ya(2374);h=J[c+12>>2];J[g+344>>2]=J[c+8>>2];J[g+348>>2]=h;h=J[c+4>>2];J[g+336>>2]=J[c>>2];J[g+340>>2]=h;h=J[c+28>>2];J[g+360>>2]=J[c+24>>2];J[g+364>>2]=h;h=J[c+20>>2];J[g+352>>2]=J[c+16>>2];J[g+356>>2]=h;h=J[c+44>>2];J[g+376>>2]=J[c+40>>2];J[g+380>>2]=h;h=J[c+36>>2];J[g+368>>2]=J[c+32>>2];J[g+372>>2]=h;h=J[c+60>>2];J[g+392>>2]=J[c+56>>2];J[g+396>>2]=h;h=J[c+52>>2];J[g+384>>2]=J[c+48>>2];J[g+388>>2]=h;h=J[d+12>>2];J[g+280>>2]=J[d+8>>2];J[g+284>>2]=h;h=J[d+4>>2];J[g+272>>2]=J[d>>2];J[g+276>>2]=h;h=J[d+28>>2];J[g+296>>2]=J[d+24>>2];J[g+300>>2]=h;h=J[d+20>>2];J[g+288>>2]=J[d+16>>2];J[g+292>>2]=h;h=J[d+44>>2];J[g+312>>2]=J[d+40>>2];J[g+316>>2]=h;h=J[d+36>>2];J[g+304>>2]=J[d+32>>2];J[g+308>>2]=h;h=J[d+60>>2];J[g+328>>2]=J[d+56>>2];J[g+332>>2]=h;h=J[d+52>>2];J[g+320>>2]=J[d+48>>2];J[g+324>>2]=h;r=g+336|0;s=g+8|0;h=g+256|0;hc(r,g+272|0,s,h);J[g+236>>2]=0;i=N[g+256>>2];N[g+232>>2]=i*N[g+16>>2];N[g+228>>2]=i*N[g+12>>2];N[g+224>>2]=i*N[g+8>>2];J[g+216>>2]=0;J[g+220>>2]=0;J[g+208>>2]=0;J[g+212>>2]=0;j=g- -64|0;J[j>>2]=0;J[j+4>>2]=0;J[g+56>>2]=0;J[g+60>>2]=0;Na(r,h);J[g+52>>2]=0;J[g+36>>2]=0;k=N[g+268>>2];m=N[g+264>>2];i=N[g+256>>2];l=N[g+260>>2];o=Q(Q(2)/Q(Q(k*k)+Q(Q(m*m)+Q(Q(i*i)+Q(l*l)))));q=Q(m*o);n=Q(l*q);p=Q(i*o);t=Q(k*p);N[g+44>>2]=n+t;N[g+32>>2]=n-t;n=Q(i*p);p=l;l=Q(l*o);o=Q(p*l);N[g+48>>2]=Q(1)-Q(n+o);m=Q(m*q);N[g+28>>2]=Q(1)-Q(n+m);J[g+20>>2]=0;n=Q(i*q);p=Q(k*l);N[g+40>>2]=n-p;i=Q(i*l);k=Q(k*q);N[g+24>>2]=i+k;N[g+16>>2]=n+p;N[g+12>>2]=i-k;N[g+8>>2]=Q(1)-Q(o+m);r=g+240|0;nm(b,s,g+208|0,g+224|0,h,r);J[g+8>>2]=8344;j=J[c+12>>2];J[g+52>>2]=J[c+8>>2];J[g+56>>2]=j;j=J[c+4>>2];J[g+44>>2]=J[c>>2];J[g+48>>2]=j;j=J[c+28>>2];J[g+68>>2]=J[c+24>>2];J[g+72>>2]=j;j=J[c+20>>2];J[g+60>>2]=J[c+16>>2];J[g+64>>2]=j;j=J[c+44>>2];J[g+84>>2]=J[c+40>>2];J[g+88>>2]=j;j=J[c+36>>2];J[g+76>>2]=J[c+32>>2];J[g+80>>2]=j;j=J[c+60>>2];J[g+100>>2]=J[c+56>>2];J[g+104>>2]=j;j=J[c+52>>2];J[g+92>>2]=J[c+48>>2];J[g+96>>2]=j;c=J[d+12>>2];J[g+116>>2]=J[d+8>>2];J[g+120>>2]=c;c=J[d+4>>2];J[g+108>>2]=J[d>>2];J[g+112>>2]=c;c=J[d+20>>2];J[g+124>>2]=J[d+16>>2];J[g+128>>2]=c;c=J[d+28>>2];J[g+132>>2]=J[d+24>>2];J[g+136>>2]=c;c=J[d+44>>2];J[g+148>>2]=J[d+40>>2];J[g+152>>2]=c;c=J[d+36>>2];J[g+140>>2]=J[d+32>>2];J[g+144>>2]=c;c=J[d+52>>2];J[g+156>>2]=J[d+48>>2];J[g+160>>2]=c;c=J[d+60>>2];J[g+164>>2]=J[d+56>>2];J[g+168>>2]=c;J[g+192>>2]=e;N[g+196>>2]=f;J[g+200>>2]=b;J[g+188>>2]=a;f=Q(N[g+164>>2]-N[g+100>>2]);i=Q(N[g+156>>2]-N[g+92>>2]);k=Q(N[g+160>>2]-N[g+96>>2]);l=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(i*i)+Q(k*k))))));m=Q(f*l);q=m==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/m);N[g+20>>2]=q;o=Q(k*l);n=o==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/o);N[g+16>>2]=n;J[g+36>>2]=q<Q(0);J[g+32>>2]=n<Q(0);p=Q(m*f);f=Q(i*l);N[g+40>>2]=p+Q(Q(f*i)+Q(k*o));f=f==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/f);N[g+12>>2]=f;J[g+28>>2]=f<Q(0);a=J[a+68>>2];ia[J[J[a>>2]+24>>2]](a,g+384|0,g+320|0,s,h,r);xa();ga=g+400|0}function pk(a){a=a|0;var b=0,c=0;J[a>>2]=20932;b=J[a+192>>2];if(b){ia[J[J[b>>2]+4>>2]](b)}if(J[a+1112>>2]>0){while(1){ng(a,0);if(J[a+1112>>2]>0){continue}break}}if(J[a+872>>2]>0){b=0;while(1){c=J[J[a+880>>2]+(b<<2)>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}b=b+1|0;if((b|0)<J[a+872>>2]){continue}break}}if(J[a+852>>2]>0){b=0;while(1){c=J[J[a+860>>2]+(b<<2)>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}b=b+1|0;if((b|0)<J[a+852>>2]){continue}break}}b=J[a+1244>>2];if(!(b?!b|!K[a+1248|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+1244>>2]=0;H[a+1248|0]=1;b=a+1236|0;J[b>>2]=0;J[b+4>>2]=0;b=J[a+1140>>2];if(!(b?!b|!K[a+1144|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+1140>>2]=0;H[a+1144|0]=1;b=a+1132|0;J[b>>2]=0;J[b+4>>2]=0;b=J[a+1120>>2];if(!(b?!b|!K[a+1124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+1120>>2]=0;H[a+1124|0]=1;J[a+1112>>2]=0;J[a+1116>>2]=0;sb(a+1048|0);sb(a+988|0);sb(a+928|0);b=J[a+880>>2];if(!(b?!b|!K[a+884|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+880>>2]=0;H[a+884|0]=1;J[a+872>>2]=0;J[a+876>>2]=0;b=J[a+860>>2];if(!(b?!b|!K[a+864|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+860>>2]=0;H[a+864|0]=1;J[a+852>>2]=0;J[a+856>>2]=0;b=J[a+840>>2];if(!(b?!b|!K[a+844|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+840>>2]=0;H[a+844|0]=1;J[a+832>>2]=0;J[a+836>>2]=0;b=J[a+820>>2];if(!(b?!b|!K[a+824|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+820>>2]=0;H[a+824|0]=1;J[a+812>>2]=0;J[a+816>>2]=0;b=J[a+800>>2];if(!(b?!b|!K[a+804|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+800>>2]=0;H[a+804|0]=1;J[a+792>>2]=0;J[a+796>>2]=0;b=J[a+780>>2];if(!(b?!b|!K[a+784|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+780>>2]=0;H[a+784|0]=1;J[a+772>>2]=0;J[a+776>>2]=0;b=J[a+760>>2];if(!(b?!b|!K[a+764|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+760>>2]=0;H[a+764|0]=1;J[a+752>>2]=0;J[a+756>>2]=0;b=J[a+740>>2];if(!(b?!b|!K[a+744|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+740>>2]=0;H[a+744|0]=1;J[a+732>>2]=0;J[a+736>>2]=0;b=J[a+720>>2];if(!(b?!b|!K[a+724|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+720>>2]=0;H[a+724|0]=1;J[a+712>>2]=0;J[a+716>>2]=0;b=J[a+700>>2];if(!(b?!b|!K[a+704|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+700>>2]=0;H[a+704|0]=1;J[a+692>>2]=0;J[a+696>>2]=0;b=J[a+512>>2];if(!(b?!b|!K[a+516|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+512>>2]=0;H[a+516|0]=1;J[a+504>>2]=0;J[a+508>>2]=0;b=J[a+492>>2];if(!(b?!b|!K[a+496|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+492>>2]=0;H[a+496|0]=1;J[a+484>>2]=0;J[a+488>>2]=0;b=J[a+444>>2];if(!(b?!b|!K[a+448|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+444>>2]=0;H[a+448|0]=1;J[a+436>>2]=0;J[a+440>>2]=0;b=J[a+424>>2];if(!(b?!b|!K[a+428|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+424>>2]=0;H[a+428|0]=1;J[a+416>>2]=0;J[a+420>>2]=0;b=J[a+404>>2];if(!(b?!b|!K[a+408|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+404>>2]=0;H[a+408|0]=1;J[a+396>>2]=0;J[a+400>>2]=0;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;return a|0}function bl(a,b,c,d){var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=Q(0),D=Q(0),E=Q(0);xb(a,6,Rk(),b);J[a>>2]=19508;e=J[c+12>>2];J[a+120>>2]=J[c+8>>2];J[a+124>>2]=e;e=J[c+4>>2];J[a+112>>2]=J[c>>2];J[a+116>>2]=e;e=J[c+28>>2];J[a+136>>2]=J[c+24>>2];J[a+140>>2]=e;e=J[c+20>>2];J[a+128>>2]=J[c+16>>2];J[a+132>>2]=e;e=J[c+44>>2];J[a+152>>2]=J[c+40>>2];J[a+156>>2]=e;e=J[c+36>>2];J[a+144>>2]=J[c+32>>2];J[a+148>>2]=e;e=J[c+56>>2];A=J[c+60>>2];B=J[c+48>>2];c=J[c+52>>2];J[a+784>>2]=0;J[a+776>>2]=0;J[a+780>>2]=0;J[a+768>>2]=0;J[a+772>>2]=0;J[a+764>>2]=1045220557;J[a+756>>2]=1045220557;J[a+760>>2]=1045220557;J[a+740>>2]=0;J[a+744>>2]=0;J[a+748>>2]=0;J[a+752>>2]=0;J[a+720>>2]=0;J[a+724>>2]=0;J[a+712>>2]=0;J[a+716>>2]=0;J[a+704>>2]=0;J[a+708>>2]=0;J[a+696>>2]=0;J[a+700>>2]=0;J[a+688>>2]=0;J[a+692>>2]=0;J[a+680>>2]=0;J[a+684>>2]=0;J[a+168>>2]=e;J[a+172>>2]=A;J[a+160>>2]=B;J[a+164>>2]=c;J[a+728>>2]=1060320051;J[a+732>>2]=1065353216;J[a+736>>2]=1056964608;H[a+790|0]=0;I[a+788>>1]=0;J[a+792>>2]=0;J[a+796>>2]=0;J[a+800>>2]=0;J[a+808>>2]=0;J[a+812>>2]=0;J[a+816>>2]=0;J[a+876>>2]=0;J[a+880>>2]=1036831949;J[a+884>>2]=1133903872;J[a+868>>2]=1065353216;J[a+872>>2]=-1082130432;J[a+896>>2]=0;J[a+900>>2]=1045220557;J[a+904>>2]=0;J[a+908>>2]=0;J[a+924>>2]=0;J[a+928>>2]=0;J[a+888>>2]=1065353216;J[a+892>>2]=1056964608;J[a+916>>2]=0;J[a+992>>2]=0;H[a+912|0]=0;J[a+940>>2]=0;J[a+944>>2]=1036831949;J[a+948>>2]=1133903872;J[a+968>>2]=0;J[a+972>>2]=0;J[a+960>>2]=0;J[a+964>>2]=1045220557;J[a+932>>2]=1065353216;J[a+936>>2]=-1082130432;J[a+952>>2]=1065353216;J[a+956>>2]=1056964608;J[a+988>>2]=0;J[a+980>>2]=0;H[a+976|0]=0;J[a+1004>>2]=0;J[a+1008>>2]=1036831949;J[a+1012>>2]=1133903872;c=a+1032|0;J[c>>2]=0;J[c+4>>2]=0;c=a+1024|0;J[c>>2]=0;J[c+4>>2]=1045220557;J[a+996>>2]=1065353216;J[a+1e3>>2]=-1082130432;J[a+1016>>2]=1065353216;J[a+1020>>2]=1056964608;c=a+1052|0;J[c>>2]=0;J[c+4>>2]=0;J[a+1044>>2]=0;H[a+1040|0]=0;H[a+1301|0]=1;H[a+1308|0]=0;J[a+1304>>2]=0;H[a+1300|0]=d;C=N[b+52>>2];D=N[b+56>>2];E=N[b+60>>2];o=N[a+168>>2];p=N[a+160>>2];q=N[a+164>>2];f=N[b+8>>2];g=N[b+12>>2];h=N[b+28>>2];i=N[b+20>>2];j=N[b+24>>2];r=N[a+128>>2];s=N[a+144>>2];t=N[a+148>>2];u=N[a+116>>2];v=N[a+132>>2];k=N[b+44>>2];w=N[a+152>>2];l=N[b+36>>2];x=N[a+120>>2];m=N[b+40>>2];y=N[a+136>>2];n=N[b+4>>2];z=N[a+112>>2];J[a+108>>2]=0;J[a+92>>2]=0;J[a+76>>2]=0;J[a+60>>2]=0;N[a+88>>2]=Q(w*k)+Q(Q(x*l)+Q(y*m));N[a+84>>2]=Q(t*k)+Q(Q(u*l)+Q(v*m));N[a+80>>2]=Q(s*k)+Q(Q(z*l)+Q(r*m));N[a+72>>2]=Q(w*h)+Q(Q(x*i)+Q(y*j));N[a+68>>2]=Q(t*h)+Q(Q(u*i)+Q(v*j));N[a- -64>>2]=Q(s*h)+Q(Q(z*i)+Q(r*j));N[a+56>>2]=Q(w*g)+Q(Q(x*n)+Q(f*y));N[a+52>>2]=Q(t*g)+Q(Q(u*n)+Q(f*v));N[a+48>>2]=Q(s*g)+Q(Q(z*n)+Q(r*f));N[a+104>>2]=E+Q(Q(o*k)+Q(Q(p*l)+Q(m*q)));N[a+100>>2]=D+Q(Q(o*h)+Q(Q(p*i)+Q(j*q)));N[a+96>>2]=C+Q(Q(o*g)+Q(Q(p*n)+Q(f*q)));pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0)}function Ae(a,b,c,d,e,f){var g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0,A=0,B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),I=Q(0);h=J[a+88>>2];l=h;a:{if((h|0)!=J[a+92>>2]){break a}l=h;t=h?h<<1:1;if((h|0)>=(t|0)){break a}if(t){J[8369]=J[8369]+1;u=ia[J[6782]](P(t,152),16)|0;g=J[a+88>>2]}else{g=h}b:{if((g|0)<=0){break b}l=0;if((g|0)!=1){A=g&-2;while(1){s=P(l,152);sa(s+u|0,s+J[a+96>>2]|0,152);s=P(l|1,152);sa(s+u|0,s+J[a+96>>2]|0,152);l=l+2|0;z=z+2|0;if((z|0)!=(A|0)){continue}break}}if(!(g&1)){break b}g=P(l,152);sa(g+u|0,g+J[a+96>>2]|0,152)}g=J[a+96>>2];if(!(g?!g|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+96>>2]=u;H[a+100|0]=1;J[a+92>>2]=t;l=J[a+88>>2]}J[a+88>>2]=l+1;g=J[a+96>>2]+P(h,152)|0;J[g+140>>2]=e;J[g+48>>2]=-2147483648;J[g+52>>2]=-2147483648;J[g+16>>2]=0;J[g+20>>2]=0;J[g+56>>2]=-2147483648;J[g+60>>2]=0;J[g+24>>2]=0;J[g+28>>2]=0;a=J[a+16>>2];h=J[(a+P(c,244)|0)+240>>2];e=J[(a+P(d,244)|0)+240>>2];J[g+148>>2]=d;J[g+144>>2]=c;y=N[f+88>>2];J[g+132>>2]=0;N[g+104>>2]=y;J[g+96>>2]=0;J[g+100>>2]=0;i=N[b>>2];j=N[b+4>>2];v=N[b+8>>2];J[g+12>>2]=0;m=Q(-v);N[g+8>>2]=m;n=Q(-j);N[g+4>>2]=n;o=Q(-i);N[g>>2]=o;i=Q(0);j=Q(0);if(h){j=Q(Q(Q(N[h+304>>2]*m)+Q(Q(N[h+296>>2]*o)+Q(N[h+300>>2]*n)))*N[h+552>>2]);i=Q(Q(Q(N[h+288>>2]*m)+Q(Q(N[h+280>>2]*o)+Q(N[h+284>>2]*n)))*N[h+548>>2]);k=Q(Q(Q(N[h+272>>2]*m)+Q(Q(N[h+264>>2]*o)+Q(N[h+268>>2]*n)))*N[h+544>>2])}else{k=Q(0)}N[g+64>>2]=k;J[g+76>>2]=0;N[g+72>>2]=j;N[g+68>>2]=i;j=N[b>>2];k=N[b+4>>2];p=N[b+8>>2];N[g+44>>2]=N[b+12>>2];N[g+40>>2]=p;N[g+36>>2]=k;N[g+32>>2]=j;if(e){q=Q(Q(Q(N[e+304>>2]*p)+Q(Q(N[e+296>>2]*j)+Q(k*N[e+300>>2])))*N[e+552>>2]);r=Q(Q(Q(N[e+288>>2]*p)+Q(Q(N[e+280>>2]*j)+Q(k*N[e+284>>2])))*N[e+548>>2]);i=Q(Q(Q(N[e+272>>2]*p)+Q(Q(N[e+264>>2]*j)+Q(k*N[e+268>>2])))*N[e+544>>2])}else{i=Q(0)}N[g+80>>2]=i;J[g+92>>2]=0;N[g+88>>2]=q;N[g+84>>2]=r;r=Q(0);q=Q(0);if(h){r=Q(Q(N[h+272>>2]*m)+Q(Q(N[h+264>>2]*o)+Q(N[h+268>>2]*n)));q=Q(Q(N[h+288>>2]*m)+Q(Q(N[h+280>>2]*o)+Q(N[h+284>>2]*n)));i=Q(Q(N[h+304>>2]*m)+Q(Q(N[h+296>>2]*o)+Q(N[h+300>>2]*n)))}else{i=Q(0)}q=Q(Q(Q(i*m)+Q(Q(r*o)+Q(q*n)))+Q(0));if(e){w=Q(Q(N[e+288>>2]*p)+Q(Q(N[e+280>>2]*j)+Q(k*N[e+284>>2])));x=Q(Q(N[e+272>>2]*p)+Q(Q(N[e+264>>2]*j)+Q(N[e+268>>2]*k)));i=Q(Q(N[e+304>>2]*p)+Q(Q(N[e+296>>2]*j)+Q(k*N[e+300>>2])))}else{i=Q(0)}v=Q(Q(1)/Q(q+Q(Q(i*p)+Q(Q(x*j)+Q(w*k)))));N[g+108>>2]=v;x=Q(0);r=Q(0);q=Q(0);w=Q(0);if(h){b=a+P(c,244)|0;x=Q(N[b+176>>2]+N[b+208>>2]);B=N[b+200>>2];w=N[b+196>>2];r=Q(Q(N[b+180>>2]+N[b+212>>2])*Q(0));q=Q(N[b+184>>2]+N[b+216>>2]);C=N[b+192>>2]}i=Q(-0);if(e){a=a+P(d,244)|0;D=Q(N[a+176>>2]+N[a+208>>2]);E=Q(N[a+184>>2]+N[a+216>>2]);F=N[a+192>>2];G=N[a+200>>2];i=Q(Q(N[a+180>>2]+N[a+212>>2])*Q(-0));I=N[a+196>>2]}N[g+124>>2]=y;N[g+116>>2]=0;N[g+120>>2]=-y;N[g+112>>2]=v*Q(Q(0)-Q(Q(Q(Q(q*Q(0))+Q(Q(x*Q(0))+r))+Q(Q(m*B)+Q(Q(o*C)+Q(w*n))))+Q(Q(Q(E*Q(-0))+Q(Q(D*Q(-0))+i))+Q(Q(p*G)+Q(Q(j*F)+Q(k*I))))))}function Al(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=0,h=Q(0),i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=0;g=ga-528|0;ga=g;k=N[a+20>>2];d=Q(k-N[a+4>>2]);e=N[a+56>>2];h=N[a+52>>2];m=N[a+24>>2];l=Q(m-N[a+8>>2]);f=Q(Q(d*e)-Q(h*l));q=f;n=N[a+16>>2];p=Q(n-N[a>>2]);r=Q(p*h);h=N[a+48>>2];d=Q(r-Q(h*d));r=Q(f*f);f=Q(Q(l*h)-Q(e*p));e=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(r+Q(f*f))))));h=Q(q*e);N[g+256>>2]=h;f=Q(f*e);N[g+260>>2]=f;d=Q(d*e);N[g+264>>2]=d;N[g+268>>2]=Q(m*d)+Q(Q(n*h)+Q(k*f));o=g+272|0;d=N[g+264>>2];e=N[g+256>>2];k=N[g+260>>2];h=N[g+268>>2];f=Q(Q(Q(N[b+8>>2]*d)+Q(Q(N[b>>2]*e)+Q(N[b+4>>2]*k)))-h);i=f>Q(1.1920928955078125e-7);if(!i){j=J[b+4>>2];J[o>>2]=J[b>>2];J[o+4>>2]=j;j=J[b+12>>2];J[o+8>>2]=J[b+8>>2];J[o+12>>2]=j;h=N[g+268>>2];d=N[g+264>>2];k=N[g+260>>2];e=N[g+256>>2];j=1}m=N[b+24>>2];l=N[b+16>>2];n=N[b+20>>2];d=Q(Q(Q(m*d)+Q(Q(l*e)+Q(n*k)))-h);if((i|0)!=(d>Q(1.1920928955078125e-7)|0)){h=N[b>>2];p=N[b+4>>2];q=N[b+8>>2];i=o+(j<<4)|0;J[i+12>>2]=0;e=Q(Q(-f)/Q(d-f));k=Q(Q(1)-e);N[i+8>>2]=Q(m*e)+Q(q*k);N[i+4>>2]=Q(n*e)+Q(k*p);N[i>>2]=Q(l*e)+Q(k*h);j=j+1|0}t=d>Q(1.1920928955078125e-7);if(!t){s=J[b+20>>2];i=o+(j<<4)|0;J[i>>2]=J[b+16>>2];J[i+4>>2]=s;s=J[b+28>>2];J[i+8>>2]=J[b+24>>2];J[i+12>>2]=s;j=j+1|0}h=N[b+40>>2];m=N[b+32>>2];l=N[b+36>>2];e=Q(Q(Q(h*N[g+264>>2])+Q(Q(m*N[g+256>>2])+Q(l*N[g+260>>2])))-N[g+268>>2]);if((t|0)!=(e>Q(1.1920928955078125e-7)|0)){n=N[b+16>>2];p=N[b+20>>2];q=N[b+24>>2];i=o+(j<<4)|0;J[i+12>>2]=0;d=Q(Q(-d)/Q(e-d));k=Q(Q(1)-d);N[i+8>>2]=Q(h*d)+Q(q*k);N[i+4>>2]=Q(l*d)+Q(k*p);N[i>>2]=Q(m*d)+Q(k*n);j=j+1|0}t=e>Q(1.1920928955078125e-7);if(!t){s=J[b+36>>2];i=o+(j<<4)|0;J[i>>2]=J[b+32>>2];J[i+4>>2]=s;s=J[b+44>>2];J[i+8>>2]=J[b+40>>2];J[i+12>>2]=s;j=j+1|0}if((t|0)!=(f>Q(1.1920928955078125e-7)|0)){k=N[b+32>>2];h=N[b>>2];m=N[b+36>>2];l=N[b+4>>2];d=N[b+40>>2];n=N[b+8>>2];i=o+(j<<4)|0;J[i+12>>2]=0;q=d;d=Q(Q(-e)/Q(f-e));e=Q(Q(1)-d);N[i+8>>2]=Q(q*e)+Q(d*n);N[i+4>>2]=Q(e*m)+Q(d*l);N[i>>2]=Q(e*k)+Q(d*h);j=j+1|0}if(f>Q(1.1920928955078125e-7)){b=j}else{i=J[b+4>>2];o=o+(j<<4)|0;J[o>>2]=J[b>>2];J[o+4>>2]=i;i=J[b+12>>2];J[o+8>>2]=J[b+8>>2];J[o+12>>2]=i;b=j+1|0}j=0;a:{if(!b){break a}k=N[a+40>>2];e=Q(k-N[a+24>>2]);d=N[a+48>>2];h=N[a+56>>2];m=N[a+32>>2];l=Q(m-N[a+16>>2]);f=Q(Q(e*d)-Q(h*l));q=f;r=l;l=N[a+52>>2];n=N[a+36>>2];p=Q(n-N[a+20>>2]);d=Q(Q(r*l)-Q(d*p));e=Q(Q(p*h)-Q(l*e));f=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(Q(e*e)+Q(f*f))))));h=Q(q*f);N[g+260>>2]=h;e=Q(e*f);N[g+256>>2]=e;f=Q(d*f);N[g+264>>2]=f;N[g+268>>2]=Q(k*f)+Q(Q(m*e)+Q(n*h));b=zl(g+256|0,g+272|0,b,g);j=0;if(!b){break a}k=N[a+8>>2];e=Q(k-N[a+40>>2]);d=N[a+48>>2];h=N[a+56>>2];m=N[a>>2];l=Q(m-N[a+32>>2]);f=Q(Q(e*d)-Q(h*l));q=f;r=l;l=N[a+52>>2];n=N[a+4>>2];p=Q(n-N[a+36>>2]);d=Q(Q(r*l)-Q(d*p));e=Q(Q(p*h)-Q(l*e));f=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(Q(e*e)+Q(f*f))))));h=Q(q*f);N[g+260>>2]=h;e=Q(e*f);N[g+256>>2]=e;f=Q(d*f);N[g+264>>2]=f;N[g+268>>2]=Q(k*f)+Q(Q(m*e)+Q(n*h));j=zl(g+256|0,g,b,c)}ga=g+528|0;return j}function ta(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0;a:{if(!a){break a}d=a-8|0;b=J[a-4>>2];a=b&-8;f=d+a|0;b:{if(b&1){break b}if(!(b&3)){break a}b=J[d>>2];d=d-b|0;if(d>>>0<M[8391]){break a}a=a+b|0;if(J[8392]!=(d|0)){if(b>>>0<=255){e=J[d+8>>2];b=b>>>3|0;c=J[d+12>>2];if((c|0)==(e|0)){J[8387]=J[8387]&kI(b);break b}J[e+12>>2]=c;J[c+8>>2]=e;break b}h=J[d+24>>2];b=J[d+12>>2];c:{if((d|0)!=(b|0)){c=J[d+8>>2];J[c+12>>2]=b;J[b+8>>2]=c;break c}d:{e=d+20|0;c=J[e>>2];if(c){break d}e=d+16|0;c=J[e>>2];if(c){break d}b=0;break c}while(1){g=e;b=c;e=b+20|0;c=J[e>>2];if(c){continue}e=b+16|0;c=J[b+16>>2];if(c){continue}break}J[g>>2]=0}if(!h){break b}e=J[d+28>>2];c=(e<<2)+33852|0;e:{if(J[c>>2]==(d|0)){J[c>>2]=b;if(b){break e}J[8388]=J[8388]&kI(e);break b}J[h+(J[h+16>>2]==(d|0)?16:20)>>2]=b;if(!b){break b}}J[b+24>>2]=h;c=J[d+16>>2];if(c){J[b+16>>2]=c;J[c+24>>2]=b}c=J[d+20>>2];if(!c){break b}J[b+20>>2]=c;J[c+24>>2]=b;break b}b=J[f+4>>2];if((b&3)!=3){break b}J[8389]=a;J[f+4>>2]=b&-2;J[d+4>>2]=a|1;J[a+d>>2]=a;return}if(d>>>0>=f>>>0){break a}b=J[f+4>>2];if(!(b&1)){break a}f:{if(!(b&2)){if(J[8393]==(f|0)){J[8393]=d;a=J[8390]+a|0;J[8390]=a;J[d+4>>2]=a|1;if(J[8392]!=(d|0)){break a}J[8389]=0;J[8392]=0;return}if(J[8392]==(f|0)){J[8392]=d;a=J[8389]+a|0;J[8389]=a;J[d+4>>2]=a|1;J[a+d>>2]=a;return}a=(b&-8)+a|0;g:{if(b>>>0<=255){e=J[f+8>>2];b=b>>>3|0;c=J[f+12>>2];if((c|0)==(e|0)){J[8387]=J[8387]&kI(b);break g}J[e+12>>2]=c;J[c+8>>2]=e;break g}h=J[f+24>>2];b=J[f+12>>2];h:{if((f|0)!=(b|0)){c=J[f+8>>2];J[c+12>>2]=b;J[b+8>>2]=c;break h}i:{e=f+20|0;c=J[e>>2];if(c){break i}e=f+16|0;c=J[e>>2];if(c){break i}b=0;break h}while(1){g=e;b=c;e=b+20|0;c=J[e>>2];if(c){continue}e=b+16|0;c=J[b+16>>2];if(c){continue}break}J[g>>2]=0}if(!h){break g}e=J[f+28>>2];c=(e<<2)+33852|0;j:{if(J[c>>2]==(f|0)){J[c>>2]=b;if(b){break j}J[8388]=J[8388]&kI(e);break g}J[h+(J[h+16>>2]==(f|0)?16:20)>>2]=b;if(!b){break g}}J[b+24>>2]=h;c=J[f+16>>2];if(c){J[b+16>>2]=c;J[c+24>>2]=b}c=J[f+20>>2];if(!c){break g}J[b+20>>2]=c;J[c+24>>2]=b}J[d+4>>2]=a|1;J[a+d>>2]=a;if(J[8392]!=(d|0)){break f}J[8389]=a;return}J[f+4>>2]=b&-2;J[d+4>>2]=a|1;J[a+d>>2]=a}if(a>>>0<=255){a=a>>>3|0;b=(a<<3)+33588|0;c=J[8387];a=1<<a;k:{if(!(c&a)){J[8387]=a|c;a=b;break k}a=J[b+8>>2]}J[b+8>>2]=d;J[a+12>>2]=d;J[d+12>>2]=b;J[d+8>>2]=a;return}e=31;J[d+16>>2]=0;J[d+20>>2]=0;if(a>>>0<=16777215){b=a>>>8|0;g=b+1048320>>>16&8;b=b<<g;e=b+520192>>>16&4;b=b<<e;c=b+245760>>>16&2;b=(b<<c>>>15|0)-(c|(e|g))|0;e=(b<<1|a>>>b+21&1)+28|0}J[d+28>>2]=e;g=(e<<2)+33852|0;l:{m:{c=J[8388];b=1<<e;n:{if(!(c&b)){J[8388]=b|c;J[g>>2]=d;J[d+24>>2]=g;break n}e=a<<((e|0)==31?0:25-(e>>>1|0)|0);b=J[g>>2];while(1){c=b;if((J[b+4>>2]&-8)==(a|0)){break m}b=e>>>29|0;e=e<<1;g=c+(b&4)|0;b=J[g+16>>2];if(b){continue}break}J[g+16>>2]=d;J[d+24>>2]=c}J[d+12>>2]=d;J[d+8>>2]=d;break l}a=J[c+8>>2];J[a+12>>2]=d;J[c+8>>2]=d;J[d+24>>2]=0;J[d+12>>2]=c;J[d+8>>2]=a}a=J[8395]-1|0;J[8395]=a?a:-1}}function oh(a,b,c,d,e,f,g,h,i){var j=0,k=0,l=0,m=0,n=Q(0),o=0,p=0,q=Q(0),r=0,s=0,t=0,u=Q(0),v=Q(0),w=0,x=0,y=0,z=0,A=Q(0),B=Q(0),C=Q(0);o=ga-32|0;ga=o;if(b){k=J[a+44>>2];a:{if((k|0)>127){break a}if(J[a+48>>2]<=127){J[8369]=J[8369]+1;r=ia[J[6782]](512,16)|0;w=J[a+44>>2];b:{if((w|0)<=0){break b}if(w-1>>>0>=3){x=w&-4;while(1){s=j<<2;J[s+r>>2]=J[s+J[a+52>>2]>>2];l=s|4;J[l+r>>2]=J[l+J[a+52>>2]>>2];l=s|8;J[l+r>>2]=J[l+J[a+52>>2]>>2];l=s|12;J[l+r>>2]=J[l+J[a+52>>2]>>2];j=j+4|0;p=p+4|0;if((x|0)!=(p|0)){continue}break}}x=w&3;if(!x){break b}while(1){l=j<<2;J[l+r>>2]=J[l+J[a+52>>2]>>2];j=j+1|0;m=m+1|0;if((x|0)!=(m|0)){continue}break}}j=J[a+52>>2];if(!(j?!j|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](j)}J[a+52>>2]=r;H[a+56|0]=1;J[a+48>>2]=128}j=k;l=0-j&3;if(l){while(1){J[J[a+52>>2]+(j<<2)>>2]=0;j=j+1|0;y=y+1|0;if((l|0)!=(y|0)){continue}break}}if(k-125>>>0<3){break a}while(1){k=j<<2;J[k+J[a+52>>2]>>2]=0;J[(k+J[a+52>>2]|0)+4>>2]=0;J[(k+J[a+52>>2]|0)+8>>2]=0;J[(k+J[a+52>>2]|0)+12>>2]=0;j=j+4|0;if((j|0)!=128){continue}break}}J[a+44>>2]=128;J[J[a+52>>2]>>2]=b;m=126;y=1;while(1){j=J[a+52>>2];b=y-1|0;x=b<<2;t=J[j+x>>2];A=N[t>>2];B=N[t+4>>2];u=N[t+8>>2];v=N[h>>2];q=N[h+4>>2];n=N[h+8>>2];J[o+12>>2]=0;N[o+8>>2]=u-n;N[o+4>>2]=B-q;N[o>>2]=A-v;u=N[t+16>>2];v=N[t+20>>2];q=N[g>>2];n=N[g+4>>2];N[o+24>>2]=N[t+24>>2]-N[g+8>>2];N[o+20>>2]=v-n;N[o+16>>2]=u-q;l=J[e>>2];u=N[c>>2];v=N[d>>2];C=Q(Q(N[(l<<4)+o>>2]-u)*v);q=N[d+4>>2];k=J[e+4>>2];n=N[c+4>>2];A=Q(q*Q(N[((1-k<<4)+o|0)+4>>2]-n));c:{if(C>A){break c}n=Q(Q(N[((k<<4)+o|0)+4>>2]-n)*q);B=Q(v*Q(N[(1-l<<4)+o>>2]-u));if(n>B){break c}u=n>C?n:C;q=N[d+8>>2];k=J[e+8>>2];n=N[c+8>>2];v=Q(q*Q(N[((1-k<<4)+o|0)+8>>2]-n));if(u>v){break c}q=Q(Q(N[((k<<4)+o|0)+8>>2]-n)*q);n=A<B?A:B;if(q>n|!((q>u?q:u)<f)|!((n>v?v:n)>Q(0))){break c}if(J[t+40>>2]){if((b|0)>(m|0)){m=J[a+44>>2];z=m<<1;d:{if((m|0)>=(z|0)){break d}if((z|0)>J[a+48>>2]){e:{if(!m){j=0;break e}J[8369]=J[8369]+1;j=ia[J[6782]](m<<3,16)|0;s=J[a+44>>2];if((s|0)<=0){break e}w=0;p=0;if(s-1>>>0>=3){k=s&-4;l=0;while(1){r=p<<2;J[r+j>>2]=J[r+J[a+52>>2]>>2];b=r|4;J[b+j>>2]=J[b+J[a+52>>2]>>2];b=r|8;J[b+j>>2]=J[b+J[a+52>>2]>>2];b=r|12;J[b+j>>2]=J[b+J[a+52>>2]>>2];p=p+4|0;l=l+4|0;if((k|0)!=(l|0)){continue}break}}k=s&3;if(!k){break e}while(1){b=p<<2;J[b+j>>2]=J[b+J[a+52>>2]>>2];p=p+1|0;w=w+1|0;if((k|0)!=(w|0)){continue}break}}b=J[a+52>>2];if(!(b?!b|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+52>>2]=j;H[a+56|0]=1;J[a+48>>2]=z}k=m-1|0;p=0;b=m&3;if(b){while(1){J[(m<<2)+j>>2]=0;m=m+1|0;j=J[a+52>>2];p=p+1|0;if((b|0)!=(p|0)){continue}break}}if(k>>>0<3){break d}while(1){b=m<<2;J[b+j>>2]=0;J[(b+J[a+52>>2]|0)+4>>2]=0;J[(b+J[a+52>>2]|0)+8>>2]=0;J[(b+J[a+52>>2]|0)+12>>2]=0;j=J[a+52>>2];m=m+4|0;if((z|0)!=(m|0)){continue}break}}J[a+44>>2]=z;m=z-2|0}J[j+x>>2]=J[t+36>>2];J[J[a+52>>2]+(y<<2)>>2]=J[t+40>>2];b=y+1|0;break c}ia[J[J[i>>2]+12>>2]](i,t)}y=b;if(b){continue}break}}ga=o+32|0}function xn(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=h;q=ga-16|0;ga=q;Jd(a,q+10|0,b,0);Jd(a,q+4|0,c,1);h=J[a+60>>2];p=a;r=L[a+64>>1];o=h+(r<<6)|0;I[a+64>>1]=L[o+48>>1];j=L[a+56>>1]+1|0;I[a+56>>1]=j;J[o+8>>2]=i;I[o+6>>1]=g;I[o+4>>1]=f;J[o>>2]=e;J[o+12>>2]=r;I[h+54>>1]=L[h+54>>1]+2;h=J[a+68>>2];i=j<<1;l=i&65534;j=l<<2;k=j|4;m=h+k|0;n=h;l=l-1|0;h=l<<2;n=n+h|0;n=L[n>>1]|L[n+2>>1]<<16;I[m>>1]=n;I[m+2>>1]=n>>>16;m=L[q+10>>1];n=J[a+68>>2];s=n+h|0;I[s+2>>1]=r;I[s>>1]=m;m=L[q+4>>1];n=j+n|0;I[n+2>>1]=r;I[n>>1]=m;I[o+54>>1]=i;I[o+48>>1]=l;m=J[a+60>>2];I[m+56>>1]=L[m+56>>1]+2;m=J[a+72>>2];n=m+k|0;m=h+m|0;m=L[m>>1]|L[m+2>>1]<<16;I[n>>1]=m;I[n+2>>1]=m>>>16;m=L[q+12>>1];n=J[a+72>>2];s=n+h|0;I[s+2>>1]=r;I[s>>1]=m;m=L[q+6>>1];n=j+n|0;I[n+2>>1]=r;I[n>>1]=m;I[o+56>>1]=i;I[o+50>>1]=l;m=J[a+60>>2];I[m+58>>1]=L[m+58>>1]+2;n=k;k=J[a+76>>2];m=n+k|0;k=h+k|0;k=L[k>>1]|L[k+2>>1]<<16;I[m>>1]=k;I[m+2>>1]=k>>>16;k=L[q+14>>1];n=h;h=J[a+76>>2];m=n+h|0;I[m+2>>1]=r;I[m>>1]=k;k=L[q+8>>1];h=h+j|0;I[h+2>>1]=r;I[h>>1]=k;I[o+58>>1]=i;I[o+52>>1]=l;h=J[a+68>>2];k=L[o+48>>1]<<2;a=h+k|0;i=a-4|0;j=L[i>>1];if(j>>>0>L[a>>1]){l=J[p+60>>2];k=l+(L[(h+k|0)+2>>1]<<6)|0;while(1){h=a-4|0;j=((L[h+2>>1]<<6)+l|0)+(j&1?54:48)|0;I[j>>1]=L[j>>1]+1;I[k+48>>1]=L[k+48>>1]-1;j=L[a>>1]|L[a+2>>1]<<16;l=L[i>>1]|L[i+2>>1]<<16;I[a>>1]=l;I[a+2>>1]=l>>>16;I[i>>1]=j;I[i+2>>1]=j>>>16;i=i-4|0;j=L[i>>1];if(j>>>0>L[h>>1]){l=J[p+60>>2];a=h;continue}break}h=J[p+68>>2]}a:{k=L[o+54>>1];a=(k<<2)+h|0;i=a-4|0;j=L[i>>1];if(j>>>0<=L[a>>1]){break a}l=J[p+60>>2];k=l+(L[((k<<2)+h|0)+2>>1]<<6)|0;while(1){h=a-4|0;j=((L[h+2>>1]<<6)+l|0)+(j&1?54:48)|0;I[j>>1]=L[j>>1]+1;I[k+54>>1]=L[k+54>>1]-1;j=L[a>>1]|L[a+2>>1]<<16;l=L[i>>1]|L[i+2>>1]<<16;I[a>>1]=l;I[a+2>>1]=l>>>16;I[i>>1]=j;I[i+2>>1]=j>>>16;i=i-4|0;j=L[i>>1];if(j>>>0<=L[h>>1]){break a}l=J[p+60>>2];a=h;continue}}h=J[p+72>>2];k=L[o+50>>1]<<2;a=h+k|0;i=a-4|0;j=L[i>>1];if(j>>>0>L[a>>1]){l=J[p+60>>2];k=l+(L[(h+k|0)+2>>1]<<6)|0;while(1){h=a-4|0;j=((L[h+2>>1]<<6)+l|0)+(j&1?54:48)|0;I[j+2>>1]=L[j+2>>1]+1;I[k+50>>1]=L[k+50>>1]-1;j=L[a>>1]|L[a+2>>1]<<16;l=L[i>>1]|L[i+2>>1]<<16;I[a>>1]=l;I[a+2>>1]=l>>>16;I[i>>1]=j;I[i+2>>1]=j>>>16;i=i-4|0;j=L[i>>1];if(j>>>0>L[h>>1]){l=J[p+60>>2];a=h;continue}break}h=J[p+72>>2]}b:{k=L[o+56>>1];a=(k<<2)+h|0;i=a-4|0;j=L[i>>1];if(j>>>0<=L[a>>1]){break b}l=J[p+60>>2];k=l+(L[((k<<2)+h|0)+2>>1]<<6)|0;while(1){h=a-4|0;j=((L[h+2>>1]<<6)+l|0)+(j&1?54:48)|0;I[j+2>>1]=L[j+2>>1]+1;I[k+56>>1]=L[k+56>>1]-1;j=L[a>>1]|L[a+2>>1]<<16;l=L[i>>1]|L[i+2>>1]<<16;I[a>>1]=l;I[a+2>>1]=l>>>16;I[i>>1]=j;I[i+2>>1]=j>>>16;i=i-4|0;j=L[i>>1];if(j>>>0<=L[h>>1]){break b}l=J[p+60>>2];a=h;continue}}Id(p,2,L[o+52>>1]);Hd(p,2,L[o+58>>1],t);ga=q+16|0;a=J[p+60>>2];h=J[p+108>>2];if(h){J[(a+(r<<6)|0)+60>>2]=ia[J[J[h>>2]+8>>2]](h,b,c,d,e,f,g,t,0)}return a+(r<<6)|0}function yA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;c=J[b+8>>2];a:{if((c|0)<=0){break a}d=J[b+16>>2];if((c|0)!=1){g=c&-2;while(1){i=e<<2;h=J[i+d>>2];if(!(K[h+204|0]&3)){J[h+208>>2]=f;f=f+1|0}J[h+244>>2]=1065353216;J[h+212>>2]=-1;h=J[d+(i|4)>>2];if(!(K[h+204|0]&3)){J[h+208>>2]=f;f=f+1|0}J[h+244>>2]=1065353216;J[h+212>>2]=-1;e=e+2|0;k=k+2|0;if((g|0)!=(k|0)){continue}break}}if(!(c&1)){break a}c=J[d+(e<<2)>>2];if(!(K[c+204|0]&3)){J[c+208>>2]=f;f=f+1|0}J[c+244>>2]=1065353216;J[c+212>>2]=-1}d=0;h=0;i=0;k=0;c=J[a+8>>2];b:{if((f|0)<=(c|0)){break b}if(J[a+12>>2]<(f|0)){if(f){J[8369]=J[8369]+1;h=ia[J[6782]](f<<3,16)|0;e=J[a+8>>2]}else{e=c}c:{if((e|0)<=0){break c}if(e-1>>>0>=3){n=e&-4;while(1){g=d<<3;j=g+h|0;l=g+J[a+16>>2]|0;m=J[l+4>>2];J[j>>2]=J[l>>2];J[j+4>>2]=m;j=g|8;l=j+h|0;j=j+J[a+16>>2]|0;m=J[j+4>>2];J[l>>2]=J[j>>2];J[l+4>>2]=m;j=g|16;l=j+h|0;j=j+J[a+16>>2]|0;m=J[j+4>>2];J[l>>2]=J[j>>2];J[l+4>>2]=m;g=g|24;j=g+h|0;g=g+J[a+16>>2]|0;l=J[g+4>>2];J[j>>2]=J[g>>2];J[j+4>>2]=l;d=d+4|0;i=i+4|0;if((n|0)!=(i|0)){continue}break}}e=e&3;if(!e){break c}while(1){g=d<<3;i=g+h|0;g=g+J[a+16>>2]|0;n=J[g+4>>2];J[i>>2]=J[g>>2];J[i+4>>2]=n;d=d+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}e=J[a+16>>2];if(!(e?!e|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+16>>2]=h;H[a+20|0]=1;J[a+12>>2]=f}e=(c^-1)+f|0;h=f-c&3;if(h){d=0;while(1){k=J[a+16>>2]+(c<<3)|0;J[k>>2]=0;J[k+4>>2]=0;c=c+1|0;d=d+1|0;if((h|0)!=(d|0)){continue}break}}if(e>>>0<3){break b}while(1){e=c<<3;d=e+J[a+16>>2]|0;J[d>>2]=0;J[d+4>>2]=0;d=e+J[a+16>>2]|0;J[d+8>>2]=0;J[d+12>>2]=0;d=e+J[a+16>>2]|0;J[d+16>>2]=0;J[d+20>>2]=0;e=e+J[a+16>>2]|0;J[e+24>>2]=0;J[e+28>>2]=0;c=c+4|0;if((f|0)!=(c|0)){continue}break}}J[a+8>>2]=f;d:{if((f|0)<=0){break d}e=J[a+16>>2];d=0;c=0;if(f-1>>>0>=3){k=f&-4;h=0;while(1){g=e+(c<<3)|0;J[g+4>>2]=1;J[g>>2]=c;g=c|1;i=e+(g<<3)|0;J[i+4>>2]=1;J[i>>2]=g;g=c|2;i=e+(g<<3)|0;J[i+4>>2]=1;J[i>>2]=g;g=c|3;i=e+(g<<3)|0;J[i+4>>2]=1;J[i>>2]=g;c=c+4|0;h=h+4|0;if((k|0)!=(h|0)){continue}break}}f=f&3;if(!f){break d}while(1){h=e+(c<<3)|0;J[h+4>>2]=1;J[h>>2]=c;c=c+1|0;d=d+1|0;if((f|0)!=(d|0)){continue}break}}e=0;b=J[b+68>>2];b=ia[J[J[b>>2]+36>>2]](b)|0;h=ia[J[J[b>>2]+36>>2]](b)|0;e:{if(!h){break e}k=ia[J[J[b>>2]+20>>2]](b)|0;if((h|0)<=0){break e}a=J[a+16>>2];while(1){b=k+(e<<4)|0;c=J[J[b>>2]>>2];f:{if(!c|K[c+204|0]&7){break f}b=J[J[b+4>>2]>>2];if(!b|K[b+204|0]&7){break f}b=J[b+208>>2];c=J[c+208>>2];f=a+(c<<3)|0;d=J[f>>2];if((c|0)!=(d|0)){while(1){c=a+(d<<3)|0;J[f>>2]=J[c>>2];c=J[c>>2];f=a+(c<<3)|0;d=J[f>>2];if((c|0)!=(d|0)){continue}break}}f=a+(b<<3)|0;d=J[f>>2];if((d|0)!=(b|0)){while(1){b=a+(d<<3)|0;J[f>>2]=J[b>>2];b=J[b>>2];f=a+(b<<3)|0;d=J[f>>2];if((b|0)!=(d|0)){continue}break}}if((b|0)==(c|0)){break f}c=a+(c<<3)|0;J[c>>2]=b;b=a+(b<<3)|0;J[b+4>>2]=J[b+4>>2]+J[c+4>>2]}e=e+1|0;if((h|0)!=(e|0)){continue}break}}}function Rl(){if(!K[30848]){J[7630]=1062847606;J[7631]=0;J[7628]=1042701022;J[7629]=1056964440;J[7626]=1062847606;J[7627]=0;J[7624]=-1093024784;J[7625]=1050556081;J[7622]=1062847606;J[7623]=0;J[7620]=-1093024784;J[7621]=-1096927567;J[7618]=1062847606;J[7619]=0;J[7616]=1042701022;J[7617]=-1090519208;J[7614]=1062847572;J[7615]=0;J[7612]=1057396286;J[7613]=0;J[7610]=1057396386;J[7611]=0;J[7608]=1060121912;J[7609]=1056964507;J[7606]=1057396420;J[7607]=0;J[7604]=-1098475836;J[7605]=1062148969;J[7602]=1057396386;J[7603]=0;J[7600]=-1084636143;J[7601]=0;J[7598]=1057396420;J[7599]=0;J[7596]=-1098475836;J[7597]=-1085334679;J[7594]=1057396386;J[7595]=0;J[7592]=1060121912;J[7593]=-1090519141;J[7590]=-2147483648;J[7591]=0;J[7588]=1058437413;J[7589]=1062149053;J[7586]=-2147483648;J[7587]=0;J[7584]=-2147483648;J[7585]=1065353216;J[7582]=-2147483648;J[7583]=0;J[7580]=-1089046235;J[7581]=1062149053;J[7578]=-2147483648;J[7579]=0;J[7576]=-1082951543;J[7577]=1050556148;J[7574]=-2147483648;J[7575]=0;J[7572]=-1082951543;J[7573]=-1096927500;J[7570]=0;J[7571]=0;J[7568]=-1089046235;J[7569]=-1085334595;J[7566]=0;J[7567]=0;J[7564]=0;J[7565]=-1082130432;J[7562]=0;J[7563]=0;J[7560]=1058437413;J[7561]=-1085334595;J[7558]=0;J[7559]=0;J[7556]=1064532105;J[7557]=-1096927500;J[7554]=0;J[7555]=0;J[7552]=1064532105;J[7553]=1050556148;J[7550]=-1090087228;J[7551]=0;J[7548]=1049007812;J[7549]=1062148969;J[7546]=-1090087262;J[7547]=0;J[7544]=-1087361736;J[7545]=1056964507;J[7542]=-1084636042;J[7543]=0;J[7540]=-1104782626;J[7541]=1056964440;J[7538]=-1090087262;J[7539]=0;J[7536]=-1087361736;J[7537]=-1090519141;J[7534]=-1084636076;J[7535]=0;J[7532]=-1090087362;J[7533]=-2147483648;J[7530]=-1090087262;J[7531]=0;J[7528]=1062847505;J[7529]=-2147483648;J[7526]=-1084636042;J[7527]=0;J[7524]=1054458864;J[7525]=1050556081;J[7522]=-1090087228;J[7523]=0;J[7520]=1049007812;J[7521]=-1085334679;J[7518]=-1084636042;J[7519]=0;J[7516]=-1104782626;J[7517]=-1090519208;J[7514]=-1084636042;J[7515]=0;J[7512]=1054458864;J[7513]=-1096927567;J[7510]=1065353216;J[7511]=0;J[7508]=-2147483648;J[7509]=0;J[7506]=1055193471;J[7507]=0;J[7504]=1063581978;J[7505]=0;J[7502]=1055193572;J[7503]=0;J[7500]=1049461434;J[7501]=1062847522;J[7498]=1055193572;J[7499]=0;J[7496]=-1086767520;J[7497]=1057396202;J[7494]=1055193572;J[7495]=0;J[7492]=-1086767520;J[7493]=-1090087446;J[7490]=1055193605;J[7491]=0;J[7488]=1049461434;J[7489]=-1084636126;J[7486]=-1092290076;J[7487]=0;J[7484]=1060716128;J[7485]=1057396202;J[7482]=-1092290043;J[7483]=0;J[7480]=-1098022214;J[7481]=1062847522;J[7478]=-1092290177;J[7479]=0;J[7476]=-1083901670;J[7477]=-2147483648;J[7474]=-1092290076;J[7475]=0;J[7472]=-1098022214;J[7473]=-1084636126;J[7470]=-1092290076;J[7471]=0;J[7468]=1060716128;J[7469]=-1090087446;J[7466]=-1082130432;J[7467]=0;J[7464]=0;J[7465]=-2147483648;H[30848]=1}}function Je(){if(!K[31872]){J[7886]=1062847606;J[7887]=0;J[7884]=1042701022;J[7885]=1056964440;J[7882]=1062847606;J[7883]=0;J[7880]=-1093024784;J[7881]=1050556081;J[7878]=1062847606;J[7879]=0;J[7876]=-1093024784;J[7877]=-1096927567;J[7874]=1062847606;J[7875]=0;J[7872]=1042701022;J[7873]=-1090519208;J[7870]=1062847572;J[7871]=0;J[7868]=1057396286;J[7869]=0;J[7866]=1057396386;J[7867]=0;J[7864]=1060121912;J[7865]=1056964507;J[7862]=1057396420;J[7863]=0;J[7860]=-1098475836;J[7861]=1062148969;J[7858]=1057396386;J[7859]=0;J[7856]=-1084636143;J[7857]=0;J[7854]=1057396420;J[7855]=0;J[7852]=-1098475836;J[7853]=-1085334679;J[7850]=1057396386;J[7851]=0;J[7848]=1060121912;J[7849]=-1090519141;J[7846]=-2147483648;J[7847]=0;J[7844]=1058437413;J[7845]=1062149053;J[7842]=-2147483648;J[7843]=0;J[7840]=-2147483648;J[7841]=1065353216;J[7838]=-2147483648;J[7839]=0;J[7836]=-1089046235;J[7837]=1062149053;J[7834]=-2147483648;J[7835]=0;J[7832]=-1082951543;J[7833]=1050556148;J[7830]=-2147483648;J[7831]=0;J[7828]=-1082951543;J[7829]=-1096927500;J[7826]=0;J[7827]=0;J[7824]=-1089046235;J[7825]=-1085334595;J[7822]=0;J[7823]=0;J[7820]=0;J[7821]=-1082130432;J[7818]=0;J[7819]=0;J[7816]=1058437413;J[7817]=-1085334595;J[7814]=0;J[7815]=0;J[7812]=1064532105;J[7813]=-1096927500;J[7810]=0;J[7811]=0;J[7808]=1064532105;J[7809]=1050556148;J[7806]=-1090087228;J[7807]=0;J[7804]=1049007812;J[7805]=1062148969;J[7802]=-1090087262;J[7803]=0;J[7800]=-1087361736;J[7801]=1056964507;J[7798]=-1084636042;J[7799]=0;J[7796]=-1104782626;J[7797]=1056964440;J[7794]=-1090087262;J[7795]=0;J[7792]=-1087361736;J[7793]=-1090519141;J[7790]=-1084636076;J[7791]=0;J[7788]=-1090087362;J[7789]=-2147483648;J[7786]=-1090087262;J[7787]=0;J[7784]=1062847505;J[7785]=-2147483648;J[7782]=-1084636042;J[7783]=0;J[7780]=1054458864;J[7781]=1050556081;J[7778]=-1090087228;J[7779]=0;J[7776]=1049007812;J[7777]=-1085334679;J[7774]=-1084636042;J[7775]=0;J[7772]=-1104782626;J[7773]=-1090519208;J[7770]=-1084636042;J[7771]=0;J[7768]=1054458864;J[7769]=-1096927567;J[7766]=1065353216;J[7767]=0;J[7764]=-2147483648;J[7765]=0;J[7762]=1055193471;J[7763]=0;J[7760]=1063581978;J[7761]=0;J[7758]=1055193572;J[7759]=0;J[7756]=1049461434;J[7757]=1062847522;J[7754]=1055193572;J[7755]=0;J[7752]=-1086767520;J[7753]=1057396202;J[7750]=1055193572;J[7751]=0;J[7748]=-1086767520;J[7749]=-1090087446;J[7746]=1055193605;J[7747]=0;J[7744]=1049461434;J[7745]=-1084636126;J[7742]=-1092290076;J[7743]=0;J[7740]=1060716128;J[7741]=1057396202;J[7738]=-1092290043;J[7739]=0;J[7736]=-1098022214;J[7737]=1062847522;J[7734]=-1092290177;J[7735]=0;J[7732]=-1083901670;J[7733]=-2147483648;J[7730]=-1092290076;J[7731]=0;J[7728]=-1098022214;J[7729]=-1084636126;J[7726]=-1092290076;J[7727]=0;J[7724]=1060716128;J[7725]=-1090087446;J[7722]=-1082130432;J[7723]=0;J[7720]=0;J[7721]=-2147483648;H[31872]=1}}function mg(a,b){var c=0,d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=0,A=0,B=Q(0),C=Q(0);i=ga-32|0;ga=i;c=J[a+192>>2];d=Q(ia[J[J[c>>2]+48>>2]](c));j=J[a+712>>2];if((j|0)>0){k=a+928|0;while(1){l=N[b+48>>2];m=N[b+8>>2];n=N[b+4>>2];o=N[b>>2];p=N[b+52>>2];q=N[b+24>>2];r=N[b+20>>2];s=N[b+16>>2];f=N[b+56>>2];h=N[b+40>>2];g=N[b+36>>2];t=N[b+32>>2];c=J[a+720>>2]+P(e,104)|0;J[c+20>>2]=0;w=f;f=N[c+16>>2];u=Q(h*f);h=N[c+8>>2];v=g;g=N[c+12>>2];t=Q(w+Q(u+Q(Q(t*h)+Q(v*g))));N[c+16>>2]=t;p=Q(p+Q(Q(f*q)+Q(Q(h*s)+Q(g*r))));N[c+12>>2]=p;l=Q(l+Q(Q(f*m)+Q(Q(h*o)+Q(g*n))));N[c+8>>2]=l;m=N[b+48>>2];n=N[b+8>>2];o=N[b>>2];q=N[b+4>>2];r=N[b+52>>2];s=N[b+24>>2];v=N[b+16>>2];u=N[b+20>>2];f=N[b+56>>2];h=N[b+40>>2];g=N[b+32>>2];x=N[b+36>>2];J[c+36>>2]=0;w=f;f=N[c+32>>2];B=Q(h*f);h=N[c+24>>2];C=Q(g*h);g=N[c+28>>2];N[c+32>>2]=w+Q(B+Q(C+Q(x*g)));N[c+28>>2]=r+Q(Q(f*s)+Q(Q(h*v)+Q(g*u)));N[c+24>>2]=m+Q(Q(f*n)+Q(Q(h*o)+Q(g*q)));f=N[c+80>>2];h=N[c+72>>2];g=N[c+76>>2];m=N[b+8>>2];n=N[b>>2];o=N[b+4>>2];q=N[b+24>>2];r=N[b+16>>2];s=N[b+20>>2];v=N[b+40>>2];u=N[b+32>>2];x=N[b+36>>2];J[c+84>>2]=0;N[c+80>>2]=Q(v*f)+Q(Q(u*h)+Q(g*x));N[c+76>>2]=Q(q*f)+Q(Q(r*h)+Q(g*s));N[c+72>>2]=Q(m*f)+Q(Q(n*h)+Q(o*g));J[i+28>>2]=0;N[i+24>>2]=d+t;N[i+20>>2]=d+p;N[i+16>>2]=d+l;J[i+12>>2]=0;N[i+8>>2]=t-d;N[i+4>>2]=p-d;N[i>>2]=l-d;Gc(k,J[c+96>>2],i);e=e+1|0;if((j|0)!=(e|0)){continue}break}}lg(a);c=J[a+928>>2];a:{if(c){e=J[a+192>>2];d=Q(ia[J[J[e>>2]+48>>2]](e));f=N[c>>2];h=N[c+4>>2];g=N[c+8>>2];J[a+904>>2]=0;N[a+900>>2]=g-d;N[a+896>>2]=h-d;N[a+892>>2]=f-d;f=N[c+20>>2];h=N[c+24>>2];g=N[c+16>>2];J[a+920>>2]=0;N[a+916>>2]=d+h;N[a+912>>2]=d+f;c=a+908|0;N[c>>2]=d+g;e=J[a+188>>2];if(!e){break a}j=J[a+684>>2];k=J[j+32>>2];ia[J[J[k>>2]+16>>2]](k,e,a+892|0,c,J[j+36>>2]);break a}J[a+892>>2]=0;J[a+896>>2]=0;J[a+916>>2]=0;J[a+920>>2]=0;J[a+908>>2]=0;J[a+912>>2]=0;J[a+900>>2]=0;J[a+904>>2]=0}k=J[a+732>>2];if((k|0)>0){A=J[a+740>>2];e=0;c=0;while(1){j=P(c,52)+A|0;y=J[j+8>>2];z=J[j+12>>2];d=Q(N[y+16>>2]-N[z+16>>2]);f=Q(d*d);d=Q(N[y+8>>2]-N[z+8>>2]);g=Q(d*d);d=Q(N[y+12>>2]-N[z+12>>2]);d=Q(Y(Q(f+Q(g+Q(d*d)))));N[j+16>>2]=d;N[j+28>>2]=d*d;c=c+1|0;if((k|0)!=(c|0)){continue}break}while(1){c=P(e,52)+A|0;N[c+24>>2]=Q(N[J[c+8>>2]+88>>2]+N[J[c+12>>2]+88>>2])/N[J[c+4>>2]+4>>2];e=e+1|0;if((k|0)!=(e|0)){continue}break}}kg(a);e=J[b+12>>2];c=a+1156|0;J[c>>2]=J[b+8>>2];J[c+4>>2]=e;c=J[b+4>>2];J[a+1148>>2]=J[b>>2];J[a+1152>>2]=c;e=J[b+28>>2];c=a+1172|0;J[c>>2]=J[b+24>>2];J[c+4>>2]=e;e=J[b+20>>2];c=a+1164|0;J[c>>2]=J[b+16>>2];J[c+4>>2]=e;e=J[b+36>>2];c=a+1180|0;J[c>>2]=J[b+32>>2];J[c+4>>2]=e;e=J[b+44>>2];c=a+1188|0;J[c>>2]=J[b+40>>2];J[c+4>>2]=e;e=J[b+60>>2];c=a+1204|0;J[c>>2]=J[b+56>>2];J[c+4>>2]=e;c=J[b+52>>2];a=a+1196|0;J[a>>2]=J[b+48>>2];J[a+4>>2]=c;ga=i+32|0}function xo(a,b,c,d,e,f){a=a|0;b=Q(b);c=Q(c);d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=ga-496|0;ga=g;J[g+492>>2]=a;N[g+488>>2]=b;N[g+484>>2]=c;J[g+480>>2]=d;J[g+476>>2]=e;J[g+472>>2]=f;a=J[g+492>>2];J[g+468>>2]=30;N[g+444>>2]=0;N[g+440>>2]=0;N[g+436>>2]=0;e=g+448|0;na(e,g+444|0,g+440|0,g+436|0);b=Q(-N[g+484>>2]);d=ga-16|0;J[d+12>>2]=e;N[J[d+12>>2]+(J[g+480>>2]<<2)>>2]=b;N[g+412>>2]=0;N[g+408>>2]=0;N[g+404>>2]=0;h=g+416|0;na(h,g+412|0,g+408|0,g+404|0);b=N[g+484>>2];d=ga-16|0;J[d+12>>2]=h;N[J[d+12>>2]+(J[g+480>>2]<<2)>>2]=b;d=g+336|0;_b(d,J[g+476>>2]);za(g+320|0,J[g+476>>2],e);e=ga-16|0;J[e+12>>2]=d;f=J[g+324>>2];e=J[e+12>>2]+48|0;J[e>>2]=J[g+320>>2];J[e+4>>2]=f;f=J[g+332>>2];J[e+8>>2]=J[g+328>>2];J[e+12>>2]=f;f=ga-16|0;J[f+12>>2]=d;f=J[f+12>>2]+48|0;i=J[f+4>>2];e=g+304|0;J[e>>2]=J[f>>2];J[e+4>>2]=i;i=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=i;f=ga-16|0;J[f+12>>2]=d;i=g+288|0;pc(i,J[f+12>>2],(J[g+480>>2]+1|0)%3|0);f=ga-16|0;J[f+12>>2]=d;d=g+256|0;pc(d,J[f+12>>2],J[g+480>>2]);f=g+272|0;$b(f,d);N[g+252>>2]=-1.5707963705062866;N[g+248>>2]=1.5707963705062866;N[g+244>>2]=-1.5707963705062866;N[g+240>>2]=1.5707963705062866;ia[J[J[a>>2]+64>>2]](a,e,i,f,N[g+488>>2],N[g+252>>2],N[g+248>>2],N[g+244>>2],N[g+240>>2],J[g+472>>2],Q(J[g+468>>2]),0);d=g+176|0;_b(d,J[g+476>>2]);za(g+160|0,J[g+476>>2],h);e=ga-16|0;J[e+12>>2]=d;f=J[g+164>>2];e=J[e+12>>2]+48|0;J[e>>2]=J[g+160>>2];J[e+4>>2]=f;f=J[g+172>>2];J[e+8>>2]=J[g+168>>2];J[e+12>>2]=f;f=ga-16|0;J[f+12>>2]=d;f=J[f+12>>2]+48|0;h=J[f+4>>2];e=g+144|0;J[e>>2]=J[f>>2];J[e+4>>2]=h;h=J[f+12>>2];J[e+8>>2]=J[f+8>>2];J[e+12>>2]=h;f=ga-16|0;J[f+12>>2]=d;h=g+128|0;pc(h,J[f+12>>2],(J[g+480>>2]+1|0)%3|0);f=ga-16|0;J[f+12>>2]=d;d=g+112|0;pc(d,J[f+12>>2],J[g+480>>2]);N[g+108>>2]=-1.5707963705062866;N[g+104>>2]=1.5707963705062866;N[g+100>>2]=-1.5707963705062866;N[g+96>>2]=1.5707963705062866;ia[J[J[a>>2]+64>>2]](a,e,h,d,N[g+488>>2],N[g+108>>2],N[g+104>>2],N[g+100>>2],N[g+96>>2],J[g+472>>2],Q(J[g+468>>2]),0);d=ga-16|0;J[d+12>>2]=J[g+476>>2];d=J[d+12>>2]+48|0;e=J[d+4>>2];J[g+80>>2]=J[d>>2];J[g+84>>2]=e;e=J[d+12>>2];J[g+88>>2]=J[d+8>>2];J[g+92>>2]=e;J[g+76>>2]=0;while(1){if(J[g+76>>2]<360){b=Q(Sa(Q(Q(J[g+76>>2])*Q(.01745329238474369)))*N[g+488>>2]);d=ga-16|0;e=g+448|0;J[d+12>>2]=e;N[J[d+12>>2]+((J[g+480>>2]+1|0)%3<<2)>>2]=b;f=g+416|0;J[d+12>>2]=f;N[J[d+12>>2]+((J[g+480>>2]+1|0)%3<<2)>>2]=b;b=Q(Ta(Q(Q(J[g+76>>2])*Q(.01745329238474369)))*N[g+488>>2]);d=ga-16|0;J[d+12>>2]=e;N[J[d+12>>2]+((J[g+480>>2]+2|0)%3<<2)>>2]=b;d=ga-16|0;J[d+12>>2]=f;N[J[d+12>>2]+((J[g+480>>2]+2|0)%3<<2)>>2]=b;d=ga-16|0;J[d+12>>2]=J[g+476>>2];h=g+40|0;wa(h,J[d+12>>2],e);d=g+56|0;e=g+80|0;va(d,e,h);h=ga-16|0;J[h+12>>2]=J[g+476>>2];i=g+8|0;wa(i,J[h+12>>2],f);f=g+24|0;va(f,e,i);ia[J[J[a>>2]+8>>2]](a,d,f,J[g+472>>2]);J[g+76>>2]=J[g+468>>2]+J[g+76>>2];continue}break}ga=g+496|0}function Me(a,b,c,d,e){var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=0;f=Q(-1);l=N[a>>2];i=N[b>>2];g=Q(l-i);k=N[b+4>>2];u=N[c+4>>2];z=Q(k-u);v=N[c>>2];A=Q(i-v);q=N[a+4>>2];j=Q(q-k);m=Q(Q(g*z)-Q(A*j));h=N[b+8>>2];w=N[c+8>>2];B=Q(h-w);r=N[a+8>>2];o=Q(r-h);x=Q(Q(j*B)-Q(z*o));y=Q(Q(o*A)-Q(B*g));D=Q(Q(m*m)+Q(Q(x*x)+Q(y*y)));a:{if(!(D>Q(0))){break a}b:{if(!(Q(Q(r*Q(Q(g*y)+Q(x*Q(-j))))+Q(Q(l*Q(Q(j*m)+Q(y*Q(-o))))+Q(q*Q(Q(o*x)+Q(m*Q(-g))))))>Q(0))){j=Q(-1);g=Q(0);break b}j=Q(-1);o=Q(h-r);n=Q(i-l);p=Q(k-q);f=Q(Q(o*o)+Q(Q(n*n)+Q(p*p)));c:{if(!(f>Q(0))){g=Q(0);s=0;break c}g=Q(1);f=Q(Q(-Q(Q(r*o)+Q(Q(l*n)+Q(q*p))))/f);if(f>=Q(1)){j=Q(Q(h*h)+Q(Q(i*i)+Q(k*k)));s=2;break c}g=Q(0);if(f<=Q(0)){j=Q(Q(r*r)+Q(Q(l*l)+Q(q*q)));t=Q(1);s=1;break c}g=Q(r+Q(o*f));j=Q(g*g);g=Q(l+Q(n*f));i=Q(g*g);g=Q(q+Q(p*f));j=Q(j+Q(i+Q(g*g)));t=Q(Q(1)-f);g=f;s=3}J[e>>2]=s;J[d+8>>2]=0;N[d+4>>2]=g;N[d>>2]=t;h=N[b+8>>2];k=N[b+4>>2];i=N[b>>2]}r=Q(w-r);q=Q(u-q);o=Q(v-l);d:{if(!(Q(Q(h*Q(Q(A*y)-Q(x*z)))+Q(Q(i*Q(Q(z*m)-Q(y*B)))+Q(k*Q(Q(B*x)-Q(m*A)))))>Q(0))){f=j;break d}E=j<Q(0);u=N[c+8>>2];l=Q(u-h);v=N[c>>2];n=Q(v-i);w=N[c+4>>2];p=Q(w-k);C=Q(Q(l*l)+Q(Q(n*n)+Q(p*p)));f=Q(-1);e:{if(!(C>Q(0))){break e}g=Q(1);f=Q(Q(-Q(Q(h*l)+Q(Q(i*n)+Q(k*p))))/C);if(f>=Q(1)){t=Q(0);s=2;f=Q(Q(u*u)+Q(Q(v*v)+Q(w*w)));break e}g=Q(0);if(f<=Q(0)){t=Q(1);s=1;f=Q(Q(h*h)+Q(Q(i*i)+Q(k*k)));break e}t=Q(Q(1)-f);s=3;g=f;h=Q(h+Q(l*f));i=Q(i+Q(n*f));f=Q(k+Q(p*f));f=Q(Q(h*h)+Q(Q(i*i)+Q(f*f)))}if(!(E|j>f)){f=j;break d}J[e>>2]=s<<1;N[d+8>>2]=g;N[d+4>>2]=t;J[d>>2]=0}k=N[c+8>>2];h=N[c>>2];l=N[c+4>>2];f:{if(!(Q(Q(k*Q(Q(o*y)-Q(x*q)))+Q(Q(h*Q(Q(q*m)-Q(y*r)))+Q(l*Q(Q(r*x)-Q(m*o)))))>Q(0))){break f}i=Q(-1);v=N[a+8>>2];n=Q(v-k);w=N[a>>2];p=Q(w-h);C=N[a+4>>2];u=Q(C-l);j=Q(Q(n*n)+Q(Q(p*p)+Q(u*u)));g:{if(!(j>Q(0))){break g}g=Q(1);j=Q(Q(-Q(Q(k*n)+Q(Q(h*p)+Q(l*u))))/j);if(j>=Q(1)){i=Q(Q(v*v)+Q(Q(w*w)+Q(C*C)));t=Q(0);s=2;break g}g=Q(0);if(j<=Q(0)){i=Q(Q(k*k)+Q(Q(h*h)+Q(l*l)));t=Q(1);s=1;break g}g=Q(k+Q(n*j));i=Q(g*g);g=Q(h+Q(p*j));h=Q(g*g);g=Q(l+Q(u*j));i=Q(i+Q(h+Q(g*g)));t=Q(Q(1)-j);s=3;g=j}if(!(f<Q(0)|f>i)){break f}J[e>>2]=s<<2&4|s>>>1;J[d+4>>2]=0;N[d>>2]=g;N[d+8>>2]=t;f=i}if(!(f<Q(0))){break a}f=N[a+8>>2];g=N[a>>2];j=N[a+4>>2];J[e>>2]=7;j=Q(Q(Q(f*m)+Q(Q(g*x)+Q(y*j)))/D);f=Q(y*j);i=Q(N[b+4>>2]-f);g=Q(x*j);k=Q(N[b>>2]-g);h=Q(Q(A*i)+Q(k*Q(-z)));l=Q(h*h);j=Q(m*j);h=Q(N[b+8>>2]-j);i=Q(Q(z*h)+Q(i*Q(-B)));m=Q(i*i);i=Q(Q(B*k)+Q(h*Q(-A)));h=Q(Y(Q(l+Q(m+Q(i*i)))));i=Q(Y(D));k=Q(h/i);N[d>>2]=k;h=Q(N[c+4>>2]-f);t=Q(N[c>>2]-g);m=Q(Q(o*h)+Q(t*Q(-q)));l=Q(m*m);m=Q(N[c+8>>2]-j);h=Q(Q(q*m)+Q(h*Q(-r)));n=Q(h*h);h=Q(Q(r*t)+Q(m*Q(-o)));i=Q(Q(Y(Q(l+Q(n+Q(h*h)))))/i);N[d+4>>2]=i;N[d+8>>2]=Q(1)-Q(k+i);f=Q(Q(j*j)+Q(Q(g*g)+Q(f*f)))}return f}function _y(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0);e=ga-240|0;ga=e;h=Q(1);a=K[a+8|0];d=a?c:b;k=N[d+60>>2];g=Q(N[d+124>>2]-k);f=Q(g*g);u=N[d+52>>2];g=Q(N[d+116>>2]-u);s=Q(g*g);w=N[d+56>>2];g=Q(N[d+120>>2]-w);f=Q(f+Q(s+Q(g*g)));g=N[d+252>>2];a:{if(f<Q(g*g)){break a}a=a?b:c;b=J[a+192>>2];if(J[b+4>>2]-21>>>0>8){break a}i=N[a+28>>2];h=N[d+92>>2];V=Q(i*h);g=N[d+76>>2];f=N[a+12>>2];W=Q(g*f);x=N[d+108>>2];y=N[d+88>>2];X=Q(i*y);z=N[d+72>>2];Y=Q(z*f);A=N[d+104>>2];B=N[d+100>>2];C=N[d+84>>2];Z=Q(i*C);D=N[d+68>>2];_=Q(D*f);l=N[a+24>>2];$=Q(l*h);m=N[a+8>>2];aa=Q(g*m);n=N[a+36>>2];o=N[a+20>>2];ba=Q(o*h);p=N[a+4>>2];ca=Q(g*p);E=N[d+28>>2];da=Q(i*E);F=N[d+12>>2];ea=Q(F*f);G=N[d+44>>2];H=N[d+24>>2];fa=Q(i*H);I=N[d+8>>2];ha=Q(I*f);L=N[d+40>>2];M=N[d+36>>2];O=N[d+20>>2];ja=Q(i*O);P=N[d+4>>2];ka=Q(P*f);h=Q(-N[a+52>>2]);j=N[a+56>>2];q=N[a+44>>2];s=N[a+60>>2];T=Q(Q(Q(f*h)-Q(i*j))-Q(q*s));t=N[d+124>>2];R=N[d+116>>2];S=N[d+120>>2];la=Q(Q(t*q)+Q(Q(R*f)+Q(i*S)));r=N[a+40>>2];U=Q(Q(Q(m*h)-Q(l*j))-Q(r*s));g=Q(U+Q(Q(t*r)+Q(Q(R*m)+Q(l*S))));J[e+236>>2]=0;h=Q(Q(Q(p*h)-Q(o*j))-Q(n*s));v=Q(h+Q(Q(k*n)+Q(Q(u*p)+Q(o*w))));s=v;j=Q(h+Q(Q(t*n)+Q(Q(R*p)+Q(o*S))));if(j<v){N[e+224>>2]=j;s=j}t=Q(U+Q(Q(k*r)+Q(Q(u*m)+Q(l*w))));h=t;if(g<h){N[e+228>>2]=g;h=g}k=Q(T+Q(Q(k*q)+Q(Q(u*f)+Q(i*w))));f=k;i=Q(T+la);if(f>i){N[e+232>>2]=i;f=i}J[e+220>>2]=0;u=f;f=N[d+248>>2];N[e+232>>2]=u-f;N[e+228>>2]=h-f;N[e+224>>2]=s-f;N[e+216>>2]=f+(i>k?i:k);N[e+212>>2]=f+(g>t?g:t);N[e+208>>2]=f+(j>v?j:v);J[e+128>>2]=0;N[e+124>>2]=i;N[e+120>>2]=g;N[e+116>>2]=j;J[e+112>>2]=0;N[e+108>>2]=Q(x*q)+Q(W+V);N[e+104>>2]=Q(A*q)+Q(Y+X);N[e+100>>2]=Q(B*q)+Q(_+Z);J[e+96>>2]=0;N[e+92>>2]=Q(x*r)+Q(aa+$);N[e+88>>2]=Q(A*r)+Q(Q(z*m)+Q(l*y));N[e+84>>2]=Q(B*r)+Q(Q(D*m)+Q(l*C));J[e+80>>2]=0;N[e+76>>2]=Q(x*n)+Q(ca+ba);N[e+72>>2]=Q(A*n)+Q(Q(z*p)+Q(o*y));J[e- -64>>2]=0;N[e+60>>2]=k;N[e+56>>2]=t;N[e+52>>2]=v;J[e+48>>2]=0;N[e+44>>2]=Q(G*q)+Q(ea+da);N[e+40>>2]=Q(L*q)+Q(ha+fa);N[e+36>>2]=Q(M*q)+Q(ka+ja);J[e+32>>2]=0;N[e+28>>2]=Q(G*r)+Q(Q(F*m)+Q(l*E));N[e+24>>2]=Q(L*r)+Q(Q(I*m)+Q(l*H));N[e+20>>2]=Q(M*r)+Q(Q(P*m)+Q(l*O));J[e+16>>2]=0;N[e+12>>2]=Q(G*n)+Q(Q(F*p)+Q(o*E));N[e+8>>2]=Q(L*n)+Q(Q(I*p)+Q(o*H));N[e+196>>2]=f;N[e+68>>2]=Q(B*n)+Q(Q(D*p)+Q(o*C));N[e+4>>2]=Q(M*n)+Q(Q(P*p)+Q(o*O));J[e>>2]=22040;N[e+200>>2]=N[d+244>>2];ia[J[J[b>>2]+64>>2]](b,e,e+224|0,e+208|0);h=N[e+200>>2];if(h<N[d+244>>2]){N[d+244>>2]=h;break a}h=Q(1)}ga=e+240|0;return Q(h)}function IG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=Q(0),W=Q(0),X=Q(0),Y=Q(0),Z=Q(0),_=Q(0),$=Q(0),aa=Q(0),ba=Q(0),ca=Q(0),da=Q(0),ea=Q(0),fa=Q(0),ha=Q(0),ja=Q(0),ka=Q(0),la=Q(0);e=ga-240|0;ga=e;h=Q(1);a=K[a+8|0];d=a?c:b;k=N[d+60>>2];g=Q(N[d+124>>2]-k);f=Q(g*g);u=N[d+52>>2];g=Q(N[d+116>>2]-u);s=Q(g*g);w=N[d+56>>2];g=Q(N[d+120>>2]-w);f=Q(f+Q(s+Q(g*g)));g=N[d+252>>2];a:{if(f<Q(g*g)){break a}a=a?b:c;b=J[a+192>>2];if(J[b+4>>2]-21>>>0>8){break a}i=N[a+28>>2];h=N[d+92>>2];V=Q(i*h);g=N[d+76>>2];f=N[a+12>>2];W=Q(g*f);x=N[d+108>>2];y=N[d+88>>2];X=Q(i*y);z=N[d+72>>2];Y=Q(z*f);A=N[d+104>>2];B=N[d+100>>2];C=N[d+84>>2];Z=Q(i*C);D=N[d+68>>2];_=Q(D*f);l=N[a+24>>2];$=Q(l*h);m=N[a+8>>2];aa=Q(g*m);n=N[a+36>>2];o=N[a+20>>2];ba=Q(o*h);p=N[a+4>>2];ca=Q(g*p);E=N[d+28>>2];da=Q(i*E);F=N[d+12>>2];ea=Q(F*f);G=N[d+44>>2];H=N[d+24>>2];fa=Q(i*H);I=N[d+8>>2];ha=Q(I*f);L=N[d+40>>2];M=N[d+36>>2];O=N[d+20>>2];ja=Q(i*O);P=N[d+4>>2];ka=Q(P*f);h=Q(-N[a+52>>2]);j=N[a+56>>2];q=N[a+44>>2];s=N[a+60>>2];T=Q(Q(Q(f*h)-Q(i*j))-Q(q*s));t=N[d+124>>2];R=N[d+116>>2];S=N[d+120>>2];la=Q(Q(t*q)+Q(Q(R*f)+Q(i*S)));r=N[a+40>>2];U=Q(Q(Q(m*h)-Q(l*j))-Q(r*s));g=Q(U+Q(Q(t*r)+Q(Q(R*m)+Q(l*S))));J[e+236>>2]=0;h=Q(Q(Q(p*h)-Q(o*j))-Q(n*s));v=Q(h+Q(Q(k*n)+Q(Q(u*p)+Q(o*w))));s=v;j=Q(h+Q(Q(t*n)+Q(Q(R*p)+Q(o*S))));if(j<v){N[e+224>>2]=j;s=j}t=Q(U+Q(Q(k*r)+Q(Q(u*m)+Q(l*w))));h=t;if(g<h){N[e+228>>2]=g;h=g}k=Q(T+Q(Q(k*q)+Q(Q(u*f)+Q(i*w))));f=k;i=Q(T+la);if(f>i){N[e+232>>2]=i;f=i}J[e+220>>2]=0;u=f;f=N[d+248>>2];N[e+232>>2]=u-f;N[e+228>>2]=h-f;N[e+224>>2]=s-f;N[e+216>>2]=f+(i>k?i:k);N[e+212>>2]=f+(g>t?g:t);N[e+208>>2]=f+(j>v?j:v);J[e+128>>2]=0;N[e+124>>2]=i;N[e+120>>2]=g;N[e+116>>2]=j;J[e+112>>2]=0;N[e+108>>2]=Q(x*q)+Q(W+V);N[e+104>>2]=Q(A*q)+Q(Y+X);N[e+100>>2]=Q(B*q)+Q(_+Z);J[e+96>>2]=0;N[e+92>>2]=Q(x*r)+Q(aa+$);N[e+88>>2]=Q(A*r)+Q(Q(z*m)+Q(l*y));N[e+84>>2]=Q(B*r)+Q(Q(D*m)+Q(l*C));J[e+80>>2]=0;N[e+76>>2]=Q(x*n)+Q(ca+ba);N[e+72>>2]=Q(A*n)+Q(Q(z*p)+Q(o*y));J[e- -64>>2]=0;N[e+60>>2]=k;N[e+56>>2]=t;N[e+52>>2]=v;J[e+48>>2]=0;N[e+44>>2]=Q(G*q)+Q(ea+da);N[e+40>>2]=Q(L*q)+Q(ha+fa);N[e+36>>2]=Q(M*q)+Q(ka+ja);J[e+32>>2]=0;N[e+28>>2]=Q(G*r)+Q(Q(F*m)+Q(l*E));N[e+24>>2]=Q(L*r)+Q(Q(I*m)+Q(l*H));N[e+20>>2]=Q(M*r)+Q(Q(P*m)+Q(l*O));J[e+16>>2]=0;N[e+12>>2]=Q(G*n)+Q(Q(F*p)+Q(o*E));N[e+8>>2]=Q(L*n)+Q(Q(I*p)+Q(o*H));N[e+196>>2]=f;N[e+68>>2]=Q(B*n)+Q(Q(D*p)+Q(o*C));N[e+4>>2]=Q(M*n)+Q(Q(P*p)+Q(o*O));J[e>>2]=9516;N[e+200>>2]=N[d+244>>2];ia[J[J[b>>2]+64>>2]](b,e,e+224|0,e+208|0);h=N[e+200>>2];if(h<N[d+244>>2]){N[d+244>>2]=h;break a}h=Q(1)}ga=e+240|0;return Q(h)}function cf(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;if(!(!b|!c)){if(!(J[a+24>>2]>127|J[a+28>>2]>127)){J[8369]=J[8369]+1;l=ia[J[6782]](1024,16)|0;g=J[a+24>>2];a:{if((g|0)<=0){break a}if(g-1>>>0>=3){p=g&-4;while(1){f=n<<3;i=f+l|0;h=f+J[a+32>>2]|0;m=J[h+4>>2];J[i>>2]=J[h>>2];J[i+4>>2]=m;i=f|8;h=i+l|0;i=i+J[a+32>>2]|0;m=J[i+4>>2];J[h>>2]=J[i>>2];J[h+4>>2]=m;i=f|16;h=i+l|0;i=i+J[a+32>>2]|0;m=J[i+4>>2];J[h>>2]=J[i>>2];J[h+4>>2]=m;f=f|24;i=f+l|0;f=f+J[a+32>>2]|0;h=J[f+4>>2];J[i>>2]=J[f>>2];J[i+4>>2]=h;n=n+4|0;e=e+4|0;if((p|0)!=(e|0)){continue}break}}e=g&3;if(!e){break a}while(1){f=n<<3;g=f+l|0;f=f+J[a+32>>2]|0;p=J[f+4>>2];J[g>>2]=J[f>>2];J[g+4>>2]=p;n=n+1|0;j=j+1|0;if((e|0)!=(j|0)){continue}break}}e=J[a+32>>2];if(!(e?!e|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[a+32>>2]=l;H[a+36|0]=1;J[a+28>>2]=128}J[a+24>>2]=128;e=J[a+32>>2];J[e+4>>2]=c;J[e>>2]=b;b=124;e=1;while(1){j=J[a+32>>2];l=e;e=e-1|0;i=e<<3;c=j+i|0;g=J[c+4>>2];f=J[c>>2];if((b|0)<(e|0)){b=J[a+24>>2];p=b<<1;if(!((p|0)<=J[a+28>>2]|(b|0)>=(p|0))){b:{if(!b){j=0;break b}J[8369]=J[8369]+1;j=ia[J[6782]](b<<4,16)|0;m=J[a+24>>2];if((m|0)<=0){break b}b=0;n=0;if(m-1>>>0>=3){r=m&-4;c=0;while(1){h=n<<3;k=h+j|0;o=h+J[a+32>>2]|0;q=J[o+4>>2];J[k>>2]=J[o>>2];J[k+4>>2]=q;k=h|8;o=k+j|0;k=k+J[a+32>>2]|0;q=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=q;k=h|16;o=k+j|0;k=k+J[a+32>>2]|0;q=J[k+4>>2];J[o>>2]=J[k>>2];J[o+4>>2]=q;h=h|24;k=h+j|0;h=h+J[a+32>>2]|0;o=J[h+4>>2];J[k>>2]=J[h>>2];J[k+4>>2]=o;n=n+4|0;c=c+4|0;if((r|0)!=(c|0)){continue}break}}c=m&3;if(!c){break b}while(1){h=n<<3;m=h+j|0;h=h+J[a+32>>2]|0;r=J[h+4>>2];J[m>>2]=J[h>>2];J[m+4>>2]=r;n=n+1|0;b=b+1|0;if((c|0)!=(b|0)){continue}break}}b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=j;H[a+36|0]=1;J[a+28>>2]=p}J[a+24>>2]=p;b=p-4|0}c:{if((f|0)==(g|0)){if(!J[f+40>>2]){break c}c=j+i|0;e=J[f+36>>2];J[c+4>>2]=e;J[c>>2]=e;c=l<<3;e=c+J[a+32>>2]|0;g=J[f+40>>2];J[e+4>>2]=g;J[e>>2]=g;e=J[f+40>>2];c=c+J[a+32>>2]|0;J[c+8>>2]=J[f+36>>2];J[c+12>>2]=e;e=l+2|0;break c}if(!(N[f>>2]<=N[g+16>>2])|!(N[f+16>>2]>=N[g>>2])|(!(N[f+4>>2]<=N[g+20>>2])|!(N[f+20>>2]>=N[g+4>>2]))){break c}if(!(N[f+8>>2]<=N[g+24>>2])|!(N[f+24>>2]>=N[g+8>>2])){break c}c=J[g+40>>2];if(J[f+40>>2]){e=J[f+36>>2];if(c){c=j+i|0;J[c+4>>2]=J[g+36>>2];J[c>>2]=e;e=J[f+40>>2];c=l<<3;j=c+J[a+32>>2]|0;J[j+4>>2]=J[g+36>>2];J[j>>2]=e;e=J[f+36>>2];j=c+J[a+32>>2]|0;J[j+12>>2]=J[g+40>>2];J[j+8>>2]=e;e=J[f+40>>2];c=c+J[a+32>>2]|0;J[c+20>>2]=J[g+40>>2];J[c+16>>2]=e;e=l+3|0;break c}c=j+i|0;J[c+4>>2]=g;J[c>>2]=e;c=J[f+40>>2];e=J[a+32>>2]+(l<<3)|0;J[e+4>>2]=g;J[e>>2]=c;e=l+1|0;break c}if(c){c=j+i|0;J[c+4>>2]=J[g+36>>2];J[c>>2]=f;c=J[a+32>>2]+(l<<3)|0;J[c+4>>2]=J[g+40>>2];J[c>>2]=f;e=l+1|0;break c}ia[J[J[d>>2]+8>>2]](d,f,g)}if(e){continue}break}}}function eh(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;J[a>>2]=10268;J[8369]=J[8369]+1;c=ia[J[6782]](360,16)|0;J[c+308>>2]=953267991;H[c+332|0]=K[c+332|0]&240;J[a+24>>2]=c;c=J[b+20>>2];J[8369]=J[8369]+1;e=ia[J[6782]](4,16)|0;J[e>>2]=(c?18424:18584)+8;J[a+28>>2]=e;J[8369]=J[8369]+1;c=ia[J[6782]](24,16)|0;e=J[a+24>>2];f=J[a+28>>2];J[c+16>>2]=0;J[c+20>>2]=3;H[c+4|0]=0;J[c+12>>2]=e;J[c+8>>2]=f;J[c>>2]=8756;J[a+32>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10384;H[c+4|0]=0;J[a+36>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10508;H[c+4|0]=0;J[a+40>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10600;H[c+4|0]=0;J[a+44>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10680;H[c+4|0]=0;J[a+48>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10768;H[c+4|0]=0;J[a+52>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10852;H[c+4|0]=0;J[a+56>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=10920;H[c+4|0]=0;J[a+60>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=11004;H[c+4|0]=0;J[a+76>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=11004;J[a+80>>2]=c;H[c+4|0]=1;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=11088;H[c+4|0]=0;J[a+72>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](16,16)|0;J[c+8>>2]=1;J[c+12>>2]=0;J[c>>2]=11164;H[c+4|0]=0;J[a+88>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](16,16)|0;J[c+8>>2]=1;J[c+12>>2]=0;J[c>>2]=11164;J[a+84>>2]=c;H[c+4|0]=1;i=J[b+16>>2];c=J[b>>2];a:{if(c){J[a+8>>2]=c;H[a+12|0]=0;break a}H[a+12|0]=1;J[8369]=J[8369]+1;g=ia[J[6782]](20,16)|0;c=J[b+8>>2];J[g+4>>2]=c;J[g>>2]=772;J[8369]=J[8369]+1;c=ia[J[6782]](P(c,772),16)|0;J[g+12>>2]=c;J[g+16>>2]=c;j=J[g+4>>2];J[g+8>>2]=j;e=j-1|0;b:{if(!e){break b}f=J[g>>2];k=e&7;if(k){while(1){d=c;c=c+f|0;J[d>>2]=c;e=e-1|0;h=h+1|0;if((k|0)!=(h|0)){continue}break}}if(j-2>>>0<7){break b}while(1){d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;d=c;c=c+f|0;J[d>>2]=c;e=e-8|0;if(e){continue}break}}J[c>>2]=0;J[a+8>>2]=g}c=J[b+4>>2];if(c){J[a+16>>2]=c;H[a+20|0]=0;return}H[a+20|0]=1;J[8369]=J[8369]+1;f=ia[J[6782]](20,16)|0;b=J[b+12>>2];J[f+4>>2]=b;c=(i|0)>36?i:36;c=c>>>0>80?c:80;J[f>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](P(b,c),16)|0;J[f+12>>2]=c;J[f+16>>2]=c;g=J[f+4>>2];J[f+8>>2]=g;e=g-1|0;c:{if(!e){break c}b=J[f>>2];i=e&7;if(i){h=0;while(1){d=c;c=b+c|0;J[d>>2]=c;e=e-1|0;h=h+1|0;if((i|0)!=(h|0)){continue}break}}if(g-2>>>0<7){break c}while(1){d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;d=c;c=b+c|0;J[d>>2]=c;e=e-8|0;if(e){continue}break}}J[c>>2]=0;J[a+16>>2]=f}function Hg(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=Q(0),u=Q(0),v=Q(0);g=ga-288|0;ga=g;Ie(J[a+4>>2]);j=N[b+52>>2];i=N[c+52>>2];n=N[d+52>>2];k=N[e+52>>2];l=N[b+56>>2];m=N[c+56>>2];o=N[d+56>>2];p=N[e+56>>2];q=N[b+48>>2];t=N[c+48>>2];u=N[d+48>>2];v=N[e+48>>2];H[g+264|0]=0;J[g+260>>2]=1566444395;J[g+224>>2]=18272;s=Bg(g+144|0,J[a+8>>2],J[a+12>>2],J[a+4>>2],0);J[g+136>>2]=1566444395;a=J[b+12>>2];J[g+16>>2]=J[b+8>>2];J[g+20>>2]=a;a=J[b+4>>2];J[g+8>>2]=J[b>>2];J[g+12>>2]=a;a=J[b+28>>2];J[g+32>>2]=J[b+24>>2];J[g+36>>2]=a;a=J[b+20>>2];J[g+24>>2]=J[b+16>>2];J[g+28>>2]=a;a=J[b+44>>2];J[g+48>>2]=J[b+40>>2];J[g+52>>2]=a;a=J[b+36>>2];J[g+40>>2]=J[b+32>>2];J[g+44>>2]=a;r=J[b+60>>2];a=g- -64|0;J[a>>2]=J[b+56>>2];J[a+4>>2]=r;a=J[b+52>>2];J[g+56>>2]=J[b+48>>2];J[g+60>>2]=a;a=J[d+12>>2];J[g+80>>2]=J[d+8>>2];J[g+84>>2]=a;a=J[d+4>>2];J[g+72>>2]=J[d>>2];J[g+76>>2]=a;a=J[d+20>>2];J[g+88>>2]=J[d+16>>2];J[g+92>>2]=a;a=J[d+28>>2];J[g+96>>2]=J[d+24>>2];J[g+100>>2]=a;a=J[d+44>>2];J[g+112>>2]=J[d+40>>2];J[g+116>>2]=a;a=J[d+36>>2];J[g+104>>2]=J[d+32>>2];J[g+108>>2]=a;a=J[d+52>>2];J[g+120>>2]=J[d+48>>2];J[g+124>>2]=a;a=J[d+60>>2];J[g+128>>2]=J[d+56>>2];J[g+132>>2]=a;zb(s,g+8|0,g+224|0,0,0);a=J[g+256>>2];J[g+280>>2]=J[g+252>>2];J[g+284>>2]=a;a=J[g+248>>2];J[g+272>>2]=J[g+244>>2];J[g+276>>2]=a;h=0;a:{if(!K[g+264|0]){break a}o=Q(Q(m-l)-Q(p-o));p=Q(Q(i-j)-Q(k-n));q=Q(Q(t-q)-Q(v-u));k=N[g+236>>2];l=N[g+232>>2];m=N[g+228>>2];i=N[g+260>>2];b:{c:{if(!(i>Q(.0010000000474974513))){j=Q(0);i=N[g+240>>2];break c}r=g+244|0;a=0;n=Q(0);while(1){h=0;if((a|0)==32){break a}j=Q(n-Q(i/Q(Q(o*k)+Q(Q(q*m)+Q(p*l)))));h=0;if(n>=j){break a}h=0;if(j>Q(1)){break a}h=0;if(j<Q(0)){break a}ia[J[J[f>>2]>>2]](f,j);i=Q(Q(1)-j);N[g+56>>2]=Q(i*N[b+48>>2])+Q(j*N[c+48>>2]);N[g+60>>2]=Q(i*N[b+52>>2])+Q(j*N[c+52>>2]);N[g+64>>2]=Q(i*N[b+56>>2])+Q(j*N[c+56>>2]);N[g+120>>2]=Q(i*N[d+48>>2])+Q(j*N[e+48>>2]);N[g+124>>2]=Q(i*N[d+52>>2])+Q(j*N[e+52>>2]);N[g+128>>2]=Q(i*N[d+56>>2])+Q(j*N[e+56>>2]);zb(s,g+8|0,g+224|0,0,0);h=0;if(!K[g+264|0]){break a}i=N[g+260>>2];if(i<Q(0)){N[f+164>>2]=j;i=N[g+240>>2];k=N[g+236>>2];l=N[g+232>>2];m=N[g+228>>2];break b}a=a+1|0;h=J[g+256>>2];J[g+280>>2]=J[g+252>>2];J[g+284>>2]=h;h=J[g+248>>2];J[g+272>>2]=J[g+244>>2];J[g+276>>2]=h;k=N[g+236>>2];l=N[g+232>>2];m=N[g+228>>2];n=j;if(i>Q(.0010000000474974513)){continue}break}i=N[g+240>>2]}h=0;if(Q(-N[f+172>>2])<=Q(Q(k*o)+Q(Q(m*q)+Q(p*l)))){break a}N[f+164>>2]=j;r=g+272|0}N[f+132>>2]=m;N[f+144>>2]=i;N[f+140>>2]=k;N[f+136>>2]=l;a=r;b=J[a+4>>2];J[f+148>>2]=J[a>>2];J[f+152>>2]=b;b=J[a+12>>2];J[f+156>>2]=J[a+8>>2];J[f+160>>2]=b;h=1}ga=g+288|0;return h|0}function um(a,b,c,d,e,f,g){var h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,K=0,M=0,O=0,P=0,R=0,S=0,T=0,U=0;k=ga-32|0;ga=k;x=N[c+4>>2];y=N[d+4>>2];z=N[c>>2];A=N[d>>2];n=N[a+28>>2];p=N[a+12>>2];v=N[d+8>>2];w=N[c+8>>2];h=Q((v<w?v:w)+N[e+8>>2]);h=h<p?p:h;l=N[a+44>>2];h=Q(Q((h>n?n:h)-p)*l);a:{if(h<Q(4294967296)&h>=Q(0)){C=~~h>>>0;break a}C=0}o=N[a+24>>2];q=N[a+8>>2];h=Q((x>y?y:x)+N[e+4>>2]);h=h<q?q:h;t=N[a+40>>2];h=Q(Q((h>o?o:h)-q)*t);b:{if(h<Q(4294967296)&h>=Q(0)){B=~~h>>>0;break b}B=0}m=N[a+20>>2];r=N[a+4>>2];h=Q((z>A?A:z)+N[e>>2]);h=h<r?r:h;i=N[a+36>>2];h=Q(Q((h>m?m:h)-r)*i);c:{if(h<Q(4294967296)&h>=Q(0)){u=~~h>>>0;break c}u=0}h=Q((v>w?v:w)+N[f+8>>2]);h=h<p?p:h;h=Q(Q(Q((h>n?n:h)-p)*l)+Q(1));d:{if(h<Q(4294967296)&h>=Q(0)){s=~~h>>>0;break d}s=0}h=Q((x<y?y:x)+N[f+4>>2]);h=h<q?q:h;h=Q(Q(Q((h>o?o:h)-q)*t)+Q(1));e:{if(h<Q(4294967296)&h>=Q(0)){j=~~h>>>0;break e}j=0}h=Q((z<A?A:z)+N[f>>2]);h=h<r?r:h;h=Q(Q(Q((h>m?m:h)-r)*i)+Q(1));f:{if(h<Q(4294967296)&h>=Q(0)){d=~~h>>>0;break f}d=0}if((g|0)>0){i=Q(v-w);m=Q(A-z);t=Q(y-x);h=Q(Q(1)/Q(Y(Q(Q(i*i)+Q(Q(m*m)+Q(t*t))))));l=Q(i*h);n=Q(l*i);i=Q(m*h);h=Q(t*h);t=Q(n+Q(Q(i*m)+Q(t*h)));G=C&65534;H=B&65534;I=u&65534;K=s|1;M=j|1;O=d|1;d=J[a+136>>2];p=l==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/l);s=p<Q(0);P=(s<<4)+k|8;q=h==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/h);j=q<Q(0);R=(j<<4)+k|4;S=(!s<<4)+k|8;T=(!j<<4)+k|4;r=i==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/i);j=r<Q(0);U=(j<<4)+k|0;C=(!j<<4)+k|0;while(1){F=J[d+12>>2];u=0;g:{h:{i:{j:{if(L[d+6>>1]<I>>>0){break j}B=L[d>>1];if(O>>>0<B>>>0|L[d+10>>1]<G>>>0){break j}s=L[d+4>>1];if(L[d+8>>1]<H>>>0|s>>>0>K>>>0){break j}j=L[d+2>>1];if(j>>>0>M>>>0){break j}v=N[a+4>>2];w=N[a+36>>2];n=N[a+8>>2];o=N[a+40>>2];m=N[a+12>>2];l=N[a+44>>2];J[k+12>>2]=0;i=Q(m+Q(Q(s>>>0)/l));N[k+8>>2]=i;h=Q(n+Q(Q(j>>>0)/o));N[k+4>>2]=h;u=L[d+10>>1];s=L[d+8>>1];j=L[d+6>>1];J[k+28>>2]=0;N[k>>2]=Q(v+Q(Q(B>>>0)/w))-N[f>>2];N[k+4>>2]=h-N[f+4>>2];N[k+8>>2]=i-N[f+8>>2];N[k+16>>2]=Q(v+Q(Q(j>>>0)/w))-N[e>>2];N[k+20>>2]=Q(n+Q(Q(s>>>0)/o))-N[e+4>>2];N[k+24>>2]=Q(m+Q(Q(u>>>0)/l))-N[e+8>>2];k:{i=N[c>>2];l=Q(r*Q(N[U>>2]-i));h=N[c+4>>2];n=Q(q*Q(N[T>>2]-h));if(l>n){break k}h=Q(q*Q(N[R>>2]-h));o=Q(r*Q(N[C>>2]-i));if(h>o){break k}m=h>l?h:l;h=N[c+8>>2];l=Q(p*Q(N[S>>2]-h));if(m>l){break k}i=Q(p*Q(N[P>>2]-h));h=n<o?n:o;if(i>h){break k}u=t>(i>m?i:m)&(h>l?l:h)>Q(0);if(!u|(F|0)<0){break j}j=J[d+12>>2];ia[J[J[b>>2]+8>>2]](b,j>>21,j&2097151);break i}u=0}if((F|0)>=0){break i}if(!u){break h}}D=D+1|0;d=d+16|0;break g}j=J[d+12>>2];D=D-j|0;d=d-(j<<4)|0}E=E+1|0;if((g|0)>(D|0)){continue}break}}if(J[7404]<(E|0)){J[7404]=E}ga=k+32|0}function sn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=ga-16|0;ga=l;c=J[a+92>>2];if(ia[J[J[c>>2]+56>>2]](c)|0){c=J[a+92>>2];f=ia[J[J[c>>2]+28>>2]](c)|0;d=J[f+4>>2];if((d|0)>=2){lc(f,l+8|0,0,d-1|0);d=J[f+4>>2]}i=J[a+104>>2];g=d-i|0;a:{if((i|0)>=0){break a}if(J[f+8>>2]<(g|0)){c=d;if((c|0)!=(i|0)){J[8369]=J[8369]+1;e=ia[J[6782]](g<<4,16)|0;c=J[f+4>>2]}if((c|0)>0){while(1){k=h<<4;j=k+e|0;k=k+J[f+12>>2]|0;J[j>>2]=J[k>>2];J[j+4>>2]=J[k+4>>2];J[j+8>>2]=J[k+8>>2];J[j+12>>2]=J[k+12>>2];h=h+1|0;if((h|0)!=(c|0)){continue}break}}c=J[f+12>>2];if(!(c?!c|!K[f+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[f+12>>2]=e;H[f+16|0]=1;J[f+8>>2]=g}c=0;h=0-i&3;if(h){while(1){e=J[f+12>>2]+(d<<4)|0;J[e>>2]=0;J[e+4>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;d=d+1|0;c=c+1|0;if((h|0)!=(c|0)){continue}break}}if(i>>>0>4294967292){break a}while(1){c=d<<4;e=c+J[f+12>>2]|0;J[e>>2]=0;J[e+4>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;e=c+J[f+12>>2]|0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;e=c+J[f+12>>2]|0;J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;c=c+J[f+12>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;d=d+4|0;if((g|0)!=(d|0)){continue}break}}J[f+4>>2]=g;J[a+104>>2]=0;if((g|0)>0){i=0;j=0;e=0;c=0;while(1){h=J[f+12>>2]+(j<<4)|0;d=J[h+4>>2];k=e;e=J[h>>2];b:{c:{if((k|0)==(e|0)&(c|0)==(d|0)|L[e+54>>1]<L[d+48>>1]|(L[d+54>>1]<L[e+48>>1]|L[e+56>>1]<L[d+50>>1])){break c}if(L[d+56>>1]<L[e+50>>1]|L[e+58>>1]<L[d+52>>1]){break c}if(L[d+58>>1]>=L[e+52>>1]){break b}}c=J[a+92>>2];ia[J[J[c>>2]+32>>2]](c,h,b);J[h>>2]=0;J[h+4>>2]=0;i=J[a+104>>2]+1|0;J[a+104>>2]=i;J[7392]=J[7392]-1;g=J[f+4>>2]}c=d;j=j+1|0;if((j|0)<(g|0)){continue}break}if((g|0)>=2){lc(f,l,0,g-1|0);i=J[a+104>>2];g=J[f+4>>2]}b=g-i|0;d:{if((i|0)>=0){break d}if((b|0)>J[f+8>>2]){e=0;e:{if((g|0)==(i|0)){break e}J[8369]=J[8369]+1;e=ia[J[6782]](b<<4,16)|0;j=J[f+4>>2];if((j|0)<=0){break e}h=0;while(1){d=h<<4;c=d+e|0;d=d+J[f+12>>2]|0;J[c>>2]=J[d>>2];J[c+4>>2]=J[d+4>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=J[d+12>>2];h=h+1|0;if((j|0)!=(h|0)){continue}break}}c=J[f+12>>2];if(!(c?!c|!K[f+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[f+12>>2]=e;H[f+16|0]=1;J[f+8>>2]=b}d=0;e=0-i&3;if(e){while(1){c=J[f+12>>2]+(g<<4)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;g=g+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}if(i>>>0>4294967292){break d}while(1){c=g<<4;d=c+J[f+12>>2]|0;J[d>>2]=0;J[d+4>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0;d=c+J[f+12>>2]|0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;d=c+J[f+12>>2]|0;J[d+40>>2]=0;J[d+44>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;c=c+J[f+12>>2]|0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+48>>2]=0;J[c+52>>2]=0;g=g+4|0;if((b|0)!=(g|0)){continue}break}}}else{b=g}J[f+4>>2]=b;J[a+104>>2]=0}ga=l+16|0}function il(a,b,c){var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=Q(0);d=ga-240|0;ga=d;h=N[c>>2];f=N[c+4>>2];e=N[c+8>>2];J[a+124>>2]=0;N[a+120>>2]=e+N[a+100>>2];N[a+116>>2]=f+N[a+96>>2];N[a+112>>2]=h+N[a+92>>2];J[d+144>>2]=0;J[d+148>>2]=0;J[d+136>>2]=0;J[d+140>>2]=0;J[d+132>>2]=1065353216;J[d+124>>2]=0;J[d+128>>2]=0;J[d+216>>2]=1065353216;J[d+220>>2]=0;J[d+208>>2]=0;J[d+212>>2]=0;J[d+200>>2]=0;J[d+204>>2]=0;J[d+196>>2]=1065353216;J[d+188>>2]=0;J[d+192>>2]=0;J[d+152>>2]=1065353216;J[d+156>>2]=0;J[d+116>>2]=0;J[d+120>>2]=0;J[d+112>>2]=1065353216;J[d+180>>2]=0;J[d+184>>2]=0;J[d+176>>2]=1065353216;q=10;r=Q(1);while(1){a:{if(!q){break a}c=J[a+96>>2];J[d+224>>2]=J[a+92>>2];J[d+228>>2]=c;c=J[a+104>>2];J[d+232>>2]=J[a+100>>2];J[d+236>>2]=c;c=J[a+124>>2];J[d+168>>2]=J[a+120>>2];J[d+172>>2]=c;c=J[a+116>>2];J[d+160>>2]=J[a+112>>2];J[d+164>>2]=c;k=N[a+92>>2];l=N[a+112>>2];m=N[a+96>>2];h=N[a+116>>2];f=N[a+100>>2];e=N[a+120>>2];c=J[a+8>>2];J[d+84>>2]=0;J[d+12>>2]=1065353216;J[d+44>>2]=0;J[d+48>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+28>>2]=0;J[d+32>>2]=0;J[d+20>>2]=0;J[d+24>>2]=0;J[d+104>>2]=0;J[d+108>>2]=0;N[d+100>>2]=f-e;N[d+96>>2]=m-h;N[d+92>>2]=k-l;J[d+88>>2]=c;J[d+8>>2]=19248;c=J[c+188>>2];I[d+16>>1]=L[c+4>>1];I[d+18>>1]=L[c+6>>1];c=J[a+12>>2];e=Q(ia[J[J[c>>2]+48>>2]](c));c=J[a+12>>2];ia[J[J[c>>2]+44>>2]](c,Q(e+N[a+56>>2]));b:{if(K[a+170|0]){$e(J[a+8>>2],J[a+12>>2],d+176|0,d+112|0,d+8|0,N[b+56>>2]);break b}ic(b,J[a+12>>2],d+176|0,d+112|0,d+8|0,N[b+56>>2])}c=J[a+12>>2];ia[J[J[c>>2]+44>>2]](c,e);t=N[d+12>>2];c:{if(t<Q(1)){k=N[a+100>>2];i=Q(N[a+120>>2]-k);l=N[a+92>>2];g=Q(N[a+112>>2]-l);m=N[a+96>>2];f=Q(N[a+116>>2]-m);e=Q(Q(i*i)+Q(Q(g*g)+Q(f*f)));j=Q(Y(e));if(j>Q(1.1920928955078125e-7)){n=N[d+60>>2];o=N[d+52>>2];p=N[d+56>>2];c=J[a+96>>2];J[a+112>>2]=J[a+92>>2];J[a+116>>2]=c;c=J[a+104>>2];J[a+120>>2]=J[a+100>>2];J[a+124>>2]=c;e=f;f=Q(Q(1)/j);e=Q(e*f);s=e;h=Q(i*f);f=Q(g*f);e=Q(Q(n*h)+Q(Q(o*f)+Q(e*p)));g=Q(e+e);e=Q(s-Q(p*g));s=e;i=Q(h-Q(n*g));g=Q(f-Q(o*g));e=Q(Q(1)/Q(Y(Q(Q(i*i)+Q(Q(g*g)+Q(e*e))))));h=Q(s*e);f=Q(i*e);e=Q(g*e);g=Q(Q(n*f)+Q(Q(o*e)+Q(p*h)));h=Q(N[a+116>>2]+Q(j*Q(h-Q(p*g))));N[a+116>>2]=h;f=Q(N[a+120>>2]+Q(j*Q(f-Q(n*g))));N[a+120>>2]=f;e=Q(N[a+112>>2]+Q(j*Q(e-Q(o*g))));N[a+112>>2]=e;i=Q(f-k);g=Q(e-l);f=Q(h-m);e=Q(Q(i*i)+Q(Q(g*g)+Q(f*f)))}if(!(e>Q(1.1920928955078125e-7))){break a}e=Q(Q(1)/Q(Y(e)));if(!(Q(Q(Q(i*e)*N[a+84>>2])+Q(Q(Q(g*e)*N[a+76>>2])+Q(Q(f*e)*N[a+80>>2])))<=Q(0))){break c}break a}c=J[a+116>>2];J[a+92>>2]=J[a+112>>2];J[a+96>>2]=c;c=J[a+124>>2];J[a+100>>2]=J[a+120>>2];J[a+104>>2]=c}q=q-1|0;r=Q(r-t);if(r>Q(.009999999776482582)){continue}}break}ga=d+240|0}function To(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=0,u=Q(0),v=Q(0),w=Q(0),x=0,y=0,z=0,A=Q(0),B=0;l=ga-48|0;ga=l;J[l+44>>2]=a;J[l+40>>2]=b;J[l+36>>2]=c;J[l+32>>2]=d;J[l+28>>2]=e;J[l+24>>2]=f;J[l+20>>2]=g;J[l+16>>2]=h;J[l+12>>2]=i;H[l+11|0]=j;J[l+4>>2]=k;t=J[l+40>>2];h=J[l+36>>2];i=J[l+32>>2];j=J[l+28>>2];k=J[l+24>>2];b=J[l+12>>2];z=H[l+11|0]&1;x=J[l+4>>2];e=0;d=J[l+20>>2];f=J[l+16>>2];a:{if((d|0)<2|(f|0)<2){break a}u=Q(d-1|0);v=Q(f-1|0);J[8369]=J[8369]+1;c=P(d,f);g=ia[J[6782]]((c|0)!=(c&268435455)?-1:c<<4,16)|0;r=ua((c|0)!=(c&1073741823)?-1:c<<2);while(1){p=N[h+8>>2];m=Q(Q(e|0)/v);p=Q(Q(Q(N[j+8>>2]-p)*m)+p);q=N[i+8>>2];q=Q(Q(Q(Q(N[k+8>>2]-q)*m)+q)-p);n=N[i+4>>2];o=Q(Q(Q(N[k+4>>2]-n)*m)+n);n=N[h+4>>2];n=Q(Q(Q(N[j+4>>2]-n)*m)+n);A=Q(o-n);o=N[i>>2];w=Q(Q(Q(N[k>>2]-o)*m)+o);o=N[h>>2];o=Q(Q(Q(N[j>>2]-o)*m)+o);w=Q(w-o);B=P(d,e);a=0;while(1){y=a+B|0;s=g+(y<<4)|0;J[s+12>>2]=0;m=Q(Q(a|0)/u);N[s+8>>2]=Q(q*m)+p;N[s+4>>2]=Q(A*m)+n;N[s>>2]=Q(w*m)+o;J[r+(y<<2)>>2]=1065353216;a=a+1|0;if((d|0)!=(a|0)){continue}break}e=e+1|0;if((f|0)!=(e|0)){continue}break}J[8369]=J[8369]+1;e=Ac(ia[J[6782]](1252,16)|0,t,c,g,r);if(b&1){N[J[e+720>>2]+88>>2]=0;H[e+924|0]=1}if(b&2){N[(J[e+720>>2]+P(d-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&4){N[(J[e+720>>2]+P(P(d,f-1|0),104)|0)+88>>2]=0;H[e+924|0]=1}if(b&8){N[(J[e+720>>2]+P((d+P(d,f-1|0)|0)-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&16){N[(J[e+720>>2]+P((d-1|0)/2|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&32){N[(J[e+720>>2]+P(P(d,(f-1|0)/2|0),104)|0)+88>>2]=0;H[e+924|0]=1}if(b&64){N[(J[e+720>>2]+P((d+P(d,(f-1|0)/2|0)|0)-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&128){N[(J[e+720>>2]+P(P(d,f-1|0)+((d-1|0)/2|0)|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(b&256){N[(J[e+720>>2]+P(P(d,(f-1|0)/2|0)+((d-1|0)/2|0)|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}ta(r);if((d|0)<=0){break a}r=f-1|0;u=Q(Q(1)/Q(r|0));v=Q(Q(1)/Q(d-1|0));a=0;j=0;while(1){i=P(a,d);b=0;c=a+1|0;b:{if((c|0)<(f|0)){s=P(c,d);m=Q(u*Q(r-a|0));p=Q(u*Q(r+(a^-1)|0));a=0;while(1){g=a+s|0;h=a+i|0;b=a+1|0;c:{if((b|0)<(d|0)){t=b+i|0;Ja(e,h,t,0,0);Ja(e,h,g,0,0);k=b+s|0;rb(e,h,g,k,0);d:{if(x){g=(j<<2)+x|0;q=Q(v*Q(a|0));N[g>>2]=q;N[g+20>>2]=p;n=Q(v*Q(b|0));N[g+16>>2]=n;N[g+12>>2]=p;N[g+8>>2]=q;N[g+4>>2]=m;rb(e,k,t,h,0);N[g+44>>2]=m;N[g+40>>2]=q;N[g+36>>2]=m;N[g+32>>2]=n;N[g+28>>2]=p;N[g+24>>2]=n;break d}rb(e,k,t,h,0)}if(z){Ja(e,h,k,0,0)}j=j+12|0;break c}Ja(e,h,g,0,0)}a=b;if((d|0)!=(b|0)){continue}break}break b}while(1){a=b+1|0;if((a|0)<(d|0)){Ja(e,b+i|0,a+i|0,0,0)}b=a;if((b|0)!=(d|0)){continue}break}}a=c;if((f|0)!=(a|0)){continue}break}}ga=l+48|0;return e|0}function xl(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0);g=ga-304|0;ga=g;h=N[b+52>>2];k=N[c+52>>2];l=N[b+56>>2];i=N[c+56>>2];m=N[b+48>>2];j=N[c+48>>2];J[g+300>>2]=0;p=Q(i-l);N[g+296>>2]=p;o=Q(k-h);N[g+292>>2]=o;u=Q(j-m);N[g+288>>2]=u;t=c;c=g+112|0;n=g+48|0;hc(b,t,c,n);J[g+284>>2]=0;h=N[g+48>>2];k=Q(h*N[g+120>>2]);N[g+280>>2]=k;l=Q(h*N[g+116>>2]);N[g+276>>2]=l;h=Q(h*N[g+112>>2]);N[g+272>>2]=h;i=N[d+52>>2];m=N[e+52>>2];j=N[d+56>>2];r=N[e+56>>2];s=N[d+48>>2];x=N[e+48>>2];J[g+268>>2]=0;v=Q(r-j);N[g+264>>2]=v;w=Q(m-i);N[g+260>>2]=w;s=Q(x-s);N[g+256>>2]=s;hc(d,e,c,n);J[g+252>>2]=0;i=N[g+48>>2];m=Q(i*N[g+120>>2]);N[g+248>>2]=m;j=Q(i*N[g+116>>2]);N[g+244>>2]=j;i=Q(i*N[g+112>>2]);N[g+240>>2]=i;c=J[a+12>>2];k=Q(Q(Y(Q(Q(k*k)+Q(Q(h*h)+Q(l*l)))))*Q(ia[J[J[c>>2]+16>>2]](c)));c=J[a+16>>2];if(c){h=Q(ia[J[J[c>>2]+16>>2]](c))}else{h=Q(0)}r=Q(k+Q(h*Q(Y(Q(Q(m*m)+Q(Q(i*i)+Q(j*j)))))));l=Q(v-p);i=Q(s-u);m=Q(w-o);a:{if(Q(r+Q(Y(Q(Q(l*l)+Q(Q(i*i)+Q(m*m))))))==Q(0)){break a}H[g+216|0]=0;J[g+212>>2]=1566444395;J[g+176>>2]=18272;yl(a,b,d,g+176|0);c=J[g+208>>2];J[g+232>>2]=J[g+204>>2];J[g+236>>2]=c;c=J[g+200>>2];J[g+224>>2]=J[g+196>>2];J[g+228>>2]=c;if(!K[g+216|0]){break a}k=N[g+188>>2];j=N[g+180>>2];p=N[g+184>>2];if(Q(r+Q(Q(l*k)+Q(Q(i*j)+Q(m*p))))<=Q(1.1920928955078125e-7)){break a}b:{o=Q(N[g+212>>2]+N[f+172>>2]);c:{if(!(o>Q(.0010000000474974513))){h=Q(0);l=N[g+192>>2];break c}c=g+20|0;t=g+160|0;e=0;h=Q(0);while(1){q=J[f+168>>2];if(q){J[g+120>>2]=1065353216;J[g+124>>2]=0;J[g+112>>2]=1065353216;J[g+116>>2]=1065353216;ia[J[J[q>>2]+20>>2]](q,g+224|0,Q(.20000000298023224),g+112|0)}q=0;j=Q(r+Q(Q(l*k)+Q(Q(i*j)+Q(m*p))));if(j<=Q(1.1920928955078125e-7)){break a}k=h;h=Q(h+Q(o/j));if(k>=h|h>Q(1)|h<Q(0)){break a}Rb(b,g+288|0,g+272|0,h,g+112|0);Rb(d,g+256|0,g+240|0,h,g+48|0);n=J[f+168>>2];if(n){J[g+8>>2]=0;J[g+12>>2]=0;J[g>>2]=1065353216;J[g+4>>2]=0;ia[J[J[n>>2]+20>>2]](n,t,Q(.20000000298023224),g)}ia[J[J[f>>2]>>2]](f,h);H[g+40|0]=0;J[g+36>>2]=1566444395;J[g>>2]=18272;yl(a,g+112|0,g+48|0,g);if(!K[g+40|0]){break b}o=N[f+172>>2];n=J[c+12>>2];J[g+232>>2]=J[c+8>>2];J[g+236>>2]=n;n=J[c+4>>2];J[g+224>>2]=J[c>>2];J[g+228>>2]=n;if((e|0)==64){ia[J[J[f>>2]+8>>2]](f,-2,65);break a}e=e+1|0;j=N[g+4>>2];p=N[g+8>>2];k=N[g+12>>2];o=Q(N[g+36>>2]+o);if(o>Q(.0010000000474974513)){continue}break}l=N[g+16>>2]}N[f+132>>2]=j;N[f+164>>2]=h;N[f+144>>2]=l;N[f+140>>2]=k;N[f+136>>2]=p;a=J[g+228>>2];J[f+148>>2]=J[g+224>>2];J[f+152>>2]=a;a=J[g+236>>2];J[f+156>>2]=J[g+232>>2];J[f+160>>2]=a;q=1;break a}ia[J[J[f>>2]+8>>2]](f,-1,e)}ga=g+304|0;return q|0}function Ja(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=0,n=0,o=0,p=Q(0),q=Q(0);f=P(c,104);c=J[a+720>>2];i=f+c|0;j=c+P(b,104)|0;a:{b:{if(!e){break b}e=J[a+732>>2];if((e|0)<=0){break b}f=J[a+740>>2];b=J[f+12>>2];h=J[f+8>>2];if((h|0)==(j|0)&(b|0)==(i|0)){break a}c=1;if((h|0)==(i|0)&(b|0)==(j|0)){break a}while(1){c:{b=c;if((c|0)==(e|0)){break c}c=f+P(b,52)|0;h=J[c+12>>2];k=J[c+8>>2];if((k|0)==(j|0)&(h|0)==(i|0)){break c}c=b+1|0;if((i|0)!=(k|0)|(h|0)!=(j|0)){continue}}break}if((b|0)<(e|0)){break a}}h=0;k=0;b=ga-48|0;ga=b;J[b+40>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;J[b+8>>2]=0;J[b+12>>2]=0;J[b>>2]=0;J[b+4>>2]=0;d=d?d:J[J[a+880>>2]>>2];c=J[a+732>>2];d:{if((c|0)!=J[a+736>>2]){break d}m=c?c<<1:1;if((m|0)<=(c|0)){break d}if(m){J[8369]=J[8369]+1;h=ia[J[6782]](P(m,52),16)|0;c=J[a+732>>2]}e:{if((c|0)<=0){break e}if((c|0)!=1){o=c&-2;while(1){e=P(k,52);f=e+h|0;e=e+J[a+740>>2]|0;g=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=g;J[f+48>>2]=J[e+48>>2];g=J[e+44>>2];J[f+40>>2]=J[e+40>>2];J[f+44>>2]=g;g=J[e+36>>2];J[f+32>>2]=J[e+32>>2];J[f+36>>2]=g;g=J[e+28>>2];J[f+24>>2]=J[e+24>>2];J[f+28>>2]=g;g=J[e+20>>2];J[f+16>>2]=J[e+16>>2];J[f+20>>2]=g;g=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=g;e=P(k|1,52);f=e+h|0;e=e+J[a+740>>2]|0;g=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=g;g=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=g;g=J[e+20>>2];J[f+16>>2]=J[e+16>>2];J[f+20>>2]=g;g=J[e+28>>2];J[f+24>>2]=J[e+24>>2];J[f+28>>2]=g;g=J[e+36>>2];J[f+32>>2]=J[e+32>>2];J[f+36>>2]=g;g=J[e+44>>2];J[f+40>>2]=J[e+40>>2];J[f+44>>2]=g;J[f+48>>2]=J[e+48>>2];k=k+2|0;n=n+2|0;if((o|0)!=(n|0)){continue}break}}if(!(c&1)){break e}c=P(k,52);e=c+h|0;c=c+J[a+740>>2]|0;f=J[c+4>>2];J[e>>2]=J[c>>2];J[e+4>>2]=f;J[e+48>>2]=J[c+48>>2];f=J[c+44>>2];J[e+40>>2]=J[c+40>>2];J[e+44>>2]=f;f=J[c+36>>2];J[e+32>>2]=J[c+32>>2];J[e+36>>2]=f;f=J[c+28>>2];J[e+24>>2]=J[c+24>>2];J[e+28>>2]=f;f=J[c+20>>2];J[e+16>>2]=J[c+16>>2];J[e+20>>2]=f;f=J[c+12>>2];J[e+8>>2]=J[c+8>>2];J[e+12>>2]=f}c=J[a+740>>2];if(!(c?!c|!K[a+744|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+740>>2]=h;H[a+744|0]=1;J[a+736>>2]=m;c=J[a+732>>2]}c=J[a+740>>2]+P(c,52)|0;J[c+4>>2]=d;J[c>>2]=0;d=J[b+4>>2];J[c+8>>2]=J[b>>2];J[c+12>>2]=d;d=J[b+12>>2];J[c+16>>2]=J[b+8>>2];J[c+20>>2]=d;d=J[b+20>>2];J[c+24>>2]=J[b+16>>2];J[c+28>>2]=d;d=J[b+28>>2];J[c+32>>2]=J[b+24>>2];J[c+36>>2]=d;d=J[b+36>>2];J[c+40>>2]=J[b+32>>2];J[c+44>>2]=d;J[c+48>>2]=J[b+40>>2];J[a+732>>2]=J[a+732>>2]+1;ga=b+48|0;b=J[a+740>>2]+P(J[a+732>>2],52)|0;J[b-40>>2]=i;J[b-44>>2]=j;l=Q(N[j+16>>2]-N[i+16>>2]);p=Q(l*l);l=Q(N[j+8>>2]-N[i+8>>2]);q=Q(l*l);l=Q(N[j+12>>2]-N[i+12>>2]);N[b-36>>2]=Y(Q(p+Q(q+Q(l*l))));H[a+924|0]=1}}function gw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=Q(0),h=0,i=0,j=0,k=0,l=0;i=ga-16|0;ga=i;J[i+12>>2]=a;J[i+8>>2]=b;J[i+4>>2]=c;a=J[i+8>>2];d=J[i+4>>2];b=ga-144|0;ga=b;c=J[i+12>>2];J[c+68>>2]=J[c+68>>2]+1;J[b+140>>2]=0;e=J[a+12>>2];J[b+72>>2]=J[a+8>>2];J[b+76>>2]=e;e=J[a+4>>2];J[b+64>>2]=J[a>>2];J[b+68>>2]=e;e=J[a+28>>2];J[b+88>>2]=J[a+24>>2];J[b+92>>2]=e;e=J[a+20>>2];J[b+80>>2]=J[a+16>>2];J[b+84>>2]=e;e=J[a+44>>2];J[b+104>>2]=J[a+40>>2];J[b+108>>2]=e;e=J[a+36>>2];J[b+96>>2]=J[a+32>>2];J[b+100>>2]=e;e=J[a+60>>2];J[b+120>>2]=J[a+56>>2];J[b+124>>2]=e;e=J[a+52>>2];h=J[a+48>>2];J[b+128>>2]=d;J[b+112>>2]=h;J[b+116>>2]=e;J[b+132>>2]=J[d+4>>2];N[b+136>>2]=ia[J[J[d>>2]+48>>2]](d);ia[J[J[d>>2]+8>>2]](d,a,b+48|0,b+32|0);g=N[b+48>>2];if(g<N[c+32>>2]){N[c+32>>2]=g}g=N[b+32>>2];if(g>N[c+48>>2]){N[c+48>>2]=g}g=N[b+52>>2];if(g<N[c+36>>2]){N[c+36>>2]=g}g=N[b+36>>2];if(g>N[c+52>>2]){N[c+52>>2]=g}g=N[b+56>>2];if(g<N[c+40>>2]){N[c+40>>2]=g}g=N[b+40>>2];if(g>N[c+56>>2]){N[c+56>>2]=g}a=J[c+64>>2];if(a){d=J[b+60>>2];J[b+8>>2]=J[b+56>>2];J[b+12>>2]=d;d=J[b+44>>2];J[b+24>>2]=J[b+40>>2];J[b+28>>2]=d;d=J[b+36>>2];J[b+16>>2]=J[b+32>>2];J[b+20>>2]=d;d=J[b+52>>2];J[b>>2]=J[b+48>>2];J[b+4>>2]=d;J[b+140>>2]=Db(a,b,J[c+16>>2])}a=b- -64|0;h=J[c+16>>2];a:{if((h|0)!=J[c+20>>2]){break a}j=h?h<<1:1;if((j|0)<=(h|0)){break a}if(j){J[8369]=J[8369]+1;l=ia[J[6782]](P(j,80),16)|0;h=J[c+16>>2]}if((h|0)>0){while(1){d=P(k,80);e=d+l|0;d=d+J[c+24>>2]|0;f=J[d+4>>2];J[e>>2]=J[d>>2];J[e+4>>2]=f;f=J[d+12>>2];J[e+8>>2]=J[d+8>>2];J[e+12>>2]=f;f=J[d+28>>2];J[e+24>>2]=J[d+24>>2];J[e+28>>2]=f;f=J[d+20>>2];J[e+16>>2]=J[d+16>>2];J[e+20>>2]=f;f=J[d+44>>2];J[e+40>>2]=J[d+40>>2];J[e+44>>2]=f;f=J[d+36>>2];J[e+32>>2]=J[d+32>>2];J[e+36>>2]=f;f=J[d+60>>2];J[e+56>>2]=J[d+56>>2];J[e+60>>2]=f;f=J[d+52>>2];J[e+48>>2]=J[d+48>>2];J[e+52>>2]=f;f=J[d+68>>2];J[e+64>>2]=J[d+64>>2];J[e+68>>2]=f;f=J[d+76>>2];J[e+72>>2]=J[d+72>>2];J[e+76>>2]=f;k=k+1|0;if((k|0)!=(h|0)){continue}break}}d=J[c+24>>2];if(!(d?!d|!K[c+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[c+24>>2]=l;H[c+28|0]=1;J[c+20>>2]=j;h=J[c+16>>2]}e=J[a+4>>2];d=J[c+24>>2]+P(h,80)|0;J[d>>2]=J[a>>2];J[d+4>>2]=e;e=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=e;e=J[a+28>>2];J[d+24>>2]=J[a+24>>2];J[d+28>>2]=e;e=J[a+20>>2];J[d+16>>2]=J[a+16>>2];J[d+20>>2]=e;e=J[a+44>>2];J[d+40>>2]=J[a+40>>2];J[d+44>>2]=e;e=J[a+36>>2];J[d+32>>2]=J[a+32>>2];J[d+36>>2]=e;e=J[a+60>>2];J[d+56>>2]=J[a+56>>2];J[d+60>>2]=e;e=J[a+52>>2];J[d+48>>2]=J[a+48>>2];J[d+52>>2]=e;e=J[a+76>>2];J[d+72>>2]=J[a+72>>2];J[d+76>>2]=e;e=J[a+68>>2];J[d+64>>2]=J[a+64>>2];J[d+68>>2]=e;J[c+16>>2]=J[c+16>>2]+1;ga=b+144|0;ga=i+16|0}function zD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=0,h=0,i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0;r=N[b+28>>2];o=N[b+12>>2];f=o>Q(0)?o:Q(0);v=f<r?r:f;k=N[b+24>>2];p=N[b+8>>2];f=p>Q(-0xde0b6b000000000)?p:Q(-0xde0b6b000000000);w=f<k?k:f;l=N[b+20>>2];q=N[b+4>>2];f=q>Q(-0xde0b6b000000000)?q:Q(-0xde0b6b000000000);x=f<l?l:f;m=N[b+16>>2];n=N[b>>2];f=n>Q(-0xde0b6b000000000)?n:Q(-0xde0b6b000000000);y=f<m?m:f;f=o<Q(0)?o:Q(0);o=f>r?r:f;f=p<Q(0xde0b6b000000000)?p:Q(0xde0b6b000000000);p=f>k?k:f;f=q<Q(0xde0b6b000000000)?q:Q(0xde0b6b000000000);q=f>l?l:f;f=n<Q(0xde0b6b000000000)?n:Q(0xde0b6b000000000);f=f>m?m:f;k=N[b+44>>2];l=N[b+40>>2];m=N[b+36>>2];n=N[b+32>>2];j=J[a+4>>2];b=J[j+4>>2];a:{if((b|0)!=J[j+8>>2]){break a}s=b?b<<1:1;if((s|0)<=(b|0)){break a}if(s){J[8369]=J[8369]+1;t=ia[J[6782]](s<<6,16)|0;b=J[j+4>>2]}b:{if((b|0)<=0){break b}if((b|0)!=1){z=b&-2;while(1){g=u<<6;e=g+t|0;i=g+J[j+12>>2]|0;a=J[i+4>>2];J[e>>2]=J[i>>2];J[e+4>>2]=a;a=J[i+60>>2];J[e+56>>2]=J[i+56>>2];J[e+60>>2]=a;a=J[i+52>>2];J[e+48>>2]=J[i+48>>2];J[e+52>>2]=a;a=J[i+44>>2];J[e+40>>2]=J[i+40>>2];J[e+44>>2]=a;a=J[i+36>>2];J[e+32>>2]=J[i+32>>2];J[e+36>>2]=a;a=J[i+28>>2];J[e+24>>2]=J[i+24>>2];J[e+28>>2]=a;a=J[i+20>>2];J[e+16>>2]=J[i+16>>2];J[e+20>>2]=a;a=J[i+12>>2];J[e+8>>2]=J[i+8>>2];J[e+12>>2]=a;a=g|64;e=a+t|0;g=a+J[j+12>>2]|0;a=J[g+4>>2];J[e>>2]=J[g>>2];J[e+4>>2]=a;a=J[g+12>>2];J[e+8>>2]=J[g+8>>2];J[e+12>>2]=a;a=J[g+20>>2];J[e+16>>2]=J[g+16>>2];J[e+20>>2]=a;a=J[g+28>>2];J[e+24>>2]=J[g+24>>2];J[e+28>>2]=a;a=J[g+36>>2];J[e+32>>2]=J[g+32>>2];J[e+36>>2]=a;a=J[g+44>>2];J[e+40>>2]=J[g+40>>2];J[e+44>>2]=a;a=J[g+52>>2];J[e+48>>2]=J[g+48>>2];J[e+52>>2]=a;a=J[g+60>>2];J[e+56>>2]=J[g+56>>2];J[e+60>>2]=a;u=u+2|0;h=h+2|0;if((h|0)!=(z|0)){continue}break}}if(!(b&1)){break b}a=u<<6;b=a+t|0;h=a+J[j+12>>2]|0;a=J[h+4>>2];J[b>>2]=J[h>>2];J[b+4>>2]=a;a=J[h+60>>2];J[b+56>>2]=J[h+56>>2];J[b+60>>2]=a;a=J[h+52>>2];J[b+48>>2]=J[h+48>>2];J[b+52>>2]=a;a=J[h+44>>2];J[b+40>>2]=J[h+40>>2];J[b+44>>2]=a;a=J[h+36>>2];J[b+32>>2]=J[h+32>>2];J[b+36>>2]=a;a=J[h+28>>2];J[b+24>>2]=J[h+24>>2];J[b+28>>2]=a;a=J[h+20>>2];J[b+16>>2]=J[h+16>>2];J[b+20>>2]=a;a=J[h+12>>2];J[b+8>>2]=J[h+8>>2];J[b+12>>2]=a}a=J[j+12>>2];if(!(a?!a|!K[j+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[j+12>>2]=t;H[j+16|0]=1;J[j+8>>2]=s;b=J[j+4>>2]}a=J[j+12>>2]+(b<<6)|0;J[a+40>>2]=d;J[a+36>>2]=c;J[a+32>>2]=-1;N[a+16>>2]=n>y?n:y;N[a+12>>2]=k<o?k:o;N[a+8>>2]=l<p?l:p;N[a+4>>2]=m<q?m:q;N[a>>2]=f>n?n:f;N[a+28>>2]=k>v?k:v;N[a+24>>2]=l>w?l:w;N[a+20>>2]=m>x?m:x;J[j+4>>2]=J[j+4>>2]+1}function hg(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;j=b+12|0;k=c+12|0;n=J[a+12>>2];while(1){a=l+2|0;l=l+1|0;d=J[(((l&255)>>>0)%3<<2)+b>>2];g=J[c+4>>2];a:{b:{e=J[(((a&255)>>>0)%3<<2)+b>>2];h=J[c>>2];if((e|0)==(h|0)){a=2;if((d|0)==(g|0)){break b}}c:{if((d|0)==(h|0)){f=2;if((e|0)==(g|0)){break c}}i=J[c+8>>2];if((e|0)==(g|0)){a=0;if((d|0)==(i|0)){break b}}if((d|0)==(g|0)){f=0;if((e|0)==(i|0)){break c}}if((e|0)==(i|0)){a=1;if((d|0)==(h|0)){break b}}a=27144;if((d|0)!=(i|0)){break a}f=1;if((e|0)!=(h|0)){break a}}a=(f<<2)+k|0;break a}a=(a<<2)+k|0}f=J[b+4>>2];m=J[a>>2];d:{e:{h=J[b>>2];if((h|0)==(d|0)){a=2;if((e|0)==(f|0)){break e}}f:{if((e|0)==(h|0)){a=2;if((d|0)==(f|0)){break f}}i=J[b+8>>2];if((d|0)==(f|0)){a=0;if((e|0)==(i|0)){break e}}if((e|0)==(f|0)){a=0;if((d|0)==(i|0)){break f}}if((d|0)==(i|0)){a=1;if((e|0)==(h|0)){break e}}g=27144;if((e|0)!=(i|0)){break d}a=1;if((d|0)!=(h|0)){break d}}g=(a<<2)+j|0;break d}g=(a<<2)+j|0}f=2;g=J[(J[g>>2]<<2)+n>>2];a=J[g+4>>2];g:{h:{h=J[g>>2];if((h|0)==(e|0)&(a|0)==(d|0)){break h}i:{if((d|0)==(h|0)&(a|0)==(e|0)){break i}i=J[g+8>>2];if((a|0)==(e|0)){f=0;if((d|0)==(i|0)){break h}}if((a|0)==(d|0)){f=0;if((e|0)==(i|0)){break i}}if((e|0)==(i|0)){f=1;if((d|0)==(h|0)){break h}}a=27144;if((d|0)!=(i|0)){break g}f=1;if((e|0)!=(h|0)){break g}}a=(g+(f<<2)|0)+12|0;break g}a=(g+(f<<2)|0)+12|0}J[a>>2]=m;g=J[b+4>>2];j:{k:{h=J[b>>2];if((h|0)==(d|0)){a=2;if((e|0)==(g|0)){break k}}l:{if((e|0)==(h|0)){f=2;if((d|0)==(g|0)){break l}}i=J[b+8>>2];if((d|0)==(g|0)){a=0;if((e|0)==(i|0)){break k}}if((e|0)==(g|0)){f=0;if((d|0)==(i|0)){break l}}if((d|0)==(i|0)){a=1;if((e|0)==(h|0)){break k}}a=27144;if((e|0)!=(i|0)){break j}f=1;if((d|0)!=(h|0)){break j}}a=(f<<2)+j|0;break j}a=(a<<2)+j|0}f=J[c+4>>2];m=J[a>>2];m:{n:{h=J[c>>2];if((h|0)==(e|0)){a=2;if((d|0)==(f|0)){break n}}o:{if((d|0)==(h|0)){a=2;if((e|0)==(f|0)){break o}}i=J[c+8>>2];if((e|0)==(f|0)){a=0;if((d|0)==(i|0)){break n}}if((d|0)==(f|0)){a=0;if((e|0)==(i|0)){break o}}if((e|0)==(i|0)){a=1;if((d|0)==(h|0)){break n}}g=27144;if((d|0)!=(i|0)){break m}a=1;if((e|0)!=(h|0)){break m}}g=(a<<2)+k|0;break m}g=(a<<2)+k|0}f=2;g=J[(J[g>>2]<<2)+n>>2];a=J[g+4>>2];p:{q:{h=J[g>>2];if((h|0)==(d|0)&(a|0)==(e|0)){break q}r:{if((e|0)==(h|0)&(a|0)==(d|0)){break r}i=J[g+8>>2];if((a|0)==(d|0)){f=0;if((e|0)==(i|0)){break q}}if((a|0)==(e|0)){f=0;if((d|0)==(i|0)){break r}}if((d|0)==(i|0)){f=1;if((e|0)==(h|0)){break q}}a=27144;if((e|0)!=(i|0)){break p}f=1;if((d|0)!=(h|0)){break p}}a=(g+(f<<2)|0)+12|0;break p}a=(g+(f<<2)|0)+12|0}J[a>>2]=m;if((l|0)!=3){continue}break}}function uo(a,b,c,d,e){a=a|0;b=b|0;c=Q(c);d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=Q(0),k=0;f=ga-272|0;ga=f;J[f+268>>2]=a;J[f+264>>2]=b;N[f+260>>2]=c;J[f+256>>2]=d;J[f+252>>2]=e;d=J[f+268>>2];e=f+232|0;Ia(e,J[f+264>>2],f+260|0);a=ga-16|0;g=f+216|0;J[a+12>>2]=g;i=f+200|0;J[a+12>>2]=i;a=ga-32|0;ga=a;J[a+28>>2]=J[f+264>>2];J[a+24>>2]=g;J[a+20>>2]=i;b=ga-16|0;J[b+12>>2]=J[a+28>>2];h=ga-16|0;N[h+12>>2]=N[J[b+12>>2]+8>>2];a:{if(Q(R(N[h+12>>2]))>Q(.7071067690849304)){b=ga-16|0;J[b+12>>2]=J[a+28>>2];c=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+28>>2];c=Q(c*N[J[b+12>>2]+4>>2]);J[b+12>>2]=J[a+28>>2];j=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+28>>2];N[a+16>>2]=c+Q(j*N[J[b+12>>2]+8>>2]);N[b+12>>2]=N[a+16>>2];N[a+12>>2]=Q(1)/Q(Y(N[b+12>>2]));J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]>>2]=0;J[b+12>>2]=J[a+28>>2];c=Q(Q(-N[J[b+12>>2]+8>>2])*N[a+12>>2]);J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]+4>>2]=c;J[b+12>>2]=J[a+28>>2];c=Q(N[J[b+12>>2]+4>>2]*N[a+12>>2]);J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]+8>>2]=c;c=Q(N[a+16>>2]*N[a+12>>2]);J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]>>2]=c;J[b+12>>2]=J[a+28>>2];c=Q(-N[J[b+12>>2]>>2]);J[b+12>>2]=J[a+24>>2];c=Q(c*N[J[b+12>>2]+8>>2]);J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]+4>>2]=c;J[b+12>>2]=J[a+28>>2];c=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+24>>2];c=Q(c*N[J[b+12>>2]+4>>2]);break a}b=ga-16|0;J[b+12>>2]=J[a+28>>2];c=N[J[b+12>>2]>>2];J[b+12>>2]=J[a+28>>2];c=Q(c*N[J[b+12>>2]>>2]);J[b+12>>2]=J[a+28>>2];j=N[J[b+12>>2]+4>>2];J[b+12>>2]=J[a+28>>2];N[a+8>>2]=c+Q(j*N[J[b+12>>2]+4>>2]);N[b+12>>2]=N[a+8>>2];N[a+4>>2]=Q(1)/Q(Y(N[b+12>>2]));J[b+12>>2]=J[a+28>>2];c=Q(Q(-N[J[b+12>>2]+4>>2])*N[a+4>>2]);J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]>>2]=c;J[b+12>>2]=J[a+28>>2];c=Q(N[J[b+12>>2]>>2]*N[a+4>>2]);J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]+4>>2]=c;J[b+12>>2]=J[a+24>>2];N[J[b+12>>2]+8>>2]=0;J[b+12>>2]=J[a+28>>2];c=Q(-N[J[b+12>>2]+8>>2]);J[b+12>>2]=J[a+24>>2];c=Q(c*N[J[b+12>>2]+4>>2]);J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]>>2]=c;J[b+12>>2]=J[a+28>>2];c=N[J[b+12>>2]+8>>2];J[b+12>>2]=J[a+24>>2];c=Q(c*N[J[b+12>>2]>>2]);J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]+4>>2]=c;c=Q(N[a+8>>2]*N[a+4>>2])}b=ga-16|0;J[b+12>>2]=J[a+20>>2];N[J[b+12>>2]+8>>2]=c;ga=a+32|0;N[f+196>>2]=100;b=f+160|0;a=f+196|0;Ia(b,g,a);h=f+176|0;va(h,e,b);b=f+128|0;Ia(b,g,a);g=f+144|0;Ma(g,e,b);b=f+96|0;Ia(b,i,a);k=f+112|0;va(k,e,b);b=f- -64|0;Ia(b,i,a);a=f+80|0;Ma(a,e,b);b=f+48|0;za(b,J[f+256>>2],h);e=f+32|0;za(e,J[f+256>>2],g);ia[J[J[d>>2]+8>>2]](d,b,e,J[f+252>>2]);b=f+16|0;za(b,J[f+256>>2],k);za(f,J[f+256>>2],a);ia[J[J[d>>2]+8>>2]](d,b,f,J[f+252>>2]);ga=f+272|0}function Kd(a,b,c,d,e,f){var g=0,h=0,i=0,j=0,k=Q(0);g=a;J[g+104>>2]=0;J[g+108>>2]=0;H[g+100|0]=0;J[g+96>>2]=0;J[g+92>>2]=e;I[g+6>>1]=65535;I[g+4>>1]=65534;J[g>>2]=5460;if(!e){J[8369]=J[8369]+1;a=ia[J[6782]](76,16)|0;mh(a);H[g+100|0]=1;J[g+92>>2]=a}if(!f){J[8369]=J[8369]+1;a=ia[J[6782]](24,16)|0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+20>>2]=0;J[a>>2]=5524;J[a+12>>2]=0;J[a+16>>2]=0;J[a+8>>2]=0;H[a+20|0]=1;J[g+112>>2]=a;J[8369]=J[8369]+1;a=ia[J[6782]](196,16)|0;ph(a,J[g+112>>2]);J[g+108>>2]=a;H[a+193|0]=1}a=J[b+4>>2];J[g+8>>2]=J[b>>2];J[g+12>>2]=a;a=J[b+12>>2];J[g+16>>2]=J[b+8>>2];J[g+20>>2]=a;a=J[c+12>>2];J[g+32>>2]=J[c+8>>2];J[g+36>>2]=a;a=J[c+4>>2];J[g+24>>2]=J[c>>2];J[g+28>>2]=a;J[g+52>>2]=0;k=Q(L[g+6>>1]);N[g+48>>2]=k/Q(N[g+32>>2]-N[g+16>>2]);N[g+44>>2]=k/Q(N[g+28>>2]-N[g+12>>2]);N[g+40>>2]=k/Q(N[g+24>>2]-N[g+8>>2]);J[8369]=J[8369]+1;d=d+1|0;c=d&65535;e=c<<6;a=ia[J[6782]](e,16)|0;a:{if(!c){I[g+58>>1]=d;J[g+60>>2]=a;I[g+64>>1]=1;I[g+56>>1]=0;f=g+60|0;break a}f=c-1&67108863;h=c&7;b:{if(!h){b=a;break b}b=a;while(1){J[b+8>>2]=0;J[b>>2]=0;b=b- -64|0;j=j+1|0;if((h|0)!=(j|0)){continue}break}}if(f>>>0>=7){e=a+e|0;while(1){J[b+448>>2]=0;J[b+384>>2]=0;J[b+320>>2]=0;J[b+256>>2]=0;J[b+192>>2]=0;J[b+128>>2]=0;J[b+64>>2]=0;J[b+8>>2]=0;J[b>>2]=0;J[b+456>>2]=0;J[b+392>>2]=0;J[b+328>>2]=0;J[b+264>>2]=0;J[b+200>>2]=0;J[b+136>>2]=0;J[b+72>>2]=0;b=b+512|0;if((e|0)!=(b|0)){continue}break}}I[g+58>>1]=d;J[g+60>>2]=a;b=1;I[g+64>>1]=1;I[g+56>>1]=0;f=g+60|0;if((d&65535)>>>0<2){break a}e=c-1|0;d=e&7;if(c-2>>>0>=7){e=e&-8;j=0;while(1){h=b+1|0;I[(a+(b<<6)|0)+48>>1]=h;i=a+(h<<6)|0;h=b+2|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+3|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+4|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+5|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+6|0;I[i+48>>1]=h;i=a+(h<<6)|0;h=b+7|0;I[i+48>>1]=h;b=b+8|0;I[(a+(h<<6)|0)+48>>1]=b;j=j+8|0;if((e|0)!=(j|0)){continue}break}}if(!d){break a}j=0;while(1){e=a+(b<<6)|0;b=b+1|0;I[e+48>>1]=b;j=j+1|0;if((d|0)!=(j|0)){continue}break}}I[(a+(c<<6)|0)-16>>1]=0;J[8369]=J[8369]+1;a=c<<3;b=ia[J[6782]](a,16)|0;J[g+68>>2]=b;J[g+80>>2]=b;J[8369]=J[8369]+1;b=ia[J[6782]](a,16)|0;J[g+72>>2]=b;J[g+84>>2]=b;J[8369]=J[8369]+1;a=ia[J[6782]](a,16)|0;J[g+76>>2]=a;J[g+88>>2]=a;a=J[f>>2];I[a+48>>1]=0;J[a>>2]=0;I[a+54>>1]=1;b=J[g+68>>2];I[b>>1]=0;I[b+2>>1]=0;c=L[g+6>>1];I[b+6>>1]=0;I[b+4>>1]=c;I[a+56>>1]=1;I[a+50>>1]=0;b=J[g+72>>2];I[b>>1]=0;I[b+2>>1]=0;c=L[g+6>>1];I[b+6>>1]=0;I[b+4>>1]=c;I[a+58>>1]=1;I[a+52>>1]=0;a=J[g+76>>2];I[a>>1]=0;I[a+2>>1]=0;b=L[g+6>>1];I[a+6>>1]=0;I[a+4>>1]=b;J[g>>2]=5296}function wC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=0,s=0,t=Q(0),u=Q(0),v=0,w=0,x=0,y=0,z=Q(0),A=Q(0),B=Q(0),C=0;e=ga-112|0;ga=e;ia[J[J[a>>2]+112>>2]](a);J[e+100>>2]=0;H[e+104|0]=1;J[e+92>>2]=0;J[e+96>>2]=0;k=N[c+8>>2];l=N[d+8>>2];m=N[c>>2];h=N[d>>2];n=N[c+4>>2];p=N[d+4>>2];J[e+84>>2]=0;l=Q(l-k);m=Q(h-m);h=Q(p-n);k=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(m*m)+Q(h*h))))));N[e+80>>2]=l*k;N[e+76>>2]=h*k;N[e+72>>2]=m*k;y=J[a+68>>2];if((y|0)>0){while(1){o=q<<4;f=o+J[a+84>>2]|0;d=L[f+4>>1];m=N[a+132>>2];h=N[a+100>>2];j=L[f+10>>1];i=L[f+2>>1];l=N[a+128>>2];n=N[a+96>>2];r=L[f+8>>1];k=N[a+92>>2];g=N[a+124>>2];p=Q(k+Q(Q(L[f+6>>1])/g));a:{b:{c:{d:{g=Q(Q(Q(Q(Q(L[f>>1])/g)+k)+p)*Q(.5));k=Q(N[c>>2]-g);p=Q(p-g);e:{if(Q(R(k))>p&Q(k*N[e+72>>2])>=Q(0)){break e}g=Q(Q(Q(i>>>0)/l)+n);n=Q(n+Q(Q(r>>>0)/l));g=Q(Q(g+n)*Q(.5));l=Q(N[c+4>>2]-g);n=Q(n-g);if(Q(R(l))>n&Q(l*N[e+76>>2])>=Q(0)){break e}g=Q(Q(Q(d>>>0)/m)+h);h=Q(h+Q(Q(j>>>0)/m));g=Q(Q(g+h)*Q(.5));m=Q(N[c+8>>2]-g);g=Q(h-g);h=N[e+80>>2];if(Q(R(m))>g&Q(m*h)>=Q(0)){break e}t=N[e+76>>2];z=Q(R(t));A=Q(R(h));if(Q(R(Q(Q(t*m)-Q(l*h))))>Q(Q(n*A)+Q(g*z))){break e}u=N[e+72>>2];B=Q(R(u));if(!(Q(R(Q(Q(h*k)-Q(m*u))))>Q(Q(p*A)+Q(g*B)))){break d}}j=J[f+12>>2]>=0;d=0;break c}i=Q(R(Q(Q(u*l)-Q(k*t))))>Q(Q(p*z)+Q(n*B));d=!i;v=J[f+12>>2];j=(v|0)>=0;if((v|0)<0|i){break c}f=J[e+92>>2];f:{if((f|0)!=J[e+96>>2]){break f}r=f?f<<1:1;if((r|0)<=(f|0)){break f}g:{if(!r){d=0;break g}J[8369]=J[8369]+1;d=ia[J[6782]](r<<2,16)|0;f=J[e+92>>2]}o=J[e+100>>2];h:{i:{if((f|0)>0){w=0;j=0;if(f-1>>>0>=3){C=f&-4;x=0;while(1){i=j<<2;J[i+d>>2]=J[i+o>>2];s=i|4;J[s+d>>2]=J[o+s>>2];s=i|8;J[s+d>>2]=J[o+s>>2];i=i|12;J[i+d>>2]=J[i+o>>2];j=j+4|0;x=x+4|0;if((C|0)!=(x|0)){continue}break}}f=f&3;if(!f){break i}while(1){i=j<<2;J[i+d>>2]=J[i+o>>2];j=j+1|0;w=w+1|0;if((f|0)!=(w|0)){continue}break}break i}if(!o){break h}}if(o?K[e+104|0]:0){J[8370]=J[8370]+1;ia[J[6783]](o)}f=J[e+92>>2]}J[e+100>>2]=d;H[e+104|0]=1;J[e+96>>2]=r}J[J[e+100>>2]+(f<<2)>>2]=v;J[e+92>>2]=J[e+92>>2]+1;break b}if(d|j){break b}q=q-J[(o+J[a+84>>2]|0)+12>>2]|0;break a}q=q+1|0}if((y|0)>(q|0)){continue}break}}c=J[e+92>>2];if(c){d=J[a+172>>2];J[e+64>>2]=1008981770;while(1){c=c-1|0;q=c<<2;f=J[q+J[e+100>>2]>>2];j=ia[J[J[a>>2]+84>>2]](a)|0;ia[J[J[j>>2]+20>>2]](j,f,e);ia[J[J[b>>2]+8>>2]](b,e,d,J[q+J[e+100>>2]>>2]);if(c){continue}break}}ia[J[J[a>>2]+116>>2]](a);a=J[e+100>>2];if(!(a?!a|!K[e+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=e+112|0}function wo(a,b,c,d,e,f){a=a|0;b=Q(b);c=Q(c);d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;g=ga-400|0;ga=g;J[g+396>>2]=a;N[g+392>>2]=b;N[g+388>>2]=c;J[g+384>>2]=d;J[g+380>>2]=e;J[g+376>>2]=f;a=J[g+396>>2];d=ga-16|0;J[d+12>>2]=J[g+380>>2];d=J[d+12>>2]+48|0;e=J[d+4>>2];J[g+360>>2]=J[d>>2];J[g+364>>2]=e;e=J[d+12>>2];J[g+368>>2]=J[d+8>>2];J[g+372>>2]=e;N[g+340>>2]=0;N[g+336>>2]=0;N[g+332>>2]=0;d=g+344|0;na(d,g+340|0,g+336|0,g+332|0);b=N[g+388>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+384>>2]<<2)>>2]=b;J[g+328>>2]=30;N[g+308>>2]=0;N[g+304>>2]=0;N[g+300>>2]=0;d=g+312|0;na(d,g+308|0,g+304|0,g+300|0);b=Q(-N[g+388>>2]);e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+384>>2]<<2)>>2]=b;N[g+276>>2]=0;N[g+272>>2]=0;N[g+268>>2]=0;d=g+280|0;na(d,g+276|0,g+272|0,g+268|0);b=N[g+388>>2];e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+384>>2]<<2)>>2]=b;J[g+264>>2]=0;while(1){if(J[g+264>>2]<360){b=Q(Sa(Q(Q(J[g+264>>2])*Q(.01745329238474369)))*N[g+392>>2]);d=ga-16|0;e=g+312|0;J[d+12>>2]=e;N[J[d+12>>2]+((J[g+384>>2]+1|0)%3<<2)>>2]=b;f=g+280|0;J[d+12>>2]=f;N[J[d+12>>2]+((J[g+384>>2]+1|0)%3<<2)>>2]=b;b=Q(Ta(Q(Q(J[g+264>>2])*Q(.01745329238474369)))*N[g+392>>2]);d=ga-16|0;J[d+12>>2]=e;N[J[d+12>>2]+((J[g+384>>2]+2|0)%3<<2)>>2]=b;d=ga-16|0;J[d+12>>2]=f;N[J[d+12>>2]+((J[g+384>>2]+2|0)%3<<2)>>2]=b;d=ga-16|0;J[d+12>>2]=J[g+380>>2];h=g+232|0;wa(h,J[d+12>>2],e);d=g+248|0;e=g+360|0;va(d,e,h);h=ga-16|0;J[h+12>>2]=J[g+380>>2];i=g+200|0;wa(i,J[h+12>>2],f);f=g+216|0;va(f,e,i);ia[J[J[a>>2]+8>>2]](a,d,f,J[g+376>>2]);J[g+264>>2]=J[g+328>>2]+J[g+264>>2];continue}break}N[g+180>>2]=0;N[g+176>>2]=0;N[g+172>>2]=0;d=g+184|0;na(d,g+180|0,g+176|0,g+172|0);e=ga-16|0;J[e+12>>2]=d;N[J[e+12>>2]+(J[g+384>>2]<<2)>>2]=1;N[g+148>>2]=0;N[g+144>>2]=0;N[g+140>>2]=0;e=g+152|0;na(e,g+148|0,g+144|0,g+140|0);f=ga-16|0;J[f+12>>2]=e;N[J[f+12>>2]+((J[g+384>>2]+1|0)%3<<2)>>2]=1;f=ga-16|0;J[f+12>>2]=J[g+380>>2];h=g+104|0;i=J[f+12>>2];f=g+344|0;wa(h,i,f);i=g+120|0;j=g+360|0;Ma(i,j,h);h=ga-16|0;J[h+12>>2]=J[g+380>>2];k=g+88|0;wa(k,J[h+12>>2],d);h=ga-16|0;J[h+12>>2]=J[g+380>>2];l=g+72|0;wa(l,J[h+12>>2],e);b=N[g+392>>2];ia[J[J[a>>2]+60>>2]](a,i,k,l,b,b,Q(0),Q(6.2831854820251465),J[g+376>>2],0,Q(10));h=ga-16|0;J[h+12>>2]=J[g+380>>2];i=g+40|0;wa(i,J[h+12>>2],f);f=g+56|0;va(f,j,i);h=ga-16|0;J[h+12>>2]=J[g+380>>2];i=g+24|0;wa(i,J[h+12>>2],d);d=ga-16|0;J[d+12>>2]=J[g+380>>2];h=g+8|0;wa(h,J[d+12>>2],e);ia[J[J[a>>2]+60>>2]](a,f,i,h,N[g+392>>2],N[g+392>>2],Q(0),Q(6.2831854820251465),J[g+376>>2],0,Q(10));ga=g+400|0}function AD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=Q(0),l=0,m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=0,z=Q(0),A=0,B=0,C=0,D=Q(0);g=N[b+40>>2];e=N[b+24>>2];f=N[b+8>>2];h=f>Q(-0xde0b6b000000000)?f:Q(-0xde0b6b000000000);h=e>h?e:h;t=g>h?g:h;f=f<Q(0xde0b6b000000000)?f:Q(0xde0b6b000000000);e=e<f?e:f;n=e>g?g:e;z=Q(t-n);g=N[b+36>>2];e=N[b+20>>2];f=N[b+4>>2];h=f<Q(0xde0b6b000000000)?f:Q(0xde0b6b000000000);h=e<h?e:h;h=g<h?g:h;f=f>Q(-0xde0b6b000000000)?f:Q(-0xde0b6b000000000);e=e>f?e:f;g=e<g?g:e;e=N[b+32>>2];f=N[b+16>>2];k=N[b>>2];q=k<Q(0xde0b6b000000000)?k:Q(0xde0b6b000000000);r=f<q?f:q;A=e<r;k=k>Q(-0xde0b6b000000000)?k:Q(-0xde0b6b000000000);p=f>k?f:k;B=p<e;b=J[a+8>>2];f=N[b+44>>2];k=N[b+40>>2];q=N[b+12>>2];v=N[b+8>>2];w=N[b+36>>2];x=N[b+4>>2];j=J[a+4>>2];b=J[j+4>>2];a:{if((b|0)!=J[j+8>>2]){break a}s=b?b<<1:1;if((s|0)<=(b|0)){break a}if(s){J[8369]=J[8369]+1;o=ia[J[6782]](s<<4,16)|0;b=J[j+4>>2]}b:{if((b|0)<=0){break b}a=0;if((b|0)!=1){C=b&-2;while(1){l=a<<4;m=l+o|0;i=l+J[j+12>>2]|0;u=J[i+4>>2];J[m>>2]=J[i>>2];J[m+4>>2]=u;u=J[i+12>>2];J[m+8>>2]=J[i+8>>2];J[m+12>>2]=u;i=l|16;l=i+o|0;i=i+J[j+12>>2]|0;m=J[i+4>>2];J[l>>2]=J[i>>2];J[l+4>>2]=m;m=J[i+12>>2];J[l+8>>2]=J[i+8>>2];J[l+12>>2]=m;a=a+2|0;y=y+2|0;if((y|0)!=(C|0)){continue}break}}if(!(b&1)){break b}b=a<<4;a=b+o|0;b=b+J[j+12>>2]|0;i=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=i;i=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=i}a=J[j+12>>2];if(!(a?!a|!K[j+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[j+12>>2]=o;H[j+16|0]=1;J[j+8>>2]=s;b=J[j+4>>2]}D=Q(g-h);a=J[j+12>>2]+(b<<4)|0;J[a+12>>2]=c<<21|d;p=B?e:p;e=A?e:r;r=Q(p-e);c=z<Q(.0020000000949949026);n=Q(Q((c?Q(n+Q(-.0010000000474974513)):n)-q)*f);c:{if(n<Q(4294967296)&n>=Q(0)){b=~~n>>>0;break c}b=0}I[a+4>>1]=b&65534;d=D<Q(.0020000000949949026);h=Q(Q((d?Q(h+Q(-.0010000000474974513)):h)-v)*k);d:{if(h<Q(4294967296)&h>=Q(0)){b=~~h>>>0;break d}b=0}I[a+2>>1]=b&65534;o=r<Q(.0020000000949949026);e=Q(Q((o?Q(e+Q(-.0010000000474974513)):e)-x)*w);e:{if(e<Q(4294967296)&e>=Q(0)){b=~~e>>>0;break e}b=0}I[a>>1]=b&65534;e=Q(Q(Q((c?Q(t+Q(.0010000000474974513)):t)-q)*f)+Q(1));f:{if(e<Q(4294967296)&e>=Q(0)){b=~~e>>>0;break f}b=0}I[a+10>>1]=b|1;g=Q(Q(Q((d?Q(g+Q(.0010000000474974513)):g)-v)*k)+Q(1));g:{if(g<Q(4294967296)&g>=Q(0)){b=~~g>>>0;break g}b=0}I[a+8>>1]=b|1;g=Q(Q(Q((o?Q(p+Q(.0010000000474974513)):p)-x)*w)+Q(1));h:{if(g<Q(4294967296)&g>=Q(0)){b=~~g>>>0;break h}b=0}I[a+6>>1]=b|1;J[j+4>>2]=J[j+4>>2]+1}function Wj(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;h=J[b>>2];l=J[a+4>>2];i=J[b+4>>2];f=J[b+8>>2];n=ec(a,c,i,f);d=2;e=J[b+12>>2];o=l+2|0;J[n+20>>2]=o;p=l+1|0;J[n+16>>2]=p;J[n+12>>2]=e;j=J[J[a+12>>2]+(J[b+12>>2]<<2)>>2];e=J[j+4>>2];a:{b:{k=J[j>>2];if((k|0)==(i|0)&(e|0)==(f|0)){break b}c:{if((f|0)==(k|0)&(e|0)==(i|0)){break c}g=J[j+8>>2];if((e|0)==(i|0)){d=0;if((f|0)==(g|0)){break b}}if((e|0)==(f|0)){d=0;if((g|0)==(i|0)){break c}}if((g|0)==(i|0)){d=1;if((f|0)==(k|0)){break b}}e=27144;if((f|0)!=(g|0)){break a}d=1;if((i|0)!=(k|0)){break a}}e=(j+(d<<2)|0)+12|0;break a}e=(j+(d<<2)|0)+12|0}J[e>>2]=l;j=ec(a,c,f,h);e=J[b+16>>2];J[j+20>>2]=l;J[j+16>>2]=o;J[j+12>>2]=e;e=2;g=J[J[a+12>>2]+(J[b+16>>2]<<2)>>2];d=J[g+4>>2];d:{e:{m=J[g>>2];if((m|0)==(f|0)&(d|0)==(h|0)){break e}f:{if((h|0)==(m|0)&(d|0)==(f|0)){break f}k=J[g+8>>2];if((d|0)==(f|0)){e=0;if((h|0)==(k|0)){break e}}if((d|0)==(h|0)){e=0;if((f|0)==(k|0)){break f}}if((f|0)==(k|0)){e=1;if((h|0)==(m|0)){break e}}d=27144;if((h|0)!=(k|0)){break d}e=1;if((f|0)!=(m|0)){break d}}d=(g+(e<<2)|0)+12|0;break d}d=(g+(e<<2)|0)+12|0}J[d>>2]=p;f=ec(a,c,h,i);e=J[b+20>>2];J[f+20>>2]=p;J[f+16>>2]=l;J[f+12>>2]=e;d=2;e=J[a+12>>2];l=J[e+(J[b+20>>2]<<2)>>2];g=J[l+4>>2];g:{h:{m=J[l>>2];if((m|0)==(h|0)&(g|0)==(i|0)){break h}i:{if((i|0)==(m|0)&(g|0)==(h|0)){break i}k=J[l+8>>2];if((g|0)==(h|0)){d=0;if((i|0)==(k|0)){break h}}if((g|0)==(i|0)){d=0;if((h|0)==(k|0)){break i}}if((h|0)==(k|0)){d=1;if((i|0)==(m|0)){break h}}g=27144;if((i|0)!=(k|0)){break g}d=1;if((h|0)!=(m|0)){break g}}g=(l+(d<<2)|0)+12|0;break g}g=(l+(d<<2)|0)+12|0}J[g>>2]=o;d=J[(J[n+12>>2]<<2)+e>>2];if(!(!(J[d>>2]==(c|0)|J[d+4>>2]==(c|0))&J[d+8>>2]!=(c|0))){hg(a,n,d);J[J[a+12>>2]+(J[n+24>>2]<<2)>>2]=0;if(n){J[8370]=J[8370]+1;ia[J[6783]](n)}J[J[a+12>>2]+(J[d+24>>2]<<2)>>2]=0;if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}e=J[a+12>>2]}d=J[(J[j+12>>2]<<2)+e>>2];if(!(!(J[d>>2]==(c|0)|J[d+4>>2]==(c|0))&J[d+8>>2]!=(c|0))){hg(a,j,d);J[J[a+12>>2]+(J[j+24>>2]<<2)>>2]=0;if(j){J[8370]=J[8370]+1;ia[J[6783]](j)}J[J[a+12>>2]+(J[d+24>>2]<<2)>>2]=0;if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}e=J[a+12>>2]}d=J[(J[f+12>>2]<<2)+e>>2];if(!(!(J[d>>2]==(c|0)|J[d+4>>2]==(c|0))&J[d+8>>2]!=(c|0))){hg(a,f,d);J[J[a+12>>2]+(J[f+24>>2]<<2)>>2]=0;if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}J[J[a+12>>2]+(J[d+24>>2]<<2)>>2]=0;if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}e=J[a+12>>2]}J[(J[b+24>>2]<<2)+e>>2]=0;if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}function Js(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=0,D=Q(0),E=Q(0),F=Q(0);e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;H[e+7|0]=c;b=ra(1128);c=J[e+12>>2];a=J[e+8>>2];A=K[e+7|0];xb(b,7,Rk(),c);H[b+48|0]=0;J[b>>2]=20024;d=J[a+12>>2];J[b+124>>2]=J[a+8>>2];J[b+128>>2]=d;d=J[a+4>>2];J[b+116>>2]=J[a>>2];J[b+120>>2]=d;d=J[a+28>>2];J[b+140>>2]=J[a+24>>2];J[b+144>>2]=d;d=J[a+20>>2];J[b+132>>2]=J[a+16>>2];J[b+136>>2]=d;d=J[a+36>>2];J[b+148>>2]=J[a+32>>2];J[b+152>>2]=d;d=J[a+44>>2];J[b+156>>2]=J[a+40>>2];J[b+160>>2]=d;d=J[a+56>>2];B=J[a+60>>2];C=J[a+52>>2];a=J[a+48>>2];H[b+180|0]=A&1;J[b+164>>2]=a;J[b+168>>2]=C;J[b+172>>2]=d;J[b+176>>2]=B;D=N[c+52>>2];E=N[c+56>>2];F=N[c+60>>2];o=N[b+172>>2];p=N[b+164>>2];q=N[b+168>>2];f=N[c+8>>2];g=N[c+12>>2];h=N[c+28>>2];i=N[c+20>>2];j=N[c+24>>2];r=N[b+132>>2];s=N[b+148>>2];t=N[b+152>>2];u=N[b+120>>2];v=N[b+136>>2];k=N[c+44>>2];w=N[b+156>>2];l=N[c+36>>2];x=N[b+124>>2];m=N[c+40>>2];y=N[b+140>>2];n=N[c+4>>2];z=N[b+116>>2];J[b+288>>2]=1065353216;J[b+292>>2]=0;J[b+280>>2]=1065353216;J[b+284>>2]=1060320051;J[b+272>>2]=1065353216;J[b+276>>2]=0;J[b+264>>2]=1065353216;J[b+268>>2]=1060320051;J[b+224>>2]=0;J[b+228>>2]=0;J[b+216>>2]=1065353216;J[b+220>>2]=1060320051;J[b+208>>2]=0;J[b+212>>2]=0;J[b+200>>2]=1065353216;J[b+204>>2]=1060320051;J[b+192>>2]=0;J[b+196>>2]=0;J[b+184>>2]=1065353216;J[b+188>>2]=-1082130432;J[b+112>>2]=0;J[b+96>>2]=0;J[b+80>>2]=0;J[b- -64>>2]=0;N[b+92>>2]=Q(w*k)+Q(Q(x*l)+Q(y*m));N[b+88>>2]=Q(t*k)+Q(Q(u*l)+Q(v*m));N[b+84>>2]=Q(s*k)+Q(Q(z*l)+Q(r*m));N[b+76>>2]=Q(w*h)+Q(Q(x*i)+Q(y*j));N[b+72>>2]=Q(t*h)+Q(Q(u*i)+Q(v*j));N[b+68>>2]=Q(s*h)+Q(Q(z*i)+Q(r*j));N[b+60>>2]=Q(w*g)+Q(Q(x*n)+Q(f*y));N[b+56>>2]=Q(t*g)+Q(Q(u*n)+Q(f*v));N[b+52>>2]=Q(s*g)+Q(Q(z*n)+Q(r*f));N[b+108>>2]=F+Q(Q(o*k)+Q(Q(p*l)+Q(m*q)));N[b+104>>2]=E+Q(Q(o*h)+Q(Q(p*i)+Q(j*q)));N[b+100>>2]=D+Q(Q(o*g)+Q(Q(p*n)+Q(f*q)));J[b+1124>>2]=0;J[b+1116>>2]=0;J[b+1120>>2]=0;H[b+1096|0]=0;J[b+256>>2]=1065353216;J[b+260>>2]=0;J[b+248>>2]=1065353216;J[b+252>>2]=1060320051;J[b+240>>2]=1065353216;J[b+244>>2]=0;J[b+232>>2]=1065353216;J[b+236>>2]=1060320051;J[b+1100>>2]=0;J[b+1104>>2]=0;J[b+300>>2]=0;a=b+1105|0;H[a|0]=0;H[a+1|0]=0;H[a+2|0]=0;H[a+3|0]=0;H[a+4|0]=0;H[a+5|0]=0;H[a+6|0]=0;H[a+7|0]=0;H[b+49|0]=1;vg(b,J[b+28>>2]+4|0,J[b+32>>2]+4|0);ga=e+16|0;return b|0}function nF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=0,o=Q(0),p=Q(0),q=0,r=0,s=0;k=ga-32|0;ga=k;d=J[a+4>>2];ia[J[J[d>>2]+16>>2]](d,k+28|0,k+24|0,k+20|0,k+16|0,k+12|0,k+8|0,k+4|0,k,b);e=J[a+4>>2];g=J[k+12>>2]+P(J[k+8>>2],c)|0;n=J[k+16>>2];f=J[k>>2];d=J[k+28>>2];a:{b:{c:{d:{e:{if(J[k+20>>2]){switch(f-2|0){case 0:break d;case 1:break e;default:break c}}f:{g:{switch(f-2|0){case 0:f=P(n,J[g+8>>2])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+56>>2]=0;N[a+52>>2]=j*p;N[a+48>>2]=i*o;N[a+44>>2]=h*m;f=P(n,J[g+4>>2])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+40>>2]=0;N[a+36>>2]=j*p;N[a+32>>2]=i*o;N[a+28>>2]=h*m;d=P(n,J[g>>2])+d|0;g=d+8|0;i=Q(N[d>>2]*N[e+4>>2]);h=Q(N[d+4>>2]*N[e+8>>2]);break f;case 1:f=P(n,L[g+4>>1])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+56>>2]=0;N[a+52>>2]=j*p;N[a+48>>2]=i*o;N[a+44>>2]=h*m;f=P(n,L[g+2>>1])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+40>>2]=0;N[a+36>>2]=j*p;N[a+32>>2]=i*o;N[a+28>>2]=h*m;d=P(n,L[g>>1])+d|0;g=d+8|0;i=Q(N[d>>2]*N[e+4>>2]);h=Q(N[d+4>>2]*N[e+8>>2]);break f;default:break g}}f=P(n,K[g+2|0])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+56>>2]=0;N[a+52>>2]=j*p;N[a+48>>2]=i*o;N[a+44>>2]=h*m;f=P(n,K[g+1|0])+d|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];o=N[e+8>>2];p=N[e+12>>2];J[a+40>>2]=0;N[a+36>>2]=j*p;N[a+32>>2]=i*o;N[a+28>>2]=h*m;d=P(n,K[g|0])+d|0;g=d+8|0;i=Q(N[d>>2]*N[e+4>>2]);h=Q(N[d+4>>2]*N[e+8>>2])}j=N[e+12>>2];break a}l=L[g+4>>1];break b}l=J[g+8>>2];break b}l=K[g+2|0]}l=P(n,l)+d|0;q=O[l>>3];r=O[l+8>>3];s=O[l+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[a+56>>2]=0;N[a+52>>2]=j*Q(s);N[a+48>>2]=i*Q(r);N[a+44>>2]=h*Q(q);h:{i:{switch(f-2|0){case 0:l=J[g+4>>2];break h;case 1:l=L[g+2>>1];break h;default:break i}}l=K[g+1|0]}l=P(l,n)+d|0;q=O[l>>3];r=O[l+8>>3];s=O[l+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[a+40>>2]=0;N[a+36>>2]=j*Q(s);N[a+32>>2]=i*Q(r);N[a+28>>2]=h*Q(q);j:{k:{switch(f-2|0){case 0:f=J[g>>2];break j;case 1:f=L[g>>1];break j;default:break k}}f=K[g|0]}g=e+12|0;d=P(f,n)+d|0;h=Q(N[e+8>>2]*Q(O[d+8>>3]));i=Q(N[e+4>>2]*Q(O[d>>3]));j=Q(O[d+16>>3])}m=N[g>>2];J[a+24>>2]=0;N[a+16>>2]=h;N[a+12>>2]=i;N[a+20>>2]=m*j;d=J[a+8>>2];ia[J[J[d>>2]+8>>2]](d,a+12|0,b,c);a=J[a+4>>2];ia[J[J[a>>2]+24>>2]](a,b);ga=k+32|0}function nB(a){a=a|0;var b=0,c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0);c=ga-48|0;ga=c;if(K[a+1308|0]){J[a+1056>>2]=0;J[a+992>>2]=0;J[a+928>>2]=0;J[a+712>>2]=0;J[a+716>>2]=0;J[a+720>>2]=0;J[a+724>>2]=0;pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0);ia[J[J[a>>2]+44>>2]](a);b=a+1292|0;d=J[b+4>>2];J[c+40>>2]=J[b>>2];J[c+44>>2]=d;d=J[a+1288>>2];J[c+32>>2]=J[a+1284>>2];J[c+36>>2]=d;d=J[b+4>>2];J[c+24>>2]=J[b>>2];J[c+28>>2]=d;b=J[a+1288>>2];J[c+16>>2]=J[a+1284>>2];J[c+20>>2]=b;if(N[a+696>>2]>=N[a+680>>2]){b=K[a+1300|0];g=N[(b?a+1064|0:a+1128|0)>>2];f=N[(b?a+1080|0:a+1144|0)>>2];e=N[(b?a+1096|0:a+1160|0)>>2];J[c+12>>2]=0;N[c+8>>2]=e;N[c+4>>2]=f;N[c>>2]=g;xg(a,a+176|0,c,c+32|0,c+16|0)}if(N[a+700>>2]>=N[a+684>>2]){b=K[a+1300|0];g=N[(b?a+1068|0:a+1132|0)>>2];f=N[(b?a+1084|0:a+1148|0)>>2];e=N[(b?a+1100|0:a+1164|0)>>2];J[c+12>>2]=0;N[c+8>>2]=e;N[c+4>>2]=f;N[c>>2]=g;xg(a,a+260|0,c,c+32|0,c+16|0)}if(N[a+704>>2]>=N[a+688>>2]){b=K[a+1300|0];g=N[(b?a+1072|0:a+1136|0)>>2];f=N[(b?a+1088|0:a+1152|0)>>2];e=N[(b?a+1104|0:a+1168|0)>>2];J[c+12>>2]=0;N[c+8>>2]=e;N[c+4>>2]=f;N[c>>2]=g;xg(a,a+344|0,c,c+32|0,c+16|0)}while(1){if(Fe(a,m)){b=(m<<4)+a|0;d=b+1216|0;h=J[d+4>>2];J[c+8>>2]=J[d>>2];J[c+12>>2]=h;b=b+1208|0;d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;d=J[a+32>>2];i=N[d+36>>2];j=N[d+20>>2];n=N[d+40>>2];k=N[d+8>>2];l=N[d+24>>2];o=N[d+44>>2];s=N[d+12>>2];t=N[d+28>>2];h=J[a+28>>2];p=N[h+36>>2];u=N[h+20>>2];q=N[h+40>>2];v=N[h+8>>2];w=N[h+24>>2];r=N[h+44>>2];x=N[h+12>>2];y=N[h+28>>2];z=N[d+4>>2];A=N[h+4>>2];b=P(m,84)+a|0;J[b+436>>2]=0;J[b+440>>2]=0;J[b+428>>2]=0;J[b+432>>2]=0;g=N[c+8>>2];e=N[c>>2];f=N[c+4>>2];J[b+472>>2]=0;J[b+456>>2]=0;r=Q(Q(r*g)+Q(Q(x*e)+Q(y*f)));N[b+452>>2]=r;q=Q(Q(q*g)+Q(Q(v*e)+Q(w*f)));N[b+448>>2]=q;p=Q(Q(p*g)+Q(Q(A*e)+Q(u*f)));N[b+444>>2]=p;e=Q(-e);o=Q(Q(Q(s*e)-Q(t*f))-Q(o*g));N[b+468>>2]=o;n=Q(Q(Q(k*e)-Q(l*f))-Q(n*g));N[b+464>>2]=n;g=Q(Q(Q(z*e)-Q(j*f))-Q(i*g));N[b+460>>2]=g;f=N[h+400>>2];e=N[h+404>>2];i=N[h+396>>2];J[b+488>>2]=0;e=Q(r*e);N[b+484>>2]=e;f=Q(q*f);N[b+480>>2]=f;i=Q(p*i);N[b+476>>2]=i;j=N[d+400>>2];k=N[d+404>>2];l=N[d+396>>2];J[b+504>>2]=0;k=Q(o*k);N[b+500>>2]=k;j=Q(n*j);N[b+496>>2]=j;l=Q(g*l);N[b+492>>2]=l;N[b+508>>2]=Q(Q(e*r)+Q(Q(i*p)+Q(q*f)))+Q(Q(k*o)+Q(Q(l*g)+Q(n*j)))}m=m+1|0;if((m|0)!=3){continue}break}}ga=c+48|0}function QG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),L=Q(0);n=ga-16|0;ga=n;k=N[b+8>>2];f=N[c+8>>2];q=Q(Q(k*d)+f);C=N[b+4>>2];B=N[c+4>>2];D=Q(Q(C*d)+B);E=N[b>>2];e=Q(E*d);d=N[c>>2];F=Q(e+d);a:{if(K[a+228|0]){r=N[a+44>>2];i=Q(-N[a+84>>2]);s=N[a+60>>2];h=N[a+88>>2];t=N[a+76>>2];g=N[a+92>>2];y=Q(Q(Q(r*i)-Q(s*h))-Q(t*g));e=N[a+204>>2];u=N[a+36>>2];v=N[a+52>>2];w=N[a+68>>2];z=Q(Q(Q(u*i)-Q(v*h))-Q(w*g));l=N[a+196>>2];x=N[a+40>>2];j=Q(x*i);i=N[a+56>>2];j=Q(j-Q(i*h));h=N[a+72>>2];j=Q(j-Q(h*g));g=N[a+200>>2];e=Q(Q(Q(Q(y*e)+Q(Q(z*l)+Q(j*g)))+N[a+220>>2])+Q(Q(q*Q(Q(t*e)+Q(Q(w*l)+Q(h*g))))+Q(Q(F*Q(Q(r*e)+Q(Q(u*l)+Q(x*g))))+Q(D*Q(Q(s*e)+Q(Q(v*l)+Q(i*g)))))));g=e;l=k;o=Q(Q(e-f)*k);f=N[a+172>>2];e=N[a+164>>2];k=N[a+168>>2];e=Q(Q(Q(q*Q(Q(t*f)+Q(Q(w*e)+Q(h*k))))+Q(Q(F*Q(Q(r*f)+Q(Q(u*e)+Q(x*k))))+Q(D*Q(Q(s*f)+Q(Q(v*e)+Q(i*k))))))+Q(Q(Q(y*f)+Q(Q(z*e)+Q(j*k)))+N[a+212>>2]));p=Q(Q(e-d)*E);k=q;d=N[a+188>>2];f=N[a+180>>2];q=N[a+184>>2];f=Q(Q(Q(k*Q(Q(t*d)+Q(Q(w*f)+Q(h*q))))+Q(Q(F*Q(Q(r*d)+Q(Q(u*f)+Q(x*q))))+Q(D*Q(Q(s*d)+Q(Q(v*f)+Q(i*q))))))+Q(Q(Q(y*d)+Q(Q(z*f)+Q(j*q)))+N[a+216>>2]));d=Q(o+Q(p+Q(C*Q(f-B))));N[n+8>>2]=g+Q(l*d);N[n+4>>2]=f+Q(C*d);N[n>>2]=e+Q(E*d);break a}I=N[a+220>>2];r=N[a+204>>2];s=N[a+196>>2];t=N[a+200>>2];L=N[a+212>>2];e=N[a+168>>2];u=N[a+172>>2];v=N[a+164>>2];w=N[a+108>>2];o=Q(-N[a+148>>2]);l=N[a+124>>2];p=N[a+152>>2];x=N[a+140>>2];A=N[a+156>>2];i=Q(Q(Q(w*o)-Q(l*p))-Q(x*A));h=N[a+100>>2];g=N[a+116>>2];y=N[a+132>>2];z=Q(Q(Q(h*o)-Q(g*p))-Q(y*A));j=N[a+104>>2];m=Q(j*o);o=N[a+120>>2];m=Q(m-Q(o*p));p=N[a+136>>2];A=Q(m-Q(p*A));m=N[a+188>>2];G=N[a+180>>2];H=N[a+184>>2];m=Q(Q(Q(f*Q(Q(x*m)+Q(Q(y*G)+Q(p*H))))+Q(Q(d*Q(Q(w*m)+Q(Q(h*G)+Q(j*H))))+Q(B*Q(Q(l*m)+Q(Q(g*G)+Q(o*H))))))+Q(Q(Q(i*m)+Q(Q(z*G)+Q(A*H)))+N[a+216>>2]));N[n+4>>2]=m;e=Q(Q(Q(f*Q(Q(x*u)+Q(Q(y*v)+Q(p*e))))+Q(Q(d*Q(Q(w*u)+Q(Q(h*v)+Q(j*e))))+Q(B*Q(Q(l*u)+Q(Q(g*v)+Q(o*e))))))+Q(L+Q(Q(i*u)+Q(Q(z*v)+Q(A*e)))));N[n>>2]=e;d=Q(Q(I+Q(Q(i*r)+Q(Q(z*s)+Q(A*t))))+Q(Q(f*Q(Q(x*r)+Q(Q(y*s)+Q(p*t))))+Q(Q(d*Q(Q(w*r)+Q(Q(h*s)+Q(j*t))))+Q(B*Q(Q(l*r)+Q(Q(g*s)+Q(o*t)))))));N[n+8>>2]=d;d=Q(Q(Q(q-d)*k)+Q(Q(Q(F-e)*E)+Q(C*Q(D-m))))}J[n+12>>2]=0;a=J[a+32>>2];ia[J[J[a>>2]+16>>2]](a,b,n,d);ga=n+16|0}function Um(a){a=a|0;var b=0,c=0,d=Q(0),e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=0,o=0;b=ga-80|0;ga=b;a:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break a}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)&8)){break a}c=J[a+24>>2];l=ia[J[J[c>>2]+36>>2]](c)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+64>>2]=1065353216;J[b+68>>2]=1065353216;c=0;if((l|0)<=0){break a}while(1){g=0;e=J[a+24>>2];m=ia[J[J[e>>2]+40>>2]](e,c)|0;n=J[m+748>>2];if((n|0)>0){while(1){o=ia[J[J[a>>2]+20>>2]](a)|0;e=P(g,184)+m|0;ia[J[J[o>>2]+32>>2]](o,e+36|0,e+68|0,N[e+84>>2],J[e+152>>2],b- -64|0);g=g+1|0;if((n|0)!=(g|0)){continue}break}}c=c+1|0;if((l|0)!=(c|0)){continue}break}}b:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break b}c=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[c>>2]+48>>2]](c)&3)|J[a+8>>2]<=0){break b}g=0;while(1){c=J[J[a+16>>2]+(g<<2)>>2];c:{if(K[c+204|0]&32){break c}d:{if(!(ia[J[J[a>>2]+20>>2]](a)|0)){break d}e=ia[J[J[a>>2]+20>>2]](a)|0;if(!(ia[J[J[e>>2]+48>>2]](e)&1)){break d}e:{f:{g:{h:{switch(J[c+216>>2]-1|0){case 0:J[b+64>>2]=1065353216;break f;case 1:J[b+64>>2]=0;break g;case 2:J[b+64>>2]=0;break f;case 4:J[b+64>>2]=1065353216;break g;default:break h}}J[b+64>>2]=1065353216;f=Q(0);d=Q(0);break e}f=Q(1);d=Q(0);break e}f=Q(1);d=Q(1)}J[b+76>>2]=0;N[b+72>>2]=d;N[b+68>>2]=f;ia[J[J[a>>2]+28>>2]](a,c+4|0,J[c+192>>2],b- -64|0)}e=J[a+72>>2];if(!e){break c}if(!(ia[J[J[e>>2]+48>>2]](e)&2)){break c}J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=1065353216;J[b+36>>2]=0;e=J[c+192>>2];ia[J[J[e>>2]+8>>2]](e,c+4|0,b- -64|0,b+48|0);d=N[6778];N[b+64>>2]=N[b+64>>2]-d;N[b+68>>2]=N[b+68>>2]-d;N[b+72>>2]=N[b+72>>2]-d;N[b+48>>2]=d+N[b+48>>2];N[b+52>>2]=d+N[b+52>>2];N[b+56>>2]=d+N[b+56>>2];i:{if(K[c+204|0]&3|(!K[a+44|0]|J[c+236>>2]!=2)){break i}e=J[c+192>>2];ia[J[J[e>>2]+8>>2]](e,c+68|0,b+16|0,b);f=Q(N[b+16>>2]-d);N[b+16>>2]=f;h=Q(N[b+20>>2]-d);N[b+20>>2]=h;i=Q(N[b+24>>2]-d);N[b+24>>2]=i;j=Q(d+N[b>>2]);N[b>>2]=j;k=Q(d+N[b+4>>2]);N[b+4>>2]=k;d=Q(d+N[b+8>>2]);N[b+8>>2]=d;if(f<N[b+64>>2]){N[b+64>>2]=f}if(N[b+68>>2]>h){N[b+68>>2]=h}if(N[b+72>>2]>i){N[b+72>>2]=i}f=N[b+28>>2];if(f<N[b+76>>2]){N[b+76>>2]=f}if(N[b+48>>2]<j){N[b+48>>2]=j}if(N[b+52>>2]<k){N[b+52>>2]=k}if(d>N[b+56>>2]){N[b+56>>2]=d}d=N[b+12>>2];if(!(d>N[b+60>>2])){break i}N[b+60>>2]=d}c=J[a+72>>2];ia[J[J[c>>2]+52>>2]](c,b- -64|0,b+48|0,b+32|0)}g=g+1|0;if((g|0)<J[a+8>>2]){continue}break}}ga=b+80|0}function fl(a,b){var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0);q=J[b+4>>2];J[a+556>>2]=J[b>>2];J[a+560>>2]=q;q=J[b+12>>2];J[a+564>>2]=J[b+8>>2];J[a+568>>2]=q;j=Q(-0);l=Q(1);c=N[a+568>>2];d=Q(c*Q(0));f=N[a+564>>2];h=N[a+556>>2];e=Q(h*Q(0));g=Q(Q(d+f)-e);e=Q(d+e);d=N[a+560>>2];i=Q(e-d);e=Q(f*Q(-0));p=Q(e+Q(Q(d*Q(-0))-h));e=Q(e+Q(c+Q(d*Q(0))));k=Q(Q(g*h)+Q(Q(Q(c*i)-Q(p*f))-Q(e*d)));n=Q(Q(i*d)+Q(Q(Q(c*e)-Q(p*h))-Q(g*f)));g=Q(Q(e*f)+Q(Q(Q(c*g)-Q(p*d))-Q(i*h)));i=Q(Q(k*Q(0))+Q(n+Q(g*Q(0))));if(!(i<Q(-.9999998807907104))){i=Q(i+Q(1));j=Q(Y(Q(i+i)));i=Q(Q(1)/j);m=Q(Q(g+Q(n*Q(-0)))*i);l=Q(Q(Q(n*Q(0))-k)*i);o=Q(j*Q(.5));j=Q(Q(Q(k*Q(0))+Q(g*Q(-0)))*i)}g=Q(Q(1)/Q(Y(Q(Q(o*o)+Q(Q(m*m)+Q(Q(j*j)+Q(l*l)))))));m=Q(m*g);l=Q(l*g);o=Q(o*g);j=Q(j*g);g=Q(Q(m*f)+Q(Q(l*d)+Q(Q(o*c)+Q(h*j))));i=Q(Q(l*h)+Q(Q(Q(o*f)-Q(c*m))-Q(j*d)));p=Q(Q(m*d)+Q(Q(Q(o*h)-Q(c*j))-Q(l*f)));r=Q(Q(j*f)+Q(Q(Q(o*d)-Q(c*l))-Q(m*h)));h=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(i*i)+Q(Q(p*p)+Q(r*r)))))));f=N[a+444>>2];a:{if(!(f>=Q(.05000000074505806))){break a}c=N[a+448>>2];if(!(c>=Q(.05000000074505806))){break a}d=qb(Q(T(Q(U(o,Q(-1))),Q(1))));d=Q(d+d);b:{if(!(d>Q(1.1920928955078125e-7))){break b}e=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(j*j)+Q(l*l))))));k=Q(m*e);n=Q(j*e);e=Q(l*e);if(!(Q(R(e))>Q(1.1920928955078125e-7))){break b}s=Q(Q(k*k)/Q(e*e));f=Q(Y(Q(Q(s+Q(1))/Q(Q(Q(1)/Q(c*c))+Q(s/Q(f*f))))))}if(!(Q(R(d))>Q(1.1920928955078125e-7))){break a}c:{if(d>f){d=f;break c}c=Q(-f);if(!(c>d)){break c}d=c}c=Q(d*Q(.5));d=Q(Ga(c)/Q(Y(Q(Q(k*k)+Q(Q(n*n)+Q(e*e))))));m=Q(k*d);l=Q(e*d);j=Q(n*d);o=Ha(c)}f=Q(g*h);d=Q(i*h);n=Q(r*h);g=Q(p*h);i=N[a+452>>2];d:{if(!(i>=Q(.05000000074505806))){break d}h=g;k=n;e=d;c=qb(Q(T(Q(U(f,Q(-1))),Q(1))));c=Q(c+c);if(c>Q(3.1415927410125732)){e=Q(-d);k=Q(-n);h=Q(-g);c=qb(Q(T(Q(U(Q(-f),Q(-1))),Q(1))));c=Q(c+c)}if(c>Q(1.1920928955078125e-7)){p=Q(Q(1)/Q(Y(Q(Q(e*e)+Q(Q(h*h)+Q(k*k))))));e=Q(e*p);h=Q(h*p);k=Q(k*p)}if(!(Q(R(c))>Q(1.1920928955078125e-7))){break d}e:{if(c>i){c=i;break e}d=Q(-i);if(!(d>c)){break e}c=d}f=Q(c*Q(.5));c=Q(Ga(f)/Q(Y(Q(Q(e*e)+Q(Q(h*h)+Q(k*k))))));d=Q(e*c);n=Q(k*c);g=Q(h*c);f=Ha(f)}N[a+568>>2]=Q(Q(Q(o*f)-Q(g*j))-Q(l*n))-Q(m*d);N[a+564>>2]=Q(Q(j*n)+Q(Q(o*d)+Q(m*f)))-Q(l*g);N[a+560>>2]=Q(Q(m*g)+Q(Q(o*n)+Q(l*f)))-Q(j*d);N[a+556>>2]=Q(Q(l*d)+Q(Q(o*g)+Q(j*f)))-Q(m*n)}function cl(a,b,c,d,e,f){xb(a,6,b,c);J[a>>2]=19508;b=J[d+12>>2];J[a+56>>2]=J[d+8>>2];J[a+60>>2]=b;b=J[d+4>>2];J[a+48>>2]=J[d>>2];J[a+52>>2]=b;b=J[d+28>>2];J[a+72>>2]=J[d+24>>2];J[a+76>>2]=b;c=J[d+20>>2];b=a- -64|0;J[b>>2]=J[d+16>>2];J[b+4>>2]=c;b=J[d+44>>2];J[a+88>>2]=J[d+40>>2];J[a+92>>2]=b;b=J[d+36>>2];J[a+80>>2]=J[d+32>>2];J[a+84>>2]=b;b=J[d+60>>2];J[a+104>>2]=J[d+56>>2];J[a+108>>2]=b;b=J[d+52>>2];J[a+96>>2]=J[d+48>>2];J[a+100>>2]=b;b=J[e+12>>2];J[a+120>>2]=J[e+8>>2];J[a+124>>2]=b;b=J[e+4>>2];J[a+112>>2]=J[e>>2];J[a+116>>2]=b;b=J[e+20>>2];J[a+128>>2]=J[e+16>>2];J[a+132>>2]=b;b=J[e+28>>2];J[a+136>>2]=J[e+24>>2];J[a+140>>2]=b;b=J[e+36>>2];J[a+144>>2]=J[e+32>>2];J[a+148>>2]=b;b=J[e+44>>2];J[a+152>>2]=J[e+40>>2];J[a+156>>2]=b;b=J[e+52>>2];J[a+160>>2]=J[e+48>>2];J[a+164>>2]=b;b=J[e+60>>2];J[a+168>>2]=J[e+56>>2];J[a+172>>2]=b;J[a+680>>2]=0;J[a+684>>2]=0;J[a+688>>2]=0;J[a+692>>2]=0;J[a+696>>2]=0;J[a+700>>2]=0;J[a+704>>2]=0;J[a+708>>2]=0;J[a+712>>2]=0;J[a+716>>2]=0;J[a+720>>2]=0;J[a+724>>2]=0;J[a+740>>2]=0;J[a+744>>2]=0;J[a+748>>2]=0;J[a+752>>2]=0;J[a+764>>2]=1045220557;J[a+756>>2]=1045220557;J[a+760>>2]=1045220557;J[a+784>>2]=0;J[a+776>>2]=0;J[a+780>>2]=0;J[a+768>>2]=0;J[a+772>>2]=0;J[a+736>>2]=1056964608;J[a+728>>2]=1060320051;J[a+732>>2]=1065353216;H[a+790|0]=0;I[a+788>>1]=0;J[a+800>>2]=0;J[a+792>>2]=0;J[a+796>>2]=0;J[a+816>>2]=0;J[a+808>>2]=0;J[a+812>>2]=0;J[a+928>>2]=0;J[a+884>>2]=1133903872;J[a+876>>2]=0;J[a+880>>2]=1036831949;J[a+904>>2]=0;J[a+908>>2]=0;J[a+896>>2]=0;J[a+900>>2]=1045220557;J[a+868>>2]=1065353216;J[a+872>>2]=-1082130432;J[a+924>>2]=0;J[a+888>>2]=1065353216;J[a+892>>2]=1056964608;J[a+916>>2]=0;J[a+992>>2]=0;H[a+912|0]=0;J[a+948>>2]=1133903872;J[a+940>>2]=0;J[a+944>>2]=1036831949;J[a+968>>2]=0;J[a+972>>2]=0;J[a+960>>2]=0;J[a+964>>2]=1045220557;J[a+932>>2]=1065353216;J[a+936>>2]=-1082130432;J[a+988>>2]=0;J[a+952>>2]=1065353216;J[a+956>>2]=1056964608;J[a+980>>2]=0;J[a+1056>>2]=0;H[a+976|0]=0;J[a+1012>>2]=1133903872;J[a+1004>>2]=0;J[a+1008>>2]=1036831949;b=a+1032|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1024|0;J[b>>2]=0;J[b+4>>2]=1045220557;J[a+996>>2]=1065353216;J[a+1e3>>2]=-1082130432;J[a+1052>>2]=0;J[a+1016>>2]=1065353216;J[a+1020>>2]=1056964608;J[a+1044>>2]=0;H[a+1308|0]=0;J[a+1304>>2]=0;H[a+1301|0]=1;H[a+1300|0]=f;H[a+1040|0]=0;pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0)}function rb(a,b,c,d,e){var f=0,g=0,h=0,i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=0,q=0,r=0,s=Q(0),t=0,u=Q(0),v=Q(0);if(!((b|0)==(d|0)|(b|0)==(c|0)|(c|0)==(d|0))){i=ga-48|0;ga=i;J[i+40>>2]=0;J[i+32>>2]=0;J[i+36>>2]=0;J[i+24>>2]=0;J[i+28>>2]=0;J[i+16>>2]=0;J[i+20>>2]=0;J[i+8>>2]=0;J[i+12>>2]=0;e=e?e:J[J[a+880>>2]>>2];f=J[a+752>>2];a:{if((f|0)!=J[a+756>>2]){break a}o=f?f<<1:1;if((o|0)<=(f|0)){break a}if(o){J[8369]=J[8369]+1;p=ia[J[6782]](P(o,44),16)|0;f=J[a+752>>2]}b:{if((f|0)<=0){break b}if((f|0)!=1){t=f&-2;while(1){g=P(q,44);h=g+p|0;g=g+J[a+760>>2]|0;j=J[g+4>>2];J[h>>2]=J[g>>2];J[h+4>>2]=j;J[h+40>>2]=J[g+40>>2];j=J[g+36>>2];J[h+32>>2]=J[g+32>>2];J[h+36>>2]=j;j=J[g+28>>2];J[h+24>>2]=J[g+24>>2];J[h+28>>2]=j;j=J[g+20>>2];J[h+16>>2]=J[g+16>>2];J[h+20>>2]=j;j=J[g+12>>2];J[h+8>>2]=J[g+8>>2];J[h+12>>2]=j;g=P(q|1,44);h=g+p|0;g=g+J[a+760>>2]|0;j=J[g+4>>2];J[h>>2]=J[g>>2];J[h+4>>2]=j;j=J[g+12>>2];J[h+8>>2]=J[g+8>>2];J[h+12>>2]=j;j=J[g+20>>2];J[h+16>>2]=J[g+16>>2];J[h+20>>2]=j;j=J[g+28>>2];J[h+24>>2]=J[g+24>>2];J[h+28>>2]=j;j=J[g+36>>2];J[h+32>>2]=J[g+32>>2];J[h+36>>2]=j;J[h+40>>2]=J[g+40>>2];q=q+2|0;r=r+2|0;if((t|0)!=(r|0)){continue}break}}if(!(f&1)){break b}f=P(q,44);g=f+p|0;f=f+J[a+760>>2]|0;h=J[f+4>>2];J[g>>2]=J[f>>2];J[g+4>>2]=h;J[g+40>>2]=J[f+40>>2];h=J[f+36>>2];J[g+32>>2]=J[f+32>>2];J[g+36>>2]=h;h=J[f+28>>2];J[g+24>>2]=J[f+24>>2];J[g+28>>2]=h;h=J[f+20>>2];J[g+16>>2]=J[f+16>>2];J[g+20>>2]=h;h=J[f+12>>2];J[g+8>>2]=J[f+8>>2];J[g+12>>2]=h}f=J[a+760>>2];if(!(f?!f|!K[a+764|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](f)}J[a+760>>2]=p;H[a+764|0]=1;J[a+756>>2]=o;f=J[a+752>>2]}f=J[a+760>>2]+P(f,44)|0;J[f+4>>2]=e;J[f>>2]=0;e=J[i+12>>2];J[f+8>>2]=J[i+8>>2];J[f+12>>2]=e;e=J[i+20>>2];J[f+16>>2]=J[i+16>>2];J[f+20>>2]=e;e=J[i+28>>2];J[f+24>>2]=J[i+24>>2];J[f+28>>2]=e;e=J[i+36>>2];J[f+32>>2]=J[i+32>>2];J[f+36>>2]=e;J[f+40>>2]=J[i+40>>2];J[a+752>>2]=J[a+752>>2]+1;ga=i+48|0;e=J[a+760>>2]+P(J[a+752>>2],44)|0;b=J[a+720>>2]+P(b,104)|0;J[e-36>>2]=b;c=J[a+720>>2]+P(c,104)|0;J[e-32>>2]=c;d=J[a+720>>2]+P(d,104)|0;J[e-28>>2]=d;l=N[b+8>>2];s=Q(N[c+8>>2]-l);k=N[b+12>>2];m=Q(N[d+12>>2]-k);l=Q(N[d+8>>2]-l);k=Q(N[c+12>>2]-k);n=Q(Q(s*m)-Q(l*k));u=Q(n*n);v=k;k=N[b+16>>2];n=Q(N[d+16>>2]-k);k=Q(N[c+16>>2]-k);m=Q(Q(v*n)-Q(m*k));l=Q(Q(k*l)-Q(n*s));N[e-8>>2]=Y(Q(u+Q(Q(m*m)+Q(l*l))));H[a+924|0]=1}}function rk(a,b){var c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);d=ga+-64|0;ga=d;H[b+84|0]=0;c=J[a+116>>2];r=N[c+52>>2];g=N[c+8>>2];e=N[c+12>>2];s=N[c+56>>2];h=N[c+20>>2];j=N[c+24>>2];l=N[c+28>>2];f=N[c+60>>2];m=N[c+36>>2];n=N[c+40>>2];o=N[c+44>>2];p=N[c+4>>2];J[b+48>>2]=0;q=f;f=N[b+164>>2];i=N[b+156>>2];k=N[b+160>>2];N[b+44>>2]=q+Q(Q(o*f)+Q(Q(m*i)+Q(n*k)));N[b+40>>2]=s+Q(Q(f*l)+Q(Q(i*h)+Q(j*k)));N[b+36>>2]=r+Q(Q(f*e)+Q(Q(i*p)+Q(g*k)));J[b- -64>>2]=0;f=N[b+180>>2];i=N[b+172>>2];k=N[b+176>>2];N[b+60>>2]=Q(o*f)+Q(Q(m*i)+Q(n*k));N[b+56>>2]=Q(l*f)+Q(Q(h*i)+Q(j*k));N[b+52>>2]=Q(e*f)+Q(Q(p*i)+Q(g*k));f=N[b+192>>2];i=N[b+196>>2];k=N[b+188>>2];J[b+80>>2]=0;N[b+76>>2]=Q(o*i)+Q(Q(m*k)+Q(n*f));N[b+72>>2]=Q(l*i)+Q(Q(h*k)+Q(j*f));N[b+68>>2]=Q(e*i)+Q(Q(p*k)+Q(g*f));g=N[b+204>>2];J[b+28>>2]=0;g=Q(g+N[b+212>>2]);N[b+24>>2]=Q(g*N[b+60>>2])+N[b+44>>2];N[b+20>>2]=Q(g*N[b+56>>2])+N[b+40>>2];N[b+16>>2]=Q(N[b+52>>2]*g)+N[b+36>>2];J[d+40>>2]=-1082130432;c=J[a+100>>2];c=ia[J[J[c>>2]+8>>2]](c,b+36|0,b+16|0,d+8|0)|0;J[b+88>>2]=0;a:{if(c){e=N[d+40>>2];c=J[d+28>>2];J[b>>2]=J[d+24>>2];J[b+4>>2]=c;c=J[d+36>>2];J[b+8>>2]=J[d+32>>2];J[b+12>>2]=c;H[b+84|0]=1;g=Q(g*e);if(!K[33208]){J[d+56>>2]=0;J[d+60>>2]=0;J[d+48>>2]=0;J[d+52>>2]=0;qg(32592,d+48|0);H[33208]=1}J[d+56>>2]=0;J[d+60>>2]=0;J[d+48>>2]=0;J[d+52>>2]=0;we(32592,Q(0),d+48|0);J[b+88>>2]=32592;N[b+32>>2]=g-N[b+212>>2];h=N[b+204>>2];j=Q(N[b+208>>2]*Q(.009999999776482582));e=Q(h-j);l=N[b+32>>2];c=e>l;e=c?e:l;h=Q(h+j);if(c|e>h){N[b+32>>2]=e>h?h:e}c=J[d+12>>2];J[b+16>>2]=J[d+8>>2];J[b+20>>2]=c;c=J[d+20>>2];J[b+24>>2]=J[d+16>>2];J[b+28>>2]=c;h=N[b+8>>2];j=N[b>>2];l=N[b+4>>2];e=Q(Q(h*N[b+60>>2])+Q(Q(j*N[b+52>>2])+Q(l*N[b+56>>2])));if(e>=Q(-.10000000149011612)){J[b+272>>2]=0;e=Q(10);break a}e=Q(Q(-1)/e);f=h;a=J[a+116>>2];h=N[a+328>>2];m=Q(N[b+20>>2]-N[a+56>>2]);n=Q(N[b+16>>2]-N[a+52>>2]);o=N[a+332>>2];i=Q(f*Q(Q(Q(h*m)-Q(n*o))+N[a+320>>2]));f=j;j=Q(N[b+24>>2]-N[a+60>>2]);q=m;m=N[a+336>>2];N[b+272>>2]=e*Q(i+Q(Q(f*Q(Q(Q(o*j)-Q(q*m))+N[a+312>>2]))+Q(l*Q(Q(Q(m*n)-Q(j*h))+N[a+316>>2]))));break a}g=N[b+204>>2];J[b+272>>2]=0;N[b+32>>2]=g;J[b+12>>2]=0;N[b+8>>2]=-N[b+60>>2];N[b+4>>2]=-N[b+56>>2];N[b>>2]=-N[b+52>>2];g=Q(-1);e=Q(1)}N[b+268>>2]=e;ga=d- -64|0;return g}function pm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=0;d=ga-80|0;ga=d;e=J[a+4>>2];ia[J[J[e>>2]+16>>2]](e,d+28|0,d+24|0,d+20|0,d+16|0,d+12|0,d+8|0,d+4|0,d,b);g=J[d+12>>2]+P(J[d+8>>2],c)|0;e=J[a+4>>2];k=J[d+16>>2];l=J[d+28>>2];f=J[d>>2];a:{if(!J[d+20>>2]){if((f|0)!=3){f=P(J[g+8>>2],k)+l|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];p=N[e+8>>2];q=N[e+12>>2];J[d+76>>2]=0;N[d+72>>2]=j*q;N[d+68>>2]=i*p;N[d+64>>2]=h*m;f=P(J[g+4>>2],k)+l|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];p=N[e+8>>2];q=N[e+12>>2];J[d+60>>2]=0;N[d+56>>2]=j*q;N[d+52>>2]=i*p;N[d+48>>2]=h*m;g=P(J[g>>2],k)+l|0;h=N[g+4>>2];i=N[g+8>>2];j=N[e+8>>2];m=N[e+12>>2];N[d+32>>2]=N[g>>2]*N[e+4>>2];i=Q(i*m);h=Q(h*j);break a}f=P(L[g+4>>1],k)+l|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];p=N[e+8>>2];q=N[e+12>>2];J[d+76>>2]=0;N[d+72>>2]=j*q;N[d+68>>2]=i*p;N[d+64>>2]=h*m;f=P(L[g+2>>1],k)+l|0;h=N[f>>2];i=N[f+4>>2];j=N[f+8>>2];m=N[e+4>>2];p=N[e+8>>2];q=N[e+12>>2];J[d+60>>2]=0;N[d+56>>2]=j*q;N[d+52>>2]=i*p;N[d+48>>2]=h*m;g=P(L[g>>1],k)+l|0;h=N[g+4>>2];i=N[g+8>>2];j=N[e+8>>2];m=N[e+12>>2];N[d+32>>2]=N[g>>2]*N[e+4>>2];i=Q(i*m);h=Q(h*j);break a}if((f|0)!=3){f=P(J[g+8>>2],k)+l|0;n=O[f>>3];o=O[f+8>>3];r=O[f+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[d+76>>2]=0;N[d+72>>2]=j*Q(r);N[d+68>>2]=i*Q(o);N[d+64>>2]=h*Q(n);f=P(J[g+4>>2],k)+l|0;n=O[f>>3];o=O[f+8>>3];r=O[f+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[d+60>>2]=0;N[d+56>>2]=j*Q(r);N[d+52>>2]=i*Q(o);N[d+48>>2]=h*Q(n);g=P(J[g>>2],k)+l|0;n=O[g+8>>3];o=O[g+16>>3];h=N[e+8>>2];i=N[e+12>>2];N[d+32>>2]=N[e+4>>2]*Q(O[g>>3]);i=Q(i*Q(o));h=Q(h*Q(n));break a}f=P(L[g+4>>1],k)+l|0;n=O[f>>3];o=O[f+8>>3];r=O[f+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[d+76>>2]=0;N[d+72>>2]=j*Q(r);N[d+68>>2]=i*Q(o);N[d+64>>2]=h*Q(n);f=P(L[g+2>>1],k)+l|0;n=O[f>>3];o=O[f+8>>3];r=O[f+16>>3];h=N[e+4>>2];i=N[e+8>>2];j=N[e+12>>2];J[d+60>>2]=0;N[d+56>>2]=j*Q(r);N[d+52>>2]=i*Q(o);N[d+48>>2]=h*Q(n);g=P(L[g>>1],k)+l|0;n=O[g+8>>3];o=O[g+16>>3];h=N[e+8>>2];i=N[e+12>>2];N[d+32>>2]=N[e+4>>2]*Q(O[g>>3]);i=Q(i*Q(o));h=Q(h*Q(n))}J[d+44>>2]=0;N[d+40>>2]=i;N[d+36>>2]=h;e=J[a+8>>2];ia[J[J[e>>2]+8>>2]](e,d+32|0,b,c);a=J[a+4>>2];ia[J[J[a>>2]+24>>2]](a,b);ga=d+80|0}function Oy(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;d=J[a+452>>2];l=a+324|0;ia[J[J[d>>2]+16>>2]](d,l,0);d=J[a+452>>2];ia[J[J[d>>2]+12>>2]](d)|0;Jk(a,b);ya(2474);if(J[a+328>>2]){d=0;j=J[l+4>>2];a:{if((j|0)<=0){break a}c=J[l+12>>2];if(j-1>>>0>=3){k=j&-4;while(1){h=e<<2;i=J[J[h+c>>2]+384>>2];f=(f|0)>(i|0)?f:i;i=J[J[c+(h|4)>>2]+384>>2];f=(f|0)>(i|0)?f:i;i=J[J[c+(h|8)>>2]+384>>2];f=(f|0)>(i|0)?f:i;h=J[J[c+(h|12)>>2]+384>>2];f=(f|0)>(h|0)?f:h;e=e+4|0;g=g+4|0;if((k|0)!=(g|0)){continue}break}}g=j&3;if(g){while(1){h=J[J[c+(e<<2)>>2]+384>>2];f=(f|0)>(h|0)?f:h;e=e+1|0;d=d+1|0;if((g|0)!=(d|0)){continue}break}}if((j|0)<=0){break a}d=0;while(1){e=J[J[l+12>>2]+(d<<2)>>2];if(J[e+852>>2]>0){c=0;while(1){g=J[J[e+860>>2]+(c<<2)>>2];ia[J[J[g>>2]+8>>2]](g,N[e+452>>2],f);c=c+1|0;if((c|0)<J[e+852>>2]){continue}break}}d=d+1|0;if((j|0)!=(d|0)){continue}break}if((f|0)>0){if((j|0)<=0){break a}g=0;while(1){d=0;while(1){e=J[J[l+12>>2]+(d<<2)>>2];h=J[e+852>>2];b:{if((h|0)<=0){break b}c=0;if((h|0)!=1){i=h&-2;k=0;while(1){m=c<<2;n=J[m+J[e+860>>2]>>2];ia[J[J[n>>2]+12>>2]](n,N[e+452>>2],Q(1));m=J[J[e+860>>2]+(m|4)>>2];ia[J[J[m>>2]+12>>2]](m,N[e+452>>2],Q(1));c=c+2|0;k=k+2|0;if((i|0)!=(k|0)){continue}break}}if(!(h&1)){break b}c=J[J[e+860>>2]+(c<<2)>>2];ia[J[J[c>>2]+12>>2]](c,N[e+452>>2],Q(1))}d=d+1|0;if((j|0)!=(d|0)){continue}break}g=g+1|0;if((g|0)!=(f|0)){continue}break}}if((j|0)<=0){break a}f=0;while(1){g=J[J[l+12>>2]+(f<<2)>>2];if(J[g+852>>2]>0){d=0;while(1){e=d<<2;c=J[e+J[g+860>>2]>>2];ia[J[J[c>>2]+16>>2]](c,N[g+452>>2]);c=J[e+J[g+860>>2]>>2];c:{if(!K[c+152|0]){c=J[g+852>>2];break c}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=d-1|0;c=J[g+852>>2];if((c|0)<=0){break c}h=J[g+860>>2];k=J[h+e>>2];e=0;while(1){i=h+(e<<2)|0;if((k|0)!=J[i>>2]){e=e+1|0;if((e|0)!=(c|0)){continue}break c}break}if((c|0)<=(e|0)){break c}c=c-1|0;e=c<<2;J[i>>2]=J[e+h>>2];J[e+J[g+860>>2]>>2]=k;J[g+852>>2]=c}d=d+1|0;if((d|0)<(c|0)){continue}break}}f=f+1|0;if((j|0)!=(f|0)){continue}break}}}d=J[a+452>>2];ia[J[J[d>>2]+28>>2]](d,Q(N[d+12>>2]*b));xa();if(J[a+328>>2]>0){d=0;while(1){c=J[J[a+336>>2]+(d<<2)>>2];fk(c,c);d=d+1|0;if((d|0)<J[a+328>>2]){continue}break}}a=J[a+452>>2];ia[J[J[a>>2]+32>>2]](a)}function te(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=0,v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0);n=N[a+452>>2];w=N[a+304>>2];q=N[a+300>>2];a:{if(!(w>Q(0)|q>Q(0))){break a}u=J[a+720>>2];v=N[(u+P(c,104)|0)+88>>2];if(!(v>Q(0))|J[a+288>>2]>3){break a}r=P(c,104)+u|0;p=N[r+48>>2];e=Q(p-N[b+8>>2]);s=N[r+40>>2];f=Q(s-N[b>>2]);t=N[r+44>>2];j=Q(t-N[b+4>>2]);o=Q(Q(e*e)+Q(Q(f*f)+Q(j*j)));if(!(o>Q(1.1920928955078125e-7))){break a}x=N[J[a+684>>2]>>2];A=Q(Y(o));g=Q(Q(1)/A);d=Q(e*g);h=Q(j*g);g=Q(f*g);i=N[r+72>>2];k=N[r+80>>2];m=N[r+76>>2];b:{switch(J[a+288>>2]){case 2:e=Q(Q(k*e)+Q(Q(i*f)+Q(j*m)))<Q(0)?Q(-1):Q(1);l=Q(k*e);y=Q(i*e);z=Q(m*e);e=Q(Q(l*d)+Q(Q(y*g)+Q(h*z)));f=Q(Q(Q(q*Q(.5))*x)*o);o=Q(N[(P(c,104)+u|0)+92>>2]*Q(.5));i=Q(e*Q(f*o));f=Q(i*Q(-d));j=Q(i*Q(-h));i=Q(i*Q(-g));c:{if(!(e>Q(0))){k=Q(0);m=Q(0);break c}k=Q(0);m=Q(0);if(!(e<Q(.9847999811172485))){break c}k=Q(Q(z*d)-Q(h*l));q=Q(Q(l*g)-Q(d*y));e=Q(Q(Y(Q(Q(1)-Q(e*e))))*Q(Q(Q(Q(w*Q(.5))*x)*A)*o));m=Q(Q(Q(k*h)-Q(g*q))*e);o=Q(Q(y*h)-Q(g*z));k=Q(Q(Q(o*g)-Q(d*k))*e);B=Q(Q(Q(q*d)-Q(h*o))*e)}d=Q(n*Q(v*f));e=Q(d*d);d=Q(n*Q(v*i));g=Q(d*d);d=Q(n*Q(v*j));d=Q(e+Q(g+Q(d*d)));h=Q(Q(p*p)+Q(Q(s*s)+Q(t*t)));if(!(!(d>=h)|!(d>Q(0)))){d=Q(Q(Q(Y(h))/Q(Y(d)))*Q(.800000011920929));f=Q(f*d);i=Q(i*d);j=Q(j*d)}a=P(c,104)+u|0;N[a+56>>2]=B+Q(i+N[a+56>>2]);b=a- -64|0;N[b>>2]=m+Q(f+N[b>>2]);N[a+60>>2]=k+Q(j+N[a+60>>2]);return;case 0:case 1:case 3:break b;default:break a}}l=e;e=Q(Q(k*e)+Q(Q(i*f)+Q(j*m)))<Q(0)?Q(-1):Q(1);k=Q(k*e);i=Q(i*e);m=Q(m*e);f=Q(Q(l*k)+Q(Q(f*i)+Q(j*m)));if(!(f>Q(0))){break a}e=Q(n*v);l=d;a=P(c,104)+u|0;d=Q(x*Q(Q(o*Q(f*N[a+92>>2]))*Q(-.5)));f=Q(q*d);j=Q(w*d);d=Q(Q(l*f)+Q(Q(k*j)+Q(0)));n=Q(e*d);l=Q(n*n);g=Q(Q(g*f)+Q(Q(i*j)+Q(0)));n=Q(e*g);h=Q(Q(h*f)+Q(Q(m*j)+Q(0)));f=Q(e*h);if(Q(l+Q(Q(n*n)+Q(f*f)))>Q(Q(p*p)+Q(Q(s*s)+Q(t*t)))){e=Q(Q(1)/e);l=g;g=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(Q(g*g)+Q(h*h))))));f=Q(l*g);l=p;p=Q(d*g);h=Q(h*g);d=Q(Q(l*p)+Q(Q(s*f)+Q(t*h)));N[a+56>>2]=N[a+56>>2]-Q(e*Q(f*d));N[a+60>>2]=N[a+60>>2]-Q(e*Q(h*d));a=a- -64|0;N[a>>2]=N[a>>2]-Q(e*Q(p*d));return}N[a+56>>2]=g+N[a+56>>2];N[a+60>>2]=h+N[a+60>>2];a=a- -64|0;N[a>>2]=d+N[a>>2]}}function wl(a,b,c,d,e,f){var g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0,C=0,D=Q(0),E=Q(0);g=ga-544|0;ga=g;o=a;a=g+384|0;Gg(o,b,c,d,f,a,0);J[g+136>>2]=0;J[g+140>>2]=0;J[g+128>>2]=0;J[g+132>>2]=0;J[g+364>>2]=0;J[g+368>>2]=0;J[g+376>>2]=2;J[g+144>>2]=0;a:{b:{c=Fg(g,a,e);if(!c){a=J[g+372>>2];if(!J[a+32>>2]){break b}e=0;while(1){A=e<<2;d=A+a|0;h=N[d+16>>2];a=J[g+504>>2];o=g+528|0;B=J[g+508>>2];C=J[g+384>>2]+(B>>1)|0;d=J[d>>2];if(B&1){a=J[a+J[C>>2]>>2]}ia[a|0](o,C,d);o=J[g+508>>2];d=J[g+388>>2]+(o>>1)|0;p=Q(h*N[g+536>>2]);q=Q(h*N[g+532>>2]);r=Q(h*N[g+528>>2]);a=J[J[g+372>>2]+A>>2];i=Q(-N[a+8>>2]);j=Q(-N[a+4>>2]);k=Q(-N[a>>2]);a=J[g+504>>2];a=o&1?J[J[d>>2]+a>>2]:a;l=Q(l+p);m=Q(m+q);n=Q(n+r);J[g+524>>2]=0;N[g+520>>2]=Q(N[g+432>>2]*i)+Q(Q(N[g+424>>2]*k)+Q(N[g+428>>2]*j));N[g+516>>2]=Q(N[g+416>>2]*i)+Q(Q(N[g+408>>2]*k)+Q(N[g+412>>2]*j));N[g+512>>2]=Q(N[g+400>>2]*i)+Q(Q(N[g+392>>2]*k)+Q(N[g+396>>2]*j));ia[a|0](g+528|0,d,g+512|0);i=N[g+536>>2];j=N[g+528>>2];k=N[g+532>>2];s=Q(s+Q(h*Q(Q(Q(i*N[g+480>>2])+Q(Q(j*N[g+472>>2])+Q(k*N[g+476>>2])))+N[g+496>>2])));t=Q(t+Q(h*Q(Q(Q(i*N[g+464>>2])+Q(Q(j*N[g+456>>2])+Q(k*N[g+460>>2])))+N[g+492>>2])));u=Q(u+Q(h*Q(Q(Q(i*N[g+448>>2])+Q(Q(j*N[g+440>>2])+Q(k*N[g+444>>2])))+N[g+488>>2])));e=e+1|0;a=J[g+372>>2];if(e>>>0<M[a+32>>2]){continue}break}break b}J[f>>2]=(c|0)==1?1:2;break a}h=N[b+52>>2];i=N[b+24>>2];j=N[b+20>>2];k=N[b+56>>2];p=N[b+40>>2];q=N[b+36>>2];r=N[b+16>>2];v=N[b+32>>2];w=N[b+48>>2];x=N[b+8>>2];y=N[b>>2];z=N[b+4>>2];J[f+16>>2]=0;N[f+4>>2]=w+Q(Q(l*x)+Q(Q(n*y)+Q(m*z)));N[f+12>>2]=k+Q(Q(l*p)+Q(Q(n*v)+Q(m*q)));N[f+8>>2]=h+Q(Q(l*i)+Q(Q(n*r)+Q(m*j)));i=N[b+52>>2];j=N[b+24>>2];k=N[b+20>>2];p=N[b+56>>2];q=N[b+40>>2];r=N[b+36>>2];v=N[b+48>>2];w=N[b+8>>2];x=N[b>>2];y=N[b+4>>2];z=N[b+16>>2];D=N[b+32>>2];h=Q(l-s);l=Q(n-u);m=Q(m-t);n=Q(Y(Q(Q(h*h)+Q(Q(l*l)+Q(m*m)))));N[f+52>>2]=n;J[f+48>>2]=0;J[f+32>>2]=0;E=h;h=n>Q(9999999747378752e-20)?Q(Q(1)/n):Q(1);N[f+44>>2]=E*h;N[f+40>>2]=m*h;N[f+36>>2]=l*h;N[f+28>>2]=p+Q(Q(s*q)+Q(Q(u*D)+Q(t*r)));N[f+24>>2]=i+Q(Q(s*j)+Q(Q(u*z)+Q(t*k)));N[f+20>>2]=v+Q(Q(s*w)+Q(Q(u*x)+Q(t*y)))}ga=g+544|0;return!c}function Sj(a,b,c,d,e,f,g){var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;j=ga-48|0;ga=j;i=J[c+8>>2];if(i){p=i;while(1){if(J[p+20>>2]>J[a+100>>2]){h=J[p+12>>2];n=J[h+92>>2];l=J[h+96>>2];i=J[c+88>>2];m=J[h+88>>2];k=J[c+92>>2];h=J[c+96>>2];J[j+44>>2]=-1;l=l-h|0;J[j+40>>2]=l;n=n-k|0;J[j+36>>2]=n;m=m-i|0;J[j+32>>2]=m;s=n>>31;h=jI(n,s,J[e+8>>2],J[e+12>>2]);k=ha;i=h;q=m>>31;h=jI(m,q,J[e>>2],J[e+4>>2]);r=i+h|0;i=ha+k|0;i=h>>>0>r>>>0?i+1|0:i;v=r;r=l>>31;h=jI(l,r,J[e+16>>2],J[e+20>>2]);t=v+h|0;k=ha+i|0;k=h>>>0>t>>>0?k+1|0:k;h=t;i=jI(J[f+8>>2],J[f+12>>2],n,s);n=ha;m=jI(J[f>>2],J[f+4>>2],m,q);i=m+i|0;n=ha+n|0;n=i>>>0<m>>>0?n+1|0:n;l=jI(J[f+16>>2],J[f+20>>2],l,r);m=l+i|0;i=ha+n|0;n=m;i=m>>>0<l>>>0?i+1|0:i;m=i;a:{if(!!n&(i|0)>=0|(i|0)>0){J[j+24>>2]=1;i=-1;l=0;break a}if((m|0)<0){J[j+24>>2]=-1;l=n;n=0-l|0;m=0-(((l|0)!=0)+m|0)|0;i=1;l=0;break a}i=0;J[j+24>>2]=0;n=0;m=0;l=1}J[j+8>>2]=n;J[j+12>>2]=m;b:{c:{d:{m=j;if(!h&(k|0)<=0|(k|0)<0){if((k|0)>0|(k|0)>=0){break d}J[j+24>>2]=i;k=0-(((h|0)!=0)+k|0)|0;h=0-h|0}J[j+16>>2]=h;J[m+20>>2]=k;break c}J[j+16>>2]=0;J[j+20>>2]=0;if(l){break b}}if(!o){o=J[j+12>>2];J[g>>2]=J[j+8>>2];J[g+4>>2]=o;J[g+16>>2]=J[j+24>>2];o=J[j+20>>2];J[g+8>>2]=J[j+16>>2];J[g+12>>2]=o;o=p;break b}h=yc(j+8|0,g);if((h|0)<0){o=J[j+12>>2];J[g>>2]=J[j+8>>2];J[g+4>>2]=o;J[g+16>>2]=J[j+24>>2];o=J[j+20>>2];J[g+8>>2]=J[j+16>>2];J[g+12>>2]=o;o=p;break b}if(h){break b}y=o;k=J[o+4>>2];e:{f:{if(J[o>>2]==(p|0)){h=2;if((k|0)!=(p|0)){break f}w=J[p+12>>2];u=J[J[p+8>>2]+12>>2];k=J[u+96>>2];x=J[w+96>>2]-k|0;n=J[o+12>>2];h=J[u+92>>2];m=J[n+92>>2]-h|0;l=J[w+92>>2]-h|0;t=J[n+96>>2]-k|0;h=P(x,m)-P(l,t)|0;o=h;i=h>>31;s=J[d+8>>2];q=J[j+36>>2];k=J[d+4>>2];r=J[j+40>>2];h=P(s,q)-P(k,r)|0;h=jI(o,i,h,h>>31);i=ha;v=h;h=J[u+88>>2];n=J[n+88>>2]-h|0;o=m;m=J[w+88>>2]-h|0;h=P(n,l)-P(o,m)|0;o=h;u=h>>31;l=J[j+32>>2];h=P(l,k);k=J[d>>2];h=h-P(k,q)|0;h=jI(o,u,h,h>>31);q=v+h|0;i=ha+i|0;i=h>>>0>q>>>0?i+1|0:i;h=P(m,t)-P(n,x)|0;m=h;o=h>>31;h=P(k,r)-P(l,s)|0;h=jI(m,o,h,h>>31);k=h+q|0;l=ha+i|0;l=h>>>0>k>>>0?l+1|0:l;h=!!k&(l|0)>=0|(l|0)>0?2:1;break e}h=(k|0)==(p|0)}}o=(h|0)!=2^b?p:y}i=J[c+8>>2]}p=J[p>>2];if((p|0)!=(i|0)){continue}break}}ga=j+48|0;return o}function Nb(a,b,c,d){var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0,z=0,A=0,B=0;p=N[c+4>>2];s=N[c+8>>2];h=Q(s*Q(0));l=Q(p-h);m=N[c>>2];f=Q(p*Q(-0));g=Q(Q(m*Q(0))+f);t=Q(h-m);i=Q(Y(Q(Q(g*g)+Q(Q(l*l)+Q(t*t)))));n=Q(Q(1)/i);u=Q(f+m);v=Q(Q(p*Q(0))-s);h=Q(h+Q(m*Q(-0)));f=Q(Y(Q(Q(u*u)+Q(Q(v*v)+Q(h*h)))));k=Q(Q(1)/f);e=f<i;w=e?Q(l*n):Q(v*k);x=e?Q(t*n):Q(h*k);t=Q(Q(w*p)-Q(m*x));l=e?Q(g*n):Q(u*k);u=Q(Q(l*m)-Q(s*w));v=Q(Q(x*s)-Q(p*l));y=J[d+12>>2];z=(b|0)<=0;a:{while(1){j=-1;if(!z){h=N[c+8>>2];i=N[c+4>>2];f=N[c>>2];e=0;while(1){b:{if(!J[(e<<2)+y>>2]){break b}if((j|0)!=-1){d=(e<<4)+a|0;g=Q(Q(N[d+8>>2]*h)+Q(Q(N[d>>2]*f)+Q(i*N[d+4>>2])));d=(j<<4)+a|0;if(!(g>Q(Q(N[d+8>>2]*h)+Q(Q(N[d>>2]*f)+Q(i*N[d+4>>2]))))){break b}}j=e}e=e+1|0;if((e|0)!=(b|0)){continue}break}}q=-1;e=0;A=(j<<2)+y|0;if(J[A>>2]==3){return j}c:{while(1){o=q;B=e;n=Q(e|0);f=Q(n*Q(.01745329238474369));g=Ha(f);f=Ga(f);q=-1;if(!z){h=Q(s+Q(Q(Q(l*f)+Q(t*g))*Q(.02500000037252903)));i=Q(p+Q(Q(Q(x*f)+Q(u*g))*Q(.02500000037252903)));f=Q(m+Q(Q(Q(w*f)+Q(v*g))*Q(.02500000037252903)));e=0;while(1){d:{if(!J[(e<<2)+y>>2]){break d}if((q|0)!=-1){d=(e<<4)+a|0;g=Q(Q(N[d+8>>2]*h)+Q(Q(N[d>>2]*f)+Q(i*N[d+4>>2])));d=(q<<4)+a|0;if(!(g>Q(Q(N[d+8>>2]*h)+Q(Q(N[d>>2]*f)+Q(i*N[d+4>>2]))))){break d}}q=e}e=e+1|0;if((e|0)!=(b|0)){continue}break}}if((j|0)==(o|0)&(j|0)==(q|0)){break c}e:{if((o|0)==-1|(o|0)==(q|0)){break e}k=Q(n+Q(-40));if(!(n>=k)){break e}while(1){f=Q(k*Q(.01745329238474369));g=Ha(f);f=Ga(f);f:{if(!z){h=Q(s+Q(Q(Q(l*f)+Q(t*g))*Q(.02500000037252903)));i=Q(p+Q(Q(Q(x*f)+Q(u*g))*Q(.02500000037252903)));f=Q(m+Q(Q(Q(w*f)+Q(v*g))*Q(.02500000037252903)));d=-1;e=0;while(1){g:{if(!J[(e<<2)+y>>2]){break g}if((d|0)!=-1){r=(e<<4)+a|0;g=Q(Q(N[r+8>>2]*h)+Q(Q(N[r>>2]*f)+Q(i*N[r+4>>2])));r=(d<<4)+a|0;if(!(g>Q(Q(N[r+8>>2]*h)+Q(Q(N[r>>2]*f)+Q(i*N[r+4>>2]))))){break g}}d=e}e=e+1|0;if((e|0)!=(b|0)){continue}break}if((j|0)!=(o|0)){o=d;break f}o=d;if((d|0)==(j|0)){break c}break f}e=j&o;o=-1;d=-1;if((e|0)==-1){break a}}k=Q(k+Q(5));if(n>=k){continue}break}}e=B+45|0;if(B>>>0<316){continue}break}J[A>>2]=0;continue}break}d=j}J[A>>2]=3;return d}function qd(a,b){var c=0,d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=0,k=0,l=Q(0),m=Q(0),n=Q(0),o=0,p=0,q=0,r=0;e=ga-96|0;ga=e;c=J[a+12>>2];d=e+80|0;g=e- -64|0;ia[J[J[c>>2]+8>>2]](c,J[a+8>>2]+4|0,d,g);c=J[b+68>>2];ia[J[J[c>>2]+16>>2]](c,J[J[a+8>>2]+188>>2],d,g,J[b+24>>2]);c=J[b+24>>2];ia[J[J[c>>2]+32>>2]](c,J[J[a+8>>2]+284>>2],b+28|0,c);b=J[a+8>>2];c=J[b+56>>2];J[a+92>>2]=J[b+52>>2];J[a+96>>2]=c;c=J[b+64>>2];J[a+100>>2]=J[b+60>>2];J[a+104>>2]=c;b=J[b+284>>2];a:{if((ia[J[J[b>>2]+36>>2]](b)|0)<=0){g=0;break a}p=a+128|0;g=0;while(1){c=J[a+132>>2];b:{if((c|0)>=0){break b}if(J[a+136>>2]<0){b=J[a+140>>2];if(!(b?!b|!K[a+144|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+144|0]=1;J[a+136>>2]=0;J[a+140>>2]=0}d=0;b=c;f=0-b&3;if(f){while(1){J[J[a+140>>2]+(b<<2)>>2]=0;b=b+1|0;d=d+1|0;if((f|0)!=(d|0)){continue}break}}if(c>>>0>4294967292){break b}while(1){c=b<<2;J[c+J[a+140>>2]>>2]=0;J[(c+J[a+140>>2]|0)+4>>2]=0;J[(c+J[a+140>>2]|0)+8>>2]=0;J[(c+J[a+140>>2]|0)+12>>2]=0;b=b+4|0;if(b){continue}break}}J[a+132>>2]=0;b=J[J[a+8>>2]+284>>2];b=J[(ia[J[J[b>>2]+28>>2]](b)|0)+12>>2]+(j<<4)|0;c=J[J[b+4>>2]>>2];d=J[J[b>>2]>>2];c:{if((K[d+204|0]&4?d:0)|(K[c+204|0]&4?c:0)){break c}b=J[b+8>>2];if(b){ia[J[J[b>>2]+16>>2]](b,p)}o=J[a+132>>2];if((o|0)<=0){break c}q=J[a+8>>2];r=J[a+140>>2];c=0;while(1){f=J[(c<<2)+r>>2];k=J[f+748>>2];if((k|0)>0){h=J[f+740>>2]==(q|0)?Q(-1):Q(1);d=0;while(1){b=f+P(d,184)|0;i=N[b+84>>2];if(i<Q(0)){if(i<l){l=N[b+68>>2];m=N[b+72>>2];n=N[b+76>>2];J[a+164>>2]=0;N[a+160>>2]=h*n;N[a+156>>2]=h*m;N[a+152>>2]=h*l;k=J[f+748>>2];l=i}m=N[b+76>>2];n=N[b+72>>2];N[a+92>>2]=Q(Q(i*Q(h*N[b+68>>2]))*Q(.20000000298023224))+N[a+92>>2];N[a+96>>2]=Q(Q(i*Q(h*n))*Q(.20000000298023224))+N[a+96>>2];N[a+100>>2]=Q(Q(i*Q(h*m))*Q(.20000000298023224))+N[a+100>>2];g=1}d=d+1|0;if((k|0)>(d|0)){continue}break}}c=c+1|0;if((o|0)!=(c|0)){continue}break}}b=J[J[a+8>>2]+284>>2];j=j+1|0;if((ia[J[J[b>>2]+36>>2]](b)|0)>(j|0)){continue}break}}b=J[a+8>>2];c=J[a+104>>2];J[e+56>>2]=J[a+100>>2];J[e+60>>2]=c;c=J[a+96>>2];J[e+48>>2]=J[a+92>>2];J[e+52>>2]=c;J[b+260>>2]=J[b+260>>2]+1;a=J[e+60>>2];J[b+60>>2]=J[e+56>>2];J[b+64>>2]=a;a=J[e+52>>2];J[b+52>>2]=J[e+48>>2];J[b+56>>2]=a;ga=e+96|0;return g}function Zk(a,b,c,d,e,f,g,h){var i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0);xb(a,4,b,c);J[a+748>>2]=0;H[a+740|0]=h;J[a+736>>2]=16777216;H[a+716|0]=0;J[a+708>>2]=0;J[a+712>>2]=0;J[a+704>>2]=1065353216;J[a+696>>2]=1063675494;J[a+700>>2]=1050253722;J[a+688>>2]=0;J[a+692>>2]=-1082130432;J[a>>2]=19708;c=J[d+12>>2];J[a+608>>2]=J[d+8>>2];J[a+612>>2]=c;c=J[d+4>>2];J[a+600>>2]=J[d>>2];J[a+604>>2]=c;i=N[f+8>>2];j=N[b+36>>2];l=N[f>>2];n=N[b+4>>2];r=N[b+20>>2];o=N[f+4>>2];k=Q(Q(i*j)+Q(Q(l*n)+Q(r*o)));a:{if(k>=Q(.9999998807907104)){j=N[b+40>>2];k=N[b+24>>2];m=N[b+8>>2];p=Q(-N[b+44>>2]);n=Q(-N[b+28>>2]);l=Q(-N[b+12>>2]);break a}if(k<=Q(-.9999998807907104)){j=N[b+40>>2];k=N[b+24>>2];m=N[b+8>>2];p=N[b+44>>2];n=N[b+28>>2];l=N[b+12>>2];break a}m=Q(Q(o*j)-Q(r*i));k=Q(Q(i*n)-Q(j*l));p=Q(Q(m*o)-Q(l*k));j=Q(Q(l*r)-Q(n*o));n=Q(Q(j*l)-Q(i*m));l=Q(Q(k*i)-Q(o*j))}N[a+552>>2]=l;N[a+556>>2]=m;i=N[f>>2];N[a+572>>2]=k;N[a+568>>2]=n;J[a+564>>2]=0;N[a+560>>2]=i;i=N[f+4>>2];N[a+588>>2]=j;N[a+584>>2]=p;J[a+580>>2]=0;N[a+576>>2]=i;i=N[f+8>>2];J[a+596>>2]=0;N[a+592>>2]=i;i=N[f+4>>2];j=Q(-i);k=N[f+8>>2];s=Q(-k);o=N[g+8>>2];m=N[f>>2];r=N[g>>2];u=N[g+4>>2];q=Q(Q(k*o)+Q(Q(m*r)+Q(i*u)));b:{if(q<Q(-.9999998807907104)){if(Q(R(k))>Q(.7071067690849304)){j=i;i=Q(Q(1)/Q(Y(Q(Q(i*i)+Q(k*k)))));j=Q(j*i);k=Q(i*s);m=Q(0);i=Q(0);break b}i=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(i*i)))));k=Q(m*i);m=Q(i*j);j=Q(0);i=Q(0);break b}v=Q(Q(m*u)+Q(r*j));j=Q(q+Q(1));t=Q(Y(Q(j+j)));q=Q(Q(1)/t);j=Q(v*q);k=Q(Q(Q(k*r)-Q(o*m))*q);m=Q(Q(Q(i*o)+Q(u*s))*q);i=Q(t*Q(.5))}b=J[e+4>>2];J[a+664>>2]=J[e>>2];J[a+668>>2]=b;b=J[e+12>>2];J[a+672>>2]=J[e+8>>2];J[a+676>>2]=b;s=Q(Q(Q(i*p)+Q(n*m))-Q(k*l));q=Q(Q(Q(i*l)+Q(p*k))-Q(j*n));t=Q(Q(Q(Q(-m)*l)-Q(n*k))-Q(j*p));l=Q(Q(Q(i*n)+Q(l*j))-Q(m*p));p=Q(Q(s*k)+Q(Q(Q(i*q)-Q(t*m))-Q(l*j)));N[a+616>>2]=p;n=Q(Q(l*m)+Q(Q(Q(i*s)-Q(t*j))-Q(q*k)));i=Q(Q(q*j)+Q(Q(Q(i*l)-Q(t*k))-Q(s*m)));N[a+620>>2]=Q(u*n)-Q(i*o);l=N[g>>2];N[a+632>>2]=i;N[a+636>>2]=Q(o*p)-Q(n*r);J[a+628>>2]=0;N[a+624>>2]=l;l=N[g+4>>2];N[a+652>>2]=Q(r*i)-Q(p*u);N[a+648>>2]=n;J[a+644>>2]=0;N[a+640>>2]=l;i=N[g+8>>2];N[a+732>>2]=h?Q(-1):Q(1);J[a+660>>2]=0;N[a+656>>2]=i}function Jz(a,b){a=a|0;b=Q(b);var c=0,d=Q(0),e=0,f=Q(0),g=Q(0),h=0,i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=Q(0),p=Q(0),q=0,r=Q(0),s=Q(0),t=0,u=Q(0);h=ga-32|0;ga=h;e=J[a+136>>2];if((e|0)>0){while(1){pg(a,c,0);c=c+1|0;e=J[a+136>>2];if((c|0)<(e|0)){continue}break}}c=J[a+116>>2];d=N[c+320>>2];f=Q(d*d);d=N[c+312>>2];g=Q(d*d);d=N[c+316>>2];d=Q(Q(Y(Q(f+Q(g+Q(d*d)))))*Q(3.5999999046325684));N[a+112>>2]=d;i=c+(J[a+128>>2]<<2)|0;if(Q(Q(N[i+36>>2]*N[c+320>>2])+Q(Q(N[i+4>>2]*N[c+312>>2])+Q(N[i+20>>2]*N[c+316>>2])))<Q(0)){N[a+112>>2]=-d}a:{if((e|0)<=0){break a}c=0;while(1){rk(a,J[a+144>>2]+P(c,284)|0);c=c+1|0;e=J[a+136>>2];if((c|0)<(e|0)){continue}break}if((e|0)<=0){break a}g=Q(Q(1)/N[J[a+116>>2]+344>>2]);e=0;while(1){d=Q(0);c=J[a+144>>2]+P(e,284)|0;if(K[c+84|0]){d=N[c+272>>2];d=Q(U(Q(g*Q(Q(Q(N[c+216>>2]*Q(N[c+204>>2]-N[c+32>>2]))*N[c+268>>2])-Q(N[c+(d<Q(0)?220:224)>>2]*d))),Q(0)))}N[c+276>>2]=d;e=e+1|0;c=J[a+136>>2];if((e|0)<(c|0)){continue}break}if((c|0)<=0){break a}c=0;while(1){e=J[a+144>>2]+P(c,284)|0;d=N[e+248>>2];g=N[e+276>>2];j=N[e>>2];f=N[e+4>>2];k=N[e+8>>2];J[h+28>>2]=0;d=d<g?d:g;N[h+24>>2]=Q(k*d)*b;N[h+20>>2]=Q(d*f)*b;N[h+16>>2]=Q(j*d)*b;d=N[e+16>>2];i=J[a+116>>2];g=N[i+52>>2];j=N[e+20>>2];f=N[i+56>>2];k=N[e+24>>2];l=N[i+60>>2];J[h+12>>2]=0;N[h+8>>2]=k-l;N[h+4>>2]=j-f;N[h>>2]=d-g;ub(i,h+16|0,h);c=c+1|0;if((c|0)<J[a+136>>2]){continue}break}}ia[J[J[a>>2]+20>>2]](a,b);n=J[a+136>>2];if((n|0)>0){c=J[a+116>>2];i=c+(J[a+128>>2]<<2)|0;t=J[a+144>>2];e=0;while(1){a=P(e,284)+t|0;b:{if(K[a+84|0]){d=N[a+236>>2];j=N[i+36>>2];f=N[a+8>>2];k=N[i+4>>2];l=N[a>>2];o=N[i+20>>2];p=N[a+4>>2];g=Q(Q(j*f)+Q(Q(k*l)+Q(o*p)));q=a+236|0;m=Q(j-Q(f*g));j=N[c+328>>2];f=Q(N[a+40>>2]-N[c+56>>2]);r=Q(N[a+36>>2]-N[c+52>>2]);s=N[c+332>>2];m=Q(m*Q(Q(Q(j*f)-Q(r*s))+N[c+320>>2]));u=Q(k-Q(l*g));k=Q(N[a+44>>2]-N[c+60>>2]);l=f;f=N[c+336>>2];g=Q(Q(Q(m+Q(Q(u*Q(Q(Q(s*k)-Q(l*f))+N[c+312>>2]))+Q(Q(Q(Q(f*r)-Q(k*j))+N[c+316>>2])*Q(o-Q(p*g)))))*b)/N[a+212>>2]);f=g;break b}g=N[a+236>>2];q=a+236|0;d=N[a+240>>2];f=d}j=f;N[q>>2]=d+g;N[a+240>>2]=j*Q(.9900000095367432);e=e+1|0;if((n|0)!=(e|0)){continue}break}}ga=h+32|0}function Bp(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=0,f=0,g=Q(0),h=0,i=0,j=0,k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0);i=ga-16|0;ga=i;J[i+12>>2]=a;N[i+8>>2]=b;H[i+7|0]=c;o=N[i+8>>2];j=J[i+12>>2];c=J[j+712>>2];a:{b:{if(!(H[i+7|0]&1)){break b}c:{if((c|0)<=0){break c}d=J[j+720>>2];a=0;if(c-1>>>0>=7){f=c&-8;while(1){J[(d+P(a,104)|0)+88>>2]=0;J[(d+P(a|1,104)|0)+88>>2]=0;J[(d+P(a|2,104)|0)+88>>2]=0;J[(d+P(a|3,104)|0)+88>>2]=0;J[(d+P(a|4,104)|0)+88>>2]=0;J[(d+P(a|5,104)|0)+88>>2]=0;J[(d+P(a|6,104)|0)+88>>2]=0;J[(d+P(a|7,104)|0)+88>>2]=0;a=a+8|0;h=h+8|0;if((f|0)!=(h|0)){continue}break}}h=c&7;if(!h){break c}while(1){J[(d+P(a,104)|0)+88>>2]=0;a=a+1|0;e=e+1|0;if((h|0)!=(e|0)){continue}break}}f=J[j+752>>2];if((f|0)>0){m=J[j+760>>2];h=0;while(1){d=m+P(h,44)|0;a=J[d+8>>2];e=J[d+12>>2];b=N[a+8>>2];n=Q(N[e+8>>2]-b);d=J[d+16>>2];g=N[a+12>>2];k=Q(N[d+12>>2]-g);b=Q(N[d+8>>2]-b);g=Q(N[e+12>>2]-g);l=Q(Q(n*k)-Q(b*g));p=Q(l*l);q=g;g=N[a+16>>2];l=Q(N[d+16>>2]-g);g=Q(N[e+16>>2]-g);k=Q(Q(q*l)-Q(k*g));b=Q(Q(g*b)-Q(l*n));b=Q(Y(Q(p+Q(Q(k*k)+Q(b*b)))));N[a+88>>2]=b+N[a+88>>2];N[e+88>>2]=b+N[e+88>>2];N[d+88>>2]=b+N[d+88>>2];h=h+1|0;if((f|0)!=(h|0)){continue}break}}if((c|0)<=0){break a}d=J[j+720>>2];a=0;if((c|0)!=1){h=c&-2;e=0;while(1){f=d+P(a,104)|0;N[f+88>>2]=Q(1)/N[f+88>>2];f=d+P(a|1,104)|0;N[f+88>>2]=Q(1)/N[f+88>>2];a=a+2|0;e=e+2|0;if((h|0)!=(e|0)){continue}break}}if(!(c&1)){break b}a=d+P(a,104)|0;N[a+88>>2]=Q(1)/N[a+88>>2]}if((c|0)<=0){break a}h=c&1;d=J[j+720>>2];f=c-1|0;d:{if(!f){b=Q(0);a=0;break d}m=c&-2;a=0;b=Q(0);e=0;while(1){g=b;b=N[(d+P(a,104)|0)+88>>2];g=Q(g+(b>Q(0)?Q(Q(1)/b):Q(0)));b=N[(d+P(a|1,104)|0)+88>>2];b=Q(g+(b>Q(0)?Q(Q(1)/b):Q(0)));a=a+2|0;e=e+2|0;if((m|0)!=(e|0)){continue}break}}if(h){g=b;b=N[(d+P(a,104)|0)+88>>2];b=Q(g+(b>Q(0)?Q(Q(1)/b):Q(0)))}if((c|0)<=0){break a}h=c&1;b=Q(Q(Q(1)/b)*o);d=J[j+720>>2];e:{if(!f){a=0;break e}c=c&-2;a=0;e=0;while(1){f=d+P(a,104)|0;N[f+88>>2]=N[f+88>>2]/b;f=d+P(a|1,104)|0;N[f+88>>2]=N[f+88>>2]/b;a=a+2|0;e=e+2|0;if((c|0)!=(e|0)){continue}break}}if(!h){break a}a=d+P(a,104)|0;N[a+88>>2]=N[a+88>>2]/b}H[j+924|0]=1;ga=i+16|0}function nk(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0;d=ga+-64|0;h=243703;g=J[a+732>>2];if((g|0)>0){while(1){c=J[a+740>>2];b=c+P(f,52)|0;J[d+56>>2]=J[b+48>>2];e=J[b+44>>2];J[d+48>>2]=J[b+40>>2];J[d+52>>2]=e;e=J[b+36>>2];J[d+40>>2]=J[b+32>>2];J[d+44>>2]=e;e=J[b+28>>2];J[d+32>>2]=J[b+24>>2];J[d+36>>2]=e;e=J[b+20>>2];J[d+24>>2]=J[b+16>>2];J[d+28>>2]=e;e=J[b+12>>2];J[d+16>>2]=J[b+8>>2];J[d+20>>2]=e;e=J[b+4>>2];J[d+8>>2]=J[b>>2];J[d+12>>2]=e;h=P(h,1664525)+1013904223|0;c=c+P((h>>>0)%(g>>>0)|0,52)|0;e=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=e;J[b+48>>2]=J[c+48>>2];e=J[c+44>>2];J[b+40>>2]=J[c+40>>2];J[b+44>>2]=e;e=J[c+36>>2];J[b+32>>2]=J[c+32>>2];J[b+36>>2]=e;e=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=e;e=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=e;e=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=e;J[c+48>>2]=J[d+56>>2];b=J[d+52>>2];J[c+40>>2]=J[d+48>>2];J[c+44>>2]=b;b=J[d+44>>2];J[c+32>>2]=J[d+40>>2];J[c+36>>2]=b;b=J[d+36>>2];J[c+24>>2]=J[d+32>>2];J[c+28>>2]=b;b=J[d+28>>2];J[c+16>>2]=J[d+24>>2];J[c+20>>2]=b;b=J[d+20>>2];J[c+8>>2]=J[d+16>>2];J[c+12>>2]=b;b=J[d+12>>2];J[c>>2]=J[d+8>>2];J[c+4>>2]=b;f=f+1|0;if((g|0)!=(f|0)){continue}break}}g=J[a+752>>2];if((g|0)>0){f=0;while(1){c=J[a+760>>2];b=c+P(f,44)|0;J[d+48>>2]=J[b+40>>2];e=J[b+36>>2];J[d+40>>2]=J[b+32>>2];J[d+44>>2]=e;e=J[b+28>>2];J[d+32>>2]=J[b+24>>2];J[d+36>>2]=e;e=J[b+20>>2];J[d+24>>2]=J[b+16>>2];J[d+28>>2]=e;e=J[b+12>>2];J[d+16>>2]=J[b+8>>2];J[d+20>>2]=e;e=J[b+4>>2];J[d+8>>2]=J[b>>2];J[d+12>>2]=e;h=P(h,1664525)+1013904223|0;c=c+P((h>>>0)%(g>>>0)|0,44)|0;e=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=e;J[b+40>>2]=J[c+40>>2];e=J[c+36>>2];J[b+32>>2]=J[c+32>>2];J[b+36>>2]=e;e=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=e;e=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=e;e=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=e;J[c+40>>2]=J[d+48>>2];b=J[d+44>>2];J[c+32>>2]=J[d+40>>2];J[c+36>>2]=b;b=J[d+36>>2];J[c+24>>2]=J[d+32>>2];J[c+28>>2]=b;b=J[d+28>>2];J[c+16>>2]=J[d+24>>2];J[c+20>>2]=b;b=J[d+20>>2];J[c+8>>2]=J[d+16>>2];J[c+12>>2]=b;b=J[d+12>>2];J[c>>2]=J[d+8>>2];J[c+4>>2]=b;f=f+1|0;if((g|0)!=(f|0)){continue}break}}}function wk(a,b){var c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=Q(0);a:{if(K[a+204|0]&2){c=J[a+8>>2];J[a+68>>2]=J[a+4>>2];J[a+72>>2]=c;c=J[a+16>>2];J[a+76>>2]=J[a+12>>2];J[a+80>>2]=c;c=J[a+24>>2];J[a+84>>2]=J[a+20>>2];J[a+88>>2]=c;c=J[a+32>>2];J[a+92>>2]=J[a+28>>2];J[a+96>>2]=c;c=J[a+40>>2];J[a+100>>2]=J[a+36>>2];J[a+104>>2]=c;c=J[a+48>>2];J[a+108>>2]=J[a+44>>2];J[a+112>>2]=c;c=a+52|0;break a}c=J[b+4>>2];J[a+68>>2]=J[b>>2];J[a+72>>2]=c;c=J[b+12>>2];J[a+76>>2]=J[b+8>>2];J[a+80>>2]=c;c=J[b+20>>2];J[a+84>>2]=J[b+16>>2];J[a+88>>2]=c;c=J[b+28>>2];J[a+92>>2]=J[b+24>>2];J[a+96>>2]=c;c=J[b+36>>2];J[a+100>>2]=J[b+32>>2];J[a+104>>2]=c;c=J[b+44>>2];J[a+108>>2]=J[b+40>>2];J[a+112>>2]=c;c=b+48|0}p=J[c+4>>2];J[a+116>>2]=J[c>>2];J[a+120>>2]=p;p=J[c+8>>2];c=J[c+12>>2];q=J[a+340>>2];J[a+156>>2]=J[a+336>>2];J[a+160>>2]=q;q=J[a+332>>2];J[a+148>>2]=J[a+328>>2];J[a+152>>2]=q;J[a+124>>2]=p;J[a+128>>2]=c;c=J[a+316>>2];J[a+132>>2]=J[a+312>>2];J[a+136>>2]=c;c=J[a+324>>2];J[a+140>>2]=J[a+320>>2];J[a+144>>2]=c;c=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=c;c=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=c;c=J[b+28>>2];J[a+28>>2]=J[b+24>>2];J[a+32>>2]=c;c=J[b+20>>2];J[a+20>>2]=J[b+16>>2];J[a+24>>2]=c;c=J[b+44>>2];J[a+44>>2]=J[b+40>>2];J[a+48>>2]=c;c=J[b+36>>2];J[a+36>>2]=J[b+32>>2];J[a+40>>2]=c;c=J[b+60>>2];J[a+60>>2]=J[b+56>>2];J[a+64>>2]=c;c=J[b+52>>2];J[a+52>>2]=J[b+48>>2];J[a+56>>2]=c;j=N[a+8>>2];k=N[a+12>>2];l=N[a+28>>2];m=N[a+20>>2];n=N[a+24>>2];g=N[a+44>>2];r=N[a+404>>2];h=N[a+36>>2];i=N[a+40>>2];s=N[a+400>>2];o=N[a+4>>2];t=N[a+396>>2];J[a+308>>2]=0;J[a+292>>2]=0;J[a+276>>2]=0;d=Q(r*g);e=Q(t*h);f=Q(s*i);N[a+304>>2]=Q(g*d)+Q(Q(h*e)+Q(i*f));N[a+300>>2]=Q(l*d)+Q(Q(m*e)+Q(n*f));N[a+296>>2]=Q(k*d)+Q(Q(o*e)+Q(j*f));d=Q(r*l);e=Q(t*m);f=Q(s*n);N[a+288>>2]=Q(g*d)+Q(Q(h*e)+Q(i*f));N[a+284>>2]=Q(l*d)+Q(Q(m*e)+Q(n*f));N[a+280>>2]=Q(k*d)+Q(Q(o*e)+Q(j*f));d=g;g=Q(k*r);e=h;h=Q(o*t);f=i;i=Q(j*s);N[a+272>>2]=Q(d*g)+Q(Q(e*h)+Q(f*i));N[a+268>>2]=Q(l*g)+Q(Q(m*h)+Q(i*n));N[a+264>>2]=Q(k*g)+Q(Q(o*h)+Q(j*i))}function pg(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=0;T=a;a=J[a+144>>2]+P(b,284)|0;og(T,a,c);J[a+136>>2]=0;J[a+120>>2]=0;J[a+104>>2]=0;r=N[a+56>>2];y=N[a+52>>2];j=N[a+60>>2];n=Q(N[a+232>>2]*Q(.5));d=Ga(n);e=Ha(n);n=N[a+72>>2];t=N[a+76>>2];u=N[a+68>>2];i=Q(N[a+236>>2]*Q(-.5));g=Q(Ga(i)/Q(Y(Q(Q(t*t)+Q(Q(u*u)+Q(n*n))))));f=Q(u*g);i=Ha(i);h=Q(t*g);s=Q(n*g);p=Q(Q(2)/Q(Q(i*i)+Q(Q(h*h)+Q(Q(f*f)+Q(s*s)))));l=Q(h*p);m=Q(f*l);v=Q(s*p);q=Q(i*v);D=Q(m-q);C=Q(-y);d=Q(d/Q(Y(Q(Q(j*j)+Q(Q(y*y)+Q(r*r))))));g=Q(C*d);w=Q(d*Q(-j));d=Q(d*Q(-r));o=Q(Q(2)/Q(Q(e*e)+Q(Q(w*w)+Q(Q(g*g)+Q(d*d)))));k=Q(g*o);F=Q(g*k);z=Q(d*o);G=Q(d*z);x=Q(Q(1)-Q(F+G));A=Q(s*v);B=Q(h*l);E=Q(Q(1)-Q(A+B));h=Q(w*o);H=Q(g*h);I=Q(e*z);o=Q(H-I);K=Q(d*h);L=Q(e*k);k=Q(K+L);M=Q(f*v);O=Q(i*l);v=Q(M+O);d=Q(Q(D*x)+Q(Q(E*o)+Q(k*v)));R=Q(s*l);p=Q(f*p);S=Q(i*p);i=Q(R+S);s=Q(M-O);f=Q(f*p);p=Q(Q(1)-Q(f+B));l=Q(Q(i*x)+Q(Q(s*o)+Q(k*p)));A=Q(Q(1)-Q(f+A));f=Q(A*x);x=Q(m+q);m=Q(x*o);o=Q(R-S);k=Q(f+Q(m+Q(k*o)));N[a+132>>2]=Q(Q(C*d)-Q(r*l))-Q(j*k);m=Q(Q(r*u)-Q(y*n));q=Q(Q(j*n)-Q(r*t));B=Q(Q(y*t)-Q(j*u));f=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(q*q)+Q(B*B))))));m=Q(m*f);q=Q(q*f);f=Q(B*f);N[a+128>>2]=Q(m*k)+Q(Q(q*d)+Q(f*l));N[a+124>>2]=Q(t*k)+Q(Q(u*d)+Q(n*l));d=Q(K-L);z=Q(g*z);k=Q(e*h);e=Q(z+k);w=Q(w*h);g=Q(Q(1)-Q(F+w));h=Q(Q(D*d)+Q(Q(E*e)+Q(v*g)));l=Q(Q(i*d)+Q(Q(s*e)+Q(g*p)));e=Q(Q(A*d)+Q(Q(x*e)+Q(o*g)));N[a+116>>2]=Q(Q(C*h)-Q(r*l))-Q(j*e);N[a+112>>2]=Q(m*e)+Q(Q(q*h)+Q(f*l));N[a+108>>2]=Q(t*e)+Q(Q(u*h)+Q(n*l));e=Q(H+I);g=Q(Q(1)-Q(G+w));d=Q(z-k);h=Q(Q(D*e)+Q(Q(E*g)+Q(d*v)));i=Q(Q(i*e)+Q(Q(s*g)+Q(d*p)));e=Q(Q(A*e)+Q(Q(x*g)+Q(d*o)));N[a+100>>2]=Q(Q(C*h)-Q(r*i))-Q(j*e);N[a+96>>2]=Q(m*e)+Q(Q(q*h)+Q(f*i));N[a+92>>2]=Q(t*e)+Q(Q(u*h)+Q(n*i));J[a+152>>2]=0;d=j;j=N[a+32>>2];N[a+148>>2]=Q(d*j)+N[a+44>>2];N[a+144>>2]=Q(r*j)+N[a+40>>2];N[a+140>>2]=N[a+36>>2]+Q(y*j)}function ab(a,b,c){var d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);a:{d=J[a+748>>2];if((d|0)<=0){break a}while(1){n=N[b+48>>2];q=N[b+8>>2];r=N[b>>2];s=N[b+4>>2];o=N[b+52>>2];t=N[b+24>>2];i=N[b+16>>2];u=N[b+20>>2];f=N[b+56>>2];h=N[b+40>>2];g=N[b+32>>2];p=N[b+36>>2];j=d-1|0;e=P(j,184)+a|0;J[e- -64>>2]=0;l=f;f=N[e+12>>2];k=Q(h*f);h=N[e+4>>2];v=Q(g*h);g=N[e+8>>2];p=Q(l+Q(k+Q(v+Q(p*g))));N[e+60>>2]=p;o=Q(o+Q(Q(f*t)+Q(Q(h*i)+Q(g*u))));N[e+56>>2]=o;n=Q(n+Q(Q(f*q)+Q(Q(h*r)+Q(g*s))));N[e+52>>2]=n;q=N[c+56>>2];r=N[c+40>>2];s=N[c+32>>2];t=N[c+36>>2];i=N[c+52>>2];u=N[c+24>>2];v=N[c+16>>2];w=N[c+20>>2];f=N[c+48>>2];h=N[c+8>>2];g=N[c>>2];k=N[c+4>>2];J[e+48>>2]=0;l=f;f=N[e+28>>2];x=Q(h*f);h=N[e+20>>2];y=Q(g*h);g=N[e+24>>2];k=Q(l+Q(x+Q(y+Q(k*g))));N[e+36>>2]=k;i=Q(i+Q(Q(f*u)+Q(Q(h*v)+Q(g*w))));N[e+40>>2]=i;f=Q(q+Q(Q(f*r)+Q(Q(h*s)+Q(g*t))));N[e+44>>2]=f;N[e+84>>2]=Q(Q(p-f)*N[e+76>>2])+Q(Q(Q(n-k)*N[e+68>>2])+Q(Q(o-i)*N[e+72>>2]));J[e+152>>2]=J[e+152>>2]+1;e=d>>>0>1;d=j;if(e){continue}break}c=J[a+748>>2];if((c|0)<=0){break a}while(1){b=c;c=b-1|0;d=P(c,184)+a|0;j=d+4|0;f=N[d+84>>2];h=N[a+752>>2];b:{if(!(f<=h)){e=J[d+116>>2];c:{if(!e){break c}m=J[7969];if(!m){break c}ia[m|0](e)|0;J[d+116>>2]=0}e=J[a+748>>2];d=e-1|0;if((b|0)!=(e|0)){d=P(d,184)+a|0;sa(j,d+4|0,184);J[d+124>>2]=0;J[d+116>>2]=0;J[d+152>>2]=0;J[d+128>>2]=0;J[d+132>>2]=0;H[d+120|0]=0;d=J[a+748>>2]-1|0}J[a+748>>2]=d;break b}g=Q(N[d+44>>2]-Q(N[d+60>>2]-Q(f*N[d+76>>2])));l=Q(g*g);g=Q(N[d+36>>2]-Q(N[d+52>>2]-Q(N[d+68>>2]*f)));f=Q(N[d+40>>2]-Q(N[d+56>>2]-Q(f*N[d+72>>2])));if(Q(l+Q(Q(g*g)+Q(f*f)))>Q(h*h)){e=J[d+116>>2];d:{if(!e){break d}m=J[7969];if(!m){break d}ia[m|0](e)|0;J[d+116>>2]=0}e=J[a+748>>2];d=e-1|0;if((b|0)!=(e|0)){d=P(d,184)+a|0;sa(j,d+4|0,184);J[d+124>>2]=0;J[d+116>>2]=0;J[d+152>>2]=0;J[d+128>>2]=0;J[d+132>>2]=0;H[d+120|0]=0;d=J[a+748>>2]-1|0}J[a+748>>2]=d;break b}d=J[7970];if(!d){break b}ia[d|0](j,J[a+740>>2],J[a+744>>2])|0}if(b>>>0>1){continue}break}}}function fB(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);h=J[a+28>>2];p=N[h+20>>2];q=N[h+36>>2];r=N[h+40>>2];s=N[h+8>>2];t=N[h+24>>2];d=N[h+60>>2];i=N[h+44>>2];j=N[h+12>>2];f=N[h+52>>2];k=N[h+56>>2];l=N[h+28>>2];m=N[c+8>>2];n=N[c>>2];o=N[c+4>>2];e=N[b+8>>2];g=N[b>>2];u=N[b+4>>2];v=N[h+4>>2];J[a+108>>2]=0;J[a+92>>2]=0;J[a+76>>2]=0;J[a+60>>2]=0;f=Q(-f);N[a+104>>2]=Q(Q(i*Q(0))+Q(Q(j*Q(0))+Q(l*Q(0))))+Q(Q(Q(j*f)-Q(l*k))-Q(i*d));N[a+100>>2]=Q(Q(r*Q(0))+Q(Q(s*Q(0))+Q(t*Q(0))))+Q(Q(Q(s*f)-Q(t*k))-Q(r*d));N[a+96>>2]=Q(Q(q*Q(0))+Q(Q(v*Q(0))+Q(p*Q(0))))+Q(Q(Q(v*f)-Q(p*k))-Q(q*d));f=e;e=Q(Q(1)/Q(Y(Q(Q(e*e)+Q(Q(g*g)+Q(u*u))))));d=Q(f*e);k=Q(g*e);e=Q(u*e);N[a+88>>2]=Q(i*d)+Q(Q(j*k)+Q(l*e));g=Q(Q(1)/Q(Y(Q(Q(m*m)+Q(Q(n*n)+Q(o*o))))));m=Q(m*g);n=Q(n*g);o=Q(o*g);N[a+84>>2]=Q(i*m)+Q(Q(j*n)+Q(l*o));N[a+72>>2]=Q(d*r)+Q(Q(k*s)+Q(e*t));N[a+68>>2]=Q(m*r)+Q(Q(n*s)+Q(o*t));N[a+56>>2]=Q(d*q)+Q(Q(k*v)+Q(e*p));N[a+52>>2]=Q(m*q)+Q(Q(n*v)+Q(p*o));f=i;i=Q(Q(n*e)-Q(k*o));g=j;j=Q(Q(o*d)-Q(e*m));u=l;l=Q(Q(m*k)-Q(d*n));N[a+80>>2]=Q(f*i)+Q(Q(g*j)+Q(u*l));N[a- -64>>2]=Q(i*r)+Q(Q(j*s)+Q(t*l));N[a+48>>2]=Q(i*q)+Q(Q(j*v)+Q(p*l));b=J[a+32>>2];w=N[b+60>>2];y=N[b+52>>2];x=N[b+56>>2];p=N[b+20>>2];q=N[b+36>>2];r=N[b+40>>2];s=N[b+8>>2];t=N[b+24>>2];v=N[b+44>>2];g=N[b+12>>2];u=N[b+28>>2];f=N[b+4>>2];J[a+172>>2]=0;J[a+156>>2]=0;J[a+140>>2]=0;J[a+124>>2]=0;N[a+152>>2]=Q(d*v)+Q(Q(k*g)+Q(e*u));N[a+148>>2]=Q(m*v)+Q(Q(n*g)+Q(o*u));N[a+144>>2]=Q(i*v)+Q(Q(j*g)+Q(l*u));N[a+136>>2]=Q(d*r)+Q(Q(k*s)+Q(e*t));N[a+132>>2]=Q(m*r)+Q(Q(n*s)+Q(o*t));N[a+128>>2]=Q(i*r)+Q(Q(j*s)+Q(l*t));N[a+120>>2]=Q(d*q)+Q(Q(k*f)+Q(e*p));N[a+116>>2]=Q(m*q)+Q(Q(n*f)+Q(o*p));N[a+112>>2]=Q(i*q)+Q(Q(j*f)+Q(l*p));d=Q(-y);N[a+168>>2]=Q(Q(v*Q(0))+Q(Q(g*Q(0))+Q(u*Q(0))))+Q(Q(Q(g*d)-Q(u*x))-Q(v*w));N[a+164>>2]=Q(Q(r*Q(0))+Q(Q(s*Q(0))+Q(t*Q(0))))+Q(Q(Q(s*d)-Q(t*x))-Q(r*w));N[a+160>>2]=Q(Q(q*Q(0))+Q(Q(f*Q(0))+Q(p*Q(0))))+Q(Q(Q(f*d)-Q(p*x))-Q(q*w));yg(a)}function rd(a,b,c,d,e){var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0);k=K[e+16|0]&-16;H[e+16|0]=k;B=N[d+8>>2];m=N[b+8>>2];r=Q(B-m);l=N[a+8>>2];f=Q(l-m);C=N[d>>2];n=N[b>>2];s=Q(C-n);i=N[a>>2];g=Q(i-n);D=N[d+4>>2];o=N[b+4>>2];t=Q(D-o);p=N[a+4>>2];h=Q(p-o);j=Q(Q(r*f)+Q(Q(s*g)+Q(t*h)));x=N[c+8>>2];u=Q(x-m);y=N[c>>2];v=Q(y-n);z=N[c+4>>2];w=Q(z-o);g=Q(Q(u*f)+Q(Q(v*g)+Q(w*h)));a:{if(!(!(g<=Q(0))|!(j<=Q(0)))){a=J[b+4>>2];J[e>>2]=J[b>>2];J[e+4>>2]=a;a=J[b+12>>2];J[e+8>>2]=J[b+8>>2];J[e+12>>2]=a;H[e+16|0]=k|1;g=Q(0);f=Q(0);h=Q(1);break a}f=Q(l-x);h=Q(i-y);q=Q(p-z);A=Q(Q(r*f)+Q(Q(s*h)+Q(t*q)));h=Q(Q(u*f)+Q(Q(v*h)+Q(w*q)));if(!(!(h>=Q(0))|!(h>=A))){a=J[c+4>>2];J[e>>2]=J[c>>2];J[e+4>>2]=a;a=J[c+12>>2];J[e+8>>2]=J[c+8>>2];J[e+12>>2]=a;H[e+16|0]=k|2;g=Q(1);f=Q(0);h=Q(0);break a}q=Q(Q(g*A)-Q(j*h));b:{if(!(h<=Q(0))|!(g>=Q(0))){break b}f=Q(0);if(!(q<=Q(0))){break b}J[e+12>>2]=0;H[e+16|0]=k|3;g=Q(g/Q(g-h));N[e+8>>2]=m+Q(u*g);N[e+4>>2]=o+Q(w*g);N[e>>2]=n+Q(v*g);h=Q(Q(1)-g);break a}f=Q(l-B);i=Q(i-C);p=Q(p-D);l=Q(Q(u*f)+Q(Q(v*i)+Q(w*p)));f=Q(Q(r*f)+Q(Q(s*i)+Q(t*p)));if(!(!(f>=Q(0))|!(f>=l))){a=J[d+4>>2];J[e>>2]=J[d>>2];J[e+4>>2]=a;a=J[d+12>>2];J[e+8>>2]=J[d+8>>2];J[e+12>>2]=a;H[e+16|0]=k|4;f=Q(1);g=Q(0);h=Q(0);break a}i=Q(Q(l*j)-Q(f*g));c:{if(!(f<=Q(0))|!(j>=Q(0))){break c}g=Q(0);if(!(i<=Q(0))){break c}J[e+12>>2]=0;H[e+16|0]=k|5;f=Q(j/Q(j-f));N[e+8>>2]=m+Q(r*f);N[e+4>>2]=o+Q(t*f);N[e>>2]=n+Q(s*f);h=Q(Q(1)-f);break a}d:{j=Q(Q(h*f)-Q(A*l));if(!(j<=Q(0))){break d}g=Q(A-h);if(!(g>=Q(0))){break d}f=Q(l-f);if(!(f>=Q(0))){break d}J[e+12>>2]=0;H[e+16|0]=k|6;f=Q(g/Q(g+f));N[e+8>>2]=x+Q(Q(B-x)*f);N[e+4>>2]=z+Q(Q(D-z)*f);N[e>>2]=y+Q(Q(C-y)*f);g=Q(Q(1)-f);h=Q(0);break a}J[e+12>>2]=0;H[e+16|0]=k|7;g=Q(Q(1)/Q(q+Q(j+i)));f=Q(q*g);g=Q(i*g);N[e+8>>2]=Q(r*f)+Q(m+Q(u*g));N[e+4>>2]=Q(t*f)+Q(o+Q(w*g));N[e>>2]=Q(s*f)+Q(n+Q(v*g));h=Q(Q(Q(1)-g)-f)}N[e+20>>2]=h;J[e+32>>2]=0;N[e+28>>2]=f;N[e+24>>2]=g}function XA(a){a=a|0;var b=0,c=Q(0),d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=0,u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),R=Q(0),S=Q(0),T=Q(0),U=Q(0),V=0;J[a+36>>2]=0;m=ga-16|0;b=m+8|0;J[b>>2]=0;J[b+4>>2]=0;J[m>>2]=0;J[m+4>>2]=0;d=J[a+32>>2];e=J[a+28>>2];while(1){v=(s<<2)+m|0;J[v>>2]=1065353216;T=N[d+344>>2];U=N[e+344>>2];l=N[e+56>>2];n=N[e+20>>2];w=N[e+24>>2];x=N[e+28>>2];y=N[e+60>>2];z=N[e+44>>2];A=N[e+36>>2];B=N[e+40>>2];r=N[e+52>>2];j=N[a+308>>2];C=N[e+12>>2];f=N[a+300>>2];D=N[e+4>>2];o=N[a+304>>2];E=N[e+8>>2];g=N[d+56>>2];F=N[d+20>>2];p=N[d+24>>2];q=N[d+28>>2];h=N[d+52>>2];G=N[d+12>>2];H=N[d+4>>2];I=N[d+8>>2];K=N[d+60>>2];i=N[a+324>>2];L=N[d+44>>2];k=N[a+316>>2];M=N[d+36>>2];c=N[a+320>>2];O=N[d+40>>2];V=J[m+4>>2];b=P(s,84)+a|0;t=b+48|0;J[t>>2]=J[m>>2];J[t+4>>2]=V;t=J[m+12>>2];J[b+56>>2]=J[m+8>>2];J[b+60>>2]=t;J[b+92>>2]=0;J[b+76>>2]=0;R=Q(Q(g+Q(Q(i*q)+Q(Q(k*F)+Q(c*p))))-g);g=N[b+48>>2];S=Q(Q(h+Q(Q(i*G)+Q(Q(k*H)+Q(c*I))))-h);h=N[b+52>>2];u=Q(Q(R*g)-Q(S*h));c=Q(Q(K+Q(Q(i*L)+Q(Q(k*M)+Q(c*O))))-K);i=N[b+56>>2];k=Q(Q(c*h)-Q(R*i));c=Q(Q(S*i)-Q(c*g));q=Q(Q(L*u)+Q(Q(G*k)+Q(q*c)));N[b+88>>2]=q;p=Q(Q(O*u)+Q(Q(I*k)+Q(p*c)));N[b+84>>2]=p;k=Q(Q(M*u)+Q(Q(H*k)+Q(F*c)));N[b+80>>2]=k;r=Q(Q(r+Q(Q(j*C)+Q(Q(f*D)+Q(o*E))))-r);l=Q(Q(l+Q(Q(j*x)+Q(Q(f*n)+Q(o*w))))-l);c=Q(Q(h*r)-Q(g*l));f=Q(Q(y+Q(Q(j*z)+Q(Q(f*A)+Q(o*B))))-y);j=Q(Q(l*i)-Q(h*f));f=Q(Q(f*g)-Q(i*r));o=Q(Q(z*c)+Q(Q(C*j)+Q(x*f)));N[b+72>>2]=o;i=Q(Q(B*c)+Q(Q(E*j)+Q(w*f)));N[b+68>>2]=i;j=Q(Q(A*c)+Q(Q(D*j)+Q(n*f)));N[b- -64>>2]=j;f=N[e+404>>2];c=N[e+400>>2];g=N[e+396>>2];J[b+108>>2]=0;g=Q(j*g);N[b+96>>2]=g;c=Q(i*c);N[b+100>>2]=c;f=Q(o*f);N[b+104>>2]=f;h=N[d+404>>2];l=N[d+400>>2];n=N[d+396>>2];J[b+124>>2]=0;n=Q(k*n);N[b+112>>2]=n;l=Q(p*l);N[b+116>>2]=l;h=Q(q*h);N[b+120>>2]=h;N[b+128>>2]=Q(T+Q(U+Q(Q(f*o)+Q(Q(g*j)+Q(i*c)))))+Q(Q(h*q)+Q(Q(n*k)+Q(p*l)));J[v>>2]=0;s=s+1|0;if((s|0)!=3){continue}break}}function Uo(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=0,v=0,w=0,x=Q(0),y=Q(0),z=Q(0),A=0;k=ga-48|0;ga=k;J[k+44>>2]=a;J[k+40>>2]=b;J[k+36>>2]=c;J[k+32>>2]=d;J[k+28>>2]=e;J[k+24>>2]=f;J[k+20>>2]=g;J[k+16>>2]=h;J[k+12>>2]=i;H[k+11|0]=j;w=J[k+40>>2];i=J[k+36>>2];j=J[k+32>>2];n=J[k+28>>2];o=J[k+24>>2];c=J[k+12>>2];u=H[k+11|0]&1;e=0;d=0;f=J[k+20>>2];g=J[k+16>>2];a:{if((f|0)<2|(g|0)<2){break a}x=Q(f-1|0);y=Q(g-1|0);J[8369]=J[8369]+1;b=P(f,g);h=ia[J[6782]]((b|0)!=(b&268435455)?-1:b<<4,16)|0;s=ua((b|0)!=(b&1073741823)?-1:b<<2);while(1){q=N[i+8>>2];l=Q(Q(d|0)/y);q=Q(Q(Q(N[n+8>>2]-q)*l)+q);r=N[j+8>>2];r=Q(Q(Q(Q(N[o+8>>2]-r)*l)+r)-q);p=N[j+4>>2];m=Q(Q(Q(N[o+4>>2]-p)*l)+p);p=N[i+4>>2];p=Q(Q(Q(N[n+4>>2]-p)*l)+p);z=Q(m-p);m=N[j>>2];t=Q(Q(Q(N[o>>2]-m)*l)+m);m=N[i>>2];m=Q(Q(Q(N[n>>2]-m)*l)+m);t=Q(t-m);A=P(d,f);a=0;while(1){v=a+A|0;e=h+(v<<4)|0;J[e+12>>2]=0;l=Q(Q(a|0)/x);N[e+8>>2]=Q(r*l)+q;N[e+4>>2]=Q(z*l)+p;N[e>>2]=Q(t*l)+m;J[(v<<2)+s>>2]=1065353216;a=a+1|0;if((f|0)!=(a|0)){continue}break}d=d+1|0;if((g|0)!=(d|0)){continue}break}J[8369]=J[8369]+1;e=Ac(ia[J[6782]](1252,16)|0,w,b,h,s);if(c&1){N[J[e+720>>2]+88>>2]=0;H[e+924|0]=1}if(c&2){N[(J[e+720>>2]+P(f-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(c&4){N[(J[e+720>>2]+P(P(f,g-1|0),104)|0)+88>>2]=0;H[e+924|0]=1}if(c&8){N[(J[e+720>>2]+P((f+P(f,g-1|0)|0)-1|0,104)|0)+88>>2]=0;H[e+924|0]=1}if(h){J[8370]=J[8370]+1;ia[J[6783]](h)}ta(s);if((f|0)<=0){break a}b=0;while(1){i=P(b,f);a=0;d=b+1|0;b:{if((d|0)<(g|0)){j=P(d,f);while(1){c=a;h=a+i|0;a=a+1|0;c:{if((f|0)>(a|0)){n=a+i|0;Ja(e,h,n,0,0);o=c+j|0;Ja(e,h,o,0,0);if(b+c&1){c=a+j|0;rb(e,h,n,c,0);rb(e,h,c,o,0);if(!u){break c}Ja(e,h,c,0,0);break c}rb(e,o,h,n,0);rb(e,o,n,a+j|0,0);if(!u){break c}Ja(e,n,o,0,0);break c}Ja(e,h,c+j|0,0,0)}if((a|0)!=(f|0)){continue}break}break b}while(1){b=a+1|0;if((b|0)<(f|0)){Ja(e,a+i|0,b+i|0,0,0)}a=b;if((f|0)!=(a|0)){continue}break}}b=d;if((g|0)!=(b|0)){continue}break}}ga=k+48|0;return e|0}function yF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;N[b+16>>2]=N[a+20>>2];N[b+20>>2]=N[a+24>>2];N[b+24>>2]=N[a+28>>2];N[b+28>>2]=N[a+32>>2];N[b>>2]=N[a+4>>2];N[b+4>>2]=N[a+8>>2];N[b+8>>2]=N[a+12>>2];N[b+12>>2]=N[a+16>>2];N[b+32>>2]=N[a+36>>2];N[b+36>>2]=N[a+40>>2];N[b+40>>2]=N[a+44>>2];N[b+44>>2]=N[a+48>>2];J[b+48>>2]=J[a+56>>2];J[b+52>>2]=K[a+60|0];d=J[a+88>>2];J[b+56>>2]=d;a:{if(!d){J[b+64>>2]=0;break a}d=ia[J[J[c>>2]+28>>2]](c,J[a+96>>2])|0;J[b+64>>2]=d;if(!d){break a}h=J[a+88>>2];i=ia[J[J[c>>2]+16>>2]](c,48,h)|0;b:{if((h|0)<=0){g=J[a+96>>2];break b}g=J[a+96>>2];d=J[i+8>>2];while(1){e=(f<<6)+g|0;N[d+16>>2]=N[e+16>>2];N[d+20>>2]=N[e+20>>2];N[d+24>>2]=N[e+24>>2];N[d+28>>2]=N[e+28>>2];N[d>>2]=N[e>>2];N[d+4>>2]=N[e+4>>2];N[d+8>>2]=N[e+8>>2];N[d+12>>2]=N[e+12>>2];J[d+32>>2]=J[e+32>>2];J[d+36>>2]=J[e+36>>2];J[d+40>>2]=J[e+40>>2];d=d+48|0;f=f+1|0;if((h|0)!=(f|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,i,4058,1497453121,g)}d=J[a+128>>2];J[b+60>>2]=d;c:{if(!d){J[b+68>>2]=0;break c}d=ia[J[J[c>>2]+28>>2]](c,J[a+136>>2])|0;J[b+68>>2]=d;if(!d){break c}f=0;h=J[a+128>>2];i=ia[J[J[c>>2]+16>>2]](c,16,h)|0;d:{if((h|0)<=0){g=J[a+136>>2];break d}g=J[a+136>>2];d=J[i+8>>2];while(1){e=(f<<4)+g|0;J[d+12>>2]=J[e+12>>2];I[d+6>>1]=L[e+6>>1];I[d+8>>1]=L[e+8>>1];I[d+10>>1]=L[e+10>>1];I[d>>1]=L[e>>1];I[d+2>>1]=L[e+2>>1];I[d+4>>1]=L[e+4>>1];d=d+16|0;f=f+1|0;if((h|0)!=(f|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,i,4035,1497453121,g)}J[b+76>>2]=J[a+144>>2];d=J[a+152>>2];J[b+80>>2]=d;if(!d){J[b+72>>2]=0;return 3577}d=b;b=ia[J[J[c>>2]+28>>2]](c,J[a+160>>2])|0;J[d+72>>2]=b;if(b){f=0;e=J[a+152>>2];g=ia[J[J[c>>2]+16>>2]](c,20,e)|0;e:{if((e|0)<=0){a=J[a+160>>2];break e}a=J[a+160>>2];d=J[g+8>>2];while(1){b=(f<<5)+a|0;I[d+14>>1]=L[b+6>>1];I[d+16>>1]=L[b+8>>1];I[d+18>>1]=L[b+10>>1];I[d+8>>1]=L[b>>1];I[d+10>>1]=L[b+2>>1];I[d+12>>1]=L[b+4>>1];J[d>>2]=J[b+12>>2];J[d+4>>2]=J[b+16>>2];d=d+20|0;f=f+1|0;if((e|0)!=(f|0)){continue}break}}ia[J[J[c>>2]+20>>2]](c,g,3685,1497453121,a)}return 3577}function Jm(a,b,c){var d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0);e=ga-160|0;ga=e;f=J[a+4>>2];d=J[f+12>>2];D=N[d+52>>2];E=N[d+56>>2];h=N[d+24>>2];i=N[d+20>>2];j=N[d+40>>2];k=N[d+36>>2];F=N[d+48>>2];l=N[d+8>>2];m=N[d>>2];n=N[d+4>>2];o=N[d+16>>2];p=N[d+32>>2];d=J[J[f+4>>2]+24>>2]+P(c,80)|0;q=N[d+32>>2];r=N[d>>2];s=N[d+16>>2];t=N[d+56>>2];u=N[d+52>>2];v=N[d+48>>2];w=N[d+36>>2];x=N[d+20>>2];y=N[d+4>>2];z=N[d+40>>2];A=N[d+24>>2];B=N[d+8>>2];f=0;J[e+156>>2]=0;J[e+140>>2]=0;J[e+124>>2]=0;N[e+136>>2]=Q(z*j)+Q(Q(B*p)+Q(k*A));N[e+132>>2]=Q(w*j)+Q(Q(y*p)+Q(k*x));N[e+120>>2]=Q(z*h)+Q(Q(B*o)+Q(i*A));N[e+116>>2]=Q(w*h)+Q(Q(y*o)+Q(i*x));N[e+152>>2]=E+Q(Q(t*j)+Q(Q(v*p)+Q(k*u)));N[e+148>>2]=D+Q(Q(t*h)+Q(Q(v*o)+Q(i*u)));J[e+108>>2]=0;N[e+128>>2]=Q(q*j)+Q(Q(r*p)+Q(k*s));N[e+112>>2]=Q(q*h)+Q(Q(r*o)+Q(i*s));N[e+96>>2]=Q(q*l)+Q(Q(r*m)+Q(n*s));N[e+104>>2]=Q(z*l)+Q(Q(B*m)+Q(n*A));N[e+100>>2]=Q(w*l)+Q(Q(y*m)+Q(n*x));N[e+144>>2]=F+Q(Q(t*l)+Q(Q(v*m)+Q(n*u)));ia[J[J[b>>2]+8>>2]](b,e+96|0,e+80|0,e- -64|0);d=J[a+8>>2];g=J[d+4>>2];ia[J[J[g>>2]+8>>2]](g,J[d+12>>2],e+48|0,e+32|0);d=J[7398];a:{if(d){if(!(ia[d|0](J[J[a+8>>2]+4>>2],b)|0)){break a}}f=N[e+64>>2]<N[e+48>>2]|N[e+80>>2]>N[e+32>>2]?f:1;d=0;if((N[e+72>>2]<N[e+56>>2]|N[e+88>>2]>N[e+40>>2]?d:f)^1|N[e+68>>2]<N[e+52>>2]|N[e+84>>2]>N[e+36>>2]){break a}d=J[a+4>>2];f=J[d+8>>2];J[e+24>>2]=-1;J[e+16>>2]=f;J[e+12>>2]=b;J[e+8>>2]=d;J[e+28>>2]=c;b=2;J[e+20>>2]=e+96;if(!J[J[a+24>>2]+(c<<2)>>2]){d=J[a+12>>2];d=ia[J[J[d>>2]+8>>2]](d,e+8|0,J[a+8>>2],J[a+28>>2])|0;J[J[a+24>>2]+(c<<2)>>2]=d;d=J[a+4>>2]}g=J[a+20>>2];f=J[g+8>>2];b:{if(J[f+8>>2]==J[d+8>>2]){C=g+8|0;break b}f=J[g+12>>2];b=3;C=g+12|0}d=e+8|0;J[C>>2]=d;ia[J[J[g>>2]+(b<<2)>>2]](g,-1,c);b=J[J[a+24>>2]+(c<<2)>>2];ia[J[J[b>>2]+8>>2]](b,d,J[a+8>>2],J[a+16>>2],J[a+20>>2]);b=J[a+20>>2];J[(J[J[b+8>>2]+8>>2]==J[J[a+4>>2]+8>>2]?8:12)+b>>2]=f}ga=e+160|0}function vm(a,b,c,d,e,f){var g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=0,v=Q(0),w=Q(0),x=0,y=0,z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=0,G=0,H=0,I=0,K=0,L=0;g=ga-32|0;ga=g;a:{if(J[a+56>>2]<=0){break a}k=N[d+8>>2];j=N[c+8>>2];l=Q(k-j);i=N[d>>2];n=N[c>>2];m=Q(i-n);o=N[d+4>>2];p=N[c+4>>2];q=Q(o-p);r=Q(Q(1)/Q(Y(Q(Q(l*l)+Q(Q(m*m)+Q(q*q))))));v=Q(l*r);t=Q(v*l);l=Q(m*r);w=Q(l*m);m=Q(q*r);w=Q(t+Q(w+Q(q*m)));q=N[f+8>>2];z=Q((k>j?k:j)+q);r=N[f+4>>2];A=Q((o>p?o:p)+r);t=N[f>>2];B=Q((i>n?i:n)+t);j=k<j?k:j;k=N[e+8>>2];C=Q(j+k);j=N[e+4>>2];D=Q((o<p?o:p)+j);n=i<n?i:n;i=N[e>>2];E=Q(n+i);d=J[a+96>>2];n=v==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/v);h=n<Q(0);F=(h<<4)+g|8;o=m==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/m);s=o<Q(0);G=(s<<4)+g|4;H=(!h<<4)+g|8;I=(!s<<4)+g|4;p=l==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/l);h=p<Q(0);K=(h<<4)+g|0;L=(!h<<4)+g|0;while(1){h=J[d+4>>2];J[g>>2]=J[d>>2];J[g+4>>2]=h;h=J[d+12>>2];J[g+8>>2]=J[d+8>>2];J[g+12>>2]=h;h=J[d+28>>2];J[g+24>>2]=J[d+24>>2];J[g+28>>2]=h;h=J[d+20>>2];J[g+16>>2]=J[d+16>>2];J[g+20>>2]=h;N[g>>2]=N[g>>2]-t;N[g+4>>2]=N[g+4>>2]-r;N[g+16>>2]=N[g+16>>2]-i;N[g+20>>2]=N[g+20>>2]-j;N[g+8>>2]=N[g+8>>2]-q;N[g+24>>2]=N[g+24>>2]-k;h=0;b:{if(N[d+16>>2]<E){break b}h=0;if(N[d>>2]>B){break b}h=1}s=0;c:{d:{e:{f:{g:{if((N[d+24>>2]<C|N[d+8>>2]>z?s:h)^1|N[d+4>>2]>A|N[d+20>>2]<D){break g}l=N[c>>2];k=Q(p*Q(N[K>>2]-l));i=N[c+4>>2];j=Q(o*Q(N[I>>2]-i));if(k>j){break g}i=Q(o*Q(N[G>>2]-i));l=Q(p*Q(N[L>>2]-l));if(i>l){break g}k=i>k?i:k;m=N[c+8>>2];i=Q(n*Q(N[H>>2]-m));if(k>i){break g}m=Q(n*Q(N[F>>2]-m));j=j<l?j:l;if(m>j){break g}y=J[d+32>>2];s=(y|0)==-1;h=(k<m?m:k)<w&(i<j?i:j)>Q(0);if(!h|(y|0)!=-1){break f}ia[J[J[b>>2]+8>>2]](b,J[d+36>>2],J[d+40>>2]);break e}s=J[d+32>>2]==-1;h=0}if(h){break e}if(!s){break d}}u=u+1|0;d=d- -64|0;break c}h=J[d+32>>2];u=h+u|0;d=(h<<6)+d|0}x=x+1|0;if(J[a+56>>2]<=(u|0)){break a}k=N[e+8>>2];j=N[e+4>>2];i=N[e>>2];q=N[f+8>>2];r=N[f+4>>2];t=N[f>>2];continue}}if(J[7404]<(x|0)){J[7404]=x}ga=g+32|0}function Ru(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];if(!K[30860]){H[30860]=1;J[7713]=17548;H[30856]=0}J[(a+3600|0)+72>>2]=30852;J[(a+3604|0)+72>>2]=30852;J[(a+3608|0)+72>>2]=30852;J[(a+3612|0)+72>>2]=30852;J[(a+3616|0)+72>>2]=30852;J[(a+3620|0)+72>>2]=30852;J[(a+3624|0)+72>>2]=30852;J[(a+3628|0)+72>>2]=30852;J[(a+3632|0)+72>>2]=30852;J[(a+3636|0)+72>>2]=30852;J[(a+3640|0)+72>>2]=30852;J[(a+3644|0)+72>>2]=30852;J[(a+3648|0)+72>>2]=30852;J[(a+3652|0)+72>>2]=30852;J[(a+3656|0)+72>>2]=30852;J[(a+3660|0)+72>>2]=30852;J[(a+3664|0)+72>>2]=30852;J[(a+3668|0)+72>>2]=30852;J[(a+3672|0)+72>>2]=30852;J[(a+3676|0)+72>>2]=30852;J[(a+3680|0)+72>>2]=30852;J[(a+3684|0)+72>>2]=30852;J[(a+3688|0)+72>>2]=30852;J[(a+3692|0)+72>>2]=30852;J[(a+3696|0)+72>>2]=30852;b=a+3700|0;J[b+72>>2]=30852;J[(a+3704|0)+72>>2]=30852;J[(a+3708|0)+72>>2]=30852;J[(a+3712|0)+72>>2]=30852;J[(a+3716|0)+72>>2]=30852;J[(a+3720|0)+72>>2]=30852;J[(a+3724|0)+72>>2]=30852;J[(a+3728|0)+72>>2]=30852;J[(a+3732|0)+72>>2]=30852;J[(a+3736|0)+72>>2]=30852;J[(a+3740|0)+72>>2]=30852;J[a+172>>2]=30852;J[a+316>>2]=30852;J[a+460>>2]=30852;J[a+604>>2]=30852;J[a+748>>2]=30852;J[a+892>>2]=30852;J[(a+964|0)+72>>2]=30852;J[(a+1108|0)+72>>2]=30852;J[(a+1252|0)+72>>2]=30852;J[(a+1396|0)+72>>2]=30852;J[(a+1540|0)+72>>2]=30852;J[(a+1684|0)+72>>2]=30852;J[(a+1828|0)+72>>2]=30852;J[(a+1972|0)+72>>2]=30852;J[(a+2116|0)+72>>2]=30852;J[(a+2260|0)+72>>2]=30852;J[(a+2404|0)+72>>2]=30852;J[(a+2548|0)+72>>2]=30852;J[(a+2692|0)+72>>2]=30852;J[(a+2836|0)+72>>2]=30852;J[(a+2980|0)+72>>2]=30852;J[(a+3124|0)+72>>2]=30852;J[(a+3268|0)+72>>2]=30852;J[(a+3412|0)+72>>2]=30852;J[(a+3556|0)+72>>2]=30852;J[b+72>>2]=30852;J[(a+3844|0)+72>>2]=30852;J[(a+3988|0)+72>>2]=30852;J[(a+4132|0)+72>>2]=30852;J[(a+4276|0)+72>>2]=30852;J[(a+4420|0)+72>>2]=30852;J[(a+4564|0)+72>>2]=30852;J[(a+4708|0)+72>>2]=30852;J[(a+4852|0)+72>>2]=30852;J[(a+4996|0)+72>>2]=30852;J[(a+5140|0)+72>>2]=30852;ga=c+16|0}function bH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0);e=ga-192|0;ga=e;m=N[c+8>>2];n=Q(Q(N[b+8>>2]*d)+m);q=N[c+4>>2];o=Q(Q(N[b+4>>2]*d)+q);r=N[c>>2];p=Q(Q(N[b>>2]*d)+r);l=J[a+8>>2];f=J[l+8>>2];g=J[J[a+4>>2]+740>>2];s=(f|0)==(g|0);a:{if(!s){g=J[a+12>>2];h=J[g+8>>2];k=Q(n-N[h+60>>2]);i=Q(p-N[h+52>>2]);j=Q(o-N[h+56>>2]);t=Q(Q(N[h+44>>2]*k)+Q(Q(N[h+12>>2]*i)+Q(j*N[h+28>>2])));u=Q(Q(N[h+40>>2]*k)+Q(Q(N[h+8>>2]*i)+Q(j*N[h+24>>2])));k=Q(Q(N[h+36>>2]*k)+Q(Q(N[h+4>>2]*i)+Q(j*N[h+20>>2])));break a}k=Q(n-N[g+60>>2]);i=Q(p-N[g+52>>2]);j=Q(o-N[g+56>>2]);t=Q(Q(N[g+44>>2]*k)+Q(Q(N[g+12>>2]*i)+Q(j*N[g+28>>2])));u=Q(Q(N[g+40>>2]*k)+Q(Q(N[g+8>>2]*i)+Q(j*N[g+24>>2])));k=Q(Q(N[g+36>>2]*k)+Q(Q(N[g+4>>2]*i)+Q(j*N[g+20>>2])));g=J[a+12>>2];f=J[g+8>>2]}v=N[f+20>>2];w=N[f+36>>2];x=N[f+40>>2];y=N[f+8>>2];z=N[f+24>>2];i=N[f+44>>2];j=N[f+60>>2];A=N[f+12>>2];B=N[f+52>>2];C=N[f+28>>2];D=N[f+56>>2];E=N[f+4>>2];J[e+36>>2]=0;F=i;i=Q(m-j);j=Q(r-B);m=Q(q-D);N[e+32>>2]=Q(F*i)+Q(Q(A*j)+Q(C*m));N[e+28>>2]=Q(x*i)+Q(Q(y*j)+Q(m*z));J[e+20>>2]=0;N[e+16>>2]=t;N[e+12>>2]=u;N[e+8>>2]=k;N[e+24>>2]=Q(w*i)+Q(Q(E*j)+Q(m*v));f=J[b+12>>2];J[e+80>>2]=J[b+8>>2];J[e+84>>2]=f;f=J[b>>2];b=J[b+4>>2];J[e+136>>2]=0;J[e+140>>2]=0;J[e+144>>2]=0;J[e+148>>2]=0;J[e+152>>2]=0;J[e+156>>2]=0;N[e+60>>2]=o;N[e- -64>>2]=n;J[e+68>>2]=0;J[e+72>>2]=f;J[e+76>>2]=b;J[e+128>>2]=0;J[e+132>>2]=0;H[e+124|0]=0;J[e+120>>2]=0;J[e+100>>2]=0;J[e+92>>2]=0;J[e+96>>2]=0;N[e+88>>2]=d;N[e+56>>2]=p;b=J[c+12>>2];J[e+48>>2]=J[c+8>>2];J[e+52>>2]=b;b=J[c+4>>2];J[e+40>>2]=J[c>>2];J[e+44>>2]=b;b:{if(!s){h=a+16|0;f=a+20|0;b=l;l=a+24|0;c=a+28|0;break b}h=a+20|0;f=a+16|0;b=g;g=l;l=a+28|0;c=a+24|0}f=J[f>>2];h=J[h>>2];c=J[c>>2];l=J[l>>2];J[e+116>>2]=l;J[e+112>>2]=c;J[e+108>>2]=h;J[e+104>>2]=f;a=J[a+32>>2];Q(ia[J[J[a>>2]+12>>2]](a,e+8|0,g,f,c,b,h,l));ga=e+192|0}function WE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0);c=ga-144|0;ga=c;if(J[a+16>>2]>0){f=c- -64|0;while(1){g=P(h,80);d=g+J[a+24>>2]|0;e=J[d+12>>2];J[c+24>>2]=J[d+8>>2];J[c+28>>2]=e;e=J[d+4>>2];J[c+16>>2]=J[d>>2];J[c+20>>2]=e;e=J[d+28>>2];J[c+40>>2]=J[d+24>>2];J[c+44>>2]=e;e=J[d+20>>2];J[c+32>>2]=J[d+16>>2];J[c+36>>2]=e;e=J[d+44>>2];J[c+56>>2]=J[d+40>>2];J[c+60>>2]=e;e=J[d+36>>2];J[c+48>>2]=J[d+32>>2];J[c+52>>2]=e;e=J[d+60>>2];J[f+8>>2]=J[d+56>>2];J[f+12>>2]=e;e=J[d+52>>2];J[f>>2]=J[d+48>>2];J[f+4>>2]=e;d=J[d+64>>2];d=ia[J[J[d>>2]+28>>2]](d)|0;e=J[d+12>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=e;e=J[d+4>>2];J[c>>2]=J[d>>2];J[c+4>>2]=e;i=N[a+80>>2];j=N[b+4>>2];k=N[a+76>>2];l=N[b>>2];N[c+8>>2]=Q(N[c+8>>2]*N[b+8>>2])/N[a+84>>2];J[c+12>>2]=0;N[c>>2]=Q(l*N[c>>2])/k;N[c+4>>2]=Q(j*N[c+4>>2])/i;d=J[(J[a+24>>2]+g|0)+64>>2];ia[J[J[d>>2]+24>>2]](d,c);i=N[a+76>>2];j=N[b>>2];k=N[a+80>>2];l=N[b+4>>2];m=N[a+84>>2];n=N[b+8>>2];J[c+76>>2]=0;N[c+72>>2]=Q(n*N[c+72>>2])/m;N[c+68>>2]=Q(l*N[c+68>>2])/k;N[c+64>>2]=Q(j*N[c+64>>2])/i;e=J[c+20>>2];d=J[a+24>>2]+g|0;J[d>>2]=J[c+16>>2];J[d+4>>2]=e;e=J[c+28>>2];J[d+8>>2]=J[c+24>>2];J[d+12>>2]=e;e=J[c+44>>2];J[d+24>>2]=J[c+40>>2];J[d+28>>2]=e;e=J[c+36>>2];J[d+16>>2]=J[c+32>>2];J[d+20>>2]=e;e=J[c+60>>2];J[d+40>>2]=J[c+56>>2];J[d+44>>2]=e;e=J[c+52>>2];J[d+32>>2]=J[c+48>>2];J[d+36>>2]=e;e=J[f+12>>2];J[d+56>>2]=J[f+8>>2];J[d+60>>2]=e;e=J[f+4>>2];J[d+48>>2]=J[f>>2];J[d+52>>2]=e;if(J[a+64>>2]){d=J[(J[a+24>>2]+g|0)+64>>2];ia[J[J[d>>2]+8>>2]](d,c+16|0,c+128|0,c+112|0);d=J[c+140>>2];J[c+88>>2]=J[c+136>>2];J[c+92>>2]=d;d=J[c+132>>2];J[c+80>>2]=J[c+128>>2];J[c+84>>2]=d;d=J[c+124>>2];J[c+104>>2]=J[c+120>>2];J[c+108>>2]=d;d=J[c+116>>2];J[c+96>>2]=J[c+112>>2];J[c+100>>2]=d;Gc(J[a+64>>2],J[(J[a+24>>2]+g|0)+76>>2],c+80|0)}h=h+1|0;if((h|0)<J[a+16>>2]){continue}break}}d=J[b+4>>2];J[a+76>>2]=J[b>>2];J[a+80>>2]=d;d=J[b+12>>2];J[a+84>>2]=J[b+8>>2];J[a+88>>2]=d;ia[J[J[a>>2]+68>>2]](a);ga=c+144|0}function Vm(a,b,c,d){var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=0,o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=0,u=0,v=0,w=0,x=Q(0),y=0,z=0,A=0,B=0,C=0,D=0,E=0;f=ga-32|0;ga=f;if(a){g=N[b+8>>2];h=N[c+8>>2];o=N[b>>2];k=N[c>>2];l=N[b+4>>2];i=N[c+4>>2];J[8369]=J[8369]+1;c=ia[J[6782]](512,16)|0;qa(c+4|0,0,508);J[c>>2]=a;g=Q(h-g);h=Q(k-o);o=Q(i-l);k=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(h*h)+Q(o*o))))));l=Q(g*k);i=Q(l*g);g=Q(h*k);r=Q(g*h);h=Q(o*k);x=Q(i+Q(r+Q(o*h)));o=l==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/l);a=o<Q(0);y=(a<<4)+f|8;h=h==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/h);e=h<Q(0);z=(e<<4)+f|4;A=(!a<<4)+f|8;B=(!e<<4)+f|4;g=g==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/g);a=g<Q(0);C=(a<<4)+f|0;D=(!a<<4)+f|0;q=126;j=128;p=128;a=1;while(1){e=a-1|0;w=e<<2;n=J[w+c>>2];m=J[n+4>>2];J[f>>2]=J[n>>2];J[f+4>>2]=m;m=J[n+12>>2];J[f+8>>2]=J[n+8>>2];J[f+12>>2]=m;m=J[n+28>>2];J[f+24>>2]=J[n+24>>2];J[f+28>>2]=m;m=J[n+20>>2];J[f+16>>2]=J[n+16>>2];J[f+20>>2]=m;r=N[b>>2];k=Q(g*Q(N[C>>2]-r));i=N[b+4>>2];l=Q(h*Q(N[B>>2]-i));a:{b:{if(k>l){break b}i=Q(h*Q(N[z>>2]-i));r=Q(g*Q(N[D>>2]-r));if(i>r){break b}k=k<i?i:k;s=N[b+8>>2];i=Q(o*Q(N[A>>2]-s));if(k>i){break b}s=Q(o*Q(N[y>>2]-s));l=l<r?l:r;if(s>l|!((k<s?s:k)<x)|!((l>i?i:l)>Q(0))){break b}if(J[n+40>>2]){c:{if((e|0)<=(q|0)){e=c;break c}m=p<<1;d:{if((m|0)<=(p|0)){e=c;break d}e:{if((m|0)<=(j|0)){e=c;break e}f:{if(!p){e=0;break f}J[8369]=J[8369]+1;e=ia[J[6782]](p<<3,16)|0;if((p|0)<=0){break f}v=0;q=0;if(p-1>>>0>=3){E=p&-4;t=0;while(1){j=q<<2;J[j+e>>2]=J[c+j>>2];u=j|4;J[u+e>>2]=J[c+u>>2];u=j|8;J[u+e>>2]=J[c+u>>2];j=j|12;J[j+e>>2]=J[c+j>>2];q=q+4|0;t=t+4|0;if((E|0)!=(t|0)){continue}break}}j=p&3;if(!j){break f}while(1){t=q<<2;J[t+e>>2]=J[c+t>>2];q=q+1|0;v=v+1|0;if((j|0)!=(v|0)){continue}break}}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}j=m}c=p<<2;qa(c+e|0,0,c)}q=m-2|0;c=e;p=m}J[e+w>>2]=J[n+36>>2];J[(a<<2)+e>>2]=J[n+40>>2];a=a+1|0;break a}ia[J[J[d>>2]+12>>2]](d,n)}a=e}if(a){continue}break}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}}ga=f+32|0}function jp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;g=ga-16|0;ga=g;J[g+12>>2]=a;J[g+8>>2]=b;a=J[g+8>>2];h=ga-16|0;ga=h;J[h+12>>2]=J[g+12>>2]+748;J[h+8>>2]=a;a=J[h+8>>2];b=ga+-64|0;ga=b;J[b+60>>2]=J[h+12>>2];J[b+56>>2]=a;k=J[b+60>>2];a=ga-16|0;J[a+12>>2]=J[b+56>>2];J[b+52>>2]=J[J[a+12>>2]+4>>2];e=J[b+52>>2];c=b+8|0;J[c>>2]=0;J[c+4>>2]=0;J[b+48>>2]=0;J[b+40>>2]=0;J[b+44>>2]=0;J[b+32>>2]=0;J[b+36>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;ga=a;J[a+12>>2]=c;d=J[a+12>>2];vh(d);J[(ga-16|0)+12>>2]=d+20;ga=a+16|0;a=ga-32|0;ga=a;J[a+28>>2]=k;J[a+24>>2]=e;J[a+20>>2]=c;c=ga-16|0;i=J[a+28>>2];J[c+12>>2]=i;J[a+16>>2]=J[J[c+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}c=J[a+24>>2];e=ga-16|0;J[e+12>>2]=i;if(J[J[e+12>>2]+4>>2]<(c|0)){e=J[a+24>>2];c=ga-16|0;ga=c;J[c+12>>2]=i;J[c+8>>2]=e;d=ga-16|0;e=J[c+12>>2];J[d+12>>2]=e;if(J[J[d+12>>2]+8>>2]<J[c+8>>2]){f=J[c+8>>2];d=ga-16|0;ga=d;J[d+8>>2]=e;J[d+4>>2]=f;j=J[d+8>>2];b:{if(J[d+4>>2]){l=J[d+4>>2];f=ga-16|0;ga=f;J[f+12>>2]=j;J[f+8>>2]=l;J[f+4>>2]=0;j=P(J[f+8>>2],44);J[8369]=J[8369]+1;j=ia[J[6782]](j,16)|0;ga=f+16|0;J[d+12>>2]=j;break b}J[d+12>>2]=0}ga=d+16|0;J[c+4>>2]=J[d+12>>2];d=ga-16|0;J[d+12>>2]=e;uh(e,J[J[d+12>>2]+4>>2],J[c+4>>2]);d=ga-16|0;J[d+12>>2]=e;Eb(e,J[J[d+12>>2]+4>>2]);lb(e);H[e+16|0]=1;J[e+12>>2]=J[c+4>>2];J[e+8>>2]=J[c+8>>2]}ga=c+16|0}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){e=J[a+20>>2];d=J[e+4>>2];c=J[i+12>>2]+P(J[a+8>>2],44)|0;J[c>>2]=J[e>>2];J[c+4>>2]=d;J[c+40>>2]=J[e+40>>2];d=J[e+36>>2];J[c+32>>2]=J[e+32>>2];J[c+36>>2]=d;d=J[e+28>>2];J[c+24>>2]=J[e+24>>2];J[c+28>>2]=d;d=J[e+20>>2];J[c+16>>2]=J[e+16>>2];J[c+20>>2]=d;d=J[e+12>>2];J[c+8>>2]=J[e+8>>2];J[c+12>>2]=d;J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[i+4>>2]=J[a+24>>2];ga=a+32|0;uh(J[b+56>>2],J[b+52>>2],J[k+12>>2]);ga=b- -64|0;ga=h+16|0;ga=g+16|0}function Il(a,b,c){var d=Q(0),e=0,f=Q(0),g=0,h=0,i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;i=N[a- -64>>2];p=N[a+48>>2];k=N[a+32>>2];d=N[b+24>>2];d=d<k?k:d;d=Q(Q(i*Q((d>p?p:d)-k))+Q(.5));a:{if(d<Q(4294967296)&d>=Q(0)){w=~~d>>>0;break a}w=0}n=N[a+60>>2];f=N[a+44>>2];l=N[a+28>>2];d=N[b+20>>2];d=d<l?l:d;d=Q(Q(n*Q((d>f?f:d)-l))+Q(.5));b:{if(d<Q(4294967296)&d>=Q(0)){x=~~d>>>0;break b}x=0}d=N[b+8>>2];d=d<k?k:d;d=Q(Q(Q((d>p?p:d)-k)*i)+Q(.5));c:{if(d<Q(4294967296)&d>=Q(0)){s=~~d>>>0;break c}s=0}d=N[b+4>>2];d=d<l?l:d;d=Q(Q(Q((d>f?f:d)-l)*n)+Q(.5));d:{if(d<Q(4294967296)&d>=Q(0)){y=~~d>>>0;break d}y=0}n=N[a+56>>2];i=N[a+40>>2];f=N[a+24>>2];d=N[b+16>>2];d=d<f?f:d;d=Q(Q(n*Q((d>i?i:d)-f))+Q(.5));e:{if(d<Q(4294967296)&d>=Q(0)){z=~~d>>>0;break e}z=0}d=N[b>>2];d=d<f?f:d;d=Q(Q(Q((d>i?i:d)-f)*n)+Q(.5));f:{if(d<Q(4294967296)&d>=Q(0)){A=~~d>>>0;break f}A=0}B=J[a>>2];if((B|0)>0){b=0;while(1){g:{h:{C=b<<4;e=C+J[a+16>>2]|0;if(!(L[e>>1]>z>>>0|L[e+6>>1]<A>>>0|(L[e+8>>1]<y>>>0|L[e+2>>1]>x>>>0))){if(L[e+4>>1]<=w>>>0){break h}}D=J[e+12>>2]>=0;E=0;break g}t=J[e+12>>2];D=(t|0)>=0;e=L[e+10>>1];E=e>>>0>=s>>>0;if((t|0)<0|e>>>0<s>>>0){break g}g=J[c+4>>2];i:{if((g|0)!=J[c+8>>2]){break i}q=g?g<<1:1;if((q|0)<=(g|0)){break i}j:{if(!q){j=0;break j}J[8369]=J[8369]+1;j=ia[J[6782]](q<<2,16)|0;g=J[c+4>>2]}h=J[c+12>>2];k:{l:{if((g|0)>0){u=0;m=0;if(g-1>>>0>=3){r=g&-4;v=0;while(1){o=m<<2;J[o+j>>2]=J[h+o>>2];e=o|4;J[e+j>>2]=J[e+h>>2];e=o|8;J[e+j>>2]=J[e+h>>2];e=o|12;J[e+j>>2]=J[e+h>>2];m=m+4|0;v=v+4|0;if((r|0)!=(v|0)){continue}break}}r=g&3;if(!r){break l}while(1){e=m<<2;J[e+j>>2]=J[e+h>>2];m=m+1|0;u=u+1|0;if((r|0)!=(u|0)){continue}break}break l}if(!h){break k}}if(h?K[c+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](h)}g=J[c+4>>2]}J[c+12>>2]=j;H[c+16|0]=1;J[c+8>>2]=q}J[J[c+12>>2]+(g<<2)>>2]=t;J[c+4>>2]=J[c+4>>2]+1}b=D|E?b+1|0:b-J[(J[a+16>>2]+C|0)+12>>2]|0;if((B|0)>(b|0)){continue}break}}}function Gp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);var f=0,g=0,h=0,i=0,j=0,k=Q(0),l=0,m=0,n=0,o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=0,E=Q(0);f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;H[f+19|0]=d;N[f+12>>2]=e;c=H[f+19|0]&1;E=N[f+12>>2];h=ga-16|0;ga=h;a=J[f+28>>2];s=J[f+24>>2];b=J[a+720>>2]+P(s,104)|0;e=N[b+16>>2];o=N[b+12>>2];p=N[b+8>>2];b=J[f+20>>2];t=N[b+20>>2];u=N[b+36>>2];v=N[b+40>>2];w=N[b+8>>2];x=N[b+24>>2];q=N[b+60>>2];y=N[b+44>>2];z=N[b+12>>2];k=N[b+52>>2];r=N[b+56>>2];A=N[b+28>>2];B=N[b+4>>2];J[h+12>>2]=0;k=Q(-k);N[h+8>>2]=Q(Q(Q(z*k)-Q(A*r))-Q(y*q))+Q(Q(e*y)+Q(Q(p*z)+Q(A*o)));N[h+4>>2]=Q(Q(Q(w*k)-Q(x*r))-Q(v*q))+Q(Q(e*v)+Q(Q(p*w)+Q(x*o)));N[h>>2]=Q(Q(Q(B*k)-Q(t*r))-Q(u*q))+Q(Q(e*u)+Q(Q(p*B)+Q(t*o)));i=ga-96|0;ga=i;a:{if(!c){break a}c=J[a+268>>2];b:{if((c|0)<=0){break b}j=J[a+276>>2];d=0;while(1){if((b|0)!=J[j+(d<<2)>>2]){d=d+1|0;if((d|0)!=(c|0)){continue}break b}break}if((c|0)!=(d|0)){break a}}c:{if(J[a+272>>2]!=(c|0)){break c}m=c?c<<1:1;if((m|0)<=(c|0)){break c}d:{if(!m){j=0;break d}J[8369]=J[8369]+1;j=ia[J[6782]](m<<2,16)|0;c=J[a+268>>2]}e:{if((c|0)<=0){break e}d=0;if(c-1>>>0>=3){n=c&-4;while(1){g=d<<2;J[g+j>>2]=J[g+J[a+276>>2]>>2];l=g|4;J[l+j>>2]=J[l+J[a+276>>2]>>2];l=g|8;J[l+j>>2]=J[l+J[a+276>>2]>>2];g=g|12;J[g+j>>2]=J[g+J[a+276>>2]>>2];d=d+4|0;C=C+4|0;if((n|0)!=(C|0)){continue}break}}g=c&3;if(!g){break e}while(1){n=d<<2;J[n+j>>2]=J[n+J[a+276>>2]>>2];d=d+1|0;D=D+1|0;if((g|0)!=(D|0)){continue}break}}d=J[a+276>>2];if(!(!d|!K[a+280|0])){if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}c=J[a+268>>2]}J[a+276>>2]=j;H[a+280|0]=1;J[a+272>>2]=m}J[J[a+276>>2]+(c<<2)>>2]=b;J[a+268>>2]=c+1}c=J[a+720>>2];J[i+20>>2]=b;b=c+P(s,104)|0;J[i>>2]=b;c=J[h+12>>2];J[i+12>>2]=J[h+8>>2];J[i+16>>2]=c;c=J[h+4>>2];J[i+4>>2]=J[h>>2];J[i+8>>2]=c;H[b+100|0]=K[b+100|0]|1;N[i+24>>2]=E;ei(a+788|0,i);ga=i+96|0;ga=h+16|0;ga=f+32|0}function jg(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:{if(!a|!b){break a}J[8369]=J[8369]+1;d=ia[J[6782]](1024,16)|0;J[d+4>>2]=b;J[d>>2]=a;n=124;i=128;j=128;l=1;while(1){m=l;l=m-1|0;o=l<<3;a=o+d|0;f=J[a+4>>2];e=J[a>>2];if((l|0)>(n|0)){p=i<<1;b:{if((p|0)<=(i|0)){b=d;break b}if((j|0)>=(p|0)){b=d;break b}c:{if(!i){b=0;break c}J[8369]=J[8369]+1;b=ia[J[6782]](i<<4,16)|0;if((i|0)<=0){break c}n=0;a=0;if(i-1>>>0>=3){r=i&-4;j=0;while(1){h=a<<3;g=h+b|0;k=d+h|0;q=J[k+4>>2];J[g>>2]=J[k>>2];J[g+4>>2]=q;g=h|8;k=g+b|0;g=d+g|0;q=J[g+4>>2];J[k>>2]=J[g>>2];J[k+4>>2]=q;g=h|16;k=g+b|0;g=d+g|0;q=J[g+4>>2];J[k>>2]=J[g>>2];J[k+4>>2]=q;h=h|24;g=h+b|0;h=d+h|0;k=J[h+4>>2];J[g>>2]=J[h>>2];J[g+4>>2]=k;a=a+4|0;j=j+4|0;if((r|0)!=(j|0)){continue}break}}i=i&3;if(!i){break c}while(1){j=a<<3;h=j+b|0;j=d+j|0;r=J[j+4>>2];J[h>>2]=J[j>>2];J[h+4>>2]=r;a=a+1|0;n=n+1|0;if((i|0)!=(n|0)){continue}break}}if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}j=p}n=p-4|0;i=p;d=b}d:{if((e|0)==(f|0)){if(!J[e+40>>2]){break d}a=d+o|0;b=J[e+36>>2];J[a+4>>2]=b;J[a>>2]=b;a=(m<<3)+d|0;b=J[e+40>>2];J[a+4>>2]=b;J[a>>2]=b;b=J[e+40>>2];J[a+8>>2]=J[e+36>>2];J[a+12>>2]=b;l=m+2|0;break d}if(!(N[e>>2]<=N[f+16>>2])|!(N[e+16>>2]>=N[f>>2])|(!(N[e+4>>2]<=N[f+20>>2])|!(N[e+20>>2]>=N[f+4>>2]))){break d}if(!(N[e+8>>2]<=N[f+24>>2])|!(N[e+24>>2]>=N[f+8>>2])){break d}a=J[f+40>>2];if(J[e+40>>2]){b=J[e+36>>2];if(a){a=d+o|0;J[a+4>>2]=J[f+36>>2];J[a>>2]=b;b=J[e+40>>2];a=(m<<3)+d|0;J[a+4>>2]=J[f+36>>2];J[a>>2]=b;b=J[e+36>>2];J[a+12>>2]=J[f+40>>2];J[a+8>>2]=b;b=J[e+40>>2];J[a+20>>2]=J[f+40>>2];J[a+16>>2]=b;l=m+3|0;break d}a=d+o|0;J[a+4>>2]=f;J[a>>2]=b;a=J[e+40>>2];b=(m<<3)+d|0;J[b+4>>2]=f;J[b>>2]=a;l=m+1|0;break d}if(a){a=d+o|0;J[a+4>>2]=J[f+36>>2];J[a>>2]=e;a=(m<<3)+d|0;J[a+4>>2]=J[f+40>>2];J[a>>2]=e;l=m+1|0;break d}ia[J[J[c>>2]+8>>2]](c,e,f)}if(l){continue}break}if(!d){break a}if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}}}function Na(a,b){var c=0,d=Q(0),e=0,f=0;c=ga+-64|0;ga=c;J[c+60>>2]=a;J[c+56>>2]=b;a=ga-16|0;b=J[c+60>>2];J[a+12>>2]=b;d=N[J[a+12>>2]>>2];J[a+12>>2]=b+16;d=Q(d+N[J[a+12>>2]+4>>2]);J[a+12>>2]=b+32;N[c+52>>2]=d+N[J[a+12>>2]+8>>2];a:{if(N[c+52>>2]>Q(0)){a=ga-16|0;N[a+12>>2]=N[c+52>>2]+Q(1);N[c+28>>2]=Y(N[a+12>>2]);N[c+44>>2]=N[c+28>>2]*Q(.5);N[c+28>>2]=Q(.5)/N[c+28>>2];e=b+32|0;J[a+12>>2]=e;d=N[J[a+12>>2]+4>>2];f=b+16|0;J[a+12>>2]=f;N[c+32>>2]=Q(d-N[J[a+12>>2]+8>>2])*N[c+28>>2];J[a+12>>2]=b;d=N[J[a+12>>2]+8>>2];J[a+12>>2]=e;N[c+36>>2]=Q(d-N[J[a+12>>2]>>2])*N[c+28>>2];J[a+12>>2]=f;d=N[J[a+12>>2]>>2];J[a+12>>2]=b;N[c+40>>2]=Q(d-N[J[a+12>>2]+4>>2])*N[c+28>>2];break a}a=ga-16|0;J[a+12>>2]=b;d=N[J[a+12>>2]>>2];J[a+12>>2]=b+16;b:{if(N[J[a+12>>2]+4>>2]>d){a=ga-16|0;J[a+12>>2]=b+16;d=N[J[a+12>>2]+4>>2];J[a+12>>2]=b+32;a=N[J[a+12>>2]+8>>2]>d?2:1;break b}a=ga-16|0;J[a+12>>2]=b;d=N[J[a+12>>2]>>2];J[a+12>>2]=b+32;a=N[J[a+12>>2]+8>>2]>d?2:0}J[c+24>>2]=a;J[c+20>>2]=(J[c+24>>2]+1|0)%3;J[c+16>>2]=(J[c+24>>2]+2|0)%3;a=ga-16|0;J[a+12>>2]=b+(J[c+24>>2]<<4);d=N[J[a+12>>2]+(J[c+24>>2]<<2)>>2];J[a+12>>2]=b+(J[c+20>>2]<<4);d=Q(d-N[J[a+12>>2]+(J[c+20>>2]<<2)>>2]);J[a+12>>2]=b+(J[c+16>>2]<<4);N[a+12>>2]=Q(d-N[J[a+12>>2]+(J[c+16>>2]<<2)>>2])+Q(1);N[c+12>>2]=Y(N[a+12>>2]);e=c+32|0;N[e+(J[c+24>>2]<<2)>>2]=N[c+12>>2]*Q(.5);N[c+12>>2]=Q(.5)/N[c+12>>2];J[a+12>>2]=b+(J[c+16>>2]<<4);d=N[J[a+12>>2]+(J[c+20>>2]<<2)>>2];J[a+12>>2]=b+(J[c+20>>2]<<4);N[c+44>>2]=Q(d-N[J[a+12>>2]+(J[c+16>>2]<<2)>>2])*N[c+12>>2];J[a+12>>2]=b+(J[c+20>>2]<<4);d=N[J[a+12>>2]+(J[c+24>>2]<<2)>>2];J[a+12>>2]=b+(J[c+24>>2]<<4);N[e+(J[c+20>>2]<<2)>>2]=Q(d+N[J[a+12>>2]+(J[c+20>>2]<<2)>>2])*N[c+12>>2];J[a+12>>2]=b+(J[c+16>>2]<<4);d=N[J[a+12>>2]+(J[c+24>>2]<<2)>>2];J[a+12>>2]=b+(J[c+24>>2]<<4);N[e+(J[c+16>>2]<<2)>>2]=Q(d+N[J[a+12>>2]+(J[c+16>>2]<<2)>>2])*N[c+12>>2]}a=c+32|0;xc(J[c+56>>2],a,a+4|0,a+8|0,a+12|0);ga=c- -64|0}function OH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=0,l=0,m=0,n=0,o=Q(0);g=ga-16|0;ga=g;J[7396]=J[7396]+1;if(J[a+4>>2]&2){d=J[b+192>>2];i=Q(ia[J[J[d>>2]+20>>2]](d,N[6778]));N[g+12>>2]=i;d=J[c+192>>2];j=Q(ia[J[J[d>>2]+20>>2]](d,N[6778]));N[g+8>>2]=j;d=i<j?g+12|0:g+8|0}else{d=27112}o=N[d>>2];i=N[c+184>>2];j=N[b+184>>2];e=J[a+68>>2];f=J[e+8>>2];a:{b:{if(f){d=J[e+12>>2];h=J[d>>2];J[e+8>>2]=f-1;J[e+12>>2]=h;break b}d=0;if(K[a+4|0]&4){break a}J[8369]=J[8369]+1;d=ia[J[6782]](772,16)|0}J[d+124>>2]=0;J[d+128>>2]=0;H[d+120|0]=0;J[d+116>>2]=0;J[d>>2]=1025;J[d+308>>2]=0;J[d+312>>2]=0;H[d+304|0]=0;J[d+300>>2]=0;J[d+492>>2]=0;J[d+496>>2]=0;H[d+488|0]=0;J[d+484>>2]=0;J[d+132>>2]=0;J[d+136>>2]=0;J[d+140>>2]=0;J[d+144>>2]=0;J[d+148>>2]=0;J[d+152>>2]=0;J[d+316>>2]=0;J[d+320>>2]=0;J[d+324>>2]=0;J[d+328>>2]=0;J[d+332>>2]=0;J[d+336>>2]=0;J[d+500>>2]=0;J[d+504>>2]=0;J[d+508>>2]=0;J[d+512>>2]=0;J[d+516>>2]=0;J[d+520>>2]=0;H[d+672|0]=0;J[d+668>>2]=0;J[d+676>>2]=0;J[d+680>>2]=0;J[d+684>>2]=0;J[d+688>>2]=0;J[d+692>>2]=0;J[d+696>>2]=0;J[d+700>>2]=0;J[d+704>>2]=0;J[d+740>>2]=b;J[d+744>>2]=c;J[d+748>>2]=0;N[d+752>>2]=o;N[d+756>>2]=i>j?j:i;e=J[a+12>>2];J[d+768>>2]=e;c:{if(J[a+16>>2]!=(e|0)){break c}h=e?e<<1:1;if((h|0)<=(e|0)){break c}d:{if(!h){c=0;break d}J[8369]=J[8369]+1;c=ia[J[6782]](h<<2,16)|0;e=J[a+12>>2]}e:{if((e|0)<=0){break e}b=0;if(e-1>>>0>=3){l=e&-4;while(1){f=b<<2;J[f+c>>2]=J[f+J[a+20>>2]>>2];k=f|4;J[k+c>>2]=J[k+J[a+20>>2]>>2];k=f|8;J[k+c>>2]=J[k+J[a+20>>2]>>2];f=f|12;J[f+c>>2]=J[f+J[a+20>>2]>>2];b=b+4|0;m=m+4|0;if((l|0)!=(m|0)){continue}break}}f=e&3;if(!f){break e}while(1){l=b<<2;J[l+c>>2]=J[l+J[a+20>>2]>>2];b=b+1|0;n=n+1|0;if((f|0)!=(n|0)){continue}break}}b=J[a+20>>2];if(!(!b|!K[a+24|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}e=J[a+12>>2]}J[a+20>>2]=c;H[a+24|0]=1;J[a+16>>2]=h}J[J[a+20>>2]+(e<<2)>>2]=d;J[a+12>>2]=e+1}ga=g+16|0;return d|0}function Do(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=0,h=0;e=ga-272|0;ga=e;J[e+268>>2]=a;J[e+264>>2]=b;J[e+260>>2]=c;J[e+256>>2]=d;d=J[e+268>>2];a=e+224|0;Ma(a,J[e+260>>2],J[e+264>>2]);N[e+220>>2]=.5;Ia(e+240|0,a,e+220|0);a=e+184|0;va(a,J[e+260>>2],J[e+264>>2]);N[e+180>>2]=.5;Ia(e+200|0,a,e+180|0);N[e+148>>2]=1;N[e+144>>2]=1;N[e+140>>2]=1;na(e+152|0,e+148|0,e+144|0,e+140|0);a=ga-16|0;J[a+12>>2]=e+120;J[a+12>>2]=e+104;J[e+176>>2]=0;while(1){if(J[e+176>>2]<4){J[e+172>>2]=0;while(1){if(J[e+172>>2]<3){a=ga-16|0;b=e+152|0;J[a+12>>2]=b;f=N[J[a+12>>2]>>2];c=e+240|0;J[a+12>>2]=c;N[e+84>>2]=f*N[J[a+12>>2]>>2];J[a+12>>2]=b;f=N[J[a+12>>2]+4>>2];J[a+12>>2]=c;N[e+80>>2]=f*N[J[a+12>>2]+4>>2];J[a+12>>2]=b;f=N[J[a+12>>2]+8>>2];J[a+12>>2]=c;N[e+76>>2]=f*N[J[a+12>>2]+8>>2];na(e+88|0,e+84|0,e+80|0,e+76|0);g=J[e+92>>2];h=e+120|0;a=h;J[a>>2]=J[e+88>>2];J[a+4>>2]=g;g=J[e+100>>2];J[a+8>>2]=J[e+96>>2];J[a+12>>2]=g;g=e+200|0;jb(a,g);J[e+72>>2]=J[e+172>>2]%3;a=ga-16|0;J[a+12>>2]=b;a=J[a+12>>2]+(J[e+72>>2]<<2)|0;N[a>>2]=Q(-0)-N[a>>2];a=ga-16|0;J[a+12>>2]=b;f=N[J[a+12>>2]>>2];a=ga-16|0;J[a+12>>2]=c;N[e+52>>2]=f*N[J[a+12>>2]>>2];a=ga-16|0;J[a+12>>2]=b;f=N[J[a+12>>2]+4>>2];a=ga-16|0;J[a+12>>2]=c;N[e+48>>2]=f*N[J[a+12>>2]+4>>2];a=ga-16|0;J[a+12>>2]=b;f=N[J[a+12>>2]+8>>2];a=ga-16|0;J[a+12>>2]=c;N[e+44>>2]=f*N[J[a+12>>2]+8>>2];na(e+56|0,e+52|0,e+48|0,e+44|0);b=J[e+60>>2];a=e+104|0;J[a>>2]=J[e+56>>2];J[a+4>>2]=b;b=J[e+68>>2];J[a+8>>2]=J[e+64>>2];J[a+12>>2]=b;jb(a,g);ia[J[J[d>>2]+8>>2]](d,h,a,J[e+256>>2]);J[e+172>>2]=J[e+172>>2]+1;continue}break}N[e+20>>2]=-1;N[e+16>>2]=-1;N[e+12>>2]=-1;na(e+24|0,e+20|0,e+16|0,e+12|0);a=J[e+28>>2];J[e+152>>2]=J[e+24>>2];J[e+156>>2]=a;a=J[e+36>>2];J[e+160>>2]=J[e+32>>2];J[e+164>>2]=a;if(J[e+176>>2]<3){a=ga-16|0;J[a+12>>2]=e+152;a=J[a+12>>2]+(J[e+176>>2]<<2)|0;N[a>>2]=Q(-0)-N[a>>2]}J[e+176>>2]=J[e+176>>2]+1;continue}break}ga=e+272|0}function Is(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;c=ra(1128);b=J[f+20>>2];a=J[f+16>>2];e=H[f+15|0]&1;xb(c,7,J[f+28>>2],J[f+24>>2]);H[c+48|0]=0;J[c>>2]=20024;d=J[b+12>>2];J[c+60>>2]=J[b+8>>2];J[c+64>>2]=d;d=J[b+4>>2];J[c+52>>2]=J[b>>2];J[c+56>>2]=d;d=J[b+28>>2];J[c+76>>2]=J[b+24>>2];J[c+80>>2]=d;d=J[b+20>>2];J[c+68>>2]=J[b+16>>2];J[c+72>>2]=d;d=J[b+44>>2];J[c+92>>2]=J[b+40>>2];J[c+96>>2]=d;d=J[b+36>>2];J[c+84>>2]=J[b+32>>2];J[c+88>>2]=d;d=J[b+60>>2];J[c+108>>2]=J[b+56>>2];J[c+112>>2]=d;d=J[b+52>>2];J[c+100>>2]=J[b+48>>2];J[c+104>>2]=d;b=J[a+12>>2];J[c+124>>2]=J[a+8>>2];J[c+128>>2]=b;b=J[a+4>>2];J[c+116>>2]=J[a>>2];J[c+120>>2]=b;b=J[a+28>>2];J[c+140>>2]=J[a+24>>2];J[c+144>>2]=b;b=J[a+20>>2];J[c+132>>2]=J[a+16>>2];J[c+136>>2]=b;b=J[a+44>>2];J[c+156>>2]=J[a+40>>2];J[c+160>>2]=b;b=J[a+36>>2];J[c+148>>2]=J[a+32>>2];J[c+152>>2]=b;b=J[a+60>>2];J[c+172>>2]=J[a+56>>2];J[c+176>>2]=b;b=J[a+52>>2];J[c+164>>2]=J[a+48>>2];J[c+168>>2]=b;J[c+288>>2]=1065353216;J[c+292>>2]=0;J[c+280>>2]=1065353216;J[c+284>>2]=1060320051;J[c+272>>2]=1065353216;J[c+276>>2]=0;J[c+264>>2]=1065353216;J[c+268>>2]=1060320051;J[c+224>>2]=0;J[c+228>>2]=0;J[c+216>>2]=1065353216;J[c+220>>2]=1060320051;J[c+208>>2]=0;J[c+212>>2]=0;J[c+200>>2]=1065353216;J[c+204>>2]=1060320051;J[c+192>>2]=0;J[c+196>>2]=0;J[c+184>>2]=1065353216;J[c+188>>2]=-1082130432;H[c+180|0]=e;J[c+1124>>2]=0;J[c+1116>>2]=0;J[c+1120>>2]=0;H[c+1096|0]=0;J[c+256>>2]=1065353216;J[c+260>>2]=0;J[c+248>>2]=1065353216;J[c+252>>2]=1060320051;J[c+240>>2]=1065353216;J[c+244>>2]=0;J[c+232>>2]=1065353216;J[c+236>>2]=1060320051;J[c+300>>2]=0;a=c+1105|0;H[a|0]=0;H[a+1|0]=0;H[a+2|0]=0;H[a+3|0]=0;H[a+4|0]=0;H[a+5|0]=0;H[a+6|0]=0;H[a+7|0]=0;J[c+1100>>2]=0;J[c+1104>>2]=0;H[c+49|0]=1;vg(c,J[c+28>>2]+4|0,J[c+32>>2]+4|0);ga=f+32|0;return c|0}function Lk(a,b,c,d){H[a+76|0]=1;J[a+72>>2]=0;J[a+68>>2]=c;J[a+28>>2]=0;J[a+32>>2]=0;J[a+24>>2]=b;H[a+20|0]=1;J[a>>2]=6716;J[a+16>>2]=0;J[a- -64>>2]=0;H[a+60|0]=0;J[a+56>>2]=1025758986;H[a+54|0]=1;I[a+52>>1]=256;J[a+48>>2]=0;H[a+44|0]=1;J[a+36>>2]=1;J[a+40>>2]=1065353216;J[a+8>>2]=0;J[a+12>>2]=0;J[a+100>>2]=1050253722;J[a+104>>2]=1015580809;J[a+92>>2]=1058642330;J[a+96>>2]=1065353216;J[a+88>>2]=0;J[a+80>>2]=0;J[a+84>>2]=0;J[a+124>>2]=1045220557;J[a+128>>2]=1061997773;J[a+108>>2]=0;J[a+112>>2]=10;J[a+168>>2]=1120403456;J[a+172>>2]=1900671690;J[a+164>>2]=128;J[a+156>>2]=260;J[a+160>>2]=2;J[a+148>>2]=0;J[a+152>>2]=1062836634;J[a+140>>2]=-1121724662;J[a+144>>2]=1036831949;J[a+132>>2]=0;J[a+136>>2]=1;J[a+116>>2]=1101004800;J[a+120>>2]=1065353216;H[a+192|0]=1;J[a>>2]=20292;J[a+188>>2]=0;J[a+180>>2]=0;J[a+184>>2]=0;H[a+224|0]=1;J[a+200>>2]=d;J[a+196>>2]=0;J[a+212>>2]=0;J[a+216>>2]=0;J[a+220>>2]=0;H[a+244|0]=1;I[a+274>>1]=0;J[a+240>>2]=0;J[a+248>>2]=0;J[a+252>>2]=-1054867456;J[a+232>>2]=0;J[a+236>>2]=0;J[a+256>>2]=0;J[a+260>>2]=0;J[a+264>>2]=0;J[a+268>>2]=0;H[a+292|0]=1;J[a+296>>2]=0;J[a+288>>2]=0;J[a+280>>2]=0;J[a+284>>2]=0;H[a+320|0]=1;H[a+300|0]=1;J[a+316>>2]=0;J[a+308>>2]=0;J[a+312>>2]=0;if(d){c=0}else{J[8369]=J[8369]+1;c=ia[J[6782]](196,16)|0;Wk(c);J[a+200>>2]=c;c=1}H[a+273|0]=c;J[8369]=J[8369]+1;c=ia[J[6782]](68,16)|0;J[c>>2]=20232;J[c+16>>2]=0;H[c+20|0]=1;J[c+8>>2]=0;J[c+12>>2]=0;J[c+36>>2]=0;H[c+40|0]=1;H[c+60|0]=1;J[c+28>>2]=0;J[c+32>>2]=0;J[c+56>>2]=0;H[c+64|0]=1;J[c+48>>2]=0;J[c+52>>2]=0;H[a+272|0]=1;J[a+204>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](88,16)|0;d=J[a+200>>2];H[c+44|0]=1;J[c+24>>2]=b;J[c+20>>2]=0;J[c+12>>2]=0;J[c+16>>2]=0;J[c+8>>2]=d;J[c+4>>2]=0;J[c>>2]=20548;J[c+40>>2]=0;H[c+64|0]=1;J[c+32>>2]=0;J[c+36>>2]=0;J[c+60>>2]=0;H[c+84|0]=1;J[c+52>>2]=0;J[c+56>>2]=0;J[c+80>>2]=0;J[c+72>>2]=0;J[c+76>>2]=0;J[a+196>>2]=c}function pz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=0,x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0);a=J[a+16>>2];e=N[a+900>>2];i=N[a+896>>2];j=N[a+908>>2];k=N[a+912>>2];n=N[a+916>>2];s=N[a+892>>2];f=N[b+52>>2];o=N[b+20>>2];t=N[b+24>>2];g=N[b+56>>2];p=N[b+36>>2];x=N[b+40>>2];h=N[b+48>>2];y=N[b+8>>2];z=N[b>>2];A=N[b+4>>2];q=N[b+16>>2];r=N[b+32>>2];b=ga-128|0;J[b+124>>2]=0;J[b+108>>2]=0;J[b+92>>2]=0;J[b+76>>2]=0;J[b+60>>2]=0;J[b+44>>2]=0;J[b+28>>2]=0;l=Q(n*x);B=Q(s*r);u=Q(k*p);C=Q(B+u);N[b+120>>2]=g+Q(l+C);m=Q(n*t);D=Q(s*q);v=Q(k*o);E=Q(D+v);N[b+116>>2]=f+Q(m+E);r=Q(j*r);u=Q(r+u);N[b+104>>2]=g+Q(l+u);q=Q(j*q);v=Q(q+v);N[b+100>>2]=f+Q(m+v);p=Q(i*p);r=Q(r+p);N[b+88>>2]=g+Q(l+r);o=Q(i*o);q=Q(q+o);N[b+84>>2]=f+Q(m+q);p=Q(B+p);N[b+72>>2]=g+Q(l+p);o=Q(D+o);N[b+68>>2]=f+Q(m+o);l=Q(e*x);N[b+56>>2]=g+Q(l+C);m=Q(e*t);N[b+52>>2]=f+Q(m+E);N[b+40>>2]=g+Q(l+u);N[b+36>>2]=f+Q(m+v);N[b+24>>2]=g+Q(l+r);N[b+20>>2]=f+Q(m+q);J[b+12>>2]=0;n=Q(n*y);s=Q(s*z);k=Q(k*A);t=Q(s+k);N[b+112>>2]=h+Q(n+t);j=Q(j*z);k=Q(j+k);N[b+96>>2]=h+Q(n+k);i=Q(i*A);j=Q(j+i);N[b+80>>2]=h+Q(n+j);i=Q(s+i);N[b+64>>2]=h+Q(n+i);e=Q(e*y);N[b+48>>2]=h+Q(e+t);N[b+32>>2]=h+Q(e+k);N[b+16>>2]=h+Q(e+j);N[b+8>>2]=g+Q(l+p);N[b+4>>2]=f+Q(m+o);N[b>>2]=h+Q(e+i);a=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=a;a=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=a;a=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=a;a=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=a;a=1;while(1){w=b+(a<<4)|0;f=N[w>>2];if(f<N[c>>2]){N[c>>2]=f}g=N[w+4>>2];if(g<N[c+4>>2]){N[c+4>>2]=g}h=N[w+8>>2];if(h<N[c+8>>2]){N[c+8>>2]=h}e=N[w+12>>2];if(e<N[c+12>>2]){N[c+12>>2]=e}if(f>N[d>>2]){N[d>>2]=f}if(g>N[d+4>>2]){N[d+4>>2]=g}if(h>N[d+8>>2]){N[d+8>>2]=h}if(e>N[d+12>>2]){N[d+12>>2]=e}a=a+1|0;if((a|0)!=8){continue}break}}function JG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0);a:{f=K[a+8|0];t=f?b:c;g=J[t+4>>2];if(J[g+4>>2]-21>>>0>8){break a}i=f?c:b;if(J[J[i+4>>2]+4>>2]>19){break a}h=Q(ia[J[J[g>>2]+48>>2]](g));J[e+4>>2]=J[a+76>>2];c=ga+-64|0;ga=c;b=a+12|0;N[b+56>>2]=h;J[b+52>>2]=d;J[b+8>>2]=t;J[b+4>>2]=i;J[b+44>>2]=e;d=J[t+12>>2];u=N[d+52>>2];v=N[d+56>>2];f=J[i+12>>2];w=N[f+52>>2];x=N[f+56>>2];j=N[d+20>>2];k=N[d+36>>2];y=N[f+20>>2];z=N[f+36>>2];A=N[f+24>>2];l=N[d+24>>2];B=N[f+40>>2];m=N[d+40>>2];C=N[f+32>>2];n=N[d+32>>2];D=N[f>>2];o=N[d>>2];E=N[f+16>>2];p=N[d+16>>2];q=N[d+48>>2];F=N[f+48>>2];r=N[d+4>>2];G=N[f+4>>2];H=N[f+8>>2];s=N[d+8>>2];J[c+60>>2]=0;J[c+44>>2]=0;J[c+28>>2]=0;N[c+40>>2]=Q(B*m)+Q(Q(H*s)+Q(l*A));N[c+36>>2]=Q(z*m)+Q(Q(G*s)+Q(l*y));N[c+24>>2]=Q(B*k)+Q(Q(H*r)+Q(j*A));N[c+20>>2]=Q(z*k)+Q(Q(G*r)+Q(j*y));q=Q(-q);N[c+56>>2]=Q(Q(Q(s*q)-Q(l*u))-Q(m*v))+Q(Q(x*m)+Q(Q(F*s)+Q(l*w)));N[c+52>>2]=Q(Q(Q(r*q)-Q(j*u))-Q(k*v))+Q(Q(x*k)+Q(Q(F*r)+Q(j*w)));J[c+12>>2]=0;N[c>>2]=Q(C*n)+Q(Q(D*o)+Q(p*E));N[c+32>>2]=Q(C*m)+Q(Q(D*s)+Q(l*E));N[c+16>>2]=Q(C*k)+Q(Q(D*r)+Q(j*E));N[c+8>>2]=Q(B*n)+Q(Q(H*o)+Q(p*A));N[c+4>>2]=Q(z*n)+Q(Q(G*o)+Q(p*y));N[c+48>>2]=Q(Q(Q(o*q)-Q(p*u))-Q(n*v))+Q(Q(x*n)+Q(Q(F*o)+Q(p*w)));d=J[i+4>>2];ia[J[J[d>>2]+8>>2]](d,c,b+12|0,b+28|0);N[b+28>>2]=N[b+28>>2]+h;N[b+32>>2]=N[b+32>>2]+h;N[b+36>>2]=N[b+36>>2]+h;N[b+12>>2]=N[b+12>>2]-h;N[b+16>>2]=N[b+16>>2]-h;N[b+20>>2]=N[b+20>>2]-h;ga=c- -64|0;c=J[i+8>>2];d=J[a+76>>2];J[d+744>>2]=J[t+8>>2];J[d+740>>2]=c;ia[J[J[g>>2]+64>>2]](g,b,a+24|0,a+40|0);b=J[e+4>>2];if(J[b+748>>2]){d=J[b+740>>2];f=J[J[e+8>>2]+8>>2];c=(d|0)==(f|0);g=b;b=J[J[e+12>>2]+8>>2];ab(g,(c?d:b)+4|0,(c?b:f)+4|0)}J[a+16>>2]=0;J[a+20>>2]=0}}function ik(a,b){var c=0,d=Q(0),e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=0,v=Q(0),w=Q(0),x=0,y=0,z=0,A=Q(0),B=0,C=Q(0),D=Q(0),E=Q(0),F=0,G=Q(0);ya(2589);j=J[a+712>>2];a:{if((j|0)<=0){break a}J[8369]=J[8369]+1;c=j<<4;i=ia[J[6782]](c,16)|0;qa(i,0,c);c=J[a+712>>2];if((c|0)<=0){break a}J[8369]=J[8369]+1;c=c<<2;g=ia[J[6782]](c,16)|0;qa(g,0,c)}k=J[a+1112>>2];b:{if(b){if((k|0)<=0){break b}h=J[a+1120>>2];while(1){c=J[h+(e<<2)>>2];f=J[c+312>>2];if(f){d=Q(Q(1)/Q(f|0));N[c+276>>2]=d*N[c+276>>2];N[c+280>>2]=d*N[c+280>>2];N[c+284>>2]=d*N[c+284>>2];N[c+292>>2]=d*N[c+292>>2];N[c+296>>2]=d*N[c+296>>2];N[c+300>>2]=d*N[c+300>>2]}e=e+1|0;if((k|0)!=(e|0)){continue}break}}if((k|0)<=0){break b}x=J[a+720>>2];y=J[a+1120>>2];h=0;z=b?312:308;while(1){c=J[(h<<2)+y>>2];c:{if(J[c+z>>2]<=0){break c}p=J[c+24>>2];if((p|0)<=0){break c}d=N[a+452>>2];e=b?c+276|0:c+244|0;n=Q(d*N[e+8>>2]);o=Q(d*N[e+4>>2]);A=Q(N[e>>2]*d);B=J[c+32>>2];e=b?c+292|0:c+260|0;q=Q(d*N[e+4>>2]);C=Q(-q);r=Q(d*N[e>>2]);D=Q(-r);s=Q(d*N[e+8>>2]);E=Q(-s);F=J[c+12>>2];f=0;while(1){t=f<<2;l=J[t+B>>2];m=N[l+8>>2];G=N[c+228>>2];u=(l-x|0)/104|0;e=(u<<4)+i|0;d=N[F+t>>2];v=Q(N[l+16>>2]-N[c+236>>2]);w=Q(N[l+12>>2]-N[c+232>>2]);N[e>>2]=N[e>>2]+Q(d*Q(A+Q(Q(q*v)+Q(w*E))));m=Q(m-G);N[e+4>>2]=N[e+4>>2]+Q(d*Q(o+Q(Q(s*m)+Q(v*D))));N[e+8>>2]=Q(d*Q(n+Q(Q(r*w)+Q(m*C))))+N[e+8>>2];e=(u<<2)+g|0;N[e>>2]=d+N[e>>2];f=f+1|0;if((p|0)!=(f|0)){continue}break}}h=h+1|0;if((k|0)!=(h|0)){continue}break}}d:{e:{if((j|0)>0){e=J[a+720>>2];a=0;while(1){d=N[(a<<2)+g>>2];if(d>Q(0)){c=(a<<4)+i|0;n=N[c+8>>2];o=N[c+4>>2];b=e+P(a,104)|0;d=Q(Q(1)/d);N[b+8>>2]=Q(d*N[c>>2])+N[b+8>>2];N[b+12>>2]=Q(d*o)+N[b+12>>2];N[b+16>>2]=Q(d*n)+N[b+16>>2]}a=a+1|0;if((j|0)!=(a|0)){continue}break}break e}if(!g){break d}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}if(i){J[8370]=J[8370]+1;ia[J[6783]](i)}xa()}function an(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:{k=J[a+36>>2];b=J[a+12>>2];if((k|0)>=(b|0)){break a}b:{if((b|0)<=J[a+40>>2]){c=J[a+44>>2];break b}if(b){J[8369]=J[8369]+1;c=ia[J[6782]](b<<2,16)|0;e=J[a+36>>2]}else{e=k}g=J[a+44>>2];c:{if((e|0)>0){if(e-1>>>0>=3){h=e&-4;while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];i=d|4;J[i+c>>2]=J[g+i>>2];i=d|8;J[i+c>>2]=J[g+i>>2];d=d|12;J[d+c>>2]=J[d+g>>2];f=f+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}e=e&3;if(!e){break c}while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break c}if(g){break c}J[a+44>>2]=c;J[a+40>>2]=b;H[a+48|0]=1;break b}if(g?K[a+48|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+44>>2]=c;H[a+48|0]=1;J[a+40>>2]=b}qa((k<<2)+c|0,0,b-k<<2);J[a+36>>2]=b;i=b<<2;g=J[a+56>>2];if((g|0)<(b|0)){d:{if((b|0)<=J[a+60>>2]){c=J[a- -64>>2];break d}e:{if(!b){c=0;e=g;break e}J[8369]=J[8369]+1;c=ia[J[6782]](i,16)|0;e=J[a+56>>2]}d=J[a- -64>>2];f:{if((e|0)>0){l=0;f=0;if(e-1>>>0>=3){n=e&-4;j=0;while(1){h=f<<2;J[h+c>>2]=J[d+h>>2];m=h|4;J[m+c>>2]=J[d+m>>2];m=h|8;J[m+c>>2]=J[d+m>>2];h=h|12;J[h+c>>2]=J[d+h>>2];f=f+4|0;j=j+4|0;if((n|0)!=(j|0)){continue}break}}e=e&3;if(!e){break f}while(1){j=f<<2;J[j+c>>2]=J[d+j>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break f}if(d){break f}J[a+64>>2]=c;J[a+60>>2]=b;H[a+68|0]=1;break d}if(d?K[a+68|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+64>>2]=c;H[a+68|0]=1;J[a+60>>2]=b}qa((g<<2)+c|0,0,b-g<<2)}J[a+56>>2]=b;if((b|0)>0){qa(J[a+44>>2],255,i);qa(J[a- -64>>2],255,i)}if((k|0)<=0){break a}e=J[a- -64>>2];g=J[a+16>>2];c=J[a+44>>2];f=0;while(1){b=g+(f<<4)|0;b=J[J[b+4>>2]+12>>2]<<16|J[J[b>>2]+12>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;b=c+((J[a+12>>2]-1&(b>>16^b))<<2)|0;J[e+(f<<2)>>2]=J[b>>2];J[b>>2]=f;f=f+1|0;if((k|0)!=(f|0)){continue}break}}}function VA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=0,x=Q(0),y=Q(0),z=Q(0);e=J[a+28>>2];d=J[a+32>>2];c=J[b+8>>2];J[c>>2]=1065353216;p=J[b+24>>2];l=p<<2;v=l+4|0;J[c+v>>2]=1065353216;q=p<<3;w=q+8|0;J[c+w>>2]=1065353216;m=N[e+24>>2];n=N[e+28>>2];o=N[e+40>>2];g=N[a+304>>2];j=N[e+44>>2];f=N[a+308>>2];k=N[e+12>>2];r=N[e+4>>2];s=N[e+8>>2];t=N[e+20>>2];u=N[e+36>>2];i=N[a+300>>2];c=J[b+12>>2];J[c+12>>2]=0;J[c>>2]=0;o=Q(Q(j*f)+Q(Q(u*i)+Q(g*o)));N[c+4>>2]=o;m=Q(Q(n*f)+Q(Q(t*i)+Q(g*m)));N[c+8>>2]=-m;h=c+l|0;J[h+12>>2]=0;n=Q(Q(k*f)+Q(Q(r*i)+Q(s*g)));N[h+8>>2]=n;J[h+4>>2]=0;N[h>>2]=-o;c=c+q|0;J[c+8>>2]=0;J[c+12>>2]=0;N[c+4>>2]=-n;N[c>>2]=m;c=J[b+16>>2];J[c>>2]=-1082130432;J[c+v>>2]=-1082130432;J[c+w>>2]=-1082130432;k=N[d+40>>2];r=N[d+44>>2];j=N[d+24>>2];g=N[a+320>>2];s=N[d+28>>2];f=N[a+324>>2];t=N[d+12>>2];u=N[d+4>>2];x=N[d+8>>2];y=N[d+36>>2];z=N[d+20>>2];i=N[a+316>>2];c=J[b+20>>2];J[c+12>>2]=0;J[c>>2]=0;j=Q(Q(s*f)+Q(Q(z*i)+Q(g*j)));N[c+8>>2]=j;k=Q(Q(r*f)+Q(Q(y*i)+Q(g*k)));N[c+4>>2]=-k;h=c+l|0;J[h+12>>2]=0;g=Q(Q(t*f)+Q(Q(u*i)+Q(x*g)));N[h+8>>2]=-g;J[h+4>>2]=0;N[h>>2]=k;c=c+q|0;J[c+8>>2]=0;J[c+12>>2]=0;N[c+4>>2]=g;N[c>>2]=-j;c=J[b+28>>2];h=J[a+332>>2];f=Q(N[(h&1?a+336|0:b+4|0)>>2]*N[b>>2]);N[c>>2]=f*Q(Q(Q(g+N[d+52>>2])-n)-N[e+52>>2]);N[c+l>>2]=f*Q(Q(Q(j+N[d+56>>2])-m)-N[e+56>>2]);N[c+q>>2]=f*Q(Q(Q(k+N[d+60>>2])-o)-N[e+60>>2]);e=p<<1;if(h&2){d=J[b+32>>2];N[d>>2]=N[a+340>>2];N[d+l>>2]=N[a+340>>2];N[d+(e<<2)>>2]=N[a+340>>2]}f=N[a+356>>2];a:{if(!(f>Q(0))){break a}i=Q(-f);N[J[b+36>>2]>>2]=i;N[J[b+40>>2]>>2]=f;g=N[a+356>>2];if(g>Q(0)){d=p<<2;N[d+J[b+36>>2]>>2]=i;N[d+J[b+40>>2]>>2]=f;g=N[a+356>>2]}if(!(g>Q(0))){break a}e=e<<2;N[e+J[b+36>>2]>>2]=i;N[e+J[b+40>>2]>>2]=f}N[b+52>>2]=N[a+352>>2]}function zC(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0);k=ga-16|0;ga=k;ia[J[J[a>>2]+112>>2]](a);J[c+8>>2]=0;J[c+12>>2]=0;J[c>>2]=0;J[c+4>>2]=0;m=ia[J[J[a>>2]+88>>2]](a)|0;if(m){p=Q(b/Q(m|0));while(1){m=m-1|0;e=J[J[a+184>>2]+(m<<2)>>2];ia[J[J[e>>2]+32>>2]](e,p,k);a:{if(ia[J[J[a>>2]+92>>2]](a)|0){e=J[a+164>>2]+(m<<6)|0;b=N[e+8>>2];f=N[k+8>>2];j=Q(b*Q(b*f));b=N[e>>2];g=N[k>>2];d=Q(b*Q(b*g));b=N[e+4>>2];i=N[k+4>>2];d=Q(j+Q(d+Q(b*Q(b*i))));b=N[e+52>>2];l=Q(b*b);b=N[e+56>>2];j=Q(b*b);b=Q(d*Q(l+j));h=N[e+40>>2];d=Q(h*Q(f*h));h=N[e+32>>2];n=Q(h*Q(g*h));h=N[e+36>>2];d=Q(d+Q(n+Q(h*Q(i*h))));h=N[e+48>>2];h=Q(h*h);l=Q(d*Q(h+l));d=N[e+24>>2];d=Q(d*Q(f*d));f=N[e+16>>2];g=Q(f*Q(g*f));f=N[e+20>>2];f=Q(Q(d+Q(g+Q(f*Q(i*f))))*Q(h+j));break a}b:{if(H[29512]&1){l=N[7375];f=N[7374];b=N[7376];break b}if(!(H[29564]&1)){J[7380]=0;J[7381]=0;J[7379]=1065353216;H[29564]=1;J[7382]=0;J[7383]=0;J[7385]=0;J[7386]=0;J[7384]=1065353216;J[7387]=0;J[7388]=0;J[7389]=1065353216;J[7390]=0}J[7374]=0;J[7375]=0;H[29512]=1;e=J[7380];J[7362]=J[7379];J[7363]=e;e=J[7384];J[7366]=J[7383];J[7367]=e;e=J[7388];J[7370]=J[7387];J[7371]=e;J[7376]=0;J[7377]=0;e=J[7382];J[7364]=J[7381];J[7365]=e;e=J[7386];J[7368]=J[7385];J[7369]=e;e=J[7390];J[7372]=J[7389];J[7373]=e;l=Q(0);f=Q(0);b=Q(0)}g=N[7372];d=g;g=N[k+8>>2];i=N[7370];n=i;i=N[k>>2];j=N[7371];o=j;j=N[k+4>>2];f=Q(f*f);h=Q(l*l);l=Q(Q(Q(d*Q(d*g))+Q(Q(n*Q(n*i))+Q(o*Q(o*j))))*Q(f+h));d=N[7368];n=Q(d*Q(g*d));d=N[7366];o=Q(d*Q(i*d));d=N[7367];b=Q(b*b);f=Q(Q(n+Q(o+Q(d*Q(j*d))))*Q(f+b));d=N[7364];d=Q(d*Q(d*g));g=N[7362];i=Q(g*Q(g*i));g=N[7363];b=Q(Q(d+Q(i+Q(g*Q(g*j))))*Q(h+b))}J[c+12>>2]=0;N[c+8>>2]=l+N[c+8>>2];N[c+4>>2]=N[c+4>>2]+f;N[c>>2]=N[c>>2]+b;if(m){continue}break}}ia[J[J[a>>2]+116>>2]](a);ga=k+16|0}function dh(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:{k=J[a+32>>2];b=J[a+12>>2];if((k|0)>=(b|0)){break a}b:{if((b|0)<=J[a+36>>2]){c=J[a+40>>2];break b}if(b){J[8369]=J[8369]+1;c=ia[J[6782]](b<<2,16)|0;e=J[a+32>>2]}else{e=k}g=J[a+40>>2];c:{if((e|0)>0){if(e-1>>>0>=3){h=e&-4;while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];i=d|4;J[i+c>>2]=J[g+i>>2];i=d|8;J[i+c>>2]=J[g+i>>2];d=d|12;J[d+c>>2]=J[d+g>>2];f=f+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}e=e&3;if(!e){break c}while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break c}if(g){break c}J[a+40>>2]=c;J[a+36>>2]=b;H[a+44|0]=1;break b}if(g?K[a+44|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+40>>2]=c;H[a+44|0]=1;J[a+36>>2]=b}qa((k<<2)+c|0,0,b-k<<2);J[a+32>>2]=b;i=b<<2;g=J[a+52>>2];if((g|0)<(b|0)){d:{if((b|0)<=J[a+56>>2]){c=J[a+60>>2];break d}e:{if(!b){c=0;e=g;break e}J[8369]=J[8369]+1;c=ia[J[6782]](i,16)|0;e=J[a+52>>2]}d=J[a+60>>2];f:{if((e|0)>0){l=0;f=0;if(e-1>>>0>=3){n=e&-4;j=0;while(1){h=f<<2;J[h+c>>2]=J[d+h>>2];m=h|4;J[m+c>>2]=J[d+m>>2];m=h|8;J[m+c>>2]=J[d+m>>2];h=h|12;J[h+c>>2]=J[d+h>>2];f=f+4|0;j=j+4|0;if((n|0)!=(j|0)){continue}break}}e=e&3;if(!e){break f}while(1){j=f<<2;J[j+c>>2]=J[d+j>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break f}if(d){break f}J[a+60>>2]=c;J[a+56>>2]=b;H[a- -64|0]=1;break d}if(d?K[a- -64|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+60>>2]=c;H[a+64|0]=1;J[a+56>>2]=b}qa((g<<2)+c|0,0,b-g<<2)}J[a+52>>2]=b;if((b|0)>0){qa(J[a+40>>2],255,i);qa(J[a+60>>2],255,i)}if((k|0)<=0){break a}e=J[a+60>>2];g=J[a+16>>2];c=J[a+40>>2];f=0;while(1){b=g+P(f,12)|0;b=J[b+4>>2]<<16|J[b>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;b=c+((J[a+12>>2]-1&(b>>16^b))<<2)|0;J[e+(f<<2)>>2]=J[b>>2];J[b>>2]=f;f=f+1|0;if((k|0)!=(f|0)){continue}break}}}function Gg(a,b,c,d,e,f,g){var h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0);J[e>>2]=0;J[e+4>>2]=0;J[e+32>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;J[f+4>>2]=c;J[f>>2]=a;l=N[d+20>>2];m=N[d+36>>2];h=N[b+20>>2];i=N[b+36>>2];n=N[d+24>>2];o=N[b+24>>2];p=N[d+40>>2];q=N[b+40>>2];j=N[d+32>>2];r=N[d>>2];s=N[d+16>>2];t=N[d+4>>2];u=N[b+32>>2];v=N[b>>2];w=N[b+16>>2];x=N[b+4>>2];y=N[d+8>>2];k=N[b+8>>2];J[f+52>>2]=0;J[f+36>>2]=0;J[f+20>>2]=0;N[f+48>>2]=Q(p*q)+Q(Q(y*k)+Q(o*n));N[f+44>>2]=Q(p*i)+Q(Q(y*x)+Q(h*n));N[f+40>>2]=Q(p*u)+Q(Q(y*v)+Q(w*n));N[f+32>>2]=Q(m*q)+Q(Q(t*k)+Q(o*l));N[f+28>>2]=Q(m*i)+Q(Q(t*x)+Q(h*l));N[f+24>>2]=Q(m*u)+Q(Q(t*v)+Q(w*l));N[f+16>>2]=Q(j*q)+Q(Q(r*k)+Q(s*o));N[f+12>>2]=Q(j*i)+Q(Q(r*x)+Q(s*h));N[f+8>>2]=Q(j*u)+Q(Q(r*v)+Q(s*w));B=N[b+52>>2];C=N[d+52>>2];D=N[b+56>>2];z=N[d+56>>2];l=N[b+20>>2];m=N[b+36>>2];r=N[d+20>>2];s=N[d+36>>2];h=N[b+24>>2];t=N[d+24>>2];i=N[b+40>>2];u=N[d+40>>2];E=N[b+48>>2];A=N[d+48>>2];n=N[b+32>>2];o=N[b>>2];p=N[b+16>>2];q=N[b+4>>2];v=N[d+32>>2];w=N[d>>2];x=N[d+16>>2];y=N[d+4>>2];j=N[b+8>>2];k=N[d+8>>2];J[f+124>>2]=0;J[f+120>>2]=g?766:767;J[f+116>>2]=0;J[f+100>>2]=0;J[f+84>>2]=0;J[f+68>>2]=0;N[f+96>>2]=Q(i*u)+Q(Q(j*k)+Q(t*h));N[f+92>>2]=Q(i*s)+Q(Q(j*y)+Q(r*h));N[f+88>>2]=Q(i*v)+Q(Q(j*w)+Q(x*h));N[f+80>>2]=Q(m*u)+Q(Q(q*k)+Q(t*l));N[f+76>>2]=Q(m*s)+Q(Q(q*y)+Q(r*l));N[f+72>>2]=Q(m*v)+Q(Q(q*w)+Q(x*l));N[f- -64>>2]=Q(n*u)+Q(Q(o*k)+Q(p*t));N[f+60>>2]=Q(n*s)+Q(Q(o*y)+Q(p*r));N[f+56>>2]=Q(n*v)+Q(Q(o*w)+Q(p*x));k=i;i=Q(z-D);z=j;j=Q(A-E);A=h;h=Q(C-B);N[f+112>>2]=Q(k*i)+Q(Q(z*j)+Q(A*h));N[f+108>>2]=Q(m*i)+Q(Q(q*j)+Q(h*l));N[f+104>>2]=Q(n*i)+Q(Q(o*j)+Q(h*p))}function Ng(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0;J[a+4>>2]=1065353216;J[a+8>>2]=1065353216;J[a+48>>2]=0;H[a+36|0]=1;J[a+12>>2]=1065353216;J[a+16>>2]=0;J[a+32>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;H[a+100|0]=1;J[a>>2]=16776;J[a+96>>2]=0;H[a+120|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;J[a+116>>2]=0;H[a+140|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;J[a+136>>2]=0;H[a+160|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;J[a+168>>2]=0;H[a+164|0]=b;J[a+148>>2]=0;J[a+152>>2]=0;J[a+156>>2]=0;H[a+165|0]=c;J[8369]=J[8369]+1;f=ia[J[6782]](32,16)|0;h=J[a+24>>2];a:{if((h|0)<=0){break a}if((h|0)!=1){j=h&-2;while(1){e=d<<5;c=f+e|0;b=J[a+32>>2]+e|0;g=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=g;g=J[b+28>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=g;g=J[b+20>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=g;g=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=g;b=e|32;c=b+f|0;b=b+J[a+32>>2]|0;e=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=e;e=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=e;e=J[b+20>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=e;e=J[b+28>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=e;d=d+2|0;i=i+2|0;if((i|0)!=(j|0)){continue}break}}if(!(h&1)){break a}b=d<<5;c=b+f|0;b=b+J[a+32>>2]|0;d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;d=J[b+28>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=d;d=J[b+20>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=d;d=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=d}b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=f;H[a+36|0]=1;J[a+28>>2]=1;b=f+(J[a+24>>2]<<5)|0;J[b+24>>2]=2;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=16;J[b+8>>2]=12;J[b+12>>2]=0;J[b>>2]=0;J[b+4>>2]=0;J[a+24>>2]=J[a+24>>2]+1;c=K[a+164|0];f=J[(c?a+128|0:a+148|0)>>2];b=J[a+32>>2];J[b+24>>2]=c?2:3;J[b+4>>2]=0;d=12;J[b+8>>2]=c?12:6;J[b>>2]=(f|0)/3;b:{if(K[a+165|0]){d=16;a=J[a+88>>2];break b}a=J[a+108>>2]/3|0}J[b+20>>2]=d;J[b+16>>2]=0;J[b+12>>2]=a}function rE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=0;e=ga-80|0;ga=e;x=Q(ia[J[J[a>>2]+48>>2]](a));while(1){J[e+72>>2]=0;J[e+76>>2]=0;J[e+64>>2]=0;J[e+68>>2]=0;s=t<<2;y=s+(e- -64|0)|0;J[y>>2]=1065353216;i=N[b+32>>2];j=N[b>>2];k=N[b+16>>2];l=N[b+36>>2];m=N[b+4>>2];n=N[b+20>>2];f=N[b+40>>2];g=N[b+8>>2];h=N[b+24>>2];J[e+44>>2]=0;o=f;f=N[e+72>>2];p=g;g=N[e+64>>2];q=h;h=N[e+68>>2];N[e+40>>2]=Q(o*f)+Q(Q(p*g)+Q(q*h));N[e+36>>2]=Q(l*f)+Q(Q(m*g)+Q(h*n));N[e+32>>2]=Q(i*f)+Q(Q(j*g)+Q(k*h));r=e+32|0;ia[J[J[a>>2]+64>>2]](e+48|0,a,r);i=N[b+48>>2];j=N[b+8>>2];k=N[b>>2];l=N[b+4>>2];m=N[b+52>>2];n=N[b+24>>2];p=N[b+16>>2];q=N[b+20>>2];f=N[b+56>>2];g=N[b+40>>2];h=N[b+32>>2];u=N[b+36>>2];J[e+44>>2]=0;o=f;f=N[e+56>>2];v=Q(g*f);g=N[e+48>>2];w=Q(h*g);h=N[e+52>>2];N[e+40>>2]=o+Q(v+Q(w+Q(u*h)));N[e+36>>2]=m+Q(Q(f*n)+Q(Q(g*p)+Q(h*q)));N[e+32>>2]=i+Q(Q(f*j)+Q(Q(g*k)+Q(h*l)));r=s+r|0;N[d+s>>2]=x+N[r>>2];J[y>>2]=-1082130432;i=N[b+32>>2];j=N[b>>2];k=N[b+16>>2];l=N[b+36>>2];m=N[b+4>>2];n=N[b+20>>2];f=N[b+40>>2];g=N[b+8>>2];h=N[b+24>>2];J[e+12>>2]=0;o=f;f=N[e+72>>2];p=g;g=N[e+64>>2];q=h;h=N[e+68>>2];N[e+8>>2]=Q(o*f)+Q(Q(p*g)+Q(q*h));N[e+4>>2]=Q(l*f)+Q(Q(m*g)+Q(h*n));N[e>>2]=Q(i*f)+Q(Q(j*g)+Q(k*h));ia[J[J[a>>2]+64>>2]](e+16|0,a,e);i=N[b+48>>2];j=N[b+8>>2];k=N[b>>2];l=N[b+4>>2];m=N[b+52>>2];n=N[b+24>>2];p=N[b+16>>2];q=N[b+20>>2];f=N[b+56>>2];g=N[b+40>>2];h=N[b+32>>2];u=N[b+36>>2];J[e+44>>2]=0;o=f;f=N[e+24>>2];v=Q(g*f);g=N[e+16>>2];w=Q(h*g);h=N[e+20>>2];N[e+40>>2]=o+Q(v+Q(w+Q(u*h)));N[e+36>>2]=m+Q(Q(f*n)+Q(Q(g*p)+Q(h*q)));N[e+32>>2]=i+Q(Q(f*j)+Q(Q(g*k)+Q(h*l)));N[c+s>>2]=N[r>>2]-x;t=t+1|0;if((t|0)!=3){continue}break}ga=e+80|0}function km(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0;d=ga-80|0;ga=d;J[a+68>>2]=J[a+68>>2]+1;c=J[a+64>>2];if(c){Fc(c,J[(J[a+24>>2]+P(b,80)|0)+76>>2])}e=J[a+16>>2];h=P(b,80);g=J[a+24>>2];c=h+g|0;f=c+8|0;i=J[f+4>>2];J[d+8>>2]=J[f>>2];J[d+12>>2]=i;f=J[c+4>>2];J[d>>2]=J[c>>2];J[d+4>>2]=f;f=J[c+28>>2];J[d+24>>2]=J[c+24>>2];J[d+28>>2]=f;f=J[c+20>>2];J[d+16>>2]=J[c+16>>2];J[d+20>>2]=f;f=J[c+44>>2];J[d+40>>2]=J[c+40>>2];J[d+44>>2]=f;f=J[c+36>>2];J[d+32>>2]=J[c+32>>2];J[d+36>>2]=f;f=J[c+60>>2];J[d+56>>2]=J[c+56>>2];J[d+60>>2]=f;f=J[c+52>>2];J[d+48>>2]=J[c+48>>2];J[d+52>>2]=f;f=J[c+76>>2];J[d+72>>2]=J[c+72>>2];J[d+76>>2]=f;f=J[c+68>>2];J[d+64>>2]=J[c+64>>2];J[d+68>>2]=f;f=g;g=P(e,80)-80|0;e=f+g|0;f=J[e+4>>2];J[c>>2]=J[e>>2];J[c+4>>2]=f;f=J[e+12>>2];J[c+8>>2]=J[e+8>>2];J[c+12>>2]=f;f=J[e+20>>2];J[c+16>>2]=J[e+16>>2];J[c+20>>2]=f;f=J[e+28>>2];J[c+24>>2]=J[e+24>>2];J[c+28>>2]=f;f=J[e+44>>2];J[c+40>>2]=J[e+40>>2];J[c+44>>2]=f;f=J[e+36>>2];J[c+32>>2]=J[e+32>>2];J[c+36>>2]=f;f=J[e+52>>2];J[c+48>>2]=J[e+48>>2];J[c+52>>2]=f;f=J[e+60>>2];J[c+56>>2]=J[e+56>>2];J[c+60>>2]=f;f=J[e+76>>2];J[c+72>>2]=J[e+72>>2];J[c+76>>2]=f;f=J[e+68>>2];J[c+64>>2]=J[e+64>>2];J[c+68>>2]=f;e=J[d+4>>2];c=g+J[a+24>>2]|0;J[c>>2]=J[d>>2];J[c+4>>2]=e;e=J[d+12>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=e;e=J[d+20>>2];J[c+16>>2]=J[d+16>>2];J[c+20>>2]=e;e=J[d+28>>2];J[c+24>>2]=J[d+24>>2];J[c+28>>2]=e;e=J[d+36>>2];J[c+32>>2]=J[d+32>>2];J[c+36>>2]=e;e=J[d+44>>2];J[c+40>>2]=J[d+40>>2];J[c+44>>2]=e;e=J[d+52>>2];J[c+48>>2]=J[d+48>>2];J[c+52>>2]=e;e=J[d+60>>2];J[c+56>>2]=J[d+56>>2];J[c+60>>2]=e;e=J[d+68>>2];J[c+64>>2]=J[d+64>>2];J[c+68>>2]=e;e=J[d+76>>2];J[c+72>>2]=J[d+72>>2];J[c+76>>2]=e;if(J[a+64>>2]){J[J[(J[a+24>>2]+h|0)+76>>2]+36>>2]=b}J[a+16>>2]=J[a+16>>2]-1;ga=d+80|0}function dB(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+48>>2];N[b+56>>2]=N[a+52>>2];N[b+60>>2]=N[a+56>>2];N[b+64>>2]=N[a+60>>2];N[b+68>>2]=N[a- -64>>2];N[b+72>>2]=N[a+68>>2];N[b+76>>2]=N[a+72>>2];N[b+80>>2]=N[a+76>>2];N[b+84>>2]=N[a+80>>2];N[b+88>>2]=N[a+84>>2];N[b+92>>2]=N[a+88>>2];N[b+96>>2]=N[a+92>>2];N[b+100>>2]=N[a+96>>2];N[b+104>>2]=N[a+100>>2];N[b+108>>2]=N[a+104>>2];N[b+112>>2]=N[a+108>>2];N[b+116>>2]=N[a+112>>2];N[b+120>>2]=N[a+116>>2];N[b+124>>2]=N[a+120>>2];N[b+128>>2]=N[a+124>>2];N[b+132>>2]=N[a+128>>2];N[b+136>>2]=N[a+132>>2];N[b+140>>2]=N[a+136>>2];N[b+144>>2]=N[a+140>>2];N[b+148>>2]=N[a+144>>2];N[b+152>>2]=N[a+148>>2];N[b+156>>2]=N[a+152>>2];N[b+160>>2]=N[a+156>>2];N[b+164>>2]=N[a+160>>2];N[b+168>>2]=N[a+164>>2];N[b+172>>2]=N[a+168>>2];N[b+176>>2]=N[a+172>>2];N[b+228>>2]=N[a+868>>2];N[b+212>>2]=N[a+872>>2];N[b+196>>2]=N[a+680>>2];N[b+180>>2]=N[a+696>>2];N[b+232>>2]=N[a+932>>2];N[b+216>>2]=N[a+936>>2];N[b+200>>2]=N[a+684>>2];N[b+184>>2]=N[a+700>>2];N[b+236>>2]=N[a+996>>2];N[b+220>>2]=N[a+1e3>>2];N[b+204>>2]=N[a+688>>2];N[b+188>>2]=N[a+704>>2];J[b+244>>2]=K[a+1300|0];J[b+248>>2]=K[a+1301|0];N[b+276>>2]=N[a+1316>>2];N[b+324>>2]=N[a+1364>>2];J[b+252>>2]=K[a+1309|0];N[b+300>>2]=N[a+1340>>2];N[b+280>>2]=N[a+1320>>2];N[b+328>>2]=N[a+1368>>2];J[b+256>>2]=K[a+1310|0];N[b+304>>2]=N[a+1344>>2];N[b+284>>2]=N[a+1324>>2];N[b+332>>2]=N[a+1372>>2];J[b+260>>2]=K[a+1311|0];N[b+308>>2]=N[a+1348>>2];N[b+288>>2]=N[a+1328>>2];N[b+336>>2]=N[a+1376>>2];J[b+264>>2]=K[a+1312|0];N[b+312>>2]=N[a+1352>>2];N[b+292>>2]=N[a+1332>>2];N[b+340>>2]=N[a+1380>>2];J[b+268>>2]=K[a+1313|0];N[b+316>>2]=N[a+1356>>2];N[b+296>>2]=N[a+1336>>2];N[b+344>>2]=N[a+1384>>2];J[b+272>>2]=K[a+1314|0];N[b+320>>2]=N[a+1360>>2];return 3310}function Dd(a,b,c){var d=0,e=Q(0),f=Q(0),g=Q(0),h=0;if(!J[a>>2]){J[a>>2]=c;J[c+32>>2]=0;return}d=J[b+40>>2];if(d){f=Q(N[c>>2]+N[c+16>>2]);e=Q(N[c+8>>2]+N[c+24>>2]);g=Q(N[c+4>>2]+N[c+20>>2]);while(1){h=b+36|0;b=J[b+36>>2];b=J[h+(!(Q(Q(Q(R(Q(f-Q(N[b>>2]+N[b+16>>2]))))+Q(R(Q(g-Q(N[b+4>>2]+N[b+20>>2])))))+Q(R(Q(e-Q(N[b+8>>2]+N[b+24>>2])))))<Q(Q(Q(R(Q(f-Q(N[d>>2]+N[d+16>>2]))))+Q(R(Q(g-Q(N[d+4>>2]+N[d+20>>2])))))+Q(R(Q(e-Q(N[d+8>>2]+N[d+24>>2]))))))<<2)>>2];d=J[b+40>>2];if(d){continue}break}}h=J[b+32>>2];d=J[a+4>>2];a:{if(d){J[a+4>>2]=0;break a}J[8369]=J[8369]+1;d=ia[J[6782]](44,16)|0;J[d>>2]=0;J[d+4>>2]=0;J[d+40>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0}J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=h;f=N[c>>2];e=N[b>>2];N[d>>2]=e>f?f:e;f=N[c+16>>2];e=N[b+16>>2];N[d+16>>2]=e<f?f:e;f=N[c+4>>2];e=N[b+4>>2];N[d+4>>2]=e>f?f:e;f=N[c+20>>2];e=N[b+20>>2];N[d+20>>2]=e<f?f:e;f=N[c+8>>2];e=N[b+8>>2];N[d+8>>2]=e>f?f:e;f=N[c+24>>2];e=N[b+24>>2];N[d+24>>2]=e<f?f:e;b:{if(h){J[(((J[J[b+32>>2]+40>>2]==(b|0))<<2)+h|0)+36>>2]=d;J[d+36>>2]=b;J[b+32>>2]=d;J[d+40>>2]=c;J[c+32>>2]=d;f=N[d>>2];while(1){a=d;d=h;c:{if(!(N[d>>2]<=f)|!(N[d+4>>2]<=N[a+4>>2])|(!(N[d+8>>2]<=N[a+8>>2])|!(N[d+16>>2]>=N[a+16>>2]))){break c}if(!(N[d+20>>2]>=N[a+20>>2])){break c}if(N[d+24>>2]>=N[a+24>>2]){break b}}a=J[d+36>>2];f=N[a>>2];b=J[d+40>>2];e=N[b>>2];f=e>f?f:e;N[d>>2]=f;e=N[a+16>>2];g=N[b+16>>2];N[d+16>>2]=e>g?e:g;e=N[a+4>>2];g=N[b+4>>2];N[d+4>>2]=e<g?e:g;e=N[a+20>>2];g=N[b+20>>2];N[d+20>>2]=e>g?e:g;e=N[a+8>>2];g=N[b+8>>2];N[d+8>>2]=e<g?e:g;e=N[a+24>>2];g=N[b+24>>2];N[d+24>>2]=e>g?e:g;h=J[d+32>>2];if(h){continue}break}break b}J[d+36>>2]=b;J[b+32>>2]=d;J[d+40>>2]=c;J[c+32>>2]=d;J[a>>2]=d}}function gg(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=J[a+56>>2];a:{if(g){break a}d=J[a+52>>2];b:{if(d){J[a+52>>2]=J[d+8>>2];break b}J[8369]=J[8369]+1;d=ia[J[6782]](12,16)|0;e=J[a+60>>2];J[d+8>>2]=0;J[d+4>>2]=e;J[8369]=J[8369]+1;J[d>>2]=ia[J[6782]](P(e,24),16);J[d+8>>2]=J[a+48>>2];J[a+48>>2]=d}g=J[d>>2];h=J[d+4>>2];if((h|0)<=0){break a}e=g;if(h-1>>>0>=3){m=h&-4;d=g;while(1){e=d+96|0;j=i+4|0;J[d+72>>2]=(h|0)>(j|0)?e:0;J[d+48>>2]=(h|0)>(i|3)?d+72|0:0;J[d+24>>2]=(h|0)>(i|2)?d+48|0:0;J[d>>2]=(h|0)>(i|1)?d+24|0:0;i=j;d=e;f=f+4|0;if((m|0)!=(f|0)){continue}break}}d=h&3;if(!d){break a}while(1){f=e;e=e+24|0;j=j+1|0;J[f>>2]=(h|0)>(j|0)?e:0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}J[a+56>>2]=J[g>>2];J[g+16>>2]=0;J[g+20>>2]=0;J[g+8>>2]=0;J[g+12>>2]=0;J[g>>2]=0;J[g+4>>2]=0;f=J[a+56>>2];c:{if(f){break c}d=J[a+52>>2];d:{if(d){J[a+52>>2]=J[d+8>>2];break d}J[8369]=J[8369]+1;d=ia[J[6782]](12,16)|0;e=J[a+60>>2];J[d+8>>2]=0;J[d+4>>2]=e;J[8369]=J[8369]+1;J[d>>2]=ia[J[6782]](P(e,24),16);J[d+8>>2]=J[a+48>>2];J[a+48>>2]=d}f=J[d>>2];k=J[d+4>>2];if((k|0)<=0){break c}l=0;j=0;e=f;if(k-1>>>0>=3){m=k&-4;i=0;d=f;h=0;while(1){e=d+96|0;j=i+4|0;J[d+72>>2]=(k|0)>(j|0)?e:0;J[d+48>>2]=(i|3)<(k|0)?d+72|0:0;J[d+24>>2]=(i|2)<(k|0)?d+48|0:0;J[d>>2]=(i|1)<(k|0)?d+24|0:0;i=j;d=e;h=h+4|0;if((m|0)!=(h|0)){continue}break}}d=k&3;if(!d){break c}while(1){i=e;e=e+24|0;j=j+1|0;J[i>>2]=(k|0)>(j|0)?e:0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}J[a+56>>2]=J[f>>2];J[f+16>>2]=0;J[f+20>>2]=0;J[f+8>>2]=0;J[f+12>>2]=0;J[f>>2]=0;J[f+4>>2]=0;J[g+8>>2]=f;J[f+8>>2]=g;e=J[a+100>>2];J[g+20>>2]=e;J[f+20>>2]=e;J[g+12>>2]=c;J[f+12>>2]=b;J[g+16>>2]=0;J[f+16>>2]=0;c=J[a+116>>2];b=c+1|0;J[a+116>>2]=b;if((c|0)>=J[a+120>>2]){J[a+120>>2]=b}return g}function Sm(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:{k=J[a+4>>2];b=J[a+48>>2];if((k|0)>=(b|0)){break a}b:{if((b|0)<=J[a+8>>2]){c=J[a+12>>2];break b}if(b){J[8369]=J[8369]+1;c=ia[J[6782]](b<<2,16)|0;e=J[a+4>>2]}else{e=k}g=J[a+12>>2];c:{d:{if((e|0)>0){if(e-1>>>0>=3){h=e&-4;while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];i=d|4;J[i+c>>2]=J[g+i>>2];i=d|8;J[i+c>>2]=J[g+i>>2];d=d|12;J[d+c>>2]=J[d+g>>2];f=f+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}e=e&3;if(!e){break d}while(1){d=f<<2;J[d+c>>2]=J[d+g>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break d}if(g){break d}break c}if(g?K[a+16|0]:0){J[8370]=J[8370]+1;ia[J[6783]](g)}}J[a+12>>2]=c;H[a+16|0]=1;J[a+8>>2]=b}qa((k<<2)+c|0,0,b-k<<2);J[a+4>>2]=b;i=b<<2;g=J[a+24>>2];if((g|0)<(b|0)){e:{if((b|0)<=J[a+28>>2]){c=J[a+32>>2];break e}f:{if(!b){c=0;e=g;break f}J[8369]=J[8369]+1;c=ia[J[6782]](i,16)|0;e=J[a+24>>2]}d=J[a+32>>2];g:{if((e|0)>0){l=0;f=0;if(e-1>>>0>=3){n=e&-4;j=0;while(1){h=f<<2;J[h+c>>2]=J[d+h>>2];m=h|4;J[m+c>>2]=J[d+m>>2];m=h|8;J[m+c>>2]=J[d+m>>2];h=h|12;J[h+c>>2]=J[d+h>>2];f=f+4|0;j=j+4|0;if((n|0)!=(j|0)){continue}break}}e=e&3;if(!e){break g}while(1){j=f<<2;J[j+c>>2]=J[d+j>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}break g}if(d){break g}J[a+32>>2]=c;J[a+28>>2]=b;H[a+36|0]=1;break e}if(d?K[a+36|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+32>>2]=c;H[a+36|0]=1;J[a+28>>2]=b}qa((g<<2)+c|0,0,b-g<<2)}J[a+24>>2]=b;if((b|0)>0){qa(J[a+12>>2],255,i);qa(J[a+32>>2],255,i)}if((k|0)<=0){break a}e=J[a+32>>2];g=J[a+72>>2];c=J[a+12>>2];f=0;while(1){b=J[g+(f<<3)>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;b=c+((J[a+48>>2]-1&(b>>16^b))<<2)|0;J[e+(f<<2)>>2]=J[b>>2];J[b>>2]=f;f=f+1|0;if((k|0)!=(f|0)){continue}break}}}function kg(a){var b=0,c=0,d=0,e=0,f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0);h=J[a+752>>2];if((h|0)>0){l=J[a+760>>2];while(1){b=l+P(g,44)|0;e=J[b+12>>2];c=J[b+8>>2];f=N[c+8>>2];m=Q(N[e+8>>2]-f);d=J[b+16>>2];i=N[c+12>>2];j=Q(N[d+12>>2]-i);n=Q(N[d+8>>2]-f);i=Q(N[e+12>>2]-i);f=Q(Q(m*j)-Q(n*i));o=Q(f*f);p=i;f=N[c+16>>2];i=Q(N[d+16>>2]-f);f=Q(N[e+16>>2]-f);j=Q(Q(p*i)-Q(j*f));f=Q(Q(f*n)-Q(i*m));N[b+36>>2]=Y(Q(o+Q(Q(j*j)+Q(f*f))));g=g+1|0;if((h|0)!=(g|0)){continue}break}}e=J[a+712>>2];a:{if((e|0)<=0){g=0;break a}b=0;J[8369]=J[8369]+1;e=e<<2;g=ia[J[6782]](e,16)|0;qa(g,0,e);e=J[a+712>>2];if((e|0)<=0){break a}c=J[a+720>>2];if(e-1>>>0>=7){h=e&-8;d=0;while(1){J[(c+P(b,104)|0)+92>>2]=0;J[(c+P(b|1,104)|0)+92>>2]=0;J[(c+P(b|2,104)|0)+92>>2]=0;J[(c+P(b|3,104)|0)+92>>2]=0;J[(c+P(b|4,104)|0)+92>>2]=0;J[(c+P(b|5,104)|0)+92>>2]=0;J[(c+P(b|6,104)|0)+92>>2]=0;J[(c+P(b|7,104)|0)+92>>2]=0;b=b+8|0;d=d+8|0;if((h|0)!=(d|0)){continue}break}}h=e&7;if(!h){break a}d=0;while(1){J[(c+P(b,104)|0)+92>>2]=0;b=b+1|0;d=d+1|0;if((h|0)!=(d|0)){continue}break}}h=J[a+752>>2];if((h|0)>0){b=J[a+720>>2];l=J[a+760>>2];e=0;while(1){c=P(e,44)+l|0;f=N[c+36>>2];d=J[c+8>>2];k=((d-b|0)/104<<2)+g|0;J[k>>2]=J[k>>2]+1;f=Q(R(f));N[d+92>>2]=N[d+92>>2]+f;d=J[c+12>>2];k=((d-b|0)/104<<2)+g|0;J[k>>2]=J[k>>2]+1;N[d+92>>2]=N[d+92>>2]+f;c=J[c+16>>2];d=((c-b|0)/104<<2)+g|0;J[d>>2]=J[d>>2]+1;N[c+92>>2]=N[c+92>>2]+f;e=e+1|0;if((h|0)!=(e|0)){continue}break}e=J[a+712>>2]}b:{c:{if((e|0)>0){a=J[a+720>>2];b=0;while(1){c=J[(b<<2)+g>>2];d:{if((c|0)>0){d=a+P(b,104)|0;N[d+92>>2]=N[d+92>>2]/Q(c|0);break d}J[(a+P(b,104)|0)+92>>2]=0}b=b+1|0;if((e|0)!=(b|0)){continue}break}break c}if(!g){break b}}if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}}}function aH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=0,B=0;c=ga-96|0;ga=c;e=N[a+76>>2];i=N[a+36>>2];f=N[a+32>>2];j=N[a+80>>2];n=N[a+52>>2];o=N[a+44>>2];p=N[a+48>>2];k=N[a+84>>2];q=N[a+68>>2];w=N[a+60>>2];x=N[a- -64>>2];y=N[a+28>>2];l=N[b+8>>2];g=N[b>>2];h=N[b+4>>2];J[c+92>>2]=0;u=Q(k+Q(Q(l*q)+Q(Q(g*w)+Q(h*x))));N[c+88>>2]=u;v=Q(j+Q(Q(l*n)+Q(Q(g*o)+Q(h*p))));N[c+84>>2]=v;l=Q(e+Q(Q(l*i)+Q(Q(g*y)+Q(h*f))));N[c+80>>2]=l;g=N[b+20>>2];h=N[b+24>>2];m=N[b+16>>2];J[c+76>>2]=0;z=Q(k+Q(Q(h*q)+Q(Q(m*w)+Q(x*g))));N[c+72>>2]=z;r=Q(j+Q(Q(h*n)+Q(Q(m*o)+Q(p*g))));N[c+68>>2]=r;s=Q(e+Q(Q(h*i)+Q(Q(m*y)+Q(f*g))));N[c+64>>2]=s;g=N[b+36>>2];h=N[b+40>>2];m=N[b+32>>2];J[c+60>>2]=0;k=Q(k+Q(Q(h*q)+Q(Q(m*w)+Q(x*g))));N[c+56>>2]=k;j=Q(j+Q(Q(h*n)+Q(Q(m*o)+Q(p*g))));N[c+52>>2]=j;e=Q(e+Q(Q(h*i)+Q(Q(m*y)+Q(f*g))));N[c+48>>2]=e;J[c+44>>2]=0;n=Q(Q(Q(u+z)+k)*Q(.3333333432674408));N[c+40>>2]=n;o=Q(Q(Q(v+r)+j)*Q(.3333333432674408));N[c+36>>2]=o;p=Q(Q(Q(l+s)+e)*Q(.3333333432674408));N[c+32>>2]=p;b=J[a+8>>2];if(ia[J[J[b>>2]+48>>2]](b)&16384){J[c+24>>2]=0;J[c+28>>2]=0;J[c+16>>2]=1065353216;J[c+20>>2]=1065353216;b=J[a+8>>2];J[c+12>>2]=0;i=Q(s-l);f=Q(j-v);j=Q(e-l);q=Q(r-v);e=Q(Q(i*f)-Q(j*q));s=e;r=Q(e*e);k=Q(k-u);e=f;f=Q(z-u);e=Q(Q(q*k)-Q(e*f));i=Q(Q(f*j)-Q(k*i));f=Q(Q(1)/Q(Y(Q(r+Q(Q(e*e)+Q(i*i))))));N[c+8>>2]=Q(s*f)+n;N[c+4>>2]=Q(i*f)+o;N[c>>2]=p+Q(e*f);ia[J[J[b>>2]+8>>2]](b,c+32|0,c,c+16|0)}d=J[a+8>>2];A=c+80|0;t=c- -64|0;b=a+12|0;ia[J[J[d>>2]+8>>2]](d,A,t,b);d=J[a+8>>2];B=t;t=c+48|0;ia[J[J[d>>2]+8>>2]](d,B,t,b);a=J[a+8>>2];ia[J[J[a>>2]+8>>2]](a,t,A,b);ga=c+96|0}function en(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0);e=ga-48|0;ga=e;f=J[c+12>>2];J[e+24>>2]=J[c+8>>2];J[e+28>>2]=f;f=J[c+4>>2];J[e+16>>2]=J[c>>2];J[e+20>>2]=f;f=J[d+12>>2];J[e+40>>2]=J[d+8>>2];J[e+44>>2]=f;f=J[d+4>>2];J[e+32>>2]=J[d>>2];J[e+36>>2]=f;a:{if(J[b+60>>2]==2){Fc(a- -64|0,J[b+48>>2]);J[b+48>>2]=Db(a+4|0,e+16|0,b);h=1;break a}h=1;J[a+168>>2]=J[a+168>>2]+1;b:{f=J[b+48>>2];if(!(N[f>>2]<=N[e+32>>2])|!(N[f+16>>2]>=N[e+16>>2])|(!(N[f+4>>2]<=N[e+36>>2])|!(N[f+20>>2]>=N[e+20>>2]))){break b}if(!(N[f+8>>2]<=N[e+40>>2])|!(N[f+24>>2]>=N[e+24>>2])){break b}k=N[b+20>>2];l=N[b+24>>2];n=N[c>>2];o=N[c+4>>2];p=N[c+8>>2];m=N[b+16>>2];i=N[b+36>>2];j=N[b+40>>2];q=N[b+32>>2];g=N[a+140>>2];J[e+12>>2]=0;j=Q(g*Q(Q(j-l)*Q(.5)));N[e+8>>2]=j;i=Q(g*Q(Q(i-k)*Q(.5)));N[e+4>>2]=i;g=Q(g*Q(Q(q-m)*Q(.5)));N[e>>2]=g;if(Q(n-m)<Q(0)){N[e>>2]=-g}if(Q(o-k)<Q(0)){N[e+4>>2]=-i}if(Q(p-l)<Q(0)){N[e+8>>2]=-j}h=Cd(a+4|0,f,e+16|0,e,Q(.05000000074505806));if(!h){break a}J[a+172>>2]=J[a+172>>2]+1;break a}Gc(a+4|0,f,e+16|0);J[a+172>>2]=J[a+172>>2]+1}f=J[b+52>>2];J[(f?f+56|0:((J[b+60>>2]<<2)+a|0)+124|0)>>2]=J[b+56>>2];f=J[b+56>>2];if(f){J[f+52>>2]=J[b+52>>2]}f=J[c+4>>2];J[b+16>>2]=J[c>>2];J[b+20>>2]=f;f=J[c+12>>2];J[b+24>>2]=J[c+8>>2];J[b+28>>2]=f;c=J[d+4>>2];J[b+32>>2]=J[d>>2];J[b+36>>2]=c;c=J[d+12>>2];J[b+40>>2]=J[d+8>>2];J[b+44>>2]=c;c=J[a+144>>2];J[b+60>>2]=c;J[b+52>>2]=0;c=(c<<2)+a|0;J[b+56>>2]=J[c+124>>2];d=J[c+124>>2];if(d){J[d+52>>2]=b}J[c+124>>2]=b;c:{if(!h){break c}H[a+194|0]=1;if(K[a+193|0]){break c}J[e>>2]=5764;J[e+4>>2]=a;c=a- -64|0;cf(c,J[c>>2],J[b+48>>2],e);cf(a+4|0,J[a+4>>2],J[b+48>>2],e)}ga=e+48|0}function hk(a,b,c,d,e,f){var g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0);l=N[e+40>>2];m=N[e+24>>2];j=N[e+36>>2];k=N[e+20>>2];g=N[f+4>>2];o=N[e+8>>2];r=N[e+4>>2];s=N[e+32>>2];h=N[f>>2];t=N[e>>2];i=N[f+8>>2];v=N[e+16>>2];J[a+44>>2]=0;J[a+28>>2]=0;J[a+12>>2]=0;w=Q(Q(s*g)+Q(Q(t*Q(0))-Q(v*i)));x=Q(Q(j*g)+Q(Q(r*Q(0))-Q(k*i)));y=Q(Q(l*g)+Q(Q(o*Q(0))-Q(m*i)));n=Q(Q(d-Q(Q(Q(w*Q(0))+Q(i*x))-Q(g*y)))+c);z=Q(Q(Q(o*i)+Q(m*Q(0)))-Q(l*h));A=Q(Q(Q(r*i)+Q(k*Q(0)))-Q(j*h));B=Q(Q(Q(t*i)+Q(v*Q(0)))-Q(s*h));q=Q(Q(d-Q(Q(h*z)+Q(Q(A*Q(0))-Q(i*B))))+c);p=Q(Q(Q(0)-Q(Q(y*Q(0))+Q(Q(g*w)-Q(x*h))))+Q(0));u=Q(Q(Q(0)-Q(Q(Q(B*Q(0))+Q(i*A))-Q(g*z)))+Q(0));o=Q(Q(l*Q(0))+Q(Q(h*m)-Q(o*g)));j=Q(Q(j*Q(0))+Q(Q(h*k)-Q(r*g)));k=Q(Q(s*Q(0))+Q(Q(h*v)-Q(t*g)));l=Q(Q(Q(0)-Q(Q(h*o)+Q(Q(j*Q(0))-Q(i*k))))+Q(0));m=Q(Q(Q(0)-Q(Q(Q(k*Q(0))+Q(i*j))-Q(g*o)))+Q(0));r=Q(Q(u*l)-Q(m*q));j=Q(Q(d-Q(Q(o*Q(0))+Q(Q(g*k)-Q(j*h))))+c);g=Q(Q(Q(0)-Q(Q(z*Q(0))+Q(Q(g*B)-Q(A*h))))+Q(0));k=Q(Q(q*j)-Q(l*g));d=Q(Q(Q(0)-Q(Q(h*y)+Q(Q(x*Q(0))-Q(i*w))))+Q(0));h=Q(Q(g*m)-Q(j*u));c=Q(Q(1)/Q(Q(p*r)+Q(Q(n*k)+Q(d*h))));i=Q(Q(Q(n*q)-Q(u*d))*c);b=Q(Q(1)/b);q=Q(Q(Q(d*g)-Q(q*p))*c);o=Q(q*Q(0));g=Q(Q(Q(p*u)-Q(g*n))*c);s=Q(g*Q(0));N[a+40>>2]=Q(i*b)+Q(o+s);t=Q(Q(Q(d*m)-Q(l*n))*c);d=Q(Q(Q(p*l)-Q(j*d))*c);l=Q(d*Q(0));n=Q(Q(Q(n*j)-Q(m*p))*c);p=Q(n*Q(0));N[a+36>>2]=Q(t*b)+Q(l+p);m=Q(r*c);j=Q(k*c);k=Q(j*Q(0));c=Q(h*c);h=Q(c*Q(0));N[a+32>>2]=Q(m*b)+Q(k+h);i=Q(i*Q(0));N[a+24>>2]=i+Q(o+Q(b*g));g=Q(t*Q(0));N[a+20>>2]=g+Q(l+Q(b*n));n=Q(m*Q(0));N[a+16>>2]=n+Q(k+Q(b*c));N[a+8>>2]=i+Q(Q(q*b)+s);N[a+4>>2]=g+Q(Q(d*b)+p);N[a>>2]=n+Q(Q(j*b)+h)}function lp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;g=ga-16|0;ga=g;J[g+12>>2]=a;J[g+8>>2]=b;a=J[g+8>>2];h=ga-16|0;ga=h;J[h+12>>2]=J[g+12>>2]+708;J[h+8>>2]=a;a=J[h+8>>2];b=ga-128|0;ga=b;J[b+124>>2]=J[h+12>>2];J[b+120>>2]=a;k=J[b+124>>2];a=ga-16|0;J[a+12>>2]=J[b+120>>2];J[b+116>>2]=J[J[a+12>>2]+4>>2];c=J[b+116>>2];e=b+8|0;qa(e,0,104);d=ga-16|0;ga=d;J[d+12>>2]=e;a=J[d+12>>2];vh(a);J[(ga-16|0)+12>>2]=a+8;J[(ga-16|0)+12>>2]=a+24;J[(ga-16|0)+12>>2]=a+40;J[(ga-16|0)+12>>2]=a+56;J[(ga-16|0)+12>>2]=a+72;ga=d+16|0;a=ga-32|0;ga=a;J[a+28>>2]=k;J[a+24>>2]=c;J[a+20>>2]=e;d=ga-16|0;i=J[a+28>>2];J[d+12>>2]=i;J[a+16>>2]=J[J[d+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}d=J[a+24>>2];e=ga-16|0;J[e+12>>2]=i;if(J[J[e+12>>2]+4>>2]<(d|0)){e=J[a+24>>2];d=ga-16|0;ga=d;J[d+12>>2]=i;J[d+8>>2]=e;c=ga-16|0;e=J[d+12>>2];J[c+12>>2]=e;if(J[J[c+12>>2]+8>>2]<J[d+8>>2]){f=J[d+8>>2];c=ga-16|0;ga=c;J[c+8>>2]=e;J[c+4>>2]=f;j=J[c+8>>2];b:{if(J[c+4>>2]){l=J[c+4>>2];f=ga-16|0;ga=f;J[f+12>>2]=j;J[f+8>>2]=l;J[f+4>>2]=0;j=P(J[f+8>>2],104);J[8369]=J[8369]+1;j=ia[J[6782]](j,16)|0;ga=f+16|0;J[c+12>>2]=j;break b}J[c+12>>2]=0}ga=c+16|0;J[d+4>>2]=J[c+12>>2];c=ga-16|0;J[c+12>>2]=e;wh(e,J[J[c+12>>2]+4>>2],J[d+4>>2]);c=ga-16|0;J[c+12>>2]=e;Eb(e,J[J[c+12>>2]+4>>2]);lb(e);H[e+16|0]=1;J[e+12>>2]=J[d+4>>2];J[e+8>>2]=J[d+8>>2]}ga=d+16|0}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){sa(J[i+12>>2]+P(J[a+8>>2],104)|0,J[a+20>>2],104);J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[i+4>>2]=J[a+24>>2];ga=a+32|0;wh(J[b+120>>2],J[b+116>>2],J[k+12>>2]);ga=b+128|0;ga=h+16|0;ga=g+16|0}function UG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=0,l=Q(0),m=0;a=ga-608|0;ga=a;g=Q(N[b+124>>2]-N[b+60>>2]);h=Q(g*g);g=Q(N[b+116>>2]-N[b+52>>2]);f=Q(g*g);g=Q(N[b+120>>2]-N[b+56>>2]);f=Q(h+Q(f+Q(g*g)));g=N[b+252>>2];a:{b:{if(f<Q(g*g)){g=Q(1);f=Q(N[c+124>>2]-N[c+60>>2]);l=Q(f*f);f=Q(N[c+116>>2]-N[c+52>>2]);h=Q(f*f);f=Q(N[c+120>>2]-N[c+56>>2]);h=Q(l+Q(h+Q(f*f)));f=N[c+252>>2];if(h<Q(f*f)){break a}if(!K[29589]){break b}break a}g=Q(1);if(K[29589]){break a}}e=J[b+192>>2];g=N[c+248>>2];d=a+552|0;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[a+596>>2]=g;N[a+580>>2]=g;J[a+556>>2]=8;J[a+552>>2]=16132;J[a+548>>2]=0;J[a+540>>2]=1566444395;J[a+544>>2]=0;J[a+376>>2]=6804;H[a+348|0]=0;J[a+324>>2]=953267991;J[a+12>>2]=d;J[a+8>>2]=e;J[a+4>>2]=a+16;J[a>>2]=18356;e=b+4|0;i=b+68|0;j=c+4|0;k=c+68|0;g=Q(1);c:{if(!Hg(a,e,i,j,k,a+376|0)){break c}f=N[a+540>>2];if(f<N[b+244>>2]){N[b+244>>2]=f}if(f<N[c+244>>2]){N[c+244>>2]=f}g=Q(1);if(!(f<Q(1))){break c}g=f}m=J[c+192>>2];f=N[b+248>>2];d=a+552|0;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[a+596>>2]=f;N[a+580>>2]=f;J[a+556>>2]=8;J[a+552>>2]=16132;J[a+548>>2]=0;J[a+540>>2]=1566444395;J[a+544>>2]=0;J[a+376>>2]=6804;H[a+348|0]=0;J[a+324>>2]=953267991;J[a+12>>2]=m;J[a+8>>2]=d;J[a+4>>2]=a+16;J[a>>2]=18356;d:{if(!Hg(a,e,i,j,k,a+376|0)){break d}f=N[a+540>>2];if(f<N[b+244>>2]){N[b+244>>2]=f}if(f<N[c+244>>2]){N[c+244>>2]=f}if(!(f<g)){break d}g=f}}ga=a+608|0;return Q(g)}\nfunction lg(a){var b=0,c=0,d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0);c=J[a+712>>2];a:{if((c|0)<=0){break a}if(c-1>>>0>=3){k=c&-4;while(1){b=J[a+720>>2]+P(d,104)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;b=J[a+720>>2]+P(d|1,104)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;b=J[a+720>>2]+P(d|2,104)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;b=J[a+720>>2]+P(d|3,104)|0;J[b+72>>2]=0;J[b+76>>2]=0;J[b+80>>2]=0;J[b+84>>2]=0;d=d+4|0;l=l+4|0;if((k|0)!=(l|0)){continue}break}}b=c&3;if(!b){break a}while(1){c=J[a+720>>2]+P(d,104)|0;J[c+72>>2]=0;J[c+76>>2]=0;J[c+80>>2]=0;J[c+84>>2]=0;d=d+1|0;e=e+1|0;if((b|0)!=(e|0)){continue}break}}l=J[a+752>>2];if((l|0)>0){k=0;while(1){b=J[a+760>>2]+P(k,44)|0;d=J[b+12>>2];h=N[d+12>>2];e=J[b+8>>2];i=N[e+12>>2];c=J[b+16>>2];j=N[c+12>>2];p=N[d+16>>2];n=N[c+8>>2];f=N[e+16>>2];o=N[c+16>>2];g=N[e+8>>2];m=N[d+8>>2];J[b+32>>2]=0;m=Q(m-g);j=Q(j-i);g=Q(n-g);h=Q(h-i);i=Q(Q(m*j)-Q(g*h));n=h;h=Q(o-f);o=j;j=Q(p-f);f=Q(Q(n*h)-Q(o*j));g=Q(Q(j*g)-Q(h*m));h=Q(Q(1)/Q(Y(Q(Q(i*i)+Q(Q(f*f)+Q(g*g))))));N[b+28>>2]=i*h;N[b+24>>2]=g*h;N[b+20>>2]=f*h;N[e+80>>2]=i+N[e+80>>2];N[e+76>>2]=g+N[e+76>>2];N[e+72>>2]=f+N[e+72>>2];N[d+72>>2]=f+N[d+72>>2];N[d+76>>2]=g+N[d+76>>2];N[d+80>>2]=i+N[d+80>>2];N[c+72>>2]=f+N[c+72>>2];N[c+76>>2]=g+N[c+76>>2];N[c+80>>2]=i+N[c+80>>2];k=k+1|0;if((l|0)!=(k|0)){continue}break}}d=J[a+712>>2];if((d|0)>0){c=J[a+720>>2];e=0;while(1){a=c+P(e,104)|0;i=N[a+80>>2];f=N[a+72>>2];g=N[a+76>>2];h=Q(Y(Q(Q(i*i)+Q(Q(f*f)+Q(g*g)))));if(h>Q(1.1920928955078125e-7)){j=f;f=Q(Q(1)/h);N[a+72>>2]=j*f;N[a+76>>2]=g*f;N[a+80>>2]=i*f}e=e+1|0;if((d|0)!=(e|0)){continue}break}}}function Ks(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=Q(0),e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);g=ga-16|0;ga=g;J[g+12>>2]=a;N[g+8>>2]=b;N[g+4>>2]=c;a=J[g+12>>2];v=N[g+4>>2];h=ga-16|0;ga=h;N[h+12>>2]=N[g+8>>2];c=N[a+692>>2];a:{if(!(c>Q(0))){break a}d=N[a+688>>2];b=Pa(Q(N[h+12>>2]-d),Q(6.2831854820251465));b:{if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break b}if(!(b>Q(3.1415927410125732))){break b}b=Q(b+Q(-6.2831854820251465))}if(Q(-c)>b?0:b<=c){break a}c:{if(b>Q(0)){b=Pa(Q(c+d),Q(6.2831854820251465));if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break c}if(!(b>Q(3.1415927410125732))){break c}b=Q(b+Q(-6.2831854820251465));break c}b=Pa(Q(d-c),Q(6.2831854820251465));if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break c}if(!(b>Q(3.1415927410125732))){break c}b=Q(b+Q(-6.2831854820251465))}N[h+12>>2]=b}e=J[a+32>>2];b=N[a+652>>2];c=N[a+620>>2];d=N[a+636>>2];m=Q(Q(N[e+44>>2]*b)+Q(Q(N[e+36>>2]*c)+Q(d*N[e+40>>2])));f=J[a+28>>2];n=N[f+44>>2];i=N[a+584>>2];o=N[f+36>>2];j=N[a+552>>2];k=N[a+568>>2];p=N[f+40>>2];w=Q(m*Q(Q(n*i)+Q(Q(o*j)+Q(k*p))));q=Q(Q(N[e+12>>2]*b)+Q(Q(N[e+4>>2]*c)+Q(d*N[e+8>>2])));r=N[f+12>>2];s=N[f+4>>2];t=N[f+8>>2];x=Q(q*Q(Q(r*i)+Q(Q(s*j)+Q(k*t))));u=N[f+28>>2];l=Q(u*i);i=N[f+20>>2];y=Q(i*j);j=N[f+24>>2];l=Q(l+Q(y+Q(k*j)));k=Q(Q(N[e+28>>2]*b)+Q(Q(N[e+20>>2]*c)+Q(d*N[e+24>>2])));b=N[a+588>>2];c=N[a+556>>2];d=N[a+572>>2];N[a+680>>2]=Q(N[h+12>>2]-Q($a(Q(w+Q(x+Q(l*k))),Q(Q(m*Q(Q(n*b)+Q(Q(o*c)+Q(p*d))))+Q(Q(q*Q(Q(r*b)+Q(Q(s*c)+Q(t*d))))+Q(Q(Q(u*b)+Q(Q(i*c)+Q(j*d)))*k))))*N[a+732>>2]))/v;ga=h+16|0;ga=g+16|0}function HA(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0);if(K[a+48|0]){J[b>>2]=0;J[b+4>>2]=0;return}J[b>>2]=4;J[b+4>>2]=2;vg(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0);H[a+297|0]=0;J[a+1088>>2]=0;e=N[a+192>>2];f=N[a+196>>2];a:{if(!(e<=f)){break a}c=N[a+924>>2];d=N[a+892>>2];g=N[a+908>>2];d=$a(Q(Q(c*N[a+864>>2])+Q(Q(d*N[a+832>>2])+Q(N[a+848>>2]*g))),Q(Q(c*N[a+860>>2])+Q(Q(d*N[a+828>>2])+Q(N[a+844>>2]*g))));b:{if(e>=f){break b}if(d<e){c=Pa(Q(e-d),Q(6.2831854820251465));c:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break c}if(!(c>Q(3.1415927410125732))){break c}c=Q(c+Q(-6.2831854820251465))}g=Q(R(c));c=Pa(Q(f-d),Q(6.2831854820251465));d:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break d}if(!(c>Q(3.1415927410125732))){break d}c=Q(c+Q(-6.2831854820251465))}d=g<Q(R(c))?d:Q(d+Q(6.2831854820251465));break b}if(!(d>f)){break b}c=Pa(Q(d-f),Q(6.2831854820251465));e:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break e}if(!(c>Q(3.1415927410125732))){break e}c=Q(c+Q(-6.2831854820251465))}g=Q(R(c));c=Pa(Q(d-e),Q(6.2831854820251465));f:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break f}if(!(c>Q(3.1415927410125732))){break f}c=Q(c+Q(-6.2831854820251465))}d=g>Q(R(c))?Q(d+Q(-6.2831854820251465)):d}N[a+1084>>2]=d;if(!(d<e)){e=f;if(!(e<d)){break a}}H[a+297|0]=1;N[a+1088>>2]=d-e}H[a+296|0]=0;c=N[a+1032>>2];N[a+1080>>2]=c;g:{h:{i:{e=N[a+188>>2];f=N[a+184>>2];if(e>=f){if(c>e){break i}e=f;if(c<e){break i}}J[a+1032>>2]=0;if(K[a+1096|0]){break h}break g}H[a+296|0]=1;N[a+1032>>2]=c-e}J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}if(K[a+297|0]|K[a+1112|0]){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}}function AE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);a:{if((d|0)<=0){break a}i=d-1|0;if(i>>>0>=7){l=d&-8;while(1){g=e<<4;J[(g+c|0)+12>>2]=-581039253;J[((g|16)+c|0)+12>>2]=-581039253;J[((g|32)+c|0)+12>>2]=-581039253;J[((g|48)+c|0)+12>>2]=-581039253;J[((g|64)+c|0)+12>>2]=-581039253;J[((g|80)+c|0)+12>>2]=-581039253;J[((g|96)+c|0)+12>>2]=-581039253;J[((g|112)+c|0)+12>>2]=-581039253;e=e+8|0;f=f+8|0;if((l|0)!=(f|0)){continue}break}}f=d&7;if(f){while(1){J[((e<<4)+c|0)+12>>2]=-581039253;e=e+1|0;h=h+1|0;if((f|0)!=(h|0)){continue}break}}if((d|0)<=0){break a}g=0;f=J[a+96>>2];if((f|0)>0){while(1){i=g<<4;b:{if((f|0)<=0){k=Q(-0xde0b6b000000000);break b}e=b+i|0;o=N[a+20>>2];m=Q(N[e+8>>2]*o);p=N[a+16>>2];n=Q(N[e+4>>2]*p);q=N[a+12>>2];s=Q(N[e>>2]*q);l=J[a+104>>2];e=0;h=-1;k=Q(-3.4028234663852886e38);while(1){j=l+(e<<4)|0;r=Q(Q(N[j+8>>2]*m)+Q(Q(N[j>>2]*s)+Q(n*N[j+4>>2])));j=r>k;k=j?r:k;h=j?e:h;e=e+1|0;if((f|0)!=(e|0)){continue}break}e=l+(h<<4)|0;m=N[e>>2];n=N[e+4>>2];f=c+i|0;N[f+8>>2]=N[e+8>>2]*o;N[f+4>>2]=n*p;N[f>>2]=m*q}N[(c+i|0)+12>>2]=k;g=g+1|0;if((g|0)==(d|0)){break a}f=J[a+96>>2];continue}}h=0;e=0;if(i>>>0>=7){b=d&-8;f=0;while(1){a=e<<4;J[(a+c|0)+12>>2]=-581039253;J[((a|16)+c|0)+12>>2]=-581039253;J[((a|32)+c|0)+12>>2]=-581039253;J[((a|48)+c|0)+12>>2]=-581039253;J[((a|64)+c|0)+12>>2]=-581039253;J[((a|80)+c|0)+12>>2]=-581039253;J[((a|96)+c|0)+12>>2]=-581039253;J[((a|112)+c|0)+12>>2]=-581039253;e=e+8|0;f=f+8|0;if((b|0)!=(f|0)){continue}break}}a=d&7;if(!a){break a}while(1){J[((e<<4)+c|0)+12>>2]=-581039253;e=e+1|0;h=h+1|0;if((a|0)!=(h|0)){continue}break}}}function yy(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=Q(0);a=ga-160|0;ga=a;a:{b:{switch((J[b+388>>2]&15)-1|0){case 0:J[a>>2]=21352;e=J[c+12>>2];f=N[e+56>>2];g=N[e+52>>2];i=J[c+8>>2];j=J[i+236>>2];h=N[e+48>>2];e=J[b+192>>2];d=Q(ia[J[J[e>>2]+48>>2]](e));e=J[c+4>>2];ia[J[J[e>>2]+8>>2]](e,J[c+12>>2],a+144|0,a+128|0);e=J[a+156>>2];J[a+104>>2]=J[a+152>>2];J[a+108>>2]=e;e=J[a+132>>2];J[a+112>>2]=J[a+128>>2];J[a+116>>2]=e;e=J[a+140>>2];J[a+120>>2]=J[a+136>>2];J[a+124>>2]=e;N[a+104>>2]=N[a+104>>2]-d;N[a+112>>2]=d+N[a+112>>2];e=J[a+148>>2];J[a+96>>2]=J[a+144>>2];J[a+100>>2]=e;N[a+96>>2]=N[a+96>>2]-d;N[a+100>>2]=N[a+100>>2]-d;N[a+116>>2]=d+N[a+116>>2];N[a+120>>2]=d+N[a+120>>2];N[a+20>>2]=d;k=d;d=Q(f-f);f=Q(d*d);d=Q(h-h);h=Q(d*d);d=Q(g-g);N[a+16>>2]=k+Q(Y(Q(f+Q(h+Q(d*d)))));J[a+12>>2]=j<<30>>31&i;J[a+8>>2]=c;J[a+4>>2]=b;Vb(b+928|0,J[b+928>>2],a+96|0,a);break a;case 1:break b;default:break a}}J[a+20>>2]=0;J[a+4>>2]=1065353216;J[a>>2]=21436;J[a+24>>2]=b;J[a+28>>2]=c;N[a+8>>2]=N[b+456>>2];e=J[c+4>>2];d=Q(ia[J[J[e>>2]+48>>2]](e));e=J[b+192>>2];d=Q(d+Q(ia[J[J[e>>2]+48>>2]](e)));N[a+12>>2]=d;f=N[b+316>>2];g=N[J[c+8>>2]+224>>2];N[a+16>>2]=f<g?f:g;e=J[c+4>>2];ia[J[J[e>>2]+8>>2]](e,J[c+12>>2],a+144|0,a+128|0);c=J[a+156>>2];J[a+104>>2]=J[a+152>>2];J[a+108>>2]=c;c=J[a+132>>2];J[a+112>>2]=J[a+128>>2];J[a+116>>2]=c;c=J[a+140>>2];J[a+120>>2]=J[a+136>>2];J[a+124>>2]=c;N[a+104>>2]=N[a+104>>2]-d;N[a+112>>2]=d+N[a+112>>2];N[a+116>>2]=d+N[a+116>>2];c=J[a+148>>2];J[a+96>>2]=J[a+144>>2];J[a+100>>2]=c;N[a+96>>2]=N[a+96>>2]-d;N[a+100>>2]=N[a+100>>2]-d;N[a+120>>2]=d+N[a+120>>2];Vb(b+1048|0,J[b+1048>>2],a+96|0,a)}ga=a+160|0}function EG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=0,E=Q(0),F=Q(0),G=Q(0),H=0,I=Q(0),L=Q(0),M=Q(0),O=Q(0),R=0;D=J[a+12>>2];if((D|0)<=0){return Q(Q(1))}f=K[a+28|0];H=f?b:c;b=f?c:b;I=N[b- -64>>2];E=N[b+60>>2];F=N[b+56>>2];G=N[b+52>>2];L=N[b+48>>2];h=N[b+44>>2];i=N[b+40>>2];j=N[b+36>>2];M=N[b+32>>2];k=N[b+28>>2];l=N[b+24>>2];m=N[b+20>>2];O=N[b+16>>2];n=N[b+12>>2];o=N[b+8>>2];r=J[b+260>>2];p=N[b+4>>2];R=J[b+192>>2];q=Q(1);f=0;while(1){c=J[R+24>>2]+P(f,80)|0;g=N[c+56>>2];s=N[c+52>>2];t=N[c+48>>2];u=N[c+36>>2];v=N[c+20>>2];w=N[c+4>>2];x=N[c+40>>2];y=N[c+24>>2];z=N[c+8>>2];A=N[c+32>>2];B=N[c>>2];C=N[c+16>>2];J[b+64>>2]=0;J[b+48>>2]=0;J[b+32>>2]=0;J[b+16>>2]=0;J[b+260>>2]=r+1;N[b+36>>2]=Q(A*h)+Q(Q(B*j)+Q(i*C));N[b+20>>2]=Q(A*k)+Q(Q(B*m)+Q(l*C));N[b+4>>2]=Q(A*n)+Q(Q(B*p)+Q(o*C));N[b+44>>2]=Q(x*h)+Q(Q(z*j)+Q(i*y));N[b+40>>2]=Q(u*h)+Q(Q(w*j)+Q(i*v));N[b+28>>2]=Q(x*k)+Q(Q(z*m)+Q(l*y));N[b+24>>2]=Q(u*k)+Q(Q(w*m)+Q(l*v));N[b+12>>2]=Q(x*n)+Q(Q(z*p)+Q(o*y));N[b+8>>2]=Q(u*n)+Q(Q(w*p)+Q(o*v));N[b+60>>2]=E+Q(Q(g*h)+Q(Q(t*j)+Q(i*s)));N[b+56>>2]=F+Q(Q(g*k)+Q(Q(t*m)+Q(l*s)));N[b+52>>2]=G+Q(Q(g*n)+Q(Q(t*p)+Q(o*s)));c=J[J[a+20>>2]+(f<<2)>>2];g=Q(ia[J[J[c>>2]+12>>2]](c,b,H,d,e));N[b+64>>2]=I;N[b+60>>2]=E;N[b+56>>2]=F;N[b+52>>2]=G;N[b+48>>2]=L;N[b+44>>2]=h;N[b+40>>2]=i;N[b+36>>2]=j;N[b+32>>2]=M;N[b+28>>2]=k;N[b+24>>2]=l;N[b+20>>2]=m;N[b+16>>2]=O;N[b+12>>2]=n;N[b+8>>2]=o;N[b+4>>2]=p;r=J[b+260>>2]+1|0;J[b+260>>2]=r;q=g<q?g:q;f=f+1|0;if((D|0)!=(f|0)){continue}break}return Q(q)}function kh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=Q(0);N[b+16>>2]=N[a+4>>2];N[b+20>>2]=N[a+8>>2];N[b+24>>2]=N[a+12>>2];N[b+28>>2]=N[a+16>>2];N[b+32>>2]=N[a+20>>2];N[b+36>>2]=N[a+24>>2];N[b+40>>2]=N[a+28>>2];N[b+44>>2]=N[a+32>>2];N[b+48>>2]=N[a+36>>2];N[b+52>>2]=N[a+40>>2];N[b+56>>2]=N[a+44>>2];N[b+60>>2]=N[a+48>>2];N[b+64>>2]=N[a+52>>2];N[b+68>>2]=N[a+56>>2];N[b+72>>2]=N[a+60>>2];N[b+76>>2]=N[a- -64>>2];N[b+80>>2]=N[a+68>>2];N[b+84>>2]=N[a+72>>2];N[b+88>>2]=N[a+76>>2];N[b+92>>2]=N[a+80>>2];N[b+96>>2]=N[a+84>>2];N[b+100>>2]=N[a+88>>2];N[b+104>>2]=N[a+92>>2];N[b+108>>2]=N[a+96>>2];N[b+112>>2]=N[a+100>>2];N[b+116>>2]=N[a+104>>2];N[b+120>>2]=N[a+108>>2];N[b+124>>2]=N[a+112>>2];N[b+128>>2]=N[a+116>>2];N[b+132>>2]=N[a+120>>2];N[b+136>>2]=N[a+124>>2];N[b+140>>2]=N[a+128>>2];N[b+144>>2]=N[a+132>>2];N[b+148>>2]=N[a+136>>2];N[b+152>>2]=N[a+140>>2];N[b+156>>2]=N[a+144>>2];N[b+160>>2]=N[a+148>>2];N[b+164>>2]=N[a+152>>2];N[b+168>>2]=N[a+156>>2];N[b+172>>2]=N[a+160>>2];N[b+176>>2]=N[a+164>>2];N[b+180>>2]=N[a+168>>2];N[b+184>>2]=N[a+172>>2];N[b+188>>2]=N[a+176>>2];J[b+224>>2]=J[a+180>>2];f=N[a+184>>2];J[b>>2]=0;N[b+192>>2]=f;d=ia[J[J[c>>2]+28>>2]](c,J[a+192>>2])|0;J[b+8>>2]=0;J[b+4>>2]=d;J[b+228>>2]=J[a+204>>2];J[b+232>>2]=J[a+208>>2];J[b+236>>2]=J[a+212>>2];J[b+240>>2]=J[a+216>>2];N[b+196>>2]=N[a+220>>2];N[b+200>>2]=N[a+224>>2];N[b+204>>2]=N[a+232>>2];N[b+208>>2]=N[a+228>>2];J[b+244>>2]=J[a+236>>2];d=ia[J[J[c>>2]+40>>2]](c,a)|0;e=ia[J[J[c>>2]+28>>2]](c,d)|0;J[b+12>>2]=e;if(e){ia[J[J[c>>2]+48>>2]](c,d)}N[b+212>>2]=N[a+244>>2];N[b+216>>2]=N[a+248>>2];N[b+220>>2]=N[a+252>>2];J[b+248>>2]=J[a+256>>2];return 3550}function vp(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=0,m=0,n=0;k=ga-16|0;ga=k;J[k+12>>2]=a;J[k+8>>2]=b;d=J[k+8>>2];e=ga-32|0;ga=e;a=J[k+12>>2];b=J[a+192>>2];c=Q(ia[J[J[b>>2]+48>>2]](b));g=J[a+712>>2];if((g|0)>0){l=a+928|0;while(1){b=J[a+720>>2]+P(f,104)|0;h=Q(N[d>>2]*N[b+8>>2]);N[b+8>>2]=h;i=Q(N[d+4>>2]*N[b+12>>2]);N[b+12>>2]=i;j=Q(N[d+8>>2]*N[b+16>>2]);N[b+16>>2]=j;N[b+24>>2]=N[d>>2]*N[b+24>>2];N[b+28>>2]=N[d+4>>2]*N[b+28>>2];N[b+32>>2]=N[d+8>>2]*N[b+32>>2];J[e+28>>2]=0;N[e+24>>2]=c+j;N[e+20>>2]=c+i;N[e+16>>2]=c+h;J[e+12>>2]=0;N[e+8>>2]=j-c;N[e+4>>2]=i-c;N[e>>2]=h-c;Gc(l,J[b+96>>2],e);f=f+1|0;if((g|0)!=(f|0)){continue}break}}lg(a);b=J[a+928>>2];a:{if(b){d=J[a+192>>2];c=Q(ia[J[J[d>>2]+48>>2]](d));h=N[b>>2];i=N[b+4>>2];j=N[b+8>>2];J[a+904>>2]=0;N[a+900>>2]=j-c;N[a+896>>2]=i-c;N[a+892>>2]=h-c;h=N[b+20>>2];i=N[b+24>>2];j=N[b+16>>2];J[a+920>>2]=0;N[a+916>>2]=c+i;N[a+912>>2]=c+h;b=a+908|0;N[b>>2]=c+j;d=J[a+188>>2];if(!d){break a}f=J[a+684>>2];g=J[f+32>>2];ia[J[J[g>>2]+16>>2]](g,d,a+892|0,b,J[f+36>>2]);break a}J[a+892>>2]=0;J[a+896>>2]=0;J[a+916>>2]=0;J[a+920>>2]=0;J[a+908>>2]=0;J[a+912>>2]=0;J[a+900>>2]=0;J[a+904>>2]=0}g=J[a+732>>2];if((g|0)>0){l=J[a+740>>2];b=0;f=0;while(1){d=l+P(f,52)|0;m=J[d+8>>2];n=J[d+12>>2];c=Q(N[m+16>>2]-N[n+16>>2]);h=Q(c*c);c=Q(N[m+8>>2]-N[n+8>>2]);i=Q(c*c);c=Q(N[m+12>>2]-N[n+12>>2]);c=Q(Y(Q(h+Q(i+Q(c*c)))));N[d+16>>2]=c;N[d+28>>2]=c*c;f=f+1|0;if((g|0)!=(f|0)){continue}break}while(1){d=l+P(b,52)|0;N[d+24>>2]=Q(N[J[d+8>>2]+88>>2]+N[J[d+12>>2]+88>>2])/N[J[d+4>>2]+4>>2];b=b+1|0;if((g|0)!=(b|0)){continue}break}}kg(a);ga=e+32|0;ga=k+16|0}function xg(a,b,c,d,e){var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0),M=Q(0),O=Q(0),P=Q(0);f=J[a+28>>2];o=N[f+36>>2];p=N[f+20>>2];q=N[f+40>>2];r=N[f+8>>2];x=N[f+24>>2];n=N[f+44>>2];y=N[f+12>>2];z=N[f+56>>2];A=N[f+28>>2];B=N[f+60>>2];C=N[f+52>>2];a=J[a+32>>2];D=N[a+36>>2];E=N[a+20>>2];s=N[a+40>>2];F=N[a+8>>2];G=N[a+24>>2];h=N[a+44>>2];k=N[a+12>>2];g=N[a+56>>2];j=N[a+28>>2];i=N[a+60>>2];m=N[a+52>>2];H=N[a+344>>2];I=N[f+344>>2];K=N[f+4>>2];L=N[d+4>>2];M=N[d+8>>2];O=N[d>>2];P=N[a+4>>2];l=N[e+4>>2];t=N[e+8>>2];u=N[e>>2];d=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=d;d=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=d;J[b+44>>2]=0;J[b+28>>2]=0;v=h;l=Q(l-g);h=N[b>>2];u=Q(u-m);g=N[b+4>>2];m=Q(Q(l*h)-Q(u*g));w=k;t=Q(t-i);k=N[b+8>>2];i=Q(Q(t*g)-Q(l*k));l=j;j=Q(Q(u*k)-Q(t*h));l=Q(Q(v*m)+Q(Q(w*i)+Q(l*j)));N[b+40>>2]=l;s=Q(Q(s*m)+Q(Q(F*i)+Q(G*j)));N[b+36>>2]=s;m=Q(Q(D*m)+Q(Q(P*i)+Q(E*j)));N[b+32>>2]=m;v=n;j=Q(O-C);n=Q(L-z);i=Q(Q(g*j)-Q(h*n));w=Q(n*k);n=Q(M-B);g=Q(w-Q(g*n));h=Q(Q(n*h)-Q(k*j));k=Q(Q(v*i)+Q(Q(y*g)+Q(A*h)));N[b+24>>2]=k;j=Q(Q(q*i)+Q(Q(r*g)+Q(x*h)));N[b+20>>2]=j;h=Q(Q(o*i)+Q(Q(K*g)+Q(p*h)));N[b+16>>2]=h;g=N[f+404>>2];i=N[f+400>>2];o=N[f+396>>2];J[b+60>>2]=0;o=Q(h*o);N[b+48>>2]=o;i=Q(j*i);N[b+52>>2]=i;g=Q(k*g);N[b+56>>2]=g;p=N[a+404>>2];q=N[a+400>>2];r=N[a+396>>2];J[b+76>>2]=0;r=Q(m*r);N[b+64>>2]=r;q=Q(s*q);N[b+68>>2]=q;p=Q(l*p);N[b+72>>2]=p;N[b+80>>2]=Q(H+Q(I+Q(Q(g*k)+Q(Q(o*h)+Q(j*i)))))+Q(Q(p*l)+Q(Q(r*m)+Q(s*q)))}function Dk(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=J[a+8>>2];c=J[a+32>>2];f=c?J[a+40>>2]:0;d=c;c=J[a+52>>2];g=c?J[a+60>>2]:0;h=c;c=J[a+72>>2];Q(ia[J[J[b>>2]+12>>2]](b,f,d,g,h,c?J[a+80>>2]:0,c,J[a+4>>2],J[a+20>>2],J[a+24>>2]));c=J[a+32>>2];a:{if((c|0)>=0){break a}if(J[a+36>>2]<0){b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+44|0]=1;J[a+36>>2]=0;J[a+40>>2]=0}b=c;d=0-b&3;if(d){while(1){J[J[a+40>>2]+(b<<2)>>2]=0;b=b+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(c>>>0>4294967292){break a}while(1){c=b<<2;J[c+J[a+40>>2]>>2]=0;J[(c+J[a+40>>2]|0)+4>>2]=0;J[(c+J[a+40>>2]|0)+8>>2]=0;J[(c+J[a+40>>2]|0)+12>>2]=0;b=b+4|0;if(b){continue}break}}J[a+32>>2]=0;c=J[a+52>>2];b:{if((c|0)>=0){break b}if(J[a+56>>2]<0){b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+64|0]=1;J[a+56>>2]=0;J[a+60>>2]=0}e=0;b=c;d=0-b&3;if(d){while(1){J[J[a+60>>2]+(b<<2)>>2]=0;b=b+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(c>>>0>4294967292){break b}while(1){c=b<<2;J[c+J[a+60>>2]>>2]=0;J[(c+J[a+60>>2]|0)+4>>2]=0;J[(c+J[a+60>>2]|0)+8>>2]=0;J[(c+J[a+60>>2]|0)+12>>2]=0;b=b+4|0;if(b){continue}break}}J[a+52>>2]=0;c=J[a+72>>2];c:{if((c|0)>=0){break c}if(J[a+76>>2]<0){b=J[a+80>>2];if(!(b?!b|!K[a+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+84|0]=1;J[a+76>>2]=0;J[a+80>>2]=0}e=0;b=c;d=0-b&3;if(d){while(1){J[J[a+80>>2]+(b<<2)>>2]=0;b=b+1|0;e=e+1|0;if((d|0)!=(e|0)){continue}break}}if(c>>>0>4294967292){break c}while(1){c=b<<2;J[c+J[a+80>>2]>>2]=0;J[(c+J[a+80>>2]|0)+4>>2]=0;J[(c+J[a+80>>2]|0)+8>>2]=0;J[(c+J[a+80>>2]|0)+12>>2]=0;b=b+4|0;if(b){continue}break}}J[a+72>>2]=0}function af(a){a=a|0;var b=0;J[a>>2]=10268;if(K[a+20|0]){b=J[J[a+16>>2]+16>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+16>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}if(K[a+12|0]){b=J[J[a+8>>2]+16>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+8>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+32>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+32>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+36>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+36>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+40>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+40>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+44>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+44>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+48>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+48>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+52>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+56>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+56>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+60>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+60>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+76>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+76>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+80>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+80>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+72>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+72>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+88>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+88>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+84>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+84>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+24>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+28>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+28>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}return a|0}function Ly(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0;e=ga-256|0;ga=e;ya(2355);J[e+32>>2]=22956;f=J[b+12>>2];J[e+76>>2]=J[b+8>>2];J[e+80>>2]=f;f=J[b+4>>2];J[e+68>>2]=J[b>>2];J[e+72>>2]=f;f=J[c+12>>2];J[e+92>>2]=J[c+8>>2];J[e+96>>2]=f;f=J[c>>2];m=J[c+4>>2];J[e+104>>2]=0;J[e+108>>2]=0;J[e+112>>2]=0;J[e+116>>2]=0;J[e+124>>2]=0;J[e+128>>2]=0;J[e+120>>2]=1065353216;J[e+132>>2]=0;J[e+136>>2]=0;J[e+140>>2]=1065353216;J[e+144>>2]=0;J[e+84>>2]=f;J[e+88>>2]=m;J[e+248>>2]=d;J[e+100>>2]=1065353216;J[e+244>>2]=a;d=J[b+4>>2];J[e+148>>2]=J[b>>2];J[e+152>>2]=d;d=J[b+12>>2];J[e+156>>2]=J[b+8>>2];J[e+160>>2]=d;J[e+168>>2]=0;J[e+172>>2]=0;J[e+176>>2]=0;J[e+180>>2]=0;J[e+184>>2]=1065353216;J[e+188>>2]=0;J[e+192>>2]=0;J[e+196>>2]=0;J[e+200>>2]=0;J[e+204>>2]=1065353216;J[e+208>>2]=0;J[e+164>>2]=1065353216;d=J[c+12>>2];J[e+220>>2]=J[c+8>>2];J[e+224>>2]=d;d=J[c+4>>2];J[e+212>>2]=J[c>>2];J[e+216>>2]=d;g=Q(N[c+8>>2]-N[b+8>>2]);j=Q(N[c>>2]-N[b>>2]);h=Q(N[c+4>>2]-N[b+4>>2]);i=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(j*j)+Q(h*h))))));g=Q(g*i);k=g==Q(0)?Q(1.0000000150474662e30):Q(Q(1)/g);N[e+44>>2]=k;h=Q(h*i);l=h==Q(0)?Q(1.0000000150474662e30):Q(Q(1)/h);N[e+40>>2]=l;J[e+60>>2]=k<Q(0);J[e+56>>2]=l<Q(0);i=Q(j*i);j=i==Q(0)?Q(1.0000000150474662e30):Q(Q(1)/i);N[e+36>>2]=j;J[e+52>>2]=j<Q(0);N[e+64>>2]=Q(g*Q(N[e+92>>2]-N[e+76>>2]))+Q(Q(i*Q(N[e+84>>2]-N[e+68>>2]))+Q(h*Q(N[e+88>>2]-N[e+72>>2])));a=J[a+68>>2];J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;J[e>>2]=0;J[e+4>>2]=0;ia[J[J[a>>2]+24>>2]](a,b,c,e+32|0,e+16|0,e);xa();ga=e+256|0}function Vb(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0;if(b){n=N[c+24>>2];o=N[c+20>>2];p=N[c+16>>2];q=N[c+8>>2];r=N[c+4>>2];s=N[c>>2];J[8369]=J[8369]+1;a=ia[J[6782]](256,16)|0;J[a>>2]=b;f=64;c=1;while(1){a:{b:{c:{b=c-1|0;k=b<<2;i=J[k+a>>2];d:{if(!(N[i>>2]<=p)|!(N[i+16>>2]>=s)|(!(N[i+4>>2]<=o)|!(N[i+20>>2]>=r))){break d}if(!(N[i+8>>2]<=n)|!(N[i+24>>2]>=q)){break d}if(J[i+40>>2]){if((b|0)!=(f|0)){break c}g=f?f<<1:1;if((g|0)<(c|0)){break c}if(g){J[8369]=J[8369]+1;b=ia[J[6782]](g<<2,16)|0}else{b=0}e:{if(!f){break e}l=0;e=0;if(f-1>>>0>=3){t=f&-4;h=0;while(1){j=e<<2;J[j+b>>2]=J[a+j>>2];m=j|4;J[m+b>>2]=J[a+m>>2];m=j|8;J[m+b>>2]=J[a+m>>2];j=j|12;J[j+b>>2]=J[a+j>>2];e=e+4|0;h=h+4|0;if((t|0)!=(h|0)){continue}break}}f=f&3;if(!f){break e}while(1){h=e<<2;J[h+b>>2]=J[a+h>>2];e=e+1|0;l=l+1|0;if((f|0)!=(l|0)){continue}break}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}break b}ia[J[J[d>>2]+12>>2]](d,i)}break a}g=f;b=a}J[b+k>>2]=J[i+36>>2];f:{if((c|0)!=(g|0)){f=g;a=b;break f}f=c<<1;if((f|0)<=(c|0)){f=c;a=b;break f}J[8369]=J[8369]+1;a=ia[J[6782]](c<<3,16)|0;g:{if((c|0)<=0){break g}l=0;g=0;if(c-1>>>0>=3){j=c&-4;h=0;while(1){e=g<<2;J[e+a>>2]=J[b+e>>2];k=e|4;J[k+a>>2]=J[b+k>>2];k=e|8;J[k+a>>2]=J[b+k>>2];e=e|12;J[e+a>>2]=J[b+e>>2];g=g+4|0;h=h+4|0;if((j|0)!=(h|0)){continue}break}}e=c&3;if(!e){break g}while(1){h=g<<2;J[h+a>>2]=J[b+h>>2];g=g+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[(c<<2)+a>>2]=J[i+40>>2];b=c+1|0}c=b;if((c|0)>0){continue}break}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}}function $y(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0);c=K[a+8|0]?b:c;if(J[J[c+4>>2]+4>>2]-21>>>0<=8){s=J[J[c+8>>2]+192>>2];k=Q(ia[J[J[s>>2]+48>>2]](s));i=ga-32|0;ga=i;b=a+12|0;J[b+52>>2]=d;J[b+44>>2]=e;N[b+56>>2]=k+Q(.05999999865889549);d=J[b+4>>2];ia[J[J[d>>2]+28>>2]](d,i+16|0,i);c=J[c+12>>2];k=N[c+20>>2];m=N[c+36>>2];n=N[c+24>>2];j=N[c+40>>2];v=N[c+56>>2];w=N[c+52>>2];t=N[c+4>>2];o=N[c+8>>2];l=N[b+56>>2];h=N[c+32>>2];f=N[c>>2];r=N[c+48>>2];g=N[c+16>>2];p=N[i+24>>2];q=N[i+8>>2];u=N[i+16>>2];A=N[i>>2];B=N[i+20>>2];C=N[i+4>>2];J[b+40>>2]=0;J[b+24>>2]=0;x=Q(Q(q+p)*Q(.5));y=Q(Q(A+u)*Q(.5));z=Q(Q(C+B)*Q(.5));r=Q(-r);D=Q(Q(Q(h*x)+Q(Q(f*y)+Q(g*z)))+Q(Q(Q(f*r)-Q(g*w))-Q(h*v)));p=Q(l+Q(Q(q-p)*Q(.5)));E=Q(f*Q(0));F=Q(g*Q(0));G=Q(p*Q(R(Q(h+Q(E+F)))));q=Q(l+Q(Q(A-u)*Q(.5)));h=Q(h*Q(0));f=Q(q*Q(R(Q(h+Q(f+F)))));g=Q(R(Q(h+Q(E+g))));h=Q(l+Q(Q(C-B)*Q(.5)));f=Q(G+Q(f+Q(g*h)));N[b+28>>2]=D+f;N[b+12>>2]=D-f;f=Q(Q(Q(x*j)+Q(Q(y*o)+Q(z*n)))+Q(Q(Q(o*r)-Q(n*w))-Q(j*v)));g=Q(o*Q(0));l=Q(n*Q(0));u=Q(p*Q(R(Q(j+Q(g+l)))));j=Q(j*Q(0));n=Q(u+Q(Q(q*Q(R(Q(j+Q(o+l)))))+Q(Q(R(Q(j+Q(g+n))))*h)));N[b+36>>2]=f+n;j=Q(Q(Q(x*m)+Q(Q(y*t)+Q(z*k)))+Q(Q(Q(t*r)-Q(k*w))-Q(m*v)));o=Q(t*Q(0));g=Q(k*Q(0));l=Q(p*Q(R(Q(m+Q(o+g)))));m=Q(m*Q(0));k=Q(l+Q(Q(q*Q(R(Q(m+Q(t+g)))))+Q(Q(R(Q(m+Q(o+k))))*h)));N[b+32>>2]=j+k;N[b+20>>2]=f-n;N[b+16>>2]=j-k;ga=i+32|0;ia[J[J[s>>2]+64>>2]](s,b,a+24|0,a+40|0)}}function sH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0;e=ga-256|0;ga=e;J[e+32>>2]=8216;f=J[b+12>>2];J[e+76>>2]=J[b+8>>2];J[e+80>>2]=f;f=J[b+4>>2];J[e+68>>2]=J[b>>2];J[e+72>>2]=f;f=J[c+12>>2];J[e+92>>2]=J[c+8>>2];J[e+96>>2]=f;f=J[c>>2];m=J[c+4>>2];J[e+104>>2]=0;J[e+108>>2]=0;J[e+112>>2]=0;J[e+116>>2]=0;J[e+124>>2]=0;J[e+128>>2]=0;J[e+120>>2]=1065353216;J[e+132>>2]=0;J[e+136>>2]=0;J[e+140>>2]=1065353216;J[e+144>>2]=0;J[e+84>>2]=f;J[e+88>>2]=m;J[e+248>>2]=d;J[e+100>>2]=1065353216;J[e+244>>2]=a;d=J[b+4>>2];J[e+148>>2]=J[b>>2];J[e+152>>2]=d;d=J[b+12>>2];J[e+156>>2]=J[b+8>>2];J[e+160>>2]=d;J[e+168>>2]=0;J[e+172>>2]=0;J[e+176>>2]=0;J[e+180>>2]=0;J[e+184>>2]=1065353216;J[e+188>>2]=0;J[e+192>>2]=0;J[e+196>>2]=0;J[e+200>>2]=0;J[e+204>>2]=1065353216;J[e+208>>2]=0;J[e+164>>2]=1065353216;d=J[c+12>>2];J[e+220>>2]=J[c+8>>2];J[e+224>>2]=d;d=J[c+4>>2];J[e+212>>2]=J[c>>2];J[e+216>>2]=d;g=Q(N[c+8>>2]-N[b+8>>2]);j=Q(N[c>>2]-N[b>>2]);h=Q(N[c+4>>2]-N[b+4>>2]);i=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(j*j)+Q(h*h))))));g=Q(g*i);k=g==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/g);N[e+44>>2]=k;h=Q(h*i);l=h==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/h);N[e+40>>2]=l;J[e+60>>2]=k<Q(0);J[e+56>>2]=l<Q(0);i=Q(j*i);j=i==Q(0)?Q(0xde0b6b000000000):Q(Q(1)/i);N[e+36>>2]=j;J[e+52>>2]=j<Q(0);N[e+64>>2]=Q(g*Q(N[e+92>>2]-N[e+76>>2]))+Q(Q(i*Q(N[e+84>>2]-N[e+68>>2]))+Q(h*Q(N[e+88>>2]-N[e+72>>2])));a=J[a+68>>2];J[e+24>>2]=0;J[e+28>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;J[e+8>>2]=0;J[e+12>>2]=0;J[e>>2]=0;J[e+4>>2]=0;ia[J[J[a>>2]+24>>2]](a,b,c,e+32|0,e+16|0,e);ga=e+256|0}function uD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=Q(0),l=0,m=0,n=0,o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0);j=ga-2048|0;ga=j;a:{if((d|0)<=0){break a}if(d-1>>>0>=7){i=d&-8;while(1){e=f<<4;J[(e+c|0)+12>>2]=-581039253;J[((e|16)+c|0)+12>>2]=-581039253;J[((e|32)+c|0)+12>>2]=-581039253;J[((e|48)+c|0)+12>>2]=-581039253;J[((e|64)+c|0)+12>>2]=-581039253;J[((e|80)+c|0)+12>>2]=-581039253;J[((e|96)+c|0)+12>>2]=-581039253;J[((e|112)+c|0)+12>>2]=-581039253;f=f+8|0;g=g+8|0;if((i|0)!=(g|0)){continue}break}}e=d&7;if(e){while(1){J[((f<<4)+c|0)+12>>2]=-581039253;f=f+1|0;h=h+1|0;if((e|0)!=(h|0)){continue}break}}if((d|0)<=0){break a}while(1){if((ia[J[J[a>>2]+96>>2]](a)|0)>0){e=m<<4;i=e+c|0;n=b+e|0;l=0;while(1){g=128;b:{c:{if(((ia[J[J[a>>2]+96>>2]](a)|0)-l|0)>127){break c}g=(ia[J[J[a>>2]+96>>2]](a)|0)-l|0;if((g|0)>0){break c}k=Q(-3.4028234663852886e38);h=-1;break b}e=0;if((g|0)!=1){h=g&-2;f=0;while(1){ia[J[J[a>>2]+108>>2]](a,e,(e<<4)+j|0);o=e|1;ia[J[J[a>>2]+108>>2]](a,o,(o<<4)+j|0);e=e+2|0;f=f+2|0;if((h|0)!=(f|0)){continue}break}}if(g&1){ia[J[J[a>>2]+108>>2]](a,e,(e<<4)+j|0)}q=N[n+8>>2];r=N[n+4>>2];s=N[n>>2];e=0;h=-1;k=Q(-3.4028234663852886e38);while(1){f=(e<<4)+j|0;p=Q(Q(N[f+8>>2]*q)+Q(Q(N[f>>2]*s)+Q(r*N[f+4>>2])));f=p>k;k=f?p:k;h=f?e:h;e=e+1|0;if((g|0)!=(e|0)){continue}break}}if(N[i+12>>2]<k){e=(h<<4)+j|0;f=J[e+12>>2];J[i+8>>2]=J[e+8>>2];J[i+12>>2]=f;f=J[e+4>>2];J[i>>2]=J[e>>2];J[i+4>>2]=f;N[i+12>>2]=k}l=l+128|0;if((ia[J[J[a>>2]+96>>2]](a)|0)>(l|0)){continue}break}}m=m+1|0;if((m|0)!=(d|0)){continue}break}}ga=j+2048|0}function Fe(a,b){var c=Q(0),d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0);d=N[((b<<2)+a|0)+1192>>2];f=(b<<6)+a|0;g=N[f+868>>2];h=N[f+872>>2];a:{if(g>=h){break a}if(d<g){c=Pa(Q(g-d),Q(6.2831854820251465));b:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break b}if(!(c>Q(3.1415927410125732))){break b}c=Q(c+Q(-6.2831854820251465))}i=Q(R(c));c=Pa(Q(h-d),Q(6.2831854820251465));c:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break c}if(!(c>Q(3.1415927410125732))){break c}c=Q(c+Q(-6.2831854820251465))}d=i<Q(R(c))?d:Q(d+Q(6.2831854820251465));break a}if(!(d>h)){break a}c=Pa(Q(d-h),Q(6.2831854820251465));d:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break d}if(!(c>Q(3.1415927410125732))){break d}c=Q(c+Q(-6.2831854820251465))}i=Q(R(c));c=Pa(Q(d-g),Q(6.2831854820251465));e:{if(c<Q(-3.1415927410125732)){c=Q(c+Q(6.2831854820251465));break e}if(!(c>Q(3.1415927410125732))){break e}c=Q(c+Q(-6.2831854820251465))}d=i>Q(R(c))?Q(d+Q(-6.2831854820251465)):d}N[f+920>>2]=d;f:{if(g>h){f=0;J[((b<<6)+a|0)+924>>2]=0;break f}if(d<g){e=(b<<6)+a|0;c=Q(d-g);N[e+916>>2]=c;f=1;J[e+924>>2]=1;if(c>Q(3.1415927410125732)){N[e+916>>2]=c+Q(-6.2831854820251465);break f}if(!(c<Q(-3.1415927410125732))){break f}N[e+916>>2]=c+Q(6.2831854820251465);break f}e=(b<<6)+a|0;if(d>h){J[e+924>>2]=2;c=Q(d-h);N[e+916>>2]=c;if(c>Q(3.1415927410125732)){N[e+916>>2]=c+Q(-6.2831854820251465);f=1;break f}f=1;if(!(c<Q(-3.1415927410125732))){break f}N[e+916>>2]=c+Q(6.2831854820251465);break f}f=0;J[e+924>>2]=0}return K[((b<<6)+a|0)+912|0]!=0|f}function uz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=0,f=Q(0),g=0,h=0,i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0);t=J[a+832>>2];if((t|0)>0){a=J[a+840>>2];while(1){u=Q(0);v=Q(0);w=Q(0);d=P(p,56)+a|0;j=J[d>>2];q=N[j+16>>2];f=N[d+8>>2];e=J[d+4>>2];g=J[e+8>>2];i=N[d+12>>2];h=J[e+12>>2];b=N[d+16>>2];e=J[e+16>>2];k=Q(Q(Q(f*N[g+16>>2])+Q(i*N[h+16>>2]))+Q(b*N[e+16>>2]));l=Q(Q(q-N[j+32>>2])-Q(k-Q(Q(Q(f*N[g+32>>2])+Q(i*N[h+32>>2]))+Q(b*N[e+32>>2]))));n=N[d+32>>2];r=N[j+8>>2];m=Q(Q(Q(N[g+8>>2]*f)+Q(N[h+8>>2]*i))+Q(N[e+8>>2]*b));x=Q(Q(r-N[j+24>>2])-Q(m-Q(Q(Q(f*N[g+24>>2])+Q(i*N[h+24>>2]))+Q(b*N[e+24>>2]))));o=N[d+24>>2];s=N[j+12>>2];c=Q(Q(Q(f*N[g+12>>2])+Q(i*N[h+12>>2]))+Q(b*N[e+12>>2]));b=Q(Q(s-N[j+28>>2])-Q(c-Q(Q(Q(f*N[g+28>>2])+Q(i*N[h+28>>2]))+Q(b*N[e+28>>2]))));f=N[d+28>>2];i=Q(Q(l*n)+Q(Q(x*o)+Q(b*f)));if(i<Q(0)){c=Q(N[d+40>>2]-Q(Q(Q(n*q)+Q(Q(o*r)+Q(s*f)))-Q(Q(n*k)+Q(Q(o*m)+Q(c*f)))));w=Q(Q(n*c)+Q(0));u=Q(Q(o*c)+Q(0));v=Q(Q(f*c)+Q(0))}m=N[d+48>>2];c=N[d+44>>2];k=Q(w-Q(Q(l-Q(n*i))*c));N[j+16>>2]=q+Q(m*k);l=Q(v-Q(c*Q(b-Q(f*i))));N[j+12>>2]=s+Q(m*l);c=Q(u-Q(c*Q(x-Q(o*i))));N[j+8>>2]=r+Q(m*c);b=Q(N[d+52>>2]*N[d+8>>2]);N[g+8>>2]=N[g+8>>2]-Q(c*b);N[g+12>>2]=N[g+12>>2]-Q(l*b);N[g+16>>2]=N[g+16>>2]-Q(k*b);b=Q(N[d+52>>2]*N[d+12>>2]);N[h+8>>2]=N[h+8>>2]-Q(c*b);N[h+12>>2]=N[h+12>>2]-Q(l*b);N[h+16>>2]=N[h+16>>2]-Q(k*b);b=Q(N[d+52>>2]*N[d+16>>2]);N[e+8>>2]=N[e+8>>2]-Q(c*b);N[e+12>>2]=N[e+12>>2]-Q(l*b);N[e+16>>2]=N[e+16>>2]-Q(k*b);p=p+1|0;if((t|0)!=(p|0)){continue}break}}}function vz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0);m=ga-16|0;ga=m;c=N[a+452>>2];d=J[a+192>>2];r=Q(ia[J[J[d>>2]+48>>2]](d));s=J[a+812>>2];if((s|0)>0){while(1){d=J[a+820>>2]+P(o,104)|0;g=J[d>>2];k=J[g+236>>2]<<30>>31&g;a:{if(!k){j=Q(0);e=Q(0);f=Q(0);break a}e=N[k+332>>2];f=N[d+84>>2];h=N[d+80>>2];l=N[k+336>>2];j=Q(c*Q(Q(Q(e*f)-Q(h*l))+N[k+312>>2]));n=N[k+328>>2];i=Q(n*h);h=N[d+76>>2];e=Q(c*Q(Q(i-Q(h*e))+N[k+320>>2]));f=Q(c*Q(Q(Q(l*h)-Q(f*n))+N[k+316>>2]))}g=J[d+24>>2];n=N[g+16>>2];i=Q(Q(n-N[g+32>>2])-e);e=N[d+12>>2];t=N[g+8>>2];p=Q(Q(t-N[g+24>>2])-j);j=N[d+4>>2];u=N[g+12>>2];q=Q(Q(u-N[g+28>>2])-f);f=N[d+8>>2];h=Q(Q(i*e)+Q(Q(p*j)+Q(q*f)));b:{if(!(h<=Q(1.1920928955078125e-7))){break b}v=N[d+20>>2];w=N[d+36>>2];x=N[d+28>>2];y=N[d+32>>2];z=N[d+52>>2];A=N[d+44>>2];B=N[d+48>>2];C=N[d+68>>2];D=N[d+60>>2];E=N[d- -64>>2];l=N[d+96>>2];F=N[d+100>>2];J[m+12>>2]=0;G=Q(i-Q(l*Q(i-Q(e*h))));i=Q(v+Q(Q(n*e)+Q(Q(t*j)+Q(u*f))));i=Q(F*(i<r?i:r));e=Q(Q(G+Q(i*e))*b);j=Q(Q(Q(p-Q(l*Q(p-Q(j*h))))+Q(j*i))*b);f=Q(Q(Q(q-Q(l*Q(q-Q(f*h))))+Q(i*f))*b);h=Q(Q(C*e)+Q(Q(D*j)+Q(E*f)));N[m+8>>2]=h;l=Q(Q(z*e)+Q(Q(A*j)+Q(f*B)));N[m+4>>2]=l;e=Q(Q(w*e)+Q(Q(x*j)+Q(f*y)));N[m>>2]=e;f=e;e=N[d+92>>2];N[g+8>>2]=N[g+8>>2]-Q(f*e);N[g+12>>2]=N[g+12>>2]-Q(l*e);N[g+16>>2]=n-Q(h*e);if(!k){break b}ub(k,m,d+76|0)}o=o+1|0;if((s|0)!=(o|0)){continue}break}}ga=m+16|0}function Ro(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=Q(0);g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;H[g+11|0]=f;j=J[g+24>>2];m=J[g+20>>2];e=J[g+16>>2];q=H[g+11|0]&1;b=0;d=0;c=0;h=J[g+12>>2];o=P(h,3);a=1;if((h|0)>0){a=(o|0)>1?o:1;k=a&3;if(a-1>>>0>=3){i=a&2147483644;a=0;while(1){f=d<<2;l=J[e+(f|12)>>2];n=J[e+(f|8)>>2];p=J[e+(f|4)>>2];f=J[e+f>>2];b=(b|0)<(f|0)?f:b;b=(b|0)<(p|0)?p:b;b=(b|0)<(n|0)?n:b;b=(b|0)<(l|0)?l:b;d=d+4|0;a=a+4|0;if((i|0)!=(a|0)){continue}break}}if(k){while(1){a=J[e+(d<<2)>>2];b=(a|0)>(b|0)?a:b;d=d+1|0;c=c+1|0;if((k|0)!=(c|0)){continue}break}}a=b+1|0}c=0;b=P(a,a);if(b){J[8369]=J[8369]+1;c=ia[J[6782]](b,16)|0;qa(c,0,b)}b=P(a,3);i=(((b|0)>3?b:3)-1>>>0)/3|0;J[8369]=J[8369]+1;k=ia[J[6782]](a<<4,16)|0;d=0;b=0;while(1){f=m+(d<<2)|0;l=J[f+4>>2];n=J[f>>2];r=N[f+8>>2];f=k+(b<<4)|0;J[f+12>>2]=0;N[f+8>>2]=r;J[f>>2]=n;J[f+4>>2]=l;d=d+3|0;f=(b|0)!=(i|0);b=b+1|0;if(f){continue}break}m=0;J[8369]=J[8369]+1;b=Ac(ia[J[6782]](1252,16)|0,j,a,k,0);if((h|0)>0){while(1){f=e+(m<<2)|0;d=J[f+4>>2];h=J[f>>2];j=P(h,a);f=J[f+8>>2];i=(j+f|0)+c|0;if(!K[i|0]){H[i|0]=1;H[(h+P(a,f)|0)+c|0]=1;Ja(b,f,h,0,0)}i=P(a,d);l=(i+h|0)+c|0;if(!K[l|0]){H[l|0]=1;H[(d+j|0)+c|0]=1;Ja(b,h,d,0,0)}j=(d+P(a,f)|0)+c|0;if(!K[j|0]){H[j|0]=1;H[(f+i|0)+c|0]=1;Ja(b,d,f,0,0)}rb(b,h,d,f,0);m=m+3|0;if((o|0)>(m|0)){continue}break}}if(q){nk(b)}if(k){J[8370]=J[8370]+1;ia[J[6783]](k)}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}ga=g+32|0;return b|0}function Vl(a){var b=0,c=0,d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);e=J[a+28>>2];if((e|0)<=0){return 1}f=N[a+84>>2];g=N[a+68>>2];h=Q(f+g);i=N[a+88>>2];d=N[a+72>>2];j=Q(i+d);i=Q(d-i);f=Q(g-f);d=N[a+80>>2];k=N[a+64>>2];g=Q(d+k);d=Q(k-d);a=J[a+36>>2];a:{b:{while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(j*N[b+28>>2])+Q(Q(g*N[b+20>>2])+Q(h*N[b+24>>2]))))>Q(0)){break b}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(i*N[b+28>>2])+Q(Q(g*N[b+20>>2])+Q(h*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(j*N[b+28>>2])+Q(Q(g*N[b+20>>2])+Q(f*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(i*N[b+28>>2])+Q(Q(g*N[b+20>>2])+Q(f*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(j*N[b+28>>2])+Q(Q(d*N[b+20>>2])+Q(h*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(i*N[b+28>>2])+Q(Q(d*N[b+20>>2])+Q(h*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;if(Q(N[b+32>>2]+Q(Q(j*N[b+28>>2])+Q(Q(d*N[b+20>>2])+Q(f*N[b+24>>2]))))>Q(0)){break a}c=c+1|0;if((e|0)!=(c|0)){continue}break}c=0;while(1){b=a+P(c,36)|0;h=Q(N[b+32>>2]+Q(Q(i*N[b+28>>2])+Q(Q(d*N[b+20>>2])+Q(f*N[b+24>>2]))));if(!(h>Q(0))){c=c+1|0;if((e|0)!=(c|0)){continue}}break}return!(h>Q(0))}return 0}return 0}function Xk(a,b,c,d){var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);ug(a,4,b);J[a>>2]=19708;b=J[c+12>>2];J[a+560>>2]=J[c+8>>2];J[a+564>>2]=b;b=J[c+4>>2];J[a+552>>2]=J[c>>2];J[a+556>>2]=b;b=J[c+28>>2];J[a+576>>2]=J[c+24>>2];J[a+580>>2]=b;b=J[c+20>>2];J[a+568>>2]=J[c+16>>2];J[a+572>>2]=b;b=J[c+44>>2];J[a+592>>2]=J[c+40>>2];J[a+596>>2]=b;b=J[c+36>>2];J[a+584>>2]=J[c+32>>2];J[a+588>>2]=b;b=J[c+60>>2];J[a+608>>2]=J[c+56>>2];J[a+612>>2]=b;b=J[c+52>>2];J[a+600>>2]=J[c+48>>2];J[a+604>>2]=b;b=J[c+12>>2];J[a+624>>2]=J[c+8>>2];J[a+628>>2]=b;b=J[c+4>>2];J[a+616>>2]=J[c>>2];J[a+620>>2]=b;b=J[c+20>>2];J[a+632>>2]=J[c+16>>2];J[a+636>>2]=b;b=J[c+28>>2];J[a+640>>2]=J[c+24>>2];J[a+644>>2]=b;b=J[c+36>>2];J[a+648>>2]=J[c+32>>2];J[a+652>>2]=b;b=J[c+44>>2];J[a+656>>2]=J[c+40>>2];J[a+660>>2]=b;b=J[c+52>>2];J[a+664>>2]=J[c+48>>2];J[a+668>>2]=b;b=J[c+60>>2];J[a+672>>2]=J[c+56>>2];J[a+676>>2]=b;J[a+688>>2]=0;J[a+692>>2]=-1082130432;J[a+696>>2]=1063675494;J[a+700>>2]=1050253722;J[a+704>>2]=1065353216;J[a+708>>2]=0;J[a+712>>2]=0;H[a+716|0]=0;H[a+740|0]=d;J[a+748>>2]=0;J[a+736>>2]=16777216;b=J[a+28>>2];h=N[b+52>>2];i=N[b+8>>2];j=N[b+12>>2];k=N[b+56>>2];l=N[b+28>>2];m=N[b+20>>2];n=N[b+24>>2];o=N[b+60>>2];e=N[a+608>>2];p=N[b+44>>2];f=N[a+600>>2];q=N[b+36>>2];g=N[a+604>>2];r=N[b+40>>2];s=N[b+4>>2];N[a+732>>2]=d?Q(-1):Q(1);J[a+676>>2]=0;N[a+672>>2]=o+Q(Q(e*p)+Q(Q(f*q)+Q(g*r)));N[a+668>>2]=k+Q(Q(e*l)+Q(Q(f*m)+Q(g*n)));N[a+664>>2]=h+Q(Q(e*j)+Q(Q(f*s)+Q(g*i)))}function WH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=ga-32|0;ga=d;J[d+20>>2]=0;J[d+12>>2]=0;J[d+16>>2]=0;H[d+24|0]=1;a:{if(J[a+8>>2]<=0){break a}while(1){k=J[a+16>>2];b:{if((c|0)!=(e|0)){break b}c=e?e<<1:1;if((c|0)<=(e|0)){c=e;break b}f=0;j=0;if(c){J[8369]=J[8369]+1;j=ia[J[6782]](c<<4,16)|0}if((e|0)>0){while(1){g=f<<4;h=g+j|0;g=g+J[d+20>>2]|0;J[h>>2]=J[g>>2];J[h+4>>2]=J[g+4>>2];J[h+8>>2]=J[g+8>>2];J[h+12>>2]=J[g+12>>2];f=f+1|0;if((f|0)!=(e|0)){continue}break}}e=J[d+20>>2];if(!(e?!e|!K[d+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](e)}J[d+20>>2]=j;H[d+24|0]=1;J[d+16>>2]=c;c=J[d+12>>2]}c=J[d+20>>2]+(c<<4)|0;e=k+(i<<4)|0;J[c>>2]=J[e>>2];J[c+4>>2]=J[e+4>>2];J[c+8>>2]=J[e+8>>2];J[c+12>>2]=J[e+12>>2];f=J[d+12>>2];c=f+1|0;J[d+12>>2]=c;i=i+1|0;if((i|0)<J[a+8>>2]){e=J[d+16>>2];continue}break}e=0;if((f|0)<0){break a}h=f+1|0;g=h&1;j=J[d+20>>2];if(f){h=h&-2;f=0;while(1){i=e<<4;k=i+j|0;ia[J[J[a>>2]+12>>2]](a,J[k>>2],J[k+4>>2],b)|0;i=j+(i|16)|0;ia[J[J[a>>2]+12>>2]](a,J[i>>2],J[i+4>>2],b)|0;e=e+2|0;f=f+2|0;if((h|0)!=(f|0)){continue}break}}if(!g){break a}e=j+(e<<4)|0;ia[J[J[a>>2]+12>>2]](a,J[e>>2],J[e+4>>2],b)|0}if(J[a+56>>2]>0){b=J[a- -64>>2];c=0;while(1){J[b+(c<<2)>>2]=-1;c=c+1|0;if((c|0)<J[a+56>>2]){continue}break}c=J[d+12>>2]}if((c|0)>=2){lc(d+8|0,d,0,c-1|0);c=J[d+12>>2]}if((c|0)>0){c=0;while(1){b=J[d+20>>2]+(c<<4)|0;ia[J[J[a>>2]+8>>2]](a,J[b>>2],J[b+4>>2])|0;c=c+1|0;if((c|0)<J[d+12>>2]){continue}break}}a=J[d+20>>2];if(!(a?!a|!K[d+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=d+32|0}function Hp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=Q(0),i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=0,u=0,v=0,w=0,x=Q(0);g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;J[g+8>>2]=f;r=J[g+24>>2];s=J[g+20>>2];t=J[g+16>>2];u=J[g+12>>2];a=J[g+28>>2];e=J[g+8>>2];c=0;d=0;f=ga-96|0;ga=f;qa(f,0,96);e=e?e:J[J[a+880>>2]>>2];b=J[a+772>>2];a:{if((b|0)!=J[a+776>>2]){break a}j=b?b<<1:1;if((j|0)<=(b|0)){break a}if(j){J[8369]=J[8369]+1;c=ia[J[6782]](P(j,104),16)|0;b=J[a+772>>2]}b:{if((b|0)<=0){break b}v=b&1;if((b|0)!=1){w=b&-2;b=0;while(1){i=P(d,104);sa(i+c|0,i+J[a+780>>2]|0,104);i=P(d|1,104);sa(i+c|0,i+J[a+780>>2]|0,104);d=d+2|0;b=b+2|0;if((w|0)!=(b|0)){continue}break}}if(!v){break b}b=P(d,104);sa(b+c|0,b+J[a+780>>2]|0,104)}b=J[a+780>>2];if(!(b?!b|!K[a+784|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+780>>2]=c;H[a+784|0]=1;J[a+776>>2]=j;b=J[a+772>>2]}b=J[a+780>>2]+P(b,104)|0;J[b+4>>2]=e;J[b>>2]=0;sa(b+8|0,f,96);J[a+772>>2]=J[a+772>>2]+1;ga=f+96|0;b=J[a+780>>2]+P(J[a+772>>2],104)|0;c=J[a+720>>2]+P(r,104)|0;J[b-96>>2]=c;d=J[a+720>>2]+P(s,104)|0;J[b-92>>2]=d;e=J[a+720>>2]+P(t,104)|0;J[b-88>>2]=e;f=J[a+720>>2]+P(u,104)|0;J[b-84>>2]=f;h=N[c+16>>2];m=Q(N[f+16>>2]-h);k=N[c+8>>2];n=Q(N[e+8>>2]-k);l=N[c+12>>2];o=Q(N[f+12>>2]-l);p=Q(N[f+8>>2]-k);q=Q(N[e+12>>2]-l);x=Q(Q(N[d+16>>2]-h)*Q(Q(n*o)-Q(p*q)));h=Q(N[e+16>>2]-h);N[b-80>>2]=x+Q(Q(Q(N[d+8>>2]-k)*Q(Q(q*m)-Q(o*h)))+Q(Q(N[d+12>>2]-l)*Q(Q(h*p)-Q(m*n))));H[a+924|0]=1;ga=g+32|0}function cg(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=Q(0),j=0;f=(D(b),x(2));g=(f<<1)+16777216>>>0<16777217;a:{b:{c:{c=(D(a),x(2));d:{if(c-2139095040>>>0>=2164260864){if(g){break d}break b}if(!g){break c}}i=Q(1);if((c|0)==1065353216){break a}d=f<<1;if(!d){break a}g=d>>>0<4278190081;d=c<<1;if(!(g&d>>>0<=4278190080)){return Q(a+b)}if((d|0)==2130706432){break a}return((f^-1)>>>31|0)==(d>>>0<2130706432|0)?Q(0):Q(b*b)}if((c<<1)+16777216>>>0<16777217){i=Q(a*a);if((c|0)<0){i=(Lj(f)|0)==1?Q(-i):i}if((f|0)>=0){break a}d=ga-16|0;N[d+12>>2]=Q(1)/i;return N[d+12>>2]}if((c|0)<0){d=Lj(f);if(!d){a=Q(a-a);return Q(a/a)}c=c&2147483647;d=((d|0)==1)<<16}if(c>>>0>8388607){break b}c=((D(Q(a*Q(8388608))),x(2))&2147483647)-192937984|0}f=c-1060306944|0;g=f>>>15&240;e=+(z(2,c-(f&-8388608)|0),E())*O[g+26472>>3]+-1;h=e*e;e=((O[3341]*e+O[3342])*(h*h)+((O[3343]*e+O[3344])*h+(O[3345]*e+(O[g+26480>>3]+ +(f>>23)))))*+b;C(+e);c=x(1)|0;x(0)|0;e:{c=c&2147450880;if((c|0)==1079967744|c>>>0<1079967744){break e}if(e>127.99999995700433){c=ga-16|0;N[c+12>>2]=d?Q(-1.5845632502852868e29):Q(1.5845632502852868e29);return Q(N[c+12>>2]*Q(1.5845632502852868e29))}if(!(e<=-150)){break e}c=ga-16|0;N[c+12>>2]=d?Q(-2.524354896707238e-29):Q(2.524354896707238e-29);return Q(N[c+12>>2]*Q(2.524354896707238e-29))}h=O[3300];j=h+e;e=e-(j-h);h=(O[3301]*e+O[3302])*(e*e)+(O[3303]*e+1);C(+j);x(1)|0;g=x(0)|0;f=d+g|0;d=f<<15;f=((g&31)<<3)+26144|0;g=J[f>>2];c=g;d=J[f+4>>2]+d|0;z(0,c|0);z(1,(c>>>0<c>>>0?d+1|0:d)|0);i=Q(h*+B())}return i}function RB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);i=ga-32|0;ga=i;h=N[b+20>>2];r=N[b+36>>2];s=N[b+24>>2];x=N[b+40>>2];j=N[b+4>>2];t=N[b+32>>2];o=N[b+8>>2];p=N[b>>2];u=N[b+16>>2];J[i+28>>2]=0;g=Q(u-p);k=Q(r-j);e=Q(t-p);l=Q(h-j);f=Q(Q(g*k)-Q(e*l));m=l;l=Q(x-o);n=Q(s-o);k=Q(Q(m*l)-Q(k*n));g=Q(Q(n*e)-Q(l*g));e=Q(Q(o*f)+Q(Q(p*k)+Q(j*g)));v=N[a+12>>2];m=N[a+4>>2];q=N[a+8>>2];l=Q(Q(Q(f*v)+Q(Q(k*m)+Q(g*q)))-e);w=N[a+28>>2];y=N[a+20>>2];z=N[a+24>>2];e=Q(Q(Q(f*w)+Q(Q(k*y)+Q(g*z)))-e);a:{if(Q(l*e)>=Q(0)){break a}b=J[a+36>>2];if(b&1&l<=Q(0)){break a}e=Q(l/Q(l-e));if(!(e<N[a+40>>2])){break a}n=Q(Q(1)-e);m=Q(Q(n*m)+Q(y*e));p=Q(p-m);q=Q(Q(n*q)+Q(z*e));h=Q(h-q);u=Q(u-m);j=Q(j-q);n=Q(Q(n*v)+Q(w*e));s=Q(s-n);o=Q(o-n);w=Q(Q(f*f)+Q(Q(k*k)+Q(g*g)));v=Q(w*Q(-9999999747378752e-20));if(!(Q(Q(Q(Q(p*h)-Q(u*j))*f)+Q(Q(Q(Q(j*s)-Q(h*o))*k)+Q(g*Q(Q(o*u)-Q(s*p)))))>=v)){break a}r=Q(r-q);t=Q(t-m);q=Q(Q(Q(u*r)-Q(t*h))*f);m=h;h=Q(x-n);if(!(v<=Q(q+Q(Q(Q(Q(m*h)-Q(r*s))*k)+Q(g*Q(Q(s*t)-Q(h*u))))))|!(v<=Q(Q(Q(Q(t*j)-Q(p*r))*f)+Q(Q(Q(Q(r*o)-Q(j*h))*k)+Q(g*Q(Q(h*p)-Q(o*t))))))){break a}h=f;f=Q(Q(1)/Q(Y(w)));j=Q(h*f);N[i+24>>2]=j;g=Q(g*f);N[i+20>>2]=g;f=Q(k*f);N[i+16>>2]=f;if(!(!(l<=Q(0))|b&2)){J[i+12>>2]=0;N[i+8>>2]=-j;N[i+4>>2]=-g;N[i>>2]=-f;N[a+40>>2]=ia[J[J[a>>2]+12>>2]](a,i,e,c,d);break a}N[a+40>>2]=ia[J[J[a>>2]+12>>2]](a,i+16|0,e,c,d)}ga=i+32|0}function hc(a,b,c,d){var e=Q(0),f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0);f=ga+-64|0;ga=f;p=N[b+24>>2];q=N[b+20>>2];r=N[b+40>>2];s=N[b+36>>2];j=N[a+40>>2];k=N[a+20>>2];n=N[a+36>>2];l=N[a+24>>2];t=N[b+8>>2];u=N[b>>2];v=N[b+4>>2];w=N[b+16>>2];x=N[b+32>>2];g=N[a+8>>2];h=N[a+4>>2];o=N[a+32>>2];m=N[a+16>>2];i=N[a>>2];J[f+60>>2]=0;J[f+44>>2]=0;z=Q(Q(m*n)-Q(o*k));A=Q(Q(k*j)-Q(n*l));B=Q(Q(l*o)-Q(j*m));e=Q(Q(1)/Q(Q(g*z)+Q(Q(i*A)+Q(h*B))));y=Q(Q(Q(i*k)-Q(m*h))*e);k=Q(Q(Q(h*l)-Q(k*g))*e);l=Q(Q(Q(g*m)-Q(l*i))*e);N[f+56>>2]=Q(r*y)+Q(Q(x*k)+Q(s*l));m=Q(Q(Q(h*o)-Q(n*i))*e);h=Q(Q(Q(g*n)-Q(j*h))*e);g=Q(Q(Q(i*j)-Q(o*g))*e);N[f+52>>2]=Q(r*m)+Q(Q(x*h)+Q(s*g));N[f+40>>2]=Q(y*p)+Q(Q(k*w)+Q(l*q));N[f+36>>2]=Q(m*p)+Q(Q(h*w)+Q(g*q));J[f+28>>2]=0;i=Q(z*e);j=Q(A*e);e=Q(B*e);N[f+48>>2]=Q(r*i)+Q(Q(x*j)+Q(s*e));N[f+32>>2]=Q(i*p)+Q(Q(j*w)+Q(e*q));N[f+24>>2]=Q(y*t)+Q(Q(k*u)+Q(v*l));N[f+20>>2]=Q(m*t)+Q(Q(h*u)+Q(v*g));N[f+16>>2]=Q(i*t)+Q(Q(j*u)+Q(v*e));Na(f+16|0,f);j=N[f+12>>2];g=N[f+8>>2];i=N[f>>2];h=N[f+4>>2];e=Q(Q(1)/Q(Y(Q(Q(j*j)+Q(Q(g*g)+Q(Q(i*i)+Q(h*h)))))));g=Q(g*e);N[f+8>>2]=g;h=Q(h*e);N[f+4>>2]=h;i=Q(i*e);N[f>>2]=i;e=qb(Q(T(Q(U(Q(j*e),Q(-1))),Q(1))));N[d>>2]=e+e;J[c+12>>2]=0;e=Q(Q(g*g)+Q(Q(i*i)+Q(h*h)));a:{if(e<Q(1.4210854715202004e-14)){J[c>>2]=1065353216;J[c+4>>2]=0;e=Q(0);break a}e=Q(Q(1)/Q(Y(e)));N[c+4>>2]=h*e;N[c>>2]=i*e;e=Q(g*e)}N[c+8>>2]=e;ga=f- -64|0}function cD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a:{b:{c:{switch(J[a+92>>2]-2|0){case 0:b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;a=a+112|0;break b;case 1:d:{switch(b|0){case 0:b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;a=a+112|0;break b;case 1:b=J[a+124>>2];J[c+8>>2]=J[a+120>>2];J[c+12>>2]=b;b=J[a+116>>2];J[c>>2]=J[a+112>>2];J[c+4>>2]=b;a=a+128|0;break b;case 2:break d;default:break a}}b=J[a+140>>2];J[c+8>>2]=J[a+136>>2];J[c+12>>2]=b;b=J[a+132>>2];J[c>>2]=J[a+128>>2];J[c+4>>2]=b;a=a+96|0;break b;case 2:break c;default:break a}}e:{switch(b|0){case 0:b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;a=a+112|0;break b;case 1:b=J[a+124>>2];J[c+8>>2]=J[a+120>>2];J[c+12>>2]=b;b=J[a+116>>2];J[c>>2]=J[a+112>>2];J[c+4>>2]=b;a=a+128|0;break b;case 2:b=J[a+140>>2];J[c+8>>2]=J[a+136>>2];J[c+12>>2]=b;b=J[a+132>>2];J[c>>2]=J[a+128>>2];J[c+4>>2]=b;a=a+96|0;break b;case 3:b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;a=a+144|0;break b;case 4:b=J[a+124>>2];J[c+8>>2]=J[a+120>>2];J[c+12>>2]=b;b=J[a+116>>2];J[c>>2]=J[a+112>>2];J[c+4>>2]=b;a=a+144|0;break b;case 5:break e;default:break a}}b=J[a+140>>2];J[c+8>>2]=J[a+136>>2];J[c+12>>2]=b;b=J[a+132>>2];J[c>>2]=J[a+128>>2];J[c+4>>2]=b;a=a+144|0}b=J[a+4>>2];J[d>>2]=J[a>>2];J[d+4>>2]=b;b=J[a+12>>2];J[d+8>>2]=J[a+8>>2];J[d+12>>2]=b}}function KG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=0,o=0;e=ga-128|0;ga=e;h=N[b>>2];i=N[b+16>>2];l=h<i?h:i;j=N[b+32>>2];a:{if(N[a+28>>2]<(j>l?l:j)){break a}f=!(h>i)<<4;if(N[(j<N[b+f>>2]?f:32)+b>>2]<N[a+12>>2]){break a}h=N[b+8>>2];f=b+24|0;i=N[f>>2];l=h<i?h:i;k=b+40|0;j=N[k>>2];if(N[a+36>>2]<(j>l?l:j)){break a}f=h>i?b+8|0:f;if(N[(j<N[f>>2]?f:k)>>2]<N[a+20>>2]){break a}h=N[b+4>>2];f=b+20|0;i=N[f>>2];l=h<i?h:i;k=b+36|0;j=N[k>>2];if(N[a+32>>2]<(j>l?l:j)){break a}f=h>i?b+4|0:f;if(J[J[J[a+4>>2]+4>>2]+4>>2]>19|N[(j<N[f>>2]?f:k)>>2]<N[a+16>>2]){break a}k=J[a+48>>2];f=e+24|0;o=Bb(f);J[e+28>>2]=1;J[e+24>>2]=2176;g=J[b+12>>2];J[e+88>>2]=J[b+8>>2];J[e+92>>2]=g;g=J[b+4>>2];J[e+80>>2]=J[b>>2];J[e+84>>2]=g;g=J[b+28>>2];J[e+104>>2]=J[b+24>>2];J[e+108>>2]=g;g=J[b+20>>2];J[e+96>>2]=J[b+16>>2];J[e+100>>2]=g;g=J[b+44>>2];J[e+120>>2]=J[b+40>>2];J[e+124>>2]=g;g=J[b+36>>2];J[e+112>>2]=J[b+32>>2];J[e+116>>2]=g;N[e+68>>2]=N[a+56>>2];b=J[a+8>>2];g=J[b+12>>2];J[e+8>>2]=J[b+8>>2];J[e+12>>2]=g;J[e+20>>2]=d;J[e+16>>2]=c;J[e>>2]=b;J[e+4>>2]=f;b=ia[J[J[k>>2]+8>>2]](k,J[a+4>>2],e,J[a+64>>2])|0;f=J[a+44>>2];g=J[f+8>>2];b:{if(J[g+8>>2]==J[J[a+8>>2]+8>>2]){m=f+8|0;n=2;break b}g=J[f+12>>2];m=f+12|0;n=3}J[m>>2]=e;ia[J[J[f>>2]+(n<<2)>>2]](f,c,d);ia[J[J[b>>2]+8>>2]](b,J[a+4>>2],e,J[a+52>>2],J[a+44>>2]);c=J[a+44>>2];J[(J[J[c+8>>2]+8>>2]==J[J[a+8>>2]+8>>2]?8:12)+c>>2]=g;ia[J[J[b>>2]>>2]](b)|0;ia[J[J[k>>2]+60>>2]](k,b);Qa(o)}ga=e+128|0}function Bo(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);f=Q(f);g=Q(g);h=Q(h);i=i|0;j=j|0;k=Q(k);var l=0;l=ga-304|0;ga=l;J[l+300>>2]=a;J[l+296>>2]=b;J[l+292>>2]=c;J[l+288>>2]=d;N[l+284>>2]=e;N[l+280>>2]=f;N[l+276>>2]=g;N[l+272>>2]=h;J[l+268>>2]=i;H[l+267|0]=j;N[l+260>>2]=k;a=J[l+300>>2];J[l+256>>2]=J[l+288>>2];Ub(l+240|0,J[l+292>>2],J[l+288>>2]);N[l+236>>2]=N[l+260>>2]*Q(.01745329238474369);e=Q(Q(N[l+272>>2]-N[l+276>>2])/N[l+236>>2]);a:{if(Q(R(e))<Q(2147483648)){b=~~e;break a}b=-2147483648}J[l+232>>2]=b;if(!J[l+232>>2]){J[l+232>>2]=1}b=J[l+296>>2];c=l+168|0;Xb(c,l+284|0,J[l+256>>2]);N[l+164>>2]=Ta(N[l+276>>2]);d=l+184|0;Ia(d,c,l+164|0);c=l+200|0;va(c,b,d);b=l+128|0;Xb(b,l+280|0,l+240|0);N[l+124>>2]=Sa(N[l+276>>2]);d=l+144|0;Ia(d,b,l+124|0);va(l+216|0,c,d);if(H[l+267|0]&1){ia[J[J[a>>2]+8>>2]](a,J[l+296>>2],l+216|0,J[l+268>>2])}J[l+120>>2]=1;while(1){if(J[l+120>>2]<=J[l+232>>2]){e=N[l+276>>2];N[l+116>>2]=e+Q(Q(Q(N[l+272>>2]-e)*Q(J[l+120>>2]))/Q(J[l+232>>2]));b=J[l+296>>2];c=l+48|0;Xb(c,l+284|0,J[l+256>>2]);N[l+44>>2]=Ta(N[l+116>>2]);d=l- -64|0;Ia(d,c,l+44|0);c=l+80|0;va(c,b,d);b=l+8|0;Xb(b,l+280|0,l+240|0);N[l+4>>2]=Sa(N[l+116>>2]);d=l+24|0;Ia(d,b,l+4|0);b=l+96|0;va(b,c,d);c=l+216|0;ia[J[J[a>>2]+8>>2]](a,c,b,J[l+268>>2]);d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;d=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=d;J[l+120>>2]=J[l+120>>2]+1;continue}break}if(H[l+267|0]&1){ia[J[J[a>>2]+8>>2]](a,J[l+296>>2],l+216|0,J[l+268>>2])}ga=l+304|0}function YH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;J[7393]=J[7393]+1;e=J[b+12>>2]>J[c+12>>2];h=e?b:c;f=J[h+12>>2];i=e?c:b;g=J[i+12>>2];b=f<<16|g;b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;j=J[a+12>>2]-1&(b>>16^b);b=J[J[a+44>>2]+(j<<2)>>2];a:{if((b|0)==-1){break a}k=J[a- -64>>2];e=J[a+16>>2];while(1){c=e+(b<<4)|0;if(!((g|0)==J[J[c>>2]+12>>2]&(f|0)==J[J[c+4>>2]+12>>2])){b=J[(b<<2)+k>>2];if((b|0)!=-1){continue}break a}break}ia[J[J[a>>2]+32>>2]](a,c,d);l=J[(e+(b<<4)|0)+12>>2];b:{c:{f=J[a+44>>2]+(j<<2)|0;b=J[f>>2];e=c-J[a+16>>2]>>4;if((b|0)==(e|0)){break c}g=J[a+64>>2];while(1){c=b;b=J[g+(b<<2)>>2];if((e|0)!=(b|0)){continue}break}if((c|0)==-1){break c}b=J[a+64>>2];J[b+(c<<2)>>2]=J[b+(e<<2)>>2];break b}J[f>>2]=J[J[a+64>>2]+(e<<2)>>2]}f=J[a+8>>2]-1|0;b=J[a+72>>2];if(b){ia[J[J[b>>2]+12>>2]](b,i,h,d)|0}if((e|0)!=(f|0)){d:{e:{h=J[a+16>>2];d=h+(f<<4)|0;b=J[J[d+4>>2]+12>>2]<<16|J[J[d>>2]+12>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;i=J[a+12>>2]-1&(b>>16^b);g=J[a+44>>2]+(i<<2)|0;b=J[g>>2];if((f|0)==(b|0)){break e}j=J[a+64>>2];while(1){c=b;b=J[j+(b<<2)>>2];if((f|0)!=(b|0)){continue}break}if((c|0)==-1){break e}b=J[a+64>>2];J[b+(c<<2)>>2]=J[b+(f<<2)>>2];break d}J[g>>2]=J[J[a+64>>2]+(f<<2)>>2]}c=J[d+4>>2];b=h+(e<<4)|0;J[b>>2]=J[d>>2];J[b+4>>2]=c;c=J[d+12>>2];J[b+8>>2]=J[d+8>>2];J[b+12>>2]=c;b=J[a+44>>2]+(i<<2)|0;J[J[a+64>>2]+(e<<2)>>2]=J[b>>2];J[b>>2]=e}J[a+8>>2]=J[a+8>>2]-1}return l|0}function Re(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:{b:{c:{d:{if(K[a+164|0]){c=J[a+128>>2];if((c|0)!=J[a+132>>2]){break a}i=c?c<<1:1;if((i|0)<=(c|0)){break a}if(i){J[8369]=J[8369]+1;e=ia[J[6782]](i<<2,16)|0;c=J[a+128>>2]}d=J[a+136>>2];if((c|0)<=0){break d}if(c-1>>>0>=3){k=c&-4;while(1){g=h<<2;J[g+e>>2]=J[d+g>>2];j=g|4;J[j+e>>2]=J[d+j>>2];j=g|8;J[j+e>>2]=J[d+j>>2];g=g|12;J[g+e>>2]=J[d+g>>2];h=h+4|0;f=f+4|0;if((k|0)!=(f|0)){continue}break}}f=c&3;if(!f){break c}while(1){c=h<<2;J[c+e>>2]=J[c+d>>2];h=h+1|0;l=l+1|0;if((f|0)!=(l|0)){continue}break}break c}f=J[a+148>>2];e:{if((f|0)!=J[a+152>>2]){break e}g=f?f<<1:1;if((g|0)<=(f|0)){break e}if(g){J[8369]=J[8369]+1;e=ia[J[6782]](g<<1,16)|0;f=J[a+148>>2]}c=J[a+156>>2];f:{g:{if((f|0)>0){if(f-1>>>0>=3){i=f&-4;while(1){d=h<<1;I[d+e>>1]=L[c+d>>1];k=d|2;I[k+e>>1]=L[c+k>>1];k=d|4;I[k+e>>1]=L[c+k>>1];d=d|6;I[d+e>>1]=L[c+d>>1];h=h+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}d=f&3;if(d){while(1){i=h<<1;I[i+e>>1]=L[c+i>>1];h=h+1|0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}if(K[a+160|0]){break g}break f}if(!c|!K[a+160|0]){break f}}if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}f=J[a+148>>2]}J[a+156>>2]=e;J[a+152>>2]=g;H[a+160|0]=1}e=J[a+156>>2];I[e+(f<<1)>>1]=b;J[a+148>>2]=f+1;J[J[a+32>>2]+4>>2]=e;return}if(!d){break b}}if(d?K[a+140|0]:0){J[8370]=J[8370]+1;ia[J[6783]](d)}c=J[a+128>>2]}J[a+136>>2]=e;J[a+132>>2]=i;H[a+140|0]=1}e=J[a+136>>2];J[e+(c<<2)>>2]=b;J[a+128>>2]=J[a+128>>2]+1;J[J[a+32>>2]+4>>2]=e}function Qz(a,b,c){a=a|0;b=b|0;c=c|0;kh(a,b,c);N[b+256>>2]=N[a+264>>2];N[b+260>>2]=N[a+268>>2];N[b+264>>2]=N[a+272>>2];N[b+268>>2]=N[a+276>>2];N[b+272>>2]=N[a+280>>2];N[b+276>>2]=N[a+284>>2];N[b+280>>2]=N[a+288>>2];N[b+284>>2]=N[a+292>>2];N[b+288>>2]=N[a+296>>2];N[b+292>>2]=N[a+300>>2];N[b+296>>2]=N[a+304>>2];N[b+300>>2]=N[a+308>>2];N[b+304>>2]=N[a+312>>2];N[b+308>>2]=N[a+316>>2];N[b+312>>2]=N[a+320>>2];N[b+316>>2]=N[a+324>>2];N[b+320>>2]=N[a+328>>2];N[b+324>>2]=N[a+332>>2];N[b+328>>2]=N[a+336>>2];N[b+332>>2]=N[a+340>>2];N[b+448>>2]=N[a+344>>2];N[b+336>>2]=N[a+544>>2];N[b+340>>2]=N[a+548>>2];N[b+344>>2]=N[a+552>>2];N[b+348>>2]=N[a+556>>2];N[b+352>>2]=N[a+348>>2];N[b+356>>2]=N[a+352>>2];N[b+360>>2]=N[a+356>>2];N[b+364>>2]=N[a+360>>2];N[b+368>>2]=N[a+364>>2];N[b+372>>2]=N[a+368>>2];N[b+376>>2]=N[a+372>>2];N[b+380>>2]=N[a+376>>2];N[b+384>>2]=N[a+380>>2];N[b+388>>2]=N[a+384>>2];N[b+392>>2]=N[a+388>>2];N[b+396>>2]=N[a+392>>2];N[b+400>>2]=N[a+396>>2];N[b+404>>2]=N[a+400>>2];N[b+408>>2]=N[a+404>>2];N[b+412>>2]=N[a+408>>2];N[b+416>>2]=N[a+412>>2];N[b+420>>2]=N[a+416>>2];N[b+424>>2]=N[a+420>>2];N[b+428>>2]=N[a+424>>2];N[b+432>>2]=N[a+428>>2];N[b+436>>2]=N[a+432>>2];N[b+440>>2]=N[a+436>>2];N[b+444>>2]=N[a+440>>2];N[b+452>>2]=N[a+444>>2];N[b+456>>2]=N[a+448>>2];J[b+484>>2]=K[a+452|0];N[b+460>>2]=N[a+456>>2];N[b+464>>2]=N[a+460>>2];N[b+468>>2]=N[a+464>>2];N[b+472>>2]=N[a+468>>2];N[b+476>>2]=N[a+472>>2];N[b+480>>2]=N[a+476>>2];return 3442}function dA(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;ya(2746);b=J[a+204>>2];ia[J[J[b>>2]+8>>2]](b,a,J[a+24>>2]);h=J[a+308>>2];if((h|0)>0){i=J[a+316>>2];j=J[a+204>>2];while(1){b=J[i+(g<<2)>>2];c=J[b+740>>2];a:{if(!c){break a}b=J[b+744>>2];if(!b|J[c+204>>2]&3|K[b+204|0]&3){break a}b=J[b+208>>2];d=J[j+16>>2];e=J[c+208>>2];f=d+(e<<3)|0;c=J[f>>2];if((c|0)!=(e|0)){while(1){c=d+(c<<3)|0;J[f>>2]=J[c>>2];e=J[c>>2];f=d+(e<<3)|0;c=J[f>>2];if((c|0)!=(e|0)){continue}break}}f=d+(b<<3)|0;c=J[f>>2];if((c|0)!=(b|0)){while(1){b=d+(c<<3)|0;J[f>>2]=J[b>>2];b=J[b>>2];f=d+(b<<3)|0;c=J[f>>2];if((b|0)!=(c|0)){continue}break}}if((b|0)==(e|0)){break a}c=d+(e<<3)|0;J[c>>2]=b;b=d+(b<<3)|0;J[b+4>>2]=J[b+4>>2]+J[c+4>>2]}g=g+1|0;if((h|0)!=(g|0)){continue}break}}h=J[a+212>>2];if((h|0)>0){i=J[a+220>>2];j=J[a+204>>2];f=0;while(1){b=J[i+(f<<2)>>2];b:{if(!K[b+20|0]){break b}c=J[b+28>>2];if(K[c+204|0]&3){break b}b=J[b+32>>2];if(K[b+204|0]&3){break b}b=J[b+208>>2];d=J[j+16>>2];e=J[c+208>>2];c=d+(e<<3)|0;g=J[c>>2];if((g|0)!=(e|0)){while(1){e=c;c=d+(g<<3)|0;J[e>>2]=J[c>>2];e=J[c>>2];c=d+(e<<3)|0;g=J[c>>2];if((g|0)!=(e|0)){continue}break}}c=d+(b<<3)|0;g=J[c>>2];if((g|0)!=(b|0)){while(1){b=d+(g<<3)|0;J[c>>2]=J[b>>2];b=J[b>>2];c=d+(b<<3)|0;g=J[c>>2];if((b|0)!=(g|0)){continue}break}}if((b|0)==(e|0)){break b}c=d+(e<<3)|0;J[c>>2]=b;b=d+(b<<3)|0;J[b+4>>2]=J[b+4>>2]+J[c+4>>2]}f=f+1|0;if((h|0)!=(f|0)){continue}break}}b=J[a+204>>2];ia[J[J[b>>2]+12>>2]](b,a);xa()}function td(a,b,c,d,e){var f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0,q=Q(0);f=J[a+9288>>2];if(f){g=J[f+48>>2];if(g){J[g+44>>2]=J[f+44>>2]}g=J[f+44>>2];if(g){J[g+48>>2]=J[f+48>>2]}if(J[a+9288>>2]==(f|0)){J[a+9288>>2]=J[f+48>>2]}g=a+9292|0;J[g>>2]=J[g>>2]-1;J[f+44>>2]=0;J[f+48>>2]=J[a+9280>>2];g=J[a+9280>>2];if(g){J[g+44>>2]=f}J[a+9280>>2]=f;g=a+9284|0;J[g>>2]=J[g>>2]+1;J[f+28>>2]=d;J[f+24>>2]=c;J[f+20>>2]=b;H[f+55|0]=0;k=N[c+24>>2];q=N[d+24>>2];h=N[b+24>>2];l=N[d+20>>2];j=N[b+20>>2];m=N[c+20>>2];n=N[c+16>>2];o=N[d+16>>2];i=N[b+16>>2];J[f+12>>2]=0;n=Q(n-i);l=Q(l-j);i=Q(o-i);m=Q(m-j);j=Q(Q(n*l)-Q(i*m));N[f+8>>2]=j;k=Q(k-h);o=Q(k*i);i=Q(q-h);h=Q(o-Q(i*n));N[f+4>>2]=h;i=Q(Q(m*i)-Q(l*k));N[f>>2]=i;p=2;a:{h=Q(Y(Q(Q(j*j)+Q(Q(i*i)+Q(h*h)))));if(!(h>Q(9999999747378752e-20))){break a}g=f+16|0;b:{if(Cg(f,b,c,g)){break b}if(Cg(f,c,d,g)){break b}if(Cg(f,d,b,g)){break b}N[f+16>>2]=Q(Q(N[b+24>>2]*N[f+8>>2])+Q(Q(N[b+16>>2]*N[f>>2])+Q(N[b+20>>2]*N[f+4>>2])))/h}h=Q(Q(1)/h);N[f>>2]=h*N[f>>2];N[f+4>>2]=h*N[f+4>>2];N[f+8>>2]=h*N[f+8>>2];if(e){return f}p=3;if(!(N[g>>2]>=Q(-9999999747378752e-21))){break a}return f}J[a>>2]=p;b=J[f+48>>2];if(b){J[b+44>>2]=J[f+44>>2]}b=J[f+44>>2];if(b){J[b+48>>2]=J[f+48>>2]}if(J[a+9280>>2]==(f|0)){J[a+9280>>2]=J[f+48>>2]}J[a+9284>>2]=J[a+9284>>2]-1;J[f+44>>2]=0;J[f+48>>2]=J[a+9288>>2];b=J[a+9288>>2];if(b){J[b+44>>2]=f}J[a+9288>>2]=f;J[a+9292>>2]=J[a+9292>>2]+1;return 0}J[a>>2]=5;return 0}function oE(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=0,t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0),K=Q(0),L=Q(0);f=ga-48|0;ga=f;j=N[b+36>>2];k=N[b+20>>2];l=N[b+40>>2];m=N[b+24>>2];n=N[b+4>>2];o=N[b+8>>2];g=N[c+8>>2];p=N[b+32>>2];h=N[c>>2];q=N[b>>2];i=N[c+4>>2];r=N[b+16>>2];J[f+44>>2]=0;N[f+32>>2]=Q(p*g)+Q(Q(q*h)+Q(r*i));N[f+40>>2]=Q(l*g)+Q(Q(o*h)+Q(i*m));N[f+36>>2]=Q(j*g)+Q(Q(n*h)+Q(i*k));s=f+16|0;ia[J[J[a>>2]+64>>2]](s,a,f+32|0);m=N[b+56>>2];n=N[b+40>>2];o=N[b+36>>2];p=N[b+52>>2];q=N[b+24>>2];r=N[b+20>>2];t=N[b+32>>2];u=N[b+48>>2];v=N[b+8>>2];w=N[b>>2];x=N[b+4>>2];y=N[b+16>>2];g=N[f+24>>2];h=N[f+16>>2];i=N[f+20>>2];J[f+12>>2]=0;N[f+8>>2]=-N[f+40>>2];N[f+4>>2]=-N[f+36>>2];N[f>>2]=-N[f+32>>2];ia[J[J[a>>2]+64>>2]](s,a,f);z=N[b+56>>2];A=N[b+40>>2];B=N[b+36>>2];C=N[b+52>>2];D=N[b+24>>2];E=N[b+20>>2];F=N[b+32>>2];G=N[b+48>>2];H=N[b+8>>2];I=N[b>>2];K=N[b+4>>2];L=N[b+16>>2];j=N[f+24>>2];k=N[f+16>>2];l=N[f+20>>2];N[d>>2]=Q(Q(m+Q(Q(g*n)+Q(Q(h*t)+Q(i*o))))*N[c+8>>2])+Q(Q(Q(u+Q(Q(g*v)+Q(Q(h*w)+Q(i*x))))*N[c>>2])+Q(Q(p+Q(Q(g*q)+Q(Q(h*y)+Q(i*r))))*N[c+4>>2]));g=Q(Q(Q(z+Q(Q(j*A)+Q(Q(k*F)+Q(l*B))))*N[c+8>>2])+Q(Q(Q(G+Q(Q(j*H)+Q(Q(k*I)+Q(l*K))))*N[c>>2])+Q(Q(C+Q(Q(j*D)+Q(Q(k*L)+Q(l*E))))*N[c+4>>2])));N[e>>2]=g;h=N[d>>2];if(h>g){N[d>>2]=g;N[e>>2]=h}ga=f+48|0}function Av(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;g=ga-16|0;ga=g;J[g+12>>2]=a;J[g+8>>2]=b;J[g+4>>2]=c;a=J[g+8>>2];b=J[g+4>>2];h=ga-16|0;ga=h;J[h+12>>2]=J[g+12>>2];J[h+8>>2]=a;J[h+4>>2]=b;a=J[h+8>>2];i=ga-16|0;ga=i;j=J[h+12>>2];J[i+12>>2]=j+152;J[i+8>>2]=a;a=ga-16|0;f=J[i+12>>2];J[a+12>>2]=f;J[i+4>>2]=J[J[a+12>>2]+4>>2];a=J[i+4>>2];b=ga-16|0;J[b+12>>2]=f;if(J[J[b+12>>2]+8>>2]==(a|0)){a=ga-16|0;J[a+12>>2]=f;b=J[J[a+12>>2]+4>>2];J[a+12>>2]=f;J[a+8>>2]=b;if(J[a+8>>2]){a=J[a+8>>2]<<1}else{a=1}b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;a=ga-16|0;c=J[b+12>>2];J[a+12>>2]=c;if(J[J[a+12>>2]+8>>2]<J[b+8>>2]){d=J[b+8>>2];a=ga-16|0;ga=a;J[a+8>>2]=c;J[a+4>>2]=d;e=J[a+8>>2];a:{if(J[a+4>>2]){k=J[a+4>>2];d=ga-16|0;ga=d;J[d+12>>2]=e;J[d+8>>2]=k;J[d+4>>2]=0;e=J[d+8>>2]<<6;J[8369]=J[8369]+1;e=ia[J[6782]](e,16)|0;ga=d+16|0;J[a+12>>2]=e;break a}J[a+12>>2]=0}ga=a+16|0;J[b+4>>2]=J[a+12>>2];a=ga;d=a-16|0;J[d+12>>2]=c;d=J[J[d+12>>2]+4>>2];e=J[b+4>>2];a=a-32|0;ga=a;J[a+28>>2]=c;J[a+24>>2]=0;J[a+20>>2]=d;J[a+16>>2]=e;d=J[a+28>>2];J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+20>>2]){e=J[a+12>>2]<<6;_b(e+J[a+16>>2]|0,e+J[d+12>>2]|0);J[a+12>>2]=J[a+12>>2]+1;continue}break}ga=a+32|0;a=ga-16|0;J[a+12>>2]=c;Eb(c,J[J[a+12>>2]+4>>2]);lb(c);H[c+16|0]=1;J[c+12>>2]=J[b+4>>2];J[c+8>>2]=J[b+8>>2]}ga=b+16|0}_b(J[f+12>>2]+(J[f+4>>2]<<6)|0,J[i+8>>2]);J[f+4>>2]=J[f+4>>2]+1;ga=i+16|0;Mf(j+172|0,h+4|0);ga=h+16|0;ga=g+16|0}function Ck(a,b){a=a|0;b=Q(b);var c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=0,n=Q(0);ya(2900);l=J[a+232>>2];if((l|0)>0){while(1){c=J[J[a+240>>2]+(m<<2)>>2];if(!(K[c+204|0]&3)){d=N[c+312>>2];k=N[c+444>>2];e=cg(Q(Q(1)-k),b);d=Q(d*e);N[c+312>>2]=d;h=Q(e*N[c+316>>2]);N[c+316>>2]=h;e=Q(e*N[c+320>>2]);N[c+320>>2]=e;g=N[c+328>>2];n=N[c+448>>2];f=cg(Q(Q(1)-n),b);g=Q(g*f);N[c+328>>2]=g;i=Q(f*N[c+332>>2]);N[c+332>>2]=i;f=Q(f*N[c+336>>2]);N[c+336>>2]=f;a:{if(!K[c+452|0]){break a}if(!(!(N[c+464>>2]>Q(Q(f*f)+Q(Q(g*g)+Q(i*i))))|!(N[c+460>>2]>Q(Q(e*e)+Q(Q(d*d)+Q(h*h)))))){j=N[c+456>>2];f=Q(f*j);N[c+336>>2]=f;i=Q(i*j);N[c+332>>2]=i;g=Q(g*j);N[c+328>>2]=g;e=Q(e*j);N[c+320>>2]=e;h=Q(h*j);N[c+316>>2]=h;d=Q(d*j);N[c+312>>2]=d}j=Q(Y(Q(Q(e*e)+Q(Q(d*d)+Q(h*h)))));b:{if(!(j<k)){break b}if(j>Q(.004999999888241291)){k=e;e=Q(Q(1)/j);N[c+320>>2]=k-Q(Q(k*e)*Q(.004999999888241291));N[c+316>>2]=h-Q(Q(h*e)*Q(.004999999888241291));N[c+312>>2]=d-Q(Q(d*e)*Q(.004999999888241291));break b}J[c+312>>2]=0;J[c+316>>2]=0;J[c+320>>2]=0;J[c+324>>2]=0}d=Q(Y(Q(Q(f*f)+Q(Q(g*g)+Q(i*i)))));if(!(d<n)){break a}if(d>Q(.004999999888241291)){d=Q(Q(1)/d);N[c+336>>2]=f-Q(Q(f*d)*Q(.004999999888241291));N[c+332>>2]=i-Q(Q(i*d)*Q(.004999999888241291));N[c+328>>2]=g-Q(Q(g*d)*Q(.004999999888241291));break a}J[c+328>>2]=0;J[c+332>>2]=0;J[c+336>>2]=0;J[c+340>>2]=0}ve(c,b,c+68|0);l=J[a+232>>2]}m=m+1|0;if((m|0)<(l|0)){continue}break}}xa()}function Wm(a,b){var c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0;c=ga+-64|0;ga=c;k=J[b+192>>2];ia[J[J[k>>2]+8>>2]](k,b+4|0,c+48|0,c+32|0);d=N[6778];g=Q(N[c+48>>2]-d);N[c+48>>2]=g;h=Q(N[c+52>>2]-d);N[c+52>>2]=h;f=Q(N[c+56>>2]-d);N[c+56>>2]=f;e=Q(d+N[c+32>>2]);N[c+32>>2]=e;i=Q(d+N[c+36>>2]);N[c+36>>2]=i;j=Q(d+N[c+40>>2]);N[c+40>>2]=j;a:{if(K[b+204|0]&3|(!K[a+44|0]|J[b+236>>2]!=2)){break a}k=J[b+192>>2];ia[J[J[k>>2]+8>>2]](k,b+68|0,c+16|0,c);h=Q(N[c+16>>2]-d);N[c+16>>2]=h;f=Q(N[c+20>>2]-d);N[c+20>>2]=f;e=Q(N[c+24>>2]-d);N[c+24>>2]=e;i=Q(d+N[c>>2]);N[c>>2]=i;j=Q(d+N[c+4>>2]);N[c+4>>2]=j;d=Q(d+N[c+8>>2]);N[c+8>>2]=d;g=N[c+48>>2];if(h<g){N[c+48>>2]=h;g=h}h=N[c+52>>2];if(f<h){N[c+52>>2]=f;h=f}f=N[c+56>>2];if(e<f){N[c+56>>2]=e;f=e}e=N[c+28>>2];if(e<N[c+60>>2]){N[c+60>>2]=e}e=N[c+32>>2];if(i>e){N[c+32>>2]=i;e=i}i=N[c+36>>2];if(j>i){N[c+36>>2]=j;i=j}j=N[c+40>>2];if(d>j){N[c+40>>2]=d;j=d}d=N[c+12>>2];if(!(d>N[c+44>>2])){break a}N[c+44>>2]=d}k=J[a+68>>2];b:{c:{if(!(H[b+204|0]&1)){f=Q(j-f);g=Q(e-g);e=Q(g*g);g=Q(i-h);if(!(Q(Q(f*f)+Q(e+Q(g*g)))<Q(999999995904))){break c}}ia[J[J[k>>2]+16>>2]](k,J[b+188>>2],c+48|0,c+32|0,J[a+24>>2]);break b}if((J[b+216>>2]&-2)!=4){J[b+216>>2]=5}if(K[29588]){break b}b=J[a+72>>2];if(!b){break b}H[29588]=1;ia[J[J[b>>2]+36>>2]](b,2960);b=J[a+72>>2];ia[J[J[b>>2]+36>>2]](b,4335);b=J[a+72>>2];ia[J[J[b>>2]+36>>2]](b,4412);a=J[a+72>>2];ia[J[J[a>>2]+36>>2]](a,4403)}ga=c- -64|0}function Tl(a,b,c,d){var e=Q(0),f=0,g=0,h=0,i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=0,t=0,u=Q(0),v=Q(0),w=Q(0);j=ga-32|0;ga=j;while(1){r=c;h=J[a+12>>2];i=h+P((c+d|0)/2|0,24)|0;s=J[i+20>>2];m=N[i+16>>2];u=N[i+8>>2];v=N[i+4>>2];w=N[i>>2];i=d;while(1){n=N[b+8>>2];k=Q(u-n);e=Q(k*k);o=N[b>>2];k=Q(w-o);l=Q(k*k);p=N[b+4>>2];k=Q(v-p);k=Q(e+Q(l+Q(k*k)));while(1){a:{f=P(c,24)+h|0;e=N[f+16>>2];b:{if(e!=m){if(e<m){break b}break a}e=Q(N[f+8>>2]-n);l=Q(e*e);e=Q(N[f>>2]-o);q=Q(e*e);e=Q(N[f+4>>2]-p);e=Q(l+Q(q+Q(e*e)));if(((e!=k?e<k:J[f+20>>2]<(s|0))|0)!=1){break a}}c=c+1|0;continue}break}while(1){c:{t=P(i,24);g=t+h|0;e=N[g+16>>2];d:{if(e!=m){if(e>m){break d}break c}e=Q(N[g+8>>2]-n);l=Q(e*e);e=Q(N[g>>2]-o);q=Q(e*e);e=Q(N[g+4>>2]-p);e=Q(l+Q(q+Q(e*e)));if(((e!=k?e>k:J[g+20>>2]>(s|0))|0)!=1){break c}}i=i-1|0;continue}break}if((c|0)<=(i|0)){h=J[f+20>>2];J[j+24>>2]=J[f+16>>2];J[j+28>>2]=h;h=J[f+12>>2];J[j+16>>2]=J[f+8>>2];J[j+20>>2]=h;h=J[f+4>>2];J[j+8>>2]=J[f>>2];J[j+12>>2]=h;h=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=h;h=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=h;h=J[g+20>>2];J[f+16>>2]=J[g+16>>2];J[f+20>>2]=h;g=J[j+12>>2];f=J[a+12>>2]+t|0;J[f>>2]=J[j+8>>2];J[f+4>>2]=g;g=J[j+28>>2];J[f+16>>2]=J[j+24>>2];J[f+20>>2]=g;g=J[j+20>>2];J[f+8>>2]=J[j+16>>2];J[f+12>>2]=g;i=i-1|0;c=c+1|0}if((c|0)<=(i|0)){h=J[a+12>>2];continue}break}if((i|0)>(r|0)){Tl(a,b,r,i)}if((c|0)<(d|0)){continue}break}ga=j+32|0}function Tk(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0;a:{d=N[c+128>>2];if(d==Q(0)){break a}J[7989]=J[7989]+1;h=d;d=N[c+96>>2];g=N[c+24>>2];i=N[c+16>>2];j=N[c+20>>2];e=N[c+108>>2];e=Q(Q(Q(h-Q(d*N[c+116>>2]))-Q(Q(Q(Q(g*N[a+152>>2])+Q(Q(i*N[a+144>>2])+Q(j*N[a+148>>2])))+Q(Q(N[c+8>>2]*N[a+168>>2])+Q(Q(N[c>>2]*N[a+160>>2])+Q(N[c+4>>2]*N[a+164>>2]))))*e))-Q(Q(Q(Q(N[c+56>>2]*N[b+152>>2])+Q(Q(N[c+48>>2]*N[b+144>>2])+Q(N[c+52>>2]*N[b+148>>2])))+Q(Q(N[c+40>>2]*N[b+168>>2])+Q(Q(N[c+32>>2]*N[b+160>>2])+Q(N[c+36>>2]*N[b+164>>2]))))*e));h=Q(d+e);f=N[c+120>>2];k=h<f;N[c+96>>2]=k?f:h;d=k?Q(f-d):e;if(J[a+240>>2]){N[a+144>>2]=Q(N[a+112>>2]*Q(d*Q(i*N[a+128>>2])))+N[a+144>>2];N[a+148>>2]=Q(Q(d*Q(j*N[a+132>>2]))*N[a+116>>2])+N[a+148>>2];N[a+152>>2]=Q(Q(d*Q(g*N[a+136>>2]))*N[a+120>>2])+N[a+152>>2];e=N[c+72>>2];f=N[c+68>>2];N[a+160>>2]=Q(Q(d*N[a+96>>2])*N[c+64>>2])+N[a+160>>2];g=N[a+104>>2];N[a+164>>2]=Q(f*Q(d*N[a+100>>2]))+N[a+164>>2];N[a+168>>2]=Q(e*Q(d*g))+N[a+168>>2]}if(!J[b+240>>2]){break a}e=N[c+56>>2];f=N[c+52>>2];N[b+144>>2]=Q(N[b+112>>2]*Q(d*Q(N[c+48>>2]*N[b+128>>2])))+N[b+144>>2];N[b+148>>2]=Q(Q(d*Q(f*N[b+132>>2]))*N[b+116>>2])+N[b+148>>2];N[b+152>>2]=Q(Q(d*Q(e*N[b+136>>2]))*N[b+120>>2])+N[b+152>>2];e=N[c+88>>2];f=N[c+84>>2];N[b+160>>2]=Q(Q(d*N[b+96>>2])*N[c+80>>2])+N[b+160>>2];g=N[b+104>>2];N[b+164>>2]=Q(f*Q(d*N[b+100>>2]))+N[b+164>>2];N[b+168>>2]=Q(e*Q(d*g))+N[b+168>>2]}}function Km(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;h=ga-32|0;ga=h;e=J[a+12>>2];n=K[a+28|0];l=n?c:b;m=J[l+4>>2];f=J[m+16>>2];a:{if((e|0)>=(f|0)){break a}if(J[a+16>>2]<(f|0)){if(f){J[8369]=J[8369]+1;i=ia[J[6782]](f<<2,16)|0;d=J[a+12>>2]}else{d=e}b:{if((d|0)<=0){break b}if(d-1>>>0>=3){q=d&-4;while(1){g=j<<2;J[g+i>>2]=J[g+J[a+20>>2]>>2];k=g|4;J[k+i>>2]=J[k+J[a+20>>2]>>2];k=g|8;J[k+i>>2]=J[k+J[a+20>>2]>>2];g=g|12;J[g+i>>2]=J[g+J[a+20>>2]>>2];j=j+4|0;o=o+4|0;if((o|0)!=(q|0)){continue}break}}d=d&3;if(!d){break b}while(1){g=j<<2;J[g+i>>2]=J[g+J[a+20>>2]>>2];j=j+1|0;p=p+1|0;if((d|0)!=(p|0)){continue}break}}d=J[a+20>>2];if(!(d?!d|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+20>>2]=i;H[a+24|0]=1;J[a+16>>2]=f}d=(e^-1)+f|0;i=f-e&3;if(i){j=0;while(1){J[J[a+20>>2]+(e<<2)>>2]=0;e=e+1|0;j=j+1|0;if((i|0)!=(j|0)){continue}break}}if(d>>>0<3){break a}while(1){d=e<<2;J[d+J[a+20>>2]>>2]=0;J[(d+J[a+20>>2]|0)+4>>2]=0;J[(d+J[a+20>>2]|0)+8>>2]=0;J[(d+J[a+20>>2]|0)+12>>2]=0;e=e+4|0;if((f|0)!=(e|0)){continue}break}}J[a+12>>2]=f;if((f|0)>0){b=n?b:c;e=0;while(1){c:{if(J[m+64>>2]){J[J[a+20>>2]+(e<<2)>>2]=0;break c}c=J[l+12>>2];d=J[l+8>>2];J[h+12>>2]=J[(J[m+24>>2]+P(e,80)|0)+64>>2];J[h+16>>2]=d;J[h+20>>2]=c;J[h+28>>2]=e;J[h+24>>2]=-1;J[h+8>>2]=l;c=J[a+4>>2];c=ia[J[J[c>>2]+8>>2]](c,h+8|0,b,J[a+32>>2])|0;J[J[a+20>>2]+(e<<2)>>2]=c}e=e+1|0;if((f|0)!=(e|0)){continue}break}}ga=h+32|0}function VH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;J[7394]=J[7394]+1;e=J[a+24>>2];a:{b:{if(e){if(ia[J[J[e>>2]+8>>2]](e,b,c)|0){break b}break a}if(!(L[c+6>>1]&L[b+4>>1])|!(L[b+6>>1]&L[c+4>>1])){break a}}d=J[b+12>>2]>J[c+12>>2];i=d?b:c;j=J[i+12>>2];k=d?c:b;g=J[k+12>>2];b=j<<16|g;b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;m=b>>16^b;d=a;b=J[a+12>>2];l=m&b-1;a=J[J[a+44>>2]+(l<<2)>>2];c:{if((a|0)!=-1){h=J[d- -64>>2];e=J[d+16>>2];while(1){f=a<<4;c=f+e|0;if((g|0)==J[J[c>>2]+12>>2]&(j|0)==J[J[(e+f|0)+4>>2]+12>>2]){break c}a=J[h+(a<<2)>>2];if((a|0)!=-1){continue}break}}a=b;g=J[d+8>>2];c=g;d:{if((a|0)!=(c|0)){break d}c=b;e=a?a<<1:1;if((e|0)<=(a|0)){break d}e:{if(!e){c=0;a=b;break e}J[8369]=J[8369]+1;c=ia[J[6782]](e<<4,16)|0;a=J[d+8>>2]}j=a;if((j|0)>0){a=0;while(1){f=a<<4;h=f+c|0;f=f+J[d+16>>2]|0;J[h>>2]=J[f>>2];J[h+4>>2]=J[f+4>>2];J[h+8>>2]=J[f+8>>2];J[h+12>>2]=J[f+12>>2];a=a+1|0;if((j|0)!=(a|0)){continue}break}}a=J[d+16>>2];if(!(a?!a|!K[d+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}J[d+16>>2]=c;H[d+20|0]=1;J[d+12>>2]=e;c=J[d+8>>2];a=e}J[d+8>>2]=c+1;e=J[d+16>>2];c=J[d+72>>2];if(c){ia[J[J[c>>2]+8>>2]](c,k,i)|0;a=J[d+12>>2]}c=e+(g<<4)|0;if((a|0)>(b|0)){an(d);l=J[d+12>>2]-1&m}b=J[k+12>>2]<J[i+12>>2];J[c>>2]=b?k:i;a=e+(g<<4)|0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+4>>2]=b?i:k;a=J[d+44>>2]+(l<<2)|0;J[J[d- -64>>2]+(g<<2)>>2]=J[a>>2];J[a>>2]=g}d=c}return d|0}function Dy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;c=b;e=J[b+4>>2];b=J[a+24>>2];a:{if((e|0)<=(b|0)){break a}if((e|0)>J[a+28>>2]){if(e){J[8369]=J[8369]+1;f=ia[J[6782]](e<<2,16)|0;d=J[a+24>>2]}else{d=b}b:{if((d|0)<=0){break b}if(d-1>>>0>=3){i=d&-4;while(1){h=g<<2;J[h+f>>2]=J[h+J[a+32>>2]>>2];j=h|4;J[j+f>>2]=J[j+J[a+32>>2]>>2];j=h|8;J[j+f>>2]=J[j+J[a+32>>2]>>2];h=h|12;J[h+f>>2]=J[h+J[a+32>>2]>>2];g=g+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}d=d&3;if(!d){break b}while(1){h=g<<2;J[h+f>>2]=J[h+J[a+32>>2]>>2];g=g+1|0;l=l+1|0;if((d|0)!=(l|0)){continue}break}}d=J[a+32>>2];if(!(d?!d|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+32>>2]=f;H[a+36|0]=1;J[a+28>>2]=e}d=e+(b^-1)|0;f=e-b&3;if(f){g=0;while(1){J[J[a+32>>2]+(b<<2)>>2]=0;b=b+1|0;g=g+1|0;if((f|0)!=(g|0)){continue}break}}if(d>>>0<3){break a}while(1){d=b<<2;J[d+J[a+32>>2]>>2]=0;J[(d+J[a+32>>2]|0)+4>>2]=0;J[(d+J[a+32>>2]|0)+8>>2]=0;J[(d+J[a+32>>2]|0)+12>>2]=0;b=b+4|0;if((e|0)!=(b|0)){continue}break}}J[a+24>>2]=e;c:{if((e|0)<=0){break c}b=J[a+32>>2];f=0;a=0;if(e-1>>>0>=3){h=e&-4;g=0;while(1){d=a<<2;J[d+b>>2]=J[d+J[c+12>>2]>>2];i=d|4;J[i+b>>2]=J[i+J[c+12>>2]>>2];i=d|8;J[i+b>>2]=J[i+J[c+12>>2]>>2];d=d|12;J[d+b>>2]=J[d+J[c+12>>2]>>2];a=a+4|0;g=g+4|0;if((h|0)!=(g|0)){continue}break}}d=e&3;if(!d){break c}while(1){e=a<<2;J[e+b>>2]=J[e+J[c+12>>2]>>2];a=a+1|0;f=f+1|0;if((d|0)!=(f|0)){continue}break}}}function nH(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=0,A=Q(0),B=Q(0),C=Q(0);c=ga-128|0;ga=c;m=J[b+36>>2];b=J[J[a+8>>2]+24>>2]+P(m,80)|0;z=J[b+64>>2];n=N[b+32>>2];o=N[b>>2];p=N[b+16>>2];q=N[b+56>>2];r=N[b+52>>2];s=N[b+48>>2];t=N[b+36>>2];u=N[b+20>>2];v=N[b+4>>2];w=N[b+40>>2];x=N[b+24>>2];y=N[b+8>>2];b=J[a+12>>2];A=N[b+52>>2];B=N[b+56>>2];d=N[b+24>>2];e=N[b+20>>2];f=N[b+40>>2];g=N[b+36>>2];C=N[b+48>>2];h=N[b+8>>2];i=N[b>>2];j=N[b+4>>2];k=N[b+16>>2];l=N[b+32>>2];J[c+124>>2]=0;J[c+108>>2]=0;J[c+92>>2]=0;N[c+104>>2]=Q(w*f)+Q(Q(y*l)+Q(x*g));N[c+100>>2]=Q(t*f)+Q(Q(v*l)+Q(u*g));N[c+88>>2]=Q(w*d)+Q(Q(y*k)+Q(x*e));N[c+84>>2]=Q(t*d)+Q(Q(v*k)+Q(u*e));N[c+120>>2]=B+Q(Q(q*f)+Q(Q(s*l)+Q(g*r)));N[c+116>>2]=A+Q(Q(q*d)+Q(Q(s*k)+Q(e*r)));J[c+76>>2]=0;N[c+72>>2]=Q(w*h)+Q(Q(y*i)+Q(j*x));N[c+68>>2]=Q(t*h)+Q(Q(v*i)+Q(j*u));N[c+64>>2]=Q(n*h)+Q(Q(o*i)+Q(p*j));N[c+112>>2]=C+Q(Q(q*h)+Q(Q(s*i)+Q(j*r)));N[c+96>>2]=Q(n*f)+Q(Q(o*l)+Q(p*g));N[c+80>>2]=Q(n*d)+Q(Q(o*k)+Q(p*e));b=J[a+4>>2];J[c+60>>2]=m;J[c+56>>2]=-1;J[c+48>>2]=b;J[c+44>>2]=z;J[c+40>>2]=0;J[c+52>>2]=c- -64;b=J[a+24>>2];J[c+16>>2]=0;J[c+20>>2]=-65535;J[c+32>>2]=m;J[c+28>>2]=b;J[c+8>>2]=7420;N[c+12>>2]=N[b+4>>2];J[c+24>>2]=J[b+16>>2];bf(J[a+16>>2],J[a+20>>2],c+40|0,c+8|0);ga=c+128|0}function qm(a,b,c,d){var e=0,f=0,g=0;e=ga-48|0;ga=e;J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a+48>>2]=b;J[a>>2]=16876;J[a+4>>2]=21;a:{if(ia[J[J[b>>2]+40>>2]](b)|0){ia[J[J[b>>2]+48>>2]](b,a+16|0,a+32|0);break a}J[e+44>>2]=0;J[e+36>>2]=0;J[e+40>>2]=0;J[e+32>>2]=1065353216;g=e+16|0;b=e+32|0;ia[J[J[a>>2]+68>>2]](g,a,b);N[a+32>>2]=N[e+16>>2]+N[a+12>>2];J[e+32>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](e,a,b);f=J[e+12>>2];J[e+24>>2]=J[e+8>>2];J[e+28>>2]=f;f=J[e+4>>2];J[e+16>>2]=J[e>>2];J[e+20>>2]=f;N[a+16>>2]=N[e+16>>2]-N[a+12>>2];J[e+40>>2]=0;J[e+44>>2]=0;J[e+32>>2]=0;J[e+36>>2]=0;J[e+36>>2]=1065353216;ia[J[J[a>>2]+68>>2]](g,a,b);N[a+36>>2]=N[e+20>>2]+N[a+12>>2];J[e+36>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](e,a,b);f=J[e+12>>2];J[e+24>>2]=J[e+8>>2];J[e+28>>2]=f;f=J[e+4>>2];J[e+16>>2]=J[e>>2];J[e+20>>2]=f;N[a+20>>2]=N[e+20>>2]-N[a+12>>2];J[e+40>>2]=0;J[e+44>>2]=0;J[e+40>>2]=1065353216;J[e+32>>2]=0;J[e+36>>2]=0;ia[J[J[a>>2]+68>>2]](g,a,b);N[a+40>>2]=N[e+24>>2]+N[a+12>>2];J[e+40>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](e,a,b);b=J[e+12>>2];J[e+24>>2]=J[e+8>>2];J[e+28>>2]=b;b=J[e+4>>2];J[e+16>>2]=J[e>>2];J[e+20>>2]=b;N[a+24>>2]=N[e+24>>2]-N[a+12>>2]}ga=e+48|0;H[a+61|0]=0;H[a+60|0]=c;J[a+52>>2]=0;J[a+56>>2]=0;J[a>>2]=12196;J[a+4>>2]=21;if(d){J[8369]=J[8369]+1;b=ia[J[6782]](172,16)|0;c=Yl(b);J[a+52>>2]=b;Xl(c,J[a+48>>2],K[a+60|0],a+16|0,a+32|0);H[a+61|0]=1}}function Ov(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=Q(d);e=Q(e);f=Q(f);g=g|0;h=h|0;i=i|0;var j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0;j=ga-48|0;ga=j;J[j+44>>2]=a;J[j+40>>2]=b;J[j+36>>2]=c;N[j+32>>2]=d;N[j+28>>2]=e;N[j+24>>2]=f;J[j+20>>2]=g;J[j+16>>2]=h;H[j+15|0]=i;a=ra(124);b=J[j+44>>2];c=J[j+40>>2];h=J[j+36>>2];d=N[j+32>>2];k=N[j+28>>2];e=N[j+24>>2];g=J[j+20>>2];i=J[j+16>>2];o=K[j+15|0];J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a>>2]=15144;J[a+108>>2]=1065353216;J[a+112>>2]=1065353216;J[a+104>>2]=g;H[a+101|0]=0;H[a+102|0]=0;H[a+100|0]=o&1;J[a+96>>2]=i;J[a+92>>2]=h;N[a+88>>2]=d;N[a+76>>2]=e;N[a+72>>2]=k;J[a+68>>2]=c;J[a+64>>2]=b;J[a+4>>2]=24;J[a+116>>2]=1065353216;J[a+120>>2]=0;d=Q(c-1|0);N[a+84>>2]=d;l=Q(b-1|0);N[a+80>>2]=l;a:{b:{c:{switch(g|0){default:f=N[a+40>>2];m=N[a+24>>2];d=N[a+36>>2];n=N[a+20>>2];e=N[a+32>>2];k=N[a+16>>2];break a;case 0:N[a+32>>2]=e;N[a+16>>2]=k;J[a+44>>2]=0;N[a+40>>2]=d;N[a+36>>2]=l;J[a+28>>2]=0;J[a+20>>2]=0;J[a+24>>2]=0;f=d;d=l;break a;case 1:N[a+32>>2]=l;J[a+16>>2]=0;J[a+44>>2]=0;N[a+40>>2]=d;N[a+36>>2]=e;J[a+24>>2]=0;J[a+28>>2]=0;N[a+20>>2]=k;f=d;d=e;n=k;k=Q(0);break b;case 2:break c}}N[a+32>>2]=l;J[a+16>>2]=0;J[a+20>>2]=0;J[a+44>>2]=0;N[a+40>>2]=e;N[a+36>>2]=d;J[a+28>>2]=0;N[a+24>>2]=k;f=e}m=k;e=l;k=Q(0)}J[a+60>>2]=0;N[a+56>>2]=Q(m+f)*Q(.5);N[a+52>>2]=Q(n+d)*Q(.5);N[a+48>>2]=Q(k+e)*Q(.5);ga=j+48|0;return a|0}function Qb(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0);g=N[c+100>>2];h=N[c+24>>2];i=N[c+16>>2];j=N[c+20>>2];e=N[c+108>>2];d=Q(Q(Q(N[c+112>>2]-Q(g*N[c+116>>2]))-Q(Q(Q(Q(h*N[a+72>>2])+Q(Q(i*N[a+64>>2])+Q(j*N[a+68>>2])))+Q(Q(N[c+8>>2]*N[a+88>>2])+Q(Q(N[c>>2]*N[a+80>>2])+Q(N[c+4>>2]*N[a+84>>2]))))*e))-Q(Q(Q(Q(N[c+56>>2]*N[b+72>>2])+Q(Q(N[c+48>>2]*N[b+64>>2])+Q(N[c+52>>2]*N[b+68>>2])))+Q(Q(N[c+40>>2]*N[b+88>>2])+Q(Q(N[c+32>>2]*N[b+80>>2])+Q(N[c+36>>2]*N[b+84>>2]))))*e));e=Q(g+d);f=N[c+120>>2];a:{if(e<f){d=Q(f-g);e=f;break a}f=N[c+124>>2];if(!(f<e)){break a}d=Q(f-g);e=f}N[c+100>>2]=e;if(J[a+240>>2]){N[a+64>>2]=Q(N[a+112>>2]*Q(d*Q(i*N[a+128>>2])))+N[a+64>>2];N[a+68>>2]=Q(Q(d*Q(j*N[a+132>>2]))*N[a+116>>2])+N[a+68>>2];N[a+72>>2]=Q(Q(d*Q(h*N[a+136>>2]))*N[a+120>>2])+N[a+72>>2];e=N[c+72>>2];f=N[c+68>>2];N[a+80>>2]=Q(Q(d*N[a+96>>2])*N[c+64>>2])+N[a+80>>2];g=N[a+104>>2];N[a+84>>2]=Q(f*Q(d*N[a+100>>2]))+N[a+84>>2];N[a+88>>2]=Q(e*Q(d*g))+N[a+88>>2]}if(J[b+240>>2]){e=N[c+56>>2];f=N[c+52>>2];N[b+64>>2]=Q(N[b+112>>2]*Q(d*Q(N[c+48>>2]*N[b+128>>2])))+N[b+64>>2];N[b+68>>2]=Q(Q(d*Q(f*N[b+132>>2]))*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(Q(d*Q(e*N[b+136>>2]))*N[b+120>>2])+N[b+72>>2];e=N[c+88>>2];f=N[c+84>>2];N[b+80>>2]=Q(Q(d*N[b+96>>2])*N[c+80>>2])+N[b+80>>2];g=N[b+104>>2];N[b+84>>2]=Q(f*Q(d*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(e*Q(d*g))+N[b+88>>2]}}function Ob(a,b,c,d,e,f,g){var h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=Q(0),r=Q(0);h=ga-128|0;ga=h;a:{if(!b){break a}if(!(!J[b+40>>2]|(c|0)>=(g|0)&(g|0)>=0)){n=c+1|0;Ob(a,J[b+36>>2],n,d,e,f,g);Ob(a,J[b+40>>2],n,d,e,f,g)}if((c|0)<(f|0)){break a}i=N[b+20>>2];j=N[b+24>>2];f=J[b+40>>2];k=N[b+16>>2];p=N[b>>2];l=N[b+4>>2];m=N[b+8>>2];J[h+124>>2]=0;J[h+108>>2]=0;J[h+92>>2]=0;J[h+76>>2]=0;J[h+60>>2]=0;J[h+44>>2]=0;J[h+28>>2]=0;q=Q(Q(m+j)*Q(.5));m=Q(Q(j-m)*Q(.5));j=Q(q+m);N[h+120>>2]=j;r=Q(Q(l+i)*Q(.5));l=Q(Q(i-l)*Q(.5));i=Q(r+l);N[h+116>>2]=i;N[h+104>>2]=j;N[h+100>>2]=i;N[h+88>>2]=j;l=Q(r-l);N[h+84>>2]=l;N[h+72>>2]=j;N[h+68>>2]=l;j=Q(q-m);N[h+56>>2]=j;N[h+52>>2]=i;N[h+40>>2]=j;N[h+36>>2]=i;N[h+24>>2]=j;N[h+20>>2]=l;J[h+12>>2]=0;m=Q(Q(p+k)*Q(.5));k=Q(Q(k-p)*Q(.5));i=Q(m-k);N[h+112>>2]=i;k=Q(m+k);N[h+96>>2]=k;N[h+80>>2]=k;N[h+64>>2]=i;N[h+48>>2]=i;N[h+32>>2]=k;N[h+16>>2]=k;N[h>>2]=i;N[h+8>>2]=j;N[h+4>>2]=l;c=h+16|0;b=f?d:e;ia[J[J[a>>2]+8>>2]](a,h,c,b);d=h+32|0;ia[J[J[a>>2]+8>>2]](a,c,d,b);e=h+48|0;ia[J[J[a>>2]+8>>2]](a,d,e,b);ia[J[J[a>>2]+8>>2]](a,e,h,b);f=h- -64|0;g=h+80|0;ia[J[J[a>>2]+8>>2]](a,f,g,b);n=h+96|0;ia[J[J[a>>2]+8>>2]](a,g,n,b);o=h+112|0;ia[J[J[a>>2]+8>>2]](a,n,o,b);ia[J[J[a>>2]+8>>2]](a,o,f,b);ia[J[J[a>>2]+8>>2]](a,h,f,b);ia[J[J[a>>2]+8>>2]](a,c,g,b);ia[J[J[a>>2]+8>>2]](a,d,n,b);ia[J[J[a>>2]+8>>2]](a,e,o,b)}ga=h+128|0}function fc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=Q(0),j=0;J[b>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+28>>2]);J[b+4>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+32>>2]);d=ia[J[J[c>>2]+40>>2]](c,a)|0;f=ia[J[J[c>>2]+28>>2]](c,d)|0;J[b+8>>2]=f;if(f){ia[J[J[c>>2]+48>>2]](c,d)}J[b+12>>2]=J[a+4>>2];J[b+24>>2]=K[a+21|0];J[b+40>>2]=J[a+24>>2];N[b+44>>2]=N[a+16>>2];J[b+48>>2]=K[a+20|0];J[b+20>>2]=J[a+12>>2];J[b+16>>2]=J[a+8>>2];N[b+28>>2]=N[a+36>>2];i=N[a+40>>2];c=0;J[b+36>>2]=0;N[b+32>>2]=i;d=J[a+28>>2];e=J[d+488>>2];a:{if((e|0)<=0){break a}f=J[d+496>>2];if(e-1>>>0>=3){h=e&-4;d=0;while(1){g=c<<2;if(J[g+f>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|4)>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|8)>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|12)>>2]==(a|0)){J[b+36>>2]=1}c=c+4|0;d=d+4|0;if((h|0)!=(d|0)){continue}break}}e=e&3;if(!e){break a}d=0;while(1){if(J[f+(c<<2)>>2]==(a|0)){J[b+36>>2]=1}c=c+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}c=J[a+32>>2];e=J[c+488>>2];b:{if((e|0)<=0){break b}f=J[c+496>>2];d=0;c=0;if(e-1>>>0>=3){j=e&-4;h=0;while(1){g=c<<2;if(J[g+f>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|4)>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|8)>>2]==(a|0)){J[b+36>>2]=1}if(J[f+(g|12)>>2]==(a|0)){J[b+36>>2]=1}c=c+4|0;h=h+4|0;if((j|0)!=(h|0)){continue}break}}e=e&3;if(!e){break b}while(1){if(J[f+(c<<2)>>2]==(a|0)){J[b+36>>2]=1}c=c+1|0;d=d+1|0;if((e|0)!=(d|0)){continue}break}}return 3523}function TC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:{b:{if(K[a+165|0]){l=a+92|0;if(J[l>>2]>=(b|0)){break a}if(b){J[8369]=J[8369]+1;f=ia[J[6782]](b<<4,16)|0}else{f=0}e=J[a+88>>2];c:{if((e|0)<=0){break c}if((e|0)!=1){j=e&-2;while(1){g=d<<4;h=g+f|0;c=g+J[a+96>>2]|0;k=J[c+4>>2];J[h>>2]=J[c>>2];J[h+4>>2]=k;k=J[c+12>>2];J[h+8>>2]=J[c+8>>2];J[h+12>>2]=k;c=g|16;g=c+f|0;c=c+J[a+96>>2]|0;h=J[c+4>>2];J[g>>2]=J[c>>2];J[g+4>>2]=h;h=J[c+12>>2];J[g+8>>2]=J[c+8>>2];J[g+12>>2]=h;d=d+2|0;i=i+2|0;if((j|0)!=(i|0)){continue}break}}if(!(e&1)){break c}d=d<<4;e=d+f|0;d=d+J[a+96>>2]|0;c=J[d+4>>2];J[e>>2]=J[d>>2];J[e+4>>2]=c;c=J[d+12>>2];J[e+8>>2]=J[d+8>>2];J[e+12>>2]=c}d=J[a+96>>2];if(!(d?!d|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+96>>2]=f;H[a+100|0]=1;break b}l=a+112|0;if(J[l>>2]>=(b|0)){break a}if(b){J[8369]=J[8369]+1;f=ia[J[6782]](b<<2,16)|0}else{f=0}e=J[a+116>>2];g=J[a+108>>2];d:{e:{if((g|0)>0){if(g-1>>>0>=3){h=g&-4;while(1){c=d<<2;N[c+f>>2]=N[c+e>>2];j=c|4;N[j+f>>2]=N[e+j>>2];j=c|8;N[j+f>>2]=N[e+j>>2];c=c|12;N[c+f>>2]=N[c+e>>2];d=d+4|0;i=i+4|0;if((h|0)!=(i|0)){continue}break}}c=g&3;if(c){while(1){i=d<<2;N[i+f>>2]=N[e+i>>2];d=d+1|0;k=k+1|0;if((c|0)!=(k|0)){continue}break}}if(K[a+120|0]){break e}break d}if(!e|!K[a+120|0]){break d}}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}}J[a+116>>2]=f;H[a+120|0]=1}J[l>>2]=b}}function Xe(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=Q(0),k=0,l=0,m=0,n=0;m=Qg(a);H[a+108|0]=1;J[a>>2]=13816;J[a+104>>2]=0;J[a+96>>2]=0;J[a+100>>2]=0;J[a+4>>2]=4;if((c|0)<=0){J[a+96>>2]=c;Sb(m);return}J[8369]=J[8369]+1;f=ia[J[6782]](c<<4,16)|0;i=J[a+96>>2];a:{if((i|0)<=0){break a}if((i|0)!=1){k=i&-2;while(1){g=d<<4;h=g+f|0;e=g+J[a+104>>2]|0;l=J[e+4>>2];J[h>>2]=J[e>>2];J[h+4>>2]=l;l=J[e+12>>2];J[h+8>>2]=J[e+8>>2];J[h+12>>2]=l;e=g|16;g=e+f|0;e=e+J[a+104>>2]|0;h=J[e+4>>2];J[g>>2]=J[e>>2];J[g+4>>2]=h;h=J[e+12>>2];J[g+8>>2]=J[e+8>>2];J[g+12>>2]=h;d=d+2|0;n=n+2|0;if((k|0)!=(n|0)){continue}break}}if(!(i&1)){break a}d=d<<4;i=d+f|0;d=d+J[a+104>>2]|0;e=J[d+4>>2];J[i>>2]=J[d>>2];J[i+4>>2]=e;e=J[d+12>>2];J[i+8>>2]=J[d+8>>2];J[i+12>>2]=e}d=J[a+104>>2];if(!(d?!d|!K[a+108|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+104>>2]=f;H[a+108|0]=1;J[a+100>>2]=c;J[a+96>>2]=c;b:{if((c|0)<=0){break b}i=c&1;c:{if((c|0)==1){d=0;break c}e=c&-2;d=0;c=0;while(1){g=J[b+4>>2];h=J[b>>2];j=N[b+8>>2];k=d<<4;f=k+J[a+104>>2]|0;J[f+12>>2]=0;N[f+8>>2]=j;J[f>>2]=h;J[f+4>>2]=g;b=b+16|0;g=J[b+4>>2];h=J[b>>2];j=N[b+8>>2];f=J[a+104>>2]+(k|16)|0;J[f+12>>2]=0;N[f+8>>2]=j;J[f>>2]=h;J[f+4>>2]=g;d=d+2|0;b=b+16|0;c=c+2|0;if((e|0)!=(c|0)){continue}break}}if(!i){break b}c=J[b+4>>2];f=J[b>>2];j=N[b+8>>2];a=J[a+104>>2]+(d<<4)|0;J[a+12>>2]=0;N[a+8>>2]=j;J[a>>2]=f;J[a+4>>2]=c}Sb(m)}function JD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=Q(0),n=0,o=Q(0),p=0,q=0,r=Q(0),s=Q(0),t=Q(0),u=0,v=0,w=Q(0),x=Q(0),y=Q(0),z=0,A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0),G=Q(0),H=Q(0),I=Q(0);k=ga-2048|0;ga=k;a:{if((d|0)<=0){break a}j=J[a+92>>2];if((j|0)<=0){break a}while(1){if((j|0)>0){h=u<<4;p=h+c|0;g=b+h|0;l=J[a+100>>2];v=J[a+120>>2];y=Q(-0xde0b6b000000000);q=0;h=j;while(1){m=Q(-3.4028234663852886e38);i=-1;n=j-q|0;z=(n|0)<=0;b:{if(z){break b}e=(h|0)<128?h:128;C=(e|0)>1?e:1;r=N[g+8>>2];s=N[g+4>>2];t=N[g>>2];e=0;while(1){D=N[l>>2];E=N[a+12>>2];F=N[l+4>>2];G=N[a+16>>2];H=N[l+8>>2];w=N[v>>2];I=N[a+20>>2];x=Q(ia[J[J[a>>2]+48>>2]](a));o=N[g>>2];A=N[g+4>>2];B=N[g+8>>2];f=(e<<4)+k|0;J[f+12>>2]=0;N[f+8>>2]=Q(H+Q(w*Q(r*I)))-Q(x*B);N[f+4>>2]=Q(F+Q(w*Q(s*G)))-Q(x*A);N[f>>2]=Q(D+Q(w*Q(t*E)))-Q(x*o);v=v+4|0;l=l+16|0;r=B;s=A;t=o;e=e+1|0;if((C|0)!=(e|0)){continue}break}if(z){break b}n=(n|0)<128?n:128;r=N[g+8>>2];s=N[g+4>>2];t=N[g>>2];e=0;while(1){f=(e<<4)+k|0;o=Q(Q(N[f+8>>2]*r)+Q(Q(N[f>>2]*t)+Q(s*N[f+4>>2])));f=o>m;m=f?o:m;i=f?e:i;e=e+1|0;if((n|0)!=(e|0)){continue}break}}if(m>y){e=(i<<4)+k|0;i=J[e+12>>2];J[p+8>>2]=J[e+8>>2];J[p+12>>2]=i;i=J[e+4>>2];J[p>>2]=J[e>>2];J[p+4>>2]=i;y=m}h=h-128|0;q=q+128|0;if((q|0)<(j|0)){continue}break}}u=u+1|0;if((u|0)==(d|0)){break a}j=J[a+92>>2];continue}}ga=k+2048|0}function wz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=0,f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=0,u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0);h=ga-16|0;ga=h;t=J[a+792>>2];if((t|0)>0){b=Q(N[a+336>>2]*b);c=N[a+452>>2];while(1){d=J[a+800>>2]+P(o,96)|0;w=N[d+36>>2];x=N[d+28>>2];y=N[d+32>>2];z=N[d+52>>2];A=N[d+44>>2];B=N[d+48>>2];e=J[d+20>>2];k=N[e+328>>2];f=N[d+12>>2];l=N[d+4>>2];p=N[d+8>>2];g=J[d>>2];i=N[g+16>>2];m=N[d+80>>2];u=N[d+76>>2];j=N[e+332>>2];n=Q(Q(b*Q(Q(Q(Q(f*N[e+44>>2])+Q(Q(l*N[e+36>>2])+Q(p*N[e+40>>2])))+N[e+60>>2])-i))+Q(Q(c*Q(Q(Q(k*m)-Q(u*j))+N[e+320>>2]))-Q(i-N[g+32>>2])));C=i;i=N[d+92>>2];q=N[d+24>>2];r=N[g+8>>2];s=j;j=N[d+84>>2];v=N[e+336>>2];m=Q(Q(b*Q(Q(Q(Q(f*N[e+12>>2])+Q(Q(l*N[e+4>>2])+Q(p*N[e+8>>2])))+N[e+52>>2])-r))+Q(Q(c*Q(Q(Q(s*j)-Q(m*v))+N[e+312>>2]))-Q(r-N[g+24>>2])));s=Q(Q(Q(f*N[e+28>>2])+Q(Q(l*N[e+20>>2])+Q(p*N[e+24>>2])))+N[e+56>>2]);f=N[g+12>>2];k=Q(Q(b*Q(s-f))+Q(Q(c*Q(Q(Q(v*u)-Q(j*k))+N[e+316>>2]))-Q(f-N[g+28>>2])));l=Q(q*Q(Q(N[d+68>>2]*n)+Q(Q(N[d+60>>2]*m)+Q(k*N[d- -64>>2]))));N[g+16>>2]=C+Q(i*l);j=f;f=Q(q*Q(Q(z*n)+Q(Q(A*m)+Q(k*B))));N[g+12>>2]=j+Q(i*f);n=Q(q*Q(Q(w*n)+Q(Q(x*m)+Q(k*y))));N[g+8>>2]=r+Q(i*n);J[h+12>>2]=0;N[h+8>>2]=-l;N[h+4>>2]=-f;N[h>>2]=-n;ub(e,h,d+76|0);o=o+1|0;if((t|0)!=(o|0)){continue}break}}ga=h+16|0}function jD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0);e=ga-48|0;ga=e;j=N[d+8>>2];i=N[c+8>>2];h=Q(Q(j-i)*Q(.5));k=Q(h*h);g=N[d>>2];f=N[c>>2];h=Q(Q(g-f)*Q(.5));o=Q(h*h);l=N[d+4>>2];m=N[c+4>>2];h=Q(Q(l-m)*Q(.5));h=Q(Y(Q(k+Q(o+Q(h*h)))));k=Q(Q(j+i)*Q(.5));l=Q(Q(l+m)*Q(.5));m=Q(Q(g+f)*Q(.5));j=N[a+56>>2];a:{if(Q(R(j))>Q(.7071067690849304)){i=N[a+52>>2];g=Q(Q(i*i)+Q(j*j));f=Q(Q(1)/Q(Y(g)));p=Q(g*f);n=Q(i*f);g=N[a+48>>2];q=Q(n*Q(-g));f=Q(f*Q(-j));r=Q(g*f);break a}g=N[a+48>>2];i=N[a+52>>2];p=Q(Q(g*g)+Q(i*i));f=Q(Q(1)/Q(Y(p)));r=Q(p*f);t=Q(f*Q(-i));q=Q(j*t);f=Q(g*f);p=Q(f*Q(-j))}s=N[a+64>>2];J[e+44>>2]=0;J[e+28>>2]=0;o=k;k=Q(Q(Q(j*k)+Q(Q(g*m)+Q(l*i)))-s);s=Q(o-Q(j*k));n=Q(h*n);o=Q(s-n);j=Q(h*r);r=Q(o-j);N[e+40>>2]=r;l=Q(l-Q(i*k));f=Q(h*f);u=Q(l-f);i=Q(h*q);q=Q(u-i);N[e+36>>2]=q;n=Q(n+s);N[e+24>>2]=n-j;f=Q(f+l);N[e+20>>2]=f-i;J[e+12>>2]=0;g=Q(m-Q(g*k));k=Q(h*t);l=Q(g-k);h=Q(h*p);m=Q(l-h);N[e+32>>2]=m;g=Q(k+g);N[e+16>>2]=g-h;k=Q(j+n);N[e+8>>2]=k;f=Q(i+f);N[e+4>>2]=f;g=Q(h+g);N[e>>2]=g;ia[J[J[b>>2]+8>>2]](b,e,0,0);J[e+44>>2]=0;N[e+40>>2]=k;N[e+36>>2]=f;J[e+28>>2]=0;N[e+24>>2]=j+o;N[e+20>>2]=i+u;N[e+32>>2]=g;N[e+16>>2]=h+l;J[e+12>>2]=0;N[e+8>>2]=r;N[e+4>>2]=q;N[e>>2]=m;ia[J[J[b>>2]+8>>2]](b,e,0,1);ga=e+48|0}function Hc(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=ga-32|0;ga=e;a:{d=J[a>>2];if(!d){break a}g=(b|0)<0?J[a+12>>2]:b;if((g|0)<=0){break a}while(1){h=0;f=d+40|0;if(J[f>>2]){while(1){b=J[d+32>>2];b:{if(d>>>0>=b>>>0){b=d;break b}c=J[b+40>>2];l=(c|0)==(d|0);i=((d|0)!=(c|0))<<2;j=J[(i+b|0)+36>>2];c=J[b+32>>2];if(c){k=(c+((J[c+40>>2]==(b|0))<<2)|0)+36|0}else{k=a}J[k>>2]=d;J[j+32>>2]=d;J[b+32>>2]=d;J[d+32>>2]=c;J[b+36>>2]=J[d+36>>2];J[b+40>>2]=J[f>>2];J[J[d+36>>2]+32>>2]=b;J[J[f>>2]+32>>2]=b;c=d+36|0;J[c+(l<<2)>>2]=b;J[c+i>>2]=j;c=b+24|0;f=J[c+4>>2];J[e+24>>2]=J[c>>2];J[e+28>>2]=f;c=b+16|0;f=J[c+4>>2];J[e+16>>2]=J[c>>2];J[e+20>>2]=f;c=b+8|0;f=J[c+4>>2];J[e+8>>2]=J[c>>2];J[e+12>>2]=f;c=J[b+4>>2];J[e>>2]=J[b>>2];J[e+4>>2]=c;c=d+24|0;f=J[c+4>>2];J[b+24>>2]=J[c>>2];J[b+28>>2]=f;c=d+16|0;f=J[c+4>>2];J[b+16>>2]=J[c>>2];J[b+20>>2]=f;c=d+8|0;f=J[c+4>>2];J[b+8>>2]=J[c>>2];J[b+12>>2]=f;c=J[d+4>>2];J[b>>2]=J[d>>2];J[b+4>>2]=c;c=J[e+28>>2];J[d+24>>2]=J[e+24>>2];J[d+28>>2]=c;c=J[e+20>>2];J[d+16>>2]=J[e+16>>2];J[d+20>>2]=c;c=J[e+12>>2];J[d+8>>2]=J[e+8>>2];J[d+12>>2]=c;c=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=c}d=J[a+16>>2]>>>h|0;h=h+1&31;d=J[(((d&1)<<2)+b|0)+36>>2];f=d+40|0;if(J[f>>2]){continue}break}}b=Ed(a,d);Dd(a,b?J[a>>2]:0,d);J[a+16>>2]=J[a+16>>2]+1;g=g-1|0;if(!g){break a}d=J[a>>2];continue}}ga=e+32|0}function wg(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0;d=N[c+100>>2];g=N[c+24>>2];h=N[c+16>>2];i=N[c+20>>2];e=N[c+108>>2];e=Q(Q(Q(N[c+112>>2]-Q(d*N[c+116>>2]))-Q(Q(Q(Q(g*N[a+72>>2])+Q(Q(h*N[a+64>>2])+Q(i*N[a+68>>2])))+Q(Q(N[c+8>>2]*N[a+88>>2])+Q(Q(N[c>>2]*N[a+80>>2])+Q(N[c+4>>2]*N[a+84>>2]))))*e))-Q(Q(Q(Q(N[c+56>>2]*N[b+72>>2])+Q(Q(N[c+48>>2]*N[b+64>>2])+Q(N[c+52>>2]*N[b+68>>2])))+Q(Q(N[c+40>>2]*N[b+88>>2])+Q(Q(N[c+32>>2]*N[b+80>>2])+Q(N[c+36>>2]*N[b+84>>2]))))*e));j=Q(d+e);f=N[c+120>>2];k=j<f;N[c+100>>2]=k?f:j;d=k?Q(f-d):e;if(J[a+240>>2]){N[a+64>>2]=Q(N[a+112>>2]*Q(d*Q(h*N[a+128>>2])))+N[a+64>>2];N[a+68>>2]=Q(Q(d*Q(i*N[a+132>>2]))*N[a+116>>2])+N[a+68>>2];N[a+72>>2]=Q(Q(d*Q(g*N[a+136>>2]))*N[a+120>>2])+N[a+72>>2];e=N[c+72>>2];f=N[c+68>>2];N[a+80>>2]=Q(Q(d*N[a+96>>2])*N[c+64>>2])+N[a+80>>2];g=N[a+104>>2];N[a+84>>2]=Q(f*Q(d*N[a+100>>2]))+N[a+84>>2];N[a+88>>2]=Q(e*Q(d*g))+N[a+88>>2]}if(J[b+240>>2]){e=N[c+56>>2];f=N[c+52>>2];N[b+64>>2]=Q(N[b+112>>2]*Q(d*Q(N[c+48>>2]*N[b+128>>2])))+N[b+64>>2];N[b+68>>2]=Q(Q(d*Q(f*N[b+132>>2]))*N[b+116>>2])+N[b+68>>2];N[b+72>>2]=Q(Q(d*Q(e*N[b+136>>2]))*N[b+120>>2])+N[b+72>>2];e=N[c+88>>2];f=N[c+84>>2];N[b+80>>2]=Q(Q(d*N[b+96>>2])*N[c+80>>2])+N[b+80>>2];g=N[b+104>>2];N[b+84>>2]=Q(f*Q(d*N[b+100>>2]))+N[b+84>>2];N[b+88>>2]=Q(e*Q(d*g))+N[b+88>>2]}}function sj(a,b){var c=0;c=ga-112|0;ga=c;J[c+108>>2]=a;J[c+104>>2]=b;b=J[c+108>>2];N[c+100>>2]=bc(J[c+104>>2]);N[c+96>>2]=Q(2)/N[c+100>>2];a=ga-16|0;J[a+12>>2]=J[c+104>>2];N[c+92>>2]=N[J[a+12>>2]>>2]*N[c+96>>2];J[a+12>>2]=J[c+104>>2];N[c+88>>2]=N[J[a+12>>2]+4>>2]*N[c+96>>2];J[a+12>>2]=J[c+104>>2];N[c+84>>2]=N[J[a+12>>2]+8>>2]*N[c+96>>2];J[a+12>>2]=J[c+104>>2];N[c+80>>2]=N[J[a+12>>2]+12>>2]*N[c+92>>2];J[a+12>>2]=J[c+104>>2];N[c+76>>2]=N[J[a+12>>2]+12>>2]*N[c+88>>2];J[a+12>>2]=J[c+104>>2];N[c+72>>2]=N[J[a+12>>2]+12>>2]*N[c+84>>2];J[a+12>>2]=J[c+104>>2];N[c+68>>2]=N[J[a+12>>2]>>2]*N[c+92>>2];J[a+12>>2]=J[c+104>>2];N[c+64>>2]=N[J[a+12>>2]>>2]*N[c+88>>2];J[a+12>>2]=J[c+104>>2];N[c+60>>2]=N[J[a+12>>2]>>2]*N[c+84>>2];J[a+12>>2]=J[c+104>>2];N[c+56>>2]=N[J[a+12>>2]+4>>2]*N[c+88>>2];J[a+12>>2]=J[c+104>>2];N[c+52>>2]=N[J[a+12>>2]+4>>2]*N[c+84>>2];J[a+12>>2]=J[c+104>>2];N[c+48>>2]=N[J[a+12>>2]+8>>2]*N[c+84>>2];N[c+44>>2]=Q(1)-Q(N[c+56>>2]+N[c+48>>2]);N[c+40>>2]=N[c+64>>2]-N[c+72>>2];N[c+36>>2]=N[c+60>>2]+N[c+76>>2];N[c+32>>2]=N[c+64>>2]+N[c+72>>2];N[c+28>>2]=Q(1)-Q(N[c+68>>2]+N[c+48>>2]);N[c+24>>2]=N[c+52>>2]-N[c+80>>2];N[c+20>>2]=N[c+60>>2]-N[c+76>>2];N[c+16>>2]=N[c+52>>2]+N[c+80>>2];N[c+12>>2]=Q(1)-Q(N[c+68>>2]+N[c+56>>2]);ld(b,c+44|0,c+40|0,c+36|0,c+32|0,c+28|0,c+24|0,c+20|0,c+16|0,c+12|0);ga=c+112|0}function jh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=ga-96|0;ga=f;e=J[a+8>>2];a:{if((e|0)!=J[a+12>>2]){break a}k=e?e<<1:1;if((k|0)<=(e|0)){break a}if(k){J[8369]=J[8369]+1;h=ia[J[6782]](k<<2,16)|0;e=J[a+8>>2]}b:{if((e|0)<=0){break b}if(e-1>>>0>=3){l=e&-4;while(1){g=i<<2;J[g+h>>2]=J[g+J[a+16>>2]>>2];j=g|4;J[j+h>>2]=J[j+J[a+16>>2]>>2];j=g|8;J[j+h>>2]=J[j+J[a+16>>2]>>2];g=g|12;J[g+h>>2]=J[g+J[a+16>>2]>>2];i=i+4|0;m=m+4|0;if((l|0)!=(m|0)){continue}break}}g=e&3;if(!g){break b}while(1){l=i<<2;J[l+h>>2]=J[l+J[a+16>>2]>>2];i=i+1|0;n=n+1|0;if((g|0)!=(n|0)){continue}break}}i=J[a+16>>2];if(!(!i|!K[a+20|0])){if(i){J[8370]=J[8370]+1;ia[J[6783]](i)}e=J[a+8>>2]}J[a+16>>2]=h;H[a+20|0]=1;J[a+12>>2]=k}J[J[a+16>>2]+(e<<2)>>2]=b;J[a+8>>2]=e+1;e=J[b+16>>2];J[f+40>>2]=J[b+12>>2];J[f+44>>2]=e;e=J[b+8>>2];J[f+32>>2]=J[b+4>>2];J[f+36>>2]=e;e=J[b+32>>2];J[f+56>>2]=J[b+28>>2];J[f+60>>2]=e;e=J[b+24>>2];J[f+48>>2]=J[b+20>>2];J[f+52>>2]=e;e=J[b+48>>2];J[f+72>>2]=J[b+44>>2];J[f+76>>2]=e;e=J[b+40>>2];J[f+64>>2]=J[b+36>>2];J[f+68>>2]=e;e=J[b+64>>2];J[f+88>>2]=J[b+60>>2];J[f+92>>2]=e;e=J[b+56>>2];J[f+80>>2]=J[b+52>>2];J[f+84>>2]=e;e=J[b+192>>2];h=f+16|0;ia[J[J[e>>2]+8>>2]](e,f+32|0,h,f);e=J[a+68>>2];J[b+188>>2]=ia[J[J[e>>2]+8>>2]](e,h,f,J[J[b+192>>2]+4>>2],b,c,d,J[a+24>>2],0);ga=f+96|0}function zl(a,b,c,d){var e=0,f=0,g=Q(0),h=Q(0),i=0,j=Q(0),k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0);j=Q(Q(Q(N[b+8>>2]*N[a+8>>2])+Q(Q(N[b>>2]*N[a>>2])+Q(N[b+4>>2]*N[a+4>>2])))-N[a+12>>2]);if(!(j>Q(1.1920928955078125e-7))){e=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=e;e=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=e;e=1}l=1;a:{if((c|0)<=1){g=j;break a}h=j;while(1){i=(l<<4)+b|0;n=N[i+8>>2];o=N[i>>2];p=N[i+4>>2];g=Q(Q(Q(n*N[a+8>>2])+Q(Q(o*N[a>>2])+Q(p*N[a+4>>2])))-N[a+12>>2]);k=g>Q(1.1920928955078125e-7);if((k|0)!=(h>Q(1.1920928955078125e-7)|0)){f=(l-1<<4)+b|0;q=N[f>>2];r=N[f+4>>2];s=N[f+8>>2];f=(e<<4)+d|0;J[f+12>>2]=0;h=Q(Q(-h)/Q(g-h));m=Q(Q(1)-h);N[f+8>>2]=Q(n*h)+Q(s*m);N[f+4>>2]=Q(p*h)+Q(m*r);N[f>>2]=Q(o*h)+Q(m*q);e=e+1|0}if(!k){k=J[i+4>>2];f=(e<<4)+d|0;J[f>>2]=J[i>>2];J[f+4>>2]=k;k=J[i+12>>2];J[f+8>>2]=J[i+8>>2];J[f+12>>2]=k;e=e+1|0}h=g;l=l+1|0;if((l|0)!=(c|0)){continue}break}}i=j>Q(1.1920928955078125e-7);if((i|0)!=(g>Q(1.1920928955078125e-7)|0)){a=(c-1<<4)+b|0;h=N[a>>2];m=N[a+4>>2];n=N[a+8>>2];o=N[b>>2];p=N[b+4>>2];q=N[b+8>>2];a=(e<<4)+d|0;J[a+12>>2]=0;g=Q(Q(-g)/Q(j-g));j=Q(Q(1)-g);N[a+8>>2]=Q(n*j)+Q(g*q);N[a+4>>2]=Q(j*m)+Q(g*p);N[a>>2]=Q(j*h)+Q(g*o);e=e+1|0}if(!i){c=J[b+4>>2];a=(e<<4)+d|0;J[a>>2]=J[b>>2];J[a+4>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;e=e+1|0}return e}function WF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;J[7401]=J[7401]+1;d=c<<16|b;d=(d<<15^-1)+d|0;d=P(d>>10^d,9);d=d>>6^d;d=(d<<11^-1)+d|0;m=d>>16^d;d=J[a+12>>2];k=m&d-1;e=J[J[a+40>>2]+(k<<2)>>2];a:{if((e|0)!=-1){i=J[a+60>>2];j=J[a+16>>2];while(1){f=j+P(e,12)|0;if(J[f>>2]==(b|0)&J[f+4>>2]==(c|0)){break a}e=J[i+(e<<2)>>2];if((e|0)!=-1){continue}break}}b:{c:{i=J[a+8>>2];f=i;if((f|0)==(d|0)){j=d?d<<1:1;n=(j|0)<=(d|0);if(!n){break c}}else{d=f}J[a+8>>2]=d+1;f=J[a+16>>2];break b}d:{if(!j){f=0;break d}J[8369]=J[8369]+1;f=ia[J[6782]](P(j,12),16)|0;d=J[a+8>>2]}e:{if((d|0)<=0){break e}e=0;if((d|0)!=1){p=d&-2;while(1){g=P(e,12);h=g+J[a+16>>2]|0;l=J[h+4>>2];g=f+g|0;J[g>>2]=J[h>>2];J[g+4>>2]=l;J[g+8>>2]=J[h+8>>2];g=P(e|1,12);h=g+J[a+16>>2]|0;l=J[h+4>>2];g=f+g|0;J[g>>2]=J[h>>2];J[g+4>>2]=l;J[g+8>>2]=J[h+8>>2];e=e+2|0;o=o+2|0;if((p|0)!=(o|0)){continue}break}}if(!(d&1)){break e}e=P(e,12);d=e+f|0;e=e+J[a+16>>2]|0;h=J[e+4>>2];J[d>>2]=J[e>>2];J[d+4>>2]=h;J[d+8>>2]=J[e+8>>2]}d=J[a+16>>2];if(!(d?!d|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+16>>2]=f;H[a+20|0]=1;J[a+12>>2]=j;J[a+8>>2]=J[a+8>>2]+1;if(n){break b}dh(a);k=J[a+12>>2]-1&m}f=P(i,12)+f|0;J[f+8>>2]=0;J[f+4>>2]=c;J[f>>2]=b;b=J[a+60>>2]+(i<<2)|0;a=J[a+40>>2]+(k<<2)|0;J[b>>2]=J[a>>2];J[a>>2]=i}return f|0}function et(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;d=ra(608);b=J[e+4>>2];a=J[e>>2];xb(d,5,J[e+12>>2],J[e+8>>2]);J[d>>2]=19332;c=J[b+12>>2];J[d+308>>2]=J[b+8>>2];J[d+312>>2]=c;c=J[b+4>>2];J[d+300>>2]=J[b>>2];J[d+304>>2]=c;c=J[b+28>>2];J[d+324>>2]=J[b+24>>2];J[d+328>>2]=c;c=J[b+20>>2];J[d+316>>2]=J[b+16>>2];J[d+320>>2]=c;c=J[b+44>>2];J[d+340>>2]=J[b+40>>2];J[d+344>>2]=c;c=J[b+36>>2];J[d+332>>2]=J[b+32>>2];J[d+336>>2]=c;c=J[b+60>>2];J[d+356>>2]=J[b+56>>2];J[d+360>>2]=c;c=J[b+52>>2];J[d+348>>2]=J[b+48>>2];J[d+352>>2]=c;b=J[a+12>>2];J[d+372>>2]=J[a+8>>2];J[d+376>>2]=b;b=J[a+4>>2];J[d+364>>2]=J[a>>2];J[d+368>>2]=b;b=J[a+20>>2];J[d+380>>2]=J[a+16>>2];J[d+384>>2]=b;b=J[a+28>>2];J[d+388>>2]=J[a+24>>2];J[d+392>>2]=b;b=J[a+36>>2];J[d+396>>2]=J[a+32>>2];J[d+400>>2]=b;b=J[a+44>>2];J[d+404>>2]=J[a+40>>2];J[d+408>>2]=b;b=J[a+52>>2];J[d+412>>2]=J[a+48>>2];J[d+416>>2]=b;b=J[a+60>>2];J[d+420>>2]=J[a+56>>2];J[d+424>>2]=b;H[d+552|0]=0;J[d+572>>2]=-1082130432;J[d+524>>2]=0;J[d+444>>2]=1566444395;J[d+448>>2]=1566444395;J[d+592>>2]=0;J[d+428>>2]=1065353216;J[d+432>>2]=1050253722;J[d+436>>2]=1065353216;J[d+440>>2]=1008981770;J[d+596>>2]=0;J[d+600>>2]=1060320051;J[d+604>>2]=0;J[d+452>>2]=1566444395;J[d+456>>2]=1028443341;ga=e+16|0;return d|0}function Sk(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;d=J[a+4>>2];g=d;a:{if((d|0)!=J[a+8>>2]){break a}g=d;h=d?d<<1:1;if((d|0)>=(h|0)){break a}if(h){J[8369]=J[8369]+1;j=ia[J[6782]](P(h,244),16)|0;g=J[a+4>>2]}else{g=d}if((g|0)>0){while(1){c=P(i,244);e=c+j|0;c=c+J[a+12>>2]|0;f=J[c+4>>2];J[e>>2]=J[c>>2];J[e+4>>2]=f;f=J[c+12>>2];J[e+8>>2]=J[c+8>>2];J[e+12>>2]=f;f=J[c+28>>2];J[e+24>>2]=J[c+24>>2];J[e+28>>2]=f;f=J[c+20>>2];J[e+16>>2]=J[c+16>>2];J[e+20>>2]=f;f=J[c+44>>2];J[e+40>>2]=J[c+40>>2];J[e+44>>2]=f;f=J[c+36>>2];J[e+32>>2]=J[c+32>>2];J[e+36>>2]=f;f=J[c+52>>2];J[e+48>>2]=J[c+48>>2];J[e+52>>2]=f;f=J[c+60>>2];J[e+56>>2]=J[c+56>>2];J[e+60>>2]=f;sa(e- -64|0,c- -64|0,180);i=i+1|0;if((g|0)!=(i|0)){continue}break}}g=J[a+12>>2];if(!(g?!g|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+12>>2]=j;H[a+16|0]=1;J[a+8>>2]=h;g=J[a+4>>2]}J[a+4>>2]=g+1;c=J[b+12>>2];g=P(d,244);d=g+J[a+12>>2]|0;J[d+8>>2]=J[b+8>>2];J[d+12>>2]=c;c=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=c;c=J[b+28>>2];J[d+24>>2]=J[b+24>>2];J[d+28>>2]=c;c=J[b+20>>2];J[d+16>>2]=J[b+16>>2];J[d+20>>2]=c;c=J[b+36>>2];J[d+32>>2]=J[b+32>>2];J[d+36>>2]=c;c=J[b+44>>2];J[d+40>>2]=J[b+40>>2];J[d+44>>2]=c;c=J[b+52>>2];J[d+48>>2]=J[b+48>>2];J[d+52>>2]=c;c=J[b+60>>2];J[d+56>>2]=J[b+56>>2];J[d+60>>2]=c;sa(d- -64|0,b- -64|0,180);return g+J[a+12>>2]|0}function Jx(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=Q(0),f=0;f=ga-16|0;ga=f;J[f+12>>2]=a;J[f+8>>2]=b;b=J[f+8>>2];a=ga-32|0;ga=a;J[a+28>>2]=J[f+12>>2];J[a+24>>2]=b;b=J[a+28>>2];d=N[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(d*N[J[c+12>>2]>>2])+Q(N[b>>2]*N[J[a+24>>2]+12>>2]));e=N[b+4>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(e*N[J[c+12>>2]+8>>2])+d);e=Q(-N[b+8>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];N[a+20>>2]=Q(e*N[J[c+12>>2]+4>>2])+d;d=N[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(d*N[J[c+12>>2]+4>>2])+Q(N[b+4>>2]*N[J[a+24>>2]+12>>2]));e=N[b+8>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(e*N[J[c+12>>2]>>2])+d);e=Q(-N[b>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];N[a+16>>2]=Q(e*N[J[c+12>>2]+8>>2])+d;d=N[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(d*N[J[c+12>>2]+8>>2])+Q(N[b+8>>2]*N[J[a+24>>2]+12>>2]));e=N[b>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(e*N[J[c+12>>2]+4>>2])+d);e=Q(-N[b+4>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];N[a+12>>2]=Q(e*N[J[c+12>>2]>>2])+d;d=Q(N[b+12>>2]*N[J[a+24>>2]+12>>2]);e=N[b>>2];c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(d+Q(-Q(e*N[J[c+12>>2]>>2])));e=Q(-N[b+4>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];d=Q(Q(e*N[J[c+12>>2]+4>>2])+d);e=Q(-N[b+8>>2]);c=ga-16|0;J[c+12>>2]=J[a+24>>2];N[a+8>>2]=Q(e*N[J[c+12>>2]+8>>2])+d;xc(b,a+20|0,a+16|0,a+12|0,a+8|0);ga=a+32|0;ga=f+16|0;return b|0}function og(a,b,c){var d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);d=ga+-64|0;ga=d;H[b+84|0]=0;a=J[a+116>>2];e=J[a+16>>2];J[d+8>>2]=J[a+12>>2];J[d+12>>2]=e;e=J[a+8>>2];J[d>>2]=J[a+4>>2];J[d+4>>2]=e;e=J[a+32>>2];J[d+24>>2]=J[a+28>>2];J[d+28>>2]=e;e=J[a+24>>2];J[d+16>>2]=J[a+20>>2];J[d+20>>2]=e;e=J[a+48>>2];J[d+40>>2]=J[a+44>>2];J[d+44>>2]=e;e=J[a+40>>2];J[d+32>>2]=J[a+36>>2];J[d+36>>2]=e;e=J[a+64>>2];J[d+56>>2]=J[a+60>>2];J[d+60>>2]=e;e=J[a+56>>2];J[d+48>>2]=J[a+52>>2];J[d+52>>2]=e;a:{if(!c){break a}a=J[a+480>>2];if(!a){break a}ia[J[J[a>>2]+8>>2]](a,d)}r=N[d+52>>2];i=N[d+24>>2];j=N[d+20>>2];f=N[d+56>>2];k=N[d+40>>2];l=N[d+36>>2];s=N[d+48>>2];m=N[d+8>>2];n=N[d+4>>2];o=N[d>>2];p=N[d+16>>2];q=N[d+32>>2];J[b+48>>2]=0;t=f;f=N[b+164>>2];g=N[b+156>>2];h=N[b+160>>2];N[b+44>>2]=t+Q(Q(k*f)+Q(Q(q*g)+Q(l*h)));N[b+40>>2]=r+Q(Q(f*i)+Q(Q(g*p)+Q(h*j)));N[b+36>>2]=s+Q(Q(f*m)+Q(Q(g*o)+Q(h*n)));J[b- -64>>2]=0;f=N[b+180>>2];g=N[b+172>>2];h=N[b+176>>2];N[b+60>>2]=Q(k*f)+Q(Q(q*g)+Q(l*h));N[b+56>>2]=Q(i*f)+Q(Q(p*g)+Q(h*j));N[b+52>>2]=Q(m*f)+Q(Q(o*g)+Q(n*h));f=N[b+196>>2];g=N[b+192>>2];h=N[b+188>>2];J[b+80>>2]=0;N[b+76>>2]=Q(k*f)+Q(Q(q*h)+Q(l*g));N[b+72>>2]=Q(i*f)+Q(Q(p*h)+Q(j*g));N[b+68>>2]=Q(m*f)+Q(Q(o*h)+Q(n*g));ga=d- -64|0}function PF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;g=ga-160|0;ga=g;f=J[a+12>>2];a:{if(!f){break a}h=K[a+16|0];i=h?b:c;j=J[i+4>>2];b=h?c:b;h=J[b+4>>2];J[e+4>>2]=f;c=g+144|0;N[c+12>>2]=N[f+752>>2];J[c+8>>2]=j;J[c+4>>2]=h;J[c>>2]=11740;J[g+136>>2]=1566444395;b=J[b+12>>2];f=J[b+12>>2];J[g+16>>2]=J[b+8>>2];J[g+20>>2]=f;f=J[b+4>>2];J[g+8>>2]=J[b>>2];J[g+12>>2]=f;f=J[b+28>>2];J[g+32>>2]=J[b+24>>2];J[g+36>>2]=f;f=J[b+20>>2];J[g+24>>2]=J[b+16>>2];J[g+28>>2]=f;f=J[b+44>>2];J[g+48>>2]=J[b+40>>2];J[g+52>>2]=f;f=J[b+36>>2];J[g+40>>2]=J[b+32>>2];J[g+44>>2]=f;h=J[b+60>>2];f=g- -64|0;J[f>>2]=J[b+56>>2];J[f+4>>2]=h;f=J[b+52>>2];J[g+56>>2]=J[b+48>>2];J[g+60>>2]=f;b=J[i+12>>2];f=J[b+12>>2];J[g+80>>2]=J[b+8>>2];J[g+84>>2]=f;f=J[b+4>>2];J[g+72>>2]=J[b>>2];J[g+76>>2]=f;f=J[b+20>>2];J[g+88>>2]=J[b+16>>2];J[g+92>>2]=f;f=J[b+28>>2];J[g+96>>2]=J[b+24>>2];J[g+100>>2]=f;f=J[b+36>>2];J[g+104>>2]=J[b+32>>2];J[g+108>>2]=f;f=J[b+44>>2];J[g+112>>2]=J[b+40>>2];J[g+116>>2]=f;f=J[b+52>>2];J[g+120>>2]=J[b+48>>2];J[g+124>>2]=f;f=J[b+60>>2];J[g+128>>2]=J[b+56>>2];J[g+132>>2]=f;zm(c,g+8|0,e,J[d+20>>2],K[a+16|0]);if(!K[a+8|0]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);f=a;a=J[J[e+12>>2]+8>>2];ab(f,(b?c:a)+4|0,(b?a:d)+4|0)}ga=g+160|0}function tl(a,b,c,d,e,f){var g=0;J[a+4>>2]=b;J[a>>2]=18896;b=J[c+12>>2];J[a+16>>2]=J[c+8>>2];J[a+20>>2]=b;b=J[c+4>>2];J[a+8>>2]=J[c>>2];J[a+12>>2]=b;b=J[c+28>>2];J[a+32>>2]=J[c+24>>2];J[a+36>>2]=b;b=J[c+20>>2];J[a+24>>2]=J[c+16>>2];J[a+28>>2]=b;b=J[c+44>>2];J[a+48>>2]=J[c+40>>2];J[a+52>>2]=b;b=J[c+36>>2];J[a+40>>2]=J[c+32>>2];J[a+44>>2]=b;g=J[c+60>>2];b=a- -64|0;J[b>>2]=J[c+56>>2];J[b+4>>2]=g;b=J[c+52>>2];J[a+56>>2]=J[c+48>>2];J[a+60>>2]=b;b=J[d+12>>2];J[a+80>>2]=J[d+8>>2];J[a+84>>2]=b;b=J[d+4>>2];J[a+72>>2]=J[d>>2];J[a+76>>2]=b;b=J[d+28>>2];J[a+96>>2]=J[d+24>>2];J[a+100>>2]=b;b=J[d+20>>2];J[a+88>>2]=J[d+16>>2];J[a+92>>2]=b;b=J[d+44>>2];J[a+112>>2]=J[d+40>>2];J[a+116>>2]=b;b=J[d+36>>2];J[a+104>>2]=J[d+32>>2];J[a+108>>2]=b;b=J[d+60>>2];J[a+128>>2]=J[d+56>>2];J[a+132>>2]=b;b=J[d+52>>2];J[a+120>>2]=J[d+48>>2];J[a+124>>2]=b;b=J[e+12>>2];J[a+144>>2]=J[e+8>>2];J[a+148>>2]=b;b=J[e+4>>2];J[a+136>>2]=J[e>>2];J[a+140>>2]=b;b=J[e+28>>2];J[a+160>>2]=J[e+24>>2];J[a+164>>2]=b;b=J[e+20>>2];J[a+152>>2]=J[e+16>>2];J[a+156>>2]=b;b=J[e+44>>2];J[a+176>>2]=J[e+40>>2];J[a+180>>2]=b;b=J[e+36>>2];J[a+168>>2]=J[e+32>>2];J[a+172>>2]=b;b=J[e+60>>2];J[a+192>>2]=J[e+56>>2];J[a+196>>2]=b;b=J[e+52>>2];J[a+184>>2]=J[e+48>>2];J[a+188>>2]=b;J[a+208>>2]=0;N[a+204>>2]=f;J[a+200>>2]=1065353216}function ft(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=ra(608);a=J[d+8>>2];ug(b,5,J[d+12>>2]);J[b>>2]=19332;c=J[a+12>>2];J[b+308>>2]=J[a+8>>2];J[b+312>>2]=c;c=J[a+4>>2];J[b+300>>2]=J[a>>2];J[b+304>>2]=c;c=J[a+28>>2];J[b+324>>2]=J[a+24>>2];J[b+328>>2]=c;c=J[a+20>>2];J[b+316>>2]=J[a+16>>2];J[b+320>>2]=c;c=J[a+36>>2];J[b+332>>2]=J[a+32>>2];J[b+336>>2]=c;c=J[a+44>>2];J[b+340>>2]=J[a+40>>2];J[b+344>>2]=c;c=J[a+56>>2];e=J[a+60>>2];f=J[a+48>>2];a=J[a+52>>2];H[b+527|0]=0;J[b+356>>2]=c;J[b+360>>2]=e;J[b+348>>2]=f;J[b+352>>2]=a;a=J[b+304>>2];J[b+364>>2]=J[b+300>>2];J[b+368>>2]=a;a=J[b+312>>2];J[b+372>>2]=J[b+308>>2];J[b+376>>2]=a;a=J[b+320>>2];J[b+380>>2]=J[b+316>>2];J[b+384>>2]=a;a=J[b+328>>2];J[b+388>>2]=J[b+324>>2];J[b+392>>2]=a;a=J[b+344>>2];J[b+404>>2]=J[b+340>>2];J[b+408>>2]=a;a=J[b+336>>2];J[b+396>>2]=J[b+332>>2];J[b+400>>2]=a;H[b+552|0]=0;H[b+526|0]=0;I[b+524>>1]=0;J[b+420>>2]=0;J[b+424>>2]=0;J[b+412>>2]=0;J[b+416>>2]=0;J[b+572>>2]=-1082130432;J[b+452>>2]=1566444395;J[b+444>>2]=1566444395;J[b+448>>2]=1566444395;J[b+604>>2]=0;J[b+596>>2]=0;J[b+600>>2]=1060320051;J[b+592>>2]=0;J[b+456>>2]=1028443341;J[b+436>>2]=1065353216;J[b+440>>2]=1008981770;J[b+428>>2]=1065353216;J[b+432>>2]=1050253722;ga=d+16|0;return b|0}function KD(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=0,n=0,o=Q(0),p=0,q=0,r=0,s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0);k=ga-2048|0;ga=k;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;d=N[c+8>>2];i=N[c>>2];j=N[c+4>>2];h=Q(Q(d*d)+Q(Q(i*i)+Q(j*j)));if(h<Q(1.4210854715202004e-14)){i=Q(1)}else{l=d;d=Q(Q(1)/Q(Y(h)));l=Q(l*d);o=Q(j*d);i=Q(i*d)}m=J[b+92>>2];if((m|0)>0){c=J[b+100>>2];p=J[b+120>>2];j=Q(-0xde0b6b000000000);n=m;while(1){g=m-q|0;a:{if((g|0)>0){e=(n|0)<128?n:128;r=(e|0)>1?e:1;e=0;while(1){s=N[c>>2];t=N[b+12>>2];u=N[c+4>>2];v=N[b+16>>2];w=N[c+8>>2];d=N[p>>2];x=N[b+20>>2];h=Q(ia[J[J[b>>2]+48>>2]](b));f=(e<<4)+k|0;J[f+12>>2]=0;N[f+8>>2]=Q(w+Q(d*Q(l*x)))-Q(l*h);N[f+4>>2]=Q(u+Q(d*Q(o*v)))-Q(o*h);N[f>>2]=Q(s+Q(d*Q(i*t)))-Q(i*h);p=p+4|0;c=c+16|0;e=e+1|0;if((r|0)!=(e|0)){continue}break}f=0;e=-1;d=Q(-3.4028234663852886e38);if((g|0)<=0){break a}r=(g|0)<128?g:128;while(1){g=(f<<4)+k|0;h=Q(Q(N[g+8>>2]*l)+Q(Q(N[g>>2]*i)+Q(o*N[g+4>>2])));g=h>d;d=g?h:d;e=g?f:e;f=f+1|0;if((r|0)!=(f|0)){continue}break}break a}d=Q(-3.4028234663852886e38);e=-1}if(d>j){e=(e<<4)+k|0;f=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=f;f=J[e+4>>2];J[a>>2]=J[e>>2];J[a+4>>2]=f;j=d}n=n-128|0;q=q+128|0;if((q|0)<(m|0)){continue}break}}ga=k+2048|0}function vA(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0);e=J[a+8>>2];if((e|0)>0){while(1){c=J[J[a+16>>2]+(g<<2)>>2];if(!(!(K[c+236|0]&2)|!c|(!(K[c+204|0]&2)|J[c+216>>2]==2))){e=ga-32|0;ga=e;if(b!=Q(0)){d=J[c+480>>2];if(d){ia[J[J[d>>2]+8>>2]](d,c+4|0)}J[c+324>>2]=0;f=Q(Q(1)/b);N[c+320>>2]=f*Q(N[c+60>>2]-N[c+124>>2]);N[c+316>>2]=f*Q(N[c+56>>2]-N[c+120>>2]);N[c+312>>2]=f*Q(N[c+52>>2]-N[c+116>>2]);hc(c+68|0,c+4|0,e+16|0,e+12|0);i=N[e+16>>2];j=N[e+20>>2];k=N[e+24>>2];h=N[e+12>>2];J[c+340>>2]=0;N[c+336>>2]=f*Q(h*k);N[c+332>>2]=f*Q(h*j);N[c+328>>2]=f*Q(i*h);d=J[c+324>>2];J[c+140>>2]=J[c+320>>2];J[c+144>>2]=d;d=J[c+316>>2];J[c+132>>2]=J[c+312>>2];J[c+136>>2]=d;d=J[c+332>>2];J[c+148>>2]=J[c+328>>2];J[c+152>>2]=d;d=J[c+340>>2];J[c+156>>2]=J[c+336>>2];J[c+160>>2]=d;d=J[c+8>>2];J[c+68>>2]=J[c+4>>2];J[c+72>>2]=d;d=J[c+16>>2];J[c+76>>2]=J[c+12>>2];J[c+80>>2]=d;d=J[c+24>>2];J[c+84>>2]=J[c+20>>2];J[c+88>>2]=d;d=J[c+32>>2];J[c+92>>2]=J[c+28>>2];J[c+96>>2]=d;d=J[c+48>>2];J[c+108>>2]=J[c+44>>2];J[c+112>>2]=d;d=J[c+40>>2];J[c+100>>2]=J[c+36>>2];J[c+104>>2]=d;d=J[c+64>>2];J[c+124>>2]=J[c+60>>2];J[c+128>>2]=d;d=J[c+56>>2];J[c+116>>2]=J[c+52>>2];J[c+120>>2]=d}ga=e+32|0;e=J[a+8>>2]}g=g+1|0;if((g|0)<(e|0)){continue}break}}}function uG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=ga-160|0;ga=f;g=J[a+12>>2];a:{if(!g){break a}h=J[c+4>>2];i=J[b+4>>2];J[e+4>>2]=g;J[f+152>>2]=1566444395;b=J[b+12>>2];g=J[b+12>>2];J[f+32>>2]=J[b+8>>2];J[f+36>>2]=g;g=J[b+4>>2];J[f+24>>2]=J[b>>2];J[f+28>>2]=g;g=J[b+28>>2];J[f+48>>2]=J[b+24>>2];J[f+52>>2]=g;g=J[b+20>>2];J[f+40>>2]=J[b+16>>2];J[f+44>>2]=g;j=J[b+44>>2];g=f- -64|0;J[g>>2]=J[b+40>>2];J[g+4>>2]=j;g=J[b+36>>2];J[f+56>>2]=J[b+32>>2];J[f+60>>2]=g;g=J[b+60>>2];J[f+80>>2]=J[b+56>>2];J[f+84>>2]=g;g=J[b+52>>2];J[f+72>>2]=J[b+48>>2];J[f+76>>2]=g;b=J[c+12>>2];c=J[b+12>>2];J[f+96>>2]=J[b+8>>2];J[f+100>>2]=c;c=J[b+4>>2];J[f+88>>2]=J[b>>2];J[f+92>>2]=c;c=J[b+20>>2];J[f+104>>2]=J[b+16>>2];J[f+108>>2]=c;c=J[b+28>>2];J[f+112>>2]=J[b+24>>2];J[f+116>>2]=c;c=J[b+36>>2];J[f+120>>2]=J[b+32>>2];J[f+124>>2]=c;c=J[b+44>>2];J[f+128>>2]=J[b+40>>2];J[f+132>>2]=c;c=J[b+52>>2];J[f+136>>2]=J[b+48>>2];J[f+140>>2]=c;c=J[b+60>>2];J[f+144>>2]=J[b+56>>2];J[f+148>>2]=c;b=f+8|0;J[b+8>>2]=h;J[b+4>>2]=i;J[b>>2]=10020;Hm(b,f+24|0,e,J[d+20>>2],0);if(!K[a+8|0]){break a}a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];d=J[J[e+8>>2]+8>>2];b=(c|0)==(d|0);g=a;a=J[J[e+12>>2]+8>>2];ab(g,(b?c:a)+4|0,(b?a:d)+4|0)}ga=f+160|0}function Rb(a,b,c,d,e){var f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0);o=ga-16|0;ga=o;f=N[a+52>>2];g=N[a+56>>2];j=N[a+48>>2];h=N[b>>2];k=N[b+4>>2];i=N[b+8>>2];J[e+60>>2]=0;N[e+56>>2]=g+Q(i*d);N[e+52>>2]=f+Q(k*d);N[e+48>>2]=j+Q(h*d);l=N[c+8>>2];m=N[c>>2];n=N[c+4>>2];f=Q(Y(Q(Q(l*l)+Q(Q(m*m)+Q(n*n)))));g=Q(f*d)>Q(.7853981852531433)?Q(Q(.7853981852531433)/d):f;a:{if(g<Q(.0010000000474974513)){f=Q(Q(d*Q(.5))+Q(g*Q(Q(Q(Q(d*d)*d)*Q(-.02083333395421505))*g)));break a}f=Q(Ga(Q(Q(g*Q(.5))*d))/g)}Na(a,o);j=N[o+8>>2];h=N[o>>2];k=N[o+4>>2];i=N[o+12>>2];J[e+44>>2]=0;J[e+28>>2]=0;J[e+12>>2]=0;l=Q(l*f);d=Ha(Q(Q(g*d)*Q(.5)));g=Q(n*f);f=Q(m*f);m=Q(Q(Q(h*l)+Q(Q(k*d)+Q(i*g)))-Q(j*f));n=Q(Q(Q(Q(d*i)-Q(h*f))-Q(g*k))-Q(l*j));p=Q(Q(Q(f*k)+Q(Q(d*j)+Q(l*i)))-Q(g*h));h=Q(Q(Q(g*j)+Q(Q(d*h)+Q(f*i)))-Q(l*k));f=Q(Q(1)/Q(Y(Q(Q(n*n)+Q(Q(p*p)+Q(Q(h*h)+Q(m*m)))))));d=Q(m*f);g=Q(n*f);j=Q(p*f);f=Q(h*f);h=Q(Q(2)/Q(Q(g*g)+Q(Q(j*j)+Q(Q(f*f)+Q(d*d)))));k=Q(j*h);i=Q(d*k);l=Q(f*h);m=Q(g*l);N[e+36>>2]=i+m;n=Q(f*k);h=Q(d*h);p=Q(g*h);N[e+32>>2]=n-p;N[e+24>>2]=i-m;i=Q(f*h);g=Q(g*k);N[e+16>>2]=i+g;N[e+8>>2]=n+p;N[e+4>>2]=i-g;f=Q(f*l);d=Q(d*h);N[e+40>>2]=Q(1)-Q(f+d);g=f;f=Q(j*k);N[e+20>>2]=Q(1)-Q(g+f);N[e>>2]=Q(1)-Q(d+f);ga=o+16|0}function ap(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;c=ra(460);a=J[f+12>>2];b=J[f+28>>2];e=J[f+24>>2];Lk(c,b,e,J[f+20>>2]);H[c+340|0]=1;J[c>>2]=22728;d=0;J[c+336>>2]=0;J[c+368>>2]=0;J[c+372>>2]=0;J[c+360>>2]=0;J[c+364>>2]=1148846080;J[c+352>>2]=1067030938;J[c+356>>2]=0;J[c+328>>2]=0;J[c+332>>2]=0;J[c+376>>2]=0;J[c+380>>2]=0;J[c+384>>2]=0;J[c+388>>2]=0;J[c+392>>2]=0;H[c+424|0]=1;J[c+404>>2]=0;J[c+396>>2]=-1054867456;J[c+400>>2]=0;J[c+420>>2]=0;H[c+456|0]=0;J[c+452>>2]=a;J[c+412>>2]=0;J[c+416>>2]=0;if(!a){J[8369]=J[8369]+1;a=ia[J[6782]](40,16)|0;Yj(a);H[c+456|0]=1;J[c+452>>2]=a}H[c+350|0]=0;I[c+348>>1]=1;J[c+344>>2]=4302;J[c+388>>2]=b;J[c+384>>2]=e;e=c+408|0;_j(e);g=J[c+412>>2];if((g|0)>0){while(1){b=J[c+420>>2]+(d<<2)|0;a=J[b>>2];J[b>>2]=0;if(a){while(1){b=J[a+280>>2];ta(a);a=b;if(a){continue}break}}d=d+1|0;if((g|0)!=(d|0)){continue}break}}J[c+360>>2]=0;J[c+352>>2]=1067030938;J[c+356>>2]=0;J[c+444>>2]=1;J[c+448>>2]=1;J[c+436>>2]=0;J[c+428>>2]=1048576e3;J[c+432>>2]=0;J[c+392>>2]=0;J[c+376>>2]=0;J[c+380>>2]=0;J[c+368>>2]=0;J[c+372>>2]=0;J[c+404>>2]=0;J[c+396>>2]=-1054867456;J[c+400>>2]=0;_j(e);ga=f+32|0;return c|0}function vn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;g=J[c+4>>2];J[b+16>>2]=J[c>>2];J[b+20>>2]=g;g=J[c+12>>2];J[b+24>>2]=J[c+8>>2];J[b+28>>2]=g;g=J[d+4>>2];J[b+32>>2]=J[d>>2];J[b+36>>2]=g;g=J[d+12>>2];J[b+40>>2]=J[d+8>>2];J[b+44>>2]=g;l=L[b+12>>1];g=ga-16|0;ga=g;k=J[a+60>>2];Jd(a,g+10|0,c,0);Jd(a,g+4|0,d,1);h=J[a+68>>2];f=k+(l<<6)|0;j=L[f+48>>1];i=h+(j<<2)|0;m=L[i>>1];f=L[f+54>>1];h=h+(f<<2)|0;o=L[h>>1];p=L[g+4>>1];n=i;i=L[g+10>>1];I[n>>1]=i;I[h>>1]=L[g+4>>1];h=i-m|0;if((h|0)<0){Id(a,0,j)}i=p-o|0;if((i|0)>0){ff(a,0,f)}if((h|0)>0){ef(a,0,j,e)}if((i|0)<0){Hd(a,0,f,e)}h=J[a+72>>2];f=k+(l<<6)|0;j=L[f+50>>1];i=h+(j<<2)|0;m=L[i>>1];f=L[f+56>>1];h=h+(f<<2)|0;o=L[h>>1];p=L[g+6>>1];n=i;i=L[g+12>>1];I[n>>1]=i;I[h>>1]=L[g+6>>1];h=i-m|0;if((h|0)<0){Id(a,1,j)}i=p-o|0;if((i|0)>0){ff(a,1,f)}if((h|0)>0){ef(a,1,j,e)}if((i|0)<0){Hd(a,1,f,e)}j=J[a+76>>2];k=k+(l<<6)|0;l=L[k+52>>1];f=j+(l<<2)|0;h=L[f>>1];k=L[k+58>>1];j=j+(k<<2)|0;i=L[j>>1];m=L[g+8>>1];n=f;f=L[g+14>>1];I[n>>1]=f;I[j>>1]=L[g+8>>1];j=f-h|0;if((j|0)<0){Id(a,2,l)}f=m-i|0;if((f|0)>0){ff(a,2,k)}if((j|0)>0){ef(a,2,l,e)}if((f|0)<0){Hd(a,2,k,e)}ga=g+16|0;a=J[a+108>>2];if(a){ia[J[J[a>>2]+16>>2]](a,J[b+60>>2],c,d,e)}}function Mm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=0,h=0;c=ga-784|0;ga=c;J[c+732>>2]=0;J[c+736>>2]=0;J[c+744>>2]=0;J[c+748>>2]=0;J[c+740>>2]=1065353216;J[c+752>>2]=0;J[c+756>>2]=0;J[c+764>>2]=0;J[c+768>>2]=0;J[c+760>>2]=1065353216;J[c+772>>2]=0;J[c+776>>2]=0;J[c+780>>2]=0;J[c+724>>2]=0;J[c+728>>2]=0;J[c+720>>2]=1065353216;J[c+712>>2]=0;J[c+716>>2]=0;J[c+544>>2]=6804;N[c+708>>2]=N[a+200>>2];f=N[a+196>>2];d=c+488|0;J[d+4>>2]=35;J[d+8>>2]=0;J[d>>2]=14268;J[d+44>>2]=1025758986;J[d+20>>2]=1065353216;J[d+24>>2]=0;J[d+12>>2]=1065353216;J[d+16>>2]=1065353216;J[d>>2]=13984;N[c+532>>2]=f;N[c+516>>2]=f;J[c+492>>2]=8;J[c+488>>2]=16132;g=c+384|0;h=Bb(g);J[c+388>>2]=1;J[c+384>>2]=2176;e=J[b+12>>2];J[c+448>>2]=J[b+8>>2];J[c+452>>2]=e;e=J[b+4>>2];J[c+440>>2]=J[b>>2];J[c+444>>2]=e;e=J[b+20>>2];J[c+456>>2]=J[b+16>>2];J[c+460>>2]=e;e=J[b+28>>2];J[c+464>>2]=J[b+24>>2];J[c+468>>2]=e;e=J[b+36>>2];J[c+472>>2]=J[b+32>>2];J[c+476>>2]=e;e=J[b+44>>2];J[c+480>>2]=J[b+40>>2];J[c+484>>2]=e;H[c+356|0]=0;J[c+332>>2]=953267991;b=c+8|0;J[b+12>>2]=g;J[b+8>>2]=d;J[b+4>>2]=c+24;J[b>>2]=19004;d=b;b=c+720|0;a:{if(!sl(d,a+4|0,a+68|0,b,b,c+544|0)){break a}f=N[c+708>>2];if(!(f<N[a+200>>2])){break a}N[a+200>>2]=f}Qa(h);ga=c+784|0}function Ay(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=Q(0),m=0,n=0;a:{if(ia[J[J[c>>2]+16>>2]](c)|0){break a}h=J[b+712>>2];f=ia[J[J[c>>2]+36>>2]](c)|0;b:{if(!(ia[J[J[c>>2]+8>>2]](c)|0)){break b}a=ia[J[J[c>>2]+20>>2]](c)|0;i=ia[J[J[c>>2]+24>>2]](c)|0;if((h|0)<=0){break b}a=f+(a<<2)|0;g=J[b+720>>2];if((h|0)!=1){j=h&-2;i=i<<2;while(1){e=g+P(d,104)|0;k=J[e+12>>2];n=J[e+8>>2];N[a+8>>2]=N[e+16>>2];J[a>>2]=n;J[a+4>>2]=k;e=g+P(d|1,104)|0;l=N[e+16>>2];k=J[e+12>>2];a=a+i|0;J[a>>2]=J[e+8>>2];J[a+4>>2]=k;N[a+8>>2]=l;a=a+i|0;d=d+2|0;m=m+2|0;if((j|0)!=(m|0)){continue}break}}if(!(h&1)){break b}d=g+P(d,104)|0;g=J[d+12>>2];i=J[d+8>>2];N[a+8>>2]=N[d+16>>2];J[a>>2]=i;J[a+4>>2]=g}if(!(ia[J[J[c>>2]+12>>2]](c)|0)){break a}a=ia[J[J[c>>2]+28>>2]](c)|0;c=ia[J[J[c>>2]+32>>2]](c)|0;if((h|0)<=0){break a}a=f+(a<<2)|0;b=J[b+720>>2];d=0;if((h|0)!=1){i=h&-2;c=c<<2;g=0;while(1){f=b+P(d,104)|0;e=J[f+76>>2];j=J[f+72>>2];N[a+8>>2]=N[f+80>>2];J[a>>2]=j;J[a+4>>2]=e;f=b+P(d|1,104)|0;l=N[f+80>>2];e=J[f+76>>2];a=a+c|0;J[a>>2]=J[f+72>>2];J[a+4>>2]=e;N[a+8>>2]=l;a=a+c|0;d=d+2|0;g=g+2|0;if((i|0)!=(g|0)){continue}break}}if(!(h&1)){break a}b=b+P(d,104)|0;c=J[b+76>>2];d=J[b+72>>2];N[a+8>>2]=N[b+80>>2];J[a>>2]=d;J[a+4>>2]=c}}function SC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a:{b:{if(K[a+164|0]){k=a+132|0;if(J[k>>2]>=(b|0)){break a}if(b){J[8369]=J[8369]+1;e=ia[J[6782]](b<<2,16)|0}else{e=0}d=J[a+136>>2];f=J[a+128>>2];c:{d:{if((f|0)>0){if(f-1>>>0>=3){l=f&-4;while(1){c=g<<2;J[c+e>>2]=J[d+c>>2];h=c|4;J[h+e>>2]=J[d+h>>2];h=c|8;J[h+e>>2]=J[d+h>>2];c=c|12;J[c+e>>2]=J[d+c>>2];g=g+4|0;i=i+4|0;if((l|0)!=(i|0)){continue}break}}c=f&3;if(c){while(1){f=g<<2;J[f+e>>2]=J[d+f>>2];g=g+1|0;j=j+1|0;if((c|0)!=(j|0)){continue}break}}if(K[a+140|0]){break d}break c}if(!d|!K[a+140|0]){break c}}if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}}J[a+136>>2]=e;H[a+140|0]=1;break b}k=a+152|0;if(J[k>>2]>=(b|0)){break a}if(b){J[8369]=J[8369]+1;e=ia[J[6782]](b<<1,16)|0}else{e=0}d=J[a+156>>2];f=J[a+148>>2];e:{f:{if((f|0)>0){if(f-1>>>0>=3){l=f&-4;while(1){c=g<<1;I[c+e>>1]=L[d+c>>1];h=c|2;I[h+e>>1]=L[d+h>>1];h=c|4;I[h+e>>1]=L[d+h>>1];c=c|6;I[c+e>>1]=L[d+c>>1];g=g+4|0;i=i+4|0;if((l|0)!=(i|0)){continue}break}}c=f&3;if(c){while(1){f=g<<1;I[f+e>>1]=L[d+f>>1];g=g+1|0;j=j+1|0;if((c|0)!=(j|0)){continue}break}}if(K[a+160|0]){break f}break e}if(!d|!K[a+160|0]){break e}}if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}}J[a+156>>2]=e;H[a+160|0]=1}J[k>>2]=b}}function Td(a,b,c){var d=0,e=0,f=0,g=0;e=ga-80|0;ga=e;J[e+76>>2]=a;J[e+72>>2]=b;J[e+68>>2]=c;g=J[e+72>>2];c=J[e+68>>2];b=ga-48|0;ga=b;f=e+16|0;J[b+44>>2]=f;J[b+40>>2]=g;J[b+36>>2]=c;d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=0;N[b+32>>2]=oc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=0;N[b+28>>2]=nc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=0;N[b+24>>2]=mc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=1;N[b+20>>2]=oc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=1;N[b+16>>2]=nc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=1;N[b+12>>2]=mc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=2;N[b+8>>2]=oc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=2;N[b+4>>2]=nc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);d=J[b+36>>2];c=ga-16|0;J[c+12>>2]=J[b+40>>2];J[c+8>>2]=2;N[b>>2]=mc(d,J[c+12>>2]+(J[c+8>>2]<<4)|0);qf(f,b+32|0,b+28|0,b+24|0,b+20|0,b+16|0,b+12|0,b+8|0,b+4|0,b);ga=b+48|0;wb(e,g,J[e+68>>2]+48|0);Vf(a,f,e);ga=e+80|0}function VE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;fb(a,b,c);N[b+20>>2]=N[a+72>>2];d=J[a+16>>2];J[b+12>>2]=0;J[b+16>>2]=d;if(d){g=ia[J[J[c>>2]+16>>2]](c,76,d)|0;d=J[g+8>>2];J[b+12>>2]=ia[J[J[c>>2]+28>>2]](c,d);if(J[b+16>>2]>0){f=J[a+24>>2];while(1){e=P(h,80);f=e+f|0;N[d+72>>2]=N[f+72>>2];J[d+64>>2]=ia[J[J[c>>2]+28>>2]](c,J[f+64>>2]);if(!(ia[J[J[c>>2]+24>>2]](c,J[(e+J[a+24>>2]|0)+64>>2])|0)){f=J[(e+J[a+24>>2]|0)+64>>2];f=(k=c,l=ia[J[J[f>>2]+52>>2]](f)|0,m=1,j=J[J[c>>2]+16>>2],ia[j](k|0,l|0,m|0)|0);i=J[(e+J[a+24>>2]|0)+64>>2];m=c,l=f,k=ia[J[J[i>>2]+56>>2]](i,J[f+8>>2],c)|0,n=1346455635,o=J[(e+J[a+24>>2]|0)+64>>2],j=J[J[c>>2]+20>>2],ia[j](m|0,l|0,k|0,n|0,o|0)}f=J[a+24>>2];e=e+f|0;J[d+68>>2]=J[e+68>>2];N[d>>2]=N[e>>2];N[d+4>>2]=N[e+4>>2];N[d+8>>2]=N[e+8>>2];N[d+12>>2]=N[e+12>>2];N[d+16>>2]=N[e+16>>2];N[d+20>>2]=N[e+20>>2];N[d+24>>2]=N[e+24>>2];N[d+28>>2]=N[e+28>>2];N[d+32>>2]=N[e+32>>2];N[d+36>>2]=N[e+36>>2];N[d+40>>2]=N[e+40>>2];N[d+44>>2]=N[e+44>>2];N[d+48>>2]=N[e+48>>2];N[d+52>>2]=N[e+52>>2];N[d+56>>2]=N[e+56>>2];N[d+60>>2]=N[e+60>>2];d=d+76|0;h=h+1|0;if((h|0)<J[b+16>>2]){continue}break}}ia[J[J[c>>2]+20>>2]](c,g,4126,1497453121,J[g+8>>2])}return 3978}function nC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=0,D=Q(0),E=Q(0),F=Q(0);f=ga+-64|0;ga=f;C=ia[J[J[a>>2]+92>>2]](a)|0;g=J[J[a+184>>2]+(b<<2)>>2];a:{if(C){a=J[a+164>>2]+(b<<6)|0;q=N[a+32>>2];r=N[a>>2];s=N[a+16>>2];t=N[a+56>>2];u=N[a+52>>2];v=N[a+48>>2];w=N[a+36>>2];x=N[a+20>>2];y=N[a+4>>2];z=N[a+40>>2];A=N[a+24>>2];B=N[a+8>>2];D=N[c+52>>2];E=N[c+56>>2];h=N[c+24>>2];i=N[c+20>>2];j=N[c+40>>2];k=N[c+36>>2];F=N[c+48>>2];l=N[c+8>>2];m=N[c>>2];n=N[c+4>>2];o=N[c+16>>2];p=N[c+32>>2];J[f+60>>2]=0;J[f+44>>2]=0;J[f+28>>2]=0;N[f+40>>2]=Q(z*j)+Q(Q(B*p)+Q(A*k));N[f+36>>2]=Q(w*j)+Q(Q(y*p)+Q(x*k));N[f+24>>2]=Q(z*h)+Q(Q(B*o)+Q(A*i));N[f+20>>2]=Q(w*h)+Q(Q(y*o)+Q(x*i));N[f+56>>2]=E+Q(Q(t*j)+Q(Q(v*p)+Q(k*u)));N[f+52>>2]=D+Q(Q(t*h)+Q(Q(v*o)+Q(i*u)));J[f+12>>2]=0;N[f+32>>2]=Q(q*j)+Q(Q(r*p)+Q(s*k));N[f+16>>2]=Q(q*h)+Q(Q(r*o)+Q(s*i));N[f>>2]=Q(q*l)+Q(Q(r*m)+Q(s*n));N[f+8>>2]=Q(z*l)+Q(Q(B*m)+Q(n*A));N[f+4>>2]=Q(w*l)+Q(Q(y*m)+Q(n*x));N[f+48>>2]=F+Q(Q(t*l)+Q(Q(v*m)+Q(n*u)));ia[J[J[g>>2]+8>>2]](g,f,d,e);break a}ia[J[J[g>>2]+8>>2]](g,c,d,e)}ga=f- -64|0}function _j(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;J[a+32>>2]=262144;c=J[a+4>>2];a:{if((c|0)>=2383){break a}if(J[a+8>>2]<2383){J[8369]=J[8369]+1;g=ia[J[6782]](9532,16)|0;i=J[a+4>>2];b:{if((i|0)<=0){break b}if(i-1>>>0>=3){j=i&-4;while(1){h=e<<2;J[h+g>>2]=J[J[a+12>>2]+h>>2];d=h|4;J[d+g>>2]=J[d+J[a+12>>2]>>2];d=h|8;J[d+g>>2]=J[d+J[a+12>>2]>>2];d=h|12;J[d+g>>2]=J[d+J[a+12>>2]>>2];e=e+4|0;f=f+4|0;if((j|0)!=(f|0)){continue}break}}j=i&3;if(!j){break b}while(1){d=e<<2;J[d+g>>2]=J[d+J[a+12>>2]>>2];e=e+1|0;b=b+1|0;if((j|0)!=(b|0)){continue}break}}b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=g;H[a+16|0]=1;J[a+8>>2]=2383}d=(c^-1)+2383|0;b=2383-c&3;if(b){e=0;while(1){J[J[a+12>>2]+(c<<2)>>2]=0;c=c+1|0;e=e+1|0;if((b|0)!=(e|0)){continue}break}}if(d>>>0<3){break a}while(1){b=c<<2;J[b+J[a+12>>2]>>2]=0;J[(b+J[a+12>>2]|0)+4>>2]=0;J[(b+J[a+12>>2]|0)+8>>2]=0;J[(b+J[a+12>>2]|0)+12>>2]=0;c=c+4|0;if((c|0)!=2383){continue}break}}J[a+4>>2]=2383;f=0;while(1){b=J[a+12>>2]+(f<<2)|0;c=J[b>>2];J[b>>2]=0;if(c){while(1){b=J[c+280>>2];ta(c);c=b;if(b){continue}break}}f=f+1|0;if((f|0)!=2383){continue}break}J[a+36>>2]=1;J[a+40>>2]=1;J[a+28>>2]=0;J[a+20>>2]=1048576e3;J[a+24>>2]=0}function $j(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0;eh(a,b);J[a>>2]=22232;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22320;H[c+4|0]=0;J[a+92>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22400;H[c+4|0]=0;J[a+96>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22400;J[a+100>>2]=c;H[c+4|0]=1;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22480;H[c+4|0]=0;J[a+104>>2]=c;J[8369]=J[8369]+1;c=ia[J[6782]](8,16)|0;J[c>>2]=22564;J[a+108>>2]=c;H[c+4|0]=1;a:{if(!K[a+20|0]){break a}c=J[a+16>>2];if(!c|J[c>>2]>155){break a}c=J[c+16>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}c=J[a+16>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}J[8369]=J[8369]+1;e=ia[J[6782]](20,16)|0;b=J[b+12>>2];J[e+4>>2]=b;J[e>>2]=156;J[8369]=J[8369]+1;b=ia[J[6782]](P(b,156),16)|0;J[e+12>>2]=b;J[e+16>>2]=b;g=J[e+4>>2];J[e+8>>2]=g;f=g-1|0;b:{if(!f){break b}c=J[e>>2];h=f&7;if(h){while(1){d=b;b=b+c|0;J[d>>2]=b;f=f-1|0;i=i+1|0;if((i|0)!=(h|0)){continue}break}}if(g-2>>>0<7){break b}while(1){d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;d=b;b=b+c|0;J[d>>2]=b;f=f-8|0;if(f){continue}break}}J[b>>2]=0;J[a+16>>2]=e}}function Uk(a){a=a|0;var b=0;J[a>>2]=19884;b=J[a+176>>2];if(!(b?!b|!K[a+180|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+176>>2]=0;H[a+180|0]=1;J[a+168>>2]=0;J[a+172>>2]=0;b=J[a+156>>2];if(!(b?!b|!K[a+160|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+156>>2]=0;H[a+160|0]=1;J[a+148>>2]=0;J[a+152>>2]=0;b=J[a+136>>2];if(!(b?!b|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+136>>2]=0;H[a+140|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;b=J[a+116>>2];if(!(b?!b|!K[a+120|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+116>>2]=0;H[a+120|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;b=J[a+96>>2];if(!(b?!b|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+96>>2]=0;H[a+100|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+76>>2]=0;H[a+80|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function yc(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;m=J[a+16>>2];c=J[b+16>>2];if((m|0)!=(c|0)){return m-c|0}if(!m){return 0}e=J[a+4>>2];d=J[b+8>>2];f=J[b+12>>2];c=0;i=J[a>>2];k=jI(f,c,i,0);h=ha;f=jI(f,c,e,0);h=h+f|0;c=ha+g|0;c=f>>>0>h>>>0?c+1|0:c;g=jI(d,0,e,g);f=ha;e=h+f|0;c=e>>>0<f>>>0?c+1|0:c;f=e;e=c;c=0;h=g+k|0;c=h>>>0<g>>>0?c+1|0:c;k=h;n=c;f=c+f|0;c=e;e=f;g=e>>>0<n>>>0?c+1|0:c;e=0;d=jI(i,o,d,j);h=e+d|0;c=ha+k|0;c=d>>>0>h>>>0?c+1|0:c;o=h;d=h;h=c;e=(k|0)==(c|0)&d>>>0<e>>>0|c>>>0<k>>>0;k=f+e|0;c=g;c=e>>>0>k>>>0?c+1|0:c;e=c;d=J[a+12>>2];i=J[b>>2];j=J[b+4>>2];c=0;f=J[a+8>>2];n=0;b=jI(j,c,f,n);g=ha;a=j;j=d;l=jI(a,c,d,0);d=g+l|0;g=ha;g=d>>>0<l>>>0?g+1|0:g;l=0;a=jI(i,l,j,c);j=ha;d=j+d|0;c=g;c=d>>>0<j>>>0?c+1|0:c;g=c;c=0;b=a+b|0;c=b>>>0<a>>>0?c+1|0:c;d=c+d|0;g=d>>>0<c>>>0?g+1|0:g;a=d;d=-1;p=a;j=0;i=jI(i,l,f,n);a=j+i|0;c=ha+b|0;c=a>>>0<i>>>0?c+1|0:c;i=a;a=c;f=(b|0)==(c|0)&j>>>0>i>>>0|b>>>0>c>>>0;b=p+f|0;c=g;c=b>>>0<f>>>0?c+1|0:c;a:{if((c|0)==(e|0)&b>>>0>k>>>0|c>>>0>e>>>0){break a}d=1;if((c|0)==(e|0)&b>>>0<k>>>0|c>>>0<e>>>0){break a}d=-1;if((a|0)==(h|0)&i>>>0>o>>>0|a>>>0>h>>>0){break a}d=(a|0)==(h|0)&i>>>0<o>>>0|a>>>0<h>>>0}return P(d,m)}function rA(a,b,c,d){a=a|0;b=Q(b);c=c|0;d=Q(d);var e=0,f=0,g=0,h=Q(0);e=ga-16|0;ga=e;aa(J[8371],0)|0;ne(33488);J[8373]=J[8373]+1;f=J[8376];J[8376]=f+1;if(!f){aa(e+8|0,0)|0;f=J[8371];J[8375]=(J[e+12>>2]-J[f+4>>2]|0)+P(J[e+8>>2]-J[f>>2]|0,1e6)}J[8381]=0;aa(e+8|0,0)|0;f=J[8371];J[8382]=(J[e+12>>2]-J[f+4>>2]|0)+P(J[e+8>>2]-J[f>>2]|0,1e6);ga=e+16|0;ya(3009);a:{if(c){N[a+268>>2]=d;b=Q(N[a+264>>2]+b);N[a+264>>2]=b;if(!(b>=d)){break a}h=b;b=Q(b/d);b:{if(Q(R(b))<Q(2147483648)){g=~~b;break b}g=-2147483648}N[a+264>>2]=h-Q(Q(g|0)*d);break a}J[a+268>>2]=0;N[a+264>>2]=K[a+300|0]?Q(0):b;d=b;g=!(Q(R(b))<Q(1.1920928955078125e-7));c=g}if(ia[J[J[a>>2]+20>>2]](a)|0){e=ia[J[J[a>>2]+20>>2]](a)|0;H[32584]=ia[J[J[e>>2]+48>>2]](e)>>>4&1}c:{if(g){e=(c|0)>(g|0)?g:c;ia[J[J[a>>2]+164>>2]](a,Q(d*Q(e|0)));ia[J[J[a>>2]+168>>2]](a);if((e|0)<=0){break c}if((e|0)!=1){f=e&-2;c=0;while(1){ia[J[J[a>>2]+160>>2]](a,d);ia[J[J[a>>2]+80>>2]](a);ia[J[J[a>>2]+160>>2]](a,d);ia[J[J[a>>2]+80>>2]](a);c=c+2|0;if((f|0)!=(c|0)){continue}break}}if(!(e&1)){break c}ia[J[J[a>>2]+160>>2]](a,d);ia[J[J[a>>2]+80>>2]](a);break c}ia[J[J[a>>2]+80>>2]](a)}ia[J[J[a>>2]+120>>2]](a);J[8381]=J[8381]+1;xa();return g|0}function lE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=ga-80|0;ga=e;a:{if((d|0)<=0){break a}if(d-1>>>0>=7){k=d&-8;while(1){f=i<<4;J[(f+c|0)+12>>2]=-581039253;J[((f|16)+c|0)+12>>2]=-581039253;J[((f|32)+c|0)+12>>2]=-581039253;J[((f|48)+c|0)+12>>2]=-581039253;J[((f|64)+c|0)+12>>2]=-581039253;J[((f|80)+c|0)+12>>2]=-581039253;J[((f|96)+c|0)+12>>2]=-581039253;J[((f|112)+c|0)+12>>2]=-581039253;i=i+8|0;g=g+8|0;if((k|0)!=(g|0)){continue}break}}g=d&7;if(g){while(1){J[((i<<4)+c|0)+12>>2]=-581039253;i=i+1|0;h=h+1|0;if((g|0)!=(h|0)){continue}break}}if((d|0)<=0){break a}j=e+40|4;f=e- -64|0;i=0;while(1){J[e+40>>2]=14568;J[j+8>>2]=0;J[j+12>>2]=0;J[j>>2]=0;J[j+4>>2]=0;J[e+60>>2]=-581039253;g=i<<4;k=g+b|0;h=J[k+12>>2];J[f+8>>2]=J[k+8>>2];J[f+12>>2]=h;h=J[k+4>>2];J[f>>2]=J[k>>2];J[f+4>>2]=h;J[e+32>>2]=1566444395;J[e+36>>2]=0;J[e+24>>2]=1566444395;J[e+28>>2]=1566444395;h=J[a+92>>2];J[e+16>>2]=-581039253;J[e+20>>2]=0;J[e+8>>2]=-581039253;J[e+12>>2]=-581039253;ia[J[J[h>>2]+8>>2]](h,e+40|0,e+8|0,e+24|0);h=J[j+12>>2];g=c+g|0;J[g+8>>2]=J[j+8>>2];J[g+12>>2]=h;h=J[j+4>>2];J[g>>2]=J[j>>2];J[g+4>>2]=h;i=i+1|0;if((i|0)!=(d|0)){continue}break}}ga=e+80|0}function jy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if(Ya(a,J[b+8>>2],e)){if(!(J[b+28>>2]==1|J[b+4>>2]!=(c|0))){J[b+28>>2]=d}return}a:{if(Ya(a,J[b>>2],e)){if(!(J[b+16>>2]!=(c|0)&J[b+20>>2]!=(c|0))){if((d|0)!=1){break a}J[b+32>>2]=1;return}J[b+32>>2]=d;if(J[b+44>>2]!=4){f=a+16|0;h=f+(J[a+12>>2]<<3)|0;d=0;b:{c:{while(1){d:{if(f>>>0>=h>>>0){break d}I[b+52>>1]=0;_f(f,b,c,c,1,e);if(K[b+54|0]){break d}e:{if(!K[b+53|0]){break e}if(K[b+52|0]){d=1;if(J[b+24>>2]==1){break c}g=1;if(K[a+8|0]&2){break e}break c}g=1;if(!(H[a+8|0]&1)){break c}}f=f+8|0;continue}break}a=4;if(!g){break b}}a=3}J[b+44>>2]=a;if(d&1){break a}}J[b+20>>2]=c;J[b+40>>2]=J[b+40>>2]+1;if(J[b+36>>2]!=1|J[b+24>>2]!=2){break a}H[b+54|0]=1;return}f=J[a+12>>2];g=a+16|0;ke(g,b,c,d,e);if((f|0)<2){break a}g=g+(f<<3)|0;f=a+24|0;a=J[a+8>>2];if(!(!(a&2)&J[b+36>>2]!=1)){while(1){if(K[b+54|0]){break a}ke(f,b,c,d,e);f=f+8|0;if(g>>>0>f>>>0){continue}break}break a}if(!(a&1)){while(1){if(K[b+54|0]|J[b+36>>2]==1){break a}ke(f,b,c,d,e);f=f+8|0;if(g>>>0>f>>>0){continue}break a}}while(1){if(K[b+54|0]|J[b+36>>2]==1&J[b+24>>2]==1){break a}ke(f,b,c,d,e);f=f+8|0;if(g>>>0>f>>>0){continue}break}}}function ig(a,b,c,d){var e=0,f=0,g=0;e=ga-128|0;ga=e;J[e+108>>2]=16;J[e+112>>2]=981668463;J[e+104>>2]=b;J[e+100>>2]=c;J[e+96>>2]=1;J[e+60>>2]=0;H[e- -64|0]=1;H[e+92|0]=1;J[e+52>>2]=0;J[e+56>>2]=0;J[e+88>>2]=0;J[e+80>>2]=0;J[e+84>>2]=0;J[e+68>>2]=0;J[e+72>>2]=0;J[e+44>>2]=0;H[e+40|0]=1;H[e+36|0]=1;J[e+32>>2]=0;J[e+24>>2]=0;J[e+28>>2]=0;J[e+12>>2]=0;H[e+16|0]=1;J[e+4>>2]=0;J[e+8>>2]=0;J[e+116>>2]=c;Vj(e,e+96|0,e+40|0);J[8369]=J[8369]+1;a=Ac(ia[J[6782]](1252,16)|0,a,J[e+44>>2],J[e+60>>2],0);if(J[e+68>>2]>0){while(1){f=J[e+88>>2]+P(g,12)|0;b=J[f+8>>2];c=J[f>>2];f=J[f+4>>2];if((c|0)<(f|0)){Ja(a,c,f,0,0)}if((b|0)>(f|0)){Ja(a,f,b,0,0)}if((b|0)<(c|0)){Ja(a,b,c,0,0)}rb(a,c,f,b,0);g=g+1|0;if((g|0)<J[e+68>>2]){continue}break}}Uj(e+40|0);if(d){nk(a)}b=J[e+32>>2];if(!(b?!b|!K[e+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[e+32>>2]=0;H[e+36|0]=1;J[e+24>>2]=0;J[e+28>>2]=0;b=J[e+12>>2];if(!(b?!b|!K[e+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[e+88>>2];if(!(b?!b|!K[e+92|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[e+88>>2]=0;H[e+92|0]=1;J[e+80>>2]=0;J[e+84>>2]=0;b=J[e+60>>2];if(!(b?!b|!K[e+64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ga=e+128|0;return a}function mG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;a=J[b>>2];e=ia[J[J[a>>2]+56>>2]](a,48)|0;J[e>>2]=8624;J[e+4>>2]=J[b>>2];J[e>>2]=8652;H[e+28|0]=1;J[e>>2]=9856;J[e+24>>2]=0;J[e+16>>2]=0;J[e+20>>2]=0;a=J[b+4>>2];H[e+36|0]=0;J[e+32>>2]=a;J[8369]=J[8369]+1;a=ia[J[6782]](68,16)|0;H[a+24|0]=0;H[a+20|0]=1;J[a>>2]=11460;J[a+16>>2]=0;H[a+44|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;J[a+40>>2]=0;H[a- -64|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;J[a+60>>2]=0;J[a+52>>2]=0;J[a+56>>2]=0;J[8369]=J[8369]+1;b=ia[J[6782]](24,16)|0;h=J[a+8>>2];a:{if((h|0)<=0){break a}if((h|0)!=1){l=h&-2;while(1){f=P(g,12);i=f+J[a+16>>2]|0;j=J[i+4>>2];f=b+f|0;J[f>>2]=J[i>>2];J[f+4>>2]=j;J[f+8>>2]=J[i+8>>2];f=P(g|1,12);i=f+J[a+16>>2]|0;j=J[i+4>>2];f=b+f|0;J[f>>2]=J[i>>2];J[f+4>>2]=j;J[f+8>>2]=J[i+8>>2];g=g+2|0;k=k+2|0;if((l|0)!=(k|0)){continue}break}}if(!(h&1)){break a}h=P(g,12);g=h+J[a+16>>2]|0;i=J[g+4>>2];h=b+h|0;J[h>>2]=J[g>>2];J[h+4>>2]=i;J[h+8>>2]=J[g+8>>2]}g=J[a+16>>2];if(!(g?!g|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](g)}J[a+16>>2]=b;H[a+20|0]=1;J[a+12>>2]=2;dh(a);J[e+8>>2]=a;J[e+40>>2]=J[J[c+4>>2]+68>>2];J[e+44>>2]=J[J[d+4>>2]+68>>2];return e|0}function es(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;f=ua(284);a=J[e+12>>2];c=ga-16|0;ga=c;J[c+12>>2]=f;J[c+8>>2]=a;d=ga-16|0;ga=d;a=J[c+12>>2];J[d+12>>2]=a;b=J[d+12>>2];J[(ga-16|0)+12>>2]=b;J[(ga-16|0)+12>>2]=b+16;J[(ga-16|0)+12>>2]=b+36;J[(ga-16|0)+12>>2]=b+52;J[(ga-16|0)+12>>2]=b+68;ga=d+16|0;Pb(a+92|0);J[(ga-16|0)+12>>2]=a+156;J[(ga-16|0)+12>>2]=a+172;J[(ga-16|0)+12>>2]=a+188;N[a+204>>2]=N[J[c+8>>2]+48>>2];N[a+208>>2]=N[J[c+8>>2]+52>>2];N[a+212>>2]=N[J[c+8>>2]+56>>2];N[a+216>>2]=N[J[c+8>>2]+60>>2];N[a+220>>2]=N[J[c+8>>2]+64>>2];N[a+224>>2]=N[J[c+8>>2]+68>>2];b=J[c+8>>2];d=J[b+4>>2];J[a+156>>2]=J[b>>2];J[a+160>>2]=d;d=J[b+12>>2];J[a+164>>2]=J[b+8>>2];J[a+168>>2]=d;b=J[c+8>>2];d=J[b+20>>2];J[a+172>>2]=J[b+16>>2];J[a+176>>2]=d;d=J[b+28>>2];J[a+180>>2]=J[b+24>>2];J[a+184>>2]=d;b=J[c+8>>2];d=J[b+36>>2];J[a+188>>2]=J[b+32>>2];J[a+192>>2]=d;d=J[b+44>>2];J[a+196>>2]=J[b+40>>2];J[a+200>>2]=d;N[a+228>>2]=N[J[c+8>>2]+72>>2];N[a+232>>2]=0;N[a+252>>2]=0;N[a+236>>2]=0;N[a+240>>2]=0;N[a+256>>2]=0;N[a+244>>2]=.10000000149011612;H[a+260|0]=H[J[c+8>>2]+80|0]&1;N[a+248>>2]=N[J[c+8>>2]+76>>2];ga=c+16|0;ga=e+16|0;return f|0}function jk(a,b,c,d,e,f){var g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);n=Q(-1);o=N[b+8>>2];p=N[d>>2];g=N[c>>2];k=Q(p-g);v=N[e+4>>2];l=N[c+4>>2];m=Q(v-l);w=N[e>>2];h=Q(w-g);r=N[d+4>>2];i=Q(r-l);s=Q(Q(k*m)-Q(h*i));j=N[b>>2];t=i;x=N[e+8>>2];i=N[c+8>>2];q=Q(x-i);y=N[d+8>>2];u=Q(y-i);m=Q(Q(t*q)-Q(m*u));t=N[b+4>>2];k=Q(Q(u*h)-Q(q*k));h=Q(Q(o*s)+Q(Q(j*m)+Q(t*k)));a:{if(Q(R(h))<Q(1.1920928955078125e-7)){break a}q=N[a+8>>2];u=N[a>>2];z=N[a+4>>2];n=Q(Q(-Q(Q(Q(q*s)+Q(Q(u*m)+Q(k*z)))-Q(Q(i*s)+Q(Q(g*m)+Q(l*k)))))/h);b:{if(!(n>Q(11920928955078125e-22))|!(f>n)){break b}j=Q(u+Q(j*n));f=Q(g-j);h=Q(z+Q(t*n));g=Q(r-h);p=Q(p-j);l=Q(l-h);r=Q(q+Q(o*n));o=Q(y-r);i=Q(i-r);if(!(Q(Q(s*Q(Q(f*g)-Q(p*l)))+Q(Q(m*Q(Q(l*o)-Q(g*i)))+Q(k*Q(Q(i*p)-Q(o*f)))))>Q(-11920928955078125e-22))){break b}h=Q(v-h);j=Q(w-j);q=Q(s*Q(Q(p*h)-Q(j*g)));t=g;g=Q(x-r);if(!(Q(q+Q(Q(m*Q(Q(t*g)-Q(h*o)))+Q(k*Q(Q(o*j)-Q(g*p)))))>Q(-11920928955078125e-22))){break b}if(Q(Q(s*Q(Q(j*l)-Q(f*h)))+Q(Q(m*Q(Q(h*i)-Q(l*g)))+Q(k*Q(Q(g*f)-Q(i*j)))))>Q(-11920928955078125e-22)){break a}}n=Q(-1)}return n}function hB(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+48>>2];N[b+56>>2]=N[a+52>>2];N[b+60>>2]=N[a+56>>2];N[b+64>>2]=N[a+60>>2];N[b+68>>2]=N[a- -64>>2];N[b+72>>2]=N[a+68>>2];N[b+76>>2]=N[a+72>>2];N[b+80>>2]=N[a+76>>2];N[b+84>>2]=N[a+80>>2];N[b+88>>2]=N[a+84>>2];N[b+92>>2]=N[a+88>>2];N[b+96>>2]=N[a+92>>2];N[b+100>>2]=N[a+96>>2];N[b+104>>2]=N[a+100>>2];N[b+108>>2]=N[a+104>>2];N[b+112>>2]=N[a+108>>2];N[b+116>>2]=N[a+112>>2];N[b+120>>2]=N[a+116>>2];N[b+124>>2]=N[a+120>>2];N[b+128>>2]=N[a+124>>2];N[b+132>>2]=N[a+128>>2];N[b+136>>2]=N[a+132>>2];N[b+140>>2]=N[a+136>>2];N[b+144>>2]=N[a+140>>2];N[b+148>>2]=N[a+144>>2];N[b+152>>2]=N[a+148>>2];N[b+156>>2]=N[a+152>>2];N[b+160>>2]=N[a+156>>2];N[b+164>>2]=N[a+160>>2];N[b+168>>2]=N[a+164>>2];N[b+172>>2]=N[a+168>>2];N[b+176>>2]=N[a+172>>2];N[b+228>>2]=N[a+868>>2];N[b+212>>2]=N[a+872>>2];N[b+196>>2]=N[a+680>>2];N[b+180>>2]=N[a+696>>2];N[b+232>>2]=N[a+932>>2];N[b+216>>2]=N[a+936>>2];N[b+200>>2]=N[a+684>>2];N[b+184>>2]=N[a+700>>2];N[b+236>>2]=N[a+996>>2];N[b+220>>2]=N[a+1e3>>2];N[b+204>>2]=N[a+688>>2];N[b+188>>2]=N[a+704>>2];J[b+244>>2]=K[a+1300|0];J[b+248>>2]=K[a+1301|0];return 3344}function lF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=0,o=0,p=Q(0),q=0,r=Q(0);f=ga-16|0;ga=f;e=J[a+52>>2];o=(e+2|0)%3|0;a:{if((d|0)<=0){break a}p=N[((o<<2)+a|0)+28>>2];o=0;while(1){J[f+8>>2]=0;J[f+12>>2]=0;J[f>>2]=0;J[f+4>>2]=0;e=e<<2;N[e+f>>2]=N[(a+e|0)+28>>2];q=o<<4;e=q+b|0;g=N[e+8>>2];h=N[e>>2];j=N[e+4>>2];i=N[f>>2];k=N[f+4>>2];r=Q(-0xde0b6b000000000);m=Q(N[f+8>>2]+Q(p*g));g=Q(ia[J[J[a>>2]+48>>2]](a));l=N[e+8>>2];m=Q(m-Q(g*l));i=Q(i+Q(p*h));h=N[e>>2];i=Q(i-Q(g*h));k=Q(k+Q(p*j));j=N[e+4>>2];k=Q(k-Q(g*j));g=Q(Q(l*m)+Q(Q(h*i)+Q(j*k)));if(g>Q(-0xde0b6b000000000)){n=c+q|0;J[n+12>>2]=0;N[n+8>>2]=m;N[n+4>>2]=k;N[n>>2]=i;l=N[e+8>>2];j=N[e+4>>2];h=N[e>>2];r=g}J[f+8>>2]=0;J[f+12>>2]=0;J[f>>2]=0;J[f+4>>2]=0;n=J[a+52>>2]<<2;N[n+f>>2]=-N[(a+n|0)+28>>2];m=N[f+4>>2];i=N[f>>2];l=Q(N[f+8>>2]+Q(p*l));g=Q(ia[J[J[a>>2]+48>>2]](a));k=N[e+8>>2];l=Q(l-Q(g*k));h=Q(i+Q(p*h));i=N[e>>2];h=Q(h-Q(g*i));m=Q(m+Q(p*j));j=N[e+4>>2];g=Q(m-Q(g*j));if(Q(Q(k*l)+Q(Q(i*h)+Q(j*g)))>r){e=c+q|0;J[e+12>>2]=0;N[e+8>>2]=l;N[e+4>>2]=g;N[e>>2]=h}o=o+1|0;if((o|0)==(d|0)){break a}e=J[a+52>>2];continue}}ga=f+16|0}function vD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=0,l=0,m=Q(0),n=Q(0),o=0;h=ga-2048|0;ga=h;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;i=N[c+8>>2];e=N[c>>2];j=N[c+4>>2];f=Q(Q(i*i)+Q(Q(e*e)+Q(j*j)));a:{if(f<Q(9999999747378752e-20)){m=Q(1);f=Q(0);break a}f=Q(Q(1)/Q(Y(f)));n=Q(i*f);m=Q(e*f);f=Q(j*f)}if((ia[J[J[b>>2]+96>>2]](b)|0)>0){j=Q(-0xde0b6b000000000);while(1){k=128;b:{c:{if(((ia[J[J[b>>2]+96>>2]](b)|0)-l|0)>127){break c}k=(ia[J[J[b>>2]+96>>2]](b)|0)-l|0;if((k|0)>0){break c}e=Q(-3.4028234663852886e38);g=-1;break b}c=0;if((k|0)!=1){o=k&-2;g=0;while(1){ia[J[J[b>>2]+108>>2]](b,c,(c<<4)+h|0);d=c|1;ia[J[J[b>>2]+108>>2]](b,d,(d<<4)+h|0);c=c+2|0;g=g+2|0;if((o|0)!=(g|0)){continue}break}}if(k&1){ia[J[J[b>>2]+108>>2]](b,c,(c<<4)+h|0)}c=0;g=-1;e=Q(-3.4028234663852886e38);while(1){d=(c<<4)+h|0;i=Q(Q(N[d+8>>2]*n)+Q(Q(N[d>>2]*m)+Q(f*N[d+4>>2])));d=i>e;e=d?i:e;g=d?c:g;c=c+1|0;if((k|0)!=(c|0)){continue}break}}if(e>j){d=(g<<4)+h|0;c=J[d+12>>2];J[a+8>>2]=J[d+8>>2];J[a+12>>2]=c;c=J[d+4>>2];J[a>>2]=J[d>>2];J[a+4>>2]=c;j=e}l=l+128|0;if((ia[J[J[b>>2]+96>>2]](b)|0)>(l|0)){continue}break}}ga=h+2048|0}\nfunction PC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0),C=Q(0),D=Q(0),E=Q(0),F=Q(0);h=N[a+24>>2];f=N[a+40>>2];u=N[a+20>>2];v=N[a+36>>2];w=N[a+16>>2];x=N[a+32>>2];y=Q(ia[J[J[a>>2]+48>>2]](a));z=Q(ia[J[J[a>>2]+48>>2]](a));A=Q(ia[J[J[a>>2]+48>>2]](a));B=N[b+52>>2];i=N[b+24>>2];j=N[b+20>>2];k=N[b+56>>2];l=N[a+20>>2];o=N[a+36>>2];m=N[a+24>>2];C=N[a+40>>2];e=N[b+40>>2];n=N[b+36>>2];D=N[b+48>>2];q=N[b+8>>2];r=N[b>>2];s=N[b+4>>2];t=N[b+16>>2];E=N[a+16>>2];F=N[a+32>>2];g=N[b+32>>2];J[c+12>>2]=0;p=k;k=Q(Q(C+m)*Q(.5));m=Q(Q(F+E)*Q(.5));l=Q(Q(o+l)*Q(.5));o=Q(p+Q(Q(e*k)+Q(Q(g*m)+Q(n*l))));h=Q(A+Q(Q(f-h)*Q(.5)));p=Q(h*Q(R(e)));e=Q(y+Q(Q(x-w)*Q(.5)));f=Q(e*Q(R(g)));g=Q(z+Q(Q(v-u)*Q(.5)));n=Q(p+Q(f+Q(g*Q(R(n)))));N[c+8>>2]=o-n;f=Q(B+Q(Q(k*i)+Q(Q(m*t)+Q(l*j))));i=Q(Q(h*Q(R(i)))+Q(Q(e*Q(R(t)))+Q(g*Q(R(j)))));N[c+4>>2]=f-i;j=Q(D+Q(Q(k*q)+Q(Q(m*r)+Q(l*s))));e=Q(Q(h*Q(R(q)))+Q(Q(e*Q(R(r)))+Q(g*Q(R(s)))));N[c>>2]=j-e;J[d+12>>2]=0;N[d+8>>2]=n+o;N[d+4>>2]=i+f;N[d>>2]=e+j}function Ky(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;ia[J[J[b>>2]+32>>2]](b);d=ia[J[J[b>>2]+16>>2]](b,104,1)|0;c=qa(J[d+8>>2],0,104);N[c+88>>2]=N[a+248>>2];N[c+92>>2]=N[a+252>>2];N[c+96>>2]=N[a+256>>2];N[c+100>>2]=N[a+260>>2];N[c>>2]=N[a+92>>2];N[c+4>>2]=N[a+96>>2];N[c+8>>2]=N[a+100>>2];N[c+12>>2]=N[a+104>>2];N[c+16>>2]=N[a+108>>2];N[c+20>>2]=N[a+116>>2];N[c+24>>2]=N[a+120>>2];N[c+28>>2]=N[a+124>>2];N[c+32>>2]=N[a+128>>2];N[c+36>>2]=N[a+132>>2];N[c+40>>2]=N[a+140>>2];N[c+44>>2]=N[a+144>>2];N[c+48>>2]=N[a+148>>2];N[c+52>>2]=N[a+152>>2];N[c+56>>2]=N[a+168>>2];N[c+60>>2]=N[a+172>>2];J[c+64>>2]=J[a+112>>2];J[c+68>>2]=J[a+156>>2];J[c+72>>2]=J[a+160>>2];J[c+76>>2]=J[a+164>>2];J[c+80>>2]=J[a+136>>2];ia[J[J[b>>2]+20>>2]](b,d,3601,1145853764,c);d=J[a+8>>2];if((d|0)>0){while(1){c=J[J[a+16>>2]+(e<<2)>>2];if(K[c+236|0]&8){d=(g=b,h=ia[J[J[c>>2]+16>>2]](c)|0,i=1,f=J[J[b>>2]+16>>2],ia[f](g|0,h|0,i|0)|0);i=b,h=d,g=ia[J[J[c>>2]+20>>2]](c,J[d+8>>2],b)|0,j=1497645651,k=c,f=J[J[b>>2]+20>>2],ia[f](i|0,h|0,g|0,j|0,k|0);d=J[a+8>>2]}e=e+1|0;if((e|0)<(d|0)){continue}break}}Ak(a,b);gh(a,b);ia[J[J[b>>2]+36>>2]](b)}function lc(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;while(1){r=c;j=J[a+12>>2];g=j+((c+d|0)/2<<4)|0;s=J[g+8>>2];m=J[g+4>>2];k=J[g>>2];g=d;while(1){e=-1;h=-1;f=(c<<4)+j|0;n=J[f>>2];if(n){h=J[n+12>>2]}e=k?J[k+12>>2]:e;i=-1;l=-1;o=J[f+4>>2];if(o){l=J[o+12>>2]}i=m?J[m+12>>2]:i;a:{b:{if((e|0)<(h|0)){break b}e=(k|0)==(n|0)&(i|0)<(l|0);if(!(e|(k|0)!=(n|0))){if((m|0)!=(o|0)){break a}if(M[f+8>>2]>s>>>0){break b}break a}if(!e){break a}}c=c+1|0;continue}while(1){t=g<<4;e=t+j|0;h=-1;i=-1;i=k?J[k+12>>2]:i;l=J[e>>2];if(l){h=J[l+12>>2]}u=-1;p=-1;p=m?J[m+12>>2]:p;q=J[e+4>>2];if(q){u=J[q+12>>2]}c:{d:{if((h|0)<(i|0)){break d}h=(k|0)==(l|0)&(u|0)<(p|0);if(!(h|(k|0)!=(l|0))){if((m|0)!=(q|0)){break c}if(M[e+8>>2]<s>>>0){break d}break c}if(!h){break c}}g=g-1|0;continue}break}if((c|0)<=(g|0)){h=J[f+8>>2];i=J[f+12>>2];j=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=j;j=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=j;f=J[a+12>>2]+t|0;J[f+4>>2]=o;J[f+8>>2]=h;J[f+12>>2]=i;J[f>>2]=n;g=g-1|0;c=c+1|0}if((c|0)<=(g|0)){j=J[a+12>>2];continue}break}if((g|0)>(r|0)){lc(a,b,r,g)}if((c|0)<(d|0)){continue}break}}function XF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;J[7400]=J[7400]+1;k=J[a+40>>2];d=c<<16|b;d=(d<<15^-1)+d|0;d=P(d>>10^d,9);d=d>>6^d;d=(d<<11^-1)+d|0;i=k+((J[a+12>>2]-1&(d>>16^d))<<2)|0;d=J[i>>2];a:{if((d|0)==-1){break a}f=J[a+60>>2];g=J[a+16>>2];e=d;while(1){j=g+P(e,12)|0;if(!(J[j>>2]==(b|0)&J[j+4>>2]==(c|0))){e=J[(e<<2)+f>>2];if((e|0)!=-1){continue}break a}break}l=J[(g+P(e,12)|0)+8>>2];b:{c:{if((d|0)==(e|0)){break c}while(1){b=d;d=J[(b<<2)+f>>2];if((e|0)!=(d|0)){continue}break}if((b|0)==-1){break c}J[(b<<2)+f>>2]=J[(e<<2)+f>>2];break b}J[i>>2]=J[(e<<2)+f>>2]}h=J[a+8>>2]-1|0;if((h|0)!=(e|0)){d:{e:{g=g+P(h,12)|0;b=J[g+4>>2]<<16|J[g>>2];b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;i=J[a+12>>2]-1&(b>>16^b);d=k+(i<<2)|0;b=J[d>>2];if((h|0)==(b|0)){break e}while(1){c=b;b=J[(b<<2)+f>>2];if((h|0)!=(b|0)){continue}break}if((c|0)==-1){break e}J[(c<<2)+f>>2]=J[(h<<2)+f>>2];break d}J[d>>2]=J[(h<<2)+f>>2]}b=J[g+4>>2];J[j>>2]=J[g>>2];J[j+4>>2]=b;J[j+8>>2]=J[g+8>>2];b=J[a+40>>2]+(i<<2)|0;J[J[a+60>>2]+(e<<2)>>2]=J[b>>2];J[b>>2]=e;e=J[a+8>>2]-1|0}J[a+8>>2]=e}return l|0}function Kl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-48|0;ga=c;d=J[b+4>>2];e=J[a+48>>2];J[e+4>>2]=J[b>>2];J[e+8>>2]=d;d=J[b+12>>2];J[e+12>>2]=J[b+8>>2];J[e+16>>2]=d;J[c+44>>2]=0;J[c+36>>2]=0;J[c+40>>2]=0;J[c+32>>2]=1065353216;e=c+16|0;b=c+32|0;ia[J[J[a>>2]+68>>2]](e,a,b);N[a+32>>2]=N[c+16>>2]+N[a+12>>2];J[c+32>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](c,a,b);d=J[c+12>>2];J[c+24>>2]=J[c+8>>2];J[c+28>>2]=d;d=J[c+4>>2];J[c+16>>2]=J[c>>2];J[c+20>>2]=d;N[a+16>>2]=N[c+16>>2]-N[a+12>>2];J[c+40>>2]=0;J[c+44>>2]=0;J[c+32>>2]=0;J[c+36>>2]=0;J[c+36>>2]=1065353216;ia[J[J[a>>2]+68>>2]](e,a,b);N[a+36>>2]=N[c+20>>2]+N[a+12>>2];J[c+36>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](c,a,b);d=J[c+12>>2];J[c+24>>2]=J[c+8>>2];J[c+28>>2]=d;d=J[c+4>>2];J[c+16>>2]=J[c>>2];J[c+20>>2]=d;N[a+20>>2]=N[c+20>>2]-N[a+12>>2];J[c+40>>2]=0;J[c+44>>2]=0;J[c+40>>2]=1065353216;J[c+32>>2]=0;J[c+36>>2]=0;ia[J[J[a>>2]+68>>2]](e,a,b);N[a+40>>2]=N[c+24>>2]+N[a+12>>2];J[c+40>>2]=-1082130432;ia[J[J[a>>2]+68>>2]](c,a,b);b=J[c+12>>2];J[c+24>>2]=J[c+8>>2];J[c+28>>2]=b;b=J[c+4>>2];J[c+16>>2]=J[c>>2];J[c+20>>2]=b;N[a+24>>2]=N[c+24>>2]-N[a+12>>2];ga=c+48|0}function sa(a,b,c){var d=0,e=0,f=0;if(c>>>0>=512){ea(a|0,b|0,c|0)|0;return a}e=a+c|0;a:{if(!((a^b)&3)){b:{if(!(a&3)){c=a;break b}if(!c){c=a;break b}c=a;while(1){H[c|0]=K[b|0];b=b+1|0;c=c+1|0;if(!(c&3)){break b}if(c>>>0<e>>>0){continue}break}}d=e&-4;c:{if(d>>>0<64){break c}f=d+-64|0;if(f>>>0<c>>>0){break c}while(1){J[c>>2]=J[b>>2];J[c+4>>2]=J[b+4>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=J[b+12>>2];J[c+16>>2]=J[b+16>>2];J[c+20>>2]=J[b+20>>2];J[c+24>>2]=J[b+24>>2];J[c+28>>2]=J[b+28>>2];J[c+32>>2]=J[b+32>>2];J[c+36>>2]=J[b+36>>2];J[c+40>>2]=J[b+40>>2];J[c+44>>2]=J[b+44>>2];J[c+48>>2]=J[b+48>>2];J[c+52>>2]=J[b+52>>2];J[c+56>>2]=J[b+56>>2];J[c+60>>2]=J[b+60>>2];b=b- -64|0;c=c- -64|0;if(f>>>0>=c>>>0){continue}break}}if(c>>>0>=d>>>0){break a}while(1){J[c>>2]=J[b>>2];b=b+4|0;c=c+4|0;if(d>>>0>c>>>0){continue}break}break a}if(e>>>0<4){c=a;break a}d=e-4|0;if(d>>>0<a>>>0){c=a;break a}c=a;while(1){H[c|0]=K[b|0];H[c+1|0]=K[b+1|0];H[c+2|0]=K[b+2|0];H[c+3|0]=K[b+3|0];b=b+4|0;c=c+4|0;if(d>>>0>=c>>>0){continue}break}}if(c>>>0<e>>>0){while(1){H[c|0]=K[b|0];b=b+1|0;c=c+1|0;if((e|0)!=(c|0)){continue}break}}return a}function Co(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0,f=0,g=0,h=0;d=ga-304|0;ga=d;J[d+300>>2]=a;J[d+296>>2]=b;N[d+292>>2]=c;b=J[d+300>>2];g=ga-16|0;J[g+12>>2]=J[d+296>>2];e=J[g+12>>2]+48|0;f=J[e+4>>2];a=d+272|0;J[a>>2]=J[e>>2];J[a+4>>2]=f;f=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=f;J[g+12>>2]=J[d+296>>2];e=J[g+12>>2];N[d+220>>2]=0;N[d+216>>2]=0;f=d+224|0;g=d+292|0;na(f,g,d+220|0,d+216|0);h=d+240|0;wa(h,e,f);e=d+256|0;va(e,a,h);N[d+196>>2]=.699999988079071;N[d+192>>2]=0;N[d+188>>2]=0;f=d+200|0;na(f,d+196|0,d+192|0,d+188|0);ia[J[J[b>>2]+8>>2]](b,a,e,f);e=ga-16|0;J[e+12>>2]=J[d+296>>2];e=J[e+12>>2];N[d+132>>2]=0;N[d+128>>2]=0;f=d+136|0;na(f,d+132|0,g,d+128|0);h=d+152|0;wa(h,e,f);e=d+168|0;va(e,a,h);N[d+108>>2]=0;N[d+104>>2]=.699999988079071;N[d+100>>2]=0;f=d+112|0;na(f,d+108|0,d+104|0,d+100|0);ia[J[J[b>>2]+8>>2]](b,a,e,f);e=ga-16|0;J[e+12>>2]=J[d+296>>2];e=J[e+12>>2];N[d+44>>2]=0;N[d+40>>2]=0;f=d+48|0;na(f,d+44|0,d+40|0,g);g=d- -64|0;wa(g,e,f);e=d+80|0;va(e,a,g);N[d+20>>2]=0;N[d+16>>2]=0;N[d+12>>2]=.699999988079071;g=d+24|0;na(g,d+20|0,d+16|0,d+12|0);ia[J[J[b>>2]+8>>2]](b,a,e,g);ga=d+304|0}function mF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0,p=Q(0),q=Q(0),r=Q(0);d=ga-16|0;ga=d;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;e=N[c+8>>2];h=N[c>>2];f=N[c+4>>2];g=Q(Q(e*e)+Q(Q(h*h)+Q(f*f)));a:{if(g<Q(9999999747378752e-20)){g=Q(1);e=Q(0);break a}i=e;e=Q(Q(1)/Q(Y(g)));j=Q(i*e);g=Q(h*e);e=Q(f*e)}o=b+28|0;c=J[b+52>>2];f=N[o+((c+2|0)%3<<2)>>2];J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;c=c<<2;N[c+d>>2]=N[c+o>>2];l=N[d+4>>2];m=N[d>>2];h=Q(-0xde0b6b000000000);p=Q(j*f);i=Q(p+N[d+8>>2]);k=Q(ia[J[J[b>>2]+48>>2]](b));n=Q(i-Q(j*k));q=Q(e*f);l=Q(Q(l+q)-Q(e*k));i=m;m=Q(g*f);k=Q(Q(i+m)-Q(g*k));f=Q(Q(j*n)+Q(Q(g*k)+Q(e*l)));if(f>Q(-0xde0b6b000000000)){J[a+12>>2]=0;N[a+8>>2]=n;N[a+4>>2]=l;N[a>>2]=k;h=f}J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;c=J[b+52>>2]<<2;N[c+d>>2]=-N[(b+c|0)+28>>2];f=N[d+4>>2];k=N[d>>2];r=h;l=j;i=Q(p+N[d+8>>2]);h=Q(ia[J[J[b>>2]+48>>2]](b));j=Q(i-Q(j*h));n=g;g=Q(Q(m+k)-Q(g*h));i=e;e=Q(Q(q+f)-Q(e*h));if(r<Q(Q(l*j)+Q(Q(n*g)+Q(i*e)))){J[a+12>>2]=0;N[a+8>>2]=j;N[a+4>>2]=e;N[a>>2]=g}ga=d+16|0}function wE(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=Q(0),i=Q(0),j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=0;j=ga-16|0;J[d>>2]=2139095039;J[e>>2]=-8388609;p=J[a+96>>2];if((p|0)<=0){h=Q(-3.4028234663852886e38)}else{while(1){l=J[a+104>>2]+(k<<4)|0;h=Q(N[l+8>>2]*N[a+20>>2]);i=Q(N[l>>2]*N[a+12>>2]);m=Q(N[l+4>>2]*N[a+16>>2]);n=Q(Q(Q(h*N[b+40>>2])+Q(Q(i*N[b+32>>2])+Q(m*N[b+36>>2])))+N[b+56>>2]);o=Q(Q(Q(h*N[b+8>>2])+Q(Q(i*N[b>>2])+Q(m*N[b+4>>2])))+N[b+48>>2]);i=Q(Q(Q(h*N[b+24>>2])+Q(Q(i*N[b+16>>2])+Q(m*N[b+20>>2])))+N[b+52>>2]);h=Q(Q(n*N[c+8>>2])+Q(Q(o*N[c>>2])+Q(i*N[c+4>>2])));if(h<N[d>>2]){N[d>>2]=h;J[f+12>>2]=0;N[f+8>>2]=n;N[f+4>>2]=i;N[f>>2]=o}if(h>N[e>>2]){N[e>>2]=h;J[g+12>>2]=0;N[g+8>>2]=n;N[g+4>>2]=i;N[g>>2]=o}k=k+1|0;if((p|0)!=(k|0)){continue}break}h=N[e>>2]}i=N[d>>2];if(h<i){N[d>>2]=h;N[e>>2]=i;a=J[f+12>>2];J[j+8>>2]=J[f+8>>2];J[j+12>>2]=a;a=J[f+4>>2];J[j>>2]=J[f>>2];J[j+4>>2]=a;a=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=a;a=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=a;a=J[j+12>>2];J[g+8>>2]=J[j+8>>2];J[g+12>>2]=a;a=J[j+4>>2];J[g>>2]=J[j>>2];J[g+4>>2]=a}}function kk(a){var b=0,c=Q(0),d=Q(0),e=0,f=0,g=0,h=0,i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0,s=Q(0),t=Q(0),u=0,v=Q(0),w=Q(0);b=ga-32|0;ga=b;u=a+988|0;Fd(u);if(J[a+752>>2]>0){while(1){h=J[a+760>>2]+P(r,44)|0;k=J[h+16>>2];g=J[h+12>>2];f=J[h+8>>2];e=J[f+12>>2];J[b+16>>2]=J[f+8>>2];J[b+20>>2]=e;e=J[f+20>>2];J[b+24>>2]=J[f+16>>2];J[b+28>>2]=e;e=J[f+20>>2];J[b+8>>2]=J[f+16>>2];J[b+12>>2]=e;e=J[f+12>>2];J[b>>2]=J[f+8>>2];J[b+4>>2]=e;l=N[b+4>>2];m=N[b>>2];d=N[g+8>>2];if(m>d){N[b>>2]=d;m=d}n=N[b+8>>2];s=N[b+28>>2];v=N[b+24>>2];w=N[b+20>>2];o=N[b+16>>2];t=N[b+12>>2];i=N[g+12>>2];if(i<l){N[b+4>>2]=i;l=i}j=N[g+16>>2];if(j<n){N[b+8>>2]=j;n=j}c=N[g+20>>2];if(c<t){N[b+12>>2]=c;t=c}if(d>o){N[b+16>>2]=d;o=d}if(c>s){N[b+28>>2]=c;s=c}p=N[k+12>>2];g=p<l;d=N[k+8>>2];e=d<m;q=N[k+16>>2];c=N[k+20>>2];if(c<t){N[b+12>>2]=c}if(c>s){N[b+28>>2]=c}N[b+4>>2]=g?p:l;N[b>>2]=e?d:m;N[b+8>>2]=n>q?q:n;c=j>v?j:v;N[b+24>>2]=(c<q?q:c)+Q(0);c=i>w?i:w;N[b+20>>2]=(c<p?p:c)+Q(0);N[b+16>>2]=(d>o?d:o)+Q(0);J[h+40>>2]=Db(u,b,h);r=r+1|0;if((r|0)<J[a+752>>2]){continue}break}}ga=b+32|0}function qk(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;J[8369]=J[8369]+1;c=ia[J[6782]](20,16)|0;J[c>>2]=0;J[c+4>>2]=0;J[c+16>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;a:{if(J[a+872>>2]>0){b=J[J[a+880>>2]>>2];d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;J[c+16>>2]=J[b+16>>2];d=J[b+12>>2];J[c+8>>2]=J[b+8>>2];J[c+12>>2]=d;break a}J[c>>2]=0;J[c+4>>2]=0;J[c+16>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0}b=J[a+872>>2];b:{if((b|0)!=J[a+876>>2]){break b}h=b?b<<1:1;if((h|0)<=(b|0)){break b}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;b=J[a+872>>2]}c:{if((b|0)<=0){break c}if(b-1>>>0>=3){i=b&-4;while(1){d=e<<2;J[d+f>>2]=J[d+J[a+880>>2]>>2];g=d|4;J[g+f>>2]=J[g+J[a+880>>2]>>2];g=d|8;J[g+f>>2]=J[g+J[a+880>>2]>>2];d=d|12;J[d+f>>2]=J[d+J[a+880>>2]>>2];e=e+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}d=b&3;if(!d){break c}while(1){i=e<<2;J[i+f>>2]=J[i+J[a+880>>2]>>2];e=e+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}}e=J[a+880>>2];if(!(!e|!K[a+884|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}b=J[a+872>>2]}J[a+880>>2]=f;H[a+884|0]=1;J[a+876>>2]=h}J[J[a+880>>2]+(b<<2)>>2]=c;J[a+872>>2]=b+1;return c}function QB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=0,n=Q(0);e=ga-672|0;ga=e;j=e+568|0;m=Bb(j);J[e+572>>2]=1;J[e+568>>2]=2176;f=J[b+12>>2];J[e+632>>2]=J[b+8>>2];J[e+636>>2]=f;f=J[b+4>>2];J[e+624>>2]=J[b>>2];J[e+628>>2]=f;f=J[b+28>>2];J[e+648>>2]=J[b+24>>2];J[e+652>>2]=f;f=J[b+20>>2];J[e+640>>2]=J[b+16>>2];J[e+644>>2]=f;f=J[b+44>>2];J[e+664>>2]=J[b+40>>2];J[e+668>>2]=f;f=J[b+36>>2];J[e+656>>2]=J[b+32>>2];J[e+660>>2]=f;N[e+612>>2]=N[a+204>>2];H[e+540|0]=0;J[e+516>>2]=953267991;J[e+200>>2]=18432;f=J[a+4>>2];b=e+176|0;J[b+20>>2]=0;J[b+16>>2]=j;J[b+12>>2]=f;J[b+8>>2]=e+200;J[b+4>>2]=e+208;J[b>>2]=18208;J[e>>2]=6804;J[e+164>>2]=1065353216;J[e+168>>2]=0;N[e+172>>2]=N[a+208>>2];f=b;b=a+136|0;a:{if(!xl(f,a+8|0,a+72|0,b,b,e)){break a}g=N[e+140>>2];h=N[e+132>>2];i=N[e+136>>2];k=Q(Q(g*g)+Q(Q(h*h)+Q(i*i)));if(!(k>Q(9999999747378752e-20))){break a}l=N[e+164>>2];if(!(l<N[a+200>>2])){break a}n=g;g=Q(Q(1)/Q(Y(k)));N[e+140>>2]=n*g;N[e+136>>2]=i*g;N[e+132>>2]=h*g;Q(ia[J[J[a>>2]+12>>2]](a,e+132|0,e+148|0,l,c,d))}Qa(m);ga=e+672|0}function CB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);e=Q(1);d=J[b>>2];a:{if((d|0)==J[a+80>>2]|K[d+204|0]&4){break a}b:{if(c){g=N[b+16>>2];h=N[b+12>>2];f=N[b+8>>2];break b}f=N[b+16>>2];i=N[b+8>>2];j=N[b+12>>2];g=Q(Q(N[d+44>>2]*f)+Q(Q(N[d+36>>2]*i)+Q(j*N[d+40>>2])));h=Q(Q(N[d+28>>2]*f)+Q(Q(N[d+20>>2]*i)+Q(j*N[d+24>>2])));f=Q(Q(N[d+12>>2]*f)+Q(Q(N[d+4>>2]*i)+Q(N[d+8>>2]*j)))}if(N[a+100>>2]>Q(Q(N[a+92>>2]*g)+Q(Q(N[a+84>>2]*f)+Q(h*N[a+88>>2])))){break a}e=N[b+40>>2];J[a+76>>2]=d;N[a+4>>2]=e;c:{if(c){c=J[b+12>>2];J[a+44>>2]=J[b+8>>2];J[a+48>>2]=c;c=J[b+20>>2];J[a+52>>2]=J[b+16>>2];J[a+56>>2]=c;break c}f=N[d+8>>2];i=N[d+12>>2];j=N[d+20>>2];k=N[d+24>>2];l=N[d+28>>2];m=N[d+36>>2];n=N[d+40>>2];e=N[b+12>>2];o=N[d+44>>2];g=N[b+16>>2];p=N[d+4>>2];h=N[b+8>>2];J[a+56>>2]=0;N[a+52>>2]=Q(o*g)+Q(Q(m*h)+Q(e*n));N[a+48>>2]=Q(l*g)+Q(Q(j*h)+Q(e*k));N[a+44>>2]=Q(i*g)+Q(Q(p*h)+Q(f*e))}c=J[b+28>>2];J[a+60>>2]=J[b+24>>2];J[a+64>>2]=c;c=J[b+36>>2];J[a+68>>2]=J[b+32>>2];J[a+72>>2]=c;e=N[b+40>>2]}return Q(e)}function tF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;fb(a,b,c);d=J[a+48>>2];ia[J[J[d>>2]+56>>2]](d,b+12|0,c)|0;N[b+52>>2]=N[a+12>>2];a:{b:{if(!J[a+52>>2]){break b}if(ia[J[J[c>>2]+52>>2]](c)&1){break b}d=ia[J[J[c>>2]+24>>2]](c,J[a+52>>2])|0;if(d){J[b+44>>2]=0;J[b+40>>2]=d;break a}d=ia[J[J[c>>2]+28>>2]](c,J[a+52>>2])|0;J[b+44>>2]=0;J[b+40>>2]=d;d=J[a+52>>2];d=(g=c,h=ia[J[J[d>>2]+12>>2]](d)|0,i=1,f=J[J[c>>2]+16>>2],ia[f](g|0,h|0,i|0)|0);e=J[a+52>>2];i=c,h=d,g=ia[J[J[e>>2]+16>>2]](e,J[d+8>>2],c)|0,j=1213612625,k=J[a+52>>2],f=J[J[c>>2]+20>>2],ia[f](i|0,h|0,g|0,j|0,k|0);break a}J[b+40>>2]=0;J[b+44>>2]=0}c:{if(!J[a+56>>2]){break c}if(ia[J[J[c>>2]+52>>2]](c)&2){break c}d=ia[J[J[c>>2]+24>>2]](c,J[a+56>>2])|0;if(d){J[b+48>>2]=d;return 3873}J[b+48>>2]=ia[J[J[c>>2]+28>>2]](c,J[a+56>>2]);b=J[a+56>>2];b=(k=c,j=ia[J[J[b>>2]+8>>2]](b)|0,g=1,f=J[J[c>>2]+16>>2],ia[f](k|0,j|0,g|0)|0);d=J[a+56>>2];g=c,j=b,k=ia[J[J[d>>2]+12>>2]](d,J[b+8>>2],c)|0,h=1346456916,i=J[a+56>>2],f=J[J[c>>2]+20>>2],ia[f](g|0,j|0,k|0,h|0,i|0);return 3873}J[b+48>>2]=0;return 3873}function Yk(a,b,c,d,e,f){xb(a,4,b,c);J[a>>2]=19708;b=J[d+12>>2];J[a+560>>2]=J[d+8>>2];J[a+564>>2]=b;b=J[d+4>>2];J[a+552>>2]=J[d>>2];J[a+556>>2]=b;b=J[d+28>>2];J[a+576>>2]=J[d+24>>2];J[a+580>>2]=b;b=J[d+20>>2];J[a+568>>2]=J[d+16>>2];J[a+572>>2]=b;b=J[d+44>>2];J[a+592>>2]=J[d+40>>2];J[a+596>>2]=b;b=J[d+36>>2];J[a+584>>2]=J[d+32>>2];J[a+588>>2]=b;b=J[d+60>>2];J[a+608>>2]=J[d+56>>2];J[a+612>>2]=b;b=J[d+52>>2];J[a+600>>2]=J[d+48>>2];J[a+604>>2]=b;b=J[e+12>>2];J[a+624>>2]=J[e+8>>2];J[a+628>>2]=b;b=J[e+4>>2];J[a+616>>2]=J[e>>2];J[a+620>>2]=b;b=J[e+20>>2];J[a+632>>2]=J[e+16>>2];J[a+636>>2]=b;b=J[e+28>>2];J[a+640>>2]=J[e+24>>2];J[a+644>>2]=b;b=J[e+36>>2];J[a+648>>2]=J[e+32>>2];J[a+652>>2]=b;b=J[e+44>>2];J[a+656>>2]=J[e+40>>2];J[a+660>>2]=b;b=J[e+52>>2];J[a+664>>2]=J[e+48>>2];J[a+668>>2]=b;b=J[e+60>>2];J[a+672>>2]=J[e+56>>2];J[a+676>>2]=b;J[a+688>>2]=0;J[a+692>>2]=-1082130432;J[a+696>>2]=1063675494;J[a+700>>2]=1050253722;J[a+704>>2]=1065353216;J[a+708>>2]=0;J[a+712>>2]=0;H[a+716|0]=0;H[a+740|0]=f;J[a+748>>2]=0;J[a+736>>2]=16777216;N[a+732>>2]=f?Q(-1):Q(1)}function kA(a,b){a=a|0;b=Q(b);var c=0,d=Q(0),e=0,f=Q(0),g=0,h=Q(0);ya(3099);if(J[a+232>>2]>0){while(1){c=J[J[a+240>>2]+(g<<2)>>2];a:{if(!c){break a}b:{c:{d:{e=J[c+216>>2];switch(e-2|0){case 0:case 2:break c;default:break d}}e:{d=N[c+320>>2];f=Q(d*d);d=N[c+312>>2];h=Q(d*d);d=N[c+316>>2];f=Q(f+Q(h+Q(d*d)));d=N[c+472>>2];if(!(f<Q(d*d))){break e}d=N[c+336>>2];f=Q(d*d);d=N[c+328>>2];h=Q(d*d);d=N[c+332>>2];f=Q(f+Q(h+Q(d*d)));d=N[c+476>>2];if(!(f<Q(d*d))){break e}N[c+220>>2]=N[c+220>>2]+b;break b}J[c+220>>2]=0;if((J[c+216>>2]&-2)!=4){J[c+216>>2]=0}e=J[c+216>>2]}if((e|0)==4){break a}}f:{if(K[32584]){break f}d=N[6780];if(d==Q(0)|(d<N[c+220>>2]?0:(e&-2)!=2)){break f}if(K[c+204|0]&3){if((J[c+216>>2]&-2)!=4){J[c+216>>2]=2}break a}if((e|0)==1){if((J[c+216>>2]&-2)!=4){J[c+216>>2]=3}e=J[c+216>>2]}if((e|0)!=2){break a}J[c+328>>2]=0;J[c+332>>2]=0;J[c+312>>2]=0;J[c+316>>2]=0;J[c+336>>2]=0;J[c+340>>2]=0;J[c+320>>2]=0;J[c+324>>2]=0;J[c+260>>2]=J[c+260>>2]+2;break a}if((J[c+216>>2]&-2)!=4){J[c+216>>2]=1}}g=g+1|0;if((g|0)<J[a+232>>2]){continue}break}}xa()}function YA(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+552>>2];N[b+56>>2]=N[a+556>>2];N[b+60>>2]=N[a+560>>2];N[b+64>>2]=N[a+564>>2];N[b+68>>2]=N[a+568>>2];N[b+72>>2]=N[a+572>>2];N[b+76>>2]=N[a+576>>2];N[b+80>>2]=N[a+580>>2];N[b+84>>2]=N[a+584>>2];N[b+88>>2]=N[a+588>>2];N[b+92>>2]=N[a+592>>2];N[b+96>>2]=N[a+596>>2];N[b+100>>2]=N[a+600>>2];N[b+104>>2]=N[a+604>>2];N[b+108>>2]=N[a+608>>2];N[b+112>>2]=N[a+612>>2];N[b+116>>2]=N[a+616>>2];N[b+120>>2]=N[a+620>>2];N[b+124>>2]=N[a+624>>2];N[b+128>>2]=N[a+628>>2];N[b+132>>2]=N[a+632>>2];N[b+136>>2]=N[a+636>>2];N[b+140>>2]=N[a+640>>2];N[b+144>>2]=N[a+644>>2];N[b+148>>2]=N[a+648>>2];N[b+152>>2]=N[a+652>>2];N[b+156>>2]=N[a+656>>2];N[b+160>>2]=N[a+660>>2];N[b+164>>2]=N[a+664>>2];N[b+168>>2]=N[a+668>>2];N[b+172>>2]=N[a+672>>2];N[b+176>>2]=N[a+676>>2];J[b+184>>2]=K[a+736|0];J[b+188>>2]=K[a+737|0];N[b+196>>2]=N[a+684>>2];N[b+192>>2]=N[a+680>>2];J[b+180>>2]=K[a+740|0];c=a+688|0;N[b+200>>2]=xe(c);N[b+204>>2]=ye(c);N[b+208>>2]=N[a+696>>2];N[b+212>>2]=N[a+700>>2];N[b+216>>2]=N[a+704>>2];return 3496}function Vo(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=Q(0),i=0,j=0,k=Q(0),l=0,m=Q(0),n=Q(0),o=0,p=0,q=Q(0),r=Q(0),s=Q(0),t=Q(0);g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;J[g+8>>2]=f;o=J[g+24>>2];c=J[g+20>>2];f=J[g+16>>2];l=J[g+8>>2];a=0;d=J[g+12>>2];b=d+2|0;J[8369]=J[8369]+1;e=ia[J[6782]]((b|0)!=(b&268435455)?-1:b<<4,16)|0;j=ua((b|0)!=(b&1073741823)?-1:b<<2);if((d|0)>=-1){p=(b|0)>1?b:1;q=Q(d+1|0);while(1){r=N[f>>2];m=N[c>>2];s=N[f+4>>2];n=N[c+4>>2];k=N[f+8>>2];h=N[c+8>>2];i=e+(a<<4)|0;J[i+12>>2]=0;t=h;k=Q(k-h);h=Q(Q(a|0)/q);N[i+8>>2]=t+Q(k*h);N[i+4>>2]=n+Q(Q(s-n)*h);N[i>>2]=m+Q(Q(r-m)*h);J[(a<<2)+j>>2]=1065353216;a=a+1|0;if((p|0)!=(a|0)){continue}break}}J[8369]=J[8369]+1;c=Ac(ia[J[6782]](1252,16)|0,o,b,e,j);if(l&1){N[J[c+720>>2]+88>>2]=0;H[c+924|0]=1}if(l&2){N[(J[c+720>>2]+P(d+1|0,104)|0)+88>>2]=0;H[c+924|0]=1}if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}ta(j);if((d|0)>=0){b=(b|0)>2?b:2;a=1;while(1){Ja(c,a-1|0,a,0,0);a=a+1|0;if((b|0)!=(a|0)){continue}break}}ga=g+32|0;return c|0}function SF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=0,h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);d=ga-32|0;ga=d;a=J[a+12>>2];a:{if(!a){break a}J[e+4>>2]=a;g=J[b+12>>2];h=J[c+12>>2];n=N[h+56>>2];i=Q(N[g+56>>2]-n);o=N[h+48>>2];m=Q(N[g+48>>2]-o);p=N[h+52>>2];j=Q(N[g+52>>2]-p);f=Q(Y(Q(Q(i*i)+Q(Q(m*m)+Q(j*j)))));b=J[b+4>>2];k=Q(N[b+28>>2]*N[b+12>>2]);b=J[c+4>>2];l=Q(N[b+28>>2]*N[b+12>>2]);k=Q(k+l);if(f>k){if(!J[a+748>>2]){break a}c=J[a+740>>2];g=J[J[e+8>>2]+8>>2];b=(c|0)==(g|0);h=a;a=J[J[e+12>>2]+8>>2];ab(h,(b?c:a)+4|0,(b?a:g)+4|0);break a}J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=1065353216;J[d+20>>2]=0;k=Q(f-k);b:{if(!(f>Q(1.1920928955078125e-7))){f=Q(1);i=Q(0);j=Q(0);break b}f=Q(Q(1)/f);i=Q(i*f);N[d+24>>2]=i;j=Q(j*f);N[d+20>>2]=j;f=Q(m*f);N[d+16>>2]=f}J[d+12>>2]=0;N[d+8>>2]=Q(l*i)+n;N[d+4>>2]=Q(l*j)+p;N[d>>2]=Q(l*f)+o;ia[J[J[e>>2]+16>>2]](e,d+16|0,d,k);a=J[e+4>>2];if(!J[a+748>>2]){break a}c=J[a+740>>2];g=J[J[e+8>>2]+8>>2];b=(c|0)==(g|0);h=a;a=J[J[e+12>>2]+8>>2];ab(h,(b?c:a)+4|0,(b?a:g)+4|0)}ga=d+32|0}function ww(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];e=ga-16|0;ga=e;J[e+12>>2]=J[d+12>>2]+24;J[e+8>>2]=a;a=J[e+8>>2];b=ga-48|0;ga=b;J[b+44>>2]=J[e+12>>2];J[b+40>>2]=a;g=J[b+44>>2];a=ga-16|0;J[a+12>>2]=J[b+40>>2];J[b+36>>2]=J[J[a+12>>2]+4>>2];c=J[b+36>>2];J[b>>2]=0;J[b+4>>2]=0;J[b+32>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+16>>2]=0;J[b+20>>2]=0;J[b+8>>2]=0;J[b+12>>2]=0;wf(b);a=ga-32|0;ga=a;J[a+28>>2]=g;J[a+24>>2]=c;J[a+20>>2]=b;f=ga-16|0;c=J[a+28>>2];J[f+12>>2]=c;J[a+16>>2]=J[J[f+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){tc(J[c+12>>2]+P(J[a+12>>2],36)|0);J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}f=J[a+24>>2];h=ga-16|0;J[h+12>>2]=c;if(J[J[h+12>>2]+4>>2]<(f|0)){zh(c,J[a+24>>2])}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){yh(J[c+12>>2]+P(J[a+8>>2],36)|0,J[a+20>>2]);J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[c+4>>2]=J[a+24>>2];ga=a+32|0;tc(b);Ah(J[b+40>>2],J[b+36>>2],J[g+12>>2]);ga=b+48|0;ga=e+16|0;ga=d+16|0}function Za(a,b,c){var d=0,e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=0,w=Q(0),x=Q(0),y=Q(0);d=ga-48|0;ga=d;e=J[b+120>>2];v=J[b+124>>2];f=J[b>>2]+(v>>1)|0;if(v&1){e=J[e+J[f>>2]>>2]}ia[e|0](d,f,c);e=J[b+124>>2];f=J[b+4>>2]+(e>>1)|0;g=Q(-N[c+8>>2]);h=Q(-N[c+4>>2]);i=Q(-N[c>>2]);c=J[b+120>>2];c=e&1?J[J[f>>2]+c>>2]:c;j=N[b+16>>2];k=N[b+12>>2];l=N[b+32>>2];m=N[b+24>>2];n=N[b+28>>2];o=N[b+48>>2];p=N[b+40>>2];q=N[b+44>>2];r=N[b+8>>2];J[d+28>>2]=0;N[d+24>>2]=Q(o*g)+Q(Q(p*i)+Q(q*h));N[d+20>>2]=Q(l*g)+Q(Q(m*i)+Q(n*h));N[d+16>>2]=Q(j*g)+Q(Q(r*i)+Q(k*h));ia[c|0](d+32|0,f,d+16|0);w=N[b+104>>2];x=N[b- -64>>2];y=N[b+60>>2];g=N[b+108>>2];h=N[b+80>>2];i=N[b+72>>2];j=N[b+76>>2];k=N[b+112>>2];l=N[b+96>>2];m=N[b+88>>2];n=N[b+92>>2];o=N[b+56>>2];s=N[d+40>>2];t=N[d+32>>2];u=N[d+36>>2];p=N[d>>2];q=N[d+4>>2];r=N[d+8>>2];J[a+12>>2]=0;N[a+8>>2]=r-Q(k+Q(Q(s*l)+Q(Q(t*m)+Q(u*n))));N[a+4>>2]=q-Q(g+Q(Q(s*h)+Q(Q(t*i)+Q(u*j))));N[a>>2]=p-Q(w+Q(Q(s*x)+Q(Q(t*o)+Q(u*y))));ga=d+48|0}function YE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);a:{if(J[a+16>>2]){g=N[a+56>>2];e=N[a+40>>2];h=Q(Q(g+e)*Q(.5));f=N[a+52>>2];k=N[a+36>>2];i=Q(Q(f+k)*Q(.5));l=Q(Q(g-e)*Q(.5));u=Q(Q(f-k)*Q(.5));e=N[a+48>>2];f=N[a+32>>2];g=Q(Q(e+f)*Q(.5));e=Q(Q(e-f)*Q(.5));break a}e=Q(0)}v=Q(ia[J[J[a>>2]+48>>2]](a));w=Q(ia[J[J[a>>2]+48>>2]](a));p=Q(ia[J[J[a>>2]+48>>2]](a));x=N[b+52>>2];f=N[b+20>>2];k=N[b+24>>2];o=N[b+56>>2];m=N[b+36>>2];j=N[b+40>>2];y=N[b+48>>2];q=N[b+8>>2];r=N[b>>2];s=N[b+4>>2];t=N[b+16>>2];n=N[b+32>>2];J[c+12>>2]=0;o=Q(o+Q(Q(h*j)+Q(Q(g*n)+Q(i*m))));l=Q(l+p);p=Q(l*Q(R(j)));e=Q(e+v);j=Q(u+w);m=Q(p+Q(Q(e*Q(R(n)))+Q(j*Q(R(m)))));N[c+8>>2]=o-m;n=Q(x+Q(Q(h*k)+Q(Q(g*t)+Q(i*f))));f=Q(Q(l*Q(R(k)))+Q(Q(e*Q(R(t)))+Q(j*Q(R(f)))));N[c+4>>2]=n-f;h=Q(y+Q(Q(h*q)+Q(Q(g*r)+Q(i*s))));i=Q(Q(l*Q(R(q)))+Q(Q(e*Q(R(r)))+Q(j*Q(R(s)))));N[c>>2]=h-i;J[d+12>>2]=0;N[d+8>>2]=m+o;N[d+4>>2]=f+n;N[d>>2]=i+h}function no(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=ga+-64|0;ga=d;J[d+60>>2]=a;J[d+56>>2]=b;H[d+55|0]=c;b=J[d+60>>2];J[b+8>>2]=J[J[d+56>>2]>>2];Mf(b+20|0,J[d+56>>2]);J[(ga-16|0)+12>>2]=d+32;a:{if(H[d+55|0]&1){a=J[d+56>>2];c=J[a+12>>2];J[d+32>>2]=J[a+8>>2];J[d+36>>2]=c;c=J[a+20>>2];J[d+40>>2]=J[a+16>>2];J[d+44>>2]=c;break a}a=ga-16|0;J[a+12>>2]=J[b+8>>2];J[a+12>>2]=J[a+12>>2]+4;wa(d+16|0,J[a+12>>2],J[d+56>>2]+8|0);a=J[d+20>>2];J[d+32>>2]=J[d+16>>2];J[d+36>>2]=a;a=J[d+28>>2];J[d+40>>2]=J[d+24>>2];J[d+44>>2]=a}Uh(b+72|0,d+32|0);J[(ga-16|0)+12>>2]=d;Wh(d,b+40|0,b+56|0,N[J[d+56>>2]+24>>2]);Uh(b+92|0,d);a=J[d+56>>2]+24|0;c=ga-16|0;ga=c;J[c+12>>2]=b+112;J[c+8>>2]=a;e=ga-16|0;a=J[c+12>>2];J[e+12>>2]=a;J[c+4>>2]=J[J[e+12>>2]+4>>2];e=J[c+4>>2];f=ga-16|0;J[f+12>>2]=a;if(J[J[f+12>>2]+8>>2]==(e|0)){e=ga-16|0;J[e+12>>2]=a;f=J[J[e+12>>2]+4>>2];J[e+12>>2]=a;J[e+8>>2]=f;if(J[e+8>>2]){e=J[e+8>>2]<<1}else{e=1}Rh(a,e)}N[J[a+12>>2]+(J[a+4>>2]<<2)>>2]=N[J[c+8>>2]>>2];J[a+4>>2]=J[a+4>>2]+1;ga=c+16|0;ga=d- -64|0;return Q(N[b+4>>2])}function $k(a,b,c,d,e,f,g,h,i){var j=0,k=0,l=0;k=ga-16|0;ga=k;if(K[a+912|0]?1:J[a+924>>2]){j=a+1216|0;l=J[j+4>>2];J[k+8>>2]=J[j>>2];J[k+12>>2]=l;j=J[a+1212>>2];J[k>>2]=J[a+1208>>2];J[k+4>>2]=j;j=J[a+1304>>2];if(!(j&512)){N[a+896>>2]=N[J[b+32>>2]>>2]}if(!(j&1024)){N[a+904>>2]=N[J[b+32>>2]>>2]}if(!(j&2048)){N[a+900>>2]=N[b+4>>2]}c=De(a,a+868|0,d,e,f,g,h,i,b,c,k,1,0)+c|0}if(K[a+976|0]?1:J[a+988>>2]){j=a+1232|0;l=J[j+4>>2];J[k+8>>2]=J[j>>2];J[k+12>>2]=l;j=a+1224|0;l=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=l;j=J[a+1304>>2];if(!(j&4096)){N[a+960>>2]=N[J[b+32>>2]>>2]}if(!(j&8192)){N[a+968>>2]=N[J[b+32>>2]>>2]}if(!(j&16384)){N[a+964>>2]=N[b+4>>2]}c=De(a,a+932|0,d,e,f,g,h,i,b,c,k,1,0)+c|0}if(K[a+1040|0]?1:J[a+1052>>2]){j=a+1248|0;l=J[j+4>>2];J[k+8>>2]=J[j>>2];J[k+12>>2]=l;j=a+1240|0;l=J[j+4>>2];J[k>>2]=J[j>>2];J[k+4>>2]=l;j=J[a+1304>>2];if(!(j&32768)){N[a+1024>>2]=N[J[b+32>>2]>>2]}if(!(j&65536)){N[a+1032>>2]=N[J[b+32>>2]>>2]}if(!(j&131072)){N[a+1028>>2]=N[b+4>>2]}c=De(a,a+996|0,d,e,f,g,h,i,b,c,k,1,0)+c|0}ga=k+16|0;return c}function So(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=Q(0),g=0,h=Q(0),i=0,j=0,k=0,l=Q(0),m=0,n=0,o=Q(0),p=Q(0),q=Q(0);g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;m=J[g+24>>2];i=J[g+20>>2];j=J[g+16>>2];a=0;k=J[g+12>>2];c=k+3|0;a:{if((k|0)>=-2){l=Q(c|0);J[8369]=J[8369]+1;e=ia[J[6782]](c<<4,16)|0;d=e;while(1){f=Q(0);h=Q(.5);b=a;if(b){while(1){f=Q(f+(b&1?h:Q(-0)));n=b>>>0<2;b=b>>>1|0;h=Q(h*Q(.5));if(!n){continue}break}}J[d+12>>2]=0;f=Q(Q(f+f)+Q(-1));N[d+8>>2]=f;h=Q(Q(Q(Q(a<<1)*Q(3.1415927410125732))+Q(3.1415927410125732))/l);f=Q(Y(Q(Q(1)-Q(f*f))));N[d+4>>2]=Ga(h)*f;N[d>>2]=Ha(h)*f;d=d+16|0;a=a+1|0;if((c|0)!=(a|0)){continue}break}if((k|0)>=-2){d=(c|0)>1?c:1;a=0;while(1){f=N[i>>2];h=N[j>>2];l=N[i+4>>2];o=N[j+4>>2];p=N[i+8>>2];q=N[j+8>>2];b=e+(a<<4)|0;J[b+12>>2]=0;N[b+8>>2]=p+Q(q*N[b+8>>2]);N[b+4>>2]=l+Q(o*N[b+4>>2]);N[b>>2]=f+Q(h*N[b>>2]);a=a+1|0;if((d|0)!=(a|0)){continue}break}}a=ig(m,e,c,1);if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}break a}a=ig(m,0,c,1)}ga=g+32|0;return a|0}function pe(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;J[a>>2]=21924;if(J[a+104>>2]>0){while(1){i=J[a+112>>2]+(f<<3)|0;d=J[i+4>>2];g=J[J[a+4>>2]+684>>2];c=J[g+60>>2];if((c|0)>0){e=0;while(1){h=0;j=J[g+68>>2]+(e<<2)|0;b=J[j>>2];if(b){while(1){c=J[b+280>>2];a:{if(J[b+276>>2]!=(d|0)){h=b;break a}J[(h?h+280|0:j)>>2]=c;ta(b)}b=c;if(b){continue}break}c=J[g+60>>2]}e=e+1|0;if((e|0)<(c|0)){continue}break}d=J[i+4>>2]}if(d){ia[J[J[d>>2]+4>>2]](d)}f=f+1|0;if((f|0)<J[a+104>>2]){continue}break}}ak(a+60|0);b=J[a+132>>2];if(!(b?!b|!K[a+136|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+132>>2]=0;H[a+136|0]=1;J[a+124>>2]=0;J[a+128>>2]=0;b=J[a+112>>2];if(!(b?!b|!K[a+116|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+112>>2]=0;H[a+116|0]=1;J[a+104>>2]=0;J[a+108>>2]=0;b=J[a+92>>2];if(!(b?!b|!K[a+96|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+92>>2]=0;H[a+96|0]=1;J[a+84>>2]=0;J[a+88>>2]=0;b=J[a+72>>2];if(!(b?!b|!K[a+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+72>>2]=0;H[a+76|0]=1;b=a- -64|0;J[b>>2]=0;J[b+4>>2]=0;return a|0}function Am(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+40>>2]=0;H[a+44|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;if(J[a+12>>2]<=1){J[8369]=J[8369]+1;f=ia[J[6782]](24,16)|0;d=J[a+8>>2];a:{if((d|0)<=0){break a}b=0;if((d|0)!=1){i=d&-2;while(1){c=P(b,12);e=c+J[a+16>>2]|0;g=J[e+4>>2];c=c+f|0;J[c>>2]=J[e>>2];J[c+4>>2]=g;J[c+8>>2]=J[e+8>>2];c=P(b|1,12);e=c+J[a+16>>2]|0;g=J[e+4>>2];c=c+f|0;J[c>>2]=J[e>>2];J[c+4>>2]=g;J[c+8>>2]=J[e+8>>2];b=b+2|0;h=h+2|0;if((h|0)!=(i|0)){continue}break}}if(!(d&1)){break a}d=P(b,12);b=d+J[a+16>>2]|0;e=J[b+4>>2];d=d+f|0;J[d>>2]=J[b>>2];J[d+4>>2]=e;J[d+8>>2]=J[b+8>>2]}b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=f;H[a+20|0]=1;J[a+12>>2]=2}dh(a)}function bB(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0);if(K[a+738|0]){J[b>>2]=0;J[b+4>>2]=0;return}J[b>>2]=5;J[b+4>>2]=1;d=J[a+32>>2];c=N[a+652>>2];f=N[a+620>>2];g=N[a+636>>2];l=Q(Q(N[d+44>>2]*c)+Q(Q(N[d+36>>2]*f)+Q(g*N[d+40>>2])));e=J[a+28>>2];m=N[e+44>>2];h=N[a+584>>2];n=N[e+36>>2];i=N[a+552>>2];j=N[a+568>>2];o=N[e+40>>2];u=Q(l*Q(Q(m*h)+Q(Q(n*i)+Q(j*o))));p=Q(Q(N[d+12>>2]*c)+Q(Q(N[d+4>>2]*f)+Q(g*N[d+8>>2])));q=N[e+12>>2];r=N[e+4>>2];s=N[e+8>>2];v=Q(p*Q(Q(q*h)+Q(Q(r*i)+Q(j*s))));t=N[e+28>>2];k=Q(t*h);h=N[e+20>>2];w=Q(h*i);i=N[e+24>>2];k=Q(k+Q(w+Q(j*i)));j=Q(Q(N[d+28>>2]*c)+Q(Q(N[d+20>>2]*f)+Q(g*N[d+24>>2])));c=N[a+588>>2];f=N[a+556>>2];g=N[a+572>>2];c=Q($a(Q(u+Q(v+Q(k*j))),Q(Q(l*Q(Q(m*c)+Q(Q(n*f)+Q(o*g))))+Q(Q(p*Q(Q(q*c)+Q(Q(r*f)+Q(s*g))))+Q(Q(Q(t*c)+Q(Q(h*f)+Q(i*g)))*j))))*N[a+732>>2]);N[a+728>>2]=c;Pk(a+688|0,c);if(K[a+716|0]|K[a+737|0]){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}}function $F(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=J[a+188>>2];j=J[b>>2];d=J[a+268>>2];a:{b:{if((d|0)<=0){break b}g=J[a+276>>2];while(1){if(J[g+(e<<2)>>2]!=(j|0)){e=e+1|0;if((e|0)!=(d|0)){continue}break b}break}if((d|0)!=(e|0)){break a}}m=c?c:f;c:{if(J[a+272>>2]!=(d|0)){break c}g=d?d<<1:1;if((g|0)<=(d|0)){break c}d:{if(!g){c=0;break d}J[8369]=J[8369]+1;c=ia[J[6782]](g<<2,16)|0;d=J[a+268>>2]}e:{if((d|0)<=0){break e}e=0;if(d-1>>>0>=3){i=d&-4;while(1){f=e<<2;J[f+c>>2]=J[f+J[a+276>>2]>>2];h=f|4;J[h+c>>2]=J[h+J[a+276>>2]>>2];h=f|8;J[h+c>>2]=J[h+J[a+276>>2]>>2];f=f|12;J[f+c>>2]=J[f+J[a+276>>2]>>2];e=e+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}f=d&3;if(!f){break e}while(1){i=e<<2;J[i+c>>2]=J[i+J[a+276>>2]>>2];e=e+1|0;l=l+1|0;if((f|0)!=(l|0)){continue}break}}e=J[a+276>>2];if(!(!e|!K[a+280|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}d=J[a+268>>2]}J[a+276>>2]=c;H[a+280|0]=1;J[a+272>>2]=g}J[J[a+276>>2]+(d<<2)>>2]=j;J[a+268>>2]=d+1;a=J[a+284>>2];ia[J[J[a>>2]+8>>2]](a,m,b)|0}}function sg(a){a=a|0;var b=0;J[a>>2]=20292;if(K[a+272|0]){b=J[a+204>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+204>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+196>>2];if(b){ia[J[J[b>>2]>>2]](b)|0;b=J[a+196>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}if(K[a+273|0]){b=J[a+200>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+200>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+316>>2];if(!(b?!b|!K[a+320|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+316>>2]=0;H[a+320|0]=1;J[a+308>>2]=0;J[a+312>>2]=0;b=J[a+288>>2];if(!(b?!b|!K[a+292|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+288>>2]=0;H[a+292|0]=1;J[a+280>>2]=0;J[a+284>>2]=0;b=J[a+240>>2];if(!(b?!b|!K[a+244|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+240>>2]=0;H[a+244|0]=1;J[a+232>>2]=0;J[a+236>>2]=0;b=J[a+220>>2];if(!(b?!b|!K[a+224|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+220>>2]=0;H[a+224|0]=1;J[a+212>>2]=0;J[a+216>>2]=0;b=J[a+188>>2];if(!(b?!b|!K[a+192|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+188>>2]=0;H[a+192|0]=1;J[a+180>>2]=0;J[a+184>>2]=0;Xm(a);return a|0}function Cc(a,b,c,d,e,f,g){var h=Q(0),i=Q(0),j=0,k=0,l=0,m=Q(0),n=Q(0),o=Q(0),p=0;j=ga-16|0;J[d>>2]=2139095039;J[e>>2]=-8388609;p=J[a+8>>2];if((p|0)<=0){h=Q(-3.4028234663852886e38)}else{while(1){l=J[a+16>>2]+(k<<4)|0;h=N[l+8>>2];i=N[l>>2];m=N[l+4>>2];n=Q(Q(Q(h*N[b+40>>2])+Q(Q(i*N[b+32>>2])+Q(m*N[b+36>>2])))+N[b+56>>2]);o=Q(Q(Q(h*N[b+8>>2])+Q(Q(i*N[b>>2])+Q(m*N[b+4>>2])))+N[b+48>>2]);i=Q(Q(Q(h*N[b+24>>2])+Q(Q(i*N[b+16>>2])+Q(m*N[b+20>>2])))+N[b+52>>2]);h=Q(Q(n*N[c+8>>2])+Q(Q(o*N[c>>2])+Q(i*N[c+4>>2])));if(h<N[d>>2]){N[d>>2]=h;J[f+12>>2]=0;N[f+8>>2]=n;N[f+4>>2]=i;N[f>>2]=o}if(h>N[e>>2]){N[e>>2]=h;J[g+12>>2]=0;N[g+8>>2]=n;N[g+4>>2]=i;N[g>>2]=o}k=k+1|0;if((p|0)!=(k|0)){continue}break}h=N[e>>2]}i=N[d>>2];if(h<i){N[d>>2]=h;N[e>>2]=i;a=J[f+12>>2];J[j+8>>2]=J[f+8>>2];J[j+12>>2]=a;a=J[f+4>>2];J[j>>2]=J[f>>2];J[j+4>>2]=a;a=J[g+12>>2];J[f+8>>2]=J[g+8>>2];J[f+12>>2]=a;a=J[g+4>>2];J[f>>2]=J[g>>2];J[f+4>>2]=a;a=J[j+12>>2];J[g+8>>2]=J[j+8>>2];J[g+12>>2]=a;a=J[j+4>>2];J[g>>2]=J[j>>2];J[g+4>>2]=a}}function sB(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+300>>2];N[b+56>>2]=N[a+304>>2];N[b+60>>2]=N[a+308>>2];N[b+64>>2]=N[a+312>>2];N[b+68>>2]=N[a+316>>2];N[b+72>>2]=N[a+320>>2];N[b+76>>2]=N[a+324>>2];N[b+80>>2]=N[a+328>>2];N[b+84>>2]=N[a+332>>2];N[b+88>>2]=N[a+336>>2];N[b+92>>2]=N[a+340>>2];N[b+96>>2]=N[a+344>>2];N[b+100>>2]=N[a+348>>2];N[b+104>>2]=N[a+352>>2];N[b+108>>2]=N[a+356>>2];N[b+112>>2]=N[a+360>>2];N[b+116>>2]=N[a+364>>2];N[b+120>>2]=N[a+368>>2];N[b+124>>2]=N[a+372>>2];N[b+128>>2]=N[a+376>>2];N[b+132>>2]=N[a+380>>2];N[b+136>>2]=N[a+384>>2];N[b+140>>2]=N[a+388>>2];N[b+144>>2]=N[a+392>>2];N[b+148>>2]=N[a+396>>2];N[b+152>>2]=N[a+400>>2];N[b+156>>2]=N[a+404>>2];N[b+160>>2]=N[a+408>>2];N[b+164>>2]=N[a+412>>2];N[b+168>>2]=N[a+416>>2];N[b+172>>2]=N[a+420>>2];N[b+176>>2]=N[a+424>>2];N[b+180>>2]=N[a+444>>2];N[b+184>>2]=N[a+448>>2];N[b+188>>2]=N[a+452>>2];N[b+192>>2]=N[a+428>>2];N[b+196>>2]=N[a+432>>2];N[b+200>>2]=N[a+436>>2];N[b+204>>2]=N[a+440>>2];return 3261}function Hx(a,b,c,d){a=a|0;b=Q(b);c=Q(c);d=Q(d);var e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;N[e+4>>2]=c;N[e>>2]=d;b=N[e+8>>2];c=N[e+4>>2];d=N[e>>2];a=ga-96|0;ga=a;J[a+92>>2]=J[e+12>>2];N[a+88>>2]=b;N[a+84>>2]=c;N[a+80>>2]=d;f=J[a+92>>2];N[a+76>>2]=Ta(N[a+88>>2]);N[a+72>>2]=Ta(N[a+84>>2]);N[a+68>>2]=Ta(N[a+80>>2]);N[a+64>>2]=Sa(N[a+88>>2]);N[a+60>>2]=Sa(N[a+84>>2]);N[a+56>>2]=Sa(N[a+80>>2]);N[a+52>>2]=N[a+76>>2]*N[a+68>>2];N[a+48>>2]=N[a+76>>2]*N[a+56>>2];N[a+44>>2]=N[a+64>>2]*N[a+68>>2];N[a+40>>2]=N[a+64>>2]*N[a+56>>2];N[a+36>>2]=N[a+72>>2]*N[a+68>>2];N[a+32>>2]=Q(N[a+60>>2]*N[a+44>>2])+Q(-N[a+48>>2]);N[a+28>>2]=Q(N[a+60>>2]*N[a+52>>2])+N[a+40>>2];N[a+24>>2]=N[a+72>>2]*N[a+56>>2];N[a+20>>2]=Q(N[a+60>>2]*N[a+40>>2])+N[a+52>>2];N[a+16>>2]=Q(N[a+60>>2]*N[a+48>>2])+Q(-N[a+44>>2]);N[a+12>>2]=-N[a+60>>2];N[a+8>>2]=N[a+72>>2]*N[a+64>>2];N[a+4>>2]=N[a+72>>2]*N[a+76>>2];ld(f,a+36|0,a+32|0,a+28|0,a+24|0,a+20|0,a+16|0,a+12|0,a+8|0,a+4|0);ga=a+96|0;ga=e+16|0}function Rj(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=ga-16|0;ga=i;while(1){m=c;h=J[a+12>>2];g=h+((c+d|0)/2<<4)|0;n=J[g+8>>2];k=J[g+4>>2];l=J[g>>2];g=d;while(1){a:{f=(c<<4)+h|0;e=J[f+4>>2];b:{if((e|0)<(k|0)){break b}if((e|0)!=(k|0)){break a}e=J[f>>2];if((e|0)<(l|0)){break b}if((e|0)!=(l|0)|J[f+8>>2]>=(n|0)){break a}}c=c+1|0;continue}while(1){c:{o=g<<4;e=o+h|0;j=J[e+4>>2];d:{if((j|0)>(k|0)){break d}if((k|0)!=(j|0)){break c}j=J[e>>2];if((j|0)>(l|0)){break d}if((l|0)!=(j|0)|J[e+8>>2]<=(n|0)){break c}}g=g-1|0;continue}break}if((c|0)<=(g|0)){h=J[f+12>>2];J[i+8>>2]=J[f+8>>2];J[i+12>>2]=h;h=J[f+4>>2];J[i>>2]=J[f>>2];J[i+4>>2]=h;h=J[e+4>>2];J[f>>2]=J[e>>2];J[f+4>>2]=h;h=J[e+12>>2];J[f+8>>2]=J[e+8>>2];J[f+12>>2]=h;e=J[i+4>>2];f=J[a+12>>2]+o|0;J[f>>2]=J[i>>2];J[f+4>>2]=e;e=J[i+12>>2];J[f+8>>2]=J[i+8>>2];J[f+12>>2]=e;g=g-1|0;c=c+1|0}if((c|0)<=(g|0)){h=J[a+12>>2];continue}break}if((g|0)>(m|0)){Rj(a,b,m,g)}if((c|0)<(d|0)){continue}break}ga=i+16|0}function Mk(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;while(1){n=c;h=J[a+12>>2];m=J[h+((c+d|0)/2<<2)>>2];f=d;while(1){k=J[J[m+740>>2]+208>>2];g=(k|0)<0;a:{if(!g){while(1){i=c;l=(c<<2)+h|0;j=J[l>>2];e=J[J[j+740>>2]+208>>2];if((e|0)<0){e=J[J[j+744>>2]+208>>2]}c=i+1|0;if((e|0)<(k|0)){continue}break a}}o=J[J[m+744>>2]+208>>2];while(1){i=c;l=(c<<2)+h|0;j=J[l>>2];e=J[J[j+740>>2]+208>>2];if((e|0)<0){e=J[J[j+744>>2]+208>>2]}c=i+1|0;if((e|0)<(o|0)){continue}break}}b:{if(!g){while(1){c=f;g=J[(c<<2)+h>>2];e=J[J[g+740>>2]+208>>2];if((e|0)<0){e=J[J[g+744>>2]+208>>2]}f=c-1|0;if((e|0)>(k|0)){continue}break b}}k=J[J[m+744>>2]+208>>2];while(1){c=f;g=J[(c<<2)+h>>2];e=J[J[g+740>>2]+208>>2];if((e|0)<0){e=J[J[g+744>>2]+208>>2]}f=c-1|0;if((e|0)>(k|0)){continue}break}}c:{if((c|0)<(i|0)){f=c;c=i;break c}J[l>>2]=g;J[J[a+12>>2]+(c<<2)>>2]=j;f=c-1|0;c=i+1|0}if((c|0)<=(f|0)){h=J[a+12>>2];continue}break}if((f|0)>(n|0)){Mk(a,b,n,f)}if((c|0)<(d|0)){continue}break}}function _k(a,b,c,d,e,f,g,h,i){var j=0,k=0,l=0,m=0,n=Q(0),o=0,p=0,q=0,r=0;j=ga-80|0;ga=j;J[j+52>>2]=0;J[j+44>>2]=0;J[j+48>>2]=1045220557;J[j+76>>2]=0;r=b+4|0;o=a+680|0;while(1){l=K[(m+o|0)+108|0];p=m<<2;q=J[(p+o|0)+176>>2];a:{if(!q){k=l;l=1;if(!k){break a}}J[j+72>>2]=q;J[j+56>>2]=0;k=a+p|0;N[j+68>>2]=N[k+840>>2];N[j+64>>2]=N[k+824>>2];n=N[a+732>>2];H[j+60|0]=l;N[j+36>>2]=n;N[j+20>>2]=N[k+696>>2];N[j+40>>2]=N[a+728>>2];n=N[k+680>>2];J[j+32>>2]=0;N[j+16>>2]=n;N[j+28>>2]=N[k+808>>2];N[j+24>>2]=N[k+792>>2];N[j>>2]=N[k+1064>>2];N[j+4>>2]=N[k+1080>>2];n=N[k+1096>>2];J[j+12>>2]=0;N[j+8>>2]=n;l=J[a+1304>>2]>>P(m,3);N[j+44>>2]=N[(l&1?k+740|0:J[b+32>>2])>>2];N[j+52>>2]=N[(l&2?k+772|0:J[b+32>>2])>>2];N[j+48>>2]=N[(l&4?k+756|0:r)>>2];l=j+16|0;k=0;b:{if(!K[a+1301|0]){break b}k=1;if(!J[((((m+1&255)>>>0)%3<<6)+a|0)+924>>2]){break b}k=!J[((((m+2&255)>>>0)%3<<6)+a|0)+924>>2]}c=De(a,l,d,e,f,g,h,i,b,c,j,0,k)+c|0}m=m+1|0;if((m|0)!=3){continue}break}ga=j+80|0;return c}function Ed(a,b){var c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0);if(J[a>>2]==(b|0)){J[a>>2]=0;return 0}d=J[b+32>>2];c=J[(((J[d+40>>2]!=(b|0))<<2)+d|0)+36>>2];b=J[d+32>>2];a:{b:{if(b){J[((((d|0)==J[b+40>>2])<<2)+b|0)+36>>2]=c;J[c+32>>2]=b;c=J[a+4>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+4>>2]=d;while(1){q=N[b>>2];d=J[b+36>>2];e=N[d>>2];c=J[b+40>>2];k=N[c>>2];e=e<k?e:k;N[b>>2]=e;k=N[b+16>>2];f=N[d+16>>2];l=N[c+16>>2];f=f>l?f:l;N[b+16>>2]=f;l=N[b+4>>2];g=N[d+4>>2];m=N[c+4>>2];g=g<m?g:m;N[b+4>>2]=g;m=N[b+20>>2];h=N[d+20>>2];n=N[c+20>>2];h=h>n?h:n;N[b+20>>2]=h;n=N[b+8>>2];i=N[d+8>>2];o=N[c+8>>2];i=i<o?i:o;N[b+8>>2]=i;o=N[b+24>>2];j=N[d+24>>2];p=N[c+24>>2];j=j>p?j:p;N[b+24>>2]=j;c:{if(e!=q|l!=g|(n!=i|k!=f)){break c}if(m!=h){break c}if(o==j){break a}}b=J[b+32>>2];if(b){continue}break}break b}J[a>>2]=c;J[c+32>>2]=0;b=J[a+4>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+4>>2]=d}b=J[a>>2]}return b}function jm(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;d=J[a+96>>2];a:{if((d|0)!=J[a+100>>2]){break a}j=d?d<<1:1;if((j|0)<=(d|0)){break a}if(j){J[8369]=J[8369]+1;f=ia[J[6782]](j<<4,16)|0;d=J[a+96>>2]}b:{if((d|0)<=0){break b}if((d|0)!=1){m=d&-2;while(1){h=g<<4;i=h+f|0;e=h+J[a+104>>2]|0;k=J[e+4>>2];J[i>>2]=J[e>>2];J[i+4>>2]=k;k=J[e+12>>2];J[i+8>>2]=J[e+8>>2];J[i+12>>2]=k;e=h|16;h=e+f|0;e=e+J[a+104>>2]|0;i=J[e+4>>2];J[h>>2]=J[e>>2];J[h+4>>2]=i;i=J[e+12>>2];J[h+8>>2]=J[e+8>>2];J[h+12>>2]=i;g=g+2|0;l=l+2|0;if((l|0)!=(m|0)){continue}break}}if(!(d&1)){break b}d=g<<4;g=d+f|0;d=d+J[a+104>>2]|0;e=J[d+4>>2];J[g>>2]=J[d>>2];J[g+4>>2]=e;e=J[d+12>>2];J[g+8>>2]=J[d+8>>2];J[g+12>>2]=e}d=J[a+104>>2];if(!(d?!d|!K[a+108|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}J[a+104>>2]=f;H[a+108|0]=1;J[a+100>>2]=j;d=J[a+96>>2]}f=J[b+4>>2];d=J[a+104>>2]+(d<<4)|0;J[d>>2]=J[b>>2];J[d+4>>2]=f;f=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=f;J[a+96>>2]=J[a+96>>2]+1;if(c){Sb(a)}}function xE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];d=J[a+96>>2];J[b+60>>2]=d;if(d){e=ia[J[J[c>>2]+28>>2]](c,J[a+104>>2])|0;J[b+56>>2]=0;J[b+52>>2]=e;g=ia[J[J[c>>2]+16>>2]](c,16,d)|0;a:{if((d|0)<=0){a=J[a+104>>2];break a}a=J[a+104>>2];b=J[g+8>>2];if((d|0)!=1){j=d&-2;while(1){h=f<<4;e=h+a|0;N[b>>2]=N[e>>2];N[b+4>>2]=N[e+4>>2];N[b+8>>2]=N[e+8>>2];N[b+12>>2]=N[e+12>>2];e=(h|16)+a|0;N[b+16>>2]=N[e>>2];N[b+20>>2]=N[e+4>>2];N[b+24>>2]=N[e+8>>2];N[b+28>>2]=N[e+12>>2];b=b+32|0;f=f+2|0;i=i+2|0;if((j|0)!=(i|0)){continue}break}}if(!(d&1)){break a}d=(f<<4)+a|0;N[b>>2]=N[d>>2];N[b+4>>2]=N[d+4>>2];N[b+8>>2]=N[d+8>>2];N[b+12>>2]=N[d+12>>2]}ia[J[J[c>>2]+20>>2]](c,g,3626,1497453121,a);return 3802}J[b+52>>2]=0;J[b+56>>2]=0;return 3802}function qb(a){var b=Q(0),c=0,d=0,e=Q(0);d=(D(a),x(2));c=d&2147483647;if(c>>>0>=1065353216){if((c|0)==1065353216){return(d|0)>=0?Q(0):Q(3.141592502593994)}return Q(Q(0)/Q(a-a))}a:{if(c>>>0<=1056964607){b=Q(1.570796251296997);if(c>>>0<847249409){break a}b=Q(a*a);return Q(Q(Q(Q(7.549789415861596e-8)-Q(a*Q(Q(Q(Q(b*Q(Q(b*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*b)/Q(Q(b*Q(-.7066296339035034))+Q(1)))))-a)+Q(1.570796251296997))}if((d|0)<0){a=Q(Q(a+Q(1))*Q(.5));b=Q(Y(a));a=Q(Q(1.570796251296997)-Q(b+Q(Q(b*Q(Q(Q(Q(a*Q(Q(a*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*a)/Q(Q(a*Q(-.7066296339035034))+Q(1))))+Q(-7.549789415861596e-8))));return Q(a+a)}a=Q(Q(Q(1)-a)*Q(.5));e=Q(Y(a));b=(z(2,(D(e),x(2))&-4096),E());a=Q(Q(Q(e*Q(Q(Q(Q(a*Q(Q(a*Q(-.008656363002955914))+Q(-.04274342209100723)))+Q(.16666586697101593))*a)/Q(Q(a*Q(-.7066296339035034))+Q(1))))+Q(Q(a-Q(b*b))/Q(e+b)))+b);b=Q(a+a)}return b}function Ek(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;while(1){n=c;h=J[a+12>>2];m=J[h+((c+d|0)/2<<2)>>2];f=d;while(1){k=J[J[m+28>>2]+208>>2];g=(k|0)<0;a:{if(!g){while(1){i=c;l=(c<<2)+h|0;j=J[l>>2];e=J[J[j+28>>2]+208>>2];if((e|0)<0){e=J[J[j+32>>2]+208>>2]}c=i+1|0;if((e|0)<(k|0)){continue}break a}}o=J[J[m+32>>2]+208>>2];while(1){i=c;l=(c<<2)+h|0;j=J[l>>2];e=J[J[j+28>>2]+208>>2];if((e|0)<0){e=J[J[j+32>>2]+208>>2]}c=i+1|0;if((e|0)<(o|0)){continue}break}}b:{if(!g){while(1){c=f;g=J[(c<<2)+h>>2];e=J[J[g+28>>2]+208>>2];if((e|0)<0){e=J[J[g+32>>2]+208>>2]}f=c-1|0;if((e|0)>(k|0)){continue}break b}}k=J[J[m+32>>2]+208>>2];while(1){c=f;g=J[(c<<2)+h>>2];e=J[J[g+28>>2]+208>>2];if((e|0)<0){e=J[J[g+32>>2]+208>>2]}f=c-1|0;if((e|0)>(k|0)){continue}break}}c:{if((c|0)<(i|0)){f=c;c=i;break c}J[l>>2]=g;J[J[a+12>>2]+(c<<2)>>2]=j;f=c-1|0;c=i+1|0}if((c|0)<=(f|0)){h=J[a+12>>2];continue}break}if((f|0)>(n|0)){Ek(a,b,n,f)}if((c|0)<(d|0)){continue}break}}function mA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(!(K[b+204|0]&3|H[b+504|0]&1)){ue(b,a+248|0)}if(J[b+192>>2]){a:{if(!(H[b+204|0]&1)){c=J[a+232>>2];b:{if((c|0)!=J[a+236>>2]){break b}h=c?c<<1:1;if((h|0)<=(c|0)){break b}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;c=J[a+232>>2]}c:{if((c|0)<=0){break c}if(c-1>>>0>=3){i=c&-4;while(1){d=e<<2;J[d+f>>2]=J[d+J[a+240>>2]>>2];g=d|4;J[g+f>>2]=J[g+J[a+240>>2]>>2];g=d|8;J[g+f>>2]=J[g+J[a+240>>2]>>2];d=d|12;J[d+f>>2]=J[d+J[a+240>>2]>>2];e=e+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}d=c&3;if(!d){break c}while(1){i=e<<2;J[i+f>>2]=J[i+J[a+240>>2]>>2];e=e+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}}e=J[a+240>>2];if(!(!e|!K[a+244|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}c=J[a+232>>2]}J[a+240>>2]=f;H[a+244|0]=1;J[a+236>>2]=h}J[J[a+240>>2]+(c<<2)>>2]=b;J[a+232>>2]=c+1;break a}if((J[b+216>>2]&-2)!=4){J[b+216>>2]=2}}c=b;b=J[b+204>>2]&3;ia[J[J[a>>2]+36>>2]](a,c,b?2:1,b?-3:-1)}}function Pf(a,b){var c=0,d=0,e=0,f=0,g=0,h=0;f=ga-16|0;ga=f;J[f+12>>2]=a;J[f+8>>2]=b;a=J[f+8>>2];b=ga-32|0;ga=b;J[b+28>>2]=J[f+12>>2];J[b+24>>2]=a;h=J[b+28>>2];a=ga-16|0;J[a+12>>2]=J[b+24>>2];J[b+20>>2]=J[J[a+12>>2]+4>>2];e=J[b+20>>2];J[(ga-16|0)+12>>2]=b;a=ga-32|0;ga=a;J[a+28>>2]=h;J[a+24>>2]=e;J[a+20>>2]=b;c=ga-16|0;e=J[a+28>>2];J[c+12>>2]=e;J[a+16>>2]=J[J[c+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}c=J[a+24>>2];d=ga-16|0;J[d+12>>2]=e;if(J[J[d+12>>2]+4>>2]<(c|0)){Sh(e,J[a+24>>2])}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){d=J[e+12>>2]+(J[a+8>>2]<<4)|0;c=ga-16|0;J[c+12>>2]=16;J[c+8>>2]=d;d=J[a+20>>2];g=J[d+4>>2];c=J[c+8>>2];J[c>>2]=J[d>>2];J[c+4>>2]=g;g=J[d+12>>2];J[c+8>>2]=J[d+8>>2];J[c+12>>2]=g;J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[e+4>>2]=J[a+24>>2];ga=a+32|0;Oh(J[b+24>>2],J[b+20>>2],J[h+12>>2]);ga=b+32|0;ga=f+16|0}function CA(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+52>>2];N[b+56>>2]=N[a+56>>2];N[b+60>>2]=N[a+60>>2];N[b+64>>2]=N[a- -64>>2];N[b+68>>2]=N[a+68>>2];N[b+72>>2]=N[a+72>>2];N[b+76>>2]=N[a+76>>2];N[b+80>>2]=N[a+80>>2];N[b+84>>2]=N[a+84>>2];N[b+88>>2]=N[a+88>>2];N[b+92>>2]=N[a+92>>2];N[b+96>>2]=N[a+96>>2];N[b+100>>2]=N[a+100>>2];N[b+104>>2]=N[a+104>>2];N[b+108>>2]=N[a+108>>2];N[b+112>>2]=N[a+112>>2];N[b+116>>2]=N[a+116>>2];N[b+120>>2]=N[a+120>>2];N[b+124>>2]=N[a+124>>2];N[b+128>>2]=N[a+128>>2];N[b+132>>2]=N[a+132>>2];N[b+136>>2]=N[a+136>>2];N[b+140>>2]=N[a+140>>2];N[b+144>>2]=N[a+144>>2];N[b+148>>2]=N[a+148>>2];N[b+152>>2]=N[a+152>>2];N[b+156>>2]=N[a+156>>2];N[b+160>>2]=N[a+160>>2];N[b+164>>2]=N[a+164>>2];N[b+168>>2]=N[a+168>>2];N[b+172>>2]=N[a+172>>2];N[b+176>>2]=N[a+176>>2];N[b+180>>2]=N[a+188>>2];N[b+184>>2]=N[a+184>>2];N[b+188>>2]=N[a+196>>2];N[b+192>>2]=N[a+192>>2];J[b+196>>2]=K[a+180|0];J[b+200>>2]=K[a+49|0];return 3287}function dG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;i=J[b>>2];c=J[a+268>>2];a:{b:{if((c|0)<=0){break b}e=J[a+276>>2];b=0;while(1){if(J[e+(b<<2)>>2]!=(i|0)){b=b+1|0;if((c|0)!=(b|0)){continue}break b}break}if((b|0)!=(c|0)){break a}}c:{if(J[a+272>>2]!=(c|0)){break c}g=c?c<<1:1;if((g|0)<=(c|0)){break c}d:{if(!g){e=0;break d}J[8369]=J[8369]+1;e=ia[J[6782]](g<<2,16)|0;c=J[a+268>>2]}e:{if((c|0)<=0){break e}b=0;if(c-1>>>0>=3){h=c&-4;while(1){d=b<<2;J[d+e>>2]=J[d+J[a+276>>2]>>2];f=d|4;J[f+e>>2]=J[f+J[a+276>>2]>>2];f=d|8;J[f+e>>2]=J[f+J[a+276>>2]>>2];d=d|12;J[d+e>>2]=J[d+J[a+276>>2]>>2];b=b+4|0;j=j+4|0;if((h|0)!=(j|0)){continue}break}}d=c&3;if(!d){break e}while(1){h=b<<2;J[h+e>>2]=J[h+J[a+276>>2]>>2];b=b+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}}b=J[a+276>>2];if(!(!b|!K[a+280|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}c=J[a+268>>2]}J[a+276>>2]=e;H[a+280|0]=1;J[a+272>>2]=g}J[J[a+276>>2]+(c<<2)>>2]=i;J[a+268>>2]=c+1}}function Sl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);e=Q(ia[J[J[a>>2]+48>>2]](a));y=N[b+52>>2];i=N[b+24>>2];j=N[b+20>>2];k=N[b+56>>2];g=N[b+40>>2];h=N[a- -64>>2];f=N[a+80>>2];l=N[b+36>>2];p=N[a+60>>2];q=N[a+76>>2];z=N[b+48>>2];r=N[b+8>>2];s=N[b>>2];t=N[b+4>>2];u=N[b+16>>2];v=N[b+32>>2];w=N[a+56>>2];x=N[a+72>>2];J[c+12>>2]=0;m=k;k=Q(Q(f+h)*Q(.5));n=Q(Q(x+w)*Q(.5));o=Q(Q(q+p)*Q(.5));m=Q(m+Q(Q(g*k)+Q(Q(v*n)+Q(l*o))));h=Q(e+Q(Q(f-h)*Q(.5)));f=Q(h*Q(R(g)));g=Q(e+Q(Q(x-w)*Q(.5)));e=Q(e+Q(Q(q-p)*Q(.5)));f=Q(f+Q(Q(g*Q(R(v)))+Q(e*Q(R(l)))));N[c+8>>2]=m-f;l=Q(y+Q(Q(k*i)+Q(Q(n*u)+Q(o*j))));i=Q(Q(h*Q(R(i)))+Q(Q(g*Q(R(u)))+Q(e*Q(R(j)))));N[c+4>>2]=l-i;j=Q(z+Q(Q(k*r)+Q(Q(n*s)+Q(o*t))));e=Q(Q(h*Q(R(r)))+Q(Q(g*Q(R(s)))+Q(e*Q(R(t)))));N[c>>2]=j-e;J[d+12>>2]=0;N[d+8>>2]=f+m;N[d+4>>2]=i+l;N[d>>2]=e+j}function $o(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=ga-16|0;ga=f;J[f+12>>2]=a;J[f+8>>2]=b;I[f+6>>1]=c;I[f+4>>1]=d;j=J[f+8>>2];m=I[f+6>>1];n=I[f+4>>1];d=0;c=0;a=J[f+12>>2];b=J[a+328>>2];a:{if((b|0)!=J[a+332>>2]){break a}h=b?b<<1:1;if((h|0)<=(b|0)){break a}if(h){J[8369]=J[8369]+1;c=ia[J[6782]](h<<2,16)|0;b=J[a+328>>2]}b:{if((b|0)<=0){break b}if(b-1>>>0>=3){i=b&-4;while(1){e=d<<2;J[e+c>>2]=J[e+J[a+336>>2]>>2];g=e|4;J[g+c>>2]=J[g+J[a+336>>2]>>2];g=e|8;J[g+c>>2]=J[g+J[a+336>>2]>>2];e=e|12;J[e+c>>2]=J[e+J[a+336>>2]>>2];d=d+4|0;k=k+4|0;if((i|0)!=(k|0)){continue}break}}e=b&3;if(!e){break b}while(1){i=d<<2;J[i+c>>2]=J[i+J[a+336>>2]>>2];d=d+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}}d=J[a+336>>2];if(!(!d|!K[a+340|0])){if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}b=J[a+328>>2]}J[a+336>>2]=c;H[a+340|0]=1;J[a+332>>2]=h}J[J[a+336>>2]+(b<<2)>>2]=j;J[a+328>>2]=b+1;J[j+284>>2]=J[a+452>>2];jh(a,j,m,n);ga=f+16|0}function qE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0);e=Q(ia[J[J[a>>2]+48>>2]](a));y=N[b+52>>2];i=N[b+24>>2];j=N[b+20>>2];k=N[b+56>>2];g=N[b+40>>2];h=N[a+60>>2];f=N[a+76>>2];l=N[b+36>>2];p=N[a+56>>2];q=N[a+72>>2];z=N[b+48>>2];r=N[b+8>>2];s=N[b>>2];t=N[b+4>>2];u=N[b+16>>2];v=N[b+32>>2];w=N[a+52>>2];x=N[a+68>>2];J[c+12>>2]=0;m=k;k=Q(Q(f+h)*Q(.5));n=Q(Q(x+w)*Q(.5));o=Q(Q(q+p)*Q(.5));m=Q(m+Q(Q(g*k)+Q(Q(v*n)+Q(l*o))));h=Q(e+Q(Q(f-h)*Q(.5)));f=Q(h*Q(R(g)));g=Q(e+Q(Q(x-w)*Q(.5)));e=Q(e+Q(Q(q-p)*Q(.5)));f=Q(f+Q(Q(g*Q(R(v)))+Q(e*Q(R(l)))));N[c+8>>2]=m-f;l=Q(y+Q(Q(k*i)+Q(Q(n*u)+Q(o*j))));i=Q(Q(h*Q(R(i)))+Q(Q(g*Q(R(u)))+Q(e*Q(R(j)))));N[c+4>>2]=l-i;j=Q(z+Q(Q(k*r)+Q(Q(n*s)+Q(o*t))));e=Q(Q(h*Q(R(r)))+Q(Q(g*Q(R(s)))+Q(e*Q(R(t)))));N[c>>2]=j-e;J[d+12>>2]=0;N[d+8>>2]=f+m;N[d+4>>2]=i+l;N[d>>2]=e+j}function gB(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0);if(K[a+1309|0]){c=Q(Q(N[a+1256>>2]-N[a+1316>>2])*N[a+1340>>2]);N[a+792>>2]=c*Q(Q(N[b>>2]*N[a+1364>>2])/Q(J[b+48>>2]));N[a+808>>2]=Q(R(c))/N[b>>2]}if(K[a+1310|0]){c=Q(Q(N[a+1260>>2]-N[a+1320>>2])*N[a+1344>>2]);N[a+796>>2]=c*Q(Q(N[b>>2]*N[a+1368>>2])/Q(J[b+48>>2]));N[a+812>>2]=Q(R(c))/N[b>>2]}if(K[a+1311|0]){c=Q(Q(N[a+1264>>2]-N[a+1324>>2])*N[a+1348>>2]);N[a+800>>2]=c*Q(Q(N[b>>2]*N[a+1372>>2])/Q(J[b+48>>2]));N[a+816>>2]=Q(R(c))/N[b>>2]}if(K[a+1312|0]){c=Q(N[a+1352>>2]*Q(-Q(N[a+1192>>2]-N[a+1328>>2])));d=N[b>>2];N[a+876>>2]=c*Q(Q(d*N[a+1376>>2])/Q(J[b+48>>2]));N[a+880>>2]=Q(R(c))/d}if(K[a+1313|0]){c=Q(N[a+1356>>2]*Q(-Q(N[a+1196>>2]-N[a+1332>>2])));d=N[b>>2];N[a+940>>2]=c*Q(Q(d*N[a+1380>>2])/Q(J[b+48>>2]));N[a+944>>2]=Q(R(c))/d}if(K[a+1314|0]){c=Q(N[a+1360>>2]*Q(-Q(N[a+1200>>2]-N[a+1336>>2])));d=N[b>>2];N[a+1004>>2]=c*Q(Q(d*N[a+1384>>2])/Q(J[b+48>>2]));N[a+1008>>2]=Q(R(c))/d}al(a,b)}function sA(a){a=a|0;var b=0,c=0,d=Q(0),e=0,f=0,g=0,h=0;f=ga+-64|0;ga=f;ya(2686);a:{if(K[a+274|0]){c=J[a+8>>2];if((c|0)<=0){break a}while(1){b=J[J[a+16>>2]+(e<<2)>>2];if(!(!(K[b+236|0]&2)|!b|(!J[b+480>>2]|K[b+204|0]&3))){c=b+68|0;g=b+132|0;h=b+148|0;b:{c:{if(!K[a+300|0]){break c}d=N[a+268>>2];if(d==Q(0)){break c}d=Q(N[a+264>>2]-d);break b}d=Q(N[a+264>>2]*N[b+244>>2])}Rb(c,g,h,d,f);b=J[b+480>>2];ia[J[J[b>>2]+12>>2]](b,f);c=J[a+8>>2]}e=e+1|0;if((c|0)>(e|0)){continue}break}break a}c=J[a+232>>2];if((c|0)<=0){break a}while(1){d:{e:{b=J[J[a+240>>2]+(e<<2)>>2];switch(J[b+216>>2]-2|0){case 0:case 3:break d;default:break e}}if(!J[b+480>>2]|K[b+204|0]&3){break d}c=b+68|0;g=b+132|0;h=b+148|0;f:{g:{if(!K[a+300|0]){break g}d=N[a+268>>2];if(d==Q(0)){break g}d=Q(N[a+264>>2]-d);break f}d=Q(N[a+264>>2]*N[b+244>>2])}Rb(c,g,h,d,f);b=J[b+480>>2];ia[J[J[b>>2]+12>>2]](b,f);c=J[a+232>>2]}e=e+1|0;if((c|0)>(e|0)){continue}break}}xa();ga=f- -64|0}function lA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;if(!(K[b+204|0]&3|H[b+504|0]&1)){ue(b,a+248|0)}if(J[b+192>>2]){a:{if(!(H[b+204|0]&1)){e=J[a+232>>2];b:{if((e|0)!=J[a+236>>2]){break b}j=e?e<<1:1;if((j|0)<=(e|0)){break b}if(j){J[8369]=J[8369]+1;h=ia[J[6782]](j<<2,16)|0;e=J[a+232>>2]}c:{if((e|0)<=0){break c}if(e-1>>>0>=3){k=e&-4;while(1){f=g<<2;J[f+h>>2]=J[f+J[a+240>>2]>>2];i=f|4;J[i+h>>2]=J[i+J[a+240>>2]>>2];i=f|8;J[i+h>>2]=J[i+J[a+240>>2]>>2];f=f|12;J[f+h>>2]=J[f+J[a+240>>2]>>2];g=g+4|0;l=l+4|0;if((k|0)!=(l|0)){continue}break}}f=e&3;if(!f){break c}while(1){k=g<<2;J[k+h>>2]=J[k+J[a+240>>2]>>2];g=g+1|0;m=m+1|0;if((f|0)!=(m|0)){continue}break}}g=J[a+240>>2];if(!(!g|!K[a+244|0])){if(g){J[8370]=J[8370]+1;ia[J[6783]](g)}e=J[a+232>>2]}J[a+240>>2]=h;H[a+244|0]=1;J[a+236>>2]=j}J[J[a+240>>2]+(e<<2)>>2]=b;J[a+232>>2]=e+1;break a}if((J[b+216>>2]&-2)!=4){J[b+216>>2]=2}}ia[J[J[a>>2]+36>>2]](a,b,c,d)}}function uk(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+488>>2];a:{b:{if((c|0)<=0){break b}f=J[a+496>>2];while(1){if(J[f+(d<<2)>>2]!=(b|0)){d=d+1|0;if((d|0)!=(c|0)){continue}break b}break}if((c|0)!=(d|0)){break a}}c:{if(J[a+492>>2]!=(c|0)){break c}h=c?c<<1:1;if((h|0)<=(c|0)){break c}d:{if(!h){f=0;break d}J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;c=J[a+488>>2]}e:{if((c|0)<=0){break e}d=0;if(c-1>>>0>=3){i=c&-4;while(1){e=d<<2;J[e+f>>2]=J[e+J[a+496>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[a+496>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[a+496>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[a+496>>2]>>2];d=d+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=c&3;if(!e){break e}while(1){i=d<<2;J[i+f>>2]=J[i+J[a+496>>2]>>2];d=d+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}d=J[a+496>>2];if(!(!d|!K[a+500|0])){if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}c=J[a+488>>2]}J[a+496>>2]=f;H[a+500|0]=1;J[a+492>>2]=h}J[J[a+496>>2]+(c<<2)>>2]=b;J[a+488>>2]=c+1}J[a+256>>2]=1}function jn(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;h=ga-48|0;ga=h;J[8369]=J[8369]+1;d=ia[J[6782]](64,16)|0;I[d+6>>1]=g;I[d+4>>1]=f;J[d>>2]=e;e=J[b+4>>2];J[d+16>>2]=J[b>>2];J[d+20>>2]=e;e=J[b+12>>2];J[d+24>>2]=J[b+8>>2];J[d+28>>2]=e;e=J[c+4>>2];J[d+32>>2]=J[c>>2];J[d+36>>2]=e;e=J[c+12>>2];J[d+40>>2]=J[c+8>>2];J[d+44>>2]=e;J[d+8>>2]=0;J[d+52>>2]=0;J[d+56>>2]=0;e=J[b+12>>2];J[h+24>>2]=J[b+8>>2];J[h+28>>2]=e;e=J[b+4>>2];J[h+16>>2]=J[b>>2];J[h+20>>2]=e;b=J[c+12>>2];J[h+40>>2]=J[c+8>>2];J[h+44>>2]=b;b=J[c+4>>2];J[h+32>>2]=J[c>>2];J[h+36>>2]=b;J[d+60>>2]=J[a+144>>2];b=J[a+188>>2]+1|0;J[a+188>>2]=b;J[d+12>>2]=b;c=a+4|0;J[d+48>>2]=Db(c,h+16|0,d);b=J[a+144>>2];J[d+52>>2]=0;b=(b<<2)+a|0;J[d+56>>2]=J[b+124>>2];e=J[b+124>>2];if(e){J[e+52>>2]=d}J[b+124>>2]=d;if(!K[a+193|0]){J[h+8>>2]=d;J[h>>2]=5764;J[h+4>>2]=a;b=h+16|0;Vb(c,J[a+4>>2],b,h);a=a- -64|0;Vb(a,J[a>>2],b,h)}ga=h+48|0;return d|0}function re(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0);j=J[a+4>>2];if(j){ub(j,b,c)}a=J[a>>2];if(a){n=N[a+220>>2];o=N[a+212>>2];p=N[a+216>>2];q=N[a+204>>2];r=N[a+196>>2];s=N[a+200>>2];t=N[a+188>>2];u=N[a+184>>2];v=N[a+180>>2];g=N[c+4>>2];h=N[c+8>>2];k=N[c>>2];d=N[b+8>>2];f=N[b+4>>2];i=N[b>>2];e=N[a+128>>2];l=Q(i*e);N[a+244>>2]=l+N[a+244>>2];m=Q(e*f);N[a+248>>2]=m+N[a+248>>2];e=Q(e*d);N[a+252>>2]=e+N[a+252>>2];N[a+316>>2]=l+N[a+316>>2];N[a+320>>2]=m+N[a+320>>2];N[a+324>>2]=e+N[a+324>>2];e=Q(Q(k*f)-Q(i*g));f=Q(Q(g*d)-Q(f*h));d=Q(Q(h*i)-Q(d*k));g=Q(Q(t*e)+Q(Q(v*f)+Q(u*d)));N[a+260>>2]=g+N[a+260>>2];h=Q(Q(q*e)+Q(Q(r*f)+Q(d*s)));N[a+264>>2]=h+N[a+264>>2];d=Q(Q(n*e)+Q(Q(o*f)+Q(d*p)));N[a+268>>2]=d+N[a+268>>2];N[a+332>>2]=g+N[a+332>>2];N[a+336>>2]=h+N[a+336>>2];N[a+340>>2]=d+N[a+340>>2];J[a+308>>2]=J[a+308>>2]+1}}function Rs(a){a=a|0;var b=0,c=Q(0),d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0);j=ga-16|0;ga=j;J[j+12>>2]=a;a=J[j+12>>2];b=J[a+32>>2];c=N[a+652>>2];e=N[a+620>>2];f=N[a+636>>2];l=Q(Q(N[b+44>>2]*c)+Q(Q(N[b+36>>2]*e)+Q(f*N[b+40>>2])));d=J[a+28>>2];m=N[d+44>>2];g=N[a+584>>2];n=N[d+36>>2];h=N[a+552>>2];i=N[a+568>>2];o=N[d+40>>2];u=Q(l*Q(Q(m*g)+Q(Q(n*h)+Q(i*o))));p=Q(Q(N[b+12>>2]*c)+Q(Q(N[b+4>>2]*e)+Q(f*N[b+8>>2])));q=N[d+12>>2];r=N[d+4>>2];s=N[d+8>>2];v=Q(p*Q(Q(q*g)+Q(Q(r*h)+Q(i*s))));t=N[d+28>>2];k=Q(t*g);g=N[d+20>>2];w=Q(g*h);h=N[d+24>>2];k=Q(k+Q(w+Q(i*h)));i=Q(Q(N[b+28>>2]*c)+Q(Q(N[b+20>>2]*e)+Q(f*N[b+24>>2])));c=N[a+588>>2];e=N[a+556>>2];f=N[a+572>>2];c=$a(Q(u+Q(v+Q(k*i))),Q(Q(l*Q(Q(m*c)+Q(Q(n*e)+Q(o*f))))+Q(Q(p*Q(Q(q*c)+Q(Q(r*e)+Q(s*f))))+Q(Q(Q(t*c)+Q(Q(g*e)+Q(h*f)))*i))));ga=j+16|0;return Q(Q(c*N[a+732>>2]))}function QD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0),z=Q(0),A=Q(0),B=Q(0);k=N[b+56>>2];n=N[b+36>>2];o=N[b+40>>2];l=N[b+52>>2];h=N[b+20>>2];f=N[a+112>>2];i=N[a+20>>2];p=N[a+36>>2];g=N[b+24>>2];e=N[a+116>>2];j=N[a+24>>2];q=N[a+40>>2];r=N[b+32>>2];m=N[b+48>>2];s=N[b>>2];t=N[b+4>>2];u=N[b+8>>2];v=N[b+16>>2];w=N[a+108>>2];x=N[a+16>>2];y=N[a+32>>2];z=Q(ia[J[J[a>>2]+48>>2]](a));A=Q(ia[J[J[a>>2]+48>>2]](a));B=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;e=Q(Q(e*Q(q-j))*Q(.5));j=Q(e*Q(R(g)));g=Q(Q(w*Q(y-x))*Q(.5));f=Q(Q(f*Q(p-i))*Q(.5));h=Q(A+Q(j+Q(Q(g*Q(R(v)))+Q(f*Q(R(h))))));N[c+4>>2]=l-h;i=Q(z+Q(Q(e*Q(R(u)))+Q(Q(g*Q(R(s)))+Q(f*Q(R(t))))));N[c>>2]=m-i;e=Q(B+Q(Q(e*Q(R(o)))+Q(Q(g*Q(R(r)))+Q(f*Q(R(n))))));N[c+8>>2]=k-e;J[d+12>>2]=0;N[d+8>>2]=k+e;N[d+4>>2]=l+h;N[d>>2]=m+i}function Dg(a,b,c,d,e,f){var g=0,h=0,i=0;a:{if(K[d+55|0]==(b|0)){break a}g=e<<2;h=J[g+18400>>2];b:{if(Q(Q(Q(N[d+8>>2]*N[c+24>>2])+Q(Q(N[d>>2]*N[c+16>>2])+Q(N[d+4>>2]*N[c+20>>2])))-N[d+16>>2])<Q(-9999999747378752e-21)){b=a;a=d+20|0;a=td(b,J[a+(h<<2)>>2],J[a+g>>2],c,0);if(!a){break a}J[a+32>>2]=d;H[a+52|0]=e;H[(d+e|0)+52|0]=0;J[((e<<2)+d|0)+32>>2]=a;b=J[f>>2];c:{if(b){J[b+36>>2]=a;H[b+53|0]=2;J[a+40>>2]=b;H[a+54|0]=1;break c}J[f+4>>2]=a}J[f>>2]=a;a=f+8|0;break b}H[d+55|0]=b;if(!Dg(a,b,c,J[((h<<2)+d|0)+32>>2],K[(d+h|0)+52|0],f)){break a}e=b;b=J[g+18412>>2];if(!Dg(a,e,c,J[((b<<2)+d|0)+32>>2],K[(b+d|0)+52|0],f)){break a}b=J[d+48>>2];if(b){J[b+44>>2]=J[d+44>>2]}b=J[d+44>>2];if(b){J[b+48>>2]=J[d+48>>2]}if(J[a+9280>>2]==(d|0)){J[a+9280>>2]=J[d+48>>2]}b=a+9284|0;J[b>>2]=J[b>>2]-1;J[d+44>>2]=0;J[d+48>>2]=J[a+9288>>2];b=J[a+9288>>2];if(b){J[b+44>>2]=d}J[a+9288>>2]=d;a=a+9292|0}i=1;J[a>>2]=J[a>>2]+1}return i}function fp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];e=ga-16|0;ga=e;J[e+12>>2]=J[d+12>>2]+788;J[e+8>>2]=a;a=J[e+8>>2];b=ga-112|0;ga=b;J[b+108>>2]=J[e+12>>2];J[b+104>>2]=a;g=J[b+108>>2];a=ga-16|0;J[a+12>>2]=J[b+104>>2];J[b+100>>2]=J[J[a+12>>2]+4>>2];c=J[b+100>>2];qa(b,0,96);gi(b);a=ga-32|0;ga=a;J[a+28>>2]=g;J[a+24>>2]=c;J[a+20>>2]=b;f=ga-16|0;c=J[a+28>>2];J[f+12>>2]=c;J[a+16>>2]=J[J[f+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}f=J[a+24>>2];h=ga-16|0;J[h+12>>2]=c;if(J[J[h+12>>2]+4>>2]<(f|0)){di(c,J[a+24>>2])}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){vf(J[c+12>>2]+P(J[a+8>>2],96)|0,J[a+20>>2]);J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[c+4>>2]=J[a+24>>2];ga=a+32|0;xh(J[b+104>>2],J[b+100>>2],J[g+12>>2]);ga=b+112|0;ga=e+16|0;ga=d+16|0}function Cd(a,b,c,d,e){var f=0,g=Q(0),h=0,i=Q(0),j=0;i=N[c>>2];a:{b:{if(!(i>=N[b>>2])){g=N[c+4>>2];break b}g=N[c+4>>2];if(!(g>=N[b+4>>2])|!(N[b+8>>2]<=N[c+8>>2])|(!(N[b+16>>2]>=N[c+16>>2])|!(N[b+20>>2]>=N[c+20>>2]))){break b}f=0;if(N[b+24>>2]>=N[c+24>>2]){break a}}N[c+4>>2]=g-e;N[c>>2]=i-e;N[c+8>>2]=N[c+8>>2]-e;N[c+16>>2]=N[c+16>>2]+e;N[c+20>>2]=N[c+20>>2]+e;N[c+24>>2]=N[c+24>>2]+e;e=N[d>>2];f=((e>Q(0))<<4)+c|0;N[f>>2]=e+N[f>>2];e=N[d+4>>2];f=(e>Q(0)?20:4)+c|0;N[f>>2]=e+N[f>>2];e=N[d+8>>2];d=(e>Q(0)?24:8)+c|0;N[d>>2]=e+N[d>>2];d=Ed(a,b);c:{if(!d){d=0;break c}h=J[a+8>>2];if((h|0)>=0){if(!h){break c}while(1){f=J[d+32>>2];if(!f){break c}d=f;j=j+1|0;if((h|0)!=(j|0)){continue}break}break c}d=J[a>>2]}f=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=f;f=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=f;f=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=f;f=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=f;Dd(a,d,b);f=1}return f}function Gh(a,b){var c=0,d=0,e=0,f=0,g=0,h=0;c=ga-176|0;ga=c;J[c+172>>2]=a;J[c+168>>2]=b;d=c+136|0;a=J[c+172>>2];va(d,a+16|0,a);N[c+132>>2]=.5;b=c+152|0;Ia(b,d,c+132|0);e=c+112|0;Ma(e,a+16|0,b);wb(c+96|0,J[c+168>>2],b);d=J[c+100>>2];J[b>>2]=J[c+96>>2];J[b+4>>2]=d;d=J[c+108>>2];J[b+8>>2]=J[c+104>>2];J[b+12>>2]=d;d=ga-16|0;J[d+12>>2]=J[c+168>>2];J[d+12>>2]=J[d+12>>2];J[d+8>>2]=0;h=c- -64|0;jf(h,J[d+12>>2]+(J[d+8>>2]<<4)|0);f=ga-16|0;J[f+12>>2]=J[c+168>>2];d=ga-16|0;J[d+12>>2]=J[f+12>>2];J[d+8>>2]=1;f=c+48|0;jf(f,J[d+12>>2]+(J[d+8>>2]<<4)|0);g=ga-16|0;J[g+12>>2]=J[c+168>>2];d=ga-16|0;J[d+12>>2]=J[g+12>>2];J[d+8>>2]=2;g=c+32|0;jf(g,J[d+12>>2]+(J[d+8>>2]<<4)|0);d=c+80|0;Vd(d,e,h,f,g);Ma(c+16|0,b,d);e=J[c+20>>2];J[a>>2]=J[c+16>>2];J[a+4>>2]=e;e=J[c+28>>2];J[a+8>>2]=J[c+24>>2];J[a+12>>2]=e;va(c,b,d);b=J[c+4>>2];J[a+16>>2]=J[c>>2];J[a+20>>2]=b;b=J[c+12>>2];J[a+24>>2]=J[c+8>>2];J[a+28>>2]=b;ga=c+176|0}function XB(a){a=a|0;var b=0,c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=0;J[a+16>>2]=2139095039;J[a+20>>2]=2139095039;J[a+40>>2]=-8388609;h=a+32|0;J[h>>2]=-8388609;J[h+4>>2]=-8388609;J[a+24>>2]=2139095039;d=J[a+152>>2];if(d){n=a+16|0;m=J[a+160>>2];i=Q(3.4028234663852886e38);j=Q(-3.4028234663852886e38);k=Q(-3.4028234663852886e38);e=Q(-3.4028234663852886e38);l=Q(3.4028234663852886e38);f=Q(3.4028234663852886e38);while(1){d=d-1|0;c=d<<2;b=J[c+m>>2];if(K[b+48|0]){ia[J[J[b>>2]+68>>2]](b);H[b+48|0]=0;j=N[a+40>>2];k=N[a+36>>2];e=N[a+32>>2];i=N[a+24>>2];l=N[a+20>>2];f=N[a+16>>2];m=J[a+160>>2];b=J[c+m>>2]}g=N[b+16>>2];f=f>g?g:f;N[a+16>>2]=f;c=b+16|0;l=N[(N[b+20>>2]<l?c:n)+4>>2];N[a+20>>2]=l;i=N[(N[b+24>>2]<i?c:n)+8>>2];N[a+24>>2]=i;c=b+32|0;g=N[c>>2];e=e<g?g:e;N[a+32>>2]=e;k=N[(N[b+36>>2]>k?c:h)+4>>2];N[a+36>>2]=k;j=N[(N[b+40>>2]>j?c:h)+8>>2];N[a+40>>2]=j;if(d){continue}break}}}function ec(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0;J[8369]=J[8369]+1;e=ia[J[6782]](36,16)|0;J[e+28>>2]=-1;J[e+32>>2]=0;J[e+20>>2]=-1;J[e+12>>2]=-1;J[e+16>>2]=-1;J[e+8>>2]=d;J[e+4>>2]=c;J[e>>2]=b;d=J[a+4>>2];J[e+24>>2]=d;a:{if(J[a+8>>2]!=(d|0)){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}b:{if(!h){c=0;break b}J[8369]=J[8369]+1;c=ia[J[6782]](h<<2,16)|0;d=J[a+4>>2]}c:{if((d|0)<=0){break c}b=0;if(d-1>>>0>=3){i=d&-4;while(1){f=b<<2;J[f+c>>2]=J[f+J[a+12>>2]>>2];g=f|4;J[g+c>>2]=J[g+J[a+12>>2]>>2];g=f|8;J[g+c>>2]=J[g+J[a+12>>2]>>2];f=f|12;J[f+c>>2]=J[f+J[a+12>>2]>>2];b=b+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}f=d&3;if(!f){break c}while(1){i=b<<2;J[i+c>>2]=J[i+J[a+12>>2]>>2];b=b+1|0;k=k+1|0;if((f|0)!=(k|0)){continue}break}}b=J[a+12>>2];if(!(!b|!K[a+16|0])){if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}d=J[a+4>>2]}J[a+12>>2]=c;H[a+16|0]=1;J[a+8>>2]=h}J[J[a+12>>2]+(d<<2)>>2]=e;J[a+4>>2]=d+1;return e}function Pa(a,b){var c=0,d=0,e=0,f=0,g=0,h=0;a:{g=(D(b),x(2));c=g<<1;if(!(!c|(g&2147483647)>>>0>2139095040)){h=(D(a),x(2));e=h>>>23&255;if((e|0)!=255){break a}}a=Q(a*b);return Q(a/a)}d=h<<1;if(d>>>0<=c>>>0){return(c|0)==(d|0)?Q(a*Q(0)):a}c=g>>>23&255;b:{if(!e){e=0;d=h<<9;if((d|0)>=0){while(1){e=e-1|0;d=d<<1;if((d|0)>=0){continue}break}}d=h<<1-e;break b}d=h&8388607|8388608}c:{if(!c){c=0;f=g<<9;if((f|0)>=0){while(1){c=c-1|0;f=f<<1;if((f|0)>=0){continue}break}}g=g<<1-c;break c}g=g&8388607|8388608}if((c|0)<(e|0)){while(1){d:{f=d-g|0;if((f|0)<0){f=d;break d}if((d|0)!=(g|0)){break d}return Q(a*Q(0))}d=f<<1;e=e-1|0;if((e|0)>(c|0)){continue}break}e=c}e:{c=d-g|0;if((c|0)<0){c=d;break e}if((d|0)!=(g|0)){break e}return Q(a*Q(0))}f:{if(c>>>0>8388607){f=c;break f}while(1){e=e-1|0;d=c>>>0<4194304;f=c<<1;c=f;if(d){continue}break}}d=h&-2147483648;return z(2,d|((e|0)>0?f-8388608|e<<23:f>>>1-e|0)),E()}function MC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=0,g=Q(0),h=Q(0),i=Q(0);d=ga-144|0;ga=d;J[d+52>>2]=0;J[d+56>>2]=0;f=d- -64|0;J[f>>2]=0;J[f+4>>2]=0;J[d+72>>2]=0;J[d+76>>2]=0;J[d+84>>2]=0;J[d+88>>2]=0;J[d+80>>2]=1065353216;J[d+92>>2]=0;J[d+96>>2]=0;J[d+104>>2]=0;J[d+108>>2]=0;J[d+100>>2]=1065353216;J[d+112>>2]=0;J[d+116>>2]=0;J[d+120>>2]=0;J[d+124>>2]=-581039253;J[d+44>>2]=0;J[d+48>>2]=0;J[d+60>>2]=1065353216;J[d+40>>2]=17132;e=N[c+8>>2];g=N[c>>2];h=N[c+4>>2];J[d+140>>2]=0;i=Q(h*Q(0));N[d+136>>2]=e+Q(Q(g*N[d+68>>2])+i);e=Q(e*Q(0));N[d+132>>2]=e+Q(h+Q(g*N[f>>2]));N[d+128>>2]=e+Q(g+i);J[d+32>>2]=1566444395;J[d+36>>2]=0;J[d+24>>2]=1566444395;J[d+28>>2]=1566444395;J[d+16>>2]=-581039253;J[d+20>>2]=0;J[d+8>>2]=-581039253;J[d+12>>2]=-581039253;ia[J[J[b>>2]+64>>2]](b,d+40|0,d+8|0,d+24|0);b=J[d+56>>2];J[a+8>>2]=J[d+52>>2];J[a+12>>2]=b;b=J[d+48>>2];J[a>>2]=J[d+44>>2];J[a+4>>2]=b;ga=d+144|0}function hx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];e=ga-16|0;ga=e;J[e+12>>2]=J[d+12>>2]+112;J[e+8>>2]=a;a=J[e+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=J[e+12>>2];J[b+8>>2]=a;g=J[b+12>>2];a=ga-16|0;J[a+12>>2]=J[b+8>>2];J[b+4>>2]=J[J[a+12>>2]+4>>2];c=J[b+4>>2];N[b>>2]=0;a=ga-32|0;ga=a;J[a+28>>2]=g;J[a+24>>2]=c;J[a+20>>2]=b;f=ga-16|0;c=J[a+28>>2];J[f+12>>2]=c;J[a+16>>2]=J[J[f+12>>2]+4>>2];a:{if(J[a+24>>2]<J[a+16>>2]){J[a+12>>2]=J[a+24>>2];while(1){if(J[a+12>>2]<J[a+16>>2]){J[a+12>>2]=J[a+12>>2]+1;continue}break}break a}f=J[a+24>>2];h=ga-16|0;J[h+12>>2]=c;if(J[J[h+12>>2]+4>>2]<(f|0)){Rh(c,J[a+24>>2])}J[a+8>>2]=J[a+16>>2];while(1){if(J[a+8>>2]<J[a+24>>2]){N[J[c+12>>2]+(J[a+8>>2]<<2)>>2]=N[J[a+20>>2]>>2];J[a+8>>2]=J[a+8>>2]+1;continue}break}}J[c+4>>2]=J[a+24>>2];ga=a+32|0;Nh(J[b+8>>2],J[b+4>>2],J[g+12>>2]);ga=b+16|0;ga=e+16|0;ga=d+16|0}function Zx(a,b,c,d){a=a|0;b=Q(b);c=Q(c);d=Q(d);var e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;N[e+4>>2]=c;N[e>>2]=d;a=ga-80|0;ga=a;J[a+76>>2]=J[e+12>>2];J[a+72>>2]=e+8;J[a+68>>2]=e+4;J[a+64>>2]=e;f=J[a+76>>2];N[a+60>>2]=N[J[a+72>>2]>>2]*Q(.5);N[a+56>>2]=N[J[a+68>>2]>>2]*Q(.5);N[a+52>>2]=N[J[a+64>>2]>>2]*Q(.5);N[a+48>>2]=Ta(N[a+60>>2]);N[a+44>>2]=Sa(N[a+60>>2]);N[a+40>>2]=Ta(N[a+56>>2]);N[a+36>>2]=Sa(N[a+56>>2]);N[a+32>>2]=Ta(N[a+52>>2]);N[a+28>>2]=Sa(N[a+52>>2]);N[a+24>>2]=Q(Q(N[a+28>>2]*N[a+40>>2])*N[a+48>>2])+Q(-Q(Q(N[a+32>>2]*N[a+36>>2])*N[a+44>>2]));N[a+20>>2]=Q(Q(N[a+32>>2]*N[a+36>>2])*N[a+48>>2])+Q(Q(N[a+28>>2]*N[a+40>>2])*N[a+44>>2]);N[a+16>>2]=Q(Q(N[a+32>>2]*N[a+40>>2])*N[a+44>>2])+Q(-Q(Q(N[a+28>>2]*N[a+36>>2])*N[a+48>>2]));N[a+12>>2]=Q(Q(N[a+32>>2]*N[a+40>>2])*N[a+48>>2])+Q(Q(N[a+28>>2]*N[a+36>>2])*N[a+44>>2]);xc(f,a+24|0,a+20|0,a+16|0,a+12|0);ga=a+80|0;ga=e+16|0}function nE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0);d=ga-32|0;ga=d;h=J[c+12>>2];J[d+24>>2]=J[c+8>>2];J[d+28>>2]=h;h=J[c+4>>2];J[d+16>>2]=J[c>>2];J[d+20>>2]=h;e=N[d+24>>2];f=N[d+16>>2];g=N[d+20>>2];if(Q(Q(e*e)+Q(Q(f*f)+Q(g*g)))<Q(1.4210854715202004e-14)){J[d+28>>2]=0;g=Q(-1);f=Q(-1);e=Q(-1)}i=e;e=Q(Q(1)/Q(Y(Q(Q(e*e)+Q(Q(f*f)+Q(g*g))))));N[d+24>>2]=i*e;N[d+20>>2]=g*e;N[d+16>>2]=f*e;Ue(d,b,d+16|0);a:{b:{switch(J[b+4>>2]){case 8:e=Q(N[b+28>>2]*N[b+12>>2]);break a;case 0:e=N[b+44>>2];break a;case 1:e=N[b+44>>2];break a;case 13:e=N[b+44>>2];break a;case 11:e=N[b+44>>2];break a;case 10:e=N[b+44>>2];break a;case 4:case 5:e=N[b+44>>2];break a;default:break b}}e=Q(ia[J[J[b>>2]+48>>2]](b))}f=N[d>>2];g=N[d+16>>2];i=N[d+4>>2];j=N[d+20>>2];k=N[d+8>>2];l=N[d+24>>2];J[a+12>>2]=0;N[a+8>>2]=k+Q(e*l);N[a+4>>2]=i+Q(e*j);N[a>>2]=f+Q(e*g);ga=d+32|0}function Tg(a,b){var c=Q(0),d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);J[a+4>>2]=35;J[a+8>>2]=0;J[a>>2]=14268;J[a+44>>2]=1025758986;J[a+20>>2]=1065353216;J[a+24>>2]=0;J[a+12>>2]=1065353216;J[a+16>>2]=1065353216;J[a>>2]=13984;J[a+52>>2]=1;J[a>>2]=14632;d=N[b>>2];c=N[b+4>>2];e=d<c;c=Q(N[((N[b+8>>2]>(e?d:c)?!e:2)<<2)+b>>2]*Q(.10000000149011612));d=N[a+44>>2];if(c<d){e=ga-16|0;J[e+12>>2]=a;f=N[J[e+12>>2]+44>>2];N[a+44>>2]=c;c=N[a+36>>2];g=N[a+32>>2];h=N[a+28>>2];i=Q(ia[J[J[a>>2]+48>>2]](a));j=Q(ia[J[J[a>>2]+48>>2]](a));k=Q(ia[J[J[a>>2]+48>>2]](a));J[a+40>>2]=0;N[a+32>>2]=Q(d+g)-j;N[a+28>>2]=Q(d+h)-i;N[a+36>>2]=Q(f+c)-k;e=J[a>>2]}else{e=14632}d=Q(ia[J[e+48>>2]](a));c=Q(ia[J[J[a>>2]+48>>2]](a));f=Q(ia[J[J[a>>2]+48>>2]](a));g=N[b>>2];h=N[b+4>>2];i=N[b+8>>2];J[a+40>>2]=0;J[a+4>>2]=13;N[a+36>>2]=Q(i*N[a+20>>2])-f;N[a+32>>2]=Q(h*N[a+16>>2])-c;N[a+28>>2]=Q(g*N[a+12>>2])-d}function Kv(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;N[e+4>>2]=c;b=J[e+8>>2];c=N[e+4>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[e+12>>2];J[a+8>>2]=b;N[a+4>>2]=c;b=J[a+12>>2];d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=Q(N[J[d+12>>2]>>2]-N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=Q(N[J[d+12>>2]+4>>2]-N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]+4>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=Q(N[J[d+12>>2]+8>>2]-N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]+8>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2]+16;c=Q(N[J[d+12>>2]>>2]+N[a+4>>2]);d=ga-16|0;b=b+16|0;J[d+12>>2]=b;N[J[d+12>>2]>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2]+16;c=Q(N[J[d+12>>2]+4>>2]+N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]+4>>2]=c;d=ga-16|0;J[d+12>>2]=J[a+8>>2]+16;c=Q(N[J[d+12>>2]+8>>2]+N[a+4>>2]);d=ga-16|0;J[d+12>>2]=b;N[J[d+12>>2]+8>>2]=c;ga=a+16|0;ga=e+16|0}function $a(a,b){var c=0,d=0,e=0,f=Q(0),g=0;if(!(((D(a),x(2))&2147483647)>>>0<2139095041&((D(b),x(2))&2147483647)>>>0<=2139095040)){return Q(a+b)}c=(D(b),x(2));if((c|0)==1065353216){return Oj(a)}g=c>>>30&2;d=(D(a),x(2));e=g|d>>>31;a:{b:{d=d&2147483647;c:{if(!d){d:{switch(e-2|0){case 0:return Q(3.1415927410125732);case 1:break d;default:break c}}return Q(-3.1415927410125732)}c=c&2147483647;if((c|0)!=2139095040){if(!c|!((d|0)!=2139095040&d>>>0<=c+218103808>>>0)){break a}e:{if(g){f=Q(0);if(c>>>0>d+218103808>>>0){break e}}f=Oj(Q(R(Q(a/b))))}a=f;f:{switch(e|0){case 1:return Q(-a);case 2:return Q(Q(3.1415927410125732)-Q(a+Q(8.742277657347586e-8)));case 0:break c;default:break f}}return Q(Q(a+Q(8.742277657347586e-8))+Q(-3.1415927410125732))}if((d|0)==2139095040){break b}a=N[(e<<2)+23244>>2]}return a}return N[(e<<2)+23228>>2]}return z(2,(D(a),x(2))&-2147483648|1070141403),E()}function BC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=ga-128|0;ga=e;i=Bb(e+24|0);J[e+28>>2]=1;f=J[b+12>>2];J[e+88>>2]=J[b+8>>2];J[e+92>>2]=f;f=J[b+4>>2];J[e+80>>2]=J[b>>2];J[e+84>>2]=f;f=J[b+20>>2];J[e+96>>2]=J[b+16>>2];J[e+100>>2]=f;f=J[b+28>>2];J[e+104>>2]=J[b+24>>2];J[e+108>>2]=f;f=J[b+44>>2];J[e+120>>2]=J[b+40>>2];J[e+124>>2]=f;f=J[b+36>>2];J[e+112>>2]=J[b+32>>2];J[e+116>>2]=f;J[e+24>>2]=1976;N[e+68>>2]=N[a+24>>2];b=J[a+4>>2];g=K[a+20|0];a:{if(g){J[b+28>>2]=c;f=b+24|0;break a}J[b+36>>2]=c;f=b+32|0}J[f>>2]=d;f=J[a+12>>2];h=J[f+8>>2];j=J[f+12>>2];J[e+20>>2]=d;J[e+16>>2]=c;J[e+12>>2]=j;J[e+8>>2]=h;J[e>>2]=f;J[e+4>>2]=e+24;c=J[b+16>>2];d=J[c+8>>2];b:{if(J[d+8>>2]==(h|0)){c=c+8|0;break b}d=J[c+12>>2];c=c+12|0}J[c>>2]=e;ud(b,J[a+8>>2],e,J[a+16>>2],e+24|0,(g|0)!=0);a=J[J[a+4>>2]+16>>2];J[(J[J[a+8>>2]+8>>2]==J[e+8>>2]?8:12)+a>>2]=d;Qa(i);ga=e+128|0}function NE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=0,k=0;e=Q(N[b+60>>2]*Q(.5));j=J[b+64>>2];k=J[b+68>>2];g=k<<2;d=N[c+8>>2];i=Q(d*d);d=N[c>>2];f=Q(d*d);d=N[c+4>>2];a:{b:{if(N[g+c>>2]>Q(N[b+52>>2]*Q(Y(Q(i+Q(f+Q(d*d))))))){J[(j<<2)+a>>2]=0;N[a+g>>2]=e;g=J[b+72>>2];break b}d=N[(j<<2)+c>>2];g=J[b+72>>2];f=N[(g<<2)+c>>2];h=Q(Y(Q(Q(d*d)+Q(f*f))));if(h>Q(1.1920928955078125e-7)){i=d;d=Q(N[b+56>>2]/h);N[(j<<2)+a>>2]=i*d;N[(k<<2)+a>>2]=-e;e=Q(f*d);break a}J[(j<<2)+a>>2]=0;N[(k<<2)+a>>2]=-e}e=Q(0)}N[(g<<2)+a>>2]=e;if(Q(ia[J[J[b>>2]+48>>2]](b))!=Q(0)){e=N[c+4>>2];d=N[c>>2];f=N[c+8>>2];h=Q(ia[J[J[b>>2]+48>>2]](b));b=Q(Q(f*f)+Q(Q(d*d)+Q(e*e)))<Q(1.4210854715202004e-14);d=b?Q(-1):d;i=d;f=b?Q(-1):f;e=b?Q(-1):e;d=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(d*d)+Q(e*e))))));N[a>>2]=N[a>>2]+Q(h*Q(i*d));N[a+4>>2]=N[a+4>>2]+Q(h*Q(e*d));N[a+8>>2]=N[a+8>>2]+Q(h*Q(f*d))}}function jF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0),v=Q(0),w=Q(0),x=Q(0),y=Q(0);e=ga-16|0;ga=e;m=a+28|0;h=J[a+52>>2];g=N[m+((h+2|0)%3<<2)>>2];N[e+8>>2]=g;N[e+4>>2]=g;N[e>>2]=g;h=h<<2;N[h+e>>2]=g+N[h+m>>2];i=Q(ia[J[J[a>>2]+48>>2]](a));j=Q(ia[J[J[a>>2]+48>>2]](a));f=Q(ia[J[J[a>>2]+48>>2]](a));g=N[b+52>>2];k=N[b+20>>2];p=N[b+24>>2];n=N[b+56>>2];l=N[b+36>>2];q=N[b+40>>2];o=N[b+48>>2];r=N[b+8>>2];s=N[b>>2];t=N[b+4>>2];u=N[b+16>>2];v=N[b+32>>2];w=N[e>>2];x=N[e+4>>2];y=N[e+8>>2];J[c+12>>2]=0;f=Q(f+y);i=Q(i+w);j=Q(j+x);l=Q(Q(f*Q(R(q)))+Q(Q(i*Q(R(v)))+Q(j*Q(R(l)))));N[c+8>>2]=n-l;k=Q(Q(f*Q(R(p)))+Q(Q(i*Q(R(u)))+Q(j*Q(R(k)))));N[c+4>>2]=g-k;f=Q(Q(f*Q(R(r)))+Q(Q(i*Q(R(s)))+Q(j*Q(R(t)))));N[c>>2]=o-f;J[d+12>>2]=0;N[d+8>>2]=n+l;N[d+4>>2]=k+g;N[d>>2]=f+o;ga=e+16|0}function Tz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);e=Q(1);d=J[b>>2];if(!((d|0)==J[a+80>>2]|K[d+204|0]&4|Q(-N[a+84>>2])<=Q(Q(N[b+16>>2]*Q(N[a+36>>2]-N[a+20>>2]))+Q(Q(N[b+8>>2]*Q(N[a+28>>2]-N[a+12>>2]))+Q(Q(N[a+32>>2]-N[a+16>>2])*N[b+12>>2]))))){e=N[b+40>>2];J[a+76>>2]=d;N[a+4>>2]=e;a:{if(c){c=b+8|0;d=J[c+4>>2];J[a+44>>2]=J[c>>2];J[a+48>>2]=d;d=J[c+12>>2];J[a+52>>2]=J[c+8>>2];J[a+56>>2]=d;break a}h=N[d+12>>2];i=N[d+8>>2];j=N[d+28>>2];k=N[d+20>>2];l=N[d+24>>2];m=N[d+44>>2];n=N[d+36>>2];o=N[d+40>>2];p=N[d+4>>2];e=N[b+16>>2];f=N[b+8>>2];g=N[b+12>>2];J[a+56>>2]=0;N[a+52>>2]=Q(m*e)+Q(Q(n*f)+Q(g*o));N[a+48>>2]=Q(j*e)+Q(Q(k*f)+Q(g*l));N[a+44>>2]=Q(h*e)+Q(Q(p*f)+Q(i*g))}c=J[b+28>>2];J[a+60>>2]=J[b+24>>2];J[a+64>>2]=c;c=J[b+36>>2];J[a+68>>2]=J[b+32>>2];J[a+72>>2]=c;e=N[b+40>>2]}return Q(e)}function vB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[b+4>>2];J[a+300>>2]=J[b>>2];J[a+304>>2]=d;d=J[b+12>>2];J[a+308>>2]=J[b+8>>2];J[a+312>>2]=d;d=J[b+28>>2];J[a+324>>2]=J[b+24>>2];J[a+328>>2]=d;d=J[b+20>>2];J[a+316>>2]=J[b+16>>2];J[a+320>>2]=d;d=J[b+44>>2];J[a+340>>2]=J[b+40>>2];J[a+344>>2]=d;d=J[b+36>>2];J[a+332>>2]=J[b+32>>2];J[a+336>>2]=d;d=J[b+60>>2];J[a+356>>2]=J[b+56>>2];J[a+360>>2]=d;d=J[b+52>>2];J[a+348>>2]=J[b+48>>2];J[a+352>>2]=d;b=J[c+12>>2];J[a+372>>2]=J[c+8>>2];J[a+376>>2]=b;b=J[c+4>>2];J[a+364>>2]=J[c>>2];J[a+368>>2]=b;b=J[c+20>>2];J[a+380>>2]=J[c+16>>2];J[a+384>>2]=b;b=J[c+28>>2];J[a+388>>2]=J[c+24>>2];J[a+392>>2]=b;b=J[c+36>>2];J[a+396>>2]=J[c+32>>2];J[a+400>>2]=b;b=J[c+44>>2];J[a+404>>2]=J[c+40>>2];J[a+408>>2]=b;b=J[c+60>>2];J[a+420>>2]=J[c+56>>2];J[a+424>>2]=b;b=J[c+52>>2];J[a+412>>2]=J[c+48>>2];J[a+416>>2]=b;ia[J[J[a>>2]+8>>2]](a)}function Lb(a,b,c){var d=0,e=Q(0),f=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;b=J[d+28>>2];a:{if(J[b+44>>2]==1){J[d+16>>2]=J[b+36>>2]+P(J[d+24>>2],J[b+48>>2]);f=O[J[d+16>>2]>>3];a=ga-16|0;b=b+12|0;J[a+12>>2]=b;e=Q(f*+N[J[a+12>>2]>>2]);J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]>>2]=e;f=O[J[d+16>>2]+8>>3];J[a+12>>2]=b;e=Q(f*+N[J[a+12>>2]+4>>2]);J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]+4>>2]=e;f=O[J[d+16>>2]+16>>3];J[a+12>>2]=b;e=Q(f*+N[J[a+12>>2]+8>>2]);break a}J[d+12>>2]=J[b+36>>2]+P(J[d+24>>2],J[b+48>>2]);e=N[J[d+12>>2]>>2];a=ga-16|0;b=b+12|0;J[a+12>>2]=b;e=Q(e*N[J[a+12>>2]>>2]);J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]>>2]=e;e=N[J[d+12>>2]+4>>2];J[a+12>>2]=b;e=Q(e*N[J[a+12>>2]+4>>2]);J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]+4>>2]=e;e=N[J[d+12>>2]+8>>2];J[a+12>>2]=b;e=Q(e*N[J[a+12>>2]+8>>2])}a=ga-16|0;J[a+12>>2]=J[d+20>>2];N[J[a+12>>2]+8>>2]=e;ga=d+32|0}function Iv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;f=ga-16|0;ga=f;J[f+12>>2]=a;J[f+8>>2]=b;J[f+4>>2]=c;g=ra(104);a=J[f+12>>2];b=J[f+8>>2];d=J[f+4>>2];c=ga-16|0;ga=c;J[c+12>>2]=g;J[c+8>>2]=a;J[c+4>>2]=b;J[c>>2]=d;a=J[c+8>>2];d=J[c+4>>2];e=J[c>>2];b=ga-32|0;ga=b;h=J[c+12>>2];J[b+24>>2]=h;J[b+20>>2]=a;J[b+16>>2]=d;J[b+12>>2]=e;a=J[b+24>>2];J[b+28>>2]=a;Bb(a);J[a>>2]=2176;d=a+56|0;e=d+48|0;while(1){J[(ga-16|0)+12>>2]=d;d=d+16|0;if((e|0)!=(d|0)){continue}break}J[a+4>>2]=1;d=J[b+20>>2];e=J[d+4>>2];J[a+56>>2]=J[d>>2];J[a+60>>2]=e;e=J[d+12>>2];J[a+64>>2]=J[d+8>>2];J[a+68>>2]=e;d=J[b+16>>2];e=J[d+4>>2];J[a+72>>2]=J[d>>2];J[a+76>>2]=e;e=J[d+12>>2];J[a+80>>2]=J[d+8>>2];J[a+84>>2]=e;d=J[b+12>>2];e=J[d+4>>2];J[a+88>>2]=J[d>>2];J[a+92>>2]=e;e=J[d+12>>2];J[a+96>>2]=J[d+8>>2];J[a+100>>2]=e;ga=b+32|0;J[h>>2]=1976;ga=c+16|0;ga=f+16|0;return g|0}function zz(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0);e=J[a+8>>2];if(e){kb(e,0)}e=J[a+12>>2];if(e){kb(e,0)}e=J[a+20>>2];if(e){kb(e,0)}e=J[a+24>>2];if(e){kb(e,0)}e=J[a+156>>2];J[a+156>>2]=e+1;H[a+152|0]=(e|0)>=J[a+160>>2];if(!e){J[a+84>>2]=0;f=Q(Q(1)/b);d=N[a+64>>2];b=Q(f*Q(N[a+72>>2]*d));g=Q(f*Q(d*N[a+80>>2]));f=Q(f*Q(d*N[a+76>>2]));d=N[a+68>>2];if(d>Q(0)){J[a+100>>2]=0;h=Q(d*g);i=Q(d*b);j=Q(d*f);N[a+96>>2]=Q(N[a+144>>2]*h)+Q(Q(N[a+136>>2]*i)+Q(j*N[a+140>>2]));N[a+92>>2]=Q(N[a+128>>2]*h)+Q(Q(N[a+120>>2]*i)+Q(j*N[a+124>>2]));N[a+88>>2]=Q(N[a+112>>2]*h)+Q(Q(N[a+104>>2]*i)+Q(j*N[a+108>>2]));d=Q(Q(1)-d);g=Q(d*g);f=Q(d*f);b=Q(d*b)}d=Q(Q(1)/Q(c|0));N[a+80>>2]=d*g;N[a+76>>2]=d*f;N[a+72>>2]=d*b;return}J[a+72>>2]=0;J[a+76>>2]=0;J[a+96>>2]=0;J[a+100>>2]=0;J[a+88>>2]=0;J[a+92>>2]=0;J[a+80>>2]=0;J[a+84>>2]=0}function yC(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=0,n=0,o=0;ia[J[J[a>>2]+112>>2]](a);J[c+8>>2]=0;J[c+12>>2]=0;J[c>>2]=0;J[c+4>>2]=0;f=J[a+184>>2];a:{if(!f){break a}e=f-1|0;b=Q(b/Q(f|0));m=J[a+192>>2];n=J[a+180>>2];if(J[a+188>>2]==1){while(1){f=e;e=P(f,m)+n|0;o=O[e+16>>3];d=N[a+164>>2];h=Q(O[e>>3]*+N[a+156>>2]);h=Q(h*h);g=Q(O[e+8>>3]*+N[a+160>>2]);g=Q(g*g);i=Q(Q(b*Q(h+g))+i);N[c+8>>2]=i;d=Q(o*+d);d=Q(d*d);j=Q(Q(b*Q(h+d))+j);N[c+4>>2]=j;k=Q(k+Q(b*Q(g+d)));N[c>>2]=k;e=f-1|0;if(f){continue}break}break a}while(1){f=e;e=P(f,m)+n|0;d=N[e+8>>2];h=N[a+164>>2];g=Q(N[e>>2]*N[a+156>>2]);g=Q(g*g);l=Q(N[e+4>>2]*N[a+160>>2]);l=Q(l*l);i=Q(Q(b*Q(g+l))+i);N[c+8>>2]=i;d=Q(d*h);d=Q(d*d);j=Q(Q(b*Q(g+d))+j);N[c+4>>2]=j;k=Q(k+Q(b*Q(l+d)));N[c>>2]=k;e=f-1|0;if(f){continue}break}}ia[J[J[a>>2]+116>>2]](a)}function ny(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;f=ga+-64|0;ga=f;d=1;a:{if(Ya(a,b,0)){break a}d=0;if(!b){break a}d=ga+-64|0;ga=d;e=J[b>>2];g=J[e-4>>2];h=J[e-8>>2];J[d+20>>2]=0;J[d+16>>2]=26804;J[d+12>>2]=b;J[d+8>>2]=26852;e=0;qa(d+24|0,0,39);b=b+h|0;b:{if(Ya(g,26852,0)){J[d+56>>2]=1;ia[J[J[g>>2]+20>>2]](g,d+8|0,b,b,1,0);e=J[d+32>>2]==1?b:0;break b}ia[J[J[g>>2]+24>>2]](g,d+8|0,b,1,0);c:{switch(J[d+44>>2]){case 0:e=J[d+48>>2]==1?J[d+36>>2]==1?J[d+40>>2]==1?J[d+28>>2]:0:0:0;break b;case 1:break c;default:break b}}if(J[d+32>>2]!=1){if(J[d+48>>2]|J[d+36>>2]!=1|J[d+40>>2]!=1){break b}}e=J[d+24>>2]}ga=d- -64|0;d=0;if(!e){break a}b=f+8|0;qa(b|4,0,52);J[f+56>>2]=1;J[f+20>>2]=-1;J[f+16>>2]=a;J[f+8>>2]=e;ia[J[J[e>>2]+28>>2]](e,b,J[c>>2],1);a=J[f+32>>2];if((a|0)==1){J[c>>2]=J[f+24>>2]}d=(a|0)==1}ga=f- -64|0;return d|0}function Gz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0);e=ga-96|0;ga=e;J[e+20>>2]=-65535;J[e+24>>2]=0;J[e+12>>2]=1065353216;J[e+16>>2]=0;J[e+8>>2]=1416;f=J[b+12>>2];J[e+36>>2]=J[b+8>>2];J[e+40>>2]=f;f=J[b+4>>2];J[e+28>>2]=J[b>>2];J[e+32>>2]=f;f=J[c+12>>2];J[e+52>>2]=J[c+8>>2];J[e+56>>2]=f;f=J[c+4>>2];J[e+44>>2]=J[c>>2];J[e+48>>2]=f;a=J[a+4>>2];ia[J[J[a>>2]+32>>2]](a,b,c,e+8|0);c=0;a=J[e+16>>2];if(!(!a|!(K[a+236|0]&2)|K[a+204|0]&4)){b=J[e+80>>2];J[d>>2]=J[e+76>>2];J[d+4>>2]=b;b=J[e+88>>2];J[d+8>>2]=J[e+84>>2];J[d+12>>2]=b;b=J[e+64>>2];J[d+16>>2]=J[e+60>>2];J[d+20>>2]=b;b=J[e+72>>2];J[d+24>>2]=J[e+68>>2];J[d+28>>2]=b;g=N[d+24>>2];h=N[d+16>>2];i=N[d+20>>2];j=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(h*h)+Q(i*i))))));N[d+16>>2]=h*j;N[d+24>>2]=g*j;N[d+20>>2]=i*j;N[d+32>>2]=N[e+12>>2];c=a}ga=e+96|0;return c|0}function ef(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;a:{f=J[((b<<2)+a|0)+68>>2];h=c<<2;g=f+h|0;e=L[g+6>>1];if(!e){break a}c=g+4|0;j=b<<1;h=j+(J[a+60>>2]+(L[(f+h|0)+2>>1]<<6)|0)|0;k=1<<b&3;m=1<<k&3;while(1){f=L[c>>1];if(f>>>0>L[g>>1]){break a}b=J[a+60>>2];b:{if(f&1){f=b+(L[g+2>>1]<<6)|0;i=k<<1;l=f+i|0;b=b+(e<<6)|0;e=b+i|0;c:{if(L[l+54>>1]<L[e+48>>1]|L[e+54>>1]<L[l+48>>1]){break c}e=m<<1;i=e+f|0;e=b+e|0;if(L[i+54>>1]<L[e+48>>1]|L[e+54>>1]<L[i+48>>1]){break c}e=J[a+92>>2];ia[J[J[e>>2]+12>>2]](e,f,b,d)|0;e=J[a+96>>2];if(!e){break c}ia[J[J[e>>2]+12>>2]](e,f,b,d)|0}b=(b+j|0)+54|0;break b}b=((b+(e<<6)|0)+j|0)+48|0}I[b>>1]=L[b>>1]-1;I[h+48>>1]=L[h+48>>1]+1;b=L[g>>1]|L[g+2>>1]<<16;e=L[c>>1]|L[c+2>>1]<<16;I[g>>1]=e;I[g+2>>1]=e>>>16;I[c>>1]=b;I[c+2>>1]=b>>>16;g=g+4|0;b=c;c=b+4|0;e=L[b+6>>1];if(e){continue}break}}}function ff(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;a:{e=J[((b<<2)+a|0)+68>>2]+(c<<2)|0;d=L[e+6>>1];if(!d){break a}c=e+4|0;i=b<<1;g=J[a+60>>2]+(L[e+2>>1]<<6)|0;f=g+54|0;k=i+f|0;h=g+48|0;b=1<<b&3;g=b<<1;l=h+g|0;m=f+g|0;j=(1<<b&3)<<1;h=h+j|0;n=f+j|0;while(1){b=L[c>>1];if(b>>>0>L[e>>1]){break a}f=J[a+60>>2];if(b&1){b=((f+(d<<6)|0)+i|0)+54|0}else{b=f+(d<<6)|0;d=b+g|0;b:{if(L[m>>1]<L[d+48>>1]|L[d+54>>1]<L[l>>1]){break b}d=b+j|0;if(L[n>>1]<L[d+48>>1]|L[d+54>>1]<L[h>>1]){break b}d=J[a+92>>2];f=f+(L[e+2>>1]<<6)|0;ia[J[J[d>>2]+8>>2]](d,f,b)|0;d=J[a+96>>2];if(!d){break b}ia[J[J[d>>2]+8>>2]](d,f,b)|0}b=(b+i|0)+48|0}I[b>>1]=L[b>>1]-1;I[k>>1]=L[k>>1]+1;b=L[e>>1]|L[e+2>>1]<<16;d=L[c>>1]|L[c+2>>1]<<16;I[e>>1]=d;I[e+2>>1]=d>>>16;I[c>>1]=b;I[c+2>>1]=b>>>16;e=e+4|0;b=c;c=b+4|0;d=L[b+6>>1];if(d){continue}break}}}function Hd(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;a:{h=J[((b<<2)+a|0)+68>>2];i=c<<2;c=h+i|0;g=c-4|0;f=L[g>>1];if(f>>>0<=L[c>>1]){break a}k=b<<1;e=J[a+60>>2];h=k+(e+(L[(h+i|0)+2>>1]<<6)|0)|0;i=1<<b&3;m=1<<i&3;while(1){b=L[c-2>>1];if(f&1){b=(((b<<6)+e|0)+k|0)+54|0}else{f=(L[c+2>>1]<<6)+e|0;j=i<<1;l=f+j|0;b=(b<<6)+e|0;e=b+j|0;b:{if(L[l+54>>1]<L[e+48>>1]|L[e+54>>1]<L[l+48>>1]){break b}e=m<<1;j=e+f|0;e=b+e|0;if(L[j+54>>1]<L[e+48>>1]|L[e+54>>1]<L[j+48>>1]){break b}e=J[a+92>>2];ia[J[J[e>>2]+12>>2]](e,f,b,d)|0;e=J[a+96>>2];if(!e){break b}ia[J[J[e>>2]+12>>2]](e,f,b,d)|0}b=(b+k|0)+48|0}I[b>>1]=L[b>>1]+1;I[h+54>>1]=L[h+54>>1]-1;b=L[c>>1]|L[c+2>>1]<<16;e=L[g>>1]|L[g+2>>1]<<16;I[c>>1]=e;I[c+2>>1]=e>>>16;I[g>>1]=b;I[g+2>>1]=b>>>16;g=g-4|0;f=L[g>>1];c=c-4|0;if(f>>>0<=L[c>>1]){break a}e=J[a+60>>2];continue}}}function cs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0);d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+8>>2];a=J[d+12>>2];a:{if(K[a+84|0]){e=N[a+8>>2];f=N[a>>2];j=N[a+4>>2];g=Q(Q(e*N[a+60>>2])+Q(Q(f*N[a+52>>2])+Q(j*N[a+56>>2])));if(g>=Q(-.10000000149011612)){J[a+272>>2]=0;N[a+268>>2]=10;break a}g=Q(Q(-1)/g);i=e;e=N[b+328>>2];h=Q(N[a+20>>2]-N[b+56>>2]);k=Q(N[a+16>>2]-N[b+52>>2]);l=N[b+332>>2];m=Q(i*Q(Q(Q(e*h)-Q(k*l))+N[b+320>>2]));i=f;f=Q(N[a+24>>2]-N[b+60>>2]);n=h;h=N[b+336>>2];N[a+272>>2]=g*Q(m+Q(Q(i*Q(Q(Q(l*f)-Q(n*h))+N[b+312>>2]))+Q(j*Q(Q(Q(h*k)-Q(f*e))+N[b+316>>2]))));N[a+268>>2]=g;break a}J[a+272>>2]=0;J[a+12>>2]=0;N[a+32>>2]=N[a+204>>2];N[a>>2]=-N[a+52>>2];N[a+8>>2]=-N[a+60>>2];N[a+4>>2]=-N[a+56>>2];N[a+268>>2]=1}ga=d+16|0}function Lt(a){a=a|0;var b=Q(0),c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0);l=ga-16|0;ga=l;J[l+12>>2]=a;a=J[l+12>>2];J[a+308>>2]=0;J[a+292>>2]=0;J[a+276>>2]=0;c=N[a+44>>2];h=N[a+404>>2];d=Q(c*h);e=N[a+36>>2];i=N[a+396>>2];f=Q(e*i);g=N[a+40>>2];q=N[a+400>>2];b=Q(g*q);N[a+304>>2]=Q(c*d)+Q(Q(e*f)+Q(g*b));m=N[a+28>>2];n=N[a+20>>2];o=N[a+24>>2];N[a+300>>2]=Q(m*d)+Q(Q(n*f)+Q(o*b));p=N[a+12>>2];j=Q(p*d);d=N[a+4>>2];k=Q(d*f);f=N[a+8>>2];N[a+296>>2]=j+Q(k+Q(f*b));b=Q(h*m);j=Q(i*n);k=Q(q*o);N[a+288>>2]=Q(c*b)+Q(Q(e*j)+Q(g*k));N[a+284>>2]=Q(m*b)+Q(Q(n*j)+Q(o*k));N[a+280>>2]=Q(p*b)+Q(Q(d*j)+Q(f*k));b=c;c=Q(p*h);h=e;e=Q(d*i);i=g;g=Q(f*q);N[a+272>>2]=Q(b*c)+Q(Q(h*e)+Q(i*g));N[a+268>>2]=Q(m*c)+Q(Q(n*e)+Q(g*o));N[a+264>>2]=Q(p*c)+Q(Q(d*e)+Q(f*g));ga=l+16|0}function lm(a,b,c,d){var e=0,f=0,g=0;e=ga+-64|0;ga=e;g=P(b,80);f=g+J[a+24>>2]|0;b=J[c+4>>2];J[f>>2]=J[c>>2];J[f+4>>2]=b;b=J[c+12>>2];J[f+8>>2]=J[c+8>>2];J[f+12>>2]=b;b=J[c+28>>2];J[f+24>>2]=J[c+24>>2];J[f+28>>2]=b;b=J[c+20>>2];J[f+16>>2]=J[c+16>>2];J[f+20>>2]=b;b=J[c+44>>2];J[f+40>>2]=J[c+40>>2];J[f+44>>2]=b;b=J[c+36>>2];J[f+32>>2]=J[c+32>>2];J[f+36>>2]=b;b=J[c+60>>2];J[f+56>>2]=J[c+56>>2];J[f+60>>2]=b;b=J[c+52>>2];J[f+48>>2]=J[c+48>>2];J[f+52>>2]=b;if(J[a+64>>2]){b=J[(J[a+24>>2]+g|0)+64>>2];ia[J[J[b>>2]+8>>2]](b,c,e+48|0,e+32|0);c=J[e+60>>2];J[e+8>>2]=J[e+56>>2];J[e+12>>2]=c;b=J[e+44>>2];J[e+24>>2]=J[e+40>>2];J[e+28>>2]=b;b=J[e+36>>2];J[e+16>>2]=J[e+32>>2];J[e+20>>2]=b;b=J[e+52>>2];J[e>>2]=J[e+48>>2];J[e+4>>2]=b;Gc(J[a+64>>2],J[(J[a+24>>2]+g|0)+76>>2],e)}if(d){ia[J[J[a>>2]+68>>2]](a)}ga=e- -64|0}function Id(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;a:{c=J[((b<<2)+a|0)+68>>2]+(c<<2)|0;e=c-4|0;g=L[e>>1];if(g>>>0<=L[c>>1]){break a}j=b<<1;d=J[a+60>>2];h=d+(L[c+2>>1]<<6)|0;f=h+48|0;m=j+f|0;b=1<<b&3;k=b<<1;n=f+k|0;i=h+54|0;o=i+k|0;l=(1<<b&3)<<1;f=f+l|0;i=i+l|0;while(1){b=L[c-2>>1];b:{if(g&1){b=(b<<6)+d|0;d=b+k|0;c:{if(L[o>>1]<L[d+48>>1]|L[d+54>>1]<L[n>>1]){break c}d=b+l|0;if(L[i>>1]<L[d+48>>1]|L[d+54>>1]<L[f>>1]){break c}d=J[a+92>>2];ia[J[J[d>>2]+8>>2]](d,h,b)|0;d=J[a+96>>2];if(!d){break c}ia[J[J[d>>2]+8>>2]](d,h,b)|0}b=(b+j|0)+54|0;break b}b=(((b<<6)+d|0)+j|0)+48|0}I[b>>1]=L[b>>1]+1;I[m>>1]=L[m>>1]-1;b=L[c>>1]|L[c+2>>1]<<16;d=L[e>>1]|L[e+2>>1]<<16;I[c>>1]=d;I[c+2>>1]=d>>>16;I[e>>1]=b;I[e+2>>1]=b>>>16;e=e-4|0;g=L[e>>1];c=c-4|0;if(g>>>0<=L[c>>1]){break a}d=J[a+60>>2];continue}}}function Nw(a){a=a|0;var b=Q(0),c=Q(0),d=0,e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0);f=ga-16|0;ga=f;J[f+12>>2]=a;a=ra(56);e=J[f+12>>2];Bb(a);J[a+4>>2]=0;J[a>>2]=11800;c=N[e>>2];b=N[e+4>>2];d=c<b;b=Q(N[((N[e+8>>2]>(d?c:b)?!d:2)<<2)+e>>2]*Q(.10000000149011612));c=N[a+44>>2];if(b<c){d=ga-16|0;J[d+12>>2]=a;g=N[J[d+12>>2]+44>>2];N[a+44>>2]=b;b=N[a+36>>2];h=N[a+32>>2];i=N[a+28>>2];j=Q(ia[J[J[a>>2]+48>>2]](a));k=Q(ia[J[J[a>>2]+48>>2]](a));l=Q(ia[J[J[a>>2]+48>>2]](a));J[a+40>>2]=0;N[a+32>>2]=Q(c+h)-k;N[a+28>>2]=Q(c+i)-j;N[a+36>>2]=Q(g+b)-l;d=J[a>>2]}else{d=11800}c=Q(ia[J[d+48>>2]](a));b=Q(ia[J[J[a>>2]+48>>2]](a));g=Q(ia[J[J[a>>2]+48>>2]](a));h=N[e>>2];i=N[e+4>>2];j=N[e+8>>2];J[a+40>>2]=0;N[a+36>>2]=Q(j*N[a+20>>2])-g;N[a+32>>2]=Q(i*N[a+16>>2])-b;N[a+28>>2]=Q(h*N[a+12>>2])-c;ga=f+16|0;return a|0}function jA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;d=J[a+212>>2];a:{if((d|0)!=J[a+216>>2]){break a}i=d?d<<1:1;if((i|0)<=(d|0)){break a}if(i){J[8369]=J[8369]+1;g=ia[J[6782]](i<<2,16)|0;d=J[a+212>>2]}b:{if((d|0)<=0){break b}if(d-1>>>0>=3){j=d&-4;while(1){e=f<<2;J[e+g>>2]=J[e+J[a+220>>2]>>2];h=e|4;J[h+g>>2]=J[h+J[a+220>>2]>>2];h=e|8;J[h+g>>2]=J[h+J[a+220>>2]>>2];e=e|12;J[e+g>>2]=J[e+J[a+220>>2]>>2];f=f+4|0;k=k+4|0;if((j|0)!=(k|0)){continue}break}}e=d&3;if(!e){break b}while(1){j=f<<2;J[j+g>>2]=J[j+J[a+220>>2]>>2];f=f+1|0;l=l+1|0;if((e|0)!=(l|0)){continue}break}}f=J[a+220>>2];if(!(!f|!K[a+224|0])){if(f){J[8370]=J[8370]+1;ia[J[6783]](f)}d=J[a+212>>2]}J[a+220>>2]=g;H[a+224|0]=1;J[a+216>>2]=i}J[J[a+220>>2]+(d<<2)>>2]=b;J[a+212>>2]=d+1;if(c){uk(J[b+28>>2],b);uk(J[b+32>>2],b)}}function Mo(a,b,c,d){a=a|0;b=Q(b);c=c|0;d=d|0;var e=0,f=0,g=0;e=ga-112|0;ga=e;J[e+108>>2]=a;N[e+104>>2]=b;J[e+100>>2]=c;J[e+96>>2]=d;c=J[e+108>>2];g=ga-16|0;d=g;J[d+12>>2]=J[e+100>>2];d=J[d+12>>2]+48|0;f=J[d+4>>2];a=e+80|0;J[a>>2]=J[d>>2];J[a+4>>2]=f;f=J[d+12>>2];J[a+8>>2]=J[d+8>>2];J[a+12>>2]=f;J[g+12>>2]=J[e+100>>2];d=e- -64|0;pc(d,J[g+12>>2],1);f=ga-16|0;J[f+12>>2]=J[e+100>>2];g=e+48|0;pc(g,J[f+12>>2],0);N[e+44>>2]=-1.5707963705062866;N[e+40>>2]=1.5707963705062866;N[e+36>>2]=-1.5707963705062866;N[e+32>>2]=1.5707963705062866;N[e+28>>2]=30;ia[J[J[c>>2]+64>>2]](c,a,d,g,N[e+104>>2],N[e+44>>2],N[e+40>>2],N[e+36>>2],N[e+32>>2],J[e+96>>2],N[e+28>>2],0);f=e+8|0;$b(f,g);ia[J[J[c>>2]+64>>2]](c,a,d,f,N[e+104>>2],N[e+44>>2],N[e+40>>2],N[e+36>>2],N[e+32>>2],J[e+96>>2],N[e+28>>2],0);ga=e+112|0}function vq(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;c=ga-32|0;ga=c;J[c+28>>2]=a;if(!K[29324]){J[(ga-16|0)+12>>2]=29308;H[29324]=1}a=ga-16|0;ga=a;J[a+12>>2]=J[c+28>>2];g=J[a+12>>2];J[a+8>>2]=J[g+116>>2]+4;d=ga-16|0;J[d+12>>2]=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[d+12>>2];J[b+8>>2]=0;d=ga-16|0;J[d+12>>2]=J[b+12>>2]+(J[b+8>>2]<<4);d=J[d+12>>2]+(J[g+128>>2]<<2)|0;e=ga-16|0;J[e+12>>2]=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[e+12>>2];J[b+8>>2]=1;e=ga-16|0;J[e+12>>2]=J[b+12>>2]+(J[b+8>>2]<<4);e=J[e+12>>2]+(J[g+128>>2]<<2)|0;f=ga-16|0;J[f+12>>2]=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[f+12>>2];J[b+8>>2]=2;f=ga-16|0;J[f+12>>2]=J[b+12>>2]+(J[b+8>>2]<<4);na(c+8|0,d,e,J[f+12>>2]+(J[g+128>>2]<<2)|0);ga=a+16|0;a=J[c+12>>2];J[7327]=J[c+8>>2];J[7328]=a;a=J[c+20>>2];J[7329]=J[c+16>>2];J[7330]=a;ga=c+32|0;return 29308}function Oj(a){var b=0,c=0,d=Q(0),e=Q(0),f=0,g=Q(0);f=(D(a),x(2));c=f&2147483647;if(c>>>0>=1283457024){return((D(a),x(2))&2147483647)>>>0>2139095040?a:(z(2,(D(a),x(2))&-2147483648|1070141402),E())}a:{b:{if(c>>>0<=1054867455){b=-1;if(c>>>0>=964689920){break b}break a}a=Q(R(a));if(c>>>0<=1066926079){if(c>>>0<=1060110335){a=Q(Q(Q(a+a)+Q(-1))/Q(a+Q(2)));b=0;break b}a=Q(Q(a+Q(-1))/Q(a+Q(1)));b=1;break b}if(c>>>0<=1075576831){a=Q(Q(a+Q(-1.5))/Q(Q(a*Q(1.5))+Q(1)));b=2;break b}a=Q(Q(-1)/a);b=3}e=Q(a*a);d=Q(e*e);g=Q(d*Q(Q(d*Q(-.106480173766613))+Q(-.19999158382415771)));d=Q(e*Q(Q(d*Q(Q(d*Q(.06168760731816292))+Q(.14253635704517365)))+Q(.333333283662796)));if(c>>>0<=1054867455){return Q(a-Q(a*Q(g+d)))}b=b<<2;a=Q(N[b+23264>>2]-Q(Q(Q(a*Q(g+d))-N[b+23280>>2])-a));a=(f|0)>=0?a:Q(-a)}return a}function zs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0);e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;c=ra(96);a=J[e+4>>2];b=J[e>>2];d=ga-32|0;ga=d;xb(c,11,J[e+12>>2],J[e+8>>2]);J[c>>2]=19424;f=J[a+52>>2];J[c+48>>2]=J[a+48>>2];J[c+52>>2]=f;f=J[a+60>>2];J[c+56>>2]=J[a+56>>2];J[c+60>>2]=f;f=J[b+52>>2];J[c+64>>2]=J[b+48>>2];J[c+68>>2]=f;f=J[b+60>>2];J[c+72>>2]=J[b+56>>2];J[c+76>>2]=f;Na(a,d+16|0);Na(b,d);g=N[d+24>>2];h=N[d+8>>2];i=N[d+20>>2];j=N[d+4>>2];k=N[d+28>>2];l=N[d+12>>2];m=N[d>>2];n=N[d+16>>2];N[c+92>>2]=Q(g*h)+Q(Q(i*j)+Q(Q(k*l)+Q(m*n)));N[c+88>>2]=Q(i*m)+Q(Q(Q(l*g)-Q(k*h))-Q(n*j));N[c+84>>2]=Q(n*h)+Q(Q(Q(l*i)-Q(k*j))-Q(g*m));N[c+80>>2]=Q(g*j)+Q(Q(Q(l*n)-Q(k*m))-Q(i*h));ga=d+32|0;ga=e+16|0;return c|0}function SG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+20>>2];if(!(!c|!K[a+16|0])){d=J[b+4>>2];a:{if((d|0)!=J[b+8>>2]){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;d=J[b+4>>2]}b:{if((d|0)<=0){break b}c=0;if(d-1>>>0>=3){i=d&-4;while(1){e=c<<2;J[e+f>>2]=J[e+J[b+12>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[b+12>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[b+12>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[b+12>>2]>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=d&3;if(!e){break b}while(1){i=c<<2;J[i+f>>2]=J[i+J[b+12>>2]>>2];c=c+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}c=J[b+12>>2];if(!(!c|!K[b+16|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[b+4>>2]}J[b+12>>2]=f;H[b+16|0]=1;J[b+8>>2]=h;c=J[a+20>>2]}J[J[b+12>>2]+(d<<2)>>2]=c;J[b+4>>2]=d+1}}function yd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+12>>2];if(!(!c|!K[a+8|0])){d=J[b+4>>2];a:{if((d|0)!=J[b+8>>2]){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;d=J[b+4>>2]}b:{if((d|0)<=0){break b}c=0;if(d-1>>>0>=3){i=d&-4;while(1){e=c<<2;J[e+f>>2]=J[e+J[b+12>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[b+12>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[b+12>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[b+12>>2]>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=d&3;if(!e){break b}while(1){i=c<<2;J[i+f>>2]=J[i+J[b+12>>2]>>2];c=c+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}c=J[b+12>>2];if(!(!c|!K[b+16|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[b+4>>2]}J[b+12>>2]=f;H[b+16|0]=1;J[b+8>>2]=h;c=J[a+12>>2]}J[J[b+12>>2]+(d<<2)>>2]=c;J[b+4>>2]=d+1}}function mE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=ga-80|0;ga=d;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;f=N[c+8>>2];h=N[c>>2];g=N[c+4>>2];e=Q(Q(f*f)+Q(Q(h*h)+Q(g*g)));a:{if(e<Q(9999999747378752e-20)){f=Q(0);g=Q(0);e=Q(1);break a}e=Q(Q(1)/Q(Y(e)));f=Q(f*e);i=Q(g*e);g=N[c+12>>2];e=Q(h*e)}J[d+52>>2]=0;J[d+56>>2]=0;N[d+76>>2]=g;N[d+72>>2]=f;N[d+68>>2]=i;J[d+44>>2]=0;J[d+48>>2]=0;N[d+64>>2]=e;J[d+60>>2]=-581039253;J[d+40>>2]=14568;J[d+32>>2]=1566444395;J[d+36>>2]=0;J[d+24>>2]=1566444395;J[d+28>>2]=1566444395;b=J[b+92>>2];J[d+16>>2]=-581039253;J[d+20>>2]=0;J[d+8>>2]=-581039253;J[d+12>>2]=-581039253;ia[J[J[b>>2]+8>>2]](b,d+40|0,d+8|0,d+24|0);b=J[d+56>>2];J[a+8>>2]=J[d+52>>2];J[a+12>>2]=b;b=J[d+48>>2];J[a>>2]=J[d+44>>2];J[a+4>>2]=b;ga=d+80|0}function vt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=ra(360);c=J[d+8>>2];b=J[d+12>>2];ug(a,3,b);J[a>>2]=19792;e=J[c+4>>2];J[a+300>>2]=J[c>>2];J[a+304>>2]=e;e=J[c+12>>2];J[a+308>>2]=J[c+8>>2];J[a+312>>2]=e;i=N[b+52>>2];j=N[b+8>>2];k=N[b+12>>2];l=N[b+56>>2];m=N[b+20>>2];n=N[b+24>>2];o=N[b+28>>2];p=N[b+60>>2];q=N[b+36>>2];r=N[b+40>>2];f=N[c+8>>2];s=N[b+44>>2];t=N[b+4>>2];g=N[c>>2];h=N[c+4>>2];J[a+356>>2]=0;J[a+348>>2]=1050253722;J[a+352>>2]=1065353216;H[a+344|0]=0;J[a+328>>2]=0;J[a+332>>2]=0;N[a+324>>2]=p+Q(Q(f*s)+Q(Q(g*q)+Q(h*r)));N[a+320>>2]=l+Q(Q(f*o)+Q(Q(g*m)+Q(h*n)));N[a+316>>2]=i+Q(Q(f*k)+Q(Q(g*t)+Q(h*j)));ga=d+16|0;return a|0}function _z(a,b){a=a|0;b=b|0;var c=0,d=0;ia[J[J[b>>2]+32>>2]](b);d=ia[J[J[b>>2]+16>>2]](b,104,1)|0;c=qa(J[d+8>>2],0,104);N[c+88>>2]=N[a+248>>2];N[c+92>>2]=N[a+252>>2];N[c+96>>2]=N[a+256>>2];N[c+100>>2]=N[a+260>>2];N[c>>2]=N[a+92>>2];N[c+4>>2]=N[a+96>>2];N[c+8>>2]=N[a+100>>2];N[c+12>>2]=N[a+104>>2];N[c+16>>2]=N[a+108>>2];N[c+20>>2]=N[a+116>>2];N[c+24>>2]=N[a+120>>2];N[c+28>>2]=N[a+124>>2];N[c+32>>2]=N[a+128>>2];N[c+36>>2]=N[a+132>>2];N[c+40>>2]=N[a+140>>2];N[c+44>>2]=N[a+144>>2];N[c+48>>2]=N[a+148>>2];N[c+52>>2]=N[a+152>>2];N[c+56>>2]=N[a+168>>2];N[c+60>>2]=N[a+172>>2];J[c+64>>2]=J[a+112>>2];J[c+68>>2]=J[a+156>>2];J[c+72>>2]=J[a+160>>2];J[c+76>>2]=J[a+164>>2];J[c+80>>2]=J[a+136>>2];ia[J[J[b>>2]+20>>2]](b,d,3601,1145853764,c);Ak(a,b);gh(a,b);ia[J[J[b>>2]+36>>2]](b)}function Ha(a){var b=Q(0),c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;e=(D(a),x(2));d=e&2147483647;a:{if(d>>>0<=1061752794){b=Q(1);if(d>>>0<964689920){break a}b=db(+a);break a}if(d>>>0<=1081824209){f=+a;if(d>>>0>=1075235812){b=Q(-db(((e|0)>=0?-3.141592653589793:3.141592653589793)+f));break a}if((e|0)<0){b=cb(f+1.5707963267948966);break a}b=cb(1.5707963267948966-f);break a}if(d>>>0<=1088565717){if(d>>>0>=1085271520){b=db(((e|0)>=0?-6.283185307179586:6.283185307179586)+ +a);break a}if((e|0)<0){b=cb(-4.71238898038469-+a);break a}b=cb(+a+-4.71238898038469);break a}b=Q(a-a);if(d>>>0>=2139095040){break a}b:{switch(Mj(a,c+8|0)&3){case 0:b=db(O[c+8>>3]);break a;case 1:b=cb(-O[c+8>>3]);break a;case 2:b=Q(-db(O[c+8>>3]));break a;default:break b}}b=cb(O[c+8>>3])}a=b;ga=c+16|0;return a}function NG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+76>>2];if(c){d=J[b+4>>2];a:{if((d|0)!=J[b+8>>2]){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;d=J[b+4>>2]}b:{if((d|0)<=0){break b}c=0;if(d-1>>>0>=3){i=d&-4;while(1){e=c<<2;J[e+f>>2]=J[e+J[b+12>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[b+12>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[b+12>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[b+12>>2]>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=d&3;if(!e){break b}while(1){i=c<<2;J[i+f>>2]=J[i+J[b+12>>2]>>2];c=c+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}c=J[b+12>>2];if(!(!c|!K[b+16|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[b+4>>2]}J[b+12>>2]=f;H[b+16|0]=1;J[b+8>>2]=h;c=J[a+76>>2]}J[J[b+12>>2]+(d<<2)>>2]=c;J[b+4>>2]=d+1}}function MA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;a:{if(!J[h+44>>2]){break a}d=J[h+20>>2];if(H[h+65|0]&1){if((d|0)<=0){break a}e=0;b=J[a+28>>2];if((b|0)<=0){break a}while(1){c=0;if((b|0)>0){while(1){f=J[a+16>>2];d=J[a+36>>2]+P(J[J[a+116>>2]+(c<<2)>>2],152)|0;Tk(f+P(J[d+144>>2],244)|0,f+P(J[d+148>>2],244)|0,d);c=c+1|0;if((c|0)!=(b|0)){continue}break}d=J[h+20>>2]}e=e+1|0;if((e|0)>=(d|0)){break a}b=J[a+28>>2];continue}}if((d|0)<=0){break a}e=0;b=J[a+28>>2];if((b|0)<=0){break a}while(1){c=0;if((b|0)>0){while(1){f=J[a+16>>2];d=J[a+36>>2]+P(J[J[a+116>>2]+(c<<2)>>2],152)|0;Tk(f+P(J[d+144>>2],244)|0,f+P(J[d+148>>2],244)|0,d);c=c+1|0;if((c|0)!=(b|0)){continue}break}d=J[h+20>>2]}e=e+1|0;if((e|0)>=(d|0)){break a}b=J[a+28>>2];continue}}}function FC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+12>>2];if(c){d=J[b+4>>2];a:{if((d|0)!=J[b+8>>2]){break a}h=d?d<<1:1;if((h|0)<=(d|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;d=J[b+4>>2]}b:{if((d|0)<=0){break b}c=0;if(d-1>>>0>=3){i=d&-4;while(1){e=c<<2;J[e+f>>2]=J[e+J[b+12>>2]>>2];g=e|4;J[g+f>>2]=J[g+J[b+12>>2]>>2];g=e|8;J[g+f>>2]=J[g+J[b+12>>2]>>2];e=e|12;J[e+f>>2]=J[e+J[b+12>>2]>>2];c=c+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}e=d&3;if(!e){break b}while(1){i=c<<2;J[i+f>>2]=J[i+J[b+12>>2]>>2];c=c+1|0;k=k+1|0;if((e|0)!=(k|0)){continue}break}}c=J[b+12>>2];if(!(!c|!K[b+16|0])){if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[b+4>>2]}J[b+12>>2]=f;H[b+16|0]=1;J[b+8>>2]=h;c=J[a+12>>2]}J[J[b+12>>2]+(d<<2)>>2]=c;J[b+4>>2]=d+1}}function Zs(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;b=J[e+8>>2];a=ga-48|0;ga=a;r=J[e+12>>2];Na(r+364|0,a+16|0);c=N[b+4>>2];d=N[b+8>>2];f=N[b>>2];g=N[b+12>>2];h=N[a+24>>2];i=N[a+20>>2];j=N[a+28>>2];k=N[a+16>>2];Na(r+300|0,a);l=Q(Q(h*d)+Q(Q(i*c)+Q(Q(j*g)+Q(k*f))));m=N[a+12>>2];n=N[a>>2];o=Q(Q(h*c)+Q(Q(Q(j*f)-Q(g*k))-Q(i*d)));p=Q(Q(k*d)+Q(Q(Q(j*c)-Q(g*i))-Q(h*f)));q=N[a+4>>2];c=Q(Q(i*f)+Q(Q(Q(j*d)-Q(g*h))-Q(k*c)));d=N[a+8>>2];N[a+44>>2]=Q(Q(Q(l*m)-Q(n*o))-Q(p*q))-Q(c*d);N[a+40>>2]=Q(Q(o*q)+Q(Q(l*d)+Q(c*m)))-Q(p*n);N[a+36>>2]=Q(Q(c*n)+Q(Q(l*q)+Q(p*m)))-Q(o*d);N[a+32>>2]=Q(Q(p*d)+Q(Q(l*n)+Q(o*m)))-Q(c*q);fl(r,a+32|0);ga=a+48|0;ga=e+16|0}function iz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=0,o=0,p=0;d=J[b+52>>2];f=J[d+32>>2];b=J[f>>2];d=J[d+24>>2];if((d|0)>=2){h=N[c+8>>2];i=N[c>>2];j=N[c+4>>2];k=Q(Q(h*N[b+16>>2])+Q(Q(i*N[b+8>>2])+Q(j*N[b+12>>2])));b=1;c=d-1|0;o=c&1;a:{if((d|0)==2){c=0;break a}p=c&-2;c=0;while(1){d=J[(b<<2)+f>>2];g=Q(Q(h*N[d+16>>2])+Q(Q(i*N[d+8>>2])+Q(j*N[d+12>>2])));l=g>k;d=b+1|0;e=J[(d<<2)+f>>2];m=Q(Q(h*N[e+16>>2])+Q(Q(i*N[e+8>>2])+Q(j*N[e+12>>2])));g=l?g:k;e=m>g;k=e?m:g;c=e?d:l?b:c;b=b+2|0;n=n+2|0;if((p|0)!=(n|0)){continue}break}}if(o){d=b;b=J[(b<<2)+f>>2];c=Q(Q(h*N[b+16>>2])+Q(Q(i*N[b+8>>2])+Q(j*N[b+12>>2])))>k?d:c}b=J[(c<<2)+f>>2]}c=J[b+12>>2];J[a>>2]=J[b+8>>2];J[a+4>>2]=c;c=J[b+20>>2];J[a+8>>2]=J[b+16>>2];J[a+12>>2]=c}function Ga(a){var b=0,c=0,d=0,e=0;b=ga-16|0;ga=b;e=(D(a),x(2));c=e&2147483647;a:{if(c>>>0<=1061752794){if(c>>>0<964689920){break a}a=cb(+a);break a}if(c>>>0<=1081824209){d=+a;if(c>>>0<=1075235811){if((e|0)<0){a=Q(-db(d+1.5707963267948966));break a}a=db(d+-1.5707963267948966);break a}a=cb(-(((e|0)>=0?-3.141592653589793:3.141592653589793)+d));break a}if(c>>>0<=1088565717){d=+a;if(c>>>0<=1085271519){if((e|0)<0){a=db(d+4.71238898038469);break a}a=Q(-db(d+-4.71238898038469));break a}a=cb(((e|0)>=0?-6.283185307179586:6.283185307179586)+d);break a}if(c>>>0>=2139095040){a=Q(a-a);break a}b:{switch(Mj(a,b+8|0)&3){case 0:a=cb(O[b+8>>3]);break a;case 1:a=db(O[b+8>>3]);break a;case 2:a=cb(-O[b+8>>3]);break a;default:break b}}a=Q(-db(O[b+8>>3]))}ga=b+16|0;return a}function gA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;c=J[a+280>>2];a:{if((c|0)!=J[a+284>>2]){break a}h=c?c<<1:1;if((h|0)<=(c|0)){break a}if(h){J[8369]=J[8369]+1;f=ia[J[6782]](h<<2,16)|0;c=J[a+280>>2]}b:{if((c|0)<=0){break b}if(c-1>>>0>=3){i=c&-4;while(1){d=e<<2;J[d+f>>2]=J[d+J[a+288>>2]>>2];g=d|4;J[g+f>>2]=J[g+J[a+288>>2]>>2];g=d|8;J[g+f>>2]=J[g+J[a+288>>2]>>2];d=d|12;J[d+f>>2]=J[d+J[a+288>>2]>>2];e=e+4|0;j=j+4|0;if((i|0)!=(j|0)){continue}break}}d=c&3;if(!d){break b}while(1){i=e<<2;J[i+f>>2]=J[i+J[a+288>>2]>>2];e=e+1|0;k=k+1|0;if((d|0)!=(k|0)){continue}break}}e=J[a+288>>2];if(!(!e|!K[a+292|0])){if(e){J[8370]=J[8370]+1;ia[J[6783]](e)}c=J[a+280>>2]}J[a+288>>2]=f;H[a+292|0]=1;J[a+284>>2]=h}J[J[a+288>>2]+(c<<2)>>2]=b;J[a+280>>2]=c+1}function Ev(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+24>>2];c=J[f+20>>2];d=J[f+16>>2];e=J[f+12>>2];b=ga-32|0;ga=b;J[b+28>>2]=J[f+28>>2];J[b+24>>2]=a;J[b+20>>2]=c;J[b+16>>2]=d;J[b+12>>2]=e;c=J[b+24>>2];d=J[c+4>>2];a=J[b+28>>2];J[a+96>>2]=J[c>>2];J[a+100>>2]=d;d=J[c+12>>2];J[a+104>>2]=J[c+8>>2];J[a+108>>2]=d;c=J[b+20>>2];d=J[c+4>>2];J[a+112>>2]=J[c>>2];J[a+116>>2]=d;d=J[c+12>>2];J[a+120>>2]=J[c+8>>2];J[a+124>>2]=d;c=J[b+16>>2];d=J[c+4>>2];J[a+128>>2]=J[c>>2];J[a+132>>2]=d;d=J[c+12>>2];J[a+136>>2]=J[c+8>>2];J[a+140>>2]=d;c=J[b+12>>2];d=J[c+4>>2];J[a+144>>2]=J[c>>2];J[a+148>>2]=d;d=J[c+12>>2];J[a+152>>2]=J[c+8>>2];J[a+156>>2]=d;Sb(a);ga=b+32|0;ga=f+32|0}function ng(a,b){var c=0,d=0,e=0,f=0;c=J[J[a+1120>>2]+(b<<2)>>2];b=J[c+348>>2];if(b){Fc(a+1048|0,b)}b=J[c+52>>2];if(!(b?!b|!K[c+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+52>>2]=0;H[c+56|0]=1;J[c+44>>2]=0;J[c+48>>2]=0;b=J[c+32>>2];if(!(b?!b|!K[c+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[c+32>>2]=0;H[c+36|0]=1;J[c+24>>2]=0;J[c+28>>2]=0;b=J[c+12>>2];if(!(b?!b|!K[c+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}b=0;J[c+12>>2]=0;H[c+16|0]=1;J[c+4>>2]=0;J[c+8>>2]=0;if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}d=J[a+1112>>2];a:{if((d|0)<=0){break a}e=J[a+1120>>2];while(1){f=(b<<2)+e|0;if(J[f>>2]!=(c|0)){b=b+1|0;if((d|0)!=(b|0)){continue}break a}break}if((b|0)>=(d|0)){break a}b=d-1|0;d=b<<2;J[f>>2]=J[d+e>>2];J[d+J[a+1120>>2]>>2]=c;J[a+1112>>2]=b}}function Vn(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0,f=0;d=ga-128|0;ga=d;J[d+120>>2]=a;J[d+116>>2]=b;N[d+112>>2]=c;a=J[d+120>>2];b=d+96|0;J[(ga-16|0)+12>>2]=b;mf(a,b);N[d+92>>2]=Ua(J[d+116>>2],b);N[d+88>>2]=Ua(a+56|0,b);N[d+92>>2]=N[d+92>>2]-N[d+88>>2];a:{if(!(!(N[d+92>>2]>=Q(-N[d+112>>2]))|!(N[d+92>>2]<=N[d+112>>2]))){J[d+84>>2]=0;while(1){if(J[d+84>>2]<3){e=ga-16|0;b=d- -64|0;J[e+12>>2]=b;f=e;e=d+48|0;J[f+12>>2]=e;ia[J[J[a>>2]+104>>2]](a,J[d+84>>2],b,e);f=d+32|0;Ma(f,e,b);e=d+16|0;Ub(e,f,d+96|0);Ld(e);N[d+12>>2]=Ua(J[d+116>>2],e);N[d+8>>2]=Ua(b,e);N[d+12>>2]=N[d+12>>2]-N[d+8>>2];if(N[d+12>>2]<Q(-N[d+112>>2])){H[d+127|0]=0;break a}else{J[d+84>>2]=J[d+84>>2]+1;continue}}break}H[d+127|0]=1;break a}H[d+127|0]=0}ga=d+128|0;return H[d+127|0]&1}function HD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];a:{d=J[a+92>>2];if(d){e=ia[J[J[c>>2]+28>>2]](c,J[a+100>>2])|0;J[b+56>>2]=d;J[b+52>>2]=e;b=0;g=ia[J[J[c>>2]+16>>2]](c,20,d)|0;if((d|0)<=0){e=J[a+100>>2];break a}h=J[a+120>>2];e=J[a+100>>2];a=J[g+8>>2];while(1){f=(b<<4)+e|0;N[a>>2]=N[f>>2];N[a+4>>2]=N[f+4>>2];N[a+8>>2]=N[f+8>>2];N[a+12>>2]=N[f+12>>2];N[a+16>>2]=N[(b<<2)+h>>2];a=a+20|0;b=b+1|0;if((d|0)!=(b|0)){continue}break}break a}J[b+52>>2]=0;J[b+56>>2]=0;return 3897}ia[J[J[c>>2]+20>>2]](c,g,2454,1497453121,e);return 3897}function nm(a,b,c,d,e,f){var g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);ia[J[J[a>>2]+8>>2]](a,b,e,f);k=N[d+8>>2];l=N[d>>2];m=N[d+4>>2];n=N[f>>2];o=N[f+4>>2];p=N[f+8>>2];h=N[e>>2];q=N[c>>2];i=N[e+4>>2];r=N[c+4>>2];g=N[e+8>>2];s=N[c+8>>2];t=Q(ia[J[J[a>>2]+16>>2]](a));J[e+12>>2]=0;j=g;g=Q(s*Q(1));N[e+8>>2]=j+(g>=Q(0)?Q(-0):g);j=i;i=Q(r*Q(1));N[e+4>>2]=j+(i>=Q(0)?Q(-0):i);j=h;h=Q(q*Q(1));N[e>>2]=j+(h>=Q(0)?Q(-0):h);J[f+12>>2]=0;N[f+8>>2]=p+(g>Q(-0)?g:Q(-0));N[f+4>>2]=o+(i>Q(-0)?i:Q(-0));N[f>>2]=n+(h>Q(-0)?h:Q(-0));g=Q(Q(t*Q(Y(Q(Q(k*k)+Q(Q(l*l)+Q(m*m))))))*Q(1));N[e>>2]=N[e>>2]-g;N[e+4>>2]=N[e+4>>2]-g;N[e+8>>2]=N[e+8>>2]-g;N[f>>2]=g+N[f>>2];N[f+4>>2]=g+N[f+4>>2];N[f+8>>2]=g+N[f+8>>2]}function Tx(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=ga-32|0;ga=b;J[b+28>>2]=a;if(!K[29088]){Oa(29072);H[29088]=1}e=ga-16|0;ga=e;J[e+12>>2]=J[b+28>>2];a=J[e+12>>2];N[e+8>>2]=Xf(a);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=e+8;f=J[c+12>>2];N[c+4>>2]=Q(1)/N[J[c+8>>2]>>2];a=ga-32|0;ga=a;J[a+28>>2]=f;J[a+24>>2]=c+4;d=ga-16|0;f=J[a+28>>2];J[d+12>>2]=f;N[a+20>>2]=N[J[d+12>>2]>>2]*N[J[a+24>>2]>>2];d=ga-16|0;J[d+12>>2]=f;N[a+16>>2]=N[J[d+12>>2]+4>>2]*N[J[a+24>>2]>>2];d=ga-16|0;J[d+12>>2]=f;N[a+12>>2]=N[J[d+12>>2]+8>>2]*N[J[a+24>>2]>>2];N[a+8>>2]=N[f+12>>2]*N[J[a+24>>2]>>2];he(b+8|0,a+20|0,a+16|0,a+12|0,a+8|0);ga=a+32|0;ga=c+16|0;ga=e+16|0;a=J[b+12>>2];J[7268]=J[b+8>>2];J[7269]=a;a=J[b+20>>2];J[7270]=J[b+16>>2];J[7271]=a;ga=b+32|0;return 29072}function qg(a,b){var c=0,d=0;c=ga-144|0;ga=c;Bd(a);H[a+500|0]=1;J[a>>2]=20740;J[a+496>>2]=0;J[a+488>>2]=0;J[a+492>>2]=0;J[c+72>>2]=0;J[c+4>>2]=0;N[c>>2]=0;d=J[b+12>>2];J[c+84>>2]=J[b+8>>2];J[c+88>>2]=d;d=J[b>>2];b=J[b+4>>2];J[c+12>>2]=0;J[c+16>>2]=0;J[c+20>>2]=0;J[c+24>>2]=0;J[c+28>>2]=1065353216;J[c+32>>2]=0;J[c+36>>2]=0;J[c+40>>2]=0;J[c+44>>2]=0;J[c+48>>2]=1065353216;J[c+52>>2]=0;J[c+56>>2]=0;J[c+60>>2]=0;J[c+64>>2]=0;J[c+68>>2]=0;J[c+76>>2]=d;J[c+80>>2]=b;J[c+132>>2]=1008981770;J[c+136>>2]=1008981770;J[c+124>>2]=1000593162;J[c+128>>2]=1008981770;H[c+120|0]=0;J[c+116>>2]=1065353216;J[c+108>>2]=0;J[c+112>>2]=1061997773;J[c+100>>2]=1056964608;J[c+104>>2]=0;J[c+92>>2]=0;J[c+96>>2]=0;J[c+8>>2]=1065353216;zk(a,c);ga=c+144|0}function tD(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0);d=ga-96|0;ga=d;e=Q(ia[J[J[a>>2]+48>>2]](a));J[d+44>>2]=0;J[d+48>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+52>>2]=1065353216;h=d- -64|0;J[h>>2]=0;J[h+4>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+72>>2]=1065353216;J[d+84>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=1065353216;ia[J[J[a>>2]+8>>2]](a,d+32|0,d+16|0,d);i=N[d+24>>2];j=N[d+8>>2];f=N[d+16>>2];g=N[d>>2];k=N[d+20>>2];l=N[d+4>>2];J[c+12>>2]=0;b=Q(b*Q(.0833333283662796));f=Q(e+Q(Q(g-f)*Q(.5)));f=Q(f+f);f=Q(f*f);g=Q(e+Q(Q(l-k)*Q(.5)));g=Q(g+g);g=Q(g*g);N[c+8>>2]=b*Q(f+g);e=Q(e+Q(Q(j-i)*Q(.5)));e=Q(e+e);e=Q(e*e);N[c+4>>2]=b*Q(f+e);N[c>>2]=b*Q(g+e);ga=d+96|0}function KE(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0);d=ga-96|0;ga=d;J[d+44>>2]=0;J[d+48>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+52>>2]=1065353216;h=d- -64|0;J[h>>2]=0;J[h+4>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+72>>2]=1065353216;J[d+84>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=1065353216;ia[J[J[a>>2]+8>>2]](a,d+32|0,d+16|0,d);i=N[d+24>>2];j=N[d+8>>2];f=N[d+16>>2];g=N[d>>2];k=N[d+20>>2];l=N[d+4>>2];e=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;b=Q(b*Q(.0833333283662796));f=Q(e+Q(Q(g-f)*Q(.5)));f=Q(f+f);f=Q(f*f);g=Q(e+Q(Q(l-k)*Q(.5)));g=Q(g+g);g=Q(g*g);N[c+8>>2]=b*Q(f+g);e=Q(e+Q(Q(j-i)*Q(.5)));e=Q(e+e);e=Q(e*e);N[c+4>>2]=b*Q(f+e);N[c>>2]=b*Q(g+e);ga=d+96|0}function OE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=0,g=0,h=0,i=Q(0),j=0,k=Q(0),l=0,m=Q(0),n=0,o=0,p=Q(0);f=ga-16|0;if((d|0)>0){while(1){i=Q(N[a+60>>2]*Q(.5));j=J[a+64>>2];o=l<<4;g=o+b|0;e=N[g+8>>2];h=J[a+68>>2]<<2;m=Q(e*e);e=N[g>>2];k=Q(e*e);e=N[g+4>>2];a:{b:{if(N[g+h>>2]>Q(N[a+52>>2]*Q(Y(Q(m+Q(k+Q(e*e))))))){J[(j<<2)+f>>2]=0;N[f+h>>2]=i;j=J[a+72>>2];break b}n=j<<2;e=N[g+n>>2];j=J[a+72>>2];k=N[g+(j<<2)>>2];p=Q(Y(Q(Q(e*e)+Q(k*k))));if(p>Q(1.1920928955078125e-7)){m=e;e=Q(N[a+56>>2]/p);N[f+n>>2]=m*e;N[f+h>>2]=-i;i=Q(k*e);break a}J[f+n>>2]=0;N[f+h>>2]=-i}i=Q(0)}N[(j<<2)+f>>2]=i;h=J[f+12>>2];g=c+o|0;J[g+8>>2]=J[f+8>>2];J[g+12>>2]=h;h=J[f+4>>2];J[g>>2]=J[f>>2];J[g+4>>2]=h;l=l+1|0;if((l|0)!=(d|0)){continue}break}}}function zc(a,b,c){var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0);h=J[a+4>>2];if(h){ub(h,b,c)}a=J[a>>2];if(a){l=N[a+220>>2];m=N[a+212>>2];n=N[a+216>>2];o=N[a+204>>2];p=N[a+196>>2];q=N[a+200>>2];r=N[a+188>>2];s=N[a+184>>2];t=N[a+180>>2];i=N[c+4>>2];j=N[c+8>>2];k=N[c>>2];d=N[b+8>>2];e=N[b+4>>2];g=N[b>>2];f=N[a+128>>2];N[a+276>>2]=Q(g*f)+N[a+276>>2];N[a+280>>2]=Q(f*e)+N[a+280>>2];N[a+284>>2]=Q(f*d)+N[a+284>>2];J[a+312>>2]=J[a+312>>2]+1;f=Q(Q(k*e)-Q(g*i));e=Q(Q(i*d)-Q(e*j));d=Q(Q(j*g)-Q(d*k));N[a+292>>2]=Q(Q(r*f)+Q(Q(t*e)+Q(s*d)))+N[a+292>>2];N[a+296>>2]=Q(Q(o*f)+Q(Q(p*e)+Q(d*q)))+N[a+296>>2];N[a+300>>2]=Q(Q(l*f)+Q(Q(m*e)+Q(d*n)))+N[a+300>>2]}}function jw(a){a=a|0;var b=0,c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;a=J[c+12>>2];if(a){b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;a:{b:{b=J[a+12>>2];c:{if(!(K[a+16|0]?b:0)){J[a+4>>2]=0;J[a+8>>2]=0;H[a+16|0]=1;break c}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+16|0]=1;J[a+12>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;b=J[a+32>>2];if(!b){break c}if(K[a+36|0]){break b}}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+36|0]=1;J[a+32>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;b=J[a+12>>2];if(!b|!K[a+16|0]){break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[a+12>>2]=0;H[a+16|0]=1;J[a+4>>2]=0;J[a+8>>2]=0;Ec(a)}ga=c+16|0}function Nx(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];a=ga-32|0;ga=a;J[a+24>>2]=J[d+12>>2];J[a+20>>2]=b;f=J[a+24>>2];c=Q(bc(f)*bc(J[a+20>>2]));b=ga-16|0;N[b+12>>2]=c;N[a+16>>2]=Y(N[b+12>>2]);a:{if(ac(f,J[a+20>>2])<Q(0)){b=ga-32|0;ga=b;J[b+28>>2]=J[a+20>>2];J[b+24>>2]=J[b+28>>2];e=ga-16|0;J[e+12>>2]=J[b+24>>2];N[b+20>>2]=-N[J[e+12>>2]>>2];J[e+12>>2]=J[b+24>>2];N[b+16>>2]=-N[J[e+12>>2]+4>>2];J[e+12>>2]=J[b+24>>2];N[b+12>>2]=-N[J[e+12>>2]+8>>2];N[b+8>>2]=-N[J[b+24>>2]+12>>2];he(a,b+20|0,b+16|0,b+12|0,b+8|0);ga=b+32|0;c=wc(Q(ac(f,a)/N[a+16>>2]));N[a+28>>2]=c+c;break a}c=wc(Q(ac(f,J[a+20>>2])/N[a+16>>2]));N[a+28>>2]=c+c}ga=a+32|0;ga=d+16|0;return Q(N[a+28>>2])}function pE(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=Q(0),f=Q(0);d=ga-96|0;ga=d;c=N[b>>2];e=N[b+4>>2];f=N[b+8>>2];H[a+84|0]=1;J[a+24>>2]=0;N[a+20>>2]=R(f);N[a+16>>2]=R(e);N[a+12>>2]=R(c);if(!K[29728]){J[7409]=0;J[7410]=0;J[7408]=1065353216;J[7411]=0;J[7412]=0;J[7414]=0;J[7415]=0;J[7413]=1065353216;J[7416]=0;J[7417]=0;J[7421]=0;J[7422]=0;J[7420]=-1082130432;J[7418]=1065353216;J[7419]=0;J[7423]=0;J[7424]=0;J[7426]=0;J[7427]=0;J[7425]=-1082130432;J[7428]=0;J[7429]=0;J[7430]=-1082130432;J[7431]=0;H[29728]=1}b=qa(d,0,96);ia[J[J[a>>2]+76>>2]](a,29632,b,6);c=N[a+44>>2];N[a+68>>2]=c+N[b>>2];N[a+52>>2]=N[b+48>>2]-c;N[a+72>>2]=c+N[b+20>>2];N[a+56>>2]=N[b+68>>2]-c;N[a+76>>2]=c+N[b+40>>2];N[a+60>>2]=N[b+88>>2]-c;ga=b+96|0}function qa(a,b,c){var d=0,e=0,f=0;a:{if(!c){break a}H[a|0]=b;e=a+c|0;H[e-1|0]=b;if(c>>>0<3){break a}H[a+2|0]=b;H[a+1|0]=b;H[e-3|0]=b;H[e-2|0]=b;if(c>>>0<7){break a}H[a+3|0]=b;H[e-4|0]=b;if(c>>>0<9){break a}e=0-a&3;f=e+a|0;d=P(b&255,16843009);J[f>>2]=d;b=c-e&-4;c=b+f|0;J[c-4>>2]=d;if(b>>>0<9){break a}J[f+8>>2]=d;J[f+4>>2]=d;J[c-8>>2]=d;J[c-12>>2]=d;if(b>>>0<25){break a}J[f+24>>2]=d;J[f+20>>2]=d;J[f+16>>2]=d;J[f+12>>2]=d;J[c-16>>2]=d;J[c-20>>2]=d;J[c-24>>2]=d;J[c-28>>2]=d;c=b;b=f&4|24;c=c-b|0;if(c>>>0<32){break a}d=jI(d,0,1,1);e=ha;b=b+f|0;while(1){J[b+24>>2]=d;J[b+28>>2]=e;J[b+16>>2]=d;J[b+20>>2]=e;J[b+8>>2]=d;J[b+12>>2]=e;J[b>>2]=d;J[b+4>>2]=e;b=b+32|0;c=c-32|0;if(c>>>0>31){continue}break}}return a}function eH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=ga-96|0;ga=c;b=J[b>>2];a:{if((b|0)==J[a+4>>2]){break a}d=J[a+12>>2];if(!(ia[J[J[d>>2]+8>>2]](d,J[b+188>>2])|0)){break a}d=J[a+4>>2];e=J[d+192>>2];J[c+88>>2]=-1;J[c+92>>2]=-1;J[c+84>>2]=d+4;J[c+80>>2]=d;J[c+76>>2]=e;J[c+72>>2]=0;d=J[b+192>>2];J[c+64>>2]=-1;J[c+68>>2]=-1;J[c+60>>2]=b+4;J[c+56>>2]=b;J[c+52>>2]=d;J[c+48>>2]=0;b=J[J[a+8>>2]+24>>2];b=ia[J[J[b>>2]+8>>2]](b,c+72|0,c+48|0,0)|0;if(!b){break a}e=J[a+12>>2];d=c+8|0;f=c+48|0;J[d+12>>2]=f;g=c+72|0;J[d+8>>2]=g;J[d+4>>2]=0;J[d>>2]=11524;J[c+40>>2]=e;J[c+8>>2]=8460;ia[J[J[b>>2]+8>>2]](b,g,f,J[a+8>>2]+28|0,d);ia[J[J[b>>2]>>2]](b)|0;a=J[J[a+8>>2]+24>>2];ia[J[J[a>>2]+60>>2]](a,b)}ga=c+96|0;return 1}function fk(a,b){var c=0,d=0,e=Q(0),f=Q(0),g=0;c=ga-32|0;ga=c;d=J[b+388>>2];g=(d&J[a+388>>2]&48)-16|0;a:{if(g){if((g|0)!=16){break a}if(d&64?0:(a|0)==(b|0)){break a}J[c+20>>2]=0;J[c+4>>2]=1065353216;J[c>>2]=21712;N[c+8>>2]=N[a+456>>2];d=J[a+192>>2];e=Q(ia[J[J[d>>2]+48>>2]](d));d=J[b+192>>2];N[c+12>>2]=e+Q(ia[J[J[d>>2]+48>>2]](d));e=N[b+316>>2];f=N[a+316>>2];J[c+28>>2]=b;J[c+24>>2]=a;N[c+16>>2]=e>f?f:e;jg(J[a+1048>>2],J[b+1048>>2],c);break a}if((a|0)==(b|0)){break a}J[c>>2]=21796;d=J[a+192>>2];e=Q(ia[J[J[d>>2]+48>>2]](d));d=J[b+192>>2];f=Q(ia[J[J[d>>2]+48>>2]](d));J[c+8>>2]=b;J[c+4>>2]=a;N[c+12>>2]=e+f;jg(J[a+928>>2],J[b+988>>2],c);J[c+8>>2]=a;J[c+4>>2]=b;jg(J[b+928>>2],J[a+988>>2],c)}ga=c+32|0}function vC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=ga-128|0;ga=e;ia[J[J[a>>2]+112>>2]](a);f=J[c+12>>2];J[e+104>>2]=J[c+8>>2];J[e+108>>2]=f;f=J[c+4>>2];J[e+96>>2]=J[c>>2];J[e+100>>2]=f;c=J[d+12>>2];J[e+120>>2]=J[d+8>>2];J[e+124>>2]=c;c=J[d+4>>2];J[e+112>>2]=J[d>>2];J[e+116>>2]=c;J[e+84>>2]=0;H[e+88|0]=1;J[e+76>>2]=0;J[e+80>>2]=0;Il(a+68|0,e+96|0,e+72|0);d=J[e+76>>2];if(d){c=J[a+172>>2];J[e+64>>2]=1008981770;while(1){d=d-1|0;f=d<<2;h=J[f+J[e+84>>2]>>2];g=ia[J[J[a>>2]+84>>2]](a)|0;ia[J[J[g>>2]+20>>2]](g,h,e);ia[J[J[b>>2]+8>>2]](b,e,c,J[J[e+84>>2]+f>>2]);if(d){continue}break}}ia[J[J[a>>2]+116>>2]](a);a=J[e+84>>2];if(!(a?!a|!K[e+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=e+128|0}function nt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ra(1388);cl(a,J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);b=a+1309|0;H[b|0]=0;H[b+1|0]=0;H[b+2|0]=0;H[b+3|0]=0;J[a+4>>2]=9;J[a>>2]=19604;b=a+1313|0;H[b|0]=0;H[b+1|0]=0;b=a+1316|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1324|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1332|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1340|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1348|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1356|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1380|0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;b=a+1372|0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;J[a+1364>>2]=1065353216;J[a+1368>>2]=1065353216;ga=f+32|0;return a|0}function _e(a){a=a|0;var b=0;J[a>>2]=12132;b=J[a+160>>2];if(!(b?!b|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+160>>2]=0;H[a+164|0]=1;J[a+152>>2]=0;J[a+156>>2]=0;b=J[a+136>>2];if(!(b?!b|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+136>>2]=0;H[a+140|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;b=J[a+116>>2];if(!(b?!b|!K[a+120|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+116>>2]=0;H[a+120|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;b=J[a+96>>2];if(!(b?!b|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+96>>2]=0;H[a+100|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+76>>2]=0;H[a+80|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;return a|0}function tz(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=0,k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=0;j=J[a+732>>2];if((j|0)>0){p=J[a+740>>2];while(1){d=P(i,52)+p|0;e=N[d+24>>2];a:{if(!(e>Q(0))){break a}g=N[d+28>>2];a=J[d+12>>2];d=J[d+8>>2];k=N[d+16>>2];c=Q(N[a+16>>2]-k);l=N[d+8>>2];f=Q(N[a+8>>2]-l);m=N[d+12>>2];h=Q(N[a+12>>2]-m);n=Q(Q(c*c)+Q(Q(f*f)+Q(h*h)));o=Q(g+n);if(!(o>Q(1.1920928955078125e-7))){break a}g=Q(Q(Q(g-n)/Q(e*o))*b);e=Q(g*N[d+88>>2]);N[d+16>>2]=k-Q(c*e);N[d+12>>2]=m-Q(h*e);N[d+8>>2]=l-Q(f*e);e=f;f=Q(g*N[a+88>>2]);N[a+8>>2]=N[a+8>>2]+Q(e*f);N[a+16>>2]=Q(c*f)+N[a+16>>2];N[a+12>>2]=Q(h*f)+N[a+12>>2]}i=i+1|0;if((j|0)!=(i|0)){continue}break}}}function Ak(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;d=J[a+8>>2];if((d|0)>0){while(1){c=J[J[a+16>>2]+(e<<2)>>2];if(K[c+236|0]&2){d=(g=b,h=ia[J[J[c>>2]+16>>2]](c)|0,i=1,f=J[J[b>>2]+16>>2],ia[f](g|0,h|0,i|0)|0);i=b,h=d,g=ia[J[J[c>>2]+20>>2]](c,J[d+8>>2],b)|0,j=1497645650,k=c,f=J[J[b>>2]+20>>2],ia[f](i|0,h|0,g|0,j|0,k|0);d=J[a+8>>2]}e=e+1|0;if((d|0)>(e|0)){continue}break}}if(J[a+212>>2]>0){e=0;while(1){c=J[J[a+220>>2]+(e<<2)>>2];d=(k=b,j=ia[J[J[c>>2]+36>>2]](c)|0,g=1,f=J[J[b>>2]+16>>2],ia[f](k|0,j|0,g|0)|0);g=b,j=d,k=ia[J[J[c>>2]+40>>2]](c,J[d+8>>2],b)|0,h=1397641027,i=c,f=J[J[b>>2]+20>>2],ia[f](g|0,j|0,k|0,h|0,i|0);e=e+1|0;if((e|0)<J[a+212>>2]){continue}break}}}function sk(a){a=a|0;var b=0;J[a>>2]=20804;b=J[a+144>>2];if(!(b?!b|!K[a+148|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+144>>2]=0;H[a+148|0]=1;J[a+136>>2]=0;J[a+140>>2]=0;b=J[a+76>>2];if(!(b?!b|!K[a+80|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+76>>2]=0;H[a+80|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function Bd(a){J[a+188>>2]=0;J[a+192>>2]=0;J[a+180>>2]=0;J[a+184>>2]=1566444395;J[a+164>>2]=1065353216;J[a+168>>2]=1065353216;J[a+244>>2]=1065353216;J[a+236>>2]=1;J[a+240>>2]=0;J[a+228>>2]=0;J[a+232>>2]=0;J[a+220>>2]=0;J[a+224>>2]=1056964608;J[a+212>>2]=-1;J[a+216>>2]=1;J[a+204>>2]=1;J[a+208>>2]=-1;J[a+248>>2]=0;J[a+252>>2]=0;J[a+4>>2]=1065353216;J[a+172>>2]=1065353216;J[a+176>>2]=0;J[a>>2]=6652;J[a+196>>2]=0;J[a+200>>2]=0;J[a+256>>2]=0;J[a+260>>2]=0;J[a+16>>2]=0;J[a+20>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+28>>2]=0;J[a+32>>2]=0;J[a+24>>2]=1065353216;J[a+36>>2]=0;J[a+40>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;J[a+44>>2]=1065353216;J[a+56>>2]=0;J[a+60>>2]=0;J[a- -64>>2]=0}function Pu(){var a=0;a=ra(772);J[a>>2]=1025;J[a+124>>2]=0;J[a+128>>2]=0;H[a+120|0]=0;J[a+116>>2]=0;J[a+132>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+144>>2]=0;J[a+148>>2]=0;J[a+152>>2]=0;J[a+308>>2]=0;J[a+312>>2]=0;H[a+304|0]=0;J[a+300>>2]=0;J[a+316>>2]=0;J[a+320>>2]=0;J[a+324>>2]=0;J[a+328>>2]=0;J[a+332>>2]=0;J[a+336>>2]=0;J[a+492>>2]=0;J[a+496>>2]=0;H[a+488|0]=0;J[a+484>>2]=0;J[a+500>>2]=0;J[a+504>>2]=0;J[a+508>>2]=0;J[a+512>>2]=0;J[a+516>>2]=0;J[a+520>>2]=0;H[a+672|0]=0;J[a+668>>2]=0;J[a+676>>2]=0;J[a+680>>2]=0;J[a+684>>2]=0;J[a+688>>2]=0;J[a+692>>2]=0;J[a+696>>2]=0;J[a+700>>2]=0;J[a+704>>2]=0;J[a+748>>2]=0;J[a+768>>2]=0;J[a+740>>2]=0;J[a+744>>2]=0;return a|0}function wp(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=Q(0),l=Q(0),m=0;i=ga-16|0;ga=i;J[i+12>>2]=a;J[i+8>>2]=b;m=J[i+12>>2];b=J[i+8>>2];a=ga+-64|0;ga=a;J[a+56>>2]=0;J[a+60>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;e=N[b+12>>2];g=N[b+8>>2];c=N[b>>2];d=N[b+4>>2];J[a+44>>2]=0;J[a+28>>2]=0;j=Q(Q(2)/Q(Q(e*e)+Q(Q(g*g)+Q(Q(c*c)+Q(d*d)))));k=Q(g*j);f=Q(d*k);h=Q(c*j);l=Q(e*h);N[a+36>>2]=f+l;N[a+24>>2]=f-l;f=Q(c*h);h=d;d=Q(d*j);j=Q(h*d);N[a+40>>2]=Q(1)-Q(f+j);g=Q(g*k);N[a+20>>2]=Q(1)-Q(f+g);J[a+12>>2]=0;f=Q(c*k);h=Q(e*d);N[a+32>>2]=f-h;c=Q(c*d);e=Q(e*k);N[a+16>>2]=c+e;N[a+8>>2]=f+h;N[a+4>>2]=c-e;N[a>>2]=Q(1)-Q(j+g);mg(m,a);ga=a- -64|0;ga=i+16|0}function me(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;d=J[e+12>>2];b=J[e+4>>2];h=J[e>>2];a=ga-96|0;ga=a;c=J[e+8>>2];f=J[c+192>>2];J[a+88>>2]=-1;J[a+92>>2]=-1;J[a+84>>2]=c+4;J[a+80>>2]=c;J[a+76>>2]=f;J[a+72>>2]=0;c=J[b+192>>2];J[a+64>>2]=-1;J[a+68>>2]=-1;J[a+60>>2]=b+4;J[a+56>>2]=b;J[a+52>>2]=c;J[a+48>>2]=0;b=J[d+24>>2];b=ia[J[J[b>>2]+8>>2]](b,a+72|0,a+48|0,0)|0;if(b){c=a+8|0;f=a+48|0;J[c+12>>2]=f;g=a+72|0;J[c+8>>2]=g;J[c+4>>2]=0;J[c>>2]=11524;J[a+40>>2]=h;J[a+8>>2]=8460;ia[J[J[b>>2]+8>>2]](b,g,f,d+28|0,c);ia[J[J[b>>2]>>2]](b)|0;c=J[d+24>>2];ia[J[J[c>>2]+60>>2]](c,b)}ga=a+96|0;ga=e+16|0}function UB(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);a=ga-80|0;ga=a;k=N[e+52>>2];l=N[f+52>>2];m=N[e+56>>2];n=N[f+56>>2];o=N[e+48>>2];p=N[f+48>>2];J[a+76>>2]=0;N[a+64>>2]=p-o;N[a+72>>2]=n-m;N[a+68>>2]=l-k;b=Eg(c,e,d,f,a- -64|0,a+8|0,1);a:{if(!b){if(!wl(c,e,d,f,a- -64|0,a+8|0)){break a}}c=J[a+16>>2];J[h>>2]=J[a+12>>2];J[h+4>>2]=c;c=J[a+24>>2];J[h+8>>2]=J[a+20>>2];J[h+12>>2]=c;c=J[a+40>>2];J[i+8>>2]=J[a+36>>2];J[i+12>>2]=c;c=J[a+32>>2];J[i>>2]=J[a+28>>2];J[i+4>>2]=c;c=J[a+56>>2];J[g+8>>2]=J[a+52>>2];J[g+12>>2]=c;c=J[a+48>>2];J[g>>2]=J[a+44>>2];J[g+4>>2]=c}ga=a+80|0;return b|0}function ym(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0),s=Q(0),t=Q(0),u=Q(0);e=Q(ia[J[J[a>>2]+48>>2]](a));j=N[b+52>>2];h=N[b+20>>2];m=N[b+24>>2];k=N[b+56>>2];i=N[b+36>>2];n=N[a+32>>2];f=N[b+40>>2];g=N[a+36>>2];l=N[b+48>>2];o=N[b>>2];p=N[b+4>>2];q=N[b+8>>2];r=N[b+16>>2];s=N[b+32>>2];t=N[a+28>>2];J[c+12>>2]=0;g=Q(e+g);u=Q(g*Q(R(f)));f=Q(e+t);e=Q(e+n);i=Q(u+Q(Q(f*Q(R(s)))+Q(e*Q(R(i)))));N[c+8>>2]=k-i;h=Q(Q(g*Q(R(m)))+Q(Q(f*Q(R(r)))+Q(e*Q(R(h)))));N[c+4>>2]=j-h;e=Q(Q(g*Q(R(q)))+Q(Q(f*Q(R(o)))+Q(e*Q(R(p)))));N[c>>2]=l-e;J[d+12>>2]=0;N[d+8>>2]=k+i;N[d+4>>2]=h+j;N[d>>2]=e+l}function hI(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0);e=J[a- -64>>2];a=J[a+4>>2];a:{if(a){k=N[a>>2];if(e){d=N[a+24>>2];f=N[e+24>>2];f=d>f?d:f;d=N[a+20>>2];g=N[e+20>>2];g=d>g?d:g;d=N[a+8>>2];h=N[e+8>>2];h=d<h?d:h;d=N[a+4>>2];i=N[e+4>>2];i=d<i?d:i;d=N[a+16>>2];j=N[e+16>>2];j=d>j?d:j;d=N[e>>2];k=d>k?k:d;break a}l=N[a+28>>2];f=N[a+24>>2];g=N[a+20>>2];j=N[a+16>>2];d=N[a+12>>2];h=N[a+8>>2];i=N[a+4>>2];break a}if(!e){break a}l=N[e+28>>2];f=N[e+24>>2];g=N[e+20>>2];j=N[e+16>>2];d=N[e+12>>2];h=N[e+8>>2];i=N[e+4>>2];k=N[e>>2]}N[b+12>>2]=d;N[b+8>>2]=h;N[b+4>>2]=i;N[b>>2]=k;N[c+12>>2]=l;N[c+8>>2]=f;N[c+4>>2]=g;N[c>>2]=j}function RH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=Q(0);d=ga-80|0;ga=d;e=J[J[a>>2]>>2];f=J[J[a+4>>2]>>2];a:{if(!(ia[J[J[b>>2]+24>>2]](b,e,f)|0)){break a}g=J[e+192>>2];J[d+72>>2]=-1;J[d+76>>2]=-1;J[d+68>>2]=e+4;J[d+64>>2]=e;J[d+60>>2]=g;J[d+56>>2]=0;g=J[f+192>>2];J[d+48>>2]=-1;J[d+52>>2]=-1;J[d+44>>2]=f+4;J[d+40>>2]=f;J[d+36>>2]=g;J[d+32>>2]=0;if(!J[a+8>>2]){b=ia[J[J[b>>2]+8>>2]](b,d+56|0,d+32|0,0)|0;J[a+8>>2]=b;if(!b){break a}}J[d+12>>2]=d+32;J[d+8>>2]=d+56;J[d+4>>2]=0;J[d>>2]=11524;a=J[a+8>>2];if(J[c+8>>2]==1){ia[J[J[a>>2]+8>>2]](a,d+56|0,d+32|0,c,d);break a}h=Q(ia[J[J[a>>2]+12>>2]](a,e,f,c,d));if(!(h<N[c+12>>2])){break a}N[c+12>>2]=h}ga=d+80|0}function hE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);f=N[a+20>>2];g=N[a+32>>2];h=N[a+24>>2];i=N[a+28>>2];e=Q(Q(g*N[b+8>>2])+Q(Q(h*N[b>>2])+Q(i*N[b+4>>2])));if(f<e){N[a+20>>2]=e;c=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=c;c=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=c;f=e}e=Q(Q(g*N[b+24>>2])+Q(Q(h*N[b+16>>2])+Q(i*N[b+20>>2])));if(e>f){N[a+20>>2]=e;c=J[b+28>>2];J[a+12>>2]=J[b+24>>2];J[a+16>>2]=c;c=J[b+20>>2];J[a+4>>2]=J[b+16>>2];J[a+8>>2]=c}else{e=f}f=Q(Q(g*N[b+40>>2])+Q(Q(h*N[b+32>>2])+Q(i*N[b+36>>2])));if(e<f){N[a+20>>2]=f;c=J[b+44>>2];J[a+12>>2]=J[b+40>>2];J[a+16>>2]=c;c=J[b+36>>2];J[a+4>>2]=J[b+32>>2];J[a+8>>2]=c}}function eF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0);d=ga-96|0;ga=d;J[d+44>>2]=0;J[d+48>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+52>>2]=1065353216;g=d- -64|0;J[g>>2]=0;J[g+4>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+72>>2]=1065353216;J[d+84>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=1065353216;ia[J[J[a>>2]+8>>2]](a,d+32|0,d+16|0,d);h=N[d+8>>2];i=N[d+24>>2];e=Q(h-i);m=Q(e*e);e=N[d>>2];j=N[d+16>>2];f=Q(e-j);n=Q(f*f);f=N[d+4>>2];k=N[d+20>>2];l=Q(f-k);N[c>>2]=Q(Y(Q(m+Q(n+Q(l*l)))))*Q(.5);J[b+12>>2]=0;N[b+8>>2]=Q(h+i)*Q(.5);N[b+4>>2]=Q(f+k)*Q(.5);N[b>>2]=Q(e+j)*Q(.5);ga=d+96|0}function JC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);f=N[a+84>>2];g=N[a+96>>2];h=N[a+88>>2];i=N[a+92>>2];e=Q(Q(g*N[b+8>>2])+Q(Q(h*N[b>>2])+Q(i*N[b+4>>2])));if(f<e){N[a+84>>2]=e;c=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=c;c=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=c;f=e}e=Q(Q(g*N[b+24>>2])+Q(Q(h*N[b+16>>2])+Q(i*N[b+20>>2])));if(e>f){N[a+84>>2]=e;c=J[b+28>>2];J[a+12>>2]=J[b+24>>2];J[a+16>>2]=c;c=J[b+20>>2];J[a+4>>2]=J[b+16>>2];J[a+8>>2]=c}else{e=f}f=Q(Q(g*N[b+40>>2])+Q(Q(h*N[b+32>>2])+Q(i*N[b+36>>2])));if(e<f){N[a+84>>2]=f;c=J[b+44>>2];J[a+12>>2]=J[b+40>>2];J[a+16>>2]=c;c=J[b+36>>2];J[a+4>>2]=J[b+32>>2];J[a+8>>2]=c}}function vx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;a=J[e+8>>2];b=ga-32|0;ga=b;J[b+28>>2]=J[e+12>>2];J[b+24>>2]=a;a=b+8|0;f=J[b+28>>2];wa(a,f,J[b+24>>2]+48|0);jb(f+48|0,a);c=J[b+24>>2];a=ga-48|0;ga=a;J[a+44>>2]=f;J[a+40>>2]=c;c=J[a+44>>2];N[a+36>>2]=oc(J[a+40>>2],c);N[a+32>>2]=nc(J[a+40>>2],c);N[a+28>>2]=mc(J[a+40>>2],c);d=c+16|0;N[a+24>>2]=oc(J[a+40>>2],d);N[a+20>>2]=nc(J[a+40>>2],d);N[a+16>>2]=mc(J[a+40>>2],d);d=c+32|0;N[a+12>>2]=oc(J[a+40>>2],d);N[a+8>>2]=nc(J[a+40>>2],d);N[a+4>>2]=mc(J[a+40>>2],d);ld(c,a+36|0,a+32|0,a+28|0,a+24|0,a+20|0,a+16|0,a+12|0,a+8|0,a+4|0);ga=a+48|0;ga=b+32|0;ga=e+16|0;return f|0}function Cg(a,b,c,d){var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0);i=N[c+24>>2];e=N[b+24>>2];l=Q(i-e);j=N[c+16>>2];g=N[b+16>>2];m=Q(j-g);f=N[a+4>>2];o=N[a>>2];k=N[c+20>>2];h=N[b+20>>2];n=Q(k-h);p=N[a+8>>2];a=Q(Q(e*Q(Q(m*f)-Q(o*n)))+Q(Q(g*Q(Q(n*p)-Q(f*l)))+Q(h*Q(Q(l*o)-Q(p*m)))))<Q(0);if(a){f=Q(Q(e*e)+Q(Q(g*g)+Q(h*h)));a:{if(Q(Q(e*l)+Q(Q(g*m)+Q(h*n)))>Q(0)){break a}f=Q(Q(i*i)+Q(Q(j*j)+Q(k*k)));if(Q(Q(i*l)+Q(Q(j*m)+Q(k*n)))<Q(0)){break a}f=Q(Q(Q(e*e)+Q(Q(g*g)+Q(h*h)))*Q(Q(i*i)+Q(Q(j*j)+Q(k*k))));e=Q(Q(e*i)+Q(Q(g*j)+Q(k*h)));e=Q(Q(f-Q(e*e))/Q(Q(l*l)+Q(Q(m*m)+Q(n*n))));f=e>Q(0)?e:Q(0)}N[d>>2]=Y(f)}return a}function Wl(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=15728;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;e=J[a+28>>2];if((e|0)>0){while(1){b=J[a+36>>2]+P(c,36)|0;d=J[b+12>>2];if(!(d?!d|!K[b+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](d)}H[b+16|0]=1;J[b+12>>2]=0;J[b+4>>2]=0;J[b+8>>2]=0;c=c+1|0;if((e|0)!=(c|0)){continue}break}}b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function rj(a,b){var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;d=ga-96|0;ga=d;J[d+92>>2]=a;J[d+88>>2]=b;m=J[d+88>>2];b=ga-16|0;ga=b;h=d+40|0;J[b+12>>2]=h;J[b+8>>2]=m;e=ga-16|0;c=J[b+8>>2];J[e+12>>2]=c;n=J[e+12>>2];g=ga-16|0;e=c+16|0;J[g+12>>2]=e;o=J[g+12>>2];i=ga-16|0;g=c+32|0;J[i+12>>2]=g;i=J[i+12>>2];j=ga-16|0;J[j+12>>2]=c;j=J[j+12>>2]+4|0;k=ga-16|0;J[k+12>>2]=e;k=J[k+12>>2]+4|0;l=ga-16|0;J[l+12>>2]=g;l=J[l+12>>2]+4|0;f=ga-16|0;J[f+12>>2]=c;c=J[f+12>>2]+8|0;f=ga-16|0;J[f+12>>2]=e;e=J[f+12>>2]+8|0;f=ga-16|0;J[f+12>>2]=g;qf(h,n,o,i,j,k,l,c,e,J[f+12>>2]+8|0);ga=b+16|0;b=d+8|0;$b(b,m+48|0);c=d+24|0;wa(c,h,b);Vf(a,h,c);ga=d+96|0}function Sx(a){a=a|0;var b=0,c=0,d=0,e=0;b=ga-32|0;ga=b;J[b+28>>2]=a;if(!K[29108]){J[(ga-16|0)+12>>2]=29092;H[29108]=1}d=b+8|0;a=ga-48|0;ga=a;J[a+44>>2]=J[b+28>>2];c=J[a+44>>2];N[a+40>>2]=Q(Q(-N[c+12>>2])*N[c+12>>2])+Q(1);a:{if(N[a+40>>2]<Q(11920928955078125e-22)){N[a+36>>2]=1;N[a+32>>2]=0;N[a+28>>2]=0;na(d,a+36|0,a+32|0,a+28|0);break a}e=ga-16|0;N[e+12>>2]=N[a+40>>2];N[a+24>>2]=Q(1)/Q(Y(N[e+12>>2]));N[a+20>>2]=N[c>>2]*N[a+24>>2];N[a+16>>2]=N[c+4>>2]*N[a+24>>2];N[a+12>>2]=N[c+8>>2]*N[a+24>>2];na(d,a+20|0,a+16|0,a+12|0)}ga=a+48|0;a=J[b+12>>2];J[7273]=J[b+8>>2];J[7274]=a;a=J[b+20>>2];J[7275]=J[b+16>>2];J[7276]=a;ga=b+32|0;return 29092}function Bl(a){a=a|0;var b=0,c=0,d=0;J[a>>2]=18016;b=J[a+152>>2];a:{if(!b){break a}c=b;b:{if(!(b&1)){break b}c=b-1|0;d=J[J[a+160>>2]+(c<<2)>>2];if(!d){break b}ia[J[J[d>>2]+4>>2]](d)}if((b|0)==1){break a}while(1){b=J[(J[a+160>>2]+(c<<2)|0)-4>>2];if(b){ia[J[J[b>>2]+4>>2]](b)}c=c-2|0;b=J[J[a+160>>2]+(c<<2)>>2];if(b){ia[J[J[b>>2]+4>>2]](b)}if(c){continue}break}}b=J[a+160>>2];if(!(b?!b|!K[a+164|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+160>>2]=0;H[a+164|0]=1;J[a+152>>2]=0;J[a+156>>2]=0;J[a>>2]=4660;b=J[a+84>>2];if(!(b?!b|!K[a+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+84>>2]=0;H[a+88|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;return a|0}function Jd(a,b,c,d){var e=Q(0),f=Q(0),g=Q(0),h=Q(0);g=Q(N[c+8>>2]-N[a+16>>2]);h=N[a+48>>2];f=Q(Q(N[c+4>>2]-N[a+12>>2])*N[a+44>>2]);e=Q(Q(N[c>>2]-N[a+8>>2])*N[a+40>>2]);c=d;a:{if(e<=Q(0)){break a}c=L[a+6>>1];if(e>=Q(c>>>0)){c=c&L[a+4>>1]|d;break a}if(e<Q(4294967296)&e>=Q(0)){c=~~e>>>0}else{c=0}c=c&L[a+4>>1]|d}e=Q(g*h);I[b>>1]=c;c=d;b:{if(f<=Q(0)){break b}c=L[a+6>>1];if(Q(c>>>0)<=f){c=c&L[a+4>>1]|d;break b}if(f<Q(4294967296)&f>=Q(0)){c=~~f>>>0}else{c=0}c=c&L[a+4>>1]|d}I[b+2>>1]=c;if(!(e<=Q(0))){c=L[a+6>>1];if(e>=Q(c>>>0)){I[b+4>>1]=c&L[a+4>>1]|d;return}if(e<Q(4294967296)&e>=Q(0)){c=~~e>>>0}else{c=0}d=c&L[a+4>>1]|d}I[b+4>>1]=d}function jo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;H[d+23|0]=c;a=J[d+28>>2];N[a+4>>2]=N[J[d+24>>2]+40>>2];J[a+76>>2]=J[J[d+24>>2]>>2];a:{if(H[d+23|0]&1){b=J[d+24>>2];c=J[b+12>>2];J[a+44>>2]=J[b+8>>2];J[a+48>>2]=c;c=J[b+20>>2];J[a+52>>2]=J[b+16>>2];J[a+56>>2]=c;break a}b=ga-16|0;J[b+12>>2]=J[a+76>>2];J[b+12>>2]=J[b+12>>2]+4;wa(d,J[b+12>>2],J[d+24>>2]+8|0);b=J[d+4>>2];J[a+44>>2]=J[d>>2];J[a+48>>2]=b;b=J[d+12>>2];J[a+52>>2]=J[d+8>>2];J[a+56>>2]=b}b=J[d+24>>2];c=J[b+28>>2];J[a+60>>2]=J[b+24>>2];J[a+64>>2]=c;c=J[b+36>>2];J[a+68>>2]=J[b+32>>2];J[a+72>>2]=c;ga=d+32|0;return Q(N[J[d+24>>2]+40>>2])}function Bz(a,b){a=a|0;b=Q(b);var c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=0,j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=0;i=J[a+732>>2];if((i|0)>0){o=J[a+740>>2];while(1){c=P(h,52)+o|0;d=J[c+8>>2];f=N[d+48>>2];g=N[c+44>>2];a=J[c+12>>2];j=N[c+36>>2];k=N[d+40>>2];l=N[d+44>>2];m=N[c+40>>2];n=Q(Q(N[c+32>>2]*Q(-Q(Q(g*Q(f-N[a+48>>2]))+Q(Q(j*Q(k-N[a+40>>2]))+Q(Q(l-N[a+44>>2])*m)))))*b);e=Q(N[d+88>>2]*n);N[d+48>>2]=f+Q(g*e);N[d+44>>2]=l+Q(m*e);N[d+40>>2]=k+Q(j*e);f=N[c+44>>2];g=N[c+40>>2];e=Q(n*N[a+88>>2]);N[a+40>>2]=N[a+40>>2]-Q(N[c+36>>2]*e);N[a+44>>2]=N[a+44>>2]-Q(e*g);N[a+48>>2]=N[a+48>>2]-Q(e*f);h=h+1|0;if((i|0)!=(h|0)){continue}break}}}function ZE(a){a=a|0;var b=Q(0),c=0,d=0,e=0,f=0;c=ga-32|0;ga=c;J[a+48>>2]=-581039253;J[a+52>>2]=-581039253;J[a+32>>2]=1566444395;J[a+36>>2]=1566444395;J[a+56>>2]=-581039253;J[a+60>>2]=0;J[a+40>>2]=1566444395;J[a+44>>2]=0;if(J[a+16>>2]>0){while(1){e=J[a+24>>2]+P(d,80)|0;f=J[e+64>>2];ia[J[J[f>>2]+8>>2]](f,e,c+16|0,c);b=N[c+16>>2];if(b<N[a+32>>2]){N[a+32>>2]=b}b=N[c>>2];if(b>N[a+48>>2]){N[a+48>>2]=b}b=N[c+20>>2];if(b<N[a+36>>2]){N[a+36>>2]=b}b=N[c+4>>2];if(b>N[a+52>>2]){N[a+52>>2]=b}b=N[c+24>>2];if(b<N[a+40>>2]){N[a+40>>2]=b}b=N[c+8>>2];if(b>N[a+56>>2]){N[a+56>>2]=b}d=d+1|0;if((d|0)<J[a+16>>2]){continue}break}}ga=c+32|0}function Hz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0);c=ga-48|0;ga=c;if(J[a+136>>2]>0){while(1){g=P(f,284);d=g+J[a+144>>2]|0;e=K[d+84|0];J[c+44>>2]=0;J[c+36>>2]=0;J[c+40>>2]=1065353216;N[c+32>>2]=e?Q(0):Q(1);e=J[d+152>>2];J[c+24>>2]=J[d+148>>2];J[c+28>>2]=e;e=J[d+144>>2];J[c+16>>2]=J[d+140>>2];J[c+20>>2]=e;d=d+(J[a+120>>2]<<2)|0;h=N[d+92>>2];i=N[d+108>>2];j=N[d+124>>2];J[c+12>>2]=0;N[c+8>>2]=j+N[c+24>>2];N[c+4>>2]=i+N[c+20>>2];N[c>>2]=h+N[c+16>>2];d=c+16|0;e=c+32|0;ia[J[J[b>>2]+8>>2]](b,d,c,e);ia[J[J[b>>2]+8>>2]](b,d,(J[a+144>>2]+g|0)+16|0,e);f=f+1|0;if((f|0)<J[a+136>>2]){continue}break}}ga=c+48|0}function ot(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=ra(1388);bl(a,J[d+12>>2],J[d+8>>2],H[d+7|0]&1);b=a+1309|0;H[b|0]=0;H[b+1|0]=0;H[b+2|0]=0;H[b+3|0]=0;J[a+4>>2]=9;J[a>>2]=19604;b=a+1313|0;H[b|0]=0;H[b+1|0]=0;b=a+1316|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1324|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1332|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1340|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1348|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1356|0;J[b>>2]=0;J[b+4>>2]=0;b=a+1380|0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;b=a+1372|0;J[b>>2]=1065353216;J[b+4>>2]=1065353216;J[a+1364>>2]=1065353216;J[a+1368>>2]=1065353216;ga=d+16|0;return a|0}function On(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+44>>2]=a;J[e+40>>2]=b;J[e+36>>2]=c;J[e+32>>2]=d;a=J[e+44>>2]+16|0;b=ga-16|0;J[b+12>>2]=e;J[b+8>>2]=a;c=J[b+8>>2];d=J[c+4>>2];a=J[b+12>>2];J[a>>2]=J[c>>2];J[a+4>>2]=d;d=J[c+12>>2];J[a+8>>2]=J[c+8>>2];J[a+12>>2]=d;b=J[b+8>>2];c=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=c;c=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=c;Gh(e,J[e+40>>2]);b=J[e+4>>2];a=J[e+36>>2];J[a>>2]=J[e>>2];J[a+4>>2]=b;b=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=b;b=J[e+20>>2];a=J[e+32>>2];J[a>>2]=J[e+16>>2];J[a+4>>2]=b;b=J[e+28>>2];J[a+8>>2]=J[e+24>>2];J[a+12>>2]=b;ga=e+48|0}function gl(a,b,c,d){var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);f=Ha(c);e=N[b+444>>2];c=Ga(c);a:{if(!(Q(R(f))>Q(1.1920928955078125e-7))){h=Q(f*f);break a}h=Q(f*f);g=Q(Q(c*c)/h);i=Q(g/Q(e*e));e=N[b+448>>2];e=Q(Y(Q(Q(g+Q(1))/Q(i+Q(Q(1)/Q(e*e))))))}J[a+12>>2]=0;e=Q(e*Q(.5));g=Q(Ga(e)/Q(Y(Q(Q(c*c)+Q(h+Q(0))))));c=Q(g*Q(-c));e=Ha(e);i=Q(e*Q(0));h=Q(g*Q(0));j=Q(h*Q(0));k=Q(Q(i+Q(c*d))-j);f=Q(f*g);g=Q(Q(i+j)-Q(f*d));j=Q(c*Q(-0));i=Q(j+Q(Q(f*Q(-0))-Q(h*d)));d=Q(j+Q(Q(e*d)+Q(f*Q(0))));N[a+8>>2]=Q(k*h)+Q(Q(Q(e*g)-Q(i*c))-Q(d*f));N[a+4>>2]=Q(d*c)+Q(Q(Q(e*k)-Q(i*f))-Q(g*h));N[a>>2]=Q(g*f)+Q(Q(Q(e*d)-Q(i*h))-Q(k*c))}function _p(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;if(!K[29424]){gi(29328);H[29424]=1}b=J[e+8>>2];a=ga-16|0;J[a+12>>2]=J[e+12>>2];J[a+8>>2]=b;b=J[J[a+12>>2]+12>>2]+P(J[a+8>>2],96)|0;ga=a;J[a+12>>2]=29328;J[a+8>>2]=b;c=J[a+8>>2];d=J[c+4>>2];b=J[a+12>>2];J[b>>2]=J[c>>2];J[b+4>>2]=d;J[b+24>>2]=J[c+24>>2];d=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=d;d=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=d;tg(b+28|0,J[a+8>>2]+28|0);c=J[a+8>>2];d=J[c+80>>2];J[b+76>>2]=J[c+76>>2];J[b+80>>2]=d;J[b+92>>2]=J[c+92>>2];d=J[c+88>>2];J[b+84>>2]=J[c+84>>2];J[b+88>>2]=d;ga=a+16|0;ga=e+16|0;return 29328}function XE(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0);d=ga-96|0;ga=d;J[d+44>>2]=0;J[d+48>>2]=0;J[d+56>>2]=0;J[d+60>>2]=0;J[d+52>>2]=1065353216;h=d- -64|0;J[h>>2]=0;J[h+4>>2]=0;J[d+76>>2]=0;J[d+80>>2]=0;J[d+72>>2]=1065353216;J[d+84>>2]=0;J[d+88>>2]=0;J[d+92>>2]=0;J[d+36>>2]=0;J[d+40>>2]=0;J[d+32>>2]=1065353216;ia[J[J[a>>2]+8>>2]](a,d+32|0,d+16|0,d);e=N[d+24>>2];i=N[d+8>>2];b=Q(b/Q(12));f=Q(Q(N[d>>2]-N[d+16>>2])*Q(.5));f=Q(f+f);f=Q(f*f);g=Q(Q(N[d+4>>2]-N[d+20>>2])*Q(.5));g=Q(g+g);g=Q(g*g);N[c+8>>2]=b*Q(f+g);e=Q(Q(i-e)*Q(.5));e=Q(e+e);e=Q(e*e);N[c+4>>2]=b*Q(f+e);N[c>>2]=b*Q(g+e);ga=d+96|0}function sD(a,b){a=a|0;b=b|0;var c=Q(0),d=0;d=ga-96|0;ga=d;Ve(a,b);H[a+88|0]=1;if(!K[29840]){J[7437]=0;J[7438]=0;J[7436]=1065353216;J[7439]=0;J[7440]=0;J[7442]=0;J[7443]=0;J[7441]=1065353216;J[7444]=0;J[7445]=0;J[7449]=0;J[7450]=0;J[7448]=-1082130432;J[7446]=1065353216;J[7447]=0;J[7451]=0;J[7452]=0;J[7454]=0;J[7455]=0;J[7453]=-1082130432;J[7456]=0;J[7457]=0;J[7458]=-1082130432;J[7459]=0;H[29840]=1}b=qa(d,0,96);ia[J[J[a>>2]+76>>2]](a,29744,b,6);c=N[a+44>>2];N[a+72>>2]=c+N[b>>2];N[a+56>>2]=N[b+48>>2]-c;N[a+76>>2]=c+N[b+20>>2];N[a+60>>2]=N[b+68>>2]-c;N[a+80>>2]=c+N[b+40>>2];N[a- -64>>2]=N[b+88>>2]-c;ga=b+96|0}function Zw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e);var f=0,g=0,h=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;N[f+12>>2]=e;d=ua(44);b=J[f+28>>2];c=J[f+24>>2];g=J[f+20>>2];h=J[f+16>>2];e=N[f+12>>2];a=ga-32|0;J[a+28>>2]=d;J[a+24>>2]=b;J[a+20>>2]=c;J[a+16>>2]=g;J[a+12>>2]=h;N[a+8>>2]=e;b=J[a+28>>2];J[b>>2]=J[a+24>>2];J[b+4>>2]=J[a+20>>2];c=J[a+16>>2];g=J[c+4>>2];J[b+8>>2]=J[c>>2];J[b+12>>2]=g;g=J[c+12>>2];J[b+16>>2]=J[c+8>>2];J[b+20>>2]=g;c=J[a+12>>2];g=J[c+4>>2];J[b+24>>2]=J[c>>2];J[b+28>>2]=g;g=J[c+12>>2];J[b+32>>2]=J[c+8>>2];J[b+36>>2]=g;N[b+40>>2]=N[a+8>>2];ga=f+32|0;return d|0}function Lv(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;b=N[e+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[e+12>>2];N[a+8>>2]=b;b=N[a+8>>2];c=ga-16|0;d=J[a+12>>2];J[c+12>>2]=d;c=J[c+12>>2];N[c>>2]=N[c>>2]-b;b=N[a+8>>2];c=ga-16|0;J[c+12>>2]=d;c=J[c+12>>2];N[c+4>>2]=N[c+4>>2]-b;b=N[a+8>>2];c=ga-16|0;J[c+12>>2]=d;c=J[c+12>>2];N[c+8>>2]=N[c+8>>2]-b;b=N[a+8>>2];c=ga-16|0;d=d+16|0;J[c+12>>2]=d;c=J[c+12>>2];N[c>>2]=N[c>>2]+b;b=N[a+8>>2];c=ga-16|0;J[c+12>>2]=d;c=J[c+12>>2];N[c+4>>2]=N[c+4>>2]+b;b=N[a+8>>2];c=ga-16|0;J[c+12>>2]=d;d=J[c+12>>2];N[d+8>>2]=N[d+8>>2]+b;ga=a+16|0;ga=e+16|0}function zh(a,b){var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){d=J[c+8>>2];b=ga-16|0;ga=b;J[b+8>>2]=a;J[b+4>>2]=d;e=J[b+8>>2];a:{if(J[b+4>>2]){f=J[b+4>>2];d=ga-16|0;ga=d;J[d+12>>2]=e;J[d+8>>2]=f;J[d+4>>2]=0;e=P(J[d+8>>2],36);J[8369]=J[8369]+1;e=ia[J[6782]](e,16)|0;ga=d+16|0;J[b+12>>2]=e;break a}J[b+12>>2]=0}ga=b+16|0;J[c+4>>2]=J[b+12>>2];b=ga-16|0;J[b+12>>2]=a;Ah(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Bh(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function di(a,b){var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){d=J[c+8>>2];b=ga-16|0;ga=b;J[b+8>>2]=a;J[b+4>>2]=d;e=J[b+8>>2];a:{if(J[b+4>>2]){f=J[b+4>>2];d=ga-16|0;ga=d;J[d+12>>2]=e;J[d+8>>2]=f;J[d+4>>2]=0;e=P(J[d+8>>2],96);J[8369]=J[8369]+1;e=ia[J[6782]](e,16)|0;ga=d+16|0;J[b+12>>2]=e;break a}J[b+12>>2]=0}ga=b+16|0;J[c+4>>2]=J[b+12>>2];b=ga-16|0;J[b+12>>2]=a;xh(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Eb(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function Sh(a,b){var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){d=J[c+8>>2];b=ga-16|0;ga=b;J[b+8>>2]=a;J[b+4>>2]=d;e=J[b+8>>2];a:{if(J[b+4>>2]){f=J[b+4>>2];d=ga-16|0;ga=d;J[d+12>>2]=e;J[d+8>>2]=f;J[d+4>>2]=0;e=J[d+8>>2]<<4;J[8369]=J[8369]+1;e=ia[J[6782]](e,16)|0;ga=d+16|0;J[b+12>>2]=e;break a}J[b+12>>2]=0}ga=b+16|0;J[c+4>>2]=J[b+12>>2];b=ga-16|0;J[b+12>>2]=a;Oh(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Eb(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function Sb(a){var b=0,c=Q(0);b=ga-96|0;ga=b;H[a+88|0]=1;if(!K[29840]){J[7437]=0;J[7438]=0;J[7436]=1065353216;J[7439]=0;J[7440]=0;J[7442]=0;J[7443]=0;J[7441]=1065353216;J[7444]=0;J[7445]=0;J[7449]=0;J[7450]=0;J[7448]=-1082130432;J[7446]=1065353216;J[7447]=0;J[7451]=0;J[7452]=0;J[7454]=0;J[7455]=0;J[7453]=-1082130432;J[7456]=0;J[7457]=0;J[7458]=-1082130432;J[7459]=0;H[29840]=1}b=qa(b,0,96);ia[J[J[a>>2]+76>>2]](a,29744,b,6);c=N[a+44>>2];N[a+72>>2]=N[b>>2]+c;N[a+56>>2]=N[b+48>>2]-c;N[a+76>>2]=c+N[b+20>>2];N[a+60>>2]=N[b+68>>2]-c;N[a+80>>2]=c+N[b+40>>2];N[a- -64>>2]=N[b+88>>2]-c;ga=b+96|0}function kd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;b=J[e+8>>2];c=J[e+4>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[e+12>>2];J[a+8>>2]=b;J[a+4>>2]=c;c=J[a+8>>2];d=J[c+4>>2];b=J[a+12>>2];J[b+164>>2]=J[c>>2];J[b+168>>2]=d;d=J[c+12>>2];J[b+172>>2]=J[c+8>>2];J[b+176>>2]=d;d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=1;a:{if(N[J[d+12>>2]>>2]!=Q(1)){break a}d=ga-16|0;J[d+12>>2]=J[a+8>>2];c=1;if(N[J[d+12>>2]+4>>2]!=Q(1)){break a}c=ga-16|0;J[c+12>>2]=J[a+8>>2];c=N[J[c+12>>2]+8>>2]!=Q(1)}H[a+3|0]=c;if(H[a+3|0]&1){c=J[a+4>>2]}else{c=0}J[b+180>>2]=c;ga=a+16|0;ga=e+16|0}function Yw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;f=ua(80);a=J[e+12>>2];c=J[e+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;J[b+4>>2]=c;c=ga-16|0;a=J[b+12>>2];J[c+12>>2]=a;c=J[c+12>>2];J[c>>2]=1952;N[c+4>>2]=1;I[c+8>>1]=1;I[c+10>>1]=65535;J[a>>2]=1812;c=J[b+8>>2];d=J[c+4>>2];J[a+12>>2]=J[c>>2];J[a+16>>2]=d;d=J[c+12>>2];J[a+20>>2]=J[c+8>>2];J[a+24>>2]=d;c=J[b+4>>2];d=J[c+4>>2];J[a+28>>2]=J[c>>2];J[a+32>>2]=d;d=J[c+12>>2];J[a+36>>2]=J[c+8>>2];J[a+40>>2]=d;J[(ga-16|0)+12>>2]=a+44;J[(ga-16|0)+12>>2]=a+60;J[a+76>>2]=0;ga=b+16|0;ga=e+16|0;return f|0}function Mp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;b=0;c=J[e+12>>2];f=J[c+752>>2];if((f|0)>0){a=J[c+720>>2];g=a+P(J[e>>2],104)|0;h=a+P(J[e+4>>2],104)|0;i=a+P(J[e+8>>2],104)|0;c=J[c+760>>2];a=0;b=1;while(1){a:{j=P(a,44)+c|0;d=J[j+8>>2];b:{if(!((d|0)==(g|0)|(d|0)==(i|0))&(d|0)!=(h|0)){break b}d=J[j+12>>2];if(!((d|0)==(g|0)|(d|0)==(i|0))&(d|0)!=(h|0)){break b}d=J[j+16>>2];if((d|0)==(g|0)|(d|0)==(i|0)|(d|0)==(h|0)){break a}}a=a+1|0;b=(f|0)>(a|0);if((a|0)!=(f|0)){continue}}break}}ga=e+16|0;return b&1}function mh(a){var b=0,c=0,d=0,e=0,f=0;H[a+28|0]=0;J[a+24>>2]=0;J[a+72>>2]=0;H[a+20|0]=1;J[a>>2]=6004;J[a+16>>2]=0;H[a+48|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;J[a+44>>2]=0;H[a+68|0]=1;J[a+36>>2]=0;J[a+40>>2]=0;J[a- -64>>2]=0;J[a+56>>2]=0;J[a+60>>2]=0;J[8369]=J[8369]+1;e=ia[J[6782]](32,16)|0;f=J[a+8>>2];if((f|0)>0){while(1){c=d<<4;b=c+e|0;c=c+J[a+16>>2]|0;J[b>>2]=J[c>>2];J[b+4>>2]=J[c+4>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=J[c+12>>2];d=d+1|0;if((f|0)!=(d|0)){continue}break}}b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=e;H[a+20|0]=1;J[a+12>>2]=2;an(a)}function Rm(a,b,c,d,e){a=a|0;b=b|0;c=Q(c);d=d|0;e=e|0;var f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0),n=Q(0),o=Q(0),p=Q(0),q=Q(0),r=Q(0);f=ga-48|0;ga=f;J[f+44>>2]=e;J[f+40>>2]=d;j=N[a- -64>>2];k=N[a+60>>2];l=N[a+80>>2];m=N[a+72>>2];n=N[a+76>>2];o=N[a+96>>2];p=N[a+88>>2];q=N[a+92>>2];r=N[a+56>>2];g=N[b+8>>2];h=N[b>>2];i=N[b+4>>2];b=J[a+48>>2];J[f+28>>2]=0;N[f+24>>2]=Q(o*g)+Q(Q(p*h)+Q(i*q));N[f+20>>2]=Q(l*g)+Q(Q(m*h)+Q(i*n));N[f+32>>2]=c;J[f+8>>2]=b;N[f+16>>2]=Q(j*g)+Q(Q(r*h)+Q(k*i));J[f+12>>2]=f+40;a=J[a+44>>2];c=Q(ia[J[J[a>>2]+12>>2]](a,f+8|0,1));ga=f+48|0;return Q(c)}function gy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;if(Ya(a,J[b+8>>2],f)){$f(b,c,d,e);return}h=K[b+53|0];g=J[a+12>>2];H[b+53|0]=0;i=K[b+52|0];H[b+52|0]=0;j=a+16|0;_f(j,b,c,d,e,f);k=K[b+53|0];h=h|k;l=K[b+52|0];i=i|l;a:{if((g|0)<2){break a}j=j+(g<<3)|0;g=a+24|0;while(1){if(K[b+54|0]){break a}b:{if(l){if(J[b+24>>2]==1){break a}if(K[a+8|0]&2){break b}break a}if(!k){break b}if(!(H[a+8|0]&1)){break a}}I[b+52>>1]=0;_f(g,b,c,d,e,f);k=K[b+53|0];h=k|h;l=K[b+52|0];i=l|i;g=g+8|0;if(j>>>0>g>>>0){continue}break}}H[b+53|0]=(h&255)!=0;H[b+52|0]=(i&255)!=0}function Yx(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;b=J[d+8>>2];a=ga-48|0;ga=a;J[a+44>>2]=J[d+12>>2];J[a+40>>2]=b;J[a+36>>2]=d+4;b=J[a+44>>2];N[a+32>>2]=sf(J[a+40>>2]);N[a+28>>2]=Sa(Q(N[J[a+36>>2]>>2]*Q(.5)))/N[a+32>>2];e=ga-16|0;J[e+12>>2]=J[a+40>>2];N[a+24>>2]=N[J[e+12>>2]>>2]*N[a+28>>2];e=ga-16|0;J[e+12>>2]=J[a+40>>2];N[a+20>>2]=N[J[e+12>>2]+4>>2]*N[a+28>>2];e=ga-16|0;J[e+12>>2]=J[a+40>>2];N[a+16>>2]=N[J[e+12>>2]+8>>2]*N[a+28>>2];N[a+12>>2]=Ta(Q(N[J[a+36>>2]>>2]*Q(.5)));xc(b,a+24|0,a+20|0,a+16|0,a+12|0);ga=a+48|0;ga=d+16|0}function gE(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);f=N[a+36>>2];d=N[a+32>>2];i=N[a+28>>2];j=Q(ia[J[J[a>>2]+48>>2]](a));d=Q(d+Q(ia[J[J[a>>2]+48>>2]](a)));k=Q(ia[J[J[a>>2]+48>>2]](a));e=Q(b*Q(.5));g=Q(b*Q(.25));h=Q(b/Q(12));b=Q(j+i);a:{b:{switch(J[a+52>>2]){case 0:f=e;e=Q(d*d);d=Q(f*e);b=Q(Q(h*Q(b*Q(b*Q(4))))+Q(g*e));e=b;break a;case 2:b=Q(b*b);e=Q(e*b);d=Q(k+f);d=Q(Q(h*Q(d*Q(d*Q(4))))+Q(g*b));b=d;break a;default:break b}}f=e;e=Q(b*b);b=Q(f*e);d=Q(Q(h*Q(d*Q(d*Q(4))))+Q(g*e));e=d}J[c+12>>2]=0;N[c+8>>2]=e;N[c+4>>2]=b;N[c>>2]=d}function sb(a){var b=0;b=J[a>>2];if(b){Gd(a,b)}b=J[a+4>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+4>>2]=0;J[a+8>>2]=-1;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+16>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;b=J[a+52>>2];a:{if(!(K[a+56|0]?b:0)){J[a+52>>2]=0;H[a+56|0]=1;J[a+44>>2]=0;J[a+48>>2]=0;break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+56|0]=1;J[a+52>>2]=0;J[a+44>>2]=0;J[a+48>>2]=0;b=J[a+32>>2];if(!b|!K[a+36|0]){break a}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0}function KC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=0;a:{f=N[b>>2];g=N[b+16>>2];i=f<g?f:g;h=N[b+32>>2];if(N[a+24>>2]<(h>i?i:h)){break a}e=!(f>g)<<4;if(N[(h<N[b+e>>2]?e:32)+b>>2]<N[a+8>>2]){break a}f=N[b+8>>2];e=b+24|0;g=N[e>>2];i=f<g?f:g;j=b+40|0;h=N[j>>2];if(N[a+32>>2]<(h>i?i:h)){break a}e=f>g?b+8|0:e;if(N[(h<N[e>>2]?e:j)>>2]<N[a+16>>2]){break a}f=N[b+4>>2];e=b+20|0;g=N[e>>2];i=f<g?f:g;j=b+36|0;h=N[j>>2];if(N[a+28>>2]<(h>i?i:h)){break a}e=f>g?b+4|0:e;if(N[(h<N[e>>2]?e:j)>>2]<N[a+12>>2]){break a}a=J[a+4>>2];ia[J[J[a>>2]+8>>2]](a,b,c,d)}}function Ri(a,b,c,d,e){var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;N[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];N[a>>2]=N[f+24>>2];J[a+4>>2]=J[f+20>>2];d=a+8|0;Pb(d);J[a+72>>2]=J[f+16>>2];c=J[f+12>>2];e=J[c+4>>2];J[a+76>>2]=J[c>>2];J[a+80>>2]=e;e=J[c+12>>2];J[a+84>>2]=J[c+8>>2];J[a+88>>2]=e;N[a+92>>2]=0;N[a+96>>2]=0;N[a+100>>2]=.5;N[a+104>>2]=0;N[a+108>>2]=0;N[a+112>>2]=.800000011920929;N[a+116>>2]=1;H[a+120|0]=0;N[a+124>>2]=.004999999888241291;N[a+128>>2]=.009999999776482582;N[a+132>>2]=.009999999776482582;N[a+136>>2]=.009999999776482582;de(d);ga=f+32|0}function Ll(a){a=a|0;var b=0;J[a>>2]=16776;b=J[a+156>>2];if(!(b?!b|!K[a+160|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+156>>2]=0;H[a+160|0]=1;J[a+148>>2]=0;J[a+152>>2]=0;b=J[a+136>>2];if(!(b?!b|!K[a+140|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+136>>2]=0;H[a+140|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;b=J[a+116>>2];if(!(b?!b|!K[a+120|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+116>>2]=0;H[a+120|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;b=J[a+96>>2];if(!(b?!b|!K[a+100|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+96>>2]=0;H[a+100|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;Ol(a);return a|0}function po(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;H[d+23|0]=c;a=J[d+28>>2];N[a+4>>2]=N[J[d+24>>2]+24>>2];J[a+8>>2]=J[J[d+24>>2]>>2];a:{if(H[d+23|0]&1){b=J[d+24>>2];c=J[b+12>>2];J[a+52>>2]=J[b+8>>2];J[a+56>>2]=c;c=J[b+20>>2];J[a+60>>2]=J[b+16>>2];J[a+64>>2]=c;break a}b=ga-16|0;J[b+12>>2]=J[a+8>>2];J[b+12>>2]=J[b+12>>2]+4;wa(d,J[b+12>>2],J[d+24>>2]+8|0);b=J[d+4>>2];J[a+52>>2]=J[d>>2];J[a+56>>2]=b;b=J[d+12>>2];J[a+60>>2]=J[d+8>>2];J[a+64>>2]=b}Wh(a+68|0,a+20|0,a+36|0,N[J[d+24>>2]+24>>2]);ga=d+32|0;return Q(N[J[d+24>>2]+24>>2])}function Hv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];a=ga+-64|0;ga=a;J[a+60>>2]=J[d+12>>2];J[a+56>>2]=b;b=J[a+60>>2];wb(a+40|0,J[a+56>>2],b+56|0);c=J[a+44>>2];J[b+56>>2]=J[a+40>>2];J[b+60>>2]=c;c=J[a+52>>2];J[b+64>>2]=J[a+48>>2];J[b+68>>2]=c;c=b+56|0;wb(a+24|0,J[a+56>>2],c+16|0);e=J[a+28>>2];J[b+72>>2]=J[a+24>>2];J[b+76>>2]=e;e=J[a+36>>2];J[b+80>>2]=J[a+32>>2];J[b+84>>2]=e;wb(a+8|0,J[a+56>>2],c+32|0);c=J[a+12>>2];J[b+88>>2]=J[a+8>>2];J[b+92>>2]=c;c=J[a+20>>2];J[b+96>>2]=J[a+16>>2];J[b+100>>2]=c;ga=a- -64|0;ga=d+16|0}function hf(a){a=a|0;var b=0;J[a>>2]=5460;if(J[a+108>>2]){b=J[a+112>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+112>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+108>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+108>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+88>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+84>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+80>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+60>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}if(K[a+100|0]){b=J[a+92>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+92>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}return a|0}function BE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0),f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0),k=Q(0),l=0,m=Q(0),n=Q(0);h=J[b+96>>2];if((h|0)>0){i=N[b+12>>2];f=Q(N[c>>2]*i);j=N[b+20>>2];g=Q(N[c+8>>2]*j);k=N[b+16>>2];n=Q(N[c+4>>2]*k);l=J[b+104>>2];b=0;c=-1;e=Q(-3.4028234663852886e38);while(1){d=(b<<4)+l|0;m=Q(Q(N[d+8>>2]*g)+Q(Q(N[d>>2]*f)+Q(n*N[d+4>>2])));d=m>e;e=d?m:e;c=d?b:c;b=b+1|0;if((h|0)!=(b|0)){continue}break}b=(c<<4)+l|0;e=N[b>>2];f=N[b+4>>2];g=N[b+8>>2];J[a+12>>2]=0;N[a+8>>2]=j*g;N[a+4>>2]=k*f;N[a>>2]=i*e;return}J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0}function Ku(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;f=ga-16|0;ga=f;J[f+12>>2]=a;a=ua(5260);b=J[f+12>>2];J[a+4>>2]=2;J[a+5256>>2]=b;J[a+60>>2]=228;H[a+24|0]=1;J[a>>2]=6484;J[a+20>>2]=0;J[a+28>>2]=11524;J[a+12>>2]=0;J[a+16>>2]=0;J[a+64>>2]=ia[J[J[b>>2]+12>>2]](b);J[a+68>>2]=ia[J[J[b>>2]+8>>2]](b);while(1){b=0;while(1){d=(a+P(c,144)|0)+72|0;e=J[a+5256>>2];J[d+(b<<2)>>2]=ia[J[J[e>>2]+16>>2]](e,c,b);e=b|1;g=d+(e<<2)|0;d=J[a+5256>>2];J[g>>2]=ia[J[J[d>>2]+16>>2]](d,c,e);b=b+2|0;if((b|0)!=36){continue}break}c=c+1|0;if((c|0)!=36){continue}break}ga=f+16|0;return a|0}function pp(a,b){a=a|0;b=Q(b);var c=Q(0),d=0,e=Q(0),f=0,g=0,h=0,i=0,j=0,k=0;f=ga-16|0;ga=f;J[f+12>>2]=a;N[f+8>>2]=b;b=N[f+8>>2];a=0;g=J[f+12>>2];h=J[g+732>>2];a:{if((h|0)<=0){break a}i=J[g+740>>2];c=N[g+1228>>2];if((h|0)!=1){k=h&-2;while(1){d=P(a,52)+i|0;e=Q(Q(N[d+16>>2]/c)*b);N[d+16>>2]=e;N[d+28>>2]=e*e;d=P(a|1,52)+i|0;e=Q(Q(N[d+16>>2]/c)*b);N[d+16>>2]=e;N[d+28>>2]=e*e;a=a+2|0;j=j+2|0;if((k|0)!=(j|0)){continue}break}}if(!(h&1)){break a}a=P(a,52)+i|0;c=Q(Q(N[a+16>>2]/c)*b);N[a+16>>2]=c;N[a+28>>2]=c*c}N[g+1228>>2]=b;if(J[g+216>>2]==2){kb(g,0)}ga=f+16|0}function wv(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;d=ga-16|0;ga=d;J[d+12>>2]=a;f=ua(68);a=J[d+12>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;a=J[b+12>>2];J[a>>2]=0;c=ga-16|0;J[c+12>>2]=a;J[J[c+12>>2]>>2]=4988;J[a>>2]=5020;J[(ga-16|0)+12>>2]=a+12;J[a+8>>2]=J[J[b+8>>2]+8>>2];J[a+28>>2]=J[J[b+8>>2]+28>>2];N[a+4>>2]=N[J[b+8>>2]+4>>2];c=J[b+8>>2];e=J[c+16>>2];J[a+12>>2]=J[c+12>>2];J[a+16>>2]=e;e=J[c+24>>2];J[a+20>>2]=J[c+20>>2];J[a+24>>2]=e;J[a+32>>2]=0;J[a+36>>2]=0;J[a+40>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;J[a+56>>2]=0;J[a+60>>2]=0;ga=b+16|0;ga=d+16|0;return f|0}function iy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;if(Ya(a,J[b+8>>2],e)){if(!(J[b+28>>2]==1|J[b+4>>2]!=(c|0))){J[b+28>>2]=d}return}a:{if(Ya(a,J[b>>2],e)){if(!(J[b+16>>2]!=(c|0)&J[b+20>>2]!=(c|0))){if((d|0)!=1){break a}J[b+32>>2]=1;return}J[b+32>>2]=d;b:{if(J[b+44>>2]==4){break b}I[b+52>>1]=0;a=J[a+8>>2];ia[J[J[a>>2]+20>>2]](a,b,c,c,1,e);if(K[b+53|0]){J[b+44>>2]=3;if(!K[b+52|0]){break b}break a}J[b+44>>2]=4}J[b+20>>2]=c;J[b+40>>2]=J[b+40>>2]+1;if(J[b+36>>2]!=1|J[b+24>>2]!=2){break a}H[b+54|0]=1;return}a=J[a+8>>2];ia[J[J[a>>2]+24>>2]](a,b,c,d,e)}}function ZD(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0);e=ga-16|0;ga=e;ia[J[J[b>>2]+68>>2]](e,b,c);h=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=h;h=J[e+4>>2];J[a>>2]=J[e>>2];J[a+4>>2]=h;if(Q(ia[J[J[b>>2]+48>>2]](b))!=Q(0)){f=N[c+4>>2];d=N[c>>2];g=N[c+8>>2];i=Q(ia[J[J[b>>2]+48>>2]](b));b=Q(Q(g*g)+Q(Q(d*d)+Q(f*f)))<Q(1.4210854715202004e-14);d=b?Q(-1):d;j=d;g=b?Q(-1):g;f=b?Q(-1):f;d=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(d*d)+Q(f*f))))));N[a>>2]=N[a>>2]+Q(i*Q(j*d));N[a+4>>2]=N[a+4>>2]+Q(i*Q(f*d));N[a+8>>2]=N[a+8>>2]+Q(i*Q(g*d))}ga=e+16|0}function Np(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;ga=d+16|0;a=1;e=J[d+12>>2];h=J[e+732>>2];b=0;a:{if((h|0)<=0){break a}f=J[e+720>>2];c=f+P(J[d+4>>2],104)|0;i=J[e+740>>2];b=J[i+12>>2];g=J[i+8>>2];e=f+P(J[d+8>>2],104)|0;if(!((g|0)==(e|0)&(b|0)==(c|0)|(c|0)==(g|0)&(b|0)==(e|0))){while(1){b:{b=a;if((b|0)==(h|0)){break b}a=P(b,52)+i|0;f=J[a+12>>2];g=J[a+8>>2];if((g|0)==(e|0)&(c|0)==(f|0)){break b}a=b+1|0;if((c|0)!=(g|0)|(e|0)!=(f|0)){continue}}break}a=(b|0)<(h|0)}b=a}return b&1}function Em(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=(b|0)!=8;if(!(d|(c|0)!=8)){return J[a+60>>2]}if(!((c|0)!=1|d)){return J[a+76>>2]}if(!((b|0)!=1|(c|0)!=8)){return J[a+80>>2]}if(!(b|c)){return J[a+72>>2]}if(!((c|0)!=28|(b|0)>19)){return J[a+88>>2]}if(!((b|0)!=28|(c|0)>19)){return J[a+84>>2]}a:{if((b|0)<=19){if((c|0)<=19){return J[a+32>>2]}if(c-21>>>0>8){break a}return J[a+36>>2]}if(!((c|0)>19|b-21>>>0>8)){return J[a+40>>2]}if((b|0)!=31){break a}if((c|0)==31){return J[a+48>>2]}return J[a+44>>2]}if((c|0)==31){return J[a+52>>2]}return J[a+56>>2]}function PE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=0,h=0,i=0,j=Q(0),k=Q(0);e=Q(N[b+60>>2]*Q(.5));g=J[b+64>>2];i=J[b+68>>2];h=i<<2;d=N[c+8>>2];j=Q(d*d);d=N[c>>2];f=Q(d*d);d=N[c+4>>2];a:{b:{if(N[h+c>>2]>Q(N[b+52>>2]*Q(Y(Q(j+Q(f+Q(d*d))))))){J[(g<<2)+a>>2]=0;N[a+h>>2]=e;c=J[b+72>>2];break b}d=N[(g<<2)+c>>2];h=c;c=J[b+72>>2];f=N[h+(c<<2)>>2];k=Q(Y(Q(Q(d*d)+Q(f*f))));if(k>Q(1.1920928955078125e-7)){j=d;d=Q(N[b+56>>2]/k);N[(g<<2)+a>>2]=j*d;N[(i<<2)+a>>2]=-e;e=Q(f*d);break a}J[(g<<2)+a>>2]=0;N[(i<<2)+a>>2]=-e}e=Q(0)}N[(c<<2)+a>>2]=e}function Uq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=ua(152);b=J[d+8>>2];c=J[d+4>>2];J[a+104>>2]=0;J[a+100>>2]=c;H[a+20|0]=1;J[a>>2]=20804;J[a+16>>2]=0;H[a+40|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;J[a+36>>2]=0;H[a+60|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;J[a+56>>2]=0;H[a+80|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;J[a+76>>2]=0;H[a+148|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;J[a+144>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+128>>2]=1;J[a+120>>2]=0;J[a+124>>2]=2;J[a+116>>2]=b;J[a+108>>2]=0;J[a+112>>2]=0;ga=d+16|0;return a|0}function Ch(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;b=ga-16|0;a=J[d+28>>2];J[b+12>>2]=a;J[d+16>>2]=J[J[b+12>>2]+4>>2];a:{if(J[d+24>>2]<J[d+16>>2]){J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+16>>2]){J[d+12>>2]=J[d+12>>2]+1;continue}break}break a}b=J[d+24>>2];c=ga-16|0;J[c+12>>2]=a;if(J[J[c+12>>2]+4>>2]<(b|0)){Th(a,J[d+24>>2])}J[d+8>>2]=J[d+16>>2];while(1){if(J[d+8>>2]<J[d+24>>2]){J[J[a+12>>2]+(J[d+8>>2]<<2)>>2]=J[J[d+20>>2]>>2];J[d+8>>2]=J[d+8>>2]+1;continue}break}}J[a+4>>2]=J[d+24>>2];ga=d+32|0}function FA(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;a:{b:{c:{switch(b-2|0){case 0:if((d|0)<=0){d=a+232|0;b=512;break b}if(d>>>0<=2){d=a+264|0;b=32;break b}if((d|0)==3){d=a+248|0;b=2048;break b}if(d>>>0>5){break a}d=a+280|0;b=128;break b;case 1:if((d|0)<=0){d=a+212|0;b=1;break b}if((d|0)!=3){break a}d=a+228|0;b=4;break b;case 2:break c;default:break a}}if((d|0)<=0){d=a+244|0;b=256;break b}if(d>>>0<=2){d=a+276|0;b=16;break b}if((d|0)==3){d=a+260|0;b=1024;break b}if(d>>>0>5){break a}d=a+292|0;b=64}N[d>>2]=c;J[a+300>>2]=b|J[a+300>>2]}}function Uh(a,b){var c=0,d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=ga-16|0;a=J[d+12>>2];J[b+12>>2]=a;J[d+4>>2]=J[J[b+12>>2]+4>>2];b=J[d+4>>2];c=ga-16|0;J[c+12>>2]=a;if(J[J[c+12>>2]+8>>2]==(b|0)){b=ga-16|0;J[b+12>>2]=a;c=J[J[b+12>>2]+4>>2];J[b+12>>2]=a;J[b+8>>2]=c;if(J[b+8>>2]){b=J[b+8>>2]<<1}else{b=1}Sh(a,b)}c=J[a+12>>2]+(J[a+4>>2]<<4)|0;b=ga-16|0;J[b+12>>2]=16;J[b+8>>2]=c;c=J[d+8>>2];e=J[c+4>>2];b=J[b+8>>2];J[b>>2]=J[c>>2];J[b+4>>2]=e;e=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=e;J[a+4>>2]=J[a+4>>2]+1;ga=d+16|0}function Yl(a){H[a+60|0]=0;J[a+52>>2]=282;J[a+144>>2]=0;H[a+80|0]=1;J[a>>2]=12132;J[a+76>>2]=0;H[a+100|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;J[a+96>>2]=0;H[a+120|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;J[a+116>>2]=0;H[a+140|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;J[a+136>>2]=0;H[a+164|0]=1;J[a+128>>2]=0;J[a+132>>2]=0;J[a+160>>2]=0;J[a+168>>2]=0;J[a+152>>2]=0;J[a+156>>2]=0;J[a+4>>2]=-8388609;J[a+8>>2]=-8388609;J[a+12>>2]=-8388609;J[a+16>>2]=0;J[a+20>>2]=2139095039;J[a+24>>2]=2139095039;J[a+28>>2]=2139095039;J[a+32>>2]=0;J[a>>2]=15400;return a}function tn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=J[a+108>>2];if(!e){g=L[a+56>>1];if(g){e=1;h=1;while(1){f=J[a+68>>2]+(e<<2)|0;a:{if(!(H[f|0]&1)){break a}f=J[a+60>>2]+(L[f+2>>1]<<6)|0;e=0;b:{if(N[b>>2]>N[f+32>>2]){break b}e=0;if(N[c>>2]<N[f+16>>2]){break b}e=1}if((N[c+8>>2]<N[f+24>>2]|N[b+8>>2]>N[f+40>>2]?i:e)^1|N[c+4>>2]<N[f+20>>2]|N[b+4>>2]>N[f+36>>2]){break a}ia[J[J[d>>2]+8>>2]](d,f)|0;g=L[a+56>>1]}h=h+1|0;e=h&65535;if(e>>>0<(g<<1|1)>>>0){continue}break}}return}ia[J[J[e>>2]+28>>2]](e,b,c,d)}function Wk(a){H[a+20|0]=1;J[a>>2]=19884;J[a+16>>2]=0;H[a+40|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;J[a+36>>2]=0;H[a+60|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;J[a+56>>2]=0;H[a+80|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;J[a+76>>2]=0;H[a+100|0]=1;J[a+68>>2]=0;J[a+72>>2]=0;J[a+96>>2]=0;H[a+120|0]=1;J[a+88>>2]=0;J[a+92>>2]=0;J[a+116>>2]=0;H[a+140|0]=1;J[a+108>>2]=0;J[a+112>>2]=0;J[a+136>>2]=0;J[a+128>>2]=0;J[a+132>>2]=0;H[a+160|0]=1;J[a+156>>2]=0;J[a+148>>2]=0;J[a+152>>2]=0;H[a+180|0]=1;J[a+192>>2]=0;J[a+176>>2]=0;J[a+168>>2]=0;J[a+172>>2]=0}function EA(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);d=Q(3.4028234663852886e38);a:{b:{switch(b-2|0){case 0:if((c|0)<=0){return Q(N[a+232>>2])}if(c>>>0<=2){return Q(N[a+264>>2])}if((c|0)==3){return Q(N[a+248>>2])}if(c>>>0>5){break a}return Q(N[a+280>>2]);case 1:if((c|0)<=0){return Q(N[a+212>>2])}if((c|0)!=3){break a}return Q(N[a+228>>2]);case 2:break b;default:break a}}if((c|0)<=0){return Q(N[a+244>>2])}if(c>>>0<=2){return Q(N[a+276>>2])}if((c|0)==3){return Q(N[a+260>>2])}if(c>>>0>5){break a}d=N[a+292>>2]}return Q(d)}function Db(a,b,c){var d=0;d=J[a+4>>2];a:{if(d){J[a+4>>2]=0;break a}J[8369]=J[8369]+1;d=ia[J[6782]](44,16)|0;J[d>>2]=0;J[d+4>>2]=0;J[d+40>>2]=0;J[d+32>>2]=0;J[d+36>>2]=0;J[d+24>>2]=0;J[d+28>>2]=0;J[d+16>>2]=0;J[d+20>>2]=0;J[d+8>>2]=0;J[d+12>>2]=0}J[d+36>>2]=c;J[d+32>>2]=0;J[d+40>>2]=0;c=J[b+4>>2];J[d>>2]=J[b>>2];J[d+4>>2]=c;c=J[b+12>>2];J[d+8>>2]=J[b+8>>2];J[d+12>>2]=c;c=J[b+20>>2];J[d+16>>2]=J[b+16>>2];J[d+20>>2]=c;c=J[b+28>>2];J[d+24>>2]=J[b+24>>2];J[d+28>>2]=c;Dd(a,J[a>>2],d);J[a+12>>2]=J[a+12>>2]+1;return d}function oD(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=0,f=Q(0),g=Q(0),h=0,i=Q(0),j=Q(0);e=ga-16|0;ga=e;ia[J[J[b>>2]+68>>2]](e,b,c);h=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=h;h=J[e+4>>2];J[a>>2]=J[e>>2];J[a+4>>2]=h;f=N[c+4>>2];d=N[c>>2];g=N[c+8>>2];i=Q(ia[J[J[b>>2]+48>>2]](b));b=Q(Q(g*g)+Q(Q(d*d)+Q(f*f)))<Q(1.4210854715202004e-14);d=b?Q(-1):d;j=d;g=b?Q(-1):g;f=b?Q(-1):f;d=Q(Q(1)/Q(Y(Q(Q(g*g)+Q(Q(d*d)+Q(f*f))))));N[a>>2]=N[a>>2]+Q(i*Q(j*d));N[a+4>>2]=N[a+4>>2]+Q(i*Q(f*d));N[a+8>>2]=N[a+8>>2]+Q(i*Q(g*d));ga=e+16|0}function ak(a){var b=0;b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=0;H[a+16|0]=1;J[a+4>>2]=0;J[a+8>>2]=0;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;b=J[a+52>>2];if(!(b?!b|!K[a+56|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+52>>2]=0;H[a+56|0]=1;J[a+44>>2]=0;J[a+48>>2]=0;b=J[a+72>>2];if(!(b?!b|!K[a+76|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+72>>2]=0;H[a+76|0]=1;a=a- -64|0;J[a>>2]=0;J[a+4>>2]=0}function Dx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;g=ua(64);a=J[e+12>>2];b=J[e+8>>2];c=ga-16|0;ga=c;J[c+12>>2]=g;J[c+8>>2]=a;J[c+4>>2]=b;a=J[c+8>>2];d=ga-16|0;ga=d;f=J[c+12>>2];J[d+8>>2]=f;J[d+4>>2]=a;a=J[d+8>>2];J[d+12>>2]=a;h=a+48|0;b=a;while(1){J[(ga-16|0)+12>>2]=b;b=b+16|0;if((h|0)!=(b|0)){continue}break}sj(a,J[d+4>>2]);ga=d+16|0;a=J[c+4>>2];b=J[a+4>>2];J[f+48>>2]=J[a>>2];J[f+52>>2]=b;b=J[a+12>>2];J[f+56>>2]=J[a+8>>2];J[f+60>>2]=b;ga=c+16|0;ga=e+16|0;return g|0}function ya(a){var b=0,c=0,d=0;d=ga-16|0;ga=d;c=J[6787];a:{if(J[c>>2]==(a|0)){b=c;break a}b=J[c+24>>2];b:{if(b){while(1){if(J[b>>2]==(a|0)){break b}b=J[b+28>>2];if(b){continue}break}}b=ua(36);J[b+4>>2]=0;J[b+8>>2]=0;J[b>>2]=a;J[b+32>>2]=0;J[b+24>>2]=0;J[b+28>>2]=0;J[b+20>>2]=c;J[b+12>>2]=0;J[b+16>>2]=0;ne(b);J[b+28>>2]=J[c+24>>2];J[c+24>>2]=b}J[6787]=b}J[b+4>>2]=J[b+4>>2]+1;a=J[b+16>>2];J[b+16>>2]=a+1;if(!a){aa(d+8|0,0)|0;a=J[8371];J[b+12>>2]=(J[d+12>>2]-J[a+4>>2]|0)+P(J[d+8>>2]-J[a>>2]|0,1e6)}ga=d+16|0}function uh(a,b,c){var d=0,e=0;d=ga-32|0;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;c=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){a=P(J[d+12>>2],44);b=a+J[d+16>>2]|0;a=a+J[c+12>>2]|0;e=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=e;J[b+40>>2]=J[a+40>>2];e=J[a+36>>2];J[b+32>>2]=J[a+32>>2];J[b+36>>2]=e;e=J[a+28>>2];J[b+24>>2]=J[a+24>>2];J[b+28>>2]=e;e=J[a+20>>2];J[b+16>>2]=J[a+16>>2];J[b+20>>2]=e;e=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=e;J[d+12>>2]=J[d+12>>2]+1;continue}break}}function Zy(a){a=a|0;var b=0;J[a>>2]=22232;b=J[a+92>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+92>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+96>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+96>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+100>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+100>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+104>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+104>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+108>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+108>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}af(a);return a|0}function mB(a,b){a=a|0;b=b|0;var c=0,d=0;if(K[a+1308|0]){J[b>>2]=0;J[b+4>>2]=0;return}pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0);J[b>>2]=0;J[b+4>>2]=6;a:{if(!(J[a+856>>2]|K[a+788|0])){c=6;d=0;break a}J[b>>2]=1;J[b+4>>2]=5;c=5;d=1}if(K[a+789|0]?1:J[a+860>>2]){c=c-1|0;J[b+4>>2]=c;d=d+1|0;J[b>>2]=d}if(K[a+790|0]?1:J[a+864>>2]){J[b+4>>2]=c-1;J[b>>2]=d+1}if(Fe(a,0)){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}if(Fe(a,1)){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}if(Fe(a,2)){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}}function rf(a,b){var c=0,d=0;d=ga-16|0;ga=d;J[d+8>>2]=a;J[d+4>>2]=b;a=J[d+8>>2];J[d+12>>2]=a;c=a+48|0;b=a;while(1){J[(ga-16|0)+12>>2]=b;b=b+16|0;if((c|0)!=(b|0)){continue}break}b=J[d+4>>2];c=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;b=J[d+4>>2];c=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=c;c=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=c;b=J[d+4>>2];c=J[b+36>>2];J[a+32>>2]=J[b+32>>2];J[a+36>>2]=c;c=J[b+44>>2];J[a+40>>2]=J[b+40>>2];J[a+44>>2]=c;ga=d+16|0}function Yy(a){a=a|0;var b=0;J[a>>2]=22232;b=J[a+92>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+92>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+96>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+96>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+100>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+100>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+104>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+104>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+108>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+108>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}af(a);ta(a)}function ZH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;J[7395]=J[7395]+1;d=J[b+12>>2]>J[c+12>>2];e=J[(d?b:c)+12>>2];d=J[(d?c:b)+12>>2];b=e<<16|d;b=(b<<15^-1)+b|0;b=P(b>>10^b,9);b=b>>6^b;b=(b<<11^-1)+b|0;b=J[a+12>>2]-1&(b>>16^b);a:{b:{if((b|0)>=J[a+36>>2]){break b}b=J[J[a+44>>2]+(b<<2)>>2];if((b|0)==-1){break b}g=J[a- -64>>2];a=J[a+16>>2];while(1){f=b<<4;c=a+f|0;if((d|0)==J[J[c>>2]+12>>2]&J[J[(a+f|0)+4>>2]+12>>2]==(e|0)){break a}b=J[(b<<2)+g>>2];if((b|0)!=-1){continue}break}}c=0}return c|0}function ox(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;f=ua(84);a=J[e+12>>2];c=J[e+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;J[b+4>>2]=c;a=J[b+12>>2];qj(a);J[a>>2]=1416;c=J[b+8>>2];d=J[c+4>>2];J[a+20>>2]=J[c>>2];J[a+24>>2]=d;d=J[c+12>>2];J[a+28>>2]=J[c+8>>2];J[a+32>>2]=d;c=J[b+4>>2];d=J[c+4>>2];J[a+36>>2]=J[c>>2];J[a+40>>2]=d;d=J[c+12>>2];J[a+44>>2]=J[c+8>>2];J[a+48>>2]=d;J[(ga-16|0)+12>>2]=a+52;J[(ga-16|0)+12>>2]=a+68;ga=b+16|0;ga=e+16|0;return f|0}function rl(a,b,c,d){var e=0,f=0;e=J[b+4>>2];J[a+292>>2]=J[b>>2];J[a+296>>2]=e;e=J[b+12>>2];J[a+300>>2]=J[b+8>>2];J[a+304>>2]=e;H[a+356|0]=1;f=J[b+4>>2];e=a+(J[a>>2]<<4)|0;J[e+4>>2]=J[b>>2];J[e+8>>2]=f;f=J[b+12>>2];J[e+12>>2]=J[b+8>>2];J[e+16>>2]=f;e=J[c+12>>2];b=(J[a>>2]<<4)+a|0;J[b+92>>2]=J[c+8>>2];J[b+96>>2]=e;e=J[c+4>>2];J[b+84>>2]=J[c>>2];J[b+88>>2]=e;c=J[d+12>>2];b=(J[a>>2]<<4)+a|0;J[b+172>>2]=J[d+8>>2];J[b+176>>2]=c;c=J[d+4>>2];J[b+164>>2]=J[d>>2];J[b+168>>2]=c;J[a>>2]=J[a>>2]+1}function mx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;f=ua(132);a=J[e+12>>2];c=J[e+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;J[b+4>>2]=c;a=J[b+12>>2];qj(a);J[a>>2]=1572;Mb(a+20|0);c=J[b+8>>2];d=J[c+4>>2];J[a+40>>2]=J[c>>2];J[a+44>>2]=d;d=J[c+12>>2];J[a+48>>2]=J[c+8>>2];J[a+52>>2]=d;c=J[b+4>>2];d=J[c+4>>2];J[a+56>>2]=J[c>>2];J[a+60>>2]=d;d=J[c+12>>2];J[a+64>>2]=J[c+8>>2];J[a+68>>2]=d;Mb(a+72|0);Mb(a+92|0);Mb(a+112|0);ga=b+16|0;ga=e+16|0;return f|0}function Nk(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;while(1){k=c;g=J[a+12>>2];l=J[g+((c+d|0)/2<<3)>>2];h=c;e=d;while(1){c=h;h=c+1|0;f=(c<<3)+g|0;if(J[f>>2]<(l|0)){continue}i=e;while(1){e=i;i=e-1|0;m=e<<3;j=m+g|0;if(J[j>>2]>(l|0)){continue}break}if((c|0)<=(e|0)){c=J[f>>2];e=J[f+4>>2];g=J[j+4>>2];J[f>>2]=J[j>>2];J[f+4>>2]=g;f=J[a+12>>2]+m|0;J[f>>2]=c;J[f+4>>2]=e;e=i;c=h}if((c|0)<=(e|0)){g=J[a+12>>2];h=c;continue}break}if((e|0)>(k|0)){Nk(a,b,k,e)}if((c|0)<(d|0)){continue}break}}function ut(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;d=ra(360);b=J[e+4>>2];a=J[e>>2];xb(d,3,J[e+12>>2],J[e+8>>2]);J[d>>2]=19792;c=J[b+4>>2];J[d+300>>2]=J[b>>2];J[d+304>>2]=c;c=J[b+12>>2];J[d+308>>2]=J[b+8>>2];J[d+312>>2]=c;b=J[a+4>>2];J[d+316>>2]=J[a>>2];J[d+320>>2]=b;b=J[a+12>>2];J[d+324>>2]=J[a+8>>2];J[d+328>>2]=b;J[d+356>>2]=0;J[d+348>>2]=1050253722;J[d+352>>2]=1065353216;H[d+344|0]=0;J[d+332>>2]=0;ga=e+16|0;return d|0}function RG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0,f=Q(0),g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0);e=ga-16|0;ga=e;N[a+32>>2]=d;g=J[b+4>>2];J[a+8>>2]=J[b>>2];J[a+12>>2]=g;g=J[b+12>>2];J[a+16>>2]=J[b+8>>2];J[a+20>>2]=g;h=N[b+8>>2];i=N[c>>2];j=N[b>>2];k=N[c+4>>2];l=N[b+4>>2];m=N[c+8>>2];f=N[a+28>>2];J[e+12>>2]=0;N[e+8>>2]=m-Q(f*h);N[e+4>>2]=k-Q(f*l);N[e>>2]=i-Q(j*f);d=Q(Q(f+N[a+24>>2])+d);N[a+32>>2]=d;if(d<Q(0)){H[a+36|0]=1}a=J[a+4>>2];ia[J[J[a>>2]+16>>2]](a,b,e,d);ga=e+16|0}function MB(a,b,c){a=a|0;b=b|0;c=Q(c);var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=0;H[a+171|0]=0;h=J[b+4>>2];J[a+60>>2]=J[b>>2];J[a+64>>2]=h;h=J[b+12>>2];J[a+68>>2]=J[b+8>>2];J[a+72>>2]=h;d=N[a+68>>2];e=N[a+60>>2];g=N[a- -64>>2];f=Q(Q(1)/Q(Y(Q(Q(d*d)+Q(Q(e*e)+Q(g*g))))));d=Q(d*f);e=Q(e*f);f=Q(g*f);g=N[a+72>>2];a:{if(!(Q(Y(Q(Q(d*d)+Q(Q(e*e)+Q(f*f)))))<Q(1.1920928955078125e-7))){break a}e=Q(0);f=Q(0);d=Q(0);g=Q(0)}N[a+76>>2]=e;N[a+88>>2]=g;N[a+84>>2]=d;N[a+80>>2]=f;N[a+172>>2]=N[a+172>>2]+c}function ho(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=ga-96|0;ga=e;J[e+92>>2]=a;J[e+88>>2]=b;J[e+84>>2]=c;J[e+80>>2]=d;b=e- -64|0;a=J[e+92>>2];wb(b,J[e+88>>2],a+56|0);c=e+48|0;d=a+56|0;wb(c,J[e+88>>2],d+16|0);f=e+32|0;wb(f,J[e+88>>2],d+32|0);aj(e,b,c,f,N[a+44>>2]);b=J[e+4>>2];a=J[e+84>>2];J[a>>2]=J[e>>2];J[a+4>>2]=b;b=J[e+12>>2];J[a+8>>2]=J[e+8>>2];J[a+12>>2]=b;b=J[e+20>>2];a=J[e+80>>2];J[a>>2]=J[e+16>>2];J[a+4>>2]=b;b=J[e+28>>2];J[a+8>>2]=J[e+24>>2];J[a+12>>2]=b;ga=e+96|0}function lo(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;i=ga-80|0;ga=i;J[i+76>>2]=a;J[i+72>>2]=b;J[i+68>>2]=c;J[i+64>>2]=d;J[i+60>>2]=e;J[i+56>>2]=f;J[i+52>>2]=g;J[i+48>>2]=h;a=J[i+76>>2];J[i+44>>2]=28648;b=J[i+44>>2];c=J[i+72>>2];d=J[i+68>>2];e=J[i+64>>2];f=J[i+60>>2];g=J[i+56>>2];h=J[i+52>>2];J[i+28>>2]=J[i+48>>2];J[i+24>>2]=h;J[i+20>>2]=g;J[i+16>>2]=f;J[i+12>>2]=e;J[i+8>>2]=d;J[i+4>>2]=c;J[i>>2]=a;j=+fa(b|0,1792,i|0);ga=i+80|0;return Q(Q(j))}function we(a,b,c){var d=Q(0),e=0,f=Q(0),g=Q(0);e=J[a+204>>2];a:{if(b==Q(0)){J[a+204>>2]=e|1;break a}J[a+204>>2]=e&-2;d=Q(Q(1)/b)}N[a+344>>2]=d;J[a+376>>2]=0;N[a+364>>2]=N[a+380>>2]*b;N[a+372>>2]=N[a+388>>2]*b;N[a+368>>2]=N[a+384>>2]*b;b=N[c+8>>2];f=N[c+4>>2];g=N[c>>2];N[a+560>>2]=N[a+348>>2]*d;N[a+564>>2]=d*N[a+352>>2];N[a+568>>2]=d*N[a+356>>2];J[a+572>>2]=0;J[a+408>>2]=0;N[a+396>>2]=g!=Q(0)?Q(Q(1)/g):Q(0);N[a+400>>2]=f!=Q(0)?Q(Q(1)/f):Q(0);N[a+404>>2]=b!=Q(0)?Q(Q(1)/b):Q(0)}function Zu(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;e=ga-16|0;ga=e;J[e+12>>2]=a;f=ra(168);a=J[e+12>>2];b=ga-16|0;ga=b;J[b+12>>2]=f;J[b+8>>2]=a;c=J[b+12>>2];Nf(c);J[c>>2]=18016;Mb(c+148|0);J[c+144>>2]=J[b+8>>2];d=J[b+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=c;J[a+8>>2]=d;c=J[a+12>>2];J[a+4>>2]=0;while(1){d=J[a+8>>2];if(J[a+4>>2]<(ia[J[J[d>>2]+28>>2]](d)|0)){d=ra(212);Si(d,J[a+8>>2],J[a+4>>2]);J[a>>2]=d;Mf(c+148|0,a);J[a+4>>2]=J[a+4>>2]+1;continue}break}ga=a+16|0;ga=b+16|0;ga=e+16|0;return f|0}function LA(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;ya(2632);ia[J[J[a>>2]+32>>2]](a,b,c,d,e,f,g,h,i);j=J[a+184>>2];k=J[h+20>>2];k=(j|0)>(k|0)?j:k;a:{if((k|0)<=0){break a}j=0;if((k|0)!=1){m=k&-2;while(1){Q(ia[J[J[a>>2]+40>>2]](a,j,b,c,d,e,f,g,h,i));Q(ia[J[J[a>>2]+40>>2]](a,j|1,b,c,d,e,f,g,h,i));j=j+2|0;l=l+2|0;if((m|0)!=(l|0)){continue}break}}if(!(k&1)){break a}Q(ia[J[J[a>>2]+40>>2]](a,j,b,c,d,e,f,g,h,i))}xa();return Q(Q(0))}function Im(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;J[a>>2]=9856;b=J[a+8>>2];e=J[b+8>>2];if((e|0)>0){while(1){c=J[(J[b+16>>2]+P(d,12)|0)+8>>2];if(c){ia[J[J[c>>2]>>2]](c)|0;f=J[a+4>>2];ia[J[J[f>>2]+60>>2]](f,c)}d=d+1|0;if((e|0)!=(d|0)){continue}break}b=J[a+8>>2]}Am(b);b=J[a+8>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+8>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}b=J[a+24>>2];if(!(b?!b|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+24>>2]=0;H[a+28|0]=1;J[a+16>>2]=0;J[a+20>>2]=0;return a|0}function sh(a,b,c,d){var e=0,f=0,g=0;e=ga-160|0;ga=e;J[e+156>>2]=b;J[e+152>>2]=c;N[e+148>>2]=d;b=J[e+152>>2];c=J[e+156>>2];N[e+124>>2]=Ua(b,c);g=e+128|0;Ia(g,b,e+124|0);f=e+104|0;Ma(f,c,g);b=e+88|0;J[(ga-16|0)+12>>2]=b;Ub(e+72|0,J[e+152>>2],c);c=J[e+76>>2];J[b>>2]=J[e+72>>2];J[b+4>>2]=c;c=J[e+84>>2];J[b+8>>2]=J[e+80>>2];J[b+12>>2]=c;N[e+36>>2]=Ta(N[e+148>>2]);c=e+40|0;Ia(c,f,e+36|0);f=e+56|0;va(f,g,c);N[e+12>>2]=Sa(N[e+148>>2]);c=e+16|0;Ia(c,b,e+12|0);va(a,f,c);ga=e+160|0}function kF(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=0,h=0,i=0;h=a+28|0;g=J[a+52>>2];d=N[h+((g+2|0)%3<<2)>>2];a=ga-16|0;J[a+12>>2]=0;N[a+8>>2]=d;N[a+4>>2]=d;N[a>>2]=d;g=g<<2;i=g+a|0;N[i>>2]=N[g+h>>2]+N[i>>2];d=N[a+8>>2];b=Q(b*Q(.0833333283662796));e=Q(N[a>>2]+Q(.03999999910593033));e=Q(e+e);e=Q(e*e);f=Q(N[a+4>>2]+Q(.03999999910593033));f=Q(f+f);f=Q(f*f);N[c+8>>2]=b*Q(e+f);d=Q(d+Q(.03999999910593033));d=Q(d+d);d=Q(d*d);N[c+4>>2]=b*Q(e+d);N[c>>2]=b*Q(f+d)}function $i(a){var b=0,c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;N[J[b+12>>2]>>2]=3.4028234663852886e38;b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+4>>2]=3.4028234663852886e38;b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+8>>2]=3.4028234663852886e38;b=ga-16|0;a=a+16|0;J[b+12>>2]=a;N[J[b+12>>2]>>2]=-3.4028234663852886e38;b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+4>>2]=-3.4028234663852886e38;b=ga-16|0;J[b+12>>2]=a;N[J[b+12>>2]+8>>2]=-3.4028234663852886e38;ga=c+16|0}function Mi(a,b,c,d,e,f){var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;N[g+24>>2]=b;N[g+20>>2]=c;N[g+16>>2]=d;N[g+12>>2]=e;N[g+8>>2]=f;c=N[g+16>>2];d=N[g+12>>2];e=N[g+8>>2];a=J[g+28>>2];b=N[g+24>>2];f=Q(Q(N[g+20>>2]-b)*Q(.5));N[a+692>>2]=f;b=Pa(Q(f+b),Q(6.2831854820251465));a:{if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break a}if(!(b>Q(3.1415927410125732))){break a}b=Q(b+Q(-6.2831854820251465))}N[a+704>>2]=e;N[a+700>>2]=d;N[a+696>>2]=c;N[a+688>>2]=b;ga=g+32|0}function GC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=J[a+12>>2];if(f){g=J[a+4>>2];ia[J[J[g>>2]+16>>2]](g,f);J[a+12>>2]=0}f=J[a+8>>2];if(f){ia[J[J[f>>2]>>2]](f)|0;f=J[a+4>>2];ia[J[J[f>>2]+60>>2]](f,J[a+8>>2]);J[a+8>>2]=0}J[a+20>>2]=d;J[a+16>>2]=e;J[a+24>>2]=-1;J[a+28>>2]=-1;J[a+32>>2]=-1;J[a+36>>2]=-1;d=J[b+4>>2];if(J[d+4>>2]==25){e=J[c+4>>2];if(J[e+4>>2]==25){Lg(a,b,c,d,e);return}ud(a,b,c,d,e,0);return}e=J[c+4>>2];if(J[e+4>>2]==25){ud(a,c,b,e,d,1)}}function lC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[c+4>>2];b=J[a+164>>2]+(b<<6)|0;J[b>>2]=J[c>>2];J[b+4>>2]=d;d=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=d;d=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=d;d=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=d;d=J[c+44>>2];J[b+40>>2]=J[c+40>>2];J[b+44>>2]=d;d=J[c+36>>2];J[b+32>>2]=J[c+32>>2];J[b+36>>2]=d;d=J[c+52>>2];J[b+48>>2]=J[c+48>>2];J[b+52>>2]=d;d=J[c+60>>2];J[b+56>>2]=J[c+56>>2];J[b+60>>2]=d;ia[J[J[a>>2]+72>>2]](a)}function Nf(a){var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a>>2]=4660;f=a+16|0;Nd(f);g=a+52|0;J[(ga-16|0)+12>>2]=g;c=ga-16|0;ga=c;J[c+12>>2]=a+68;d=ga-16|0;ga=d;h=J[c+12>>2];J[d+12>>2]=h;e=J[d+12>>2];wf(e+4|0);Nd(e+24|0);J[(ga-16|0)+12>>2]=e+56;J[e>>2]=0;ga=d+16|0;J[h+72>>2]=0;ga=c+16|0;J[a+4>>2]=25;$i(f);H[a+48|0]=1;N[b+8>>2]=1;N[b+4>>2]=1;N[b>>2]=1;na(g,b+8|0,b+4|0,b);ga=b+16|0}function Gn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga+-64|0;ga=f;J[f+60>>2]=a;J[f+56>>2]=b;J[f+52>>2]=c;J[f+48>>2]=d;J[f+44>>2]=e;b=J[f+60>>2];a=f+8|0;Nd(a);b=ia[J[J[b>>2]+84>>2]](b)|0;ia[J[J[b>>2]+16>>2]](b,J[f+56>>2],a);Gh(a,J[f+52>>2]);c=J[a+4>>2];b=J[f+48>>2];J[b>>2]=J[a>>2];J[b+4>>2]=c;c=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=c;c=J[a+20>>2];b=J[f+44>>2];J[b>>2]=J[a+16>>2];J[b+4>>2]=c;c=J[a+28>>2];J[b+8>>2]=J[a+24>>2];J[b+12>>2]=c;ga=f- -64|0}function Xi(a){var b=0,c=0;b=ga-48|0;ga=b;J[b+44>>2]=a;c=ga-16|0;a=J[b+44>>2];J[c+12>>2]=a;J[J[c+12>>2]>>2]=4988;J[a>>2]=5020;J[c+12>>2]=a+12;J[a+8>>2]=0;J[a+28>>2]=0;N[a+4>>2]=.009999999776482582;N[b+20>>2]=1;N[b+16>>2]=1;N[b+12>>2]=1;na(b+24|0,b+20|0,b+16|0,b+12|0);c=J[b+28>>2];J[a+12>>2]=J[b+24>>2];J[a+16>>2]=c;c=J[b+36>>2];J[a+20>>2]=J[b+32>>2];J[a+24>>2]=c;J[a+32>>2]=0;J[a+36>>2]=0;J[a+40>>2]=0;J[a+48>>2]=0;J[a+52>>2]=0;J[a+56>>2]=0;J[a+60>>2]=0;ga=b+48|0}function kB(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;var e=0;a:{b:{c:{if(d>>>0<=2){d:{switch(b-2|0){case 0:b=((d<<2)+a|0)+756|0;e=4;break b;case 2:b=((d<<2)+a|0)+772|0;e=2;break b;case 1:break d;default:break a}}b=((d<<2)+a|0)+740|0;break c}e=d-3|0;if(e>>>0>2){break a}e:{switch(b-2|0){case 0:b=((e<<6)+a|0)+900|0;e=4;break b;case 2:b=((e<<6)+a|0)+904|0;e=2;break b;case 1:break e;default:break a}}b=((e<<6)+a|0)+896|0}e=1}N[b>>2]=c;J[a+1304>>2]=J[a+1304>>2]|e<<P(d,3)}}function Sv(a,b){a=a|0;b=Q(b);var c=0,d=0,e=Q(0),f=Q(0),g=Q(0),h=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=ra(84);d=J[c+12>>2];e=N[c+8>>2];J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a>>2]=16260;b=N[d+8>>2];f=N[d>>2];g=N[d+4>>2];h=N[d+12>>2];J[a+68>>2]=0;J[a+72>>2]=0;N[a+64>>2]=e;N[a+60>>2]=h;J[a+76>>2]=0;J[a+80>>2]=0;J[a+4>>2]=28;e=b;b=Q(Q(1)/Q(Y(Q(Q(b*b)+Q(Q(f*f)+Q(g*g))))));N[a+56>>2]=e*b;N[a+52>>2]=g*b;N[a+48>>2]=f*b;ga=c+16|0;return a|0}function Xm(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=6716;b=J[a+8>>2];if((b|0)>0){while(1){e=J[J[a+16>>2]+(c<<2)>>2];d=J[e+188>>2];if(d){b=J[a+68>>2];b=ia[J[J[b>>2]+36>>2]](b)|0;ia[J[J[b>>2]+40>>2]](b,d,J[a+24>>2]);b=J[a+68>>2];ia[J[J[b>>2]+12>>2]](b,d,J[a+24>>2]);J[e+188>>2]=0;b=J[a+8>>2]}c=c+1|0;if((c|0)<(b|0)){continue}break}}b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function UC(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(76);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;N[c+60>>2]=b;N[c+56>>2]=a;J[c>>2]=13432;J[c+72>>2]=2;J[c+64>>2]=0;J[c+68>>2]=1;J[c+4>>2]=11;N[c+36>>2]=a;N[c+32>>2]=b;N[c+28>>2]=a;N[c+52>>2]=a/Q(Y(Q(Q(a*a)+Q(b*b))));ga=d+16|0;return c|0}function Gw(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(76);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;N[c+60>>2]=b;N[c+56>>2]=a;J[c+4>>2]=11;J[c+72>>2]=2;J[c+64>>2]=1;J[c+68>>2]=0;J[c>>2]=13632;N[c+32>>2]=a;N[c+36>>2]=a;N[c+28>>2]=b;N[c+52>>2]=a/Q(Y(Q(Q(a*a)+Q(b*b))));ga=d+16|0;return c|0}function Fw(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(76);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;N[c+60>>2]=b;N[c+56>>2]=a;J[c+4>>2]=11;J[c+72>>2]=1;J[c+64>>2]=0;J[c+68>>2]=2;J[c>>2]=13532;N[c+36>>2]=b;N[c+28>>2]=a;N[c+32>>2]=a;N[c+52>>2]=a/Q(Y(Q(Q(a*a)+Q(b*b))));ga=d+16|0;return c|0}function xx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;d=J[b+8>>2];a=ga-16|0;ga=a;f=J[b+12>>2];J[a+12>>2]=f;J[a+8>>2]=d;d=J[a+12>>2];e=J[a+8>>2];na(d,e,e+16|0,e+32|0);na(d+16|0,J[a+8>>2]+4|0,J[a+8>>2]+20|0,J[a+8>>2]+36|0);na(d+32|0,J[a+8>>2]+8|0,J[a+8>>2]+24|0,J[a+8>>2]+40|0);ga=a+16|0;na(f+48|0,J[b+8>>2]+48|0,J[b+8>>2]+52|0,J[b+8>>2]+56|0);ga=b+16|0;ga=c+16|0}function Iw(a){a=Q(a);var b=0,c=0,d=0,e=0,f=0;d=ga-16|0;ga=d;N[d+12>>2]=a;f=ra(52);a=N[d+12>>2];c=ga-16|0;ga=c;J[c+12>>2]=f;N[c+8>>2]=a;b=J[c+12>>2];J[b+4>>2]=35;J[b+8>>2]=0;J[b>>2]=14268;J[b+44>>2]=1025758986;J[b+20>>2]=1065353216;J[b+24>>2]=0;J[b+12>>2]=1065353216;J[b+16>>2]=1065353216;J[b>>2]=13984;J[b>>2]=16132;J[b+4>>2]=8;a=N[c+8>>2];e=ga-16|0;J[e+12>>2]=b+28;N[e+8>>2]=a;N[J[e+12>>2]>>2]=N[e+8>>2];N[b+44>>2]=N[c+8>>2];ga=c+16|0;ga=d+16|0;return f|0}function kl(a,b,c,d,e){J[a+176>>2]=e;J[a+60>>2]=0;J[a+64>>2]=0;J[a+56>>2]=1017370378;N[a+52>>2]=d;J[a+8>>2]=b;J[a+168>>2]=16842752;J[a+172>>2]=0;J[a+12>>2]=c;J[a+44>>2]=1105933107;J[a+48>>2]=0;J[a+16>>2]=0;J[a+20>>2]=0;H[a+180|0]=1;J[a+24>>2]=1113325568;J[a+28>>2]=1092616192;H[a+181|0]=0;H[a+182|0]=0;J[a+36>>2]=1061752795;J[a+40>>2]=1060439283;J[a+108>>2]=0;H[a+144|0]=1;J[a>>2]=19064;J[a+140>>2]=0;J[a+132>>2]=0;J[a+136>>2]=0;J[a+68>>2]=0;J[a+72>>2]=0}\nfunction KB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=J[b+12>>2];c=ga-16|0;d=c+8|0;J[d>>2]=J[b+8>>2];J[d+4>>2]=e;d=J[b+4>>2];J[c>>2]=J[b>>2];J[c+4>>2]=d;a=J[a+8>>2];J[a+4>>2]=1065353216;J[a+44>>2]=1065353216;J[a+48>>2]=0;J[a+36>>2]=0;J[a+40>>2]=0;J[a+28>>2]=0;J[a+32>>2]=0;J[a+24>>2]=1065353216;J[a+16>>2]=0;J[a+20>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+260>>2]=J[a+260>>2]+1;b=J[c+4>>2];J[a+52>>2]=J[c>>2];J[a+56>>2]=b;b=J[c+12>>2];J[a+60>>2]=J[c+8>>2];J[a+64>>2]=b}function xA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;h=J[b+8>>2];if((h|0)>0){d=J[a+16>>2];j=J[b+16>>2];a=0;while(1){c=J[(e<<2)+j>>2];a:{if(!(K[c+204|0]&3)){b=a;i=b<<3;f=i+d|0;g=J[f>>2];if((b|0)!=(g|0)){while(1){b=(g<<3)+d|0;J[f>>2]=J[b>>2];b=J[b>>2];f=(b<<3)+d|0;g=J[f>>2];if((b|0)!=(g|0)){continue}break}}J[c+208>>2]=b;J[(d+i|0)+4>>2]=e;J[c+212>>2]=-1;a=a+1|0;break a}J[c+208>>2]=-1;J[c+212>>2]=-2}e=e+1|0;if((h|0)!=(e|0)){continue}break}}}function Cp(a){a=a|0;var b=Q(0),c=0,d=Q(0),e=0,f=0,g=0,h=0;e=ga-16|0;ga=e;J[e+12>>2]=a;c=J[e+12>>2];a=J[c+712>>2];if((a|0)>0){g=a&1;c=J[c+720>>2];a:{if((a|0)==1){a=0;break a}h=a&-2;a=0;while(1){d=b;b=N[(c+P(a,104)|0)+88>>2];d=Q(d+(b>Q(0)?Q(Q(1)/b):Q(0)));b=N[(c+P(a|1,104)|0)+88>>2];b=Q(d+(b>Q(0)?Q(Q(1)/b):Q(0)));a=a+2|0;f=f+2|0;if((h|0)!=(f|0)){continue}break}}if(g){d=b;b=N[(c+P(a,104)|0)+88>>2];b=Q(d+(b>Q(0)?Q(Q(1)/b):Q(0)))}}ga=e+16|0;return Q(b)}function $n(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+44>>2]=a;J[e+40>>2]=b;J[e+36>>2]=c;J[e+32>>2]=d;c=J[e+44>>2];J[e+28>>2]=0;while(1){if(J[e+28>>2]<J[e+32>>2]){J[e+24>>2]=J[e+40>>2]+(J[e+28>>2]<<4);b=e+8|0;a=c+56|0;Vd(b,J[e+24>>2],a,a+16|0,a+32|0);a=a+(Lh(b)<<4)|0;d=J[a+4>>2];b=J[e+36>>2]+(J[e+28>>2]<<4)|0;J[b>>2]=J[a>>2];J[b+4>>2]=d;d=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=d;J[e+28>>2]=J[e+28>>2]+1;continue}break}ga=e+48|0}function mm(a,b){J[a+4>>2]=31;J[a+8>>2]=0;J[a+72>>2]=0;J[a+76>>2]=1065353216;J[a+64>>2]=0;J[a+68>>2]=1;J[a+48>>2]=-581039253;J[a+52>>2]=-581039253;J[a+32>>2]=1566444395;J[a+36>>2]=1566444395;H[a+28|0]=1;J[a>>2]=13212;J[a+24>>2]=0;J[a+88>>2]=0;J[a+80>>2]=1065353216;J[a+84>>2]=1065353216;J[a+56>>2]=-581039253;J[a+60>>2]=0;J[a+40>>2]=1566444395;J[a+44>>2]=0;J[a+16>>2]=0;J[a+20>>2]=0;if(b){J[8369]=J[8369]+1;b=ia[J[6782]](60,16)|0;jc(b);J[a+64>>2]=b}}function JB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;H[a+148|0]=0;a:{if(!qd(a,b)){break a}H[a+148|0]=1;if(!qd(a,b)){break a}H[a+148|0]=1;if(!qd(a,b)){break a}H[a+148|0]=1;if(!qd(a,b)){break a}H[a+148|0]=1;if(!qd(a,b)){break a}H[a+148|0]=1}b=J[a+8>>2];c=b+52|0;d=J[c+4>>2];J[a+92>>2]=J[c>>2];J[a+96>>2]=d;c=J[b+64>>2];J[a+100>>2]=J[b+60>>2];J[a+104>>2]=c;c=J[b+52>>2];d=J[b+56>>2];e=J[b+64>>2];J[a+120>>2]=J[b+60>>2];J[a+124>>2]=e;J[a+112>>2]=c;J[a+116>>2]=d}function uF(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=Q(0),f=Q(0);d=ia[J[J[a>>2]+28>>2]](a)|0;c=Q(N[d+8>>2]-N[b+8>>2]);e=Q(c*c);c=Q(N[d>>2]-N[b>>2]);f=Q(c*c);c=Q(N[d+4>>2]-N[b+4>>2]);if(Q(e+Q(f+Q(c*c)))>Q(1.1920928955078125e-7)){Kl(a,b);if(K[a+61|0]){b=J[a+52>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}J[8369]=J[8369]+1;b=ia[J[6782]](172,16)|0;d=Yl(b);J[a+52>>2]=b;Xl(d,J[a+48>>2],K[a+60|0],a+16|0,a+32|0);H[a+61|0]=1}}function NB(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=0;H[a+171|0]=1;g=J[b+4>>2];J[a+60>>2]=J[b>>2];J[a+64>>2]=g;g=J[b+12>>2];J[a+68>>2]=J[b+8>>2];J[a+72>>2]=g;c=N[a+68>>2];d=N[a+60>>2];f=N[a- -64>>2];e=Q(Q(1)/Q(Y(Q(Q(c*c)+Q(Q(d*d)+Q(f*f))))));c=Q(c*e);d=Q(d*e);e=Q(f*e);f=N[a+72>>2];a:{if(!(Q(Y(Q(Q(c*c)+Q(Q(d*d)+Q(e*e)))))<Q(1.1920928955078125e-7))){break a}d=Q(0);e=Q(0);c=Q(0);f=Q(0)}N[a+76>>2]=d;N[a+88>>2]=f;N[a+84>>2]=c;N[a+80>>2]=e}function MH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;J[7396]=J[7396]-1;ia[J[J[a>>2]+20>>2]](a,b);c=J[b+768>>2];e=c<<2;f=J[a+20>>2];d=e+f|0;h=J[d>>2];i=d;d=J[a+12>>2]-1|0;g=d<<2;J[i>>2]=J[f+g>>2];J[J[a+20>>2]+g>>2]=h;J[J[J[a+20>>2]+e>>2]+768>>2]=c;J[a+12>>2]=d;a=J[a+68>>2];c=J[a+16>>2];if(!(c>>>0>b>>>0|c+P(J[a>>2],J[a+4>>2])>>>0<=b>>>0)){J[b>>2]=J[a+12>>2];J[a+12>>2]=b;J[a+8>>2]=J[a+8>>2]+1;return}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}function Lf(a,b,c,d,e){var f=0;f=ga-32|0;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];a:{if(J[a+64>>2]==3){J[f+8>>2]=J[a+52>>2]+P(J[f+24>>2],J[a+56>>2]);J[J[f+20>>2]>>2]=L[J[f+8>>2]>>1];J[J[f+16>>2]>>2]=L[J[f+8>>2]+2>>1];J[J[f+12>>2]>>2]=L[J[f+8>>2]+4>>1];break a}J[f+4>>2]=J[a+52>>2]+P(J[f+24>>2],J[a+56>>2]);J[J[f+20>>2]>>2]=J[J[f+4>>2]>>2];J[J[f+16>>2]>>2]=J[J[f+4>>2]+4>>2];J[J[f+12>>2]>>2]=J[J[f+4>>2]+8>>2]}}function Gl(a){a=a|0;var b=0;J[a>>2]=17624;b=J[a+184>>2];if(!(b?!b|!K[a+188|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+184>>2]=0;H[a+188|0]=1;J[a+176>>2]=0;J[a+180>>2]=0;b=J[a+164>>2];if(!(b?!b|!K[a+168|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+164>>2]=0;H[a+168|0]=1;J[a+156>>2]=0;J[a+160>>2]=0;J[a>>2]=4660;b=J[a+84>>2];if(!(b?!b|!K[a+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+84>>2]=0;H[a+88|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;return a|0}function Ad(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;d=J[b+188>>2];if(d){c=J[a+68>>2];c=ia[J[J[c>>2]+36>>2]](c)|0;ia[J[J[c>>2]+40>>2]](c,d,J[a+24>>2]);c=J[a+68>>2];ia[J[J[c>>2]+12>>2]](c,d,J[a+24>>2]);J[b+188>>2]=0}c=J[a+8>>2];a:{if((c|0)<=0){break a}e=J[a+16>>2];d=0;while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}d=c-1|0;c=d<<2;J[f>>2]=J[c+e>>2];J[c+J[a+16>>2]>>2]=b;J[a+8>>2]=d}}function LB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;J[a+172>>2]=0;I[a+168>>1]=0;J[a+16>>2]=0;J[a+20>>2]=0;J[a+60>>2]=0;J[a+64>>2]=0;J[a+68>>2]=0;J[a+72>>2]=0;a=J[J[a+8>>2]+284>>2];if(J[(ia[J[J[a>>2]+28>>2]](a)|0)+4>>2]>0){while(1){d=a,e=J[J[(ia[J[J[a>>2]+28>>2]](a)|0)+12>>2]>>2],f=J[J[(ia[J[J[a>>2]+28>>2]](a)|0)+12>>2]+4>>2],g=J[b+24>>2],c=J[J[a>>2]+12>>2],ia[c](d|0,e|0,f|0,g|0)|0;if(J[(ia[J[J[a>>2]+28>>2]](a)|0)+4>>2]>0){continue}break}}}function Gv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];a=ga+-64|0;ga=a;J[a+60>>2]=J[d+12>>2];J[a+56>>2]=b;b=J[a+60>>2];e=b+56|0;f=a+24|0;Ma(f,b+72|0,e);c=a+8|0;Ma(c,e+32|0,e);b=a+40|0;Ub(b,f,c);Ld(b);f=J[a+56>>2];c=ga-16|0;J[c+12>>2]=b;c=J[c+12>>2];g=ga-16|0;J[g+12>>2]=b;g=J[g+12>>2]+4|0;h=ga-16|0;J[h+12>>2]=b;h=J[h+12>>2]+8|0;N[a+4>>2]=Ua(e,b);xc(f,c,g,h,a+4|0);ga=a- -64|0;ga=d+16|0}function kH(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=Q(d);e=e|0;f=f|0;var g=0;g=ga+-64|0;ga=g;J[g+60>>2]=f;J[g+56>>2]=e;e=J[a+212>>2];if(N[e+4>>2]>=d){J[g+8>>2]=J[a+216>>2];J[g+12>>2]=g+56;a=J[b+12>>2];J[g+24>>2]=J[b+8>>2];J[g+28>>2]=a;a=J[b+4>>2];J[g+16>>2]=J[b>>2];J[g+20>>2]=a;a=J[c+12>>2];J[g+40>>2]=J[c+8>>2];J[g+44>>2]=a;a=J[c+4>>2];J[g+32>>2]=J[c>>2];J[g+36>>2]=a;N[g+48>>2]=d;d=Q(ia[J[J[e>>2]+12>>2]](e,g+8|0,1))}ga=g- -64|0;return Q(d)}function jH(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=Q(d);e=e|0;f=f|0;var g=0;g=ga+-64|0;ga=g;J[g+60>>2]=f;J[g+56>>2]=e;e=J[a+212>>2];if(N[e+4>>2]>=d){J[g+8>>2]=J[a+216>>2];J[g+12>>2]=g+56;a=J[b+12>>2];J[g+24>>2]=J[b+8>>2];J[g+28>>2]=a;a=J[b+4>>2];J[g+16>>2]=J[b>>2];J[g+20>>2]=a;a=J[c+12>>2];J[g+40>>2]=J[c+8>>2];J[g+44>>2]=a;a=J[c+4>>2];J[g+32>>2]=J[c>>2];J[g+36>>2]=a;N[g+48>>2]=d;d=Q(ia[J[J[e>>2]+12>>2]](e,g+8|0,0))}ga=g- -64|0;return Q(d)}function Vg(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0);ia[J[J[b>>2]+68>>2]](a,b,c);if(Q(ia[J[J[b>>2]+48>>2]](b))!=Q(0)){e=N[c+4>>2];d=N[c>>2];f=N[c+8>>2];g=Q(ia[J[J[b>>2]+48>>2]](b));b=Q(Q(f*f)+Q(Q(d*d)+Q(e*e)))<Q(1.4210854715202004e-14);d=b?Q(-1):d;h=d;f=b?Q(-1):f;e=b?Q(-1):e;d=Q(Q(1)/Q(Y(Q(Q(f*f)+Q(Q(d*d)+Q(e*e))))));N[a>>2]=N[a>>2]+Q(g*Q(h*d));N[a+4>>2]=N[a+4>>2]+Q(g*Q(e*d));N[a+8>>2]=N[a+8>>2]+Q(g*Q(f*d))}}function mC(a,b,c){a=a|0;b=b|0;c=c|0;b=J[b+164>>2]+(c<<6)|0;c=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;c=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=c;c=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=c;c=J[b+36>>2];J[a+32>>2]=J[b+32>>2];J[a+36>>2]=c;c=J[b+44>>2];J[a+40>>2]=J[b+40>>2];J[a+44>>2]=c;c=J[b+60>>2];J[a+56>>2]=J[b+56>>2];J[a+60>>2]=c;c=J[b+52>>2];J[a+48>>2]=J[b+48>>2];J[a+52>>2]=c}function yh(a,b){var c=0,d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;c=J[d+8>>2];a=ga-16|0;ga=a;b=J[d+12>>2];J[a+12>>2]=b;J[a+8>>2]=c;c=J[a+12>>2];J[(ga-16|0)+12>>2]=c;Yd(c);e=ga-16|0;J[e+12>>2]=J[a+8>>2];J[a+4>>2]=J[J[e+12>>2]+4>>2];e=J[a+4>>2];J[a>>2]=0;Ch(c,e,a);pf(J[a+8>>2],J[a+4>>2],J[c+12>>2]);ga=a+16|0;a=J[d+8>>2];c=J[a+24>>2];J[b+20>>2]=J[a+20>>2];J[b+24>>2]=c;c=J[a+32>>2];J[b+28>>2]=J[a+28>>2];J[b+32>>2]=c;ga=d+16|0}function zE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=0;l=J[a+96>>2];e=J[a+104>>2]+((b|0)%(l|0)<<4)|0;f=N[e>>2];g=N[e+4>>2];h=N[e+8>>2];i=N[a+16>>2];j=N[a+20>>2];k=N[a+12>>2];J[c+12>>2]=0;N[c+8>>2]=h*j;N[c+4>>2]=g*i;N[c>>2]=f*k;b=J[a+104>>2]+((b+1|0)%(l|0)<<4)|0;f=N[b>>2];g=N[b+4>>2];h=N[b+8>>2];i=N[a+16>>2];j=N[a+20>>2];k=N[a+12>>2];J[d+12>>2]=0;N[d+8>>2]=h*j;N[d+4>>2]=g*i;N[d>>2]=f*k}function Mx(a,b){a=a|0;b=b|0;var c=0,d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=J[d+12>>2];J[b+8>>2]=a;a=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a>>2]=N[a>>2]+N[J[c+12>>2]>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a+4>>2]=N[a+4>>2]+N[J[c+12>>2]+4>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a+8>>2]=N[a+8>>2]+N[J[c+12>>2]+8>>2];N[a+12>>2]=N[a+12>>2]+N[J[b+8>>2]+12>>2];ga=b+16|0;ga=d+16|0;return a|0}function Lx(a,b){a=a|0;b=b|0;var c=0,d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;a=J[d+8>>2];b=ga-16|0;ga=b;J[b+12>>2]=J[d+12>>2];J[b+8>>2]=a;a=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a>>2]=N[a>>2]-N[J[c+12>>2]>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a+4>>2]=N[a+4>>2]-N[J[c+12>>2]+4>>2];c=ga-16|0;J[c+12>>2]=J[b+8>>2];N[a+8>>2]=N[a+8>>2]-N[J[c+12>>2]+8>>2];N[a+12>>2]=N[a+12>>2]-N[J[b+8>>2]+12>>2];ga=b+16|0;ga=d+16|0;return a|0}function nl(a,b){var c=0,d=Q(0),e=0,f=0,g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=0,l=Q(0),m=Q(0);f=J[a>>2];if((f|0)>0){g=N[a+308>>2];h=N[b+8>>2];i=N[b+4>>2];j=N[b>>2];while(1){k=c;c=(e<<4)+a|0;d=Q(h-N[c+12>>2]);l=Q(d*d);d=Q(j-N[c+4>>2]);m=Q(d*d);d=Q(i-N[c+8>>2]);c=k|Q(l+Q(m+Q(d*d)))<=g;e=e+1|0;if((f|0)!=(e|0)){continue}break}}if(!(N[b+12>>2]!=N[a+304>>2]|N[b+8>>2]!=N[a+300>>2]|N[b+4>>2]!=N[a+296>>2])){c=N[b>>2]==N[a+292>>2]|c}return c&1}function bb(){var a=0,b=0;b=ga-32|0;ga=b;if(!(H[29512]&1)){a=ga-48|0;ga=a;if(!(H[29564]&1)){N[a+44>>2]=1;N[a+40>>2]=0;N[a+36>>2]=0;N[a+32>>2]=0;N[a+28>>2]=1;N[a+24>>2]=0;N[a+20>>2]=0;N[a+16>>2]=0;N[a+12>>2]=1;qf(29516,a+44|0,a+40|0,a+36|0,a+32|0,a+28|0,a+24|0,a+20|0,a+16|0,a+12|0);H[29564]=1}ga=a+48|0;N[b+12>>2]=0;N[b+8>>2]=0;N[b+4>>2]=0;a=b+16|0;na(a,b+12|0,b+8|0,b+4|0);Vf(29448,29516,a);H[29512]=1}ga=b+32|0;return 29448}function xp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;e=J[c+12>>2];b=J[c+8>>2];a=ga+-64|0;ga=a;J[a+12>>2]=0;J[a+16>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;J[a+20>>2]=1065353216;J[a+32>>2]=0;J[a+36>>2]=0;J[a+40>>2]=1065353216;J[a+44>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a>>2]=1065353216;d=J[b+12>>2];J[a+56>>2]=J[b+8>>2];J[a+60>>2]=d;d=J[b+4>>2];J[a+48>>2]=J[b>>2];J[a+52>>2]=d;mg(e,a);ga=a- -64|0;ga=c+16|0}function _B(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[b+4>>2];J[a+52>>2]=J[b>>2];J[a+56>>2]=c;c=J[b+12>>2];J[a+60>>2]=J[b+8>>2];J[a+64>>2]=c;c=J[a+152>>2];a:{if(!c){break a}d=c;if(c&1){d=c-1|0;e=J[J[a+160>>2]+(d<<2)>>2];ia[J[J[e>>2]+24>>2]](e,b)}if((c|0)==1){break a}while(1){c=J[(J[a+160>>2]+(d<<2)|0)-4>>2];ia[J[J[c>>2]+24>>2]](c,b);d=d-2|0;c=J[J[a+160>>2]+(d<<2)>>2];ia[J[J[c>>2]+24>>2]](c,b);if(d){continue}break}}H[a+48|0]=1}function nc(a,b){var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;d=N[J[b+12>>2]+4>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d*N[J[b+12>>2]>>2]);b=ga-16|0;J[b+12>>2]=a+16;e=N[J[b+12>>2]+4>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d+Q(e*N[J[b+12>>2]+4>>2]));b=ga-16|0;J[b+12>>2]=a+32;e=N[J[b+12>>2]+4>>2];a=ga-16|0;J[a+12>>2]=J[c+8>>2];ga=c+16|0;return Q(Q(e*N[J[a+12>>2]+8>>2])+d)}function mc(a,b){var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;d=N[J[b+12>>2]+8>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d*N[J[b+12>>2]>>2]);b=ga-16|0;J[b+12>>2]=a+16;e=N[J[b+12>>2]+8>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d+Q(e*N[J[b+12>>2]+4>>2]));b=ga-16|0;J[b+12>>2]=a+32;e=N[J[b+12>>2]+8>>2];a=ga-16|0;J[a+12>>2]=J[c+8>>2];ga=c+16|0;return Q(Q(e*N[J[a+12>>2]+8>>2])+d)}function Zj(a){a=a|0;var b=0;J[a>>2]=22728;if(K[a+456|0]){b=J[a+452>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+452>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+420>>2];if(!(b?!b|!K[a+424|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+420>>2]=0;H[a+424|0]=1;J[a+412>>2]=0;J[a+416>>2]=0;b=J[a+336>>2];if(!(b?!b|!K[a+340|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+336>>2]=0;H[a+340|0]=1;J[a+328>>2]=0;J[a+332>>2]=0;sg(a);return a|0}function Yz(a){a=a|0;var b=0;J[a>>2]=20548;b=J[a+80>>2];if(!(b?!b|!K[a+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+80>>2]=0;H[a+84|0]=1;J[a+72>>2]=0;J[a+76>>2]=0;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+40>>2]=0;H[a+44|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;return a|0}function ZF(a){a=a|0;var b=0;J[a>>2]=11460;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+40>>2]=0;H[a+44|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function cI(a){a=a|0;var b=0;J[a>>2]=6004;b=J[a- -64>>2];if(!(b?!b|!K[a+68|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+64>>2]=0;H[a+68|0]=1;J[a+56>>2]=0;J[a+60>>2]=0;b=J[a+44>>2];if(!(b?!b|!K[a+48|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+44>>2]=0;H[a+48|0]=1;J[a+36>>2]=0;J[a+40>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function oc(a,b){var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;d=N[J[b+12>>2]>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d*N[J[b+12>>2]>>2]);b=ga-16|0;J[b+12>>2]=a+16;e=N[J[b+12>>2]>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d+Q(e*N[J[b+12>>2]+4>>2]));b=ga-16|0;J[b+12>>2]=a+32;e=N[J[b+12>>2]>>2];a=ga-16|0;J[a+12>>2]=J[c+8>>2];ga=c+16|0;return Q(Q(e*N[J[a+12>>2]+8>>2])+d)}function gG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=J[b>>2];e=ia[J[J[e>>2]+56>>2]](e,28)|0;f=K[a+4|0];g=J[a+8>>2];a=J[a+12>>2];J[e>>2]=8624;J[e+4>>2]=J[b>>2];J[e+24>>2]=a;J[e+20>>2]=g;H[e+16|0]=f;J[e+12>>2]=0;H[e+8|0]=0;J[e>>2]=10192;a=J[e+4>>2];b=f?d:c;c=f?c:d;if(ia[J[J[a>>2]+24>>2]](a,J[b+8>>2],J[c+8>>2])|0){a=J[e+4>>2];a=ia[J[J[a>>2]+12>>2]](a,J[b+8>>2],J[c+8>>2])|0;H[e+8|0]=1;J[e+12>>2]=a}return e|0}function Mg(a,b,c){var d=0,e=0;d=J[a+12>>2];if(!d){d=J[a+4>>2];d=ia[J[J[d>>2]+12>>2]](d,J[b+8>>2],J[c+8>>2])|0;J[a+12>>2]=d}J[J[a+16>>2]+4>>2]=d;e=J[a+4>>2];d=ia[J[J[e>>2]+8>>2]](e,b,c,d)|0;e=J[a+16>>2];ia[J[J[e>>2]+8>>2]](e,J[a+28>>2],J[a+24>>2]);e=J[a+16>>2];ia[J[J[e>>2]+12>>2]](e,J[a+36>>2],J[a+32>>2]);ia[J[J[d>>2]+8>>2]](d,b,c,J[a+20>>2],J[a+16>>2]);ia[J[J[d>>2]>>2]](d)|0;a=J[a+4>>2];ia[J[J[a>>2]+60>>2]](a,d)}function vf(a,b){var c=0,d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];c=J[b+4>>2];a=J[d+12>>2];J[a>>2]=J[b>>2];J[a+4>>2]=c;J[a+24>>2]=J[b+24>>2];c=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;rf(a+28|0,J[d+8>>2]+28|0);b=J[d+8>>2];c=J[b+80>>2];J[a+76>>2]=J[b+76>>2];J[a+80>>2]=c;J[a+92>>2]=J[b+92>>2];c=J[b+88>>2];J[a+84>>2]=J[b+84>>2];J[a+88>>2]=c;ga=d+16|0}function ck(a,b,c,d,e){J[a>>2]=8624;J[a+4>>2]=J[b>>2];H[a+8|0]=e;J[a>>2]=21896;b=J[b>>2];H[a+88|0]=1;J[a- -64>>2]=0;J[a+60>>2]=b;J[a+12>>2]=21924;J[a+84>>2]=0;H[a+108|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;J[a+104>>2]=0;H[a+128|0]=1;J[a+96>>2]=0;J[a+100>>2]=0;J[a+124>>2]=0;H[a+148|0]=1;J[a+116>>2]=0;J[a+120>>2]=0;J[a+144>>2]=0;J[a+136>>2]=0;J[a+140>>2]=0;J[a+16>>2]=J[(e?d:c)+8>>2];J[a+20>>2]=J[(e?c:d)+8>>2];ak(a+72|0)}function Ut(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;b=J[d+8>>2];a=ga-32|0;ga=a;J[a+28>>2]=J[d+12>>2];J[a+24>>2]=b;c=J[a+24>>2];e=J[c+4>>2];b=J[a+28>>2];J[b+348>>2]=J[c>>2];J[b+352>>2]=e;e=J[c+12>>2];J[b+356>>2]=J[c+8>>2];J[b+360>>2]=e;Ia(a+8|0,b+348|0,b+344|0);c=J[a+12>>2];J[b+560>>2]=J[a+8>>2];J[b+564>>2]=c;c=J[a+20>>2];J[b+568>>2]=J[a+16>>2];J[b+572>>2]=c;ga=a+32|0;ga=d+16|0}function Pk(a,b){var c=Q(0);J[a+20>>2]=0;J[a+24>>2]=0;H[a+28|0]=0;c=N[a+4>>2];a:{if(!(c>=Q(0))){break a}b=Pa(Q(b-N[a>>2]),Q(6.2831854820251465));b:{if(b<Q(-3.1415927410125732)){b=Q(b+Q(6.2831854820251465));break b}if(!(b>Q(3.1415927410125732))){break b}b=Q(b+Q(-6.2831854820251465))}c:{if(Q(-c)>b){H[a+28|0]=1;b=Q(-Q(c+b));c=Q(1);break c}if(!(b>c)){break a}H[a+28|0]=1;b=Q(c-b);c=Q(-1)}N[a+24>>2]=c;N[a+20>>2]=b}}function Oh(a,b,c){var d=0,e=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;c=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=J[d+16>>2]+(J[d+12>>2]<<4)|0;a=ga-16|0;J[a+12>>2]=16;J[a+8>>2]=b;b=J[c+12>>2]+(J[d+12>>2]<<4)|0;e=J[b+4>>2];a=J[a+8>>2];J[a>>2]=J[b>>2];J[a+4>>2]=e;e=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=e;J[d+12>>2]=J[d+12>>2]+1;continue}break}ga=d+32|0}function jB(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);a:{b:{if(c>>>0<=2){c:{switch(b-2|0){case 0:a=((c<<2)+a|0)+756|0;break b;case 2:a=((c<<2)+a|0)+772|0;break b;case 1:break c;default:break a}}a=((c<<2)+a|0)+740|0;break b}c=c-3|0;if(c>>>0>2){break a}d:{switch(b-2|0){case 0:a=((c<<6)+a|0)+900|0;break b;case 2:a=((c<<6)+a|0)+904|0;break b;case 1:break d;default:break a}}a=((c<<6)+a|0)+896|0}d=N[a>>2]}return Q(d)}function qf(a,b,c,d,e,f,g,h,i,j){var k=0;k=ga-48|0;ga=k;J[k+40>>2]=a;J[k+36>>2]=b;J[k+32>>2]=c;J[k+28>>2]=d;J[k+24>>2]=e;J[k+20>>2]=f;J[k+16>>2]=g;J[k+12>>2]=h;J[k+8>>2]=i;J[k+4>>2]=j;a=J[k+40>>2];J[k+44>>2]=a;c=a+48|0;b=a;while(1){J[(ga-16|0)+12>>2]=b;b=b+16|0;if((c|0)!=(b|0)){continue}break}ld(a,J[k+36>>2],J[k+32>>2],J[k+28>>2],J[k+24>>2],J[k+20>>2],J[k+16>>2],J[k+12>>2],J[k+8>>2],J[k+4>>2]);ga=k+48|0}function wH(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=6716;b=J[a+8>>2];if((b|0)>0){while(1){e=J[J[a+16>>2]+(c<<2)>>2];d=J[e+188>>2];if(d){b=J[a+68>>2];b=ia[J[J[b>>2]+36>>2]](b)|0;ia[J[J[b>>2]+40>>2]](b,d,J[a+24>>2]);b=J[a+68>>2];ia[J[J[b>>2]+12>>2]](b,d,J[a+24>>2]);J[e+188>>2]=0;b=J[a+8>>2]}c=c+1|0;if((c|0)<(b|0)){continue}break}}b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function An(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-32|0;ga=e;J[e+28>>2]=a;J[e+24>>2]=b;J[e+20>>2]=c;J[e+16>>2]=d;J[e+12>>2]=J[J[e+24>>2]>>2];J[e+8>>2]=J[J[e+20>>2]>>2];J[e+4>>2]=Md(J[e+12>>2]);J[e>>2]=Md(J[e+8>>2]);if(J[e+4>>2]){a=J[e+4>>2];ia[J[J[a>>2]+32>>2]](a,J[e+20>>2],J[e+16>>2],J[e+24>>2])}if(J[e>>2]){a=J[e>>2];ia[J[J[a>>2]+32>>2]](a,J[e+24>>2],J[e+16>>2],J[e+20>>2])}ga=e+32|0;return 0}function Gc(a,b,c){var d=0,e=0,f=0,g=0;e=Ed(a,b);a:{if(!e){e=0;break a}f=J[a+8>>2];if((f|0)>=0){if(!f){break a}while(1){d=J[e+32>>2];if(!d){break a}e=d;g=g+1|0;if((f|0)!=(g|0)){continue}break}break a}e=J[a>>2]}d=J[c+4>>2];J[b>>2]=J[c>>2];J[b+4>>2]=d;d=J[c+28>>2];J[b+24>>2]=J[c+24>>2];J[b+28>>2]=d;d=J[c+20>>2];J[b+16>>2]=J[c+16>>2];J[b+20>>2]=d;d=J[c+12>>2];J[b+8>>2]=J[c+8>>2];J[b+12>>2]=d;Dd(a,e,b)}function En(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-160|0;ga=d;J[d+156>>2]=a;J[d+152>>2]=b;J[d+148>>2]=c;a=J[d+156>>2];Pb(d+80|0);b=J[a+4>>2];a:{if(ia[J[J[b>>2]+92>>2]](b)&1){b=d+16|0;c=J[a+4>>2];ia[J[J[c>>2]+132>>2]](b,c,J[d+152>>2]);vb(d+80|0,b);break a}de(d+80|0)}a=J[a+4>>2];J[d+12>>2]=ia[J[J[a>>2]+124>>2]](a,J[d+152>>2]);a=J[d+12>>2];b=J[d+148>>2];ia[J[J[a>>2]+8>>2]](a,d+80|0,b,b+16|0);ga=d+160|0}function Aq(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0,f=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;d=J[c+12>>2];if(J[d+136>>2]>0){f=Q(Q(1)/N[J[d+116>>2]+344>>2]);while(1){b=Q(0);a=J[d+144>>2]+P(e,284)|0;if(K[a+84|0]){b=N[a+272>>2];b=Q(U(Q(f*Q(Q(Q(N[a+216>>2]*Q(N[a+204>>2]-N[a+32>>2]))*N[a+268>>2])-Q(N[a+(b<Q(0)?220:224)>>2]*b))),Q(0)))}N[a+276>>2]=b;e=e+1|0;if((e|0)<J[d+136>>2]){continue}break}}ga=c+16|0}function wa(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;b=ga-16|0;J[b+12>>2]=J[d+28>>2];J[b+8>>2]=0;N[d+20>>2]=Ua(J[b+12>>2]+(J[b+8>>2]<<4)|0,J[d+24>>2]);b=ga-16|0;J[b+12>>2]=J[d+28>>2];J[b+8>>2]=1;N[d+16>>2]=Ua(J[b+12>>2]+(J[b+8>>2]<<4)|0,J[d+24>>2]);b=ga-16|0;J[b+12>>2]=J[d+28>>2];J[b+8>>2]=2;N[d+12>>2]=Ua(J[b+12>>2]+(J[b+8>>2]<<4)|0,J[d+24>>2]);na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function ah(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0);c=Q(ia[J[J[a>>2]+48>>2]](a));d=Q(ia[J[J[a>>2]+48>>2]](a));e=Q(ia[J[J[a>>2]+48>>2]](a));f=N[a+16>>2];g=N[a+32>>2];h=N[a+20>>2];i=N[a+36>>2];j=N[a+12>>2];k=N[a+28>>2];Ve(a,b);J[a+40>>2]=0;N[a+36>>2]=Q(Q(Q(e+i)/h)*N[a+20>>2])-e;N[a+32>>2]=Q(Q(Q(d+g)/f)*N[a+16>>2])-d;N[a+28>>2]=Q(Q(Q(c+k)/j)*N[a+12>>2])-c}function ph(a,b){var c=0;J[a>>2]=5668;jc(a+4|0);jc(a- -64|0);H[a+193|0]=0;H[a+194|0]=1;c=!b;H[a+192|0]=c;J[a+164>>2]=0;J[a+140>>2]=0;J[a+144>>2]=0;J[a+176>>2]=0;J[a+168>>2]=0;J[a+172>>2]=0;J[a+156>>2]=10;J[a+160>>2]=1;J[a+148>>2]=1;J[a+152>>2]=0;if(c){J[8369]=J[8369]+1;b=ia[J[6782]](76,16)|0;mh(b)}J[a+188>>2]=0;J[a+136>>2]=b;J[a+180>>2]=0;J[a+184>>2]=0;J[a+124>>2]=0;J[a+128>>2]=0;J[a+132>>2]=0}function cE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=0,l=Q(0);if((d|0)>0){while(1){f=N[a+32>>2];g=N[a+28>>2];k=i<<4;e=k+b|0;j=N[e>>2];h=N[e+8>>2];l=Q(Y(Q(Q(j*j)+Q(h*h))));a:{if(l!=Q(0)){g=Q(g/l);h=Q(h*g);g=Q(j*g);f=N[e+4>>2]<Q(0)?Q(-f):f;break a}h=Q(0);f=N[e+4>>2]<Q(0)?Q(-f):f}e=c+k|0;N[e+8>>2]=h;N[e+4>>2]=f;N[e>>2]=g;i=i+1|0;if((i|0)!=(d|0)){continue}break}}}function bE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=0,l=Q(0);if((d|0)>0){while(1){f=N[a+36>>2];g=N[a+28>>2];k=i<<4;e=k+b|0;j=N[e>>2];h=N[e+4>>2];l=Q(Y(Q(Q(j*j)+Q(h*h))));a:{if(l!=Q(0)){g=Q(g/l);h=Q(h*g);g=Q(j*g);f=N[e+8>>2]<Q(0)?Q(-f):f;break a}h=Q(0);f=N[e+8>>2]<Q(0)?Q(-f):f}e=c+k|0;N[e+8>>2]=f;N[e+4>>2]=h;N[e>>2]=g;i=i+1|0;if((i|0)!=(d|0)){continue}break}}}function qe(a){var b=0,c=0;b=ga-16|0;ga=b;N[b+8>>2]=a;c=ga-16|0;ga=c;N[c+12>>2]=N[b+8>>2];N[c+8>>2]=6.2831854820251465;a=Pa(N[c+12>>2],N[c+8>>2]);ga=c+16|0;N[b+8>>2]=a;a:{if(N[b+8>>2]<Q(-3.1415927410125732)){N[b+12>>2]=N[b+8>>2]+Q(6.2831854820251465);break a}if(N[b+8>>2]>Q(3.1415927410125732)){N[b+12>>2]=N[b+8>>2]-Q(6.2831854820251465);break a}N[b+12>>2]=N[b+8>>2]}ga=b+16|0;return N[b+12>>2]}function Dh(a,b,c,d){var e=0,f=Q(0);e=ga-32|0;ga=e;J[e+28>>2]=b;J[e+24>>2]=c;J[e+20>>2]=d;b=ga-16|0;J[b+12>>2]=a;f=Q(L[J[e+28>>2]>>1]);J[b+12>>2]=J[e+20>>2];N[e+16>>2]=f/N[J[b+12>>2]>>2];f=Q(L[J[e+28>>2]+2>>1]);J[b+12>>2]=J[e+20>>2];N[e+12>>2]=f/N[J[b+12>>2]+4>>2];f=Q(L[J[e+28>>2]+4>>1]);J[b+12>>2]=J[e+20>>2];N[e+8>>2]=f/N[J[b+12>>2]+8>>2];na(a,e+16|0,e+12|0,e+8|0);jb(a,J[e+24>>2]);ga=e+32|0}function aE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0),i=0,j=Q(0),k=0,l=Q(0);if((d|0)>0){while(1){f=N[a+28>>2];g=N[a+32>>2];k=i<<4;e=k+b|0;j=N[e+4>>2];h=N[e+8>>2];l=Q(Y(Q(Q(j*j)+Q(h*h))));a:{if(l!=Q(0)){g=Q(g/l);h=Q(h*g);g=Q(j*g);f=N[e>>2]<Q(0)?Q(-f):f;break a}h=Q(0);f=N[e>>2]<Q(0)?Q(-f):f}e=c+k|0;N[e+8>>2]=h;N[e+4>>2]=g;N[e>>2]=f;i=i+1|0;if((i|0)!=(d|0)){continue}break}}}function Mf(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;J[c+4>>2]=J[J[b+12>>2]+4>>2];b=J[c+4>>2];d=ga-16|0;J[d+12>>2]=a;if(J[J[d+12>>2]+8>>2]==(b|0)){b=ga-16|0;J[b+12>>2]=a;d=J[J[b+12>>2]+4>>2];J[b+12>>2]=a;J[b+8>>2]=d;if(J[b+8>>2]){b=J[b+8>>2]<<1}else{b=1}Th(a,b)}J[J[a+12>>2]+(J[a+4>>2]<<2)>>2]=J[J[c+8>>2]>>2];J[a+4>>2]=J[a+4>>2]+1;ga=c+16|0}function Qg(a){var b=0;J[a+4>>2]=35;J[a+8>>2]=0;J[a>>2]=14268;J[a+44>>2]=1025758986;J[a+20>>2]=1065353216;J[a+24>>2]=0;J[a+12>>2]=1065353216;J[a+16>>2]=1065353216;J[a>>2]=13984;H[a+88|0]=0;J[a+80>>2]=-1082130432;J[a+84>>2]=0;J[a+72>>2]=-1082130432;J[a+76>>2]=-1082130432;b=a- -64|0;J[b>>2]=1065353216;J[b+4>>2]=0;J[a+56>>2]=1065353216;J[a+60>>2]=1065353216;J[a>>2]=15908;J[a+52>>2]=0;return a}function EF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=Q(0),g=Q(0),h=Q(0);e=ga-48|0;ga=e;ia[J[J[a>>2]+124>>2]](a,e+32|0,d);f=N[e+32>>2];g=N[e+36>>2];h=N[e+40>>2];J[b+12>>2]=0;N[b+8>>2]=h;N[b+4>>2]=g;N[b>>2]=f;J[e+12>>2]=0;N[e+8>>2]=-h;N[e+4>>2]=-g;N[e>>2]=-f;ia[J[J[a>>2]+64>>2]](e+16|0,a,e);a=J[e+28>>2];J[c+8>>2]=J[e+24>>2];J[c+12>>2]=a;a=J[e+20>>2];J[c>>2]=J[e+16>>2];J[c+4>>2]=a;ga=e+48|0}function tg(a,b){var c=0,d=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];d=J[b+4>>2];a=J[c+12>>2];J[a>>2]=J[b>>2];J[a+4>>2]=d;d=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=d;b=J[c+8>>2];d=J[b+20>>2];J[a+16>>2]=J[b+16>>2];J[a+20>>2]=d;d=J[b+28>>2];J[a+24>>2]=J[b+24>>2];J[a+28>>2]=d;b=J[c+8>>2];c=J[b+36>>2];J[a+32>>2]=J[b+32>>2];J[a+36>>2]=c;c=J[b+44>>2];J[a+40>>2]=J[b+40>>2];J[a+44>>2]=c}function BB(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0);if(K[a+527|0]){J[b>>2]=0;J[b+4>>2]=0;return}J[b>>2]=3;J[b+4>>2]=3;c=J[a+28>>2];d=J[a+32>>2];zg(a,c+4|0,d+4|0,c+264|0,d+264|0);a:{if(!K[a+526|0]){break a}c=J[b>>2];J[b>>2]=c+1;d=J[b+4>>2];J[b+4>>2]=d-1;e=N[a+456>>2];if(!(e>N[a+444>>2])|!(N[a+448>>2]<e)){break a}J[b+4>>2]=d-2;J[b>>2]=c+2}if(K[a+525|0]){J[b>>2]=J[b>>2]+1;J[b+4>>2]=J[b+4>>2]-1}}function yD(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(56);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;J[c+52>>2]=1;J[c+4>>2]=10;J[c>>2]=12788;J[c+40>>2]=0;N[c+36>>2]=a;N[c+32>>2]=b*Q(.5);N[c+28>>2]=a;ga=d+16|0;return c|0}function Mw(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(56);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;J[c+52>>2]=0;J[c>>2]=12888;J[c+4>>2]=10;J[c+40>>2]=0;N[c+36>>2]=a;N[c+32>>2]=a;N[c+28>>2]=b*Q(.5);ga=d+16|0;return c|0}function Lw(a,b){a=Q(a);b=Q(b);var c=0,d=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;c=ra(56);a=N[d+12>>2];b=N[d+8>>2];J[c+4>>2]=35;J[c+8>>2]=0;J[c>>2]=14268;J[c+44>>2]=1025758986;J[c+20>>2]=1065353216;J[c+24>>2]=0;J[c+12>>2]=1065353216;J[c+16>>2]=1065353216;J[c>>2]=13984;J[c+52>>2]=2;J[c>>2]=12988;J[c+4>>2]=10;J[c+40>>2]=0;N[c+36>>2]=b*Q(.5);N[c+32>>2]=a;N[c+28>>2]=a;ga=d+16|0;return c|0}function ei(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;J[c+4>>2]=J[J[b+12>>2]+4>>2];b=J[c+4>>2];d=ga-16|0;J[d+12>>2]=a;if(J[J[d+12>>2]+8>>2]==(b|0)){b=ga-16|0;J[b+12>>2]=a;d=J[J[b+12>>2]+4>>2];J[b+12>>2]=a;J[b+8>>2]=d;if(J[b+8>>2]){b=J[b+8>>2]<<1}else{b=1}di(a,b)}vf(J[a+12>>2]+P(J[a+4>>2],96)|0,J[c+8>>2]);J[a+4>>2]=J[a+4>>2]+1;ga=c+16|0}function _g(a,b){a=a|0;b=Q(b);var c=Q(0),d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0);c=Q(ia[J[J[a>>2]+48>>2]](a));d=Q(ia[J[J[a>>2]+48>>2]](a));e=Q(ia[J[J[a>>2]+48>>2]](a));N[a+44>>2]=b;b=N[a+36>>2];f=N[a+32>>2];g=N[a+28>>2];h=Q(ia[J[J[a>>2]+48>>2]](a));i=Q(ia[J[J[a>>2]+48>>2]](a));j=Q(ia[J[J[a>>2]+48>>2]](a));J[a+40>>2]=0;N[a+32>>2]=Q(d+f)-i;N[a+28>>2]=Q(c+g)-h;N[a+36>>2]=Q(e+b)-j}function fH(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0),f=Q(0),g=0,h=0;c=ga-32|0;ga=c;d=J[a+184>>2];e=N[d+4>>2];a:{if(e==Q(0)){break a}b=J[b>>2];if(!(ia[J[J[d>>2]+8>>2]](d,J[b+188>>2])|0)){break a}f=N[a+188>>2];d=J[a+184>>2];g=J[a+192>>2];h=J[b+192>>2];J[c+24>>2]=-1;J[c+28>>2]=-1;J[c+20>>2]=b+4;J[c+16>>2]=b;J[c+12>>2]=h;J[c+8>>2]=0;hh(g,a+36|0,a+100|0,c+8|0,d,f)}ga=c+32|0;return e!=Q(0)|0}function CF(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);g=N[a+36>>2];h=N[a+32>>2];d=N[a+28>>2];e=Q(1);a:{b:{c:{d:{e:{switch(c|0){case 1:e=Q(-1);break b;case 2:f=Q(1);break c;case 3:f=Q(-1);break c;case 4:d=Q(1);break d;case 0:break b;case 5:break e;default:break a}}d=Q(-1)}i=d;e=Q(0);d=g;break b}e=Q(0);d=h}N[b+8>>2]=i;N[b+4>>2]=f;N[b>>2]=e;N[b+12>>2]=-d}}function dc(a){var b=0,c=0,d=0,e=0,f=Q(0);b=ga-16|0;ga=b;c=J[a+8>>2];e=J[a+12>>2];a:{if((e|0)>0|(e|0)>=0){f=Q(Q(Q(+(c>>>0)+ +(e>>>0)*4294967296)*Q(0x10000000000000000))+Q(+M[a>>2]+ +M[a+4>>2]*4294967296));break a}d=J[a+4>>2];a=J[a>>2];J[b>>2]=0-a;J[b+4>>2]=0-(d+((a|0)!=0)|0);a=!(a|d);d=c^-1;c=a+d|0;a=e^-1;J[b+8>>2]=c;J[b+12>>2]=c>>>0<d>>>0?a+1|0:a;f=Q(-dc(b))}ga=b+16|0;return f}function ug(a,b,c){var d=0;d=ga-16|0;ga=d;J[a+28>>2]=c;J[a+24>>2]=-1;I[a+20>>1]=1;J[a+16>>2]=2139095039;J[a+8>>2]=-1;J[a+12>>2]=-1;J[a+4>>2]=b;J[a>>2]=20112;if(!K[32576]){J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;qg(31960,d);H[32576]=1}J[d+8>>2]=0;J[d+12>>2]=0;J[d>>2]=0;J[d+4>>2]=0;we(31960,Q(0),d);J[a+44>>2]=0;J[a+36>>2]=0;J[a+40>>2]=1050253722;J[a+32>>2]=31960;ga=d+16|0}function MF(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0);d=N[b+32>>2];e=N[b+36>>2];f=N[b+28>>2];g=Q(ia[J[J[b>>2]+48>>2]](b));h=Q(ia[J[J[b>>2]+48>>2]](b));i=Q(ia[J[J[b>>2]+48>>2]](b));j=N[c>>2];k=N[c+4>>2];l=N[c+8>>2];J[a+12>>2]=0;e=Q(e+i);N[a+8>>2]=l>=Q(0)?e:Q(-e);d=Q(d+h);N[a+4>>2]=k>=Q(0)?d:Q(-d);d=Q(f+g);N[a>>2]=j>=Q(0)?d:Q(-d)}function FF(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);e=N[a+36>>2];d=N[a+32>>2];f=N[a+28>>2];g=Q(ia[J[J[a>>2]+48>>2]](a));h=Q(ia[J[J[a>>2]+48>>2]](a));i=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;d=Q(d+h);a=b>>>1&1;N[c+4>>2]=Q(d*Q(!a|0))-Q(Q(a|0)*d);d=Q(f+g);a=b&1;N[c>>2]=Q(d*Q(!a|0))-Q(Q(a|0)*d);e=Q(e+i);a=b>>>2&1;N[c+8>>2]=Q(e*Q(!a|0))-Q(Q(a|0)*e)}function he(a,b,c,d,e){var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;b=J[f+24>>2];c=J[f+20>>2];d=J[f+16>>2];e=J[f+12>>2];a=ga-32|0;J[a+28>>2]=J[f+28>>2];J[a+24>>2]=b;J[a+20>>2]=c;J[a+16>>2]=d;J[a+12>>2]=e;b=J[a+28>>2];N[b>>2]=N[J[a+24>>2]>>2];N[b+4>>2]=N[J[a+20>>2]>>2];N[b+8>>2]=N[J[a+16>>2]>>2];N[b+12>>2]=N[J[a+12>>2]>>2];ga=f+32|0}function de(a){var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-48|0;ga=a;c=J[b+12>>2];J[a+44>>2]=c;d=J[a+44>>2];N[a+40>>2]=1;N[a+36>>2]=0;N[a+32>>2]=0;N[a+28>>2]=0;N[a+24>>2]=1;N[a+20>>2]=0;N[a+16>>2]=0;N[a+12>>2]=0;N[a+8>>2]=1;ld(d,a+40|0,a+36|0,a+32|0,a+28|0,a+24|0,a+20|0,a+16|0,a+12|0,a+8|0);ga=a+48|0;N[b+8>>2]=0;N[b+4>>2]=0;N[b>>2]=0;na(c+48|0,b+8|0,b+4|0,b);ga=b+16|0}function _o(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;e=J[d+8>>2];a=0;b=J[d+12>>2];c=J[b+328>>2];a:{if((c|0)<=0){break a}f=J[b+336>>2];while(1){g=(a<<2)+f|0;if(J[g>>2]!=(e|0)){a=a+1|0;if((c|0)!=(a|0)){continue}break a}break}if((a|0)>=(c|0)){break a}a=c-1|0;c=a<<2;J[g>>2]=J[c+f>>2];J[c+J[b+336>>2]>>2]=e;J[b+328>>2]=a}Ad(b,e);ga=d+16|0}function HG(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=9708;d=J[a+12>>2];if((d|0)>0){while(1){e=b<<2;c=J[e+J[a+20>>2]>>2];if(c){ia[J[J[c>>2]>>2]](c)|0;c=J[a+4>>2];ia[J[J[c>>2]+60>>2]](c,J[J[a+20>>2]+e>>2])}b=b+1|0;if((d|0)!=(b|0)){continue}break}}b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0;return a|0}function OF(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[a+36>>2];e=N[a+32>>2];f=N[a+28>>2];g=Q(ia[J[J[a>>2]+48>>2]](a));h=Q(ia[J[J[a>>2]+48>>2]](a));i=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;b=Q(b/Q(12));f=Q(f+g);f=Q(f+f);f=Q(f*f);e=Q(e+h);e=Q(e+e);e=Q(e*e);N[c+8>>2]=b*Q(f+e);d=Q(d+i);d=Q(d+d);d=Q(d*d);N[c+4>>2]=b*Q(f+d);N[c>>2]=b*Q(e+d)}function Io(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=Q(d);e=e|0;f=f|0;var g=0;g=ga+-64|0;ga=g;J[g+60>>2]=a;J[g+56>>2]=b;J[g+52>>2]=c;N[g+48>>2]=d;J[g+44>>2]=e;J[g+40>>2]=f;a=J[g+60>>2];J[g+36>>2]=27474;b=J[g+36>>2];c=J[g+56>>2];e=J[g+52>>2];d=N[g+48>>2];f=J[g+44>>2];J[g+28>>2]=J[g+40>>2];J[g+24>>2]=f;O[g+16>>3]=d;J[g+8>>2]=e;J[g+4>>2]=c;J[g>>2]=a;ba(b|0,1281,g|0)|0;ga=g- -64|0}function GG(a){a=a|0;var b=0,c=0,d=0,e=0;J[a>>2]=9708;d=J[a+12>>2];if((d|0)>0){while(1){e=b<<2;c=J[e+J[a+20>>2]>>2];if(c){ia[J[J[c>>2]>>2]](c)|0;c=J[a+4>>2];ia[J[J[c>>2]+60>>2]](c,J[J[a+20>>2]+e>>2])}b=b+1|0;if((d|0)!=(b|0)){continue}break}}b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0;ta(a)}function Bn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;J[d+16>>2]=J[J[d+24>>2]>>2];J[d+12>>2]=J[J[d+20>>2]>>2];J[d+8>>2]=Md(J[d+16>>2]);J[d+4>>2]=Md(J[d+12>>2]);if(J[d+8>>2]){a=J[d+8>>2];ia[J[J[a>>2]+28>>2]](a,J[d+20>>2],J[d+24>>2])}if(J[d+4>>2]){a=J[d+4>>2];ia[J[J[a>>2]+28>>2]](a,J[d+24>>2],J[d+20>>2])}ga=d+32|0;return 0}function YF(a){a=a|0;var b=0;J[a>>2]=11460;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+40>>2]=0;H[a+44|0]=1;J[a+32>>2]=0;J[a+36>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function Xz(a){a=a|0;var b=0;J[a>>2]=20548;b=J[a+80>>2];if(!(b?!b|!K[a+84|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+80>>2]=0;H[a+84|0]=1;J[a+72>>2]=0;J[a+76>>2]=0;b=J[a+60>>2];if(!(b?!b|!K[a- -64|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+60>>2]=0;H[a+64|0]=1;J[a+52>>2]=0;J[a+56>>2]=0;b=J[a+40>>2];if(!(b?!b|!K[a+44|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function bI(a){a=a|0;var b=0;J[a>>2]=6004;b=J[a- -64>>2];if(!(b?!b|!K[a+68|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+64>>2]=0;H[a+68|0]=1;J[a+56>>2]=0;J[a+60>>2]=0;b=J[a+44>>2];if(!(b?!b|!K[a+48|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+44>>2]=0;H[a+48|0]=1;J[a+36>>2]=0;J[a+40>>2]=0;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function bk(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];J[a+4>>2]=0;while(1){if(J[a+4>>2]<3){d=ga-16|0;J[d+12>>2]=J[a+8>>2];e=qe(N[J[d+12>>2]+(J[a+4>>2]<<2)>>2]);N[((b+868|0)+(J[a+4>>2]<<6)|0)+4>>2]=e;J[a+4>>2]=J[a+4>>2]+1;continue}break}ga=a+16|0;ga=c+16|0}function am(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0),j=Q(0);h=Q(ia[J[J[a>>2]+48>>2]](a));i=Q(ia[J[J[a>>2]+48>>2]](a));j=Q(ia[J[J[a>>2]+48>>2]](a));e=N[b+52>>2];f=N[b+56>>2];g=N[b+48>>2];J[c+12>>2]=0;N[c+8>>2]=f-j;N[c+4>>2]=e-i;N[c>>2]=g-h;e=N[b+52>>2];f=N[b+56>>2];g=N[b+48>>2];J[d+12>>2]=0;N[d+8>>2]=j+f;N[d+4>>2]=i+e;N[d>>2]=h+g}function hy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;if(Ya(a,J[b+8>>2],e)){if(!(J[b+28>>2]==1|J[b+4>>2]!=(c|0))){J[b+28>>2]=d}return}a:{if(!Ya(a,J[b>>2],e)){break a}if(!(J[b+16>>2]!=(c|0)&J[b+20>>2]!=(c|0))){if((d|0)!=1){break a}J[b+32>>2]=1;return}J[b+20>>2]=c;J[b+32>>2]=d;J[b+40>>2]=J[b+40>>2]+1;if(!(J[b+36>>2]!=1|J[b+24>>2]!=2)){H[b+54|0]=1}J[b+44>>2]=4}}function qA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[b+4>>2];J[a+248>>2]=J[b>>2];J[a+252>>2]=c;c=J[b+12>>2];J[a+256>>2]=J[b+8>>2];J[a+260>>2]=c;c=J[a+232>>2];if((c|0)>0){while(1){a:{b:{e=J[J[a+240>>2]+(d<<2)>>2];switch(J[e+216>>2]-2|0){case 0:case 3:break a;default:break b}}if(H[e+504|0]&1){break a}ue(e,b);c=J[a+232>>2]}d=d+1|0;if((c|0)>(d|0)){continue}break}}}function _F(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;a:{e=J[a+268>>2];if((e|0)<=0){break a}h=d?d:J[a+188>>2];i=J[b>>2];f=J[a+276>>2];d=0;while(1){g=(d<<2)+f|0;if(J[g>>2]!=(i|0)){d=d+1|0;if((e|0)!=(d|0)){continue}break a}break}if((d|0)>=(e|0)){break a}d=e-1|0;J[g>>2]=J[(d<<2)+f>>2];J[a+268>>2]=d;a=J[a+284>>2];ia[J[J[a>>2]+12>>2]](a,h,b,c)|0}}function fn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+44>>2]=d;J[e+40>>2]=5932;d=J[b+12>>2];J[e+16>>2]=J[b+8>>2];J[e+20>>2]=d;d=J[b+4>>2];J[e+8>>2]=J[b>>2];J[e+12>>2]=d;b=J[c+12>>2];J[e+32>>2]=J[c+8>>2];J[e+36>>2]=b;b=J[c+4>>2];J[e+24>>2]=J[c>>2];J[e+28>>2]=b;b=e+8|0;c=e+40|0;Vb(a+4|0,J[a+4>>2],b,c);a=a- -64|0;Vb(a,J[a>>2],b,c);ga=e+48|0}function ek(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];J[a+4>>2]=0;while(1){if(J[a+4>>2]<3){d=ga-16|0;J[d+12>>2]=J[a+8>>2];e=qe(N[J[d+12>>2]+(J[a+4>>2]<<2)>>2]);N[(b+868|0)+(J[a+4>>2]<<6)>>2]=e;J[a+4>>2]=J[a+4>>2]+1;continue}break}ga=a+16|0;ga=c+16|0}function dt(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;b=J[d+8>>2];c=N[d+4>>2];a=ga-16|0;J[a+12>>2]=J[d+12>>2];J[a+8>>2]=b;N[a+4>>2]=c;b=J[a+12>>2];a:{b:{switch(J[a+8>>2]-3|0){case 0:N[b+452>>2]=N[a+4>>2];break a;case 1:N[b+448>>2]=N[a+4>>2];break a;case 2:break b;default:break a}}N[b+444>>2]=N[a+4>>2]}ga=d+16|0}function Zi(a,b){var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;a=J[c+12>>2];Nf(a);J[a>>2]=17624;b=ga-16|0;ga=b;e=a+144|0;J[b+12>>2]=e;f=ga-16|0;d=J[b+12>>2];J[f+12>>2]=d;J[J[f+12>>2]>>2]=4988;J[d>>2]=4856;J[d+4>>2]=0;ga=b+16|0;Mb(a+152|0);Mb(a+172|0);J[a+148>>2]=a;b=ga-16|0;J[b+12>>2]=a+68;J[b+8>>2]=e;J[J[b+12>>2]+72>>2]=J[b+8>>2];ga=c+16|0}function ac(a,b){var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];d=N[a>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d*N[J[b+12>>2]>>2]);e=N[a+4>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];d=Q(d+Q(e*N[J[b+12>>2]+4>>2]));e=N[a+8>>2];b=ga-16|0;J[b+12>>2]=J[c+8>>2];ga=c+16|0;return Q(Q(N[a+12>>2]*N[J[c+8>>2]+12>>2])+Q(Q(e*N[J[b+12>>2]+8>>2])+d))}function tC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;a:{e=J[a+152>>2];if(!e){break a}f=e;if(e&1){f=e-1|0;g=J[J[a+160>>2]+(f<<2)>>2];ia[J[J[g>>2]+144>>2]](g,b,c,d)}if((e|0)==1){break a}while(1){e=J[(J[a+160>>2]+(f<<2)|0)-4>>2];ia[J[J[e>>2]+144>>2]](e,b,c,d);f=f-2|0;e=J[J[a+160>>2]+(f<<2)>>2];ia[J[J[e>>2]+144>>2]](e,b,c,d);if(f){continue}break}}}function Wh(a,b,c,d){var e=0;e=ga-32|0;J[e+28>>2]=a;J[e+24>>2]=b;J[e+20>>2]=c;N[e+16>>2]=d;a=J[e+28>>2];N[e+12>>2]=Q(1)-N[e+16>>2];N[a>>2]=Q(N[e+12>>2]*N[J[e+24>>2]>>2])+Q(N[e+16>>2]*N[J[e+20>>2]>>2]);N[a+4>>2]=Q(N[e+12>>2]*N[J[e+24>>2]+4>>2])+Q(N[e+16>>2]*N[J[e+20>>2]+4>>2]);N[a+8>>2]=Q(N[e+12>>2]*N[J[e+24>>2]+8>>2])+Q(N[e+16>>2]*N[J[e+20>>2]+8>>2])}function Jo(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=Q(f);var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;N[g+8>>2]=f;a=J[g+28>>2];ia[J[J[a>>2]+8>>2]](a,J[g+24>>2],J[g+20>>2],J[g+12>>2]);ia[J[J[a>>2]+8>>2]](a,J[g+20>>2],J[g+16>>2],J[g+12>>2]);ia[J[J[a>>2]+8>>2]](a,J[g+16>>2],J[g+24>>2],J[g+12>>2]);ga=g+32|0}function wm(a,b,c,d,e){var f=0,g=0;while(1){a:{b:{if(L[e>>1]<L[b>>1]|L[d>>1]>L[b+6>>1]|(L[e+4>>1]<L[b+4>>1]|L[d+4>>1]>L[b+10>>1])){break b}if(L[e+2>>1]<L[b+2>>1]|L[d+2>>1]>L[b+8>>1]){break b}f=J[b+12>>2];if((f|0)<0){break a}ia[J[J[c>>2]+8>>2]](c,f>>>21|0,f&2097151)}return}f=b+16|0;wm(a,f,c,d,e);g=b+32|0;b=J[b+28>>2];b=(b|0)>=0?g:f-(b<<4)|0;continue}}function Rx(a){a=a|0;var b=0,c=0;b=ga-32|0;ga=b;J[b+28>>2]=a;if(!K[29128]){Oa(29112);H[29128]=1}a=ga-16|0;ga=a;J[a+12>>2]=J[b+28>>2];c=J[a+12>>2];N[a+8>>2]=-N[c>>2];N[a+4>>2]=-N[c+4>>2];N[a>>2]=-N[c+8>>2];he(b+8|0,a+8|0,a+4|0,a,c+12|0);ga=a+16|0;a=J[b+12>>2];J[7278]=J[b+8>>2];J[7279]=a;a=J[b+20>>2];J[7280]=J[b+16>>2];J[7281]=a;ga=b+32|0;return 29112}function uC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;a:{e=J[a+152>>2];if(!e){break a}f=e;if(e&1){f=e-1|0;g=J[J[a+160>>2]+(f<<2)>>2];ia[J[J[g>>2]+64>>2]](g,b,c,d)}if((e|0)==1){break a}while(1){e=J[(J[a+160>>2]+(f<<2)|0)-4>>2];ia[J[J[e>>2]+64>>2]](e,b,c,d);f=f-2|0;e=J[J[a+160>>2]+(f<<2)>>2];ia[J[J[e>>2]+64>>2]](e,b,c,d);if(f){continue}break}}}function KF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=Q(0),i=Q(0),j=Q(0),k=Q(0),l=Q(0),m=Q(0);if((d|0)>0){while(1){g=f<<4;e=g+b|0;k=N[e>>2];l=N[e+4>>2];m=N[e+8>>2];h=N[a+28>>2];i=N[a+32>>2];j=N[a+36>>2];e=c+g|0;J[e+12>>2]=0;N[e+8>>2]=m>=Q(0)?j:Q(-j);N[e+4>>2]=l>=Q(0)?i:Q(-i);N[e>>2]=k>=Q(0)?h:Q(-h);f=f+1|0;if((f|0)!=(d|0)){continue}break}}}function ID(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[a+76>>2];g=N[a+60>>2];e=N[a+72>>2];h=N[a+56>>2];f=N[a+68>>2];i=N[a+52>>2];J[c+12>>2]=0;b=Q(b/Q(12));f=Q(Q(f-i)*Q(.5));f=Q(f+f);f=Q(f*f);e=Q(Q(e-h)*Q(.5));e=Q(e+e);e=Q(e*e);N[c+8>>2]=b*Q(f+e);d=Q(Q(d-g)*Q(.5));d=Q(d+d);d=Q(d*d);N[c+4>>2]=b*Q(f+d);N[c>>2]=b*Q(e+d)}function YB(a,b){a=a|0;b=Q(b);var c=0,d=0,e=0;N[a+12>>2]=b;c=J[a+152>>2];a:{if(!c){break a}d=c;if(c&1){d=c-1|0;e=J[J[a+160>>2]+(d<<2)>>2];ia[J[J[e>>2]+44>>2]](e,b)}if((c|0)==1){break a}while(1){c=J[(J[a+160>>2]+(d<<2)|0)-4>>2];ia[J[J[c>>2]+44>>2]](c,b);d=d-2|0;c=J[J[a+160>>2]+(d<<2)>>2];ia[J[J[c>>2]+44>>2]](c,b);if(d){continue}break}}H[a+48|0]=1}function Fp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=J[c+12>>2];e=J[a+712>>2];if((e|0)>0){f=J[a+720>>2];while(1){a=P(d,104)+f|0;if(N[a+88>>2]>Q(0)){N[a+56>>2]=N[b>>2]+N[a+56>>2];N[a+60>>2]=N[b+4>>2]+N[a+60>>2];a=a- -64|0;N[a>>2]=N[b+8>>2]+N[a>>2]}d=d+1|0;if((e|0)!=(d|0)){continue}break}}ga=c+16|0}function $f(a,b,c,d){H[a+53|0]=1;a:{if(J[a+4>>2]!=(c|0)){break a}H[a+52|0]=1;c=J[a+16>>2];b:{if(!c){J[a+36>>2]=1;J[a+24>>2]=d;J[a+16>>2]=b;if((d|0)!=1){break a}if(J[a+48>>2]==1){break b}break a}if((b|0)==(c|0)){c=J[a+24>>2];if((c|0)==2){J[a+24>>2]=d;c=d}if(J[a+48>>2]!=1){break a}if((c|0)==1){break b}break a}J[a+36>>2]=J[a+36>>2]+1}H[a+54|0]=1}}function nq(){var a=0,b=0,c=0;c=ua(100);a=ga-32|0;ga=a;J[a+28>>2]=c;b=J[a+28>>2];N[b>>2]=1.2000000476837158;N[b+4>>2]=0;N[b+8>>2]=0;N[b+12>>2]=1e3;N[a+24>>2]=0;N[a+20>>2]=0;N[a+16>>2]=0;na(b+16|0,a+24|0,a+20|0,a+16|0);J[b+32>>2]=0;J[b+36>>2]=0;N[a+12>>2]=0;N[a+8>>2]=-10;N[a+4>>2]=0;na(b+40|0,a+12|0,a+8|0,a+4|0);wf(b+56|0);ga=a+32|0;return c|0}function je(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+12>>2];h=J[d+4>>2];a=ga-48|0;ga=a;c=J[d+8>>2];e=J[c+192>>2];f=a+32|0;g=a+16|0;ia[J[J[e>>2]+8>>2]](e,c+4|0,f,g);J[a+12>>2]=h;J[a+4>>2]=c;J[a>>2]=8400;J[a+8>>2]=b;b=J[b+68>>2];ia[J[J[b>>2]+28>>2]](b,f,g,a);ga=a+48|0;ga=d+16|0}function le(a,b){a:{if((b|0)>=1024){a=a*8.98846567431158e307;if(b>>>0<2047){b=b-1023|0;break a}a=a*8.98846567431158e307;b=((b|0)<3069?b:3069)-2046|0;break a}if((b|0)>-1023){break a}a=a*2.004168360008973e-292;if(b>>>0>4294965304){b=b+969|0;break a}a=a*2.004168360008973e-292;b=((b|0)>-2960?b:-2960)+1938|0}z(0,0);z(1,b+1023<<20);return a*+B()}function hm(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=Q(0);i=ga-32|0;ga=i;J[i+28>>2]=a;J[i+24>>2]=b;J[i+20>>2]=c;J[i+16>>2]=d;J[i+12>>2]=e;J[i+8>>2]=f;J[i+4>>2]=g;J[i>>2]=h;a=J[i+28>>2];j=Q(ia[J[J[a>>2]+12>>2]](a,J[i+24>>2],J[i+20>>2],J[i+16>>2],J[i+12>>2],J[i+8>>2],J[i+4>>2],J[i>>2]));ga=i+32|0;return Q(j)}function Ub(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;b=J[d+28>>2];c=J[d+24>>2];N[d+20>>2]=Q(N[b+4>>2]*N[c+8>>2])+Q(-Q(N[b+8>>2]*N[c+4>>2]));N[d+16>>2]=Q(N[b+8>>2]*N[J[d+24>>2]>>2])+Q(-Q(N[b>>2]*N[J[d+24>>2]+8>>2]));N[d+12>>2]=Q(N[b>>2]*N[J[d+24>>2]+4>>2])+Q(-Q(N[b+4>>2]*N[J[d+24>>2]>>2]));na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function gH(a,b){a=a|0;b=b|0;var c=0,d=0,e=Q(0),f=0;c=ga-32|0;ga=c;d=J[a+216>>2];e=N[d+4>>2];a:{if(e==Q(0)){break a}b=J[b>>2];if(!(ia[J[J[d>>2]+8>>2]](d,J[b+188>>2])|0)){break a}d=J[a+216>>2];f=J[b+192>>2];J[c+24>>2]=-1;J[c+28>>2]=-1;J[c+20>>2]=b+4;J[c+16>>2]=b;J[c+12>>2]=f;J[c+8>>2]=0;bf(a+68|0,a+132|0,c+8|0,d)}ga=c+32|0;return e!=Q(0)|0}function Bg(a,b,c,d,e){var f=Q(0);J[a+32>>2]=c;J[a+28>>2]=b;J[a+24>>2]=d;J[a+20>>2]=e;J[a+4>>2]=0;J[a+8>>2]=1065353216;J[a+12>>2]=0;J[a+16>>2]=0;J[a>>2]=18540;J[a+36>>2]=J[b+4>>2];J[a+40>>2]=J[c+4>>2];N[a+44>>2]=ia[J[J[b>>2]+48>>2]](b);f=Q(ia[J[J[c>>2]+48>>2]](c));J[a+72>>2]=1;J[a+76>>2]=1;J[a+60>>2]=-1;H[a+52|0]=0;N[a+48>>2]=f;return a}function xC(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0,e=0,f=0;d=ga-16|0;ga=d;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0;e=J[a+152>>2];if(e){b=Q(b/Q(e|0));while(1){e=e-1|0;f=J[J[a+160>>2]+(e<<2)>>2];ia[J[J[f>>2]+32>>2]](f,b,d);N[c>>2]=N[d>>2]+N[c>>2];N[c+4>>2]=N[d+4>>2]+N[c+4>>2];N[c+8>>2]=N[d+8>>2]+N[c+8>>2];if(e){continue}break}}ga=d+16|0}function ay(a,b,c,d){a=Q(a);b=Q(b);c=Q(c);d=Q(d);var e=0,f=0,g=0,h=0;f=ga-16|0;ga=f;N[f+12>>2]=a;N[f+8>>2]=b;N[f+4>>2]=c;N[f>>2]=d;g=ra(16);e=ga-32|0;ga=e;J[e+28>>2]=g;J[e+24>>2]=f+12;J[e+20>>2]=f+8;J[e+16>>2]=f+4;J[e+12>>2]=f;h=J[e+28>>2];na(h,J[e+24>>2],J[e+20>>2],J[e+16>>2]);N[h+12>>2]=N[J[e+12>>2]>>2];ga=e+32|0;ga=f+16|0;return g|0}function FD(a){a=a|0;var b=0;J[a>>2]=15264;b=J[a+120>>2];if(!(b?!b|!K[a+124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+120>>2]=0;H[a+124|0]=1;J[a+112>>2]=0;J[a+116>>2]=0;b=J[a+100>>2];if(!(b?!b|!K[a+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+100>>2]=0;H[a+104|0]=1;J[a+92>>2]=0;J[a+96>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Th(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){J[c+4>>2]=Qh(a,J[c+8>>2]);b=ga-16|0;J[b+12>>2]=a;pf(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Eb(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function Rh(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ga-16|0;a=J[c+12>>2];J[b+12>>2]=a;if(J[J[b+12>>2]+8>>2]<J[c+8>>2]){J[c+4>>2]=Qh(a,J[c+8>>2]);b=ga-16|0;J[b+12>>2]=a;Nh(a,J[J[b+12>>2]+4>>2],J[c+4>>2]);b=ga-16|0;J[b+12>>2]=a;Eb(a,J[J[b+12>>2]+4>>2]);lb(a);H[a+16|0]=1;J[a+12>>2]=J[c+4>>2];J[a+8>>2]=J[c+8>>2]}ga=c+16|0}function NC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+12>>2]=b;J[e+8>>2]=16996;b=J[c+12>>2];J[e+24>>2]=J[c+8>>2];J[e+28>>2]=b;b=J[c+4>>2];J[e+16>>2]=J[c>>2];J[e+20>>2]=b;b=J[d+12>>2];J[e+40>>2]=J[d+8>>2];J[e+44>>2]=b;b=J[d+4>>2];J[e+32>>2]=J[d>>2];J[e+36>>2]=b;a=J[a+48>>2];ia[J[J[a>>2]+8>>2]](a,e+8|0,c,d);ga=e+48|0}function ld(a,b,c,d,e,f,g,h,i,j){var k=0;k=ga-48|0;ga=k;J[k+44>>2]=a;J[k+40>>2]=b;J[k+36>>2]=c;J[k+32>>2]=d;J[k+28>>2]=e;J[k+24>>2]=f;J[k+20>>2]=g;J[k+16>>2]=h;J[k+12>>2]=i;J[k+8>>2]=j;a=J[k+44>>2];na(a,J[k+40>>2],J[k+36>>2],J[k+32>>2]);na(a+16|0,J[k+28>>2],J[k+24>>2],J[k+20>>2]);na(a+32|0,J[k+16>>2],J[k+12>>2],J[k+8>>2]);ga=k+48|0}function Fq(a){a=a|0;var b=0,c=0,d=0,e=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=J[b+12>>2];if(J[c+136>>2]>0){while(1){a=J[c+144>>2]+P(d,284)|0;e=N[a+204>>2];J[a+12>>2]=0;J[a+268>>2]=1065353216;J[a+272>>2]=0;N[a+32>>2]=e;N[a+8>>2]=-N[a+60>>2];N[a+4>>2]=-N[a+56>>2];N[a>>2]=-N[a+52>>2];d=d+1|0;if((d|0)<J[c+136>>2]){continue}break}}ga=b+16|0}function un(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=J[a+108>>2];if(!g){c=L[a+56>>1];if(c){e=1;b=1;while(1){e=J[a+68>>2]+(e<<2)|0;if(H[e|0]&1){ia[J[J[d>>2]+8>>2]](d,J[a+60>>2]+(L[e+2>>1]<<6)|0)|0;c=L[a+56>>1]}b=b+1|0;e=b&65535;if(e>>>0<((c&65535)<<1|1)>>>0){continue}break}}return}ia[J[J[g>>2]+24>>2]](g,b,c,d,e,f)}function Ny(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;if(!(!b|J[b+236>>2]!=8)){c=J[a+328>>2];a:{if((c|0)<=0){break a}e=J[a+336>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+336>>2]>>2]=b;J[a+328>>2]=c}Ad(a,b);return}Hk(a,b)}function wb(a,b,c){var d=0,e=0,f=0,g=0,h=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;f=J[d+24>>2];b=ga-16|0;c=J[d+28>>2];J[b+12>>2]=c;J[b+8>>2]=0;g=J[b+12>>2]+(J[b+8>>2]<<4)|0;J[b+12>>2]=c;J[b+8>>2]=1;h=J[b+12>>2]+(J[b+8>>2]<<4)|0;J[b+12>>2]=c;J[b+8>>2]=2;e=d+8|0;Vd(e,f,g,h,J[b+12>>2]+(J[b+8>>2]<<4)|0);va(a,e,c+48|0);ga=d+32|0}function aG(a){a=a|0;var b=0;J[a>>2]=11348;b=J[a+284>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+284>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a>>2]=11304;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function TG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;c=J[b>>2];c=ia[J[J[c>>2]+56>>2]](c,36)|0;e=J[a+8>>2];f=J[a+12>>2];d=J[b+4>>2];g=J[a+20>>2];a=J[a+16>>2];J[c>>2]=8624;J[c+4>>2]=J[b>>2];J[c>>2]=8652;J[c+28>>2]=a;J[c+32>>2]=g;H[c+24|0]=0;J[c+20>>2]=d;H[c+16|0]=0;J[c+8>>2]=lI(e,f);J[c+12>>2]=ha;J[c>>2]=8776;return c|0}function Ko(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=Q(i);var j=0;j=ga-48|0;ga=j;J[j+44>>2]=a;J[j+40>>2]=b;J[j+36>>2]=c;J[j+32>>2]=d;J[j+28>>2]=e;J[j+24>>2]=f;J[j+20>>2]=g;J[j+16>>2]=h;N[j+12>>2]=i;a=J[j+44>>2];ia[J[J[a>>2]+28>>2]](a,J[j+40>>2],J[j+36>>2],J[j+32>>2],J[j+16>>2],N[j+12>>2]);ga=j+48|0}function hG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,16)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;J[a+12>>2]=0;H[a+8|0]=0;J[a>>2]=10120;b=J[a+4>>2];if(ia[J[J[b>>2]+24>>2]](b,J[c+8>>2],J[d+8>>2])|0){b=J[a+4>>2];b=ia[J[J[b>>2]+12>>2]](b,J[c+8>>2],J[d+8>>2])|0;H[a+8|0]=1;J[a+12>>2]=b}return a|0}function gI(a,b){a=a|0;b=b|0;if(J[a+16>>2]==(0-J[a+76>>2]|0)){Fd(a+4|0);Fd(a- -64|0);H[a+193|0]=0;H[a+194|0]=1;J[a+164>>2]=0;J[a+144>>2]=0;J[a+156>>2]=10;J[a+160>>2]=1;J[a+148>>2]=1;J[a+152>>2]=0;J[a+124>>2]=0;J[a+128>>2]=0;J[a+132>>2]=0;J[a+168>>2]=0;J[a+172>>2]=0;J[a+176>>2]=0;J[a+180>>2]=0;J[a+184>>2]=0;J[a+188>>2]=0}}function Uj(a){var b=0;if(J[a+12>>2]){J[a+4>>2]=0;b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0}if(J[a+40>>2]){J[a+32>>2]=0;b=J[a+48>>2];if(!(b?!b|!K[a+52|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+48>>2]=0;H[a+52|0]=1;J[a+40>>2]=0;J[a+44>>2]=0}}function Sy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a=K[a+16|0];d=a?b:c;a=J[(a?c:b)+8>>2];b=J[a+268>>2];a:{b:{if((b|0)<=0){break b}e=J[d+8>>2];f=J[a+276>>2];c=0;while(1){if(J[(c<<2)+f>>2]!=(e|0)){c=c+1|0;if((b|0)!=(c|0)){continue}break b}break}if((b|0)!=(c|0)){break a}}b=J[a+284>>2];ia[J[J[b>>2]+36>>2]](b,a,d)}}function WB(a){a=a|0;var b=0,c=0,d=0;b=J[a+152>>2];a:{if(!b){break a}c=b;if(b&1){c=b-1|0;d=J[J[a+160>>2]+(c<<2)>>2];ia[J[J[d>>2]+72>>2]](d)}if((b|0)==1){break a}while(1){b=J[(J[a+160>>2]+(c<<2)|0)-4>>2];ia[J[J[b>>2]+72>>2]](b);c=c-2|0;b=J[J[a+160>>2]+(c<<2)>>2];ia[J[J[b>>2]+72>>2]](b);if(c){continue}break}}H[a+48|0]=1}function Sz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=1;a:{if(!(K[b+236|0]&2)){break a}c=1;if(!b){break a}c=J[a+488>>2];b:{if((c|0)<=0){a=0;break b}f=J[a+496>>2];a=1;while(1){e=J[(d<<2)+f>>2];if(J[e+28>>2]==(b|0)|J[e+32>>2]==(b|0)?K[e+20|0]:0){break b}d=d+1|0;a=(c|0)>(d|0);if((d|0)!=(c|0)){continue}break}}c=!a}return c|0}function iA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=J[a+212>>2];a:{if((c|0)<=0){break a}e=J[a+220>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+220>>2]>>2]=b;J[a+212>>2]=c}tk(J[b+28>>2],b);tk(J[b+32>>2],b)}function iG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=J[b>>2];e=ia[J[J[e>>2]+56>>2]](e,20)|0;f=J[b+4>>2];a=K[a+4|0];J[e>>2]=8624;J[e+4>>2]=J[b>>2];J[e>>2]=8652;H[e+16|0]=a;J[e+12>>2]=f;H[e+8|0]=0;J[e>>2]=11660;if(!f){a=J[e+4>>2];a=ia[J[J[a>>2]+12>>2]](a,J[c+8>>2],J[d+8>>2])|0;H[e+8|0]=1;J[e+12>>2]=a}return e|0}function Ln(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];N[a+12>>2]=N[c+8>>2];J[c+4>>2]=ia[J[J[a>>2]+88>>2]](a);while(1){d=J[c+4>>2];J[c+4>>2]=d-1;if(d){J[c>>2]=ia[J[J[a>>2]+124>>2]](a,J[c+4>>2]);d=J[c>>2];ia[J[J[d>>2]+44>>2]](d,N[c+8>>2]);continue}break}H[a+48|0]=1;ga=c+16|0}function Fx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;if(!K[29148]){J[(ga-16|0)+12>>2]=29132;H[29148]=1}b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;a=J[a+12>>2]+(J[a+8>>2]<<4)|0;b=J[a+4>>2];J[7283]=J[a>>2];J[7284]=b;b=J[a+12>>2];J[7285]=J[a+8>>2];J[7286]=b;ga=c+16|0;return 29132}function Xy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=(b|0)!=32;if(!(d|(c|0)!=32)){return J[a+92>>2]}a:{b:{c:{if(!d){if((c|0)>19){break c}return J[a+96>>2]}if((c|0)!=32|(b|0)>19){break b}return J[a+100>>2]}if(c-21>>>0>8){break a}return J[a+104>>2]}if((c|0)!=32|b-21>>>0>8){break a}return J[a+108>>2]}return Em(a,b,c)|0}function GD(a){a=a|0;var b=0;J[a>>2]=15264;b=J[a+120>>2];if(!(b?!b|!K[a+124|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+120>>2]=0;H[a+124|0]=1;J[a+112>>2]=0;J[a+116>>2]=0;b=J[a+100>>2];if(!(b?!b|!K[a+104|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+100>>2]=0;H[a+104|0]=1;J[a+92>>2]=0;J[a+96>>2]=0;return a|0}function Af(a,b,c,d){var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;H[e+3|0]=d;b=J[e+8>>2];c=J[e+4>>2];d=H[e+3|0]&1;a=ga-16|0;J[a+12>>2]=J[e+12>>2];J[a+8>>2]=b;J[a+4>>2]=c;H[a+3|0]=d;b=J[a+12>>2];a:{if(H[a+3|0]&1){J[b+84>>2]=J[a+8>>2];break a}J[b+80>>2]=J[a+8>>2]}J[b+88>>2]=J[a+4>>2];ga=e+16|0}function AA(a){a=a|0;var b=0;J[a>>2]=20232;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;Ok(a+4|0);return a|0}function Os(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=Q(d);var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;H[e+11|0]=b;N[e+4>>2]=c;N[e>>2]=d;b=H[e+11|0]&1;c=N[e+4>>2];d=N[e>>2];a=ga-16|0;J[a+12>>2]=J[e+12>>2];H[a+11|0]=b;N[a+4>>2]=c;N[a>>2]=d;b=J[a+12>>2];H[b+737|0]=H[a+11|0]&1;N[b+680>>2]=N[a+4>>2];N[b+684>>2]=N[a>>2];ga=e+16|0}function ME(a,b){a=a|0;b=b|0;var c=Q(0),d=0,e=0,f=Q(0);e=J[a+68>>2]<<2;c=N[e+b>>2];d=e;e=a+12|0;f=Q(N[a+60>>2]*Q(c/N[d+e>>2]));N[a+60>>2]=f;d=J[a+64>>2]<<2;c=Q(N[d+b>>2]/N[e+d>>2]);d=J[a+72>>2]<<2;c=Q(N[a+56>>2]*Q(Q(c+Q(N[d+b>>2]/N[e+d>>2]))*Q(.5)));N[a+56>>2]=c;N[a+52>>2]=c/Q(Y(Q(Q(c*c)+Q(f*f))));Ve(a,b)}function vv(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=ga-16|0;ga=c;J[c+12>>2]=J[b+12>>2];a=J[c+12>>2];a:{if(J[a+32>>2]>0){J[a+32>>2]=J[a+32>>2]+1;break a}d=J[a+8>>2];ia[J[J[d>>2]+16>>2]](d,a+36|0,a+40|0,a+44|0,a+48|0,a+52|0,a+56|0,a+60|0,a- -64|0,J[a+28>>2]);J[a+32>>2]=1}ga=c+16|0;ga=b+16|0}function zA(a){a=a|0;var b=0;J[a>>2]=20232;b=J[a+56>>2];if(!(b?!b|!K[a+60|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+56>>2]=0;H[a+60|0]=1;J[a+48>>2]=0;J[a+52>>2]=0;b=J[a+36>>2];if(!(b?!b|!K[a+40|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+36>>2]=0;H[a+40|0]=1;J[a+28>>2]=0;J[a+32>>2]=0;Ok(a+4|0);ta(a)}function Rt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+8>>2];c=J[d+4>>2];a=ga-48|0;ga=a;J[a+44>>2]=J[d+12>>2];J[a+40>>2]=b;J[a+36>>2]=c;b=J[a+44>>2];Pi(b,J[a+40>>2]);c=J[a+36>>2];Kb(a,J[a+40>>2],b+348|0);e=a+16|0;Ub(e,c,a);Qi(b,e);ga=a+48|0;ga=d+16|0}function Ox(a,b){a=a|0;b=b|0;var c=0,d=Q(0),e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];d=Q(bc(b)*bc(J[a+8>>2]));e=ga-16|0;N[e+12>>2]=d;N[a+4>>2]=Y(N[e+12>>2]);d=wc(Q(ac(b,J[a+8>>2])/N[a+4>>2]));ga=a+16|0;ga=c+16|0;return Q(d)}function PD(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);a:{switch(J[a+96>>2]){case 0:return Q(N[J[a+92>>2]+(P(J[a+64>>2],c)+b<<2)>>2]);case 5:return Q(Q(N[a+88>>2]*Q(K[J[a+92>>2]+(P(J[a+64>>2],c)+b|0)|0])));case 3:d=Q(N[a+88>>2]*Q(I[J[a+92>>2]+(P(J[a+64>>2],c)+b<<1)>>1]));break;default:break a}}return Q(d)}function bG(a){a=a|0;var b=0;J[a>>2]=11348;b=J[a+284>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+284>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a>>2]=11304;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;return a|0}function sF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c=J[a+52>>2];if(c){c=(f=b,g=ia[J[J[c>>2]+12>>2]](c)|0,h=1,e=J[J[b>>2]+16>>2],ia[e](f|0,g|0,h|0)|0);d=J[a+52>>2];h=b,g=c,f=ia[J[J[d>>2]+16>>2]](d,J[c+8>>2],b)|0,i=1213612625,j=J[a+52>>2],e=J[J[b>>2]+20>>2],ia[e](h|0,g|0,f|0,i|0,j|0)}}function rF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c=J[a+56>>2];if(c){c=(f=b,g=ia[J[J[c>>2]+8>>2]](c)|0,h=1,e=J[J[b>>2]+16>>2],ia[e](f|0,g|0,h|0)|0);d=J[a+56>>2];h=b,g=c,f=ia[J[J[d>>2]+12>>2]](d,J[c+8>>2],b)|0,i=1346456916,j=J[a+56>>2],e=J[J[b>>2]+20>>2],ia[e](h|0,g|0,f|0,i|0,j|0)}}function xB(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;a:{switch(b-1|0){case 0:case 1:if(d>>>0<=2){N[a+600>>2]=c;J[a+592>>2]=J[a+592>>2]|2;return}N[a+432>>2]=c;return;case 2:case 3:if(d>>>0<=2){N[a+596>>2]=c;J[a+592>>2]=J[a+592>>2]|1;return}N[a+604>>2]=c;J[a+592>>2]=J[a+592>>2]|4;break;default:break a}}}function Nm(a,b,c,d,e){var f=0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;H[a+8|0]=e;J[a>>2]=9380;b=J[b>>2];J[a- -64>>2]=0;J[a+60>>2]=b;J[a+12>>2]=9408;f=e?c:d;J[a+20>>2]=f;c=e?d:c;J[a+16>>2]=c;b=ia[J[J[b>>2]+12>>2]](b,J[c+8>>2],J[f+8>>2])|0;J[a+76>>2]=b;a=J[a+60>>2];ia[J[J[a>>2]+20>>2]](a,b)}function Ss(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;h=ga-32|0;ga=h;J[h+28>>2]=a;J[h+24>>2]=b;J[h+20>>2]=c;J[h+16>>2]=d;J[h+12>>2]=e;J[h+8>>2]=f;H[h+7|0]=g;a=ra(764);Zk(a,J[h+28>>2],J[h+24>>2],J[h+20>>2],J[h+16>>2],J[h+12>>2],J[h+8>>2],H[h+7|0]&1);ga=h+32|0;return a|0}function It(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;a=J[b+12>>2];J[a+260>>2]=J[a+260>>2]+1;b=J[b+8>>2];d=J[b+4>>2];J[a+312>>2]=J[b>>2];J[a+316>>2]=d;d=J[b+12>>2];J[a+320>>2]=J[b+8>>2];J[a+324>>2]=d;ga=c+16|0}function Ht(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;a=J[b+12>>2];J[a+260>>2]=J[a+260>>2]+1;b=J[b+8>>2];d=J[b+4>>2];J[a+328>>2]=J[b>>2];J[a+332>>2]=d;d=J[b+12>>2];J[a+336>>2]=J[b+8>>2];J[a+340>>2]=d;ga=c+16|0}function Dt(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;a=J[b+12>>2];J[a+260>>2]=J[a+260>>2]+1;b=J[b+8>>2];d=J[b+4>>2];J[a+544>>2]=J[b>>2];J[a+548>>2]=d;d=J[b+12>>2];J[a+552>>2]=J[b+8>>2];J[a+556>>2]=d;ga=c+16|0}function tk(a,b){var c=0,d=0,e=0,f=0;c=J[a+488>>2];a:{if((c|0)<=0){break a}e=J[a+496>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((d|0)!=(c|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+496>>2]>>2]=b;J[a+488>>2]=c}J[a+256>>2]=(c|0)>0}function nA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=J[a+232>>2];a:{if((c|0)<=0){break a}e=J[a+240>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+240>>2]>>2]=b;J[a+232>>2]=c}Ad(a,b)}function lB(a){a=a|0;var b=Q(0),c=Q(0);b=Q(1);c=N[J[a+32>>2]+344>>2];if(c!=Q(0)){b=N[J[a+28>>2]+344>>2];b=Q(b/Q(b+c))}J[a+1296>>2]=0;c=Q(Q(1)-b);N[a+1292>>2]=Q(b*N[a+1120>>2])+Q(c*N[a+1184>>2]);N[a+1288>>2]=Q(b*N[a+1116>>2])+Q(c*N[a+1180>>2]);N[a+1284>>2]=Q(b*N[a+1112>>2])+Q(c*N[a+1176>>2])}function yn(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;N[d+20>>2]=c;if(!K[28960]){J[(ga-16|0)+12>>2]=28944;H[28960]=1}sh(d,J[d+28>>2],J[d+24>>2],N[d+20>>2]);a=J[d+4>>2];J[7236]=J[d>>2];J[7237]=a;a=J[d+12>>2];J[7238]=J[d+8>>2];J[7239]=a;ga=d+32|0;return 28944}function $x(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;N[d+20>>2]=c;if(!K[29068]){J[(ga-16|0)+12>>2]=29052;H[29068]=1}sh(d,J[d+28>>2],J[d+24>>2],N[d+20>>2]);a=J[d+4>>2];J[7263]=J[d>>2];J[7264]=a;a=J[d+12>>2];J[7265]=J[d+8>>2];J[7266]=a;ga=d+32|0;return 29052}function uc(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];d=ga-16|0;J[d+12>>2]=J[a+8>>2];J[a+4>>2]=J[J[d+12>>2]+4>>2];d=J[a+4>>2];J[a>>2]=0;Ch(b,d,a);pf(J[a+8>>2],J[a+4>>2],J[b+12>>2]);ga=a+16|0;ga=c+16|0}function eE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[b+36>>2];e=N[b+28>>2];f=N[c>>2];g=N[c+4>>2];h=Q(Y(Q(Q(f*f)+Q(g*g))));a:{if(h!=Q(0)){e=Q(e/h);i=Q(g*e);e=Q(f*e);d=N[c+8>>2]<Q(0)?Q(-d):d;break a}d=N[c+8>>2]<Q(0)?Q(-d):d}N[a+8>>2]=d;N[a>>2]=e;N[a+4>>2]=i}function dE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[b+32>>2];e=N[b+28>>2];f=N[c>>2];g=N[c+8>>2];h=Q(Y(Q(Q(f*f)+Q(g*g))));a:{if(h!=Q(0)){e=Q(e/h);i=Q(g*e);e=Q(f*e);d=N[c+4>>2]<Q(0)?Q(-d):d;break a}d=N[c+4>>2]<Q(0)?Q(-d):d}N[a+8>>2]=i;N[a+4>>2]=d;N[a>>2]=e}function hn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;Fc((J[b+60>>2]==2?64:4)+a|0,J[b+48>>2]);d=J[b+52>>2];J[(d?d+56|0:((J[b+60>>2]<<2)+a|0)+124|0)>>2]=J[b+56>>2];d=J[b+56>>2];if(d){J[d+52>>2]=J[b+52>>2]}d=J[a+136>>2];ia[J[J[d>>2]+16>>2]](d,b,c);if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}H[a+194|0]=1}function zx(a){a=a|0;var b=0,c=0,d=0;b=ga-32|0;ga=b;J[b+28>>2]=a;if(!K[29168]){Oa(29152);H[29168]=1}a=ga-16|0;ga=a;J[a+12>>2]=J[b+28>>2];d=J[a+12>>2];c=b+8|0;Oa(c);Na(d,c);ga=a+16|0;a=J[b+12>>2];J[7288]=J[b+8>>2];J[7289]=a;a=J[b+20>>2];J[7290]=J[b+16>>2];J[7291]=a;ga=b+32|0;return 29152}function fE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);e=N[b+32>>2];d=N[b+28>>2];f=N[c+4>>2];g=N[c+8>>2];h=Q(Y(Q(Q(f*f)+Q(g*g))));a:{if(h!=Q(0)){e=Q(e/h);i=Q(g*e);e=Q(f*e);d=N[c>>2]<Q(0)?Q(-d):d;break a}d=N[c>>2]<Q(0)?Q(-d):d}N[a+8>>2]=i;N[a>>2]=d;N[a+4>>2]=e}function Wi(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;a=J[d+28>>2];b=d+8|0;Lf(a,J[d+24>>2],b,b+4|0,b+8|0);Lb(a,J[d+8>>2],J[d+20>>2]+56|0);Lb(a,J[d+12>>2],J[d+20>>2]+72|0);Lb(a,J[d+16>>2],J[d+20>>2]+88|0);b=J[d+20>>2];ia[J[J[b>>2]+44>>2]](b,N[a+4>>2]);ga=d+32|0}function Qh(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+8>>2]=a;J[c+4>>2]=b;b=J[c+8>>2];a:{if(J[c+4>>2]){d=J[c+4>>2];a=ga-16|0;ga=a;J[a+12>>2]=b;J[a+8>>2]=d;J[a+4>>2]=0;b=J[a+8>>2]<<2;J[8369]=J[8369]+1;b=ia[J[6782]](b,16)|0;ga=a+16|0;J[c+12>>2]=b;break a}J[c+12>>2]=0}ga=c+16|0;return J[c+12>>2]}function mf(a,b){var c=0,d=0;c=ga+-64|0;ga=c;J[c+60>>2]=a;J[c+56>>2]=b;b=J[c+60>>2];a=b+56|0;d=c+24|0;Ma(d,b+72|0,a);b=c+8|0;Ma(b,a+32|0,a);a=c+40|0;Ub(a,d,b);d=J[a+4>>2];b=J[c+56>>2];J[b>>2]=J[a>>2];J[b+4>>2]=d;d=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=d;Ld(J[c+56>>2]);ga=c- -64|0}function fA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;a:{c=J[a+280>>2];if((c|0)<=0){break a}e=J[a+288>>2];while(1){f=(d<<2)+e|0;if(J[f>>2]!=(b|0)){d=d+1|0;if((c|0)!=(d|0)){continue}break a}break}if((c|0)<=(d|0)){break a}c=c-1|0;d=c<<2;J[f>>2]=J[d+e>>2];J[d+J[a+288>>2]>>2]=b;J[a+280>>2]=c}}function uv(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=ga-16|0;ga=c;J[c+12>>2]=J[b+12>>2];a=J[c+12>>2];a:{if(!J[a+32>>2]){break a}if(J[a+32>>2]>1){J[a+32>>2]=J[a+32>>2]-1;break a}d=J[a+8>>2];ia[J[J[d>>2]+24>>2]](d,J[a+28>>2]);J[a+36>>2]=0;J[a+32>>2]=0}ga=c+16|0;ga=b+16|0}function Cn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;a=J[d+28>>2];b=d+8|0;Lf(a,J[d+24>>2],b,b+4|0,b+8|0);Lb(a,J[d+8>>2],J[d+20>>2]);Lb(a,J[d+12>>2],J[d+20>>2]+16|0);Lb(a,J[d+16>>2],J[d+20>>2]+32|0);N[J[d+20>>2]+64>>2]=N[a+4>>2];ga=d+32|0}function wB(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);a:{b:{switch(b-1|0){case 0:case 1:if(c>>>0<=2){return Q(N[a+600>>2])}if(c-3>>>0>2){break a}return Q(N[a+432>>2]);case 2:case 3:break b;default:break a}}if(c>>>0<=2){return Q(N[a+596>>2])}if(c-3>>>0>2){break a}d=N[a+604>>2]}return Q(d)}function cG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;a:{c=J[a+268>>2];if((c|0)<=0){break a}f=J[b>>2];d=J[a+276>>2];b=0;while(1){e=(b<<2)+d|0;if(J[e>>2]!=(f|0)){b=b+1|0;if((c|0)!=(b|0)){continue}break a}break}if((b|0)>=(c|0)){break a}b=c-1|0;J[e>>2]=J[(b<<2)+d>>2];J[a+268>>2]=b}}function IC(a){a=a|0;var b=0,c=0;J[a>>2]=17188;b=J[a+12>>2];if(b){c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b);J[a+12>>2]=0}b=J[a+8>>2];if(b){ia[J[J[b>>2]>>2]](b)|0;b=J[a+4>>2];ia[J[J[b>>2]+60>>2]](b,J[a+8>>2]);J[a+8>>2]=0}J[a+24>>2]=-1;J[a+28>>2]=-1;J[a+32>>2]=-1;J[a+36>>2]=-1;return a|0}function $E(a){a=a|0;var b=0;J[a>>2]=13212;b=J[a+64>>2];if(b){sb(b);b=J[a+64>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+24>>2];if(!(b?!b|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+24>>2]=0;H[a+28|0]=1;J[a+16>>2]=0;J[a+20>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function xa(){var a=0,b=0,c=0;c=ga-16|0;ga=c;a=J[6787];b=J[a+16>>2]-1|0;J[a+16>>2]=b;if(!(!J[a+4>>2]|b)){aa(c+8|0,0)|0;b=J[8371];N[a+8>>2]=N[a+8>>2]+Q(Q(J[c+12>>2]+P(J[c+8>>2]-J[b>>2]|0,1e6)-(J[b+4>>2]+J[a+12>>2])>>>0)/Q(1e3));b=J[a+16>>2]}if(!b){J[6787]=J[J[6787]+20>>2]}ga=c+16|0}function ue(a,b){var c=Q(0),d=0,e=Q(0),f=Q(0),g=Q(0);c=N[a+344>>2];if(c!=Q(0)){e=N[b>>2];f=N[b+4>>2];g=N[b+8>>2];J[a+376>>2]=0;c=Q(Q(1)/c);N[a+372>>2]=g*c;N[a+368>>2]=c*f;N[a+364>>2]=c*e}d=J[b+4>>2];J[a+380>>2]=J[b>>2];J[a+384>>2]=d;d=J[b+12>>2];J[a+388>>2]=J[b+8>>2];J[a+392>>2]=d}function St(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-48|0;ga=a;J[a+44>>2]=J[c+12>>2];J[a+40>>2]=b;d=ga-16|0;b=J[a+44>>2];J[d+12>>2]=b+4;e=a+8|0;wa(e,J[d+12>>2],J[a+40>>2]);d=a+24|0;Kb(d,e,b+544|0);jb(b+428|0,d);ga=a+48|0;ga=c+16|0}function Pt(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-48|0;ga=a;J[a+44>>2]=J[c+12>>2];J[a+40>>2]=b;d=ga-16|0;b=J[a+44>>2];J[d+12>>2]=b+4;e=a+8|0;wa(e,J[d+12>>2],J[a+40>>2]);d=a+24|0;Kb(d,e,b+348|0);jb(b+412|0,d);ga=a+48|0;ga=c+16|0}function Ep(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+8>>2];a=J[J[d+12>>2]+720>>2]+P(J[d+4>>2],104)|0;if(N[a+88>>2]>Q(0)){N[a+56>>2]=N[b>>2]+N[a+56>>2];N[a+60>>2]=N[b+4>>2]+N[a+60>>2];a=a- -64|0;N[a>>2]=N[b+8>>2]+N[a>>2]}ga=d+16|0}function np(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2]+288;J[a+8>>2]=b;b=J[a+12>>2];sa(b,J[a+8>>2],104);uc(b+104|0,J[a+8>>2]+104|0);uc(b+124|0,J[a+8>>2]+124|0);uc(b+144|0,J[a+8>>2]+144|0);ga=a+16|0;ga=c+16|0}function hF(a,b,c){a=a|0;b=b|0;c=c|0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];J[b+52>>2]=J[a+52>>2];return 3959}function _D(a,b,c){a=a|0;b=b|0;c=c|0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];J[b+52>>2]=J[a+52>>2];return 3761}function HE(a,b,c){a=a|0;b=b|0;c=c|0;fb(a,b,c);N[b+28>>2]=N[a+28>>2];N[b+32>>2]=N[a+32>>2];N[b+36>>2]=N[a+36>>2];N[b+40>>2]=N[a+40>>2];N[b+12>>2]=N[a+12>>2];N[b+16>>2]=N[a+16>>2];N[b+20>>2]=N[a+20>>2];N[b+24>>2]=N[a+24>>2];N[b+44>>2]=N[a+44>>2];J[b+52>>2]=J[a+68>>2];return 3920}function HC(a){a=a|0;var b=0,c=0;J[a>>2]=17188;b=J[a+12>>2];if(b){c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b);J[a+12>>2]=0}b=J[a+8>>2];if(b){ia[J[J[b>>2]>>2]](b)|0;b=J[a+4>>2];ia[J[J[b>>2]+60>>2]](b,J[a+8>>2]);J[a+8>>2]=0}J[a+24>>2]=-1;J[a+28>>2]=-1;J[a+32>>2]=-1;J[a+36>>2]=-1;ta(a)}function dw(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;d=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[a+12>>2]+12;J[b+8>>2]=d;ga=a+16|0;ga=c+16|0;return J[(J[J[b+12>>2]+12>>2]+P(J[b+8>>2],80)|0)+64>>2]}function VB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0;if(N[a+36>>2]>d){H[a+40|0]=1;e=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=e;e=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=e;b=J[c+4>>2];J[a+20>>2]=J[c>>2];J[a+24>>2]=b;b=J[c+12>>2];J[a+28>>2]=J[c+8>>2];J[a+32>>2]=b;N[a+36>>2]=d}}function Ya(a,b,c){var d=0;if(!c){return J[a+4>>2]==J[b+4>>2]}if((a|0)==(b|0)){return 1}d=J[a+4>>2];a=K[d|0];c=J[b+4>>2];b=K[c|0];a:{if(!a|(b|0)!=(a|0)){break a}while(1){b=K[c+1|0];a=K[d+1|0];if(!a){break a}c=c+1|0;d=d+1|0;if((a|0)==(b|0)){continue}break}}return(a|0)==(b|0)}function Qm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[c+12>>2];J[b+8>>2]=a;a=J[b+12>>2];N[a>>2]=N[a>>2]-N[J[b+8>>2]>>2];N[a+4>>2]=N[a+4>>2]-N[J[b+8>>2]+4>>2];N[a+8>>2]=N[a+8>>2]-N[J[b+8>>2]+8>>2];ga=c+16|0;return a|0}function jt(a){a=a|0;var b=0,c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;a=J[c+12>>2];yg(a);N[a+1316>>2]=N[a+1256>>2];d=a+1260|0;e=J[d+4>>2];b=a+1320|0;J[b>>2]=J[d>>2];J[b+4>>2]=e;N[a+1328>>2]=N[a+1192>>2];b=a+1332|0;a=a+1196|0;d=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=d;ga=c+16|0}function Oo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-48|0;ga=e;J[e+44>>2]=a;J[e+40>>2]=b;J[e+36>>2]=c;J[e+32>>2]=d;a=J[e+44>>2];J[e+28>>2]=27254;b=J[e+28>>2];c=J[e+40>>2];d=J[e+36>>2];J[e+12>>2]=J[e+32>>2];J[e+8>>2]=d;J[e+4>>2]=c;J[e>>2]=a;ba(b|0,1276,e|0)|0;ga=e+48|0}function DF(a,b,c){a=a|0;b=b|0;c=Q(c);var d=Q(0),e=Q(0),f=0;d=N[b>>2];e=N[a+28>>2];a:{if(!(d<=Q(e+c))|!(d>=Q(Q(-e)-c))){break a}d=N[b+4>>2];e=N[a+32>>2];if(!(d<=Q(e+c))|!(d>=Q(Q(-e)-c))){break a}d=N[b+8>>2];e=N[a+36>>2];if(!(d<=Q(e+c))){break a}f=d>=Q(Q(-e)-c)}return f|0}function xt(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-32|0;ga=a;J[a+28>>2]=J[b+12>>2];c=J[a+28>>2];N[a+24>>2]=0;N[a+20>>2]=0;N[a+16>>2]=0;na(c+412|0,a+24|0,a+20|0,a+16|0);N[a+12>>2]=0;N[a+8>>2]=0;N[a+4>>2]=0;na(c+428|0,a+12|0,a+8|0,a+4|0);ga=a+32|0;ga=b+16|0}function wh(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=P(J[d+12>>2],104);sa(b+J[d+16>>2]|0,b+J[a+12>>2]|0,104);J[d+12>>2]=J[d+12>>2]+1;continue}break}ga=d+32|0}function pc(a,b,c){var d=0,e=0,f=0;d=ga-16|0;ga=d;J[d+12>>2]=b;J[d+8>>2]=c;c=ga-16|0;b=J[d+12>>2];J[c+12>>2]=b;c=J[c+12>>2]+(J[d+8>>2]<<2)|0;e=ga-16|0;J[e+12>>2]=b+16;e=J[e+12>>2]+(J[d+8>>2]<<2)|0;f=ga-16|0;J[f+12>>2]=b+32;na(a,c,e,J[f+12>>2]+(J[d+8>>2]<<2)|0);ga=d+16|0}function ao(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;c=J[d+28>>2];b=c+56|0;e=d+8|0;Vd(e,J[d+24>>2],c+56|0,b+16|0,b+32|0);b=b+(Lh(e)<<4)|0;c=J[b+4>>2];J[a>>2]=J[b>>2];J[a+4>>2]=c;c=J[b+12>>2];J[a+8>>2]=J[b+8>>2];J[a+12>>2]=c;ga=d+32|0}function wj(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;d=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[a+12>>2]+264;J[b+8>>2]=d;ga=a+16|0;ga=c+16|0;return J[J[J[b+12>>2]+12>>2]+(J[b+8>>2]<<2)>>2]}function Wu(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;d=J[a+8>>2];b=ga-16|0;J[b+12>>2]=J[a+12>>2]+148;J[b+8>>2]=d;ga=a+16|0;ga=c+16|0;return J[J[J[b+12>>2]+12>>2]+(J[b+8>>2]<<2)>>2]}function tt(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+300>>2]=J[a>>2];J[b+304>>2]=d;d=J[a+12>>2];J[b+308>>2]=J[a+8>>2];J[b+312>>2]=d;ga=c+16|0}function st(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+316>>2]=J[a>>2];J[b+320>>2]=d;d=J[a+12>>2];J[b+324>>2]=J[a+8>>2];J[b+328>>2]=d;ga=c+16|0}function ok(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+680>>2]=J[a>>2];J[b+684>>2]=d;d=J[a+12>>2];J[b+688>>2]=J[a+8>>2];J[b+692>>2]=d;ga=c+16|0}function gk(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+696>>2]=J[a>>2];J[b+700>>2]=d;d=J[a+12>>2];J[b+704>>2]=J[a+8>>2];J[b+708>>2]=d;ga=c+16|0}function yw(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=ga-16|0;ga=b;J[b+12>>2]=a;e=J[b+12>>2];if(e){a=ga-16|0;ga=a;J[a+12>>2]=e;c=ga-16|0;ga=c;J[c+12>>2]=J[a+12>>2];f=ga-16|0;d=J[c+12>>2];J[f+12>>2]=d;Bh(d,J[J[f+12>>2]+4>>2]);lb(d);Yd(d);ga=c+16|0;ga=a+16|0;ta(e)}ga=b+16|0}function xh(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=P(J[d+12>>2],96);vf(b+J[d+16>>2]|0,b+J[a+12>>2]|0);J[d+12>>2]=J[d+12>>2]+1;continue}break}ga=d+32|0}function Ah(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=P(J[d+12>>2],36);yh(b+J[d+16>>2]|0,b+J[a+12>>2]|0);J[d+12>>2]=J[d+12>>2]+1;continue}break}ga=d+32|0}function $A(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;a:{b:{switch(d+1|0){case 0:case 6:break b;default:break a}}c:{d:{switch(b-2|0){case 0:d=a+760|0;b=2;break c;case 2:d=a+756|0;b=1;break c;case 1:break d;default:break a}}d=a+752|0;b=4}N[d>>2]=c;J[a+748>>2]=b|J[a+748>>2]}}function Ts(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;J[g+8>>2]=f;a=ra(764);Zk(a,J[g+28>>2],J[g+24>>2],J[g+20>>2],J[g+16>>2],J[g+12>>2],J[g+8>>2],0);ga=g+32|0;return a|0}function od(a,b,c,d,e){var f=Q(0);f=Q(1);a:{if(b>c){break a}f=Q(0);if(b==c){break a}d=Q(d/e);if(d<Q(0)){if(!(!(a>=b)|!(Q(b-d)>a))){return Q(Q(b-a)/d)}return a<b?Q(0):Q(1)}if(!(d>Q(0))){break a}if(!(!(a<=c)|!(Q(c-d)<a))){return Q(Q(c-a)/d)}f=a>c?Q(0):Q(1)}return f}function zu(a,b,c){a=Q(a);b=b|0;c=c|0;var d=0,e=0,f=0;d=ga-48|0;ga=d;N[d+44>>2]=a;J[d+40>>2]=b;J[d+36>>2]=c;b=ua(140);a=N[d+44>>2];c=J[d+40>>2];f=J[d+36>>2];N[d+12>>2]=0;N[d+8>>2]=0;N[d+4>>2]=0;e=d+16|0;na(e,d+12|0,d+8|0,d+4|0);Ri(b,a,c,f,e);ga=d+48|0;return b|0}function sC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;fb(a,b,c);d=J[a+144>>2];ia[J[J[d>>2]+56>>2]](d,b+12|0,c)|0;N[b+56>>2]=N[a+12>>2];N[b+40>>2]=N[a+52>>2];N[b+44>>2]=N[a+56>>2];N[b+48>>2]=N[a+60>>2];N[b+52>>2]=N[a- -64>>2];J[b+60>>2]=ia[J[J[a>>2]+80>>2]](a);return 3850}function ki(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=Q(d);e=e|0;f=f|0;var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;N[g+16>>2]=d;J[g+12>>2]=e;J[g+8>>2]=f;a=J[g+28>>2];ia[J[J[a>>2]+32>>2]](a,J[g+24>>2],J[g+20>>2],N[g+16>>2],J[g+12>>2],J[g+8>>2]);ga=g+32|0}function jG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,16)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;J[a+12>>2]=0;H[a+8|0]=0;J[a>>2]=11584;b=J[a+4>>2];b=ia[J[J[b>>2]+12>>2]](b,J[c+8>>2],J[d+8>>2])|0;H[a+8|0]=1;J[a+12>>2]=b;return a|0}function Nl(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;a=J[a+32>>2]+(j<<5)|0;J[c>>2]=J[a+12>>2];J[b>>2]=J[a+16>>2];J[d>>2]=J[a+28>>2];J[e>>2]=J[a+20>>2];J[h>>2]=J[a>>2];J[f>>2]=J[a+4>>2];J[g>>2]=J[a+8>>2];J[i>>2]=J[a+24>>2]}function vH(a){a=a|0;var b=0,c=0,d=0;ya(2810);b=J[a+8>>2];if((b|0)>0){while(1){d=J[J[a+16>>2]+(c<<2)>>2];a:{b:{if(K[a+76|0]){break b}switch(J[d+216>>2]-2|0){case 0:case 3:break a;default:break b}}Wm(a,d);b=J[a+8>>2]}c=c+1|0;if((b|0)>(c|0)){continue}break}}xa()}function jf(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=b;d=ga-16|0;b=J[c+12>>2];N[d+12>>2]=N[b>>2];N[c+8>>2]=R(N[d+12>>2]);d=ga-16|0;N[d+12>>2]=N[b+4>>2];N[c+4>>2]=R(N[d+12>>2]);d=ga-16|0;N[d+12>>2]=N[b+8>>2];N[c>>2]=R(N[d+12>>2]);na(a,c+8|0,c+4|0,c);ga=c+16|0}function Jl(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];a=J[a+8>>2];d=J[a+4>>2];J[b+4>>2]=J[a>>2];J[b+8>>2]=d;d=J[a+12>>2];J[b+12>>2]=J[a+8>>2];J[b+16>>2]=d;ga=c+16|0}function ry(a){a=a|0;var b=0,c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;if(!K[29048]){J[(ga-16|0)+12>>2]=29032;H[29048]=1}a=c+8|0;b=J[c+28>>2];ia[J[J[b>>2]+76>>2]](a,b);b=J[a+4>>2];J[7258]=J[a>>2];J[7259]=b;b=J[a+12>>2];J[7260]=J[a+8>>2];J[7261]=b;ga=c+32|0;return 29032}function Xo(a){a=a|0;var b=0,c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;if(!K[29444]){J[(ga-16|0)+12>>2]=29428;H[29444]=1}a=c+8|0;b=J[c+28>>2];ia[J[J[b>>2]+76>>2]](a,b);b=J[a+4>>2];J[7357]=J[a>>2];J[7358]=b;b=J[a+12>>2];J[7359]=J[a+8>>2];J[7360]=b;ga=c+32|0;return 29428}function ky(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if(Ya(a,J[b+8>>2],0)){ag(b,c,d);return}e=J[a+12>>2];f=a+16|0;Ij(f,b,c,d);a:{if((e|0)<2){break a}e=(e<<3)+f|0;a=a+24|0;while(1){Ij(a,b,c,d);if(K[b+54|0]){break a}a=a+8|0;if(e>>>0>a>>>0){continue}break}}}function SB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0;e=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=e;e=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=e;b=J[c+4>>2];J[a+20>>2]=J[c>>2];J[a+24>>2]=b;b=J[c+12>>2];J[a+28>>2]=J[c+8>>2];J[a+32>>2]=b;H[a+40|0]=1;N[a+36>>2]=d}function Fd(a){var b=0;b=J[a>>2];if(b){Gd(a,b)}b=J[a+4>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+4>>2]=0;J[a+8>>2]=-1;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+16>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0}function Ag(a,b,c,d){var e=0;J[a>>2]=18872;e=J[b+4>>2];J[a+4>>2]=J[b>>2];J[a+8>>2]=e;e=J[b+12>>2];J[a+12>>2]=J[b+8>>2];J[a+16>>2]=e;b=J[c+4>>2];J[a+20>>2]=J[c>>2];J[a+24>>2]=b;b=J[c+12>>2];J[a+28>>2]=J[c+8>>2];J[a+32>>2]=b;J[a+40>>2]=1065353216;J[a+36>>2]=d}function fD(a,b,c){a=a|0;b=b|0;c=c|0;fb(a,b,c);N[b+12>>2]=N[a+68>>2];N[b+16>>2]=N[a+72>>2];N[b+20>>2]=N[a+76>>2];N[b+24>>2]=N[a+80>>2];N[b+28>>2]=N[a+48>>2];N[b+32>>2]=N[a+52>>2];N[b+36>>2]=N[a+56>>2];N[b+40>>2]=N[a+60>>2];N[b+44>>2]=N[a+64>>2];return 3936}function tH(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;ya(2926);ia[J[J[a>>2]+8>>2]](a);ia[J[J[a>>2]+12>>2]](a);b=J[a+24>>2];ya(2537);if(b){c=J[a+68>>2];e=b,f=ia[J[J[c>>2]+36>>2]](c)|0,g=a+28|0,h=J[a+24>>2],d=J[J[b>>2]+32>>2],ia[d](e|0,f|0,g|0,h|0)}xa();xa()}function Un(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];mf(a,J[e+4>>2]);c=J[a+60>>2];b=J[e>>2];J[b>>2]=J[a+56>>2];J[b+4>>2]=c;c=J[a+68>>2];J[b+8>>2]=J[a+64>>2];J[b+12>>2]=c;ga=e+16|0}function rp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ga-16|0;ga=a;J[a+8>>2]=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[a+8>>2];a:{if(J[J[b+12>>2]+236>>2]==8){J[a+12>>2]=J[a+8>>2];break a}J[a+12>>2]=0}ga=a+16|0;ga=c+16|0;return J[a+12>>2]}function pf(a,b,c){var d=0;d=ga-32|0;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=J[d+12>>2]<<2;J[b+J[d+16>>2]>>2]=J[b+J[a+12>>2]>>2];J[d+12>>2]=J[d+12>>2]+1;continue}break}}\nfunction aF(a){a=a|0;var b=0;J[a>>2]=13212;b=J[a+64>>2];if(b){sb(b);b=J[a+64>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}b=J[a+24>>2];if(!(b?!b|!K[a+28|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+24>>2]=0;H[a+28|0]=1;J[a+16>>2]=0;J[a+20>>2]=0;return a|0}function Ft(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];J[b+480>>2]=J[a+8>>2];if(J[b+480>>2]){d=J[a+8>>2];ia[J[J[d>>2]+8>>2]](d,b+4|0)}ga=a+16|0;ga=c+16|0}function js(a){a=a|0;var b=0,c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;d=ua(8);b=J[c+12>>2];a=ga-16|0;ga=a;J[a+12>>2]=d;J[a+8>>2]=b;e=ga-16|0;b=J[a+12>>2];J[e+12>>2]=b;J[J[e+12>>2]>>2]=5116;J[b>>2]=20840;J[b+4>>2]=J[a+8>>2];ga=a+16|0;ga=c+16|0;return d|0}function Nh(a,b,c){var d=0;d=ga-32|0;J[d+28>>2]=a;J[d+24>>2]=0;J[d+20>>2]=b;J[d+16>>2]=c;a=J[d+28>>2];J[d+12>>2]=J[d+24>>2];while(1){if(J[d+12>>2]<J[d+20>>2]){b=J[d+12>>2]<<2;N[b+J[d+16>>2]>>2]=N[b+J[a+12>>2]>>2];J[d+12>>2]=J[d+12>>2]+1;continue}break}}function Ct(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ga-16|0;ga=a;J[a+8>>2]=J[c+8>>2];b=ga-16|0;J[b+12>>2]=J[a+8>>2];a:{if(J[J[b+12>>2]+236>>2]&2){J[a+12>>2]=J[a+8>>2];break a}J[a+12>>2]=0}ga=a+16|0;ga=c+16|0;return J[a+12>>2]}function zH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=(e=b,f=ia[J[J[a>>2]+16>>2]](a)|0,g=1,d=J[J[b>>2]+16>>2],ia[d](e|0,f|0,g|0)|0);g=b,f=c,e=ia[J[J[a>>2]+20>>2]](a,J[c+8>>2],b)|0,h=1245859651,i=a,d=J[J[b>>2]+20>>2],ia[d](g|0,f|0,e|0,h|0,i|0)}function bF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=(e=b,f=ia[J[J[a>>2]+52>>2]](a)|0,g=1,d=J[J[b>>2]+16>>2],ia[d](e|0,f|0,g|0)|0);g=b,f=c,e=ia[J[J[a>>2]+56>>2]](a,J[c+8>>2],b)|0,h=1346455635,i=a,d=J[J[b>>2]+20>>2],ia[d](g|0,f|0,e|0,h|0,i|0)}function Pz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;c=(e=b,f=ia[J[J[a>>2]+16>>2]](a)|0,g=1,d=J[J[b>>2]+16>>2],ia[d](e|0,f|0,g|0)|0);g=b,f=c,e=ia[J[J[a>>2]+20>>2]](a,J[c+8>>2],b)|0,h=1497645650,i=a,d=J[J[b>>2]+20>>2],ia[d](g|0,f|0,e|0,h|0,i|0)}function Px(a){a=a|0;var b=Q(0),c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];d=J[a+12>>2];a:{if(ac(d,d)<Q(0)){b=wc(N[d+12>>2]);N[a+8>>2]=b+b;break a}b=wc(Q(-N[d+12>>2]));N[a+8>>2]=b+b}ga=a+16|0;ga=c+16|0;return Q(N[a+8>>2])}function ub(a,b,c){var d=0;d=ga-48|0;ga=d;J[d+44>>2]=a;J[d+40>>2]=b;J[d+36>>2]=c;a=J[d+44>>2];if(N[a+344>>2]!=Q(0)){Ni(a,J[d+40>>2]);b=ga-16|0;J[b+12>>2]=a+544;if(J[b+12>>2]){b=J[d+36>>2];Kb(d,J[d+40>>2],a+348|0);c=d+16|0;Ub(c,b,d);Oi(a,c)}}ga=d+48|0}function bo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];J[d>>2]=J[d+8>>2];fb(a,J[d>>2],J[d+4>>2]);Mh(a+28|0,J[d>>2]+28|0);Mh(a+12|0,J[d>>2]+12|0);N[J[d>>2]+44>>2]=N[a+44>>2];ga=d+16|0;return 3824}function Si(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];Nf(a);J[a>>2]=17820;c=a+144|0;Xi(c);J[a+152>>2]=J[d+8>>2];J[a+172>>2]=J[d+4>>2];b=ga-16|0;J[b+12>>2]=a+68;J[b+8>>2]=c;J[J[b+12>>2]+72>>2]=J[b+8>>2];ga=d+16|0}function $t(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;N[d+4>>2]=c;b=N[d+8>>2];c=N[d+4>>2];a=ga-16|0;J[a+12>>2]=J[d+12>>2];N[a+8>>2]=b;N[a+4>>2]=c;e=J[a+12>>2];N[e+472>>2]=N[a+8>>2];N[e+476>>2]=N[a+4>>2];ga=d+16|0}function $c(a){a=a|0;var b=0,c=0,d=0,e=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];d=ga-16|0;e=J[a+12>>2];J[d+12>>2]=e;if(J[J[d+12>>2]+216>>2]!=2){c=ga-16|0;J[c+12>>2]=e;c=J[J[c+12>>2]+216>>2]!=5}ga=a+16|0;ga=b+16|0;return c|0}function va(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;N[d+20>>2]=N[J[d+28>>2]>>2]+N[J[d+24>>2]>>2];N[d+16>>2]=N[J[d+28>>2]+4>>2]+N[J[d+24>>2]+4>>2];N[d+12>>2]=N[J[d+28>>2]+8>>2]+N[J[d+24>>2]+8>>2];na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function Ma(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;N[d+20>>2]=N[J[d+28>>2]>>2]-N[J[d+24>>2]>>2];N[d+16>>2]=N[J[d+28>>2]+4>>2]-N[J[d+24>>2]+4>>2];N[d+12>>2]=N[J[d+28>>2]+8>>2]-N[J[d+24>>2]+8>>2];na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function Kb(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;N[d+20>>2]=N[J[d+28>>2]>>2]*N[J[d+24>>2]>>2];N[d+16>>2]=N[J[d+28>>2]+4>>2]*N[J[d+24>>2]+4>>2];N[d+12>>2]=N[J[d+28>>2]+8>>2]*N[J[d+24>>2]+8>>2];na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function XH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if(J[a+8>>2]>0){while(1){e=J[a+16>>2]+(d<<4)|0;a:{if(ia[J[J[b>>2]+8>>2]](b,e)|0){ia[J[J[a>>2]+12>>2]](a,J[e>>2],J[e+4>>2],c)|0;J[7392]=J[7392]-1;break a}d=d+1|0}if(J[a+8>>2]>(d|0)){continue}break}}}function uA(a){a=a|0;var b=0,c=0;if(J[a+232>>2]>0){while(1){b=J[J[a+240>>2]+(c<<2)>>2];J[b+412>>2]=0;J[b+416>>2]=0;J[b+436>>2]=0;J[b+440>>2]=0;J[b+428>>2]=0;J[b+432>>2]=0;J[b+420>>2]=0;J[b+424>>2]=0;c=c+1|0;if((c|0)<J[a+232>>2]){continue}break}}}function gn(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;c=ga-16|0;ga=c;J[c+8>>2]=5860;J[c+12>>2]=d;g=d+4|0;h=d+20|0;i=c+8|0;oh(a+4|0,J[a+4>>2],b,g,h,N[d+32>>2],e,f,i);a=a- -64|0;oh(a,J[a>>2],b,g,h,N[d+32>>2],e,f,i);ga=c+16|0}function al(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=J[a+32>>2];e=c+328|0;d=J[a+28>>2];f=d+328|0;g=c+312|0;h=d+312|0;c=c+4|0;d=d+4|0;if(K[a+1301|0]){_k(a,b,$k(a,b,0,d,c,h,g,f,e),d,c,h,g,f,e);return}$k(a,b,_k(a,b,0,d,c,h,g,f,e),d,c,h,g,f,e)}function Ps(a,b,c,d,e,f){a=a|0;b=Q(b);c=Q(c);d=Q(d);e=Q(e);f=Q(f);var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;N[g+24>>2]=b;N[g+20>>2]=c;N[g+16>>2]=d;N[g+12>>2]=e;N[g+8>>2]=f;Mi(J[g+28>>2],N[g+24>>2],N[g+20>>2],N[g+16>>2],N[g+12>>2],N[g+8>>2]);ga=g+32|0}function LF(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);d=N[b+32>>2];e=N[b+36>>2];g=N[c+4>>2];h=N[c+8>>2];f=N[b+28>>2];i=N[c>>2];J[a+12>>2]=0;N[a>>2]=i>=Q(0)?f:Q(-f);N[a+8>>2]=h>=Q(0)?e:Q(-e);N[a+4>>2]=g>=Q(0)?d:Q(-d)}function Ia(a,b,c){var d=0;d=ga-32|0;ga=d;J[d+28>>2]=b;J[d+24>>2]=c;N[d+20>>2]=N[J[d+28>>2]>>2]*N[J[d+24>>2]>>2];N[d+16>>2]=N[J[d+28>>2]+4>>2]*N[J[d+24>>2]>>2];N[d+12>>2]=N[J[d+28>>2]+8>>2]*N[J[d+24>>2]>>2];na(a,d+20|0,d+16|0,d+12|0);ga=d+32|0}function SA(a,b,c){a=a|0;b=b|0;c=c|0;fc(a,b,c);N[b+52>>2]=N[a+300>>2];N[b+56>>2]=N[a+304>>2];N[b+60>>2]=N[a+308>>2];N[b+64>>2]=N[a+312>>2];N[b+68>>2]=N[a+316>>2];N[b+72>>2]=N[a+320>>2];N[b+76>>2]=N[a+324>>2];N[b+80>>2]=N[a+328>>2];return 3463}function $u(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=J[d+8>>2];c=J[d+4>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[d+12>>2];J[a+8>>2]=b;J[a+4>>2]=c;Lb(J[a+12>>2]+144|0,J[a+8>>2],J[a+4>>2]);ga=a+16|0;ga=d+16|0}function se(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=Q(f);var g=0;g=ga-32|0;ga=g;J[g+28>>2]=a;J[g+24>>2]=b;J[g+20>>2]=c;J[g+16>>2]=d;J[g+12>>2]=e;N[g+8>>2]=f;ic(J[g+28>>2],J[g+24>>2],J[g+20>>2],J[g+16>>2],J[g+12>>2],N[g+8>>2]);ga=g+32|0}function JA(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ya(2851);Q(ia[J[J[a>>2]+44>>2]](a,b,c,d,e,f,g,h,i));Q(ia[J[J[a>>2]+48>>2]](a,b,c,d,e,f,g,h,i));Q(ia[J[J[a>>2]+36>>2]](a,b,c,h));xa();return Q(Q(0))}function lb(a){var b=0,c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;a=J[c+12>>2];if(J[a+12>>2]){if(H[a+16|0]&1){d=J[a+12>>2];b=ga-16|0;ga=b;J[b+12>>2]=a;J[b+8>>2]=d;d=J[b+8>>2];if(d){J[8370]=J[8370]+1;ia[J[6783]](d)}ga=b+16|0}J[a+12>>2]=0}ga=c+16|0}function _A(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);a:{b:{switch(c+1|0){case 0:case 6:break b;default:break a}}c:{switch(b-2|0){case 0:return Q(N[a+760>>2]);case 2:return Q(N[a+756>>2]);case 1:break c;default:break a}}d=N[a+752>>2]}return Q(d)}function WC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[b+4>>2];J[a+52>>2]=J[b>>2];J[a+56>>2]=d;d=J[b+12>>2];J[a+60>>2]=J[b+8>>2];J[a+64>>2]=d;b=J[c+4>>2];J[a+68>>2]=J[c>>2];J[a+72>>2]=b;b=J[c+12>>2];J[a+76>>2]=J[c+8>>2];J[a+80>>2]=b;J[a+48>>2]=1}function JH(a,b,c){a=a|0;b=b|0;c=c|0;a:{b:{c:{switch(J[b+216>>2]-2|0){case 0:case 3:break c;default:break b}}a=0;switch(J[c+216>>2]-2|0){case 0:case 3:break a;default:break b}}if(!J[b+256>>2]){return 1}a=ia[J[J[b>>2]>>2]](b,c)|0}return a|0}function GH(a,b){a=a|0;b=b|0;var c=0;a:{if(!b){break a}a=J[a+64>>2];c=J[a+16>>2];if(c>>>0>b>>>0|P(J[a>>2],J[a+4>>2])+c>>>0<=b>>>0){break a}J[b>>2]=J[a+12>>2];J[a+12>>2]=b;J[a+8>>2]=J[a+8>>2]+1;return}if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}function Fu(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ra(116);Kd(a,J[f+28>>2],J[f+24>>2],J[f+20>>2]&65535,J[f+16>>2],H[f+15|0]&1);ga=f+32|0;return a|0}function Uf(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;b=ga-16|0;a=J[d+12>>2];J[b+12>>2]=a;J[J[b+12>>2]>>2]=1392;J[a>>2]=1308;_b(a+4|0,J[d+8>>2]);_b(a+68|0,J[d+4>>2]);_b(a+132|0,J[d+8>>2]);J[a+196>>2]=0;ga=d+16|0}function Yn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+108>>2]](a,J[e+8>>2],J[e+4>>2]);ia[J[J[a>>2]+108>>2]](a,(J[e+8>>2]+1|0)%3|0,J[e>>2]);ga=e+16|0}function qz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[a+896>>2];J[b>>2]=J[a+892>>2];J[b+4>>2]=d;d=J[a+904>>2];J[b+8>>2]=J[a+900>>2];J[b+12>>2]=d;b=J[a+920>>2];J[c+8>>2]=J[a+916>>2];J[c+12>>2]=b;b=J[a+912>>2];J[c>>2]=J[a+908>>2];J[c+4>>2]=b}function NH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;if(J[b+748>>2]>0){a=0;while(1){c=P(a,184)+b|0;d=J[c+116>>2];a:{if(!d){break a}e=J[7969];if(!e){break a}ia[e|0](d)|0;J[c+116>>2]=0}a=a+1|0;if((a|0)<J[b+748>>2]){continue}break}}J[b+748>>2]=0}function kr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];if(J[a+8>>2]<0){J[a+8>>2]=0}if(J[a+8>>2]>2){J[a+8>>2]=2}J[b+176>>2]=J[a+8>>2];ga=c+16|0}function Dz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ra(1312);cl(a,J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0;return a|0}function zv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];ia[J[J[a>>2]+120>>2]](a,J[f+24>>2],J[f+20>>2],J[f+16>>2],J[f+12>>2]);ga=f+32|0}function Us(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ra(764);Yk(a,J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0;return a|0}function yE(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0),e=Q(0),f=Q(0),g=Q(0),h=Q(0),i=Q(0);b=J[a+104>>2]+(b<<4)|0;d=N[b>>2];e=N[b+4>>2];f=N[b+8>>2];g=N[a+16>>2];h=N[a+20>>2];i=N[a+12>>2];J[c+12>>2]=0;N[c+8>>2]=f*h;N[c+4>>2]=e*g;N[c>>2]=d*i}function xz(a,b){a=a|0;b=Q(b);var c=0,d=Q(0),e=Q(0);c=ga-16|0;ga=c;if(N[a+68>>2]>Q(0)){b=N[a+92>>2];d=N[a+96>>2];e=N[a+88>>2];J[c+12>>2]=0;N[c>>2]=-e;N[c+8>>2]=-d;N[c+4>>2]=-b;zc(a+4|0,c,a+164|0);zc(a+16|0,a+88|0,a+180|0)}ga=c+16|0}function lH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=Q(0);d=ga-16|0;ga=d;J[d+8>>2]=-1;J[d+12>>2]=J[a+24>>2];if(!J[b+4>>2]){J[b+4>>2]=d+8}e=J[a+20>>2];f=Q(ia[J[J[e>>2]+12>>2]](e,b,c));N[a+4>>2]=N[J[a+20>>2]+4>>2];ga=d+16|0;return Q(f)}function hH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=Q(0);d=ga-16|0;ga=d;J[d+8>>2]=-1;J[d+12>>2]=J[a+16>>2];if(!J[b+4>>2]){J[b+4>>2]=d+8}e=J[a+12>>2];f=Q(ia[J[J[e>>2]+12>>2]](e,b,c));N[a+4>>2]=N[J[a+12>>2]+4>>2];ga=d+16|0;return Q(f)}function Pg(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[a+12>>2];J[a+8>>2]=(J[c+52>>2]+2|0)%3;d=ga-16|0;J[d+12>>2]=c+28;ga=a+16|0;ga=b+16|0;return Q(N[J[d+12>>2]+(J[a+8>>2]<<2)>>2])}function mt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;c=J[d+12>>2];a=J[d+8>>2];e=c+a|0;b=H[d+7|0]&1;H[e+1309|0]=b;a:{if((a|0)<=2){H[e+788|0]=b;break a}H[(c+(a<<6)|0)+720|0]=b}ga=d+16|0}function Mn(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];d=J[b+4>>2];a=J[c+12>>2];J[a+52>>2]=J[b>>2];J[a+56>>2]=d;d=J[b+12>>2];J[a+60>>2]=J[b+8>>2];J[a+64>>2]=d;ia[J[J[a>>2]+72>>2]](a);ga=c+16|0}function nw(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(48);c=J[b+12>>2];H[a+16|0]=1;J[a+44>>2]=c;J[a+12>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+40>>2]=0;H[a+36|0]=1;J[a+32>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0;ga=b+16|0;return a|0}function tA(a){a=a|0;var b=0,c=0,d=0;b=J[a+232>>2];if((b|0)>0){while(1){a:{b:{d=J[J[a+240>>2]+(c<<2)>>2];switch(J[d+216>>2]-2|0){case 0:case 3:break a;default:break b}}yk(d);b=J[a+232>>2]}c=c+1|0;if((b|0)>(c|0)){continue}break}}}function Ie(a){H[a+356|0]=1;J[a>>2]=0;H[a+312|0]=0;J[a+292>>2]=1566444395;J[a+296>>2]=1566444395;J[a+336>>2]=0;J[a+340>>2]=0;J[a+300>>2]=1566444395;J[a+304>>2]=0;J[a+344>>2]=0;J[a+348>>2]=0;H[a+352|0]=0;H[a+332|0]=K[a+332|0]&240}function Vd(a,b,c,d,e){var f=0;f=ga-32|0;ga=f;J[f+28>>2]=b;J[f+24>>2]=c;J[f+20>>2]=d;J[f+16>>2]=e;b=J[f+28>>2];N[f+12>>2]=Ua(b,J[f+24>>2]);N[f+8>>2]=Ua(b,J[f+20>>2]);N[f+4>>2]=Ua(b,J[f+16>>2]);na(a,f+12|0,f+8|0,f+4|0);ga=f+32|0}function th(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b+20>>2];J[c>>2]=J[b+16>>2];J[c+4>>2]=a;a=J[b+28>>2];J[c+8>>2]=J[b+24>>2];J[c+12>>2]=a;a=J[b+44>>2];J[d+8>>2]=J[b+40>>2];J[d+12>>2]=a;a=J[b+36>>2];J[d>>2]=J[b+32>>2];J[d+4>>2]=a}function Xn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=(J[d+12>>2]+56|0)+(J[d+8>>2]<<4)|0;c=J[a+4>>2];b=J[d+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=c;c=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=c}function VC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[a+56>>2];J[b>>2]=J[a+52>>2];J[b+4>>2]=d;d=J[a+64>>2];J[b+8>>2]=J[a+60>>2];J[b+12>>2]=d;b=J[a+80>>2];J[c+8>>2]=J[a+76>>2];J[c+12>>2]=b;b=J[a+72>>2];J[c>>2]=J[a+68>>2];J[c+4>>2]=b}function Go(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;J[d+24>>2]=b;J[d+20>>2]=c;a=J[d+28>>2];J[d+16>>2]=27968;b=J[d+16>>2];c=J[d+24>>2];J[d+8>>2]=J[d+20>>2];J[d+4>>2]=c;J[d>>2]=a;ba(b|0,1291,d|0)|0;ga=d+32|0}function xc(a,b,c,d,e){var f=0;f=ga-32|0;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];N[a>>2]=N[J[f+24>>2]>>2];N[a+4>>2]=N[J[f+20>>2]>>2];N[a+8>>2]=N[J[f+16>>2]>>2];N[a+12>>2]=N[J[f+12>>2]>>2]}function rn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=J[a+12>>2];J[b>>2]=J[a+8>>2];J[b+4>>2]=d;d=J[a+20>>2];J[b+8>>2]=J[a+16>>2];J[b+12>>2]=d;b=J[a+36>>2];J[c+8>>2]=J[a+32>>2];J[c+12>>2]=b;b=J[a+28>>2];J[c>>2]=J[a+24>>2];J[c+4>>2]=b}function Lm(a,b,c,d,e){J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;H[a+24|0]=1;J[a>>2]=9708;J[a+20>>2]=0;H[a+28|0]=e;J[a+12>>2]=0;J[a+16>>2]=0;b=J[b+4>>2];H[a+36|0]=0;J[a+32>>2]=b;J[a+40>>2]=J[J[(e?d:c)+4>>2]+68>>2];Km(a,c,d)}function Cy(a){a=a|0;var b=0,c=0,d=0;b=J[a+24>>2];if((b|0)>0){while(1){a:{b:{d=J[J[a+32>>2]+(c<<2)>>2];switch(J[d+216>>2]-2|0){case 0:case 3:break a;default:break b}}lg(d);b=J[a+24>>2]}c=c+1|0;if((c|0)<(b|0)){continue}break}}}function qn(a,b){a=a|0;b=b|0;var c=0,d=0;if(!L[a+56>>1]){b=1;I[a+64>>1]=1;d=J[a+60>>2];c=L[a+58>>1];if(c>>>0>1){while(1){c=(b<<6)+d|0;b=b+1|0;I[c+48>>1]=b;c=L[a+58>>1];if(c>>>0>b>>>0){continue}break}}I[((c<<6)+d|0)-16>>1]=0}}function tj(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];N[a>>2]=N[a>>2]*N[J[c+8>>2]>>2];N[a+4>>2]=N[a+4>>2]*N[J[c+8>>2]>>2];N[a+8>>2]=N[a+8>>2]*N[J[c+8>>2]>>2];N[a+12>>2]=N[a+12>>2]*N[J[c+8>>2]>>2];return a}function eG(a){a=a|0;var b=0;J[a>>2]=11304;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Nz(a){a=a|0;var b=0;J[a>>2]=20740;b=J[a+496>>2];if(!(b?!b|!K[a+500|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+496>>2]=0;H[a+500|0]=1;J[a+488>>2]=0;J[a+492>>2]=0;J[a>>2]=6652;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function ml(a,b,c){var d=0;pl(a);d=J[a+248>>2];J[b>>2]=J[a+244>>2];J[b+4>>2]=d;d=J[a+256>>2];J[b+8>>2]=J[a+252>>2];J[b+12>>2]=d;b=J[a+272>>2];J[c+8>>2]=J[a+268>>2];J[c+12>>2]=b;b=J[a+264>>2];J[c>>2]=J[a+260>>2];J[c+4>>2]=b}function Su(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=ua(40);b=J[d+12>>2];J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;J[a>>2]=17188;J[a+8>>2]=0;J[a+12>>2]=0;ga=d+16|0;return a|0}function _E(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;J[a+68>>2]=J[a+68>>2]+1;c=J[a+16>>2];if((c|0)>0){while(1){d=c-1|0;if(J[(J[a+24>>2]+P(d,80)|0)+64>>2]==(b|0)){km(a,d)}e=c>>>0>1;c=d;if(e){continue}break}}ia[J[J[a>>2]+68>>2]](a)}function Vf(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];rf(a,J[d+8>>2]);b=J[d+4>>2];c=J[b+4>>2];J[a+48>>2]=J[b>>2];J[a+52>>2]=c;c=J[b+12>>2];J[a+56>>2]=J[b+8>>2];J[a+60>>2]=c;ga=d+16|0}function Lo(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;var e=0;e=ga-80|0;ga=e;J[e+76>>2]=a;J[e+72>>2]=b;N[e+68>>2]=c;J[e+64>>2]=d;a=J[e+76>>2];Pb(e);de(e);Wf(e,J[e+72>>2]);ia[J[J[a>>2]+16>>2]](a,N[e+68>>2],e,J[e+64>>2]);ga=e+80|0}function Yt(a,b,c){a=a|0;b=Q(b);c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;N[d+4>>2]=c;b=N[d+8>>2];a=J[d+12>>2];c=N[d+4>>2];N[a+448>>2]=c<Q(0)?Q(0):Q(T(c,Q(1)));N[a+444>>2]=b<Q(0)?Q(0):Q(T(b,Q(1)));ga=d+16|0}function No(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;a=J[f+28>>2];ia[J[J[a>>2]+8>>2]](a,J[f+24>>2],J[f+20>>2],J[f+16>>2]);ga=f+32|0}function LH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=d;J[e+8>>2]=a;a=J[((P(J[J[b+4>>2]+4>>2],144)+a|0)+(J[J[c+4>>2]+4>>2]<<2)|0)+72>>2];a=ia[J[J[a>>2]+8>>2]](a,e+8|0,b,c)|0;ga=e+16|0;return a|0}function _i(a){var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+8>>2]=a;a=J[b+8>>2];J[b+12>>2]=a;d=a+48|0;c=a;while(1){J[(ga-16|0)+12>>2]=c;c=c+16|0;if((d|0)!=(c|0)){continue}break}Oa(a+48|0);N[a+64>>2]=.009999999776482582;ga=b+16|0}function Qs(a,b,c,d,e){a=a|0;b=Q(b);c=Q(c);d=Q(d);e=Q(e);var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;N[f+24>>2]=b;N[f+20>>2]=c;N[f+16>>2]=d;N[f+12>>2]=e;Mi(J[f+28>>2],N[f+24>>2],N[f+20>>2],N[f+16>>2],N[f+12>>2],Q(1));ga=f+32|0}function Pn(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;d=J[b+12>>2];J[d>>2]=4660;a=ga-16|0;ga=a;J[a+12>>2]=d+68;c=ga-16|0;ga=c;J[c+12>>2]=J[a+12>>2];tc(J[c+12>>2]+4|0);ga=c+16|0;ga=a+16|0;ga=b+16|0;return d|0}function TA(a,b,c){a=a|0;b=b|0;c=c|0;var d=Q(0);d=Q(3.4028234663852886e38);a:{if((c|0)!=-1){break a}b:{switch(b-1|0){case 0:case 1:return Q(N[a+336>>2]);case 2:case 3:break b;default:break a}}d=N[a+340>>2]}return Q(d)}function cF(a){a=a|0;var b=0,c=Q(0),d=Q(0),e=Q(0);b=ga-32|0;ga=b;ia[J[J[a>>2]+12>>2]](a,b+16|0,b+12|0);ga=b+32|0;c=N[b+24>>2];d=Q(c*c);c=N[b+16>>2];e=Q(c*c);c=N[b+20>>2];return Q(Q(N[b+12>>2]+Q(Y(Q(d+Q(e+Q(c*c)))))))}function UA(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;a:{if((d|0)!=-1){break a}b:{c:{switch(b-1|0){case 0:case 1:d=a+336|0;b=1;break b;case 2:case 3:break c;default:break a}}d=a+340|0;b=2}N[d>>2]=c;J[a+332>>2]=b|J[a+332>>2]}}function Pc(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;b=J[a+12>>2];J[b+260>>2]=J[b+260>>2]+1;vb(b+4|0,J[a+8>>2]);ga=a+16|0;ga=c+16|0}function vb(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];tg(a,J[c+8>>2]);b=J[c+8>>2];d=J[b+52>>2];J[a+48>>2]=J[b+48>>2];J[a+52>>2]=d;d=J[b+60>>2];J[a+56>>2]=J[b+56>>2];J[a+60>>2]=d;ga=c+16|0}function uE(a){a=a|0;var b=0;J[a>>2]=13816;b=J[a+104>>2];if(!(b?!b|!K[a+108|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+104>>2]=0;H[a+108|0]=1;J[a+96>>2]=0;J[a+100>>2]=0;Qa(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function jI(a,b,c,d){var e=0,f=0,g=0,h=0,i=0,j=0;e=c>>>16|0;f=a>>>16|0;j=P(e,f);g=c&65535;h=a&65535;i=P(g,h);f=(i>>>16|0)+P(f,g)|0;e=(f&65535)+P(e,h)|0;ha=(P(b,c)+j|0)+P(a,d)+(f>>>16)+(e>>>16)|0;return i&65535|e<<16}function _w(){var a=0,b=0,c=0,d=0;b=ua(8);J[b>>2]=0;J[b+4>>2]=0;c=ga-16|0;ga=c;J[c+12>>2]=b;a=ga-16|0;d=J[c+12>>2];J[a+12>>2]=d;a=J[a+12>>2];J[a>>2]=1776;I[a+4>>1]=1;I[a+6>>1]=65535;J[d>>2]=1656;ga=c+16|0;return b|0}function _b(a,b){var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];rf(a,J[c+8>>2]);b=J[c+8>>2];d=J[b+52>>2];J[a+48>>2]=J[b+48>>2];J[a+52>>2]=d;d=J[b+60>>2];J[a+56>>2]=J[b+56>>2];J[a+60>>2]=d;ga=c+16|0}function Tu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=ua(8);d=J[c+12>>2];e=J[c+8>>2];a=ga-16|0;J[a+12>>2]=b;J[a+8>>2]=d;J[a+4>>2]=e;J[J[a+12>>2]>>2]=J[a+8>>2];ga=c+16|0;return b|0}function Bh(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=0;J[c+4>>2]=b;a=J[c+12>>2];J[c>>2]=J[c+8>>2];while(1){if(J[c>>2]<J[c+4>>2]){tc(J[a+12>>2]+P(J[c>>2],36)|0);J[c>>2]=J[c>>2]+1;continue}break}ga=c+16|0}function Qo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;a=ig(J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0;return a|0}function AG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[a+8>>2];d=J[c+8>>2];if((d|0)>0){a=0;while(1){e=J[(J[c+16>>2]+P(a,12)|0)+8>>2];if(e){ia[J[J[e>>2]+16>>2]](e,b);d=J[c+8>>2]}a=a+1|0;if((d|0)>(a|0)){continue}break}}}function OB(a){a=a|0;var b=0;J[a>>2]=19064;b=J[a+140>>2];if(!(b?!b|!K[a+144|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+140>>2]=0;H[a+144|0]=1;J[a+132>>2]=0;J[a+136>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function ks(){var a=0,b=0;b=ua(24);a=ga-16|0;J[a+12>>2]=b;a=J[a+12>>2];N[a>>2]=5.880000114440918;N[a+4>>2]=.8299999833106995;N[a+8>>2]=.8799999952316284;N[a+12>>2]=500;N[a+16>>2]=10.5;N[a+20>>2]=6e3;return b|0}function Xv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;Ml(J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0}function Jp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;H[f+15|0]=e;Ja(J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],H[f+15|0]&1);ga=f+32|0}function Ip(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;rb(J[f+28>>2],J[f+24>>2],J[f+20>>2],J[f+16>>2],J[f+12>>2]);ga=f+32|0}function Az(a,b){a=a|0;b=b|0;var c=Q(0);b=J[b+36>>2];c=jk(a+4|0,a+36|0,J[b+8>>2]+8|0,J[b+12>>2]+8|0,J[b+16>>2]+8|0,N[a+52>>2]);if(!(!(c>Q(0))|!(N[a+52>>2]>c))){J[a+56>>2]=b;N[a+52>>2]=c}J[a+60>>2]=J[a+60>>2]+1}function Ap(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=J[d+12>>2];c=N[d+4>>2];N[(J[a+720>>2]+P(J[d+8>>2],104)|0)+88>>2]=c>Q(0)?Q(Q(1)/c):Q(0);H[a+924|0]=1;ga=d+16|0}function ag(a,b,c){var d=0;d=J[a+16>>2];if(!d){J[a+36>>2]=1;J[a+24>>2]=c;J[a+16>>2]=b;return}a:{if((b|0)==(d|0)){if(J[a+24>>2]!=2){break a}J[a+24>>2]=c;return}H[a+54|0]=1;J[a+24>>2]=2;J[a+36>>2]=J[a+36>>2]+1}}function Uc(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];J[d+260>>2]=J[d+260>>2]+1;N[d+228>>2]=N[a+8>>2];ga=c+16|0}function Tc(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];J[d+260>>2]=J[d+260>>2]+1;N[d+224>>2]=N[a+8>>2];ga=c+16|0}function Sc(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];J[d+260>>2]=J[d+260>>2]+1;N[d+232>>2]=N[a+8>>2];ga=c+16|0}function bC(a){a=a|0;var b=0;a=J[a+140>>2];b=J[a+32>>2];if((b|0)>0){J[a+32>>2]=b+1;return}b=J[a+8>>2];ia[J[J[b>>2]+16>>2]](b,a+36|0,a+40|0,a+44|0,a+48|0,a+52|0,a+56|0,a+60|0,a- -64|0,J[a+28>>2]);J[a+32>>2]=1}function Rk(){var a=0;a=ga-16|0;ga=a;if(!K[32576]){J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;qg(31960,a);H[32576]=1}J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;we(31960,Q(0),a);ga=a+16|0;return 31960}function yv(a,b){a=a|0;b=b|0;var c=0;c=ga-80|0;ga=c;J[c+76>>2]=a;J[c+72>>2]=b;if(!K[29304]){Pb(29240);H[29304]=1}a=c+8|0;b=J[c+76>>2];ia[J[J[b>>2]+132>>2]](a,b,J[c+72>>2]);vb(29240,a);ga=c+80|0;return 29240}function PA(a,b){a=a|0;b=b|0;var c=0;c=ga-80|0;ga=c;J[c+76>>2]=a;J[c+72>>2]=b;if(!K[29028]){Pb(28964);H[29028]=1}a=c+8|0;b=J[c+76>>2];ia[J[J[b>>2]+132>>2]](a,b,J[c+72>>2]);vb(28964,a);ga=c+80|0;return 28964}function Ej(a,b,c,d){a=a|0;b=Q(b);c=c|0;d=Q(d);var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;J[e+4>>2]=c;N[e>>2]=d;a=J[e+12>>2];a=ia[J[J[a>>2]+52>>2]](a,N[e+8>>2],J[e+4>>2],N[e>>2])|0;ga=e+16|0;return a|0}function kw(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2];J[c+8>>2]=0;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+12>>2]+(J[c+8>>2]<<4)|0}function YC(a){a=a|0;var b=0;J[a>>2]=16664;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Bb(a){J[a+4>>2]=35;J[a+8>>2]=0;J[a>>2]=14268;J[a+44>>2]=1025758986;J[a+20>>2]=1065353216;J[a+24>>2]=0;J[a+12>>2]=1065353216;J[a+16>>2]=1065353216;J[a>>2]=13984;J[a+52>>2]=0;J[a>>2]=15776;return a}function jC(a){a=a|0;var b=0;J[a>>2]=4660;b=J[a+84>>2];if(!(b?!b|!K[a+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+84>>2]=0;H[a+88|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Og(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;d=J[a+12>>2];J[c+12>>2]=d+28;ga=a+16|0;ga=b+16|0;return Q(N[J[c+12>>2]+(J[d+52>>2]<<2)>>2])}function Ld(a){var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=J[b+12>>2];N[b+8>>2]=sf(c);a=ga-16|0;ga=a;J[a+12>>2]=c;J[a+8>>2]=b+8;c=J[a+12>>2];N[a+4>>2]=Q(1)/N[J[a+8>>2]>>2];ih(c,a+4|0);ga=a+16|0;ga=b+16|0}function Fj(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];a=ia[J[J[a>>2]+52>>2]](a,N[d+8>>2],J[d+4>>2],Q(.01666666753590107))|0;ga=d+16|0;return a|0}function qo(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];H[c+7|0]=(I[J[c+8>>2]+4>>1]&I[a+14>>1])!=0;H[c+7|0]=H[c+7|0]&1&(I[a+12>>1]&I[J[c+8>>2]+6>>1])!=0;return H[c+7|0]&1}function ye(a){var b=Q(0);b=Pa(Q(N[a>>2]+N[a+4>>2]),Q(6.2831854820251465));if(b<Q(-3.1415927410125732)){return Q(b+Q(6.2831854820251465))}return b>Q(3.1415927410125732)?Q(b+Q(-6.2831854820251465)):b}function xe(a){var b=Q(0);b=Pa(Q(N[a>>2]-N[a+4>>2]),Q(6.2831854820251465));if(b<Q(-3.1415927410125732)){return Q(b+Q(6.2831854820251465))}return b>Q(3.1415927410125732)?Q(b+Q(-6.2831854820251465)):b}function nD(a,b,c){a=a|0;b=Q(b);c=c|0;var d=Q(0),e=Q(0);d=Q(ia[J[J[a>>2]+48>>2]](a));e=Q(ia[J[J[a>>2]+48>>2]](a));J[c+12>>2]=0;b=Q(e*Q(d*Q(b*Q(.4000000059604645))));N[c+8>>2]=b;N[c+4>>2]=b;N[c>>2]=b}function ko(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];H[c+7|0]=(I[J[c+8>>2]+4>>1]&I[a+10>>1])!=0;H[c+7|0]=H[c+7|0]&1&(I[a+8>>1]&I[J[c+8>>2]+6>>1])!=0;return H[c+7|0]&1}function Gu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=ra(116);Kd(a,J[e+12>>2],J[e+8>>2],J[e+4>>2]&65535,J[e>>2],0);ga=e+16|0;return a|0}function vj(a,b,c,d,e){a=a|0;b=Q(b);c=Q(c);d=Q(d);e=Q(e);var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;N[f+24>>2]=b;N[f+20>>2]=c;N[f+16>>2]=d;N[f+12>>2]=e;xc(J[f+28>>2],f+24|0,f+20|0,f+16|0,f+12|0);ga=f+32|0}function rv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=ga-32|0;ga=f;J[f+28>>2]=a;J[f+24>>2]=b;J[f+20>>2]=c;J[f+16>>2]=d;J[f+12>>2]=e;Lf(J[f+28>>2],J[f+24>>2],f+20|0,f+16|0,f+12|0);ga=f+32|0}function mo(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];H[c+7|0]=(I[J[c+8>>2]+4>>1]&I[a+6>>1])!=0;H[c+7|0]=H[c+7|0]&1&(I[a+4>>1]&I[J[c+8>>2]+6>>1])!=0;return H[c+7|0]&1}function xb(a,b,c,d){J[a+44>>2]=0;J[a+36>>2]=0;J[a+40>>2]=1050253722;J[a+32>>2]=d;J[a+28>>2]=c;J[a+24>>2]=-1;I[a+20>>1]=1;J[a+16>>2]=2139095039;J[a+8>>2]=-1;J[a+12>>2]=-1;J[a+4>>2]=b;J[a>>2]=20112}function pq(){var a=0,b=0;a=ra(288);Bd(a);J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a+236>>2]=4;J[a>>2]=11348;J[8369]=J[8369]+1;b=ia[J[6782]](76,16)|0;mh(b);J[a+284>>2]=b;return a|0}function _s(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];N[d+572>>2]=N[a+8>>2];H[d+553|0]=1;ga=c+16|0}function Dc(a){a:{switch(J[a+4>>2]){case 8:return Q(N[a+28>>2]*N[a+12>>2]);default:return Q(ia[J[J[a>>2]+48>>2]](a));case 0:case 1:case 4:case 5:case 10:case 11:case 13:break a}}return N[a+44>>2]}function $s(a,b){a=a|0;b=Q(b);var c=0,d=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;d=J[a+12>>2];N[d+572>>2]=N[a+8>>2];H[d+553|0]=0;ga=c+16|0}function ob(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];d=ga-16|0;c=J[a+12>>2];J[d+12>>2]=c;Eb(c,J[J[d+12>>2]+4>>2]);lb(c);Yd(c);ga=a+16|0;ga=b+16|0}function fG(a){a=a|0;var b=0;J[a>>2]=11304;b=J[a+276>>2];if(!(b?!b|!K[a+280|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+276>>2]=0;H[a+280|0]=1;J[a+268>>2]=0;J[a+272>>2]=0;J[a>>2]=6652;return a|0}function Oz(a){a=a|0;var b=0;J[a>>2]=20740;b=J[a+496>>2];if(!(b?!b|!K[a+500|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+496>>2]=0;H[a+500|0]=1;J[a+488>>2]=0;J[a+492>>2]=0;J[a>>2]=6652;return a|0}function nx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return Q(N[J[J[a+12>>2]+12>>2]+(J[a+8>>2]<<2)>>2])}function Pe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;I[e+6>>1]=c;I[e+4>>1]=d;a=J[e+12>>2];ia[J[J[a>>2]+36>>2]](a,J[e+8>>2],I[e+6>>1],I[e+4>>1]);ga=e+16|0}function Nj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;I[e+6>>1]=c;I[e+4>>1]=d;a=J[e+12>>2];ia[J[J[a>>2]+88>>2]](a,J[e+8>>2],I[e+6>>1],I[e+4>>1]);ga=e+16|0}function Es(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+192>>2]=qe(N[a+8>>2]);ga=a+16|0;ga=c+16|0}function Ds(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+196>>2]=qe(N[a+8>>2]);ga=a+16|0;ga=c+16|0}function kD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;J[c+8>>2]=-581039253;J[c+12>>2]=0;J[c>>2]=-581039253;J[c+4>>2]=-581039253;J[d+8>>2]=1566444395;J[d+12>>2]=0;J[d>>2]=1566444395;J[d+4>>2]=1566444395}function Vs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=ra(764);Yk(a,J[e+12>>2],J[e+8>>2],J[e+4>>2],J[e>>2],0);ga=e+16|0;return a|0}function Uz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[b>>2];d=J[a+80>>2];if(!(!(L[b+6>>1]&L[a+8>>1])|(!(L[a+10>>1]&L[b+4>>1])|(c|0)==(d|0)))){a=J[a+92>>2];e=ia[J[J[a>>2]+28>>2]](a,d,c)|0}return e|0}function zr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+188>>2]=J[a>>2];J[b+192>>2]=c;c=J[a+12>>2];J[b+196>>2]=J[a+8>>2];J[b+200>>2]=c}function yu(a,b,c,d){a=Q(a);b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;N[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;b=ua(140);Ri(b,N[e+12>>2],J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0;return b|0}function lr(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;N[e+4>>2]=c;J[e>>2]=d;a=ra(184);kl(a,J[e+12>>2],J[e+8>>2],N[e+4>>2],J[e>>2]);ga=e+16|0;return a|0}function Op(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=ra(1252);Ac(a,J[e+12>>2],J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0;return a|0}function Er(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+156>>2]=J[a>>2];J[b+160>>2]=c;c=J[a+12>>2];J[b+164>>2]=J[a+8>>2];J[b+168>>2]=c}function Br(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+172>>2]=J[a>>2];J[b+176>>2]=c;c=J[a+12>>2];J[b+180>>2]=J[a+8>>2];J[b+184>>2]=c}function yj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+8>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2])|0;ga=e+16|0}function ce(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[J[a+12>>2]+12>>2]+(J[a+8>>2]<<2)>>2]}function Wn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+124>>2]](a,J[e>>2],J[e+8>>2],J[e+4>>2]);ga=e+16|0}function Nv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d);var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;N[e>>2]=d;a=ua(32);aj(a,J[e+12>>2],J[e+8>>2],J[e+4>>2],N[e>>2]);ga=e+16|0;return a|0}function Mh(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];J[c+4>>2]=0;while(1){if(J[c+4>>2]<4){b=J[c+4>>2]<<2;N[b+J[c+8>>2]>>2]=N[a+b>>2];J[c+4>>2]=J[c+4>>2]+1;continue}break}}function Fb(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;N[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+28>>2]](a,J[e+8>>2],N[e+4>>2],J[e>>2]);ga=e+16|0}function DG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=J[a+12>>2];if((c|0)>0){while(1){e=J[J[a+20>>2]+(d<<2)>>2];if(e){ia[J[J[e>>2]+16>>2]](e,b);c=J[a+12>>2]}d=d+1|0;if((c|0)>(d|0)){continue}break}}}function jb(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];N[a>>2]=N[a>>2]+N[J[c+8>>2]>>2];N[a+4>>2]=N[a+4>>2]+N[J[c+8>>2]+4>>2];N[a+8>>2]=N[a+8>>2]+N[J[c+8>>2]+8>>2];return a}function ee(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+28>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function Xd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+32>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function Sn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+80>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function Kq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+24>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function yk(a){if(!(K[a+204|0]&3)){N[a+412>>2]=Q(N[a+364>>2]*N[a+348>>2])+N[a+412>>2];N[a+416>>2]=Q(N[a+368>>2]*N[a+352>>2])+N[a+416>>2];N[a+420>>2]=Q(N[a+372>>2]*N[a+356>>2])+N[a+420>>2]}}function xf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];ia[J[J[a>>2]+8>>2]](a,J[e+8>>2],J[e+4>>2],J[e>>2]);ga=e+16|0}function sf(a){var b=0,c=0,d=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[a+12>>2];d=Ua(c,c);ga=a+16|0;a=ga-16|0;N[a+12>>2]=d;ga=b+16|0;return Q(Y(N[a+12>>2]))}function dq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+P(J[a+8>>2],104)|0}function zw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+P(J[a+8>>2],36)|0}function pj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+20>>2]=J[a>>2];J[b+24>>2]=c;c=J[a+12>>2];J[b+28>>2]=J[a+8>>2];J[b+32>>2]=c}function nj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+36>>2]=J[a>>2];J[b+40>>2]=c;c=J[a+12>>2];J[b+44>>2]=J[a+8>>2];J[b+48>>2]=c}function mj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+52>>2]=J[a>>2];J[b+56>>2]=c;c=J[a+12>>2];J[b+60>>2]=J[a+8>>2];J[b+64>>2]=c}function kj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+68>>2]=J[a>>2];J[b+72>>2]=c;c=J[a+12>>2];J[b+76>>2]=J[a+8>>2];J[b+80>>2]=c}function ij(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+56>>2]=J[a>>2];J[b+60>>2]=c;c=J[a+12>>2];J[b+64>>2]=J[a+8>>2];J[b+68>>2]=c}function hq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+P(J[a+8>>2],44)|0}function gq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+72>>2]=J[a>>2];J[b+76>>2]=c;c=J[a+12>>2];J[b+80>>2]=J[a+8>>2];J[b+84>>2]=c}function fj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+32>>2]=J[a>>2];J[b+36>>2]=c;c=J[a+12>>2];J[b+40>>2]=J[a+8>>2];J[b+44>>2]=c}function fd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+16>>2]=J[a>>2];J[b+20>>2]=c;c=J[a+12>>2];J[b+24>>2]=J[a+8>>2];J[b+28>>2]=c}function dj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+24>>2]=J[a>>2];J[b+28>>2]=c;c=J[a+12>>2];J[b+32>>2]=J[a+8>>2];J[b+36>>2]=c}function bx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+64>>2]=J[a>>2];J[b+68>>2]=c;c=J[a+12>>2];J[b+72>>2]=J[a+8>>2];J[b+76>>2]=c}function bu(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(616);c=J[b+12>>2];Bd(a);H[a+500|0]=1;J[a>>2]=20740;J[a+496>>2]=0;J[a+488>>2]=0;J[a+492>>2]=0;zk(a,c);ga=b+16|0;return a|0}function Wf(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+48>>2]=J[a>>2];J[b+52>>2]=c;c=J[a+12>>2];J[b+56>>2]=J[a+8>>2];J[b+60>>2]=c}function Vw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+12>>2]=J[a>>2];J[b+16>>2]=c;c=J[a+12>>2];J[b+20>>2]=J[a+8>>2];J[b+24>>2]=c}function Uw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+28>>2]=J[a>>2];J[b+32>>2]=c;c=J[a+12>>2];J[b+36>>2]=J[a+8>>2];J[b+40>>2]=c}function Sw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+44>>2]=J[a>>2];J[b+48>>2]=c;c=J[a+12>>2];J[b+52>>2]=J[a+8>>2];J[b+56>>2]=c}function Qw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+60>>2]=J[a>>2];J[b+64>>2]=c;c=J[a+12>>2];J[b+68>>2]=J[a+8>>2];J[b+72>>2]=c}function Qf(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+40>>2]=J[a>>2];J[b+44>>2]=c;c=J[a+12>>2];J[b+48>>2]=J[a+8>>2];J[b+52>>2]=c}function Gb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=Q(0);d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];e=Q(ia[J[J[a>>2]+32>>2]](a,J[d+8>>2],J[d+4>>2]));ga=d+16|0;return Q(e)}function $p(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+76>>2]=J[a>>2];J[b+80>>2]=c;c=J[a+12>>2];J[b+84>>2]=J[a+8>>2];J[b+88>>2]=c}function vE(a){a=a|0;var b=0;J[a>>2]=13816;b=J[a+104>>2];if(!(b?!b|!K[a+108|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+104>>2]=0;H[a+108|0]=1;J[a+96>>2]=0;J[a+100>>2]=0;Qa(a);return a|0}function jc(a){J[a+16>>2]=0;J[a+8>>2]=-1;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0;J[a+32>>2]=0;H[a+36|0]=1;H[a+56|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;J[a+52>>2]=0;J[a+44>>2]=0;J[a+48>>2]=0;return a}function go(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-32|0;ga=d;J[d+28>>2]=a;N[d+24>>2]=b;J[d+20>>2]=c;a=J[d+20>>2];N[d+16>>2]=0;N[d+12>>2]=0;N[d+8>>2]=0;na(a,d+16|0,d+12|0,d+8|0);ga=d+32|0}function ej(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+8>>2]=J[a>>2];J[b+12>>2]=c;c=J[a+12>>2];J[b+16>>2]=J[a+8>>2];J[b+20>>2]=c}function aw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+(J[a+8>>2]<<5)|0}function Pp(a){a=a|0;var b=0,c=0,d=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=J[b+12>>2];if(c){a=ga-16|0;ga=a;J[a+12>>2]=c;d=J[a+12>>2];ob(d+144|0);ob(d+124|0);ob(d+104|0);ga=a+16|0;ta(c)}ga=b+16|0}function Aw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return J[J[a+12>>2]+12>>2]+(J[a+8>>2]<<4)|0}function wF(a){a=a|0;var b=0;J[a>>2]=12196;if(K[a+61|0]){b=J[a+52>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function na(a,b,c,d){var e=0;e=ga-16|0;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=J[e+12>>2];N[a>>2]=N[J[e+8>>2]>>2];N[a+4>>2]=N[J[e+4>>2]>>2];N[a+8>>2]=N[J[e>>2]>>2];N[a+12>>2]=0}function ih(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];N[a>>2]=N[a>>2]*N[J[c+8>>2]>>2];N[a+4>>2]=N[a+4>>2]*N[J[c+8>>2]>>2];N[a+8>>2]=N[a+8>>2]*N[J[c+8>>2]>>2];return a}function cq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b+4>>2]=J[a>>2];J[b+8>>2]=c;c=J[a+12>>2];J[b+12>>2]=J[a+8>>2];J[b+16>>2]=c}function Lu(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;ga=c+16|0;return(J[a+12>>2]+4|0)+P(J[a+8>>2],184)|0}function fb(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ia[J[J[c>>2]+40>>2]](c,a)|0;e=ia[J[J[c>>2]+28>>2]](c,d)|0;J[b>>2]=e;if(e){ia[J[J[c>>2]+48>>2]](c,d)}J[b+4>>2]=J[a+4>>2];return 3781}function be(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+12>>2];a=J[c+8>>2];c=J[a+4>>2];J[b>>2]=J[a>>2];J[b+4>>2]=c;c=J[a+12>>2];J[b+8>>2]=J[a+8>>2];J[b+12>>2]=c}function Zz(a,b){a=a|0;b=Q(b);var c=0,d=0;ya(2618);if(J[a+280>>2]>0){while(1){d=J[J[a+288>>2]+(c<<2)>>2];ia[J[J[d>>2]+8>>2]](d,a,b);c=c+1|0;if((c|0)<J[a+280>>2]){continue}break}}xa()}function Oe(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[a+12>>2];if(H[c+48|0]&1){ia[J[J[c>>2]+68>>2]](c);H[c+48|0]=0}ga=a+16|0;ga=b+16|0}function Gy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;a=ra(324);Lk(a,J[e+12>>2],J[e+8>>2],J[e+4>>2]);ga=e+16|0;return a|0}function Bt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];b=J[a+192>>2];ia[J[J[b>>2]+8>>2]](b,a+4|0,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ax(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;ga=a;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;sj(J[a+12>>2],J[a+8>>2]);ga=a+16|0;ga=c+16|0}function ln(a){a=a|0;var b=0;J[a>>2]=5668;if(K[a+192|0]){b=J[a+136>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+136>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}sb(a- -64|0);sb(a+4|0);return a|0}function PB(a){a=a|0;var b=0;J[a>>2]=19064;b=J[a+140>>2];if(!(b?!b|!K[a+144|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+140>>2]=0;H[a+144|0]=1;J[a+132>>2]=0;J[a+136>>2]=0;return a|0}function Md(a){var b=0;b=ga-16|0;ga=b;J[b+8>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+8>>2];a:{if(J[J[a+12>>2]+236>>2]==4){J[b+12>>2]=J[b+8>>2];break a}J[b+12>>2]=0}ga=b+16|0;return J[b+12>>2]}function av(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+144;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+40>>2]}function Qx(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=wc(N[J[a+12>>2]+12>>2]);N[a+8>>2]=c+c;ga=a+16|0;ga=b+16|0;return Q(N[a+8>>2])}function Ho(a,b){a=a|0;b=b|0;var c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;J[c+24>>2]=b;a=J[c+28>>2];J[c+20>>2]=27724;b=J[c+20>>2];J[c+4>>2]=J[c+24>>2];J[c>>2]=a;ba(b|0,1288,c|0)|0;ga=c+32|0}function Fo(a,b){a=a|0;b=b|0;var c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;J[c+24>>2]=b;a=J[c+28>>2];J[c+20>>2]=28191;b=J[c+20>>2];J[c+4>>2]=J[c+24>>2];J[c>>2]=a;ba(b|0,1295,c|0)|0;ga=c+32|0}function xj(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+264;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+4>>2]}function _x(a,b,c,d){a=Q(a);b=Q(b);c=Q(c);d=Q(d);var e=0,f=0;e=ga-16|0;ga=e;N[e+12>>2]=a;N[e+8>>2]=b;N[e+4>>2]=c;N[e>>2]=d;f=ua(16);he(f,e+12|0,e+8|0,e+4|0,e);ga=e+16|0;return f|0}function Xu(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+148;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+4>>2]}function Oq(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+132;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+4>>2]}function AC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,40)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=8652;J[a>>2]=17188;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function ew(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=ga-16|0;J[c+12>>2]=J[a+12>>2]+12;ga=a+16|0;ga=b+16|0;return J[J[c+12>>2]+4>>2]}function Qd(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[J[a+12>>2]+68>>2];c=ia[J[J[c>>2]+36>>2]](c)|0;ga=a+16|0;ga=b+16|0;return c|0}function HH(a,b){a=a|0;b=b|0;var c=0,d=0;a=J[a+64>>2];c=J[a+8>>2];if(c){b=J[a+12>>2];d=J[b>>2];J[a+8>>2]=c-1;J[a+12>>2]=d;return b|0}J[8369]=J[8369]+1;return ia[J[6782]](b,16)|0}function Cs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+1096|0]=H[a+11|0]&1;ga=c+16|0}function kn(a){a=a|0;var b=0;J[a>>2]=5668;if(K[a+192|0]){b=J[a+136>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+136>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}sb(a- -64|0);sb(a+4|0);ta(a)}function ct(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+524|0]=H[a+11|0]&1;ga=c+16|0}function at(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+552|0]=H[a+11|0]&1;ga=c+16|0}function Xq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+170|0]=H[a+11|0]&1;ga=c+16|0}function Ns(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+736|0]=H[a+11|0]&1;ga=c+16|0}function Ms(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+737|0]=H[a+11|0]&1;ga=c+16|0}function Ol(a){a=a|0;var b=0;J[a>>2]=16664;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;return a|0}function Jb(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;b=H[c+11|0]&1;a=ga-16|0;J[a+12>>2]=J[c+12>>2];H[a+11|0]=b;H[J[a+12>>2]+21|0]=H[a+11|0]&1;ga=c+16|0}function Fy(a){a=a|0;var b=0;J[a>>2]=23088;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+32>>2]=0;H[a+36|0]=1;J[a+24>>2]=0;J[a+28>>2]=0;return a|0}function Bs(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+1104>>2]=N[a+8>>2];ga=c+16|0}function As(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+1100>>2]=N[a+8>>2];ga=c+16|0}function vc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+184>>2]=N[a+8>>2];ga=c+16|0}function kC(a){a=a|0;var b=0;J[a>>2]=4660;b=J[a+84>>2];if(!(b?!b|!K[a+88|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+84>>2]=0;H[a+88|0]=1;J[a+76>>2]=0;J[a+80>>2]=0;return a|0}function bt(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+440>>2]=N[a+8>>2];ga=c+16|0}function QH(a){a=a|0;var b=0;J[a>>2]=6484;b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0;return a|0}function Oc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+252>>2]=N[a+8>>2];ga=c+16|0}function Ls(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+684>>2]=N[a+8>>2];ga=c+16|0}function Lc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+248>>2]=N[a+8>>2];ga=c+16|0}function Hu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=ra(116);Kd(a,J[d+12>>2],J[d+8>>2],J[d+4>>2]&65535,0,0);ga=d+16|0;return a|0}function Fs(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+188>>2]=N[a+8>>2];ga=c+16|0}function Bq(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+104>>2]=N[a+8>>2];ga=c+16|0}function on(a){a=a|0;var b=0;J[a>>2]=5524;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+16>>2]=0;H[a+20|0]=1;J[a+8>>2]=0;J[a+12>>2]=0;return a|0}function mb(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[J[a+12>>2]+240>>2]=J[a+8>>2];ga=c+16|0}function cc(a){var b=0,c=0;b=J[6788];c=a+3&-4;a=b+c|0;a:{if(a>>>0<=b>>>0?c:0){break a}if(a>>>0>ja()<<16>>>0){if(!(da(a|0)|0)){break a}}J[6788]=a;return b}J[8386]=48;return-1}function Qc(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[J[a+12>>2]+204>>2]=J[a+8>>2];ga=c+16|0}function Hb(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+16>>2]=N[a+8>>2];ga=c+16|0}function Gj(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];a=ia[J[J[a>>2]+52>>2]](a,N[c+8>>2],1,Q(.01666666753590107))|0;ga=c+16|0;return a|0}function Fm(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+12>>2]=N[a+8>>2];ga=c+16|0}function sq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[J[a+12>>2]+84>>2]=J[a+8>>2];ga=c+16|0}function rq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[J[a+12>>2]+88>>2]=J[a+8>>2];ga=c+16|0}function Zn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;mf(J[d+12>>2],J[d+4>>2]);if(J[d+8>>2]){N[d>>2]=-1;ih(J[d+4>>2],d)}ga=d+16|0}function Pd(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+4>>2]=N[a+8>>2];ga=c+16|0}function Od(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]+8>>2]=N[a+8>>2];ga=c+16|0}function GF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if(b>>>0<=11){b=b<<2;e=J[b+12076>>2];b=J[b+12028>>2]}else{b=0}ia[J[J[a>>2]+108>>2]](a,b,c);ia[J[J[a>>2]+108>>2]](a,e,d)}function yf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;H[e+3|0]=d;Af(J[e+12>>2],J[e+8>>2],J[e+4>>2],H[e+3|0]&1);ga=e+16|0}function so(a,b){a=a|0;b=b|0;var c=0,d=0;c=ga-144|0;ga=c;J[c+140>>2]=a;J[c+136>>2]=b;a=c+8|0;b=J[c+140>>2];rj(a,b+68|0);d=c+72|0;Td(d,a,b+4|0);vb(J[c+136>>2],d);ga=c+144|0}function it(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=J[c+12>>2];yg(b);b=b+(a<<2)|0;N[b+1316>>2]=N[b+((a|0)<3?1256:1180)>>2];ga=c+16|0}function cy(){var a=0,b=0,c=0,d=0;b=ua(4);J[b>>2]=0;a=ga-16|0;ga=a;J[a+12>>2]=b;c=ga-16|0;d=J[a+12>>2];J[c+12>>2]=d;J[J[c+12>>2]>>2]=1184;J[d>>2]=1032;ga=a+16|0;return b|0}function bw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;H[e+3|0]=d;lm(J[e+12>>2],J[e+8>>2],J[e+4>>2],H[e+3|0]&1);ga=e+16|0}function Rd(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;b=N[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];N[a+8>>2]=b;N[J[a+12>>2]>>2]=N[a+8>>2];ga=c+16|0}function fI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((b|0)!=(c|0)){d=J[J[a+4>>2]+136>>2];ia[J[J[d>>2]+8>>2]](d,J[b+36>>2],J[c+36>>2])|0;a=J[a+4>>2];J[a+160>>2]=J[a+160>>2]+1}}function Yv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d;Ml(J[e+12>>2],J[e+8>>2],J[e+4>>2],J[e>>2],0);ga=e+16|0}function Vh(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[a>>2]=1572;ob(a+112|0);ob(a+92|0);ob(a+72|0);ob(a+20|0);J[(ga-16|0)+12>>2]=a;ga=b+16|0;return a|0}function Tq(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;N[(J[J[d+12>>2]+144>>2]+P(J[d+4>>2],284)|0)+252>>2]=N[d+8>>2];ga=d+16|0}function Sq(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;N[(J[J[d+12>>2]+144>>2]+P(J[d+4>>2],284)|0)+232>>2]=N[d+8>>2];ga=d+16|0}function PH(a){a=a|0;var b=0;J[a>>2]=6484;b=J[a+20>>2];if(!(b?!b|!K[a+24|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+20>>2]=0;H[a+24|0]=1;J[a+12>>2]=0;J[a+16>>2]=0;ta(a)}function Lq(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;N[(J[J[d+12>>2]+144>>2]+P(J[d+4>>2],284)|0)+256>>2]=N[d+8>>2];ga=d+16|0}function Qk(a){var b=0,c=0;b=ga-16|0;ga=b;J[b+8>>2]=a;a=J[b+8>>2];J[b+12>>2]=a;c=a+48|0;while(1){J[(ga-16|0)+12>>2]=a;a=a+16|0;if((c|0)!=(a|0)){continue}break}ga=b+16|0}function $b(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=b;N[c+8>>2]=-N[J[c+12>>2]>>2];N[c+4>>2]=-N[J[c+12>>2]+4>>2];N[c>>2]=-N[J[c+12>>2]+8>>2];na(a,c+8|0,c+4|0,c);ga=c+16|0}function mr(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=ra(184);kl(a,J[d+12>>2],J[d+8>>2],N[d+4>>2],1);ga=d+16|0;return a|0}function Qv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;H[d+11|0]=b;H[d+10|0]=c;a=ra(76);qm(a,J[d+12>>2],H[d+11|0]&1,H[d+10|0]&1);ga=d+16|0;return a|0}function zj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;I[d+6>>1]=c;a=J[d+12>>2];ia[J[J[a>>2]+36>>2]](a,J[d+8>>2],I[d+6>>1],-3);ga=d+16|0}function em(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;I[d+6>>1]=c;a=J[d+12>>2];ia[J[J[a>>2]+36>>2]](a,J[d+8>>2],I[d+6>>1],-1);ga=d+16|0}function aC(a){a=a|0;var b=0;a=J[a+140>>2];b=J[a+32>>2];if(b){if((b|0)>=2){b=b-1|0}else{b=J[a+8>>2];ia[J[J[b>>2]+24>>2]](b,J[a+28>>2]);J[a+36>>2]=0;b=0}J[a+32>>2]=b}}function Lz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=ra(1312);bl(a,J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0;return a|0}function Gd(a,b){var c=0;if(J[b+40>>2]){Gd(a,J[b+36>>2]);Gd(a,J[b+40>>2])}if(J[a>>2]==(b|0)){J[a>>2]=0}c=J[a+4>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+4>>2]=b}function pt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];b=J[c+8>>2];c=J[b+4>>2];J[a+348>>2]=J[b>>2];J[a+352>>2]=c;J[a+356>>2]=J[b+8>>2]}function jr(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+20>>2]](a,J[d+8>>2],N[d+4>>2]);ga=d+16|0}function gr(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+36>>2]](a,J[d+8>>2],N[d+4>>2]);ga=d+16|0}function Ws(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=ra(764);Xk(a,J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0;return a|0}function Vy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=J[b>>2];c=ia[J[J[c>>2]+56>>2]](c,20)|0;a=K[a+4|0];J[c>>2]=8624;J[c+4>>2]=J[b>>2];H[c+16|0]=a;J[c>>2]=22656;return c|0}function PG(a){a=a|0;var b=0;J[a+12>>2]=9408;J[a>>2]=9380;b=J[a+60>>2];ia[J[J[b>>2]+20>>2]](b,J[a+76>>2]);b=J[a+60>>2];ia[J[J[b>>2]+16>>2]](b,J[a+76>>2]);return a|0}function Oi(a,b){var c=0,d=0;c=ga-48|0;ga=c;J[c+44>>2]=a;J[c+40>>2]=b;b=c+8|0;a=J[c+44>>2];wa(b,a+264|0,J[c+40>>2]);d=c+24|0;Kb(d,b,a+544|0);jb(a+328|0,d);ga=c+48|0}function Ni(a,b){var c=0,d=0;c=ga-48|0;ga=c;J[c+44>>2]=a;J[c+40>>2]=b;b=c+8|0;a=J[c+44>>2];Kb(b,J[c+40>>2],a+348|0);d=c+24|0;Ia(d,b,a+344|0);jb(a+312|0,d);ga=c+48|0}function Ik(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+136>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ea(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+32>>2]](a,N[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ce(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+104>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Be(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+108>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function fi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+40>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Yf(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+8>>2]](a,J[d+8>>2],N[d+4>>2]);ga=d+16|0}function Hj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=J[d+12>>2];ia[J[J[a>>2]+56>>2]](a,J[d+8>>2],H[d+7|0]&1);ga=d+16|0}function Fl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+16>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Cl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=J[d+12>>2];ia[J[J[a>>2]+20>>2]](a,J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ua(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];b=J[c+8>>2];return Q(Q(N[a+8>>2]*N[b+8>>2])+Q(Q(N[a>>2]*N[b>>2])+Q(N[a+4>>2]*N[b+4>>2])))}function oq(){var a=0,b=0,c=0,d=0;b=ua(4);a=ga-16|0;ga=a;J[a+12>>2]=b;c=ga-16|0;d=J[a+12>>2];J[c+12>>2]=d;J[J[c+12>>2]>>2]=5268;J[d>>2]=5168;ga=a+16|0;return b|0}function Ij(a,b,c,d){var e=0,f=0;e=J[a+4>>2];f=J[a>>2];a=0;a:{if(!c){break a}a=e>>8;if(!(e&1)){break a}a=J[a+J[c>>2]>>2]}ia[J[J[f>>2]+28>>2]](f,b,a+c|0,e&2?d:2)}function Dj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[7403]=J[a+8>>2];ga=c+16|0}function Cj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[7970]=J[a+8>>2];ga=c+16|0}function Bj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;b=J[c+8>>2];a=ga-16|0;J[a+12>>2]=J[c+12>>2];J[a+8>>2]=b;J[7969]=J[a+8>>2];ga=c+16|0}function OG(a){a=a|0;var b=0;J[a+12>>2]=9408;J[a>>2]=9380;b=J[a+60>>2];ia[J[J[b>>2]+20>>2]](b,J[a+76>>2]);b=J[a+60>>2];ia[J[J[b>>2]+16>>2]](b,J[a+76>>2]);ta(a)}function lt(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;N[(J[d+12>>2]+(J[d+8>>2]<<2)|0)+1340>>2]=N[d+4>>2];ga=d+16|0}function kt(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;N[(J[d+12>>2]+(J[d+8>>2]<<2)|0)+1364>>2]=N[d+4>>2];ga=d+16|0}function ht(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;N[(J[d+12>>2]+(J[d+8>>2]<<2)|0)+1316>>2]=N[d+4>>2];ga=d+16|0}function ep(a,b,c){a=Q(a);b=Q(b);c=Q(c);var d=0,e=0;d=ga-16|0;ga=d;N[d+12>>2]=a;N[d+8>>2]=b;N[d+4>>2]=c;e=ra(16);na(e,d+12|0,d+8|0,d+4|0);ga=d+16|0;return e|0}function Xx(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;ga=a;J[a+12>>2]=J[b+12>>2];c=J[a+12>>2];N[a+8>>2]=Xf(c);uj(c,a+8|0);ga=a+16|0;ga=b+16|0}function xF(a){a=a|0;var b=0;J[a>>2]=12196;if(K[a+61|0]){b=J[a+52>>2];ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}return a|0}function Nn(a,b,c,d){a=a|0;b=Q(b);c=Q(c);d=Q(d);var e=0;e=ga-16|0;ga=e;J[e+12>>2]=a;N[e+8>>2]=b;N[e+4>>2]=c;N[e>>2]=d;na(J[e+12>>2],e+8|0,e+4|0,e);ga=e+16|0}function iC(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+156>>2]=J[b>>2];J[a+160>>2]=c;c=J[b+12>>2];J[a+164>>2]=J[b+8>>2];J[a+168>>2]=c;ia[J[J[a>>2]+72>>2]](a)}function Mz(a){a=a|0;J[8148]=20740;a=J[8272];if(!(a?!a|!K[33092]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[33092]=1;J[8270]=0;J[8271]=0;J[8272]=0;J[8148]=6652}function BA(a){a=a|0;J[7990]=20740;a=J[8114];if(!(a?!a|!K[32460]:1)){J[8370]=J[8370]+1;ia[J[6783]](a)}H[32460]=1;J[8112]=0;J[8113]=0;J[8114]=0;J[7990]=6652}function wc(a){var b=0;b=ga-16|0;ga=b;N[b+12>>2]=a;if(N[b+12>>2]<Q(-1)){N[b+12>>2]=-1}if(N[b+12>>2]>Q(1)){N[b+12>>2]=1}a=qb(N[b+12>>2]);ga=b+16|0;return a}function tp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;a=mk(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0;return a|0}function dn(){var a=0;a=ua(8);J[8371]=a;aa(a|0,0)|0;J[8373]=0;J[8374]=0;J[8372]=2439;J[8375]=0;J[8376]=0;J[8377]=0;J[8378]=0;J[8379]=0;J[8380]=0;ne(33488)}function cb(a){var b=0,c=0;b=a*a;c=b*a;return Q(c*(b*b)*(b*2718311493989822e-21+-.00019839334836096632)+(c*(b*.008333329385889463+-.16666666641626524)+a))}function bA(a,b){a=a|0;b=b|0;var c=0;if(K[a+273|0]){c=J[a+200>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}}J[a+200>>2]=b;H[a+273|0]=0;J[J[a+196>>2]+8>>2]=b}function Wv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;a=Qe(J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0;return a|0}function Eb(a,b){var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=0;J[c+4>>2]=b;J[c>>2]=J[c+8>>2];while(1){if(J[c>>2]<J[c+4>>2]){J[c>>2]=J[c>>2]+1;continue}break}}function kq(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;c=J[b+12>>2];if(c){a=ga-16|0;ga=a;J[a+12>>2]=c;tc(J[a+12>>2]+56|0);ga=a+16|0;ta(c)}ga=b+16|0}function Eo(a){a=a|0;var b=0,c=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[b+8>>2]=28417;c=J[b+8>>2];J[b>>2]=a;a=ba(c|0,1298,b|0)|0;ga=b+16|0;return a|0}function wx(a){a=a|0;var b=0;b=ga-80|0;ga=b;J[b+76>>2]=a;if(!K[29236]){Pb(29172);H[29236]=1}a=b+8|0;rj(a,J[b+76>>2]);vb(29172,a);ga=b+80|0;return 29172}function cm(a){a=a|0;var b=Q(0),c=Q(0);b=N[a+28>>2];c=Q(ia[J[J[a>>2]+48>>2]](a));Q(ia[J[J[a>>2]+48>>2]](a));Q(ia[J[J[a>>2]+48>>2]](a));return Q(Q(b+c))}function aI(a,b,c){a=a|0;b=b|0;c=c|0;a:{if(!c){break a}a=J[b+8>>2];if(!a){break a}ia[J[J[a>>2]>>2]](a)|0;ia[J[J[c>>2]+60>>2]](c,J[b+8>>2]);J[b+8>>2]=0}}function XD(a){a=a|0;var b=Q(0),c=Q(0);b=N[a+32>>2];Q(ia[J[J[a>>2]+48>>2]](a));c=Q(ia[J[J[a>>2]+48>>2]](a));Q(ia[J[J[a>>2]+48>>2]](a));return Q(Q(b+c))}function Lh(a){var b=0;b=ga-16|0;J[b+12>>2]=a;a=J[b+12>>2];a:{if(N[a>>2]<N[a+4>>2]){a=N[a+4>>2]<N[a+8>>2]?2:1;break a}a=N[a>>2]<N[a+8>>2]?2:0}return a}function id(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+8>>2];b=J[c+12>>2];if((J[b+216>>2]&-2)!=4){J[b+216>>2]=a}ga=c+16|0}function Vk(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];a=ia[J[J[a>>2]+124>>2]](a,J[c+8>>2])|0;ga=c+16|0;return a|0}function wG(a){a=a|0;var b=0,c=0;J[a>>2]=10120;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function vk(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];a=ia[J[J[a>>2]+40>>2]](a,J[c+8>>2])|0;ga=c+16|0;return a|0}function tG(a){a=a|0;var b=0,c=0;J[a>>2]=10192;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function pw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];a=ia[J[J[a>>2]+92>>2]](a,J[c+8>>2])&1;ga=c+16|0;return a|0}function ms(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;J[b+12>>2]=a;c=N[J[b+12>>2]+48>>2];a:{if(Q(R(c))<Q(2147483648)){a=~~c;break a}a=-2147483648}return a|0}function kE(a,b){a=a|0;b=b|0;var c=0,d=0;d=J[b+4>>2];c=J[a+92>>2];J[c+4>>2]=J[b>>2];J[c+8>>2]=d;d=J[b+12>>2];J[c+12>>2]=J[b+8>>2];J[c+16>>2]=d;Sb(a)}function XG(a){a=a|0;var b=0,c=0;J[a>>2]=8776;a:{if(!K[a+16|0]){break a}b=J[a+20>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function Ve(a,b){a=a|0;b=b|0;var c=Q(0),d=Q(0),e=Q(0);c=N[b>>2];d=N[b+4>>2];e=N[b+8>>2];J[a+24>>2]=0;N[a+20>>2]=R(e);N[a+16>>2]=R(d);N[a+12>>2]=R(c)}function UF(a){a=a|0;var b=0,c=0;J[a>>2]=11584;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function RF(a){a=a|0;var b=0,c=0;J[a>>2]=11660;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}return a|0}function Qa(a){a=a|0;var b=0;J[a>>2]=15776;b=J[a+52>>2];if(b){ia[J[J[b>>2]>>2]](b)|0;b=J[a+52>>2];if(b){J[8370]=J[8370]+1;ia[J[6783]](b)}}return a|0}function MG(a){a=a|0;var b=0;J[a>>2]=9408;b=J[a+48>>2];ia[J[J[b>>2]+20>>2]](b,J[a+64>>2]);b=J[a+48>>2];ia[J[J[b>>2]+16>>2]](b,J[a+64>>2]);return a|0}function Eq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ga=c+16|0;return Q(N[(J[J[c+12>>2]+144>>2]+P(J[c+8>>2],284)|0)+232>>2])}function fy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(Ya(a,J[b+8>>2],f)){$f(b,c,d,e);return}a=J[a+8>>2];ia[J[J[a>>2]+20>>2]](a,b,c,d,e,f)}function $H(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=c;J[d+8>>2]=a;J[d+4>>2]=b;J[d>>2]=6124;ia[J[J[a>>2]+48>>2]](a,d,c);ga=d+16|0}function Lj(a){var b=0,c=0;c=a>>>23&255;b=0;a:{if(c>>>0<127){break a}b=2;if(c>>>0>150){break a}c=1<<150-c;b=0;if(c-1&a){break a}b=a&c?1:2}return b}function TH(a,b){a=a|0;b=b|0;var c=0;c=J[a+4>>2];if(!((c|0)!=J[b>>2]&(c|0)!=J[b+4>>2])){c=J[a+8>>2];ia[J[J[c>>2]+32>>2]](c,b,J[a+12>>2])}return 0}function ro(a,b){a=a|0;b=b|0;var c=0;c=ga-80|0;ga=c;J[c+76>>2]=a;J[c+72>>2]=b;a=c+8|0;b=J[c+76>>2];Td(a,J[c+72>>2],b+68|0);vb(b+4|0,a);ga=c+80|0}function Iu(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(116);Kd(a,J[c+12>>2],J[c+8>>2],16384,0,0);ga=c+16|0;return a|0}function zf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;Af(J[d+12>>2],J[d+8>>2],J[d+4>>2],0);ga=d+16|0}function vG(a){a=a|0;var b=0,c=0;J[a>>2]=10120;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function sG(a){a=a|0;var b=0,c=0;J[a>>2]=10192;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function cw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;lm(J[d+12>>2],J[d+8>>2],J[d+4>>2],1);ga=d+16|0}function bD(a,b,c){a=a|0;b=b|0;c=c|0;a=(b<<4)+a|0;b=J[a+108>>2];J[c+8>>2]=J[a+104>>2];J[c+12>>2]=b;b=J[a+100>>2];J[c>>2]=J[a+96>>2];J[c+4>>2]=b}function WG(a){a=a|0;var b=0,c=0;J[a>>2]=8776;a:{if(!K[a+16|0]){break a}b=J[a+20>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function TF(a){a=a|0;var b=0,c=0;J[a>>2]=11584;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function QF(a){a=a|0;var b=0,c=0;J[a>>2]=11660;a:{if(!K[a+8|0]){break a}b=J[a+12>>2];if(!b){break a}c=J[a+4>>2];ia[J[J[c>>2]+16>>2]](c,b)}ta(a)}function LG(a){a=a|0;var b=0;J[a>>2]=9408;b=J[a+48>>2];ia[J[J[b>>2]+20>>2]](b,J[a+64>>2]);b=J[a+48>>2];ia[J[J[b>>2]+16>>2]](b,J[a+64>>2]);ta(a)}function KH(a,b,c){a=a|0;b=b|0;c=c|0;a=0;b=J[b+204>>2];a:{if(b&4){break a}c=J[c+204>>2];if(c&4){break a}if(!(b&3)){return 1}a=!(c&3)}return a|0}function _q(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];b=N[c+8>>2];N[a+36>>2]=b;N[a+40>>2]=Ha(b);ga=c+16|0}function Xt(a,b,c){a=a|0;b=Q(b);c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;N[d+8>>2]=b;J[d+4>>2]=c;we(J[d+12>>2],N[d+8>>2],J[d+4>>2]);ga=d+16|0}function Ok(a){var b=0;b=J[a+12>>2];if(!(b?!b|!K[a+16|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}J[a+12>>2]=0;H[a+16|0]=1;J[a+4>>2]=0;J[a+8>>2]=0}function IH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;ga=e;J[e+8>>2]=a;J[e+4>>2]=c;J[e>>2]=6592;ia[J[J[b>>2]+48>>2]](b,e,d);ga=e+16|0}function uj(a,b){var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];N[c+4>>2]=Q(1)/N[J[c+8>>2]>>2];a=tj(a,c+4|0);ga=c+16|0;return a}function rw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;jm(J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0}function qv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;Lb(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0}function pv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;Wi(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0}function db(a){var b=0;a=a*a;b=a*a;return Q(a*b*(a*2439044879627741e-20+-.001388676377460993)+(b*.04166662332373906+(a*-.499999997251031+1)))}function Wy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,24)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=23016;return a|0}function Qq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;pg(J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0}function Nt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;ub(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Dp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;te(J[d+12>>2],J[d+8>>2],J[d+4>>2]);ga=d+16|0}function Cw(a,b,c){a=a|0;b=b|0;c=Q(c);var d=0;d=ga-16|0;J[d+12>>2]=a;J[d+8>>2]=b;N[d+4>>2]=c;N[(J[d+12>>2]+20|0)+(J[d+8>>2]<<2)>>2]=N[d+4>>2]}function Cq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=a;J[d+8>>2]=b;H[d+7|0]=c;og(J[d+12>>2],J[d+8>>2],H[d+7|0]&1);ga=d+16|0}function ol(a,b){var c=0,d=0;d=pl(a);c=J[a+288>>2];J[b+8>>2]=J[a+284>>2];J[b+12>>2]=c;c=J[a+280>>2];J[b>>2]=J[a+276>>2];J[b+4>>2]=c;return d}function kG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,8)|0;J[a>>2]=8624;J[a+4>>2]=J[b>>2];J[a>>2]=11244;return a|0}function JF(a,b,c){a=a|0;b=b|0;c=c|0;if(b>>>0<=5){J[c+12>>2]=0;a=b<<2;N[c+8>>2]=N[a+12004>>2];N[c+4>>2]=N[a+11980>>2];N[c>>2]=N[a+11956>>2]}}function iq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c;J[(J[d+12>>2]+8|0)+(J[d+8>>2]<<2)>>2]=J[d+4>>2]}function Rq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ga=c+16|0;return(J[J[c+12>>2]+144>>2]+P(J[c+8>>2],284)|0)+92|0}function tm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+36>>2]](a,J[c+8>>2],1,-1);ga=c+16|0}function qj(a){var b=0;b=ga-16|0;J[b+12>>2]=a;a=J[b+12>>2];J[a>>2]=1548;N[a+4>>2]=1;J[a+8>>2]=0;I[a+12>>1]=1;I[a+14>>1]=65535;J[a+16>>2]=0}function Aj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+36>>2]](a,J[c+8>>2],2,-3);ga=c+16|0}function rg(a){var b=0;b=ga-16|0;J[b+12>>2]=a;a=J[b+12>>2];J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=4096;J[a+12>>2]=4096;J[a+16>>2]=0;J[a+20>>2]=1}function Yj(a){J[a+12>>2]=1065353216;J[a+4>>2]=5;J[a+8>>2]=0;H[a+16|0]=1;H[a+36|0]=1;J[a>>2]=23088;J[a+32>>2]=0;J[a+24>>2]=0;J[a+28>>2]=0}function Rv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;a=ra(76);qm(a,J[c+12>>2],H[c+11|0]&1,1);ga=c+16|0;return a|0}function Zv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;H[c+15|0]=a;H[c+14|0]=b;a=ra(172);Ng(a,H[c+15|0]&1,H[c+14|0]&1);ga=c+16|0;return a|0}function Xs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(764);Xk(a,J[c+12>>2],J[c+8>>2],0);ga=c+16|0;return a|0}function _f(a,b,c,d,e,f){var g=0,h=0;g=J[a+4>>2];h=g>>8;a=J[a>>2];if(g&1){h=J[J[d>>2]+h>>2]}ia[J[J[a>>2]+20>>2]](a,b,c,d+h|0,g&2?e:2,f)}function Vq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;a=J[c+12>>2];ia[J[J[a>>2]+52>>2]](a,H[c+11|0]&1);ga=c+16|0}function Qi(a,b){var c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;J[c+24>>2]=b;a=c+8|0;b=J[c+28>>2];Kb(a,J[c+24>>2],b+544|0);jb(b+428|0,a);ga=c+32|0}function Pi(a,b){var c=0;c=ga-32|0;ga=c;J[c+28>>2]=a;J[c+24>>2]=b;a=c+8|0;b=J[c+28>>2];Kb(a,J[c+24>>2],b+348|0);jb(b+412|0,a);ga=c+32|0}function Ow(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;a=ra(96);gm(a,J[c+12>>2],H[c+11|0]&1);ga=c+16|0;return a|0}function Jj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+56>>2]](a,J[c+8>>2],0);ga=c+16|0}function zq(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+20>>2]](a,N[c+8>>2]);ga=c+16|0}function tw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(112);Xe(a,J[c+12>>2],J[c+8>>2]);ga=c+16|0;return a|0}function sx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(200);Uf(a,J[c+12>>2],J[c+8>>2]);ga=c+16|0;return a|0}function bv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=ra(212);Si(a,J[c+12>>2],J[c+8>>2]);ga=c+16|0;return a|0}function _c(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return(J[J[a+12>>2]+204>>2]&2)!=0|0}function Yc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return(J[J[a+12>>2]+204>>2]&3)!=0|0}function Wa(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+44>>2]](a,N[c+8>>2]);ga=c+16|0}function Gq(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+16>>2]](a,N[c+8>>2]);ga=c+16|0}function md(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+16>>2]](a,J[c+8>>2]);ga=c+16|0}function ir(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+28>>2]](a,J[c+8>>2]);ga=c+16|0}function ii(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+36>>2]](a,J[c+8>>2]);ga=c+16|0}function hr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+32>>2]](a,J[c+8>>2]);ga=c+16|0}function ai(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+44>>2]](a,J[c+8>>2]);ga=c+16|0}function _d(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+64>>2]](a,J[c+8>>2]);ga=c+16|0}function Zf(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+60>>2]](a,J[c+8>>2]);ga=c+16|0}function Zb(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+12>>2]](a,J[c+8>>2]);ga=c+16|0}function Yp(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];a=J[a+12>>2];J[a+4>>2]=J[a+4>>2]-1;ga=b+16|0}function Xj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+72>>2]](a,J[c+8>>2]);ga=c+16|0}function Pj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+84>>2]](a,J[c+8>>2]);ga=c+16|0}function Mq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ga=c+16|0;return J[J[c+12>>2]+144>>2]+P(J[c+8>>2],284)|0}function Kj(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+92>>2]](a,J[c+8>>2]);ga=c+16|0}function He(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+40>>2]](a,J[c+8>>2]);ga=c+16|0}function Fv(){var a=0,b=0,c=0;c=ra(160);a=ga-16|0;ga=a;J[a+12>>2]=c;b=J[a+12>>2];Se(b);J[b>>2]=4488;J[b+92>>2]=4;ga=a+16|0;return c|0}function Df(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+68>>2]](a,J[c+8>>2]);ga=c+16|0}function CE(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+12>>2]=J[b>>2];J[a+16>>2]=c;c=J[b+12>>2];J[a+20>>2]=J[b+8>>2];J[a+24>>2]=c;Sb(a)}function Ba(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+24>>2]](a,J[c+8>>2]);ga=c+16|0}function wt(){var a=0,b=0;b=ua(12);a=ga-16|0;J[a+12>>2]=b;a=J[a+12>>2];N[a>>2]=.30000001192092896;N[a+4>>2]=1;N[a+8>>2]=0;return b|0}function _m(a,b){a=a|0;b=b|0;var c=0,d=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;d=Ua(J[c+12>>2],J[c+8>>2]);ga=c+16|0;return Q(d)}function Ux(a,b){a=a|0;b=b|0;var c=0,d=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;d=ac(J[c+12>>2],J[c+8>>2]);ga=c+16|0;return Q(d)}function Hq(a,b){a=a|0;b=b|0;var c=0,d=Q(0);c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;d=rk(J[c+12>>2],J[c+8>>2]);ga=c+16|0;return Q(d)}function Bm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=J[c+12>>2];ia[J[J[a>>2]+8>>2]](a,J[c+8>>2]);ga=c+16|0}function pA(a,b){a=a|0;b=b|0;var c=0;c=J[b+252>>2];J[a>>2]=J[b+248>>2];J[a+4>>2]=c;c=J[b+260>>2];J[a+8>>2]=J[b+256>>2];J[a+12>>2]=c}function ke(a,b,c,d,e){var f=0,g=0;f=J[a+4>>2];g=f>>8;a=J[a>>2];if(f&1){g=J[J[c>>2]+g>>2]}ia[J[J[a>>2]+24>>2]](a,b,c+g|0,f&2?d:2,e)}function gi(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[(ga-16|0)+12>>2]=a+4;Qk(a+28|0);J[(ga-16|0)+12>>2]=a+76;ga=b+16|0}function fm(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return N[J[a+12>>2]+4>>2]<Q(1)|0}function dy(){var a=0;a=ra(284);Bd(a);H[a+280|0]=1;J[a>>2]=11304;J[a+276>>2]=0;J[a+268>>2]=0;J[a+272>>2]=0;J[a+236>>2]=4;return a|0}function Xf(a){var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=bc(J[b+12>>2]);a=ga-16|0;N[a+12>>2]=c;ga=b+16|0;return Q(Y(N[a+12>>2]))}function ND(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+108>>2]=J[b>>2];J[a+112>>2]=c;c=J[b+12>>2];J[a+116>>2]=J[b+8>>2];J[a+120>>2]=c}function Kw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(56);Tg(a,J[b+12>>2]);J[a+52>>2]=0;J[a>>2]=14736;ga=b+16|0;return a|0}function Jw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(56);Tg(a,J[b+12>>2]);J[a+52>>2]=2;J[a>>2]=14840;ga=b+16|0;return a|0}function Hs(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+1080>>2])}function Gs(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+1084>>2])}function up(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=mk(J[c+12>>2],J[c+8>>2],8192);ga=c+16|0;return a|0}function oz(a){a=a|0;if(!(H[33228]&1)){J[8305]=1065353216;J[8306]=0;J[8303]=1065353216;J[8304]=1065353216;H[33228]=1}return 33212}function ch(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+8>>2]!=0|0}function _t(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+444>>2])}function _H(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;ga=d;J[d+12>>2]=b;J[d+8>>2]=6296;ia[J[J[a>>2]+48>>2]](a,d+8|0,c);ga=d+16|0}function Zt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+448>>2])}function Xc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+228>>2])}function Wc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+224>>2])}function Vc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+232>>2])}function Jq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+112>>2])}function fh(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+12>>2])}function eo(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=b;N[c+8>>2]=1;N[c+4>>2]=1;N[c>>2]=1;na(a,c+8|0,c+4|0,c);ga=c+16|0}function Zc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+204>>2]&1}function Ib(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+16>>2])}function iD(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+68>>2]=J[b>>2];J[a+72>>2]=c;c=J[b+12>>2];J[a+76>>2]=J[b+8>>2];J[a+80>>2]=c}function Va(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];c=Q(ia[J[J[a>>2]+48>>2]](a));ga=b+16|0;return Q(c)}function VD(a,b){a=a|0;b=b|0;var c=0;c=J[b+4>>2];J[a+16>>2]=J[b>>2];J[a+20>>2]=c;c=J[b+12>>2];J[a+24>>2]=J[b+8>>2];J[a+28>>2]=c}function Ud(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+4>>2])}function Sd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]+8>>2])}function yq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+120>>2]}function xq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+124>>2]}function wq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+128>>2]}function rc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+188>>2]}function nb(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+240>>2]}function jd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+192>>2]}function fx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return+N[J[a+12>>2]+120>>2]}function _u(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+172>>2]}function Yu(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+144>>2]}function Rc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+204>>2]}function Ou(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+740>>2]}function Nu(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+744>>2]}function Nq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+116>>2]}function Mu(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+748>>2]}function Gt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+480>>2]}function Fn(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[J[b+12>>2]+4>>2];a=ia[J[J[a>>2]+88>>2]](a)|0;ga=b+16|0;return a|0}function ze(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+68>>2]}function uq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+84>>2]}function tv(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+40>>2]}function qx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+12>>2]}function qq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+88>>2]}function ly(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if(Ya(a,J[b+8>>2],0)){ag(b,c,d);return}a=J[a+8>>2];ia[J[J[a>>2]+28>>2]](a,b,c,d)}function ex(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return+N[J[a+12>>2]+80>>2]}function Zd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+24>>2]}function Wd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return Q(N[J[a+12>>2]>>2])}function Te(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+52>>2]}function px(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+8>>2]}function _a(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[J[a+12>>2]+4>>2]}function Tm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;a=jb(J[c+12>>2],J[c+8>>2]);ga=c+16|0;return a|0}function Ju(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+36>>2]](a)|0;ga=b+16|0;return Q(Q(a|0))}function ua(a){var b=0;a=a?a:1;a:{while(1){b=bg(a);if(b){break a}b=J[8511];if(b){ia[b|0]();continue}break}ca();Z()}return b}function Yi(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+144|0}\nfunction zt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+380|0}function rt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+300|0}function ra(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[8369]=J[8369]+1;a=ia[J[6782]](a,16)|0;ga=b+16|0;return a}function qt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+316|0}function Zo(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+352|0}function Yo(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+324|0}function Wt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+348|0}function Kt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+312|0}function Jt(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+328|0}function Et(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+544|0}function oe(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+48|0}function gx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+32|0}function df(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+28|0}function Ym(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=ih(J[c+12>>2],c+8|0);ga=c+16|0;return a|0}function Uv(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+20|0}function Kx(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=tj(J[c+12>>2],c+8|0);ga=c+16|0;return a|0}function Ix(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;a=uj(J[c+12>>2],c+8|0);ga=c+16|0;return a|0}function Cf(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+92|0}function sc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]+4|0}function Tv(){var a=0;a=ra(32);J[a+4>>2]=35;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=13324;J[a+4>>2]=27;J[a>>2]=15040;return a|0}function Dw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;return Q(N[(J[c+12>>2]+20|0)+(J[c+8>>2]<<2)>>2])}function CC(a,b){a=a|0;b=b|0;var c=0,d=0;c=J[a+4>>2];d=J[c>>2];ia[J[J[d>>2]+108>>2]](d,b,c+108|0);return J[a+4>>2]+108|0}function Fc(a,b){var c=0;Ed(a,b);c=J[a+4>>2];if(c){J[8370]=J[8370]+1;ia[J[6783]](c)}J[a+4>>2]=b;J[a+12>>2]=J[a+12>>2]-1}function Ey(a){a=a|0;var b=0;J[a>>2]=23088;b=J[a+32>>2];if(!(b?!b|!K[a+36|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function Ee(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+100>>2]](a)&1;ga=b+16|0;return a|0}function sd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+36>>2]](a)|0;ga=b+16|0;return a|0}function qw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+96>>2]](a)|0;ga=b+16|0;return a|0}function ql(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+80>>2]](a)|0;ga=b+16|0;return a|0}function nn(a){a=a|0;var b=0;J[a>>2]=5524;b=J[a+16>>2];if(!(b?!b|!K[a+20|0]:1)){J[8370]=J[8370]+1;ia[J[6783]](b)}ta(a)}function jl(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+84>>2]](a)|0;ga=b+16|0;return a|0}function hl(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+88>>2]](a)|0;ga=b+16|0;return a|0}function ge(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+20>>2]](a)|0;ga=b+16|0;return a|0}function el(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+92>>2]](a)&1;ga=b+16|0;return a|0}function cr(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+40>>2]](a)&1;ga=b+16|0;return a|0}function Wq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+48>>2]](a)&1;ga=b+16|0;return a|0}function Vu(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+52>>2]](a)|0;ga=b+16|0;return a|0}function Nd(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[(ga-16|0)+12>>2]=a;J[(ga-16|0)+12>>2]=a+16;ga=b+16|0}function Le(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+76>>2]](a)|0;ga=b+16|0;return a|0}function Hl(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+12>>2]](a)|0;ga=b+16|0;return a|0}function Ge(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+96>>2]](a)&1;ga=b+16|0;return a|0}function Aa(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+28>>2]](a)|0;ga=b+16|0;return a|0}function $h(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+48>>2]](a)|0;ga=b+16|0;return a|0}function hp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;uc(J[c+12>>2]+868|0,J[c+8>>2]);ga=c+16|0}function gd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+216>>2]=J[c+8>>2];ga=c+16|0}function fr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+24>>2]=N[c+8>>2];ga=c+16|0}function er(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+28>>2]=N[c+8>>2];ga=c+16|0}function dr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+32>>2]=N[c+8>>2];ga=c+16|0}function ar(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+44>>2]=N[c+8>>2];ga=c+16|0}function Kg(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];a=ia[J[J[a>>2]+8>>2]](a)&1;ga=b+16|0;return a|0}function CG(a,b){a=a|0;b=b|0;var c=0,d=0;c=a;d=J[J[J[a+4>>2]+4>>2]+24>>2];a=J[b+36>>2];Jm(c,J[(d+P(a,80)|0)+64>>2],a)}function yx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];ga=b+16|0;return J[a+12>>2]}function lx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;uc(J[c+12>>2]+20|0,J[c+8>>2]);ga=c+16|0}function kx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Pf(J[c+12>>2]+72|0,J[c+8>>2]);ga=c+16|0}function jx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Pf(J[c+12>>2]+92|0,J[c+8>>2]);ga=c+16|0}function jq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;return J[(J[c+12>>2]+8|0)+(J[c+8>>2]<<2)>>2]}function bq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;tg(J[c+12>>2]+28|0,J[c+8>>2]);ga=c+16|0}function Dr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;vb(J[c+12>>2]+92|0,J[c+8>>2]);ga=c+16|0}function DC(a,b){a=a|0;b=b|0;var c=0,d=0;c=J[a+4>>2];d=J[c>>2];ia[J[J[d>>2]+104>>2]](d,b,c+4|0);return J[a+4>>2]+4|0}function xw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Pf(J[c+12>>2]+4|0,J[c+8>>2]);ga=c+16|0}function rx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;vb(J[c+12>>2]+4|0,J[c+8>>2]);ga=c+16|0}function ne(a){var b=0;while(1){J[a+4>>2]=0;J[a+8>>2]=0;b=J[a+24>>2];if(b){ne(b)}a=J[a+28>>2];if(a){continue}break}}function Bf(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Af(J[c+12>>2],J[c+8>>2],0,0);ga=c+16|0}function Hy(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a=J[b+8>>2];b=J[a+284>>2];ia[J[J[b>>2]+40>>2]](b,a,J[c+8>>2])}function Gr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;sa(J[c+12>>2],J[c+8>>2],92);ga=c+16|0}function sw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;jm(J[c+12>>2],J[c+8>>2],1);ga=c+16|0}function ad(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;H[c+11|0]=b;kb(J[c+12>>2],H[c+11|0]&1);ga=c+16|0}function Dq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;og(J[c+12>>2],J[c+8>>2],1);ga=c+16|0}function Ec(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}ga=b+16|0}function yt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ue(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function yp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;mg(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function vh(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ga-16|0;J[a+12>>2]=J[b+12>>2];J[J[a+12>>2]>>2]=0;ga=b+16|0}function ie(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Wm(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function fw(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;km(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function au(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;wk(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Zp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;ei(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Ys(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;fl(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Vv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Re(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Uy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,156)|0;ck(a,b,c,d,0);return a|0}function Ty(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,156)|0;ck(a,b,c,d,1);return a|0}function Tt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Qi(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Qt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Pi(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Ot(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Oi(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Oa(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[(ga-16|0)+12>>2]=a;ga=b+16|0;return a|0}function Mt(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Ni(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Gx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Na(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Ew(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;uc(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function Bx(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;ga=c;J[c+12>>2]=a;J[c+8>>2]=b;Wf(J[c+12>>2],J[c+8>>2]);ga=c+16|0}function ty(a,b){a=a|0;b=b|0;var c=0;a=ia[J[6784]]((a+b|0)+3|0)|0;if(a){c=(a+b|0)+3&0-b;J[c-4>>2]=a}return c|0}function pG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,80)|0;Nm(a,b,c,d,0);return a|0}function om(a,b){a=a|0;b=b|0;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0;J[a+(J[b+52>>2]<<2)>>2]=1065353216}function oG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,80)|0;Nm(a,b,c,d,1);return a|0}function nG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,44)|0;Lm(a,b,c,d,0);return a|0}function lG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=J[b>>2];a=ia[J[J[a>>2]+56>>2]](a,44)|0;Lm(a,b,c,d,1);return a|0}function tx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(200);Uf(a,J[b+12>>2],bb());ga=b+16|0;return a|0}function kf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ga-16|0;J[e+12>>2]=a;J[e+8>>2]=b;J[e+4>>2]=c;J[e>>2]=d}function Ml(a,b,c,d,e){var f=0;f=J[a+32>>2];J[f>>2]=J[f>>2]+1;Re(a,Qe(a,b,e));Re(a,Qe(a,c,e));Re(a,Qe(a,d,e))}function oa(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){ia[J[J[a>>2]+4>>2]](a)}ga=b+16|0}function Kc(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){ia[J[J[a>>2]+8>>2]](a)}ga=b+16|0}function Yd(a){var b=0;b=ga-16|0;J[b+12>>2]=a;a=J[b+12>>2];H[a+16|0]=1;J[a+12>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0}function uw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(112);Xe(a,J[b+12>>2],0);ga=b+16|0;return a|0}function _v(a){a=a|0;var b=0;b=ga-16|0;ga=b;H[b+15|0]=a;a=ra(172);Ng(a,H[b+15|0]&1,1);ga=b+16|0;return a|0}function Pw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(96);gm(a,J[b+12>>2],1);ga=b+16|0;return a|0}function cp(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ua(112);$j(a,J[b+12>>2]);ga=b+16|0;return a|0}function Cv(a){a=a|0;var b=0;b=ga-16|0;ga=b;H[b+15|0]=a;a=ra(192);Zi(a,H[b+15|0]&1);ga=b+16|0;return a|0}function za(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=b;J[d+8>>2]=c;wb(a,J[d+12>>2],J[d+8>>2]);ga=d+16|0}function xr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+236>>2]=N[c+8>>2]}function vr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+240>>2]=N[c+8>>2]}function uu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+100>>2]=N[c+8>>2]}function tr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+256>>2]=N[c+8>>2]}function su(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+104>>2]=N[c+8>>2]}function rr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+268>>2]=N[c+8>>2]}function qu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+108>>2]=N[c+8>>2]}function pr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+272>>2]=N[c+8>>2]}function ou(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+112>>2]=N[c+8>>2]}function ns(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;J[J[c+12>>2]+44>>2]=H[c+11|0]&1}function nr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+280>>2]=N[c+8>>2]}function mu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+116>>2]=N[c+8>>2]}function ku(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+120|0]=H[c+11|0]&1}function iu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+124>>2]=N[c+8>>2]}function hw(a){a=a|0;var b=0;b=ga-16|0;ga=b;H[b+15|0]=a;a=ra(92);mm(a,H[b+15|0]&1);ga=b+16|0;return a|0}function gu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+128>>2]=N[c+8>>2]}function fe(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];ia[J[J[a>>2]+24>>2]](a);ga=b+16|0}function eu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+132>>2]=N[c+8>>2]}function cu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+136>>2]=N[c+8>>2]}function br(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];ia[J[J[a>>2]+44>>2]](a);ga=b+16|0}function as(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+216>>2]=N[c+8>>2]}function _l(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;I[c+10>>1]=b;I[J[c+12>>2]+10>>1]=L[c+10>>1]}function _C(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ra(56);Tg(a,J[b+12>>2]);ga=b+16|0;return a|0}function Zr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+252>>2]=N[c+8>>2]}function Zg(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;I[c+10>>1]=b;I[J[c+12>>2]+12>>1]=L[c+10>>1]}function Xr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+244>>2]=N[c+8>>2]}function Xb(a,b,c){var d=0;d=ga-16|0;ga=d;J[d+12>>2]=b;J[d+8>>2]=c;Ia(a,J[d+8>>2],J[d+12>>2]);ga=d+16|0}function Wg(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;I[c+10>>1]=b;I[J[c+12>>2]+14>>1]=L[c+10>>1]}function Vz(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=ua(92);eh(a,J[b+12>>2]);ga=b+16|0;return a|0}function Vr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+204>>2]=N[c+8>>2]}function Tr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+212>>2]=N[c+8>>2]}function Rr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+220>>2]=N[c+8>>2]}function Qr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+224>>2]=N[c+8>>2]}function Pr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+232>>2]=N[c+8>>2]}function Pb(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Qk(a);J[(ga-16|0)+12>>2]=a+48;ga=b+16|0}function Nr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+248>>2]=N[c+8>>2]}function Ne(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];ia[J[J[a>>2]+72>>2]](a);ga=b+16|0}function Lr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+208>>2]=N[c+8>>2]}function Jr(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+276>>2]=N[c+8>>2]}function Hr(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+260|0]=H[c+11|0]&1}function $r(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+228>>2]=N[c+8>>2]}function yi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+52>>2]=N[c+8>>2]}function xs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+16|0]=H[c+11|0]&1}function wu(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+96>>2]=N[c+8>>2]}function wi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+56>>2]=N[c+8>>2]}function vs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+24|0]=H[c+11|0]&1}function ui(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+60>>2]=N[c+8>>2]}function ts(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+25|0]=H[c+11|0]&1}function si(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+64>>2]=N[c+8>>2]}function rs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+26|0]=H[c+11|0]&1}function qi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+68>>2]=N[c+8>>2]}function ps(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+32|0]=H[c+11|0]&1}function oi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+72>>2]=N[c+8>>2]}function mi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+76>>2]=N[c+8>>2]}function hs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+84|0]=H[c+11|0]&1}function hi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+24>>2]=N[c+8>>2]}function fs(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;H[c+11|0]=b;H[J[c+12>>2]+80|0]=H[c+11|0]&1}function eq(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+88>>2]=N[c+8>>2]}function bm(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;I[c+10>>1]=b;I[J[c+12>>2]+8>>1]=L[c+10>>1]}function bj(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+40>>2]=N[c+8>>2]}function bi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+44>>2]=N[c+8>>2]}function Yh(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=sf(J[b+12>>2]);ga=b+16|0;return Q(c)}function Xp(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+80>>2]=N[c+8>>2]}function Wx(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=bc(J[b+12>>2]);ga=b+16|0;return Q(c)}function Vx(a){a=a|0;var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;c=Xf(J[b+12>>2]);ga=b+16|0;return Q(c)}function Uu(){var a=0,b=0;b=ua(8);a=ga-16|0;J[a+12>>2]=b;a=J[a+12>>2];J[a>>2]=0;J[a+4>>2]=0;return b|0}function Qp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+100>>2]=J[c+8>>2]}function Ki(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+28>>2]=N[c+8>>2]}function Jf(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+92>>2]=N[c+8>>2]}function Jc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+12>>2]=N[c+8>>2]}function Hi(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+16>>2]=N[c+8>>2]}function Gf(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+36>>2]=N[c+8>>2]}function Ei(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+20>>2]=N[c+8>>2]}function Ef(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+32>>2]=N[c+8>>2]}function Ai(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+48>>2]=N[c+8>>2]}function $w(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+112>>2]=J[c+8>>2]}function nv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+28>>2]=J[c+8>>2]}function lv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+40>>2]=J[c+8>>2]}function ls(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;N[J[c+12>>2]+48>>2]=J[c+8>>2]}function lq(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+36>>2]=J[c+8>>2]}function jv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+44>>2]=J[c+8>>2]}function hv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+48>>2]=J[c+8>>2]}function gb(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+4>>2]=N[c+8>>2]}function fv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+56>>2]=J[c+8>>2]}function ev(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+60>>2]=J[c+8>>2]}function cv(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+64>>2]=J[c+8>>2]}function Ww(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+76>>2]=J[c+8>>2]}function Wp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+84>>2]=J[c+8>>2]}function We(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+16>>2]=J[c+8>>2]}function Up(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+92>>2]=J[c+8>>2]}function Ui(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+32>>2]=J[c+8>>2]}function Sp(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+96>>2]=J[c+8>>2]}function Mc(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]+8>>2]=N[c+8>>2]}function Ii(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+20>>2]=J[c+8>>2]}function Ci(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+88>>2]=J[c+8>>2]}function wd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+8>>2]=J[c+8>>2]}function cd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]+4>>2]=J[c+8>>2]}function Mb(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];J[(ga-16|0)+12>>2]=a;Yd(a);ga=b+16|0}function Cu(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;I[J[c+12>>2]+4>>1]=J[c+8>>2]}function Au(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;I[J[c+12>>2]+6>>1]=J[c+8>>2]}function bc(a){var b=0,c=Q(0);b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];c=ac(a,a);ga=b+16|0;return c}function $d(a,b){a=a|0;b=Q(b);var c=0;c=ga-16|0;J[c+12>>2]=a;N[c+8>>2]=b;N[J[c+12>>2]>>2]=N[c+8>>2]}function qp(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return Q(N[J[b+12>>2]+1228>>2])}function dd(a,b){a=a|0;b=b|0;var c=0;c=ga-16|0;J[c+12>>2]=a;J[c+8>>2]=b;J[J[c+12>>2]>>2]=J[c+8>>2]}function Iq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return J[J[b+12>>2]+116>>2]+4|0}function pb(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){ob(a);ta(a)}ga=b+16|0}function ds(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return Q(N[J[b+12>>2]+204>>2])}function dp(){var a=0,b=0,c=0;a=ga-32|0;ga=a;b=ua(112);c=a+8|0;rg(c);$j(b,c);ga=a+32|0;return b|0}function Bw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){tc(a);ta(a)}ga=b+16|0}function of(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];nf(a);ga=b+16|0;return a|0}function nf(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Qa(a);ga=b+16|0;return a|0}function hA(){var a=0,b=0,c=0;a=ga-32|0;ga=a;b=ua(92);c=a+8|0;rg(c);eh(b,c);ga=a+32|0;return b|0}function Zq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return Q(N[J[b+12>>2]+36>>2])}function Ih(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];of(a);ga=b+16|0;return a|0}function Hk(a,b){a=a|0;b=b|0;if(!(!b|!(J[b+236>>2]&2))){ia[J[J[a>>2]+92>>2]](a,b);return}Ad(a,b)}function $q(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return Q(N[J[b+12>>2]+44>>2])}function ey(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;if(Ya(a,J[b+8>>2],f)){$f(b,c,d,e)}}function Lp(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=qk(J[b+12>>2]);ga=b+16|0;return a|0}function lw(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return J[J[b+12>>2]+4>>2]}function Yq(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ga=b+16|0;return J[J[b+12>>2]+8>>2]}function zd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){Ec(a)}ga=b+16|0}function to(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Oa(a);Ec(a);ga=b+16|0}function oo(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Vh(a);ta(a);ga=b+16|0}function lf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ga-16|0;J[d+12>>2]=a;J[d+8>>2]=b;J[d+4>>2]=c}function io(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];of(a);Ec(a);ga=b+16|0}function dD(a){a=a|0;a=J[a+92>>2]-2|0;if(a>>>0<=2){a=J[(a<<2)+16532>>2]}else{a=0}return a|0}function Yb(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Oa(a);ta(a);ga=b+16|0}function Tn(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];nf(a);Ec(a);ga=b+16|0}function Rn(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];Ih(a);Ec(a);ga=b+16|0}function Py(a,b){a=a|0;b=Q(b);Ck(a,b);ya(2310);a=J[a+452>>2];ia[J[J[a>>2]+24>>2]](a,b);xa()}function Fa(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;a=J[b+12>>2];if(a){ta(a)}ga=b+16|0}function DB(a,b,c){a=a|0;b=b|0;c=Q(c);ia[J[J[a>>2]+32>>2]](a,b);ia[J[J[a>>2]+36>>2]](a,b,c)}function CH(a,b){a=a|0;b=b|0;var c=0;c=b;b=J[a+8>>2];ia[J[b+60>>2]](c,b,J[a+4>>2]);return 0}function uH(a){a=a|0;var b=0;ya(2563);b=J[a+68>>2];ia[J[J[b>>2]+32>>2]](b,J[a+24>>2]);xa()}function kb(a,b){if(K[a+204|0]&3?b:1){if((J[a+216>>2]&-2)!=4){J[a+216>>2]=1}J[a+220>>2]=0}}function dg(a){var b=0;b=J[a+24>>2];if(b){ta(dg(b))}b=J[a+28>>2];if(b){ta(dg(b))}return a}function vl(a,b,c,d,e){if(wl(a,29448,b,c,d,e)){a=1}else{a=Eg(a,29448,b,c,d,e,0)}return a}function gm(a,b,c){var d=0;d=Qg(a);J[a+92>>2]=b;J[a>>2]=14396;J[a+4>>2]=3;if(c){Sb(d)}}function Ta(a){var b=0;b=ga-16|0;ga=b;N[b+12>>2]=a;a=Ha(N[b+12>>2]);ga=b+16|0;return a}function Sa(a){var b=0;b=ga-16|0;ga=b;N[b+12>>2]=a;a=Ga(N[b+12>>2]);ga=b+16|0;return a}function GB(a){a=a|0;if(ia[J[J[a>>2]+40>>2]](a)|0){H[a+169|0]=1;N[a+16>>2]=N[a+28>>2]}}function Ez(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;J[a+128>>2]=d;J[a+124>>2]=c;J[a+120>>2]=b}function qH(a,b){a=a|0;b=b|0;ia[J[J[b>>2]+32>>2]](b);gh(a,b);ia[J[J[b>>2]+36>>2]](b)}function Rg(a,b,c){a=a|0;b=Q(b);c=c|0;J[c>>2]=0;J[c+4>>2]=0;J[c+8>>2]=0;J[c+12>>2]=0}function IE(a,b){a=a|0;b=b|0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=1065353216}function FE(a,b){a=a|0;b=b|0;J[a+8>>2]=1065353216;J[a+12>>2]=0;J[a>>2]=0;J[a+4>>2]=0}function DE(a,b){a=a|0;b=b|0;J[a+8>>2]=0;J[a+12>>2]=0;J[a>>2]=1065353216;J[a+4>>2]=0}function qD(a,b,c){a=a|0;b=b|0;c=c|0;J[a>>2]=0;J[a+4>>2]=0;J[a+8>>2]=0;J[a+12>>2]=0}function os(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+44>>2]!=0|0}function bd(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;kb(J[b+12>>2],0);ga=b+16|0}function yr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+236>>2])}function yH(a,b){a=a|0;b=b|0;J[a+200>>2]=b;J[a+192>>2]=b;J[a+260>>2]=J[a+260>>2]+1}function wr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+240>>2])}function vu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+100>>2])}function ur(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+256>>2])}function tu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+104>>2])}function sr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+268>>2])}function ru(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+108>>2])}function qr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+272>>2])}function pu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+112>>2])}function or(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+280>>2])}function nu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+116>>2])}function mv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+232>>2])}function ju(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+124>>2])}function hu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+128>>2])}function fu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+132>>2])}function du(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+136>>2])}function bs(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+216>>2])}function _r(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+252>>2])}function Yr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+244>>2])}function Wr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+204>>2])}function Ur(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+212>>2])}function Sr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+220>>2])}function Pv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+228>>2])}function Or(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+248>>2])}function Mr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+208>>2])}function Kr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+276>>2])}function EC(a,b){a=a|0;b=b|0;a=J[J[a+4>>2]>>2];return ia[J[J[a>>2]+128>>2]](a,b)|0}function Bv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+224>>2])}function zi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+52>>2])}function xu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+96>>2])}function xi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+56>>2])}function vi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+60>>2])}function ti(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+64>>2])}function ri(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+68>>2])}function qc(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+12>>2])}function pi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+72>>2])}function ow(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;Sb(J[b+12>>2]);ga=b+16|0}function ni(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+76>>2])}function ji(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+24>>2])}function fq(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+88>>2])}function dx(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+80>>2])}function cj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+40>>2])}function ci(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+44>>2])}function YG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=a-4|0;ia[J[J[a>>2]+8>>2]](a,b,c,d)}function Mv(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;$i(J[b+12>>2]);ga=b+16|0}function Li(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+28>>2])}function Kf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+92>>2])}function Hf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+36>>2])}function Gi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+16>>2])}function Fi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+20>>2])}function Ff(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+32>>2])}function Eh(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;Ld(J[b+12>>2]);ga=b+16|0}function Cx(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;de(J[b+12>>2]);ga=b+16|0}function Bi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+48>>2])}function At(a){a=a|0;var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;yk(J[b+12>>2]);ga=b+16|0}function lu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+120|0]&1}function hb(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+4>>2])}function Nc(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]+8>>2])}function Ir(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+260|0]&1}function ys(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+16|0]&1}function ws(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+24|0]&1}function us(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+25|0]&1}function ss(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+26|0]&1}function qs(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+32|0]&1}function is(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+84|0]&1}function gs(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return H[J[b+12>>2]+80|0]&1}function ax(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+112>>2]}function Rp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+100>>2]}function tq(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+84>>2]}function sv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+40>>2]}function ov(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+28>>2]}function mq(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+36>>2]}function kv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+44>>2]}function iv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+48>>2]}function gv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+56>>2]}function dv(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+64>>2]}function ae(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return Q(N[J[b+12>>2]>>2])}function Ye(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+16>>2]}function Xw(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+76>>2]}function Xg(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+14>>1]}function Vp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+92>>2]}function Vi(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+32>>2]}function Tp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+96>>2]}function Ti(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+60>>2]}function SH(a,b){a=a|0;b=b|0;a=J[a+4>>2];return(a|0)==J[b>>2]|(a|0)==J[b+4>>2]}function Ji(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+20>>2]}function Di(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+88>>2]}function $l(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+10>>1]}function $g(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+12>>1]}function xd(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+8>>2]}function nd(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]+4>>2]}function my(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if(Ya(a,J[b+8>>2],0)){ag(b,c,d)}}function dm(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+8>>1]}function Du(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+4>>1]}function Bu(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return I[J[b+12>>2]+6>>1]}function cx(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]- -64|0}function bn(a,b){a=a|0;b=b|0;a=J[a+4>>2];ia[J[J[a>>2]+8>>2]](a,J[b+36>>2])|0}function wf(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;Mb(J[b+12>>2]);ga=b+16|0}function tc(a){var b=0;b=ga-16|0;ga=b;J[b+12>>2]=a;ob(J[b+12>>2]);ga=b+16|0}function op(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+288|0}function mp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+708|0}function mH(a,b){a=a|0;b=b|0;a=J[a+20>>2];return ia[J[J[a>>2]+8>>2]](a,b)|0}function kp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+748|0}function ix(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+112|0}function ip(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+868|0}function iH(a,b){a=a|0;b=b|0;a=J[a+12>>2];return ia[J[J[a>>2]+8>>2]](a,b)|0}function gp(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+788|0}function ed(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[J[b+12>>2]>>2]}function Vt(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+348|0}function Fr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+156|0}function Cr(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+172|0}function Ar(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+188|0}function oj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+36|0}function lj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+68|0}function li(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+92|0}function kI(a){var b=0;b=a&31;a=0-a&31;return(-1>>>b&-2)<<b|(-1<<a&-2)>>>a}function jj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+56|0}function hj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+72|0}function hd(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+16|0}function gj(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+32|0}function gc(a){a=a|0;J[a>>2]=20112;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function aq(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+76|0}function Tw(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+44|0}function Tf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+20|0}function Sf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+52|0}function Rw(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+60|0}function Rf(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+40|0}function RD(a){a=a|0;J[a>>2]=15144;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Qy(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+48|0}function Pm(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+28|0}function Of(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+24|0}function LE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ia[J[J[a>>2]+80>>2]](a,b,c,d)}function Gm(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+12|0}function Ph(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+8|0}function If(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]+4|0}function AH(a){a=a|0;J[a>>2]=6652;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function $G(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ia[J[J[a>>2]+8>>2]](a,b,c,d)}function eI(a,b){a=a|0;b=b|0;ia[J[J[a>>2]+8>>2]](a,b,J[J[a+8>>2]+48>>2])}function In(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;H[J[b+12>>2]+48|0]=1}function dF(a,b){a=a|0;b=Q(b);return Q(Q(Q(ia[J[J[a>>2]+16>>2]](a))*b))}function pD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((d|0)>0){qa(c,0,d<<4)}}function Xa(a){a=a|0;var b=0;b=ga-16|0;J[b+12>>2]=a;return J[b+12>>2]}function xD(a){a=a|0;a=Wl(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function wA(a){a=a|0;a=sg(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function rC(a){a=a|0;a=Gl(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function pn(a){a=a|0;a=hf(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function aD(a){a=a|0;a=J[a+92>>2];return((a|0)==4?4:((a|0)==3)<<1)|0}function Ry(a){a=a|0;a=Zj(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function RC(a){a=a|0;a=Ll(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function RA(a){a=a|0;a=Uk(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Cz(a){a=a|0;a=pk(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function BF(a){a=a|0;a=_e(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function $B(a){a=a|0;a=Bl(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function yG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Q(Q(0))}function fC(a,b){a=a|0;b=Q(b);N[a+148>>2]=b;ia[J[J[a>>2]+72>>2]](a)}function WA(a,b){a=a|0;b=b|0;a=K[a+344|0]?0:3;J[b+4>>2]=a;J[b>>2]=a}function Tb(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Q(Q(1))}function zn(a){a=a|0;hf(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function bh(a){a=a|0;Qa(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function CD(a){a=a|0;_e(a);if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function BD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return sm(a,b,c,d)|0}function oF(a,b,c){a=a|0;b=b|0;c=c|0;ia[J[J[b>>2]+68>>2]](a,b,c)}function hz(a,b,c){a=a|0;b=b|0;c=c|0;ia[J[J[b>>2]+64>>2]](a,b,c)}function dI(a,b,c){a=a|0;b=b|0;c=Q(c);ia[J[J[a>>2]+12>>2]](a,b)}function Fz(a,b,c){a=a|0;b=b|0;c=Q(c);ia[J[J[a>>2]+16>>2]](a,c)}function zp(){var a=0;a=ra(16);J[(ga-16|0)+12>>2]=a;return a|0}function dH(a,b,c){a=a|0;b=b|0;c=c|0;J[a+24>>2]=c;J[a+16>>2]=b}function cH(a,b,c){a=a|0;b=b|0;c=c|0;J[a+28>>2]=c;J[a+20>>2]=b}function FB(a){a=a|0;return N[a+16>>2]==Q(0)&N[a+20>>2]==Q(0)}function Ra(a){a=a|0;if(a){J[8370]=J[8370]+1;ia[J[6783]](a)}}function Dl(a,b){a=a|0;b=b|0;return J[J[a+184>>2]+(b<<2)>>2]}function Bk(a,b){a=a|0;b=b|0;return J[J[a+220>>2]+(b<<2)>>2]}function Se(a){Qg(a);J[a+92>>2]=0;J[a>>2]=16372;J[a+4>>2]=2}function EH(a,b){a=a|0;b=b|0;return J[J[a+20>>2]+(b<<2)>>2]}function ux(){var a=0;a=ra(200);Uf(a,bb(),bb());return a|0}function jz(a){a=a|0;return Q(Q(ia[J[J[a>>2]+48>>2]](a)))}function oA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;jh(a,b,c,d)}function eD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Sl(a,b,c,d)}function dz(a){a=a|0;J[a>>2]=21896;pe(a+12|0);return a|0}function lD(a){a=a|0;return Q(Q(N[a+28>>2]*N[a+12>>2]))}function Gk(a,b){a=a|0;b=b|0;ia[J[J[a>>2]+64>>2]](a,b)}function Fk(a,b){a=a|0;b=b|0;ia[J[J[a>>2]+68>>2]](a,b)}function DH(a){a=a|0;return(J[a+12>>2]?J[a+20>>2]:0)|0}function uB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=Q(e)}function mn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return 0}function fo(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 3151}function Qn(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 4288}function HB(a){a=a|0;return ia[J[J[a>>2]+48>>2]](a)|0}function vw(){var a=0;a=ra(112);Xe(a,0,0);return a|0}function cC(a,b,c){a=a|0;b=b|0;c=c|0;Wi(a+144|0,b,c)}function Cm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0}function $v(){var a=0;a=ra(172);Ng(a,1,1);return a|0}function oB(a,b,c){a=a|0;b=b|0;c=c|0;return Q(Q(0))}function cz(a){a=a|0;J[a>>2]=21896;pe(a+12|0);ta(a)}function co(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 52}function Kn(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 12}function Hn(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 25}function yg(a){pd(a,J[a+28>>2]+4|0,J[a+32>>2]+4|0)}function uy(a){a=a|0;if(a){ia[J[6785]](J[a-4>>2])}}function rB(a,b){a=a|0;b=b|0;J[b>>2]=6;J[b+4>>2]=6}function _n(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 2}function Kh(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 3}function Jh(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 1}function Hh(a){a=a|0;J[(ga-16|0)+12>>2]=a;return 0}function Eu(){var a=0;a=ua(196);ph(a,0);return a|0}function Dv(){var a=0;a=ra(192);Zi(a,1);return a|0}function iw(){var a=0;a=ra(92);mm(a,1);return a|0}function ve(a,b,c){Rb(a+4|0,a+312|0,a+328|0,b,c)}function gt(){var a=0;a=ra(196);Wk(a);return a|0}function xv(){var a=0;a=ua(68);Xi(a);return a|0}function by(){var a=0;a=ra(16);Oa(a);return a|0}function bp(){var a=0;a=ua(40);Yj(a);return a|0}function Qu(){var a=0;a=ua(24);rg(a);return a|0}function Jv(){var a=0;a=ua(72);_i(a);return a|0}function Ex(){var a=0;a=ua(64);Pb(a);return a|0}function Ug(a,b,c){a=a|0;b=b|0;c=Q(c);return 0}function tb(a){a=a|0;J[(ga-16|0)+12>>2]=a;Z()}function rh(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function pB(a,b,c,d){a=a|0;b=b|0;c=Q(c);d=d|0}function dl(a){a=a|0;J[a>>2]=20112;return a|0}function SD(a){a=a|0;J[a>>2]=15144;return a|0}function Om(a,b,c,d){a=a|0;b=b|0;c=c|0;d=Q(d)}function zy(a,b,c){a=a|0;b=b|0;c=c|0;fk(b,c)}function oC(a){a=a|0;return J[a+156>>2]!=0|0}function Cb(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0}function BH(a){a=a|0;J[a>>2]=6652;return a|0}function qy(a){a=a|0;a=J[8371];if(a){ta(a)}}function XC(a){a=a|0;return J[a+48>>2]==1|0}function pF(a,b){a=a|0;b=Q(b);N[a+12>>2]=b}function jE(a){a=a|0;return J[a+92>>2]+4|0}function eC(a){a=a|0;return Q(N[a+148>>2])}function SE(a,b){a=a|0;b=Q(b);N[a+72>>2]=b}function Ql(a,b){a=a|0;b=Q(b);N[a+44>>2]=b}function OC(a){a=a|0;return J[a+48>>2]+4|0}function UH(a,b){a=a|0;b=b|0;J[a+24>>2]=b}function RE(a){a=a|0;return Q(N[a+72>>2])}function Fh(a){a=a|0;J[(ga-16|0)+12>>2]=a}function EB(a,b){a=a|0;b=b|0;H[a+180|0]=b}function $m(a,b){a=a|0;b=b|0;J[a+72>>2]=b}function wy(a,b){a=a|0;b=b|0;J[a+4>>2]=b}function vy(a,b){a=a|0;b=b|0;J[a+8>>2]=b}function pC(a){a=a|0;return J[a+176>>2]}function dC(a){a=a|0;return J[a+204>>2]}function cn(a){a=a|0;return J[a+136>>2]}function aA(a){a=a|0;return J[a+200>>2]}function $z(a){a=a|0;return J[a+212>>2]}function pH(a){a=a|0;return J[a+72>>2]}function kc(a){a=a|0;return J[a+16>>2]}function im(a){a=a|0;return J[a+96>>2]}function gf(a){a=a|0;return J[a+92>>2]}function Zm(a){a=a|0;return J[a+68>>2]}function FH(a){a=a|0;return J[a+12>>2]}function Dm(a){a=a|0;return J[a+24>>2]}function vd(a,b){a=a|0;b=b|0;return 0}function rD(a){a=a|0;return J[a+4>>2]}function nh(a,b){a=a|0;b=b|0;return 1}function lh(a){a=a|0;return J[a+8>>2]}function Sg(a,b,c){a=a|0;b=Q(b);c=c|0}function DD(a){a=a|0;_e(a);return a|0}function Da(a,b,c){a=a|0;b=b|0;c=c|0}function sy(a){a=a|0;return bg(a)|0}function hC(a){a=a|0;return a+156|0}function MD(a){a=a|0;return a+108|0}function El(a){a=a|0;return a+144|0}function hD(a){a=a|0;return a+68|0}function UE(a){a=a|0;return a+76|0}function UD(a){a=a|0;return a+16|0}function IA(a){a=a|0;J[a+192>>2]=0}function qh(a){a=a|0;return a+4|0}function _G(a){a=a|0;return a-4|0}function tE(a){a=a|0;return 2348}function qF(a){a=a|0;return 4241}function qC(a){a=a|0;return 3160}function nz(a){a=a|0;return 2335}function mD(a){a=a|0;return 4257}function kz(a){a=a|0;return 4229}function iF(a){a=a|0;return 3133}function iE(a){a=a|0;return 3053}function gF(a){a=a|0;return 4220}function gD(a){a=a|0;return 4264}function gC(a){a=a|0;return 2418}function fF(a){a=a|0;return 4185}function ZB(a){a=a|0;return 3067}function YD(a){a=a|0;return 4204}function WD(a){a=a|0;return 4169}function TE(a){a=a|0;return 3187}function TD(a){a=a|0;return 2304}function NF(a){a=a|0;return 2344}function LD(a){a=a|0;return 4276}function LC(a){a=a|0;return 4244}function JE(a){a=a|0;return 3146}function GE(a){a=a|0;return 4179}function EE(a){a=a|0;return 4214}function ED(a){a=a|0;return 3121}function $D(a){a=a|0;return 4194}function xH(a){a=a|0;return 256}function tB(a){a=a|0;return 212}function sz(a){a=a|0;return 428}function lI(a,b){ha=a;return b}\nfunction iB(a){a=a|0;return 252}function eB(a){a=a|0;return 348}function ZA(a){a=a|0;return 220}function Rz(a){a=a|0;return 488}function DA(a){a=a|0;return 204}function Ca(a){a=a|0;return a|0}function sE(a){a=a|0;return 68}function rm(a){a=a|0;return 84}function qG(a){a=a|0;ta(af(a))}function py(a){a=a|0;dg(33488)}function gz(a){a=a|0;return 32}function bz(a){a=a|0;ta(pe(a))}function Zl(a){a=a|0;return 64}function Ze(a){a=a|0;return 60}function ZG(a){a=a|0;ta(a-4|0)}function QE(a){a=a|0;return 24}function QC(a){a=a|0;return 28}function Pl(a){a=a|0;return 52}function Kz(a){a=a|0;ta(sk(a))}function HF(a){a=a|0;return 12}function BG(a){a=a|0;ta(Im(a))}function xm(a){a=a|0;return 6}function oH(a,b){a=a|0;b=Q(b)}function La(a){a=a|0;return 0}function Jy(a){a=a|0;return 4}function Ig(a){a=a|0;return 2}function Ic(a){a=a|0;return 1}function IF(a){a=a|0;return 8}function Wo(){return ua(1)|0}function Ka(a,b){a=a|0;b=b|0}function pa(a){a=a|0;ta(a)}function xk(a,b){wk(a,b)}function ib(a){a=a|0;Z()}function uf(){return 1}function tf(){return 2}function oy(){ca();Z()}function _h(){return 0}function Zh(){return 3}function Xh(){return 4}function Po(){return 5}function Wb(a){a=a|0}\n// EMSCRIPTEN_END_FUNCS\ng=K;r(la);var ia=e([null,Oa,Yb,Oo,No,Mo,Lo,Ko,Jo,Io,Ho,Go,Fo,Eo,Do,Co,Bo,Ao,zo,yo,xo,wo,vo,uo,Xa,tb,oy,Oa,to,so,ro,Xa,tb,Oa,Yb,qo,po,Xa,tb,Vh,oo,no,Oa,Yb,mo,lo,Xa,tb,Oa,Yb,ko,jo,Xa,tb,of,io,ho,eF,cF,dF,Ve,Gm,go,fo,eo,bi,ci,co,bo,bF,Vg,ao,oE,$n,rE,_n,Zn,wD,Kh,Kh,Yn,Xn,Jh,Wn,Vn,Un,nf,Tn,Sn,Ih,Rn,eD,sD,tD,Qn,vD,uD,Hh,lf,gf,dD,cD,bD,aD,Cb,Ug,vd,Pn,tb,On,Mn,Sf,Ln,qc,Kn,fb,kf,Jn,In,Hn,Fh,Fh,Gn,kf,kf,Oa,Yb,Hh,Fn,En,lf,Xa,tb,Oa,Yb,Jh,Ti,Dn,Cn,Xa,tb,Oa,Yb,Bn,An,lf,Xa,tb,hf,zn,xn,wn,vn,th,un,tn,sn,gf,gf,rn,qn,Wb,pn,on,nn,rh,mn,Da,kc,kc,qh,Da,La,Da,Ka,Da,rh,Ic,Ka,Ka,ln,kn,jn,hn,en,th,gn,fn,iI,cn,cn,hI,gI,Wb,Ca,pa,fI,eI,dI,nh,nh,pa,Da,bn,pa,bn,cI,bI,VH,YH,_H,kc,kc,qh,aI,lh,$H,UH,XH,ZH,La,$m,WH,Ca,pa,TH,pa,SH,RH,QH,PH,LH,OH,MH,NH,JH,KH,IH,FH,EH,DH,Zm,Zm,HH,GH,pa,CH,nh,BH,AH,yH,xH,kh,zH,Xm,wH,vH,uH,$m,pH,Um,rH,sH,jh,Ad,tH,qH,oH,Ka,Da,Ca,pa,Ca,pa,RB,Rm,pa,Rm,pa,nH,pa,mH,lH,pa,QB,kH,pa,jH,pa,iH,hH,Ca,pa,gH,pa,fH,pa,eH,Ca,pa,dH,cH,bH,Ca,pa,aH,$G,_G,ZG,YG,Ca,ib,Ca,ib,Ca,pa,TG,XG,WG,VG,UG,SG,pa,Da,Da,Om,pa,Da,Da,RG,pa,QG,PG,OG,JG,IG,NG,MG,LG,KG,pa,Mm,HG,GG,FG,EG,DG,pa,CG,Im,BG,zG,yG,AG,pa,xG,Ka,Ca,pa,Hm,wG,vG,uG,Tb,yd,tG,sG,rG,Tb,yd,af,qG,lh,kc,Em,Dm,Ca,pa,pG,pa,oG,pa,nG,pa,mG,pa,lG,pa,kG,pa,jG,pa,iG,pa,hG,pa,gG,pa,Cm,Tb,Ka,fG,eG,dG,cG,bG,aG,$F,_F,ZF,YF,XF,WF,kc,pa,VF,UF,TF,SF,Tb,yd,RF,QF,PF,Tb,yd,pa,zm,Qa,bh,ym,ah,OF,NF,_g,MF,LF,KF,xm,JF,IF,HF,GF,FF,xm,EF,DF,CF,_e,BF,sm,rm,yF,AF,zF,xF,wF,PC,uF,OC,Rg,qF,pF,Ze,tF,vF,MC,oF,sF,rF,Ca,pa,pm,pa,pm,pa,nF,Ca,Ra,jF,ah,kF,iF,om,_g,Ze,hF,mF,lF,Ra,gF,Ra,fF,aF,$E,YE,WE,UE,XE,TE,SE,RE,QE,VE,_E,ZE,Ca,ib,Ra,LE,ME,KE,JE,IE,Ze,HE,NE,PE,OE,Ra,GE,FE,Ra,EE,DE,vE,uE,Sl,CE,tE,sE,xE,Vg,BE,AE,im,im,zE,yE,La,Cb,Ug,wE,ib,ib,qE,pE,ib,bh,kE,jE,iE,Vg,mE,lE,La,La,Cb,Da,La,Cb,Ug,Ca,pa,hE,Ra,ym,ah,gE,$D,om,_g,Ze,_D,ZD,dE,cE,cm,Ra,YD,fE,aE,XD,Ra,WD,eE,bE,cm,Ca,Ra,am,VD,UD,Sg,TD,Cb,SD,RD,QD,ND,MD,Rg,LD,OD,PD,GD,FD,ID,ED,Zl,HD,KD,JD,DD,CD,BD,pa,AD,pa,zD,Wl,xD,ib,ib,Ra,am,nD,mD,Ql,lD,oD,qD,pD,Ca,Ra,kD,iD,hD,Rg,gD,Pl,fD,jD,bh,Ol,YC,$C,Nl,Nl,Ka,Ka,Dm,Ka,Ka,XC,WC,VC,QC,ZC,Ll,RC,TC,SC,Ca,Ra,Kl,LC,NC,pa,KC,pa,JC,IC,HC,GC,Tb,FC,EC,Ca,pa,DC,pa,CC,pa,pa,BC,pa,AC,Gl,rC,zC,qC,La,El,pC,oC,La,La,Da,Da,nC,Dl,Dl,mC,lC,kC,jC,iC,hC,yC,gC,fC,eC,vC,Ic,El,dC,La,Ic,La,cC,Da,bC,aC,vd,vd,Da,Da,wC,Bl,$B,_B,xC,ZB,YB,Zl,sC,uC,XB,WB,Ig,La,La,La,La,La,Da,Da,Wb,Wb,Cm,vd,vd,Da,Da,Cb,tC,Ca,pa,xl,pa,Da,Da,VB,pa,Hg,nE,Ue,Ca,pa,UB,pa,zb,pa,TB,pa,Da,Da,SB,ib,ib,pa,sl,PB,OB,DB,Ka,NB,MB,LB,KB,JB,IB,HB,GB,FB,EB,pa,CB,dl,gc,zB,uB,BB,AB,yB,xB,wB,tB,sB,vB,dl,gc,Wb,rB,qB,Om,pB,oB,Pl,fc,gc,nB,mB,al,kB,jB,iB,hB,lB,gc,gB,eB,dB,fB,gc,cB,bB,aB,$A,_A,ZA,YA,gc,XA,WA,VA,UA,TA,rm,SA,Uk,RA,Da,JA,Da,IA,Ic,QA,MA,KA,NA,OA,LA,gc,HA,GA,FA,EA,DA,CA,BA,ib,AA,zA,yA,xA,sg,wA,Kk,oA,Hk,_z,rA,jA,iA,gA,fA,qA,pA,sA,mA,lA,nA,bA,aA,$z,Bk,Bk,Ig,uA,Gk,Fk,Gk,Fk,Ck,cA,dA,eA,kA,Jk,vA,tA,Ka,Zz,Yz,Xz,Wz,pa,Uz,Tz,Sz,Oz,Nz,Rz,Qz,Pz,Mz,sk,Kz,Fz,Hz,Jz,Iz,Ez,pa,Gz,Bz,pk,Cz,Ka,sz,rz,qz,pa,Az,Ca,pa,zz,yz,xz,Ig,Ra,pz,Ka,oz,Sg,nz,Cb,pa,mz,pa,lz,Ra,Cb,Sg,kz,Ql,jz,iz,hz,Cb,gz,pa,fz,pa,ez,tz,wz,vz,uz,dz,cz,$y,_y,Ka,pe,bz,az,pa,Mm,Zy,Yy,Xy,pa,Wy,pa,Vy,pa,Uy,pa,Ty,Ca,pa,Sy,Tb,Ka,Zj,Ry,My,Ly,Ny,Ky,Jy,Py,Oy,pa,Iy,Ca,pa,Hy,Tb,yd,Fy,Ey,La,Ic,Dy,Ka,xy,By,Cy,yy,zy,wy,rD,vy,lh,Ay,ty,uy,sy,pa,qy,py,Ca,pa,Wb,Wb,ny,ey,hy,my,pa,fy,iy,ly,pa,gy,jy,ky]);function ja(){return G.byteLength/65536|0}return{\"h\":dn,\"i\":Ba,\"j\":Aa,\"k\":Ea,\"l\":Wa,\"m\":Va,\"n\":oa,\"o\":Zd,\"p\":Xd,\"q\":Qd,\"r\":df,\"s\":tm,\"t\":em,\"u\":Pe,\"v\":He,\"w\":ze,\"x\":se,\"y\":me,\"z\":je,\"A\":ie,\"B\":md,\"C\":ge,\"D\":fe,\"E\":ee,\"F\":oa,\"G\":kd,\"H\":jd,\"I\":vc,\"J\":id,\"K\":gd,\"L\":bd,\"M\":ad,\"N\":$c,\"O\":_c,\"P\":Zc,\"Q\":Yc,\"R\":Xc,\"S\":Wc,\"T\":Vc,\"U\":Uc,\"V\":Tc,\"W\":Sc,\"X\":sc,\"Y\":Rc,\"Z\":Qc,\"_\":Pc,\"$\":Zb,\"aa\":Oc,\"ba\":Lc,\"ca\":nb,\"da\":mb,\"ea\":nb,\"fa\":mb,\"ga\":rc,\"ha\":Kc,\"ia\":Ba,\"ja\":Aa,\"ka\":Ea,\"la\":oa,\"ma\":oa,\"na\":Jb,\"oa\":Ib,\"pa\":Hb,\"qa\":Gb,\"ra\":Fb,\"sa\":oa,\"ta\":_d,\"ua\":Df,\"va\":Cf,\"wa\":Bf,\"xa\":zf,\"ya\":yf,\"za\":Zd,\"Aa\":Xd,\"Ba\":Qd,\"Ca\":df,\"Da\":tm,\"Ea\":em,\"Fa\":Pe,\"Ga\":He,\"Ha\":ze,\"Ia\":se,\"Ja\":me,\"Ka\":je,\"La\":ie,\"Ma\":md,\"Na\":ge,\"Oa\":fe,\"Pa\":ee,\"Qa\":oa,\"Ra\":xf,\"Sa\":ki,\"Ta\":ii,\"Ua\":fi,\"Va\":ai,\"Wa\":$h,\"Xa\":oa,\"Ya\":zp,\"Za\":ep,\"_a\":Yh,\"$a\":Wd,\"ab\":Ud,\"bb\":Sd,\"cb\":Rd,\"db\":Pd,\"eb\":Od,\"fb\":Nn,\"gb\":Eh,\"hb\":yn,\"ib\":_m,\"jb\":Ym,\"kb\":Tm,\"lb\":Qm,\"mb\":zd,\"nb\":Wd,\"ob\":Ud,\"pb\":Sd,\"qb\":fh,\"rb\":Rd,\"sb\":Pd,\"tb\":Od,\"ub\":Fm,\"vb\":Fa,\"wb\":Bm,\"xb\":Zb,\"yb\":oa,\"zb\":ch,\"Ab\":$g,\"Bb\":Zg,\"Cb\":Xg,\"Db\":Wg,\"Eb\":hb,\"Fb\":gb,\"Gb\":xd,\"Hb\":wd,\"Ib\":Ye,\"Jb\":We,\"Kb\":oa,\"Lb\":hm,\"Mb\":oa,\"Nb\":fm,\"Ob\":dm,\"Pb\":bm,\"Qb\":$l,\"Rb\":_l,\"Sb\":hb,\"Tb\":gb,\"Ub\":oa,\"Vb\":Ba,\"Wb\":Aa,\"Xb\":Ea,\"Yb\":Wa,\"Zb\":Va,\"_b\":oa,\"$b\":yD,\"ac\":Wa,\"bc\":Va,\"cc\":Te,\"dc\":Pg,\"ec\":Og,\"fc\":Ba,\"gc\":Aa,\"hc\":Ea,\"ic\":oa,\"jc\":_C,\"kc\":Wa,\"lc\":Va,\"mc\":Ba,\"nc\":Aa,\"oc\":Ea,\"pc\":oa,\"qc\":UC,\"rc\":Ba,\"sc\":Aa,\"tc\":Ea,\"uc\":oa,\"vc\":Jl,\"wc\":oa,\"xc\":Ba,\"yc\":Aa,\"zc\":Ea,\"Ac\":oa,\"Bc\":Kg,\"Cc\":Hl,\"Dc\":Fl,\"Ec\":Cl,\"Fc\":oa,\"Gc\":Oe,\"Hc\":Ne,\"Ic\":Le,\"Jc\":sd,\"Kc\":ql,\"Lc\":jl,\"Mc\":hl,\"Nc\":el,\"Oc\":Ge,\"Pc\":Ee,\"Qc\":Ce,\"Rc\":Be,\"Sc\":Vk,\"Tc\":PA,\"Uc\":Ik,\"Vc\":Ba,\"Wc\":Aa,\"Xc\":Ea,\"Yc\":oa,\"Zc\":oa,\"_c\":hA,\"$c\":Vz,\"ad\":oa,\"bd\":sd,\"cd\":vk,\"dd\":oa,\"ed\":Lz,\"fd\":Dz,\"gd\":ok,\"hd\":gk,\"id\":ek,\"jd\":bk,\"kd\":oe,\"ld\":Jb,\"md\":Ib,\"nd\":Hb,\"od\":Gb,\"pd\":Fb,\"qd\":oa,\"rd\":Gy,\"sd\":Xj,\"td\":ry,\"ud\":Pj,\"vd\":Nj,\"wd\":Kj,\"xd\":Jj,\"yd\":Hj,\"zd\":Zf,\"Ad\":Gj,\"Bd\":Fj,\"Cd\":Ej,\"Dd\":Dj,\"Ed\":Cj,\"Fd\":Bj,\"Gd\":Zd,\"Hd\":Xd,\"Id\":Qd,\"Jd\":df,\"Kd\":Aj,\"Ld\":zj,\"Md\":Pe,\"Nd\":He,\"Od\":ze,\"Pd\":se,\"Qd\":me,\"Rd\":je,\"Sd\":ie,\"Td\":md,\"Ud\":ge,\"Vd\":fe,\"Wd\":ee,\"Xd\":_d,\"Yd\":Df,\"Zd\":Cf,\"_d\":Bf,\"$d\":zf,\"ae\":yf,\"be\":oa,\"ce\":yj,\"de\":oa,\"ee\":Yf,\"fe\":oa,\"ge\":dy,\"he\":xj,\"ie\":wj,\"je\":kd,\"ke\":jd,\"le\":vc,\"me\":id,\"ne\":gd,\"oe\":bd,\"pe\":ad,\"qe\":$c,\"re\":_c,\"se\":Zc,\"te\":Yc,\"ue\":Xc,\"ve\":Wc,\"we\":Vc,\"xe\":Uc,\"ye\":Tc,\"ze\":Sc,\"Ae\":sc,\"Be\":Rc,\"Ce\":Qc,\"De\":Pc,\"Ee\":Zb,\"Fe\":Oc,\"Ge\":Lc,\"He\":nb,\"Ie\":mb,\"Je\":nb,\"Ke\":mb,\"Le\":rc,\"Me\":Kc,\"Ne\":oa,\"Oe\":Fa,\"Pe\":cy,\"Qe\":xf,\"Re\":ki,\"Se\":ii,\"Te\":fi,\"Ue\":ai,\"Ve\":$h,\"We\":oa,\"Xe\":by,\"Ye\":ay,\"Ze\":fh,\"_e\":vj,\"$e\":Yh,\"af\":Wd,\"bf\":Ud,\"cf\":Sd,\"df\":Rd,\"ef\":Pd,\"ff\":Od,\"gf\":Eh,\"hf\":$x,\"jf\":_m,\"kf\":Ym,\"lf\":Tm,\"mf\":Qm,\"nf\":zd,\"of\":_x,\"pf\":vj,\"qf\":Zx,\"rf\":Yx,\"sf\":Xx,\"tf\":Wx,\"uf\":Vx,\"vf\":Ux,\"wf\":Tx,\"xf\":Sx,\"yf\":Rx,\"zf\":Qx,\"Af\":Px,\"Bf\":Ox,\"Cf\":Nx,\"Df\":Mx,\"Ef\":Lx,\"Ff\":Kx,\"Gf\":Jx,\"Hf\":Ix,\"If\":Wd,\"Jf\":Ud,\"Kf\":Sd,\"Lf\":fh,\"Mf\":Rd,\"Nf\":Pd,\"Of\":Od,\"Pf\":Fm,\"Qf\":Fa,\"Rf\":Hx,\"Sf\":Gx,\"Tf\":Fx,\"Uf\":Fa,\"Vf\":Ex,\"Wf\":Dx,\"Xf\":Cx,\"Yf\":Bx,\"Zf\":Ax,\"_f\":oe,\"$f\":zx,\"ag\":yx,\"bg\":xx,\"cg\":wx,\"dg\":vx,\"eg\":Fa,\"fg\":ux,\"gg\":tx,\"hg\":sx,\"ig\":Bm,\"jg\":Zb,\"kg\":If,\"lg\":rx,\"mg\":oa,\"ng\":qx,\"og\":px,\"pg\":_a,\"qg\":ox,\"rg\":ch,\"sg\":Tf,\"tg\":pj,\"ug\":oj,\"vg\":nj,\"wg\":Sf,\"xg\":mj,\"yg\":lj,\"zg\":kj,\"Ag\":$g,\"Bg\":Zg,\"Cg\":Xg,\"Dg\":Wg,\"Eg\":hb,\"Fg\":gb,\"Gg\":xd,\"Hg\":wd,\"Ig\":Ye,\"Jg\":We,\"Kg\":oa,\"Lg\":_a,\"Mg\":ce,\"Ng\":pb,\"Og\":_a,\"Pg\":nx,\"Qg\":pb,\"Rg\":mx,\"Sg\":ch,\"Tg\":Tf,\"Ug\":lx,\"Vg\":Rf,\"Wg\":Qf,\"Xg\":jj,\"Yg\":ij,\"Zg\":hj,\"_g\":kx,\"$g\":li,\"ah\":jx,\"bh\":ix,\"ch\":hx,\"dh\":$g,\"eh\":Zg,\"fh\":Xg,\"gh\":Wg,\"hh\":hb,\"ih\":gb,\"jh\":xd,\"kh\":wd,\"lh\":Ye,\"mh\":We,\"nh\":oa,\"oh\":oe,\"ph\":gx,\"qh\":fx,\"rh\":ex,\"sh\":Xa,\"th\":be,\"uh\":hd,\"vh\":fd,\"wh\":gj,\"xh\":fj,\"yh\":Qy,\"zh\":Wf,\"Ah\":cx,\"Bh\":bx,\"Ch\":ax,\"Dh\":$w,\"Eh\":Fa,\"Fh\":_w,\"Gh\":hm,\"Hh\":oa,\"Ih\":ed,\"Jh\":dd,\"Kh\":nd,\"Lh\":cd,\"Mh\":Fa,\"Nh\":Zw,\"Oh\":ed,\"Ph\":dd,\"Qh\":nd,\"Rh\":cd,\"Sh\":Ph,\"Th\":ej,\"Uh\":Of,\"Vh\":dj,\"Wh\":cj,\"Xh\":bj,\"Yh\":Fa,\"Zh\":Yw,\"_h\":fm,\"$h\":Xw,\"ai\":Ww,\"bi\":Gm,\"ci\":Vw,\"di\":Pm,\"ei\":Uw,\"fi\":Tw,\"gi\":Sw,\"hi\":Rw,\"ii\":Qw,\"ji\":dm,\"ki\":bm,\"li\":$l,\"mi\":_l,\"ni\":hb,\"oi\":gb,\"pi\":oa,\"qi\":Pw,\"ri\":Ow,\"si\":Ba,\"ti\":Aa,\"ui\":Ea,\"vi\":Wa,\"wi\":Va,\"xi\":oa,\"yi\":Nw,\"zi\":Wa,\"Ai\":Va,\"Bi\":Ba,\"Ci\":Aa,\"Di\":Ea,\"Ei\":oa,\"Fi\":Mw,\"Gi\":Wa,\"Hi\":Va,\"Ii\":Te,\"Ji\":Pg,\"Ki\":Og,\"Li\":Ba,\"Mi\":Aa,\"Ni\":Ea,\"Oi\":oa,\"Pi\":Lw,\"Qi\":Wa,\"Ri\":Va,\"Si\":Te,\"Ti\":Pg,\"Ui\":Og,\"Vi\":Ba,\"Wi\":Aa,\"Xi\":Ea,\"Yi\":oa,\"Zi\":Kw,\"_i\":Wa,\"$i\":Va,\"aj\":Ba,\"bj\":Aa,\"cj\":Ea,\"dj\":oa,\"ej\":Jw,\"fj\":Wa,\"gj\":Va,\"hj\":Ba,\"ij\":Aa,\"jj\":Ea,\"kj\":oa,\"lj\":Iw,\"mj\":Wa,\"nj\":Va,\"oj\":Ba,\"pj\":Aa,\"qj\":Ea,\"rj\":oa,\"sj\":Hw,\"tj\":Ba,\"uj\":Aa,\"vj\":Ea,\"wj\":oa,\"xj\":Gw,\"yj\":Ba,\"zj\":Aa,\"Aj\":Ea,\"Bj\":oa,\"Cj\":Fw,\"Dj\":Ba,\"Ej\":Aa,\"Fj\":Ea,\"Gj\":oa,\"Hj\":_a,\"Ij\":ce,\"Jj\":pb,\"Kj\":Xa,\"Lj\":Ew,\"Mj\":Dw,\"Nj\":Cw,\"Oj\":Bw,\"Pj\":_a,\"Qj\":Aw,\"Rj\":pb,\"Sj\":_a,\"Tj\":zw,\"Uj\":yw,\"Vj\":If,\"Wj\":xw,\"Xj\":Of,\"Yj\":ww,\"Zj\":oa,\"_j\":vw,\"$j\":uw,\"ak\":tw,\"bk\":sw,\"ck\":rw,\"dk\":Wa,\"ek\":Va,\"fk\":qw,\"gk\":pw,\"hk\":ow,\"ik\":Te,\"jk\":Ba,\"kk\":Aa,\"lk\":Ea,\"mk\":oa,\"nk\":nw,\"ok\":mw,\"pk\":lw,\"qk\":kw,\"rk\":jw,\"sk\":iw,\"tk\":hw,\"uk\":gw,\"vk\":_d,\"wk\":fw,\"xk\":ew,\"yk\":dw,\"zk\":cw,\"Ak\":bw,\"Bk\":Wa,\"Ck\":Va,\"Dk\":Ba,\"Ek\":Aa,\"Fk\":Ea,\"Gk\":oa,\"Hk\":ed,\"Ik\":dd,\"Jk\":zd,\"Kk\":_a,\"Lk\":aw,\"Mk\":pb,\"Nk\":$v,\"Ok\":_v,\"Pk\":Zv,\"Qk\":Yv,\"Rk\":Xv,\"Sk\":Wv,\"Tk\":Vv,\"Uk\":Uv,\"Vk\":Jl,\"Wk\":oa,\"Xk\":Tv,\"Yk\":Ba,\"Zk\":Aa,\"_k\":Ea,\"$k\":oa,\"al\":Sv,\"bl\":Ba,\"cl\":Aa,\"dl\":Ea,\"el\":oa,\"fl\":Rv,\"gl\":Qv,\"hl\":Ba,\"il\":Aa,\"jl\":Ea,\"kl\":oa,\"ll\":Ov,\"ml\":Wa,\"nl\":Va,\"ol\":Ba,\"pl\":Aa,\"ql\":Ea,\"rl\":oa,\"sl\":Nv,\"tl\":Mv,\"ul\":Lv,\"vl\":Kv,\"wl\":Fa,\"xl\":Jv,\"yl\":Fa,\"zl\":Iv,\"Al\":xf,\"Bl\":Hv,\"Cl\":Gv,\"Dl\":oa,\"El\":Fv,\"Fl\":Ev,\"Gl\":oa,\"Hl\":Hl,\"Il\":Fl,\"Jl\":Cl,\"Kl\":Kg,\"Ll\":nd,\"Ml\":cd,\"Nl\":oa,\"Ol\":Dv,\"Pl\":Cv,\"Ql\":el,\"Rl\":jl,\"Sl\":Yi,\"Tl\":hl,\"Ul\":Av,\"Vl\":Vk,\"Wl\":zv,\"Xl\":yv,\"Yl\":Ik,\"Zl\":Ea,\"_l\":sd,\"$l\":ql,\"am\":Ba,\"bm\":Aa,\"cm\":Oe,\"dm\":Ne,\"em\":Le,\"fm\":Ge,\"gm\":Ee,\"hm\":Ce,\"im\":Be,\"jm\":oa,\"km\":xv,\"lm\":wv,\"mm\":vv,\"nm\":uv,\"om\":Kg,\"pm\":tv,\"qm\":rv,\"rm\":qv,\"sm\":pv,\"tm\":hb,\"um\":gb,\"vm\":xd,\"wm\":wd,\"xm\":ov,\"ym\":nv,\"zm\":Vi,\"Am\":Ui,\"Bm\":sv,\"Cm\":lv,\"Dm\":kv,\"Em\":jv,\"Fm\":iv,\"Gm\":hv,\"Hm\":gv,\"Im\":fv,\"Jm\":Ti,\"Km\":ev,\"Lm\":dv,\"Mm\":cv,\"Nm\":oa,\"Om\":bv,\"Pm\":Yi,\"Qm\":av,\"Rm\":$u,\"Sm\":_u,\"Tm\":Ba,\"Um\":Aa,\"Vm\":Oe,\"Wm\":Ne,\"Xm\":Le,\"Ym\":Ge,\"Zm\":Ee,\"_m\":Ce,\"$m\":Be,\"an\":oa,\"bn\":Zu,\"cn\":Yu,\"dn\":Xu,\"en\":Wu,\"fn\":Vu,\"gn\":Ba,\"hn\":Aa,\"jn\":Oe,\"kn\":Ne,\"ln\":Le,\"mn\":Ge,\"nn\":Ee,\"on\":Ce,\"pn\":Be,\"qn\":oa,\"rn\":Uu,\"sn\":Tu,\"tn\":ed,\"un\":dd,\"vn\":nd,\"wn\":cd,\"xn\":Fa,\"yn\":Su,\"zn\":Ru,\"An\":oa,\"Bn\":Qu,\"Cn\":Fa,\"Dn\":Pu,\"En\":Ou,\"Fn\":Nu,\"Gn\":Mu,\"Hn\":Lu,\"In\":zd,\"Jn\":Ku,\"Kn\":sd,\"Ln\":vk,\"Mn\":oa,\"Nn\":oa,\"On\":Zf,\"Pn\":Ju,\"Qn\":oa,\"Rn\":Iu,\"Sn\":Hu,\"Tn\":Gu,\"Un\":Fu,\"Vn\":oa,\"Wn\":sd,\"Xn\":oa,\"Yn\":oa,\"Zn\":Eu,\"_n\":oa,\"$n\":Du,\"ao\":Cu,\"bo\":Bu,\"co\":Au,\"eo\":zd,\"fo\":zu,\"go\":yu,\"ho\":Kf,\"io\":Jf,\"jo\":xu,\"ko\":wu,\"lo\":vu,\"mo\":uu,\"no\":tu,\"oo\":su,\"po\":ru,\"qo\":qu,\"ro\":pu,\"so\":ou,\"to\":nu,\"uo\":mu,\"vo\":lu,\"wo\":ku,\"xo\":ju,\"yo\":iu,\"zo\":hu,\"Ao\":gu,\"Bo\":fu,\"Co\":eu,\"Do\":du,\"Eo\":cu,\"Fo\":Fa,\"Go\":bu,\"Ho\":sc,\"Io\":au,\"Jo\":$t,\"Ko\":_t,\"Lo\":Zt,\"Mo\":Yt,\"No\":Xt,\"Oo\":Wt,\"Po\":Ut,\"Qo\":Tt,\"Ro\":St,\"So\":Rt,\"To\":Qt,\"Uo\":Pt,\"Vo\":Ot,\"Wo\":Nt,\"Xo\":Mt,\"Yo\":Lt,\"Zo\":Kt,\"_o\":Jt,\"$o\":It,\"ap\":Ht,\"bp\":Gt,\"cp\":Ft,\"dp\":Et,\"ep\":Dt,\"fp\":Ct,\"gp\":Bt,\"hp\":At,\"ip\":zt,\"jp\":yt,\"kp\":rc,\"lp\":xt,\"mp\":kd,\"np\":jd,\"op\":vc,\"pp\":id,\"qp\":gd,\"rp\":bd,\"sp\":ad,\"tp\":$c,\"up\":_c,\"vp\":Zc,\"wp\":Yc,\"xp\":Xc,\"yp\":Wc,\"zp\":Vc,\"Ap\":Uc,\"Bp\":Tc,\"Cp\":Sc,\"Dp\":sc,\"Ep\":Rc,\"Fp\":Qc,\"Gp\":Pc,\"Hp\":Zb,\"Ip\":Oc,\"Jp\":Lc,\"Kp\":nb,\"Lp\":mb,\"Mp\":nb,\"Np\":mb,\"Op\":rc,\"Pp\":Kc,\"Qp\":wt,\"Rp\":ae,\"Sp\":$d,\"Tp\":hb,\"Up\":gb,\"Vp\":Nc,\"Wp\":Mc,\"Xp\":Fa,\"Yp\":vt,\"Zp\":ut,\"_p\":tt,\"$p\":st,\"aq\":rt,\"bq\":qt,\"cq\":Jb,\"dq\":Ib,\"eq\":Hb,\"fq\":Gb,\"gq\":Fb,\"hq\":Vt,\"iq\":pt,\"jq\":oa,\"kq\":ot,\"lq\":nt,\"mq\":mt,\"nq\":lt,\"oq\":kt,\"pq\":jt,\"qq\":it,\"rq\":ht,\"sq\":ok,\"tq\":gk,\"uq\":ek,\"vq\":bk,\"wq\":oe,\"xq\":Jb,\"yq\":Ib,\"zq\":Hb,\"Aq\":Gb,\"Bq\":Fb,\"Cq\":oa,\"Dq\":gt,\"Eq\":oa,\"Fq\":ft,\"Gq\":et,\"Hq\":dt,\"Iq\":ct,\"Jq\":bt,\"Kq\":at,\"Lq\":$s,\"Mq\":_s,\"Nq\":Zs,\"Oq\":Ys,\"Pq\":Jb,\"Qq\":Ib,\"Rq\":Hb,\"Sq\":Gb,\"Tq\":Fb,\"Uq\":oa,\"Vq\":Xs,\"Wq\":Ws,\"Xq\":Vs,\"Yq\":Us,\"Zq\":Ts,\"_q\":Ss,\"$q\":Rs,\"ar\":Qs,\"br\":Ps,\"cr\":Os,\"dr\":Ns,\"er\":Ms,\"fr\":Ls,\"gr\":Ks,\"hr\":Jb,\"ir\":Ib,\"jr\":Hb,\"kr\":Gb,\"lr\":Fb,\"mr\":oa,\"nr\":Js,\"or\":Is,\"pr\":Hs,\"qr\":Gs,\"rr\":vc,\"sr\":Fs,\"tr\":Es,\"ur\":Ds,\"vr\":Cs,\"wr\":Bs,\"xr\":As,\"yr\":Jb,\"zr\":Ib,\"Ar\":Hb,\"Br\":Gb,\"Cr\":Fb,\"Dr\":oa,\"Er\":zs,\"Fr\":Jb,\"Gr\":Ib,\"Hr\":Hb,\"Ir\":Gb,\"Jr\":Fb,\"Kr\":oa,\"Lr\":oa,\"Mr\":ae,\"Nr\":$d,\"Or\":nd,\"Pr\":cd,\"Qr\":xd,\"Rr\":wd,\"Sr\":qc,\"Tr\":Jc,\"Ur\":ys,\"Vr\":xs,\"Wr\":ws,\"Xr\":vs,\"Yr\":us,\"Zr\":ts,\"_r\":ss,\"$r\":rs,\"as\":Li,\"bs\":Ki,\"cs\":qs,\"ds\":ps,\"es\":Hf,\"fs\":Gf,\"gs\":Fa,\"hs\":os,\"is\":ns,\"js\":ms,\"ks\":ls,\"ls\":Ji,\"ms\":Ii,\"ns\":Fa,\"os\":ks,\"ps\":ae,\"qs\":$d,\"rs\":hb,\"ss\":gb,\"ts\":Nc,\"us\":Mc,\"vs\":qc,\"ws\":Jc,\"xs\":Gi,\"ys\":Hi,\"zs\":Fi,\"As\":Ei,\"Bs\":Xa,\"Cs\":be,\"Ds\":hd,\"Es\":fd,\"Fs\":Ff,\"Gs\":Ef,\"Hs\":Fa,\"Is\":js,\"Js\":yj,\"Ks\":oa,\"Ls\":Xa,\"Ms\":be,\"Ns\":hd,\"Os\":fd,\"Ps\":Ff,\"Qs\":Ef,\"Rs\":oj,\"Ss\":nj,\"Ts\":Sf,\"Us\":mj,\"Vs\":lj,\"Ws\":kj,\"Xs\":is,\"Ys\":hs,\"Zs\":Di,\"_s\":Ci,\"$s\":Fa,\"at\":Xa,\"bt\":be,\"ct\":hd,\"dt\":fd,\"et\":gj,\"ft\":fj,\"gt\":Bi,\"ht\":Ai,\"it\":zi,\"jt\":yi,\"kt\":xi,\"lt\":wi,\"mt\":vi,\"nt\":ui,\"ot\":ti,\"pt\":si,\"qt\":ri,\"rt\":qi,\"st\":pi,\"tt\":oi,\"ut\":ni,\"vt\":mi,\"wt\":gs,\"xt\":fs,\"yt\":Fa,\"zt\":es,\"At\":ds,\"Bt\":cs,\"Ct\":bs,\"Dt\":as,\"Et\":Pv,\"Ft\":$r,\"Gt\":_r,\"Ht\":Zr,\"It\":Yr,\"Jt\":Xr,\"Kt\":Wr,\"Lt\":Vr,\"Mt\":Ur,\"Nt\":Tr,\"Ot\":Sr,\"Pt\":Rr,\"Qt\":Bv,\"Rt\":Qr,\"St\":mv,\"Tt\":Pr,\"Ut\":Or,\"Vt\":Nr,\"Wt\":Mr,\"Xt\":Lr,\"Yt\":Kr,\"Zt\":Jr,\"_t\":Ir,\"$t\":Hr,\"au\":Xa,\"bu\":Gr,\"cu\":Fr,\"du\":Er,\"eu\":li,\"fu\":Dr,\"gu\":Cr,\"hu\":Br,\"iu\":Ar,\"ju\":zr,\"ku\":yr,\"lu\":xr,\"mu\":wr,\"nu\":vr,\"ou\":ur,\"pu\":tr,\"qu\":sr,\"ru\":rr,\"su\":qr,\"tu\":pr,\"uu\":or,\"vu\":nr,\"wu\":Fa,\"xu\":mr,\"yu\":lr,\"zu\":kr,\"Au\":md,\"Bu\":jr,\"Cu\":ir,\"Du\":hr,\"Eu\":gr,\"Fu\":fr,\"Gu\":er,\"Hu\":dr,\"Iu\":cr,\"Ju\":br,\"Ku\":ar,\"Lu\":$q,\"Mu\":_q,\"Nu\":Zq,\"Ou\":Yq,\"Pu\":Xq,\"Qu\":Wq,\"Ru\":Vq,\"Su\":Yf,\"Tu\":oa,\"Uu\":Uq,\"Vu\":Tq,\"Wu\":Sq,\"Xu\":Rq,\"Yu\":Qq,\"Zu\":Pq,\"_u\":Oq,\"$u\":Nq,\"av\":Mq,\"bv\":Lq,\"cv\":Kq,\"dv\":Jq,\"ev\":Iq,\"fv\":Hq,\"gv\":Gq,\"hv\":Fq,\"iv\":Eq,\"jv\":Dq,\"kv\":Cq,\"lv\":Bq,\"mv\":Aq,\"nv\":zq,\"ov\":yq,\"pv\":xq,\"qv\":wq,\"rv\":vq,\"sv\":uq,\"tv\":sq,\"uv\":rq,\"vv\":qq,\"wv\":Yf,\"xv\":oa,\"yv\":pq,\"zv\":kd,\"Av\":jd,\"Bv\":vc,\"Cv\":id,\"Dv\":gd,\"Ev\":bd,\"Fv\":ad,\"Gv\":$c,\"Hv\":_c,\"Iv\":Zc,\"Jv\":Yc,\"Kv\":Xc,\"Lv\":Wc,\"Mv\":Vc,\"Nv\":Uc,\"Ov\":Tc,\"Pv\":Sc,\"Qv\":sc,\"Rv\":Rc,\"Sv\":Qc,\"Tv\":Pc,\"Uv\":Zb,\"Vv\":Oc,\"Wv\":Lc,\"Xv\":nb,\"Yv\":mb,\"Zv\":nb,\"_v\":mb,\"$v\":rc,\"aw\":xj,\"bw\":wj,\"cw\":Kc,\"dw\":oq,\"ew\":oa,\"fw\":nq,\"gw\":ae,\"hw\":$d,\"iw\":hb,\"jw\":gb,\"kw\":Nc,\"lw\":Mc,\"mw\":qc,\"nw\":Jc,\"ow\":hd,\"pw\":fd,\"qw\":Vi,\"rw\":Ui,\"sw\":mq,\"tw\":lq,\"uw\":Rf,\"vw\":Qf,\"ww\":kq,\"xw\":jq,\"yw\":iq,\"zw\":Tf,\"Aw\":pj,\"Bw\":Hf,\"Cw\":Gf,\"Dw\":Fa,\"Ew\":_a,\"Fw\":hq,\"Gw\":pb,\"Hw\":Ph,\"Iw\":ej,\"Jw\":Of,\"Kw\":dj,\"Lw\":Rf,\"Mw\":Qf,\"Nw\":jj,\"Ow\":ij,\"Pw\":hj,\"Qw\":gq,\"Rw\":fq,\"Sw\":eq,\"Tw\":Kf,\"Uw\":Jf,\"Vw\":Fa,\"Ww\":_a,\"Xw\":dq,\"Yw\":pb,\"Zw\":hb,\"_w\":gb,\"$w\":Nc,\"ax\":Mc,\"bx\":qc,\"cx\":Jc,\"dx\":Ye,\"ex\":We,\"fx\":Fa,\"gx\":_a,\"hx\":ce,\"ix\":pb,\"jx\":ed,\"kx\":dd,\"lx\":If,\"mx\":cq,\"nx\":Ji,\"ox\":Ii,\"px\":ji,\"qx\":hi,\"rx\":Pm,\"sx\":bq,\"tx\":aq,\"ux\":$p,\"vx\":Kf,\"wx\":Jf,\"xx\":Fa,\"yx\":_a,\"zx\":_p,\"Ax\":ob,\"Bx\":Zp,\"Cx\":Yp,\"Dx\":pb,\"Ex\":hb,\"Fx\":gb,\"Gx\":Nc,\"Hx\":Mc,\"Ix\":qc,\"Jx\":Jc,\"Kx\":Gi,\"Lx\":Hi,\"Mx\":Fi,\"Nx\":Ei,\"Ox\":ji,\"Px\":hi,\"Qx\":Li,\"Rx\":Ki,\"Sx\":Ff,\"Tx\":Ef,\"Ux\":Hf,\"Vx\":Gf,\"Wx\":cj,\"Xx\":bj,\"Yx\":ci,\"Zx\":bi,\"_x\":Bi,\"$x\":Ai,\"ay\":zi,\"by\":yi,\"cy\":xi,\"dy\":wi,\"ey\":vi,\"fy\":ui,\"gy\":ti,\"hy\":si,\"iy\":ri,\"jy\":qi,\"ky\":pi,\"ly\":oi,\"my\":ni,\"ny\":mi,\"oy\":dx,\"py\":Xp,\"qy\":tq,\"ry\":Wp,\"sy\":Di,\"ty\":Ci,\"uy\":Vp,\"vy\":Up,\"wy\":Tp,\"xy\":Sp,\"yy\":Rp,\"zy\":Qp,\"Ay\":Pp,\"By\":Op,\"Cy\":Np,\"Dy\":Mp,\"Ey\":Lp,\"Fy\":Kp,\"Gy\":Jp,\"Hy\":Ip,\"Iy\":Hp,\"Jy\":Gp,\"Ky\":Fp,\"Ly\":Ep,\"My\":Dp,\"Ny\":Cp,\"Oy\":Bp,\"Py\":Ap,\"Qy\":yp,\"Ry\":xp,\"Sy\":wp,\"Ty\":vp,\"Uy\":up,\"Vy\":tp,\"Wy\":sp,\"Xy\":rp,\"Yy\":qp,\"Zy\":pp,\"_y\":kd,\"$y\":jd,\"az\":vc,\"bz\":id,\"cz\":gd,\"dz\":bd,\"ez\":ad,\"fz\":$c,\"gz\":_c,\"hz\":Zc,\"iz\":Yc,\"jz\":Xc,\"kz\":Wc,\"lz\":Vc,\"mz\":Uc,\"nz\":Tc,\"oz\":Sc,\"pz\":sc,\"qz\":Rc,\"rz\":Qc,\"sz\":Pc,\"tz\":Zb,\"uz\":Oc,\"vz\":Lc,\"wz\":nb,\"xz\":mb,\"yz\":nb,\"zz\":mb,\"Az\":rc,\"Bz\":op,\"Cz\":np,\"Dz\":mp,\"Ez\":lp,\"Fz\":kp,\"Gz\":jp,\"Hz\":ip,\"Iz\":hp,\"Jz\":gp,\"Kz\":fp,\"Lz\":Kc,\"Mz\":dp,\"Nz\":cp,\"Oz\":oa,\"Pz\":bp,\"Qz\":oa,\"Rz\":_a,\"Sz\":ce,\"Tz\":pb,\"Uz\":ap,\"Vz\":$o,\"Wz\":_o,\"Xz\":He,\"Yz\":Zo,\"Zz\":Yo,\"_z\":Zd,\"$z\":Xd,\"aA\":Qd,\"bA\":df,\"cA\":Aj,\"dA\":zj,\"eA\":Pe,\"fA\":ze,\"gA\":se,\"hA\":me,\"iA\":je,\"jA\":ie,\"kA\":md,\"lA\":ge,\"mA\":fe,\"nA\":ee,\"oA\":Xj,\"pA\":Xo,\"qA\":Pj,\"rA\":Nj,\"sA\":Kj,\"tA\":Jj,\"uA\":Hj,\"vA\":Zf,\"wA\":Gj,\"xA\":Fj,\"yA\":Ej,\"zA\":Dj,\"AA\":Cj,\"BA\":Bj,\"CA\":_d,\"DA\":Df,\"EA\":Cf,\"FA\":Bf,\"GA\":zf,\"HA\":yf,\"IA\":oa,\"JA\":Wo,\"KA\":Vo,\"LA\":Uo,\"MA\":To,\"NA\":So,\"OA\":Ro,\"PA\":Qo,\"QA\":Fa,\"RA\":_h,\"SA\":uf,\"TA\":tf,\"UA\":Zh,\"VA\":Xh,\"WA\":Po,\"XA\":_h,\"YA\":uf,\"ZA\":tf,\"_A\":uf,\"$A\":tf,\"aB\":Zh,\"bB\":Xh,\"cB\":ia,\"dB\":bg}}return ka(ma)}\n// EMSCRIPTEN_END_ASM\n\n\n\n\n)(Fa)}function Ga(){return{then:function(a){a({instance:new Ea})}}}\nvar Ia=Error,WebAssembly={};Ba=[];\"object\"!=typeof WebAssembly&&xa(\"no native wasm support detected\");var Ja,Ka=!1,La=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction Ma(a,c){if(a){var d=Na,e=a+c;for(c=a;d[c]&&!(c>=e);)++c;if(16<c-a&&d.subarray&&La)a=La.decode(d.subarray(a,c));else{for(e=\"\";a<c;){var f=d[a++];if(f&128){var m=d[a++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|m);else{var y=d[a++]&63;f=224==(f&240)?(f&15)<<12|m<<6|y:(f&7)<<18|m<<12|y<<6|d[a++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}a=e}}else a=\"\";return a}\nvar Oa,Pa,Na,Qa,Ra,Sa,Da=b.INITIAL_MEMORY||67108864;if(Ja=b.wasmMemory?b.wasmMemory:new Ca)Oa=Ja.buffer;Da=Oa.byteLength;var Ta=Oa;Oa=Ta;b.HEAP8=Pa=new Int8Array(Ta);b.HEAP16=new Int16Array(Ta);b.HEAP32=Qa=new Int32Array(Ta);b.HEAPU8=Na=new Uint8Array(Ta);b.HEAPU16=new Uint16Array(Ta);b.HEAPU32=new Uint32Array(Ta);b.HEAPF32=Ra=new Float32Array(Ta);b.HEAPF64=Sa=new Float64Array(Ta);var Ua,Va=[],Wa=[],Xa=[],Ya=!1;function Za(){var a=b.preRun.shift();Va.unshift(a)}\nMath.imul||(Math.imul=function(a,c){var d=a&65535,e=c&65535;return d*e+((a>>>16)*e+d*(c>>>16)<<16)|0});if(!Math.fround){var $a=new Float32Array(1);Math.fround=function(a){$a[0]=a;return $a[0]}}Math.clz32||(Math.clz32=function(a){var c=32,d=a>>16;d&&(c-=16,a=d);if(d=a>>8)c-=8,a=d;if(d=a>>4)c-=4,a=d;if(d=a>>2)c-=2,a=d;return a>>1?c-2:c-a});Math.trunc||(Math.trunc=function(a){return 0>a?Math.ceil(a):Math.floor(a)});var ab=0,bb=null,cb=null;b.preloadedImages={};b.preloadedAudios={};\nfunction xa(a){if(b.onAbort)b.onAbort(a);a=\"Aborted(\"+a+\")\";ya(a);Ka=!0;a=new Ia(a+\". Build with -s ASSERTIONS=1 for more info.\");ka(a);throw a;}var db=\"data:application/octet-stream;base64,\",eb;eb=\"<<< WASM_BINARY_FILE >>>\";if(!eb.startsWith(db)){var fb=eb;eb=b.locateFile?b.locateFile(fb,pa):pa+fb}function gb(){var a=eb;try{if(a==eb&&Ba)return new Uint8Array(Ba);var c=va(a);if(c)return c;if(sa)return sa(a);throw\"both async and sync fetching of the wasm failed\";}catch(d){xa(d)}}\nfunction hb(){if(!Ba&&(ma||na)){if(\"function\"==typeof fetch&&!eb.startsWith(\"file://\"))return fetch(eb,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+eb+\"'\";return a.arrayBuffer()}).catch(function(){return gb()});if(ra)return new Promise(function(a,c){ra(eb,function(d){a(new Uint8Array(d))},c)})}return Promise.resolve().then(function(){return gb()})}\nvar ib={27254:function(a,c,d,e){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty(\"drawLine\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::drawLine.\";a.drawLine(c,d,e)},27474:function(a,c,d,e,f,m){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty(\"drawContactPoint\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::drawContactPoint.\";a.drawContactPoint(c,d,e,f,m)},27724:function(a,c){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty(\"reportErrorWarning\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::reportErrorWarning.\";\na.reportErrorWarning(c)},27968:function(a,c,d){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty(\"draw3dText\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::draw3dText.\";a.draw3dText(c,d)},28191:function(a,c){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty(\"setDebugMode\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::setDebugMode.\";a.setDebugMode(c)},28417:function(a){a=b.getCache(b.DebugDrawer)[a];if(!a.hasOwnProperty(\"getDebugMode\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::getDebugMode.\";\nreturn a.getDebugMode()},28648:function(a,c,d,e,f,m,y,W){a=b.getCache(b.ConcreteContactResultCallback)[a];if(!a.hasOwnProperty(\"addSingleResult\"))throw\"a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.\";return a.addSingleResult(c,d,e,f,m,y,W)}};function jb(a){for(;0<a.length;){var c=a.shift();if(\"function\"==typeof c)c(b);else{var d=c.QH;\"number\"==typeof d?void 0===c.HB?kb(d)():kb(d)(c.HB):d(void 0===c.HB?null:c.HB)}}}var lb=[];\nfunction kb(a){var c=lb[a];c||(a>=lb.length&&(lb.length=a+1),lb[a]=c=Ua.get(a));return c}var mb=[];function nb(a,c,d){mb.length=0;var e;for(d>>=2;e=Na[c++];)(e=105>e)&&d&1&&d++,mb.push(e?Sa[d++>>1]:Qa[d]),++d;return ib[a].apply(null,mb)}\nvar wa=!1,ob=\"function\"==typeof atob?atob:function(a){var c=\"\",d=0;a=a.replace(/[^A-Za-z0-9\\+\\/=]/g,\"\");do{var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(d++));var f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(d++));var m=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(d++));var y=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(d++));e=e<<2|\nf>>4;f=(f&15)<<4|m>>2;var W=(m&3)<<6|y;c+=String.fromCharCode(e);64!==m&&(c+=String.fromCharCode(f));64!==y&&(c+=String.fromCharCode(W))}while(d<a.length);return c};\nfunction va(a){if(a.startsWith(db)){a=a.slice(db.length);if(\"boolean\"==typeof oa&&oa){var c=Buffer.from(a,\"base64\");c=new Uint8Array(c.buffer,c.byteOffset,c.byteLength)}else try{var d=ob(a),e=new Uint8Array(d.length);for(a=0;a<d.length;++a)e[a]=d.charCodeAt(a);c=e}catch(f){throw Error(\"Converting base64 string to bytes failed.\");}return c}}\nvar Fa={d:function(){xa(\"\")},g:function(a,c,d){return nb(a,c,d)},c:nb,f:Uint8Array.prototype.copyWithin?function(a,c,d){Na.copyWithin(a,c,c+d)}:function(a,c,d){Na.set(Na.subarray(c,c+d),a)},e:function(){xa(\"OOM\")},b:function(a){var c=Date.now();Qa[a>>2]=c/1E3|0;Qa[a+4>>2]=c%1E3*1E3|0;return 0},a:Ja};\n(function(){function a(f){b.asm=f.exports;Ua=b.asm.cB;Wa.unshift(b.asm.h);ab--;b.monitorRunDependencies&&b.monitorRunDependencies(ab);0==ab&&(null!==bb&&(clearInterval(bb),bb=null),cb&&(f=cb,cb=null,f()))}function c(f){a(f.instance)}function d(f){return hb().then(function(){return Ga()}).then(function(m){return m}).then(f,function(m){ya(\"failed to asynchronously prepare wasm: \"+m);xa(m)})}var e={a:Fa};ab++;b.monitorRunDependencies&&b.monitorRunDependencies(ab);if(b.instantiateWasm)try{return b.instantiateWasm(e,\na)}catch(f){return ya(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return Ba||\"function\"!=typeof WebAssembly.instantiateStreaming||eb.startsWith(db)||eb.startsWith(\"file://\")||\"function\"!=typeof fetch?d(c):fetch(eb,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(c,function(m){ya(\"wasm streaming compile failed: \"+m);ya(\"falling back to ArrayBuffer instantiation\");return d(c)})})})().catch(ka);return{}})();\nb.___wasm_call_ctors=function(){return(b.___wasm_call_ctors=b.asm.h).apply(null,arguments)};\nvar pb=b._emscripten_bind_btCollisionShape_setLocalScaling_1=function(){return(pb=b._emscripten_bind_btCollisionShape_setLocalScaling_1=b.asm.i).apply(null,arguments)},qb=b._emscripten_bind_btCollisionShape_getLocalScaling_0=function(){return(qb=b._emscripten_bind_btCollisionShape_getLocalScaling_0=b.asm.j).apply(null,arguments)},rb=b._emscripten_bind_btCollisionShape_calculateLocalInertia_2=function(){return(rb=b._emscripten_bind_btCollisionShape_calculateLocalInertia_2=b.asm.k).apply(null,arguments)},\nsb=b._emscripten_bind_btCollisionShape_setMargin_1=function(){return(sb=b._emscripten_bind_btCollisionShape_setMargin_1=b.asm.l).apply(null,arguments)},tb=b._emscripten_bind_btCollisionShape_getMargin_0=function(){return(tb=b._emscripten_bind_btCollisionShape_getMargin_0=b.asm.m).apply(null,arguments)},ub=b._emscripten_bind_btCollisionShape___destroy___0=function(){return(ub=b._emscripten_bind_btCollisionShape___destroy___0=b.asm.n).apply(null,arguments)},vb=b._emscripten_bind_btCollisionWorld_getDispatcher_0=\nfunction(){return(vb=b._emscripten_bind_btCollisionWorld_getDispatcher_0=b.asm.o).apply(null,arguments)},wb=b._emscripten_bind_btCollisionWorld_rayTest_3=function(){return(wb=b._emscripten_bind_btCollisionWorld_rayTest_3=b.asm.p).apply(null,arguments)},xb=b._emscripten_bind_btCollisionWorld_getPairCache_0=function(){return(xb=b._emscripten_bind_btCollisionWorld_getPairCache_0=b.asm.q).apply(null,arguments)},yb=b._emscripten_bind_btCollisionWorld_getDispatchInfo_0=function(){return(yb=b._emscripten_bind_btCollisionWorld_getDispatchInfo_0=\nb.asm.r).apply(null,arguments)},zb=b._emscripten_bind_btCollisionWorld_addCollisionObject_1=function(){return(zb=b._emscripten_bind_btCollisionWorld_addCollisionObject_1=b.asm.s).apply(null,arguments)},Ab=b._emscripten_bind_btCollisionWorld_addCollisionObject_2=function(){return(Ab=b._emscripten_bind_btCollisionWorld_addCollisionObject_2=b.asm.t).apply(null,arguments)},Bb=b._emscripten_bind_btCollisionWorld_addCollisionObject_3=function(){return(Bb=b._emscripten_bind_btCollisionWorld_addCollisionObject_3=\nb.asm.u).apply(null,arguments)},Cb=b._emscripten_bind_btCollisionWorld_removeCollisionObject_1=function(){return(Cb=b._emscripten_bind_btCollisionWorld_removeCollisionObject_1=b.asm.v).apply(null,arguments)},Db=b._emscripten_bind_btCollisionWorld_getBroadphase_0=function(){return(Db=b._emscripten_bind_btCollisionWorld_getBroadphase_0=b.asm.w).apply(null,arguments)},Fb=b._emscripten_bind_btCollisionWorld_convexSweepTest_5=function(){return(Fb=b._emscripten_bind_btCollisionWorld_convexSweepTest_5=b.asm.x).apply(null,\narguments)},Gb=b._emscripten_bind_btCollisionWorld_contactPairTest_3=function(){return(Gb=b._emscripten_bind_btCollisionWorld_contactPairTest_3=b.asm.y).apply(null,arguments)},Hb=b._emscripten_bind_btCollisionWorld_contactTest_2=function(){return(Hb=b._emscripten_bind_btCollisionWorld_contactTest_2=b.asm.z).apply(null,arguments)},Ib=b._emscripten_bind_btCollisionWorld_updateSingleAabb_1=function(){return(Ib=b._emscripten_bind_btCollisionWorld_updateSingleAabb_1=b.asm.A).apply(null,arguments)},Jb=\nb._emscripten_bind_btCollisionWorld_setDebugDrawer_1=function(){return(Jb=b._emscripten_bind_btCollisionWorld_setDebugDrawer_1=b.asm.B).apply(null,arguments)},Kb=b._emscripten_bind_btCollisionWorld_getDebugDrawer_0=function(){return(Kb=b._emscripten_bind_btCollisionWorld_getDebugDrawer_0=b.asm.C).apply(null,arguments)},Lb=b._emscripten_bind_btCollisionWorld_debugDrawWorld_0=function(){return(Lb=b._emscripten_bind_btCollisionWorld_debugDrawWorld_0=b.asm.D).apply(null,arguments)},Mb=b._emscripten_bind_btCollisionWorld_debugDrawObject_3=\nfunction(){return(Mb=b._emscripten_bind_btCollisionWorld_debugDrawObject_3=b.asm.E).apply(null,arguments)},Nb=b._emscripten_bind_btCollisionWorld___destroy___0=function(){return(Nb=b._emscripten_bind_btCollisionWorld___destroy___0=b.asm.F).apply(null,arguments)},Ob=b._emscripten_bind_btCollisionObject_setAnisotropicFriction_2=function(){return(Ob=b._emscripten_bind_btCollisionObject_setAnisotropicFriction_2=b.asm.G).apply(null,arguments)},Pb=b._emscripten_bind_btCollisionObject_getCollisionShape_0=\nfunction(){return(Pb=b._emscripten_bind_btCollisionObject_getCollisionShape_0=b.asm.H).apply(null,arguments)},Qb=b._emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=function(){return(Qb=b._emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=b.asm.I).apply(null,arguments)},Rb=b._emscripten_bind_btCollisionObject_setActivationState_1=function(){return(Rb=b._emscripten_bind_btCollisionObject_setActivationState_1=b.asm.J).apply(null,arguments)},Sb=b._emscripten_bind_btCollisionObject_forceActivationState_1=\nfunction(){return(Sb=b._emscripten_bind_btCollisionObject_forceActivationState_1=b.asm.K).apply(null,arguments)},Tb=b._emscripten_bind_btCollisionObject_activate_0=function(){return(Tb=b._emscripten_bind_btCollisionObject_activate_0=b.asm.L).apply(null,arguments)},Ub=b._emscripten_bind_btCollisionObject_activate_1=function(){return(Ub=b._emscripten_bind_btCollisionObject_activate_1=b.asm.M).apply(null,arguments)},Vb=b._emscripten_bind_btCollisionObject_isActive_0=function(){return(Vb=b._emscripten_bind_btCollisionObject_isActive_0=\nb.asm.N).apply(null,arguments)},Wb=b._emscripten_bind_btCollisionObject_isKinematicObject_0=function(){return(Wb=b._emscripten_bind_btCollisionObject_isKinematicObject_0=b.asm.O).apply(null,arguments)},Xb=b._emscripten_bind_btCollisionObject_isStaticObject_0=function(){return(Xb=b._emscripten_bind_btCollisionObject_isStaticObject_0=b.asm.P).apply(null,arguments)},Yb=b._emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0=function(){return(Yb=b._emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0=\nb.asm.Q).apply(null,arguments)},Zb=b._emscripten_bind_btCollisionObject_getRestitution_0=function(){return(Zb=b._emscripten_bind_btCollisionObject_getRestitution_0=b.asm.R).apply(null,arguments)},$b=b._emscripten_bind_btCollisionObject_getFriction_0=function(){return($b=b._emscripten_bind_btCollisionObject_getFriction_0=b.asm.S).apply(null,arguments)},ac=b._emscripten_bind_btCollisionObject_getRollingFriction_0=function(){return(ac=b._emscripten_bind_btCollisionObject_getRollingFriction_0=b.asm.T).apply(null,\narguments)},bc=b._emscripten_bind_btCollisionObject_setRestitution_1=function(){return(bc=b._emscripten_bind_btCollisionObject_setRestitution_1=b.asm.U).apply(null,arguments)},cc=b._emscripten_bind_btCollisionObject_setFriction_1=function(){return(cc=b._emscripten_bind_btCollisionObject_setFriction_1=b.asm.V).apply(null,arguments)},dc=b._emscripten_bind_btCollisionObject_setRollingFriction_1=function(){return(dc=b._emscripten_bind_btCollisionObject_setRollingFriction_1=b.asm.W).apply(null,arguments)},\nec=b._emscripten_bind_btCollisionObject_getWorldTransform_0=function(){return(ec=b._emscripten_bind_btCollisionObject_getWorldTransform_0=b.asm.X).apply(null,arguments)},gc=b._emscripten_bind_btCollisionObject_getCollisionFlags_0=function(){return(gc=b._emscripten_bind_btCollisionObject_getCollisionFlags_0=b.asm.Y).apply(null,arguments)},hc=b._emscripten_bind_btCollisionObject_setCollisionFlags_1=function(){return(hc=b._emscripten_bind_btCollisionObject_setCollisionFlags_1=b.asm.Z).apply(null,arguments)},\nic=b._emscripten_bind_btCollisionObject_setWorldTransform_1=function(){return(ic=b._emscripten_bind_btCollisionObject_setWorldTransform_1=b.asm._).apply(null,arguments)},jc=b._emscripten_bind_btCollisionObject_setCollisionShape_1=function(){return(jc=b._emscripten_bind_btCollisionObject_setCollisionShape_1=b.asm.$).apply(null,arguments)},kc=b._emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=function(){return(kc=b._emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=b.asm.aa).apply(null,\narguments)},lc=b._emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=function(){return(lc=b._emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=b.asm.ba).apply(null,arguments)},mc=b._emscripten_bind_btCollisionObject_getUserIndex_0=function(){return(mc=b._emscripten_bind_btCollisionObject_getUserIndex_0=b.asm.ca).apply(null,arguments)},nc=b._emscripten_bind_btCollisionObject_setUserIndex_1=function(){return(nc=b._emscripten_bind_btCollisionObject_setUserIndex_1=b.asm.da).apply(null,\narguments)},oc=b._emscripten_bind_btCollisionObject_getUserPointer_0=function(){return(oc=b._emscripten_bind_btCollisionObject_getUserPointer_0=b.asm.ea).apply(null,arguments)},pc=b._emscripten_bind_btCollisionObject_setUserPointer_1=function(){return(pc=b._emscripten_bind_btCollisionObject_setUserPointer_1=b.asm.fa).apply(null,arguments)},qc=b._emscripten_bind_btCollisionObject_getBroadphaseHandle_0=function(){return(qc=b._emscripten_bind_btCollisionObject_getBroadphaseHandle_0=b.asm.ga).apply(null,\narguments)},sc=b._emscripten_bind_btCollisionObject___destroy___0=function(){return(sc=b._emscripten_bind_btCollisionObject___destroy___0=b.asm.ha).apply(null,arguments)},tc=b._emscripten_bind_btConcaveShape_setLocalScaling_1=function(){return(tc=b._emscripten_bind_btConcaveShape_setLocalScaling_1=b.asm.ia).apply(null,arguments)},uc=b._emscripten_bind_btConcaveShape_getLocalScaling_0=function(){return(uc=b._emscripten_bind_btConcaveShape_getLocalScaling_0=b.asm.ja).apply(null,arguments)},vc=b._emscripten_bind_btConcaveShape_calculateLocalInertia_2=\nfunction(){return(vc=b._emscripten_bind_btConcaveShape_calculateLocalInertia_2=b.asm.ka).apply(null,arguments)},wc=b._emscripten_bind_btConcaveShape___destroy___0=function(){return(wc=b._emscripten_bind_btConcaveShape___destroy___0=b.asm.la).apply(null,arguments)},xc=b._emscripten_bind_btCollisionAlgorithm___destroy___0=function(){return(xc=b._emscripten_bind_btCollisionAlgorithm___destroy___0=b.asm.ma).apply(null,arguments)},yc=b._emscripten_bind_btTypedConstraint_enableFeedback_1=function(){return(yc=\nb._emscripten_bind_btTypedConstraint_enableFeedback_1=b.asm.na).apply(null,arguments)},zc=b._emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=function(){return(zc=b._emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=b.asm.oa).apply(null,arguments)},Ac=b._emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=function(){return(Ac=b._emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=b.asm.pa).apply(null,arguments)},Bc=b._emscripten_bind_btTypedConstraint_getParam_2=\nfunction(){return(Bc=b._emscripten_bind_btTypedConstraint_getParam_2=b.asm.qa).apply(null,arguments)},Cc=b._emscripten_bind_btTypedConstraint_setParam_3=function(){return(Cc=b._emscripten_bind_btTypedConstraint_setParam_3=b.asm.ra).apply(null,arguments)},Dc=b._emscripten_bind_btTypedConstraint___destroy___0=function(){return(Dc=b._emscripten_bind_btTypedConstraint___destroy___0=b.asm.sa).apply(null,arguments)},Fc=b._emscripten_bind_btDynamicsWorld_addAction_1=function(){return(Fc=b._emscripten_bind_btDynamicsWorld_addAction_1=\nb.asm.ta).apply(null,arguments)},Gc=b._emscripten_bind_btDynamicsWorld_removeAction_1=function(){return(Gc=b._emscripten_bind_btDynamicsWorld_removeAction_1=b.asm.ua).apply(null,arguments)},Hc=b._emscripten_bind_btDynamicsWorld_getSolverInfo_0=function(){return(Hc=b._emscripten_bind_btDynamicsWorld_getSolverInfo_0=b.asm.va).apply(null,arguments)},Ic=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_1=function(){return(Ic=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_1=b.asm.wa).apply(null,\narguments)},Jc=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_2=function(){return(Jc=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_2=b.asm.xa).apply(null,arguments)},Kc=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_3=function(){return(Kc=b._emscripten_bind_btDynamicsWorld_setInternalTickCallback_3=b.asm.ya).apply(null,arguments)},Lc=b._emscripten_bind_btDynamicsWorld_getDispatcher_0=function(){return(Lc=b._emscripten_bind_btDynamicsWorld_getDispatcher_0=b.asm.za).apply(null,\narguments)},Mc=b._emscripten_bind_btDynamicsWorld_rayTest_3=function(){return(Mc=b._emscripten_bind_btDynamicsWorld_rayTest_3=b.asm.Aa).apply(null,arguments)},Nc=b._emscripten_bind_btDynamicsWorld_getPairCache_0=function(){return(Nc=b._emscripten_bind_btDynamicsWorld_getPairCache_0=b.asm.Ba).apply(null,arguments)},Oc=b._emscripten_bind_btDynamicsWorld_getDispatchInfo_0=function(){return(Oc=b._emscripten_bind_btDynamicsWorld_getDispatchInfo_0=b.asm.Ca).apply(null,arguments)},Pc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_1=\nfunction(){return(Pc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_1=b.asm.Da).apply(null,arguments)},Qc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_2=function(){return(Qc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_2=b.asm.Ea).apply(null,arguments)},Rc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_3=function(){return(Rc=b._emscripten_bind_btDynamicsWorld_addCollisionObject_3=b.asm.Fa).apply(null,arguments)},Sc=b._emscripten_bind_btDynamicsWorld_removeCollisionObject_1=\nfunction(){return(Sc=b._emscripten_bind_btDynamicsWorld_removeCollisionObject_1=b.asm.Ga).apply(null,arguments)},Tc=b._emscripten_bind_btDynamicsWorld_getBroadphase_0=function(){return(Tc=b._emscripten_bind_btDynamicsWorld_getBroadphase_0=b.asm.Ha).apply(null,arguments)},Uc=b._emscripten_bind_btDynamicsWorld_convexSweepTest_5=function(){return(Uc=b._emscripten_bind_btDynamicsWorld_convexSweepTest_5=b.asm.Ia).apply(null,arguments)},Vc=b._emscripten_bind_btDynamicsWorld_contactPairTest_3=function(){return(Vc=\nb._emscripten_bind_btDynamicsWorld_contactPairTest_3=b.asm.Ja).apply(null,arguments)},Yc=b._emscripten_bind_btDynamicsWorld_contactTest_2=function(){return(Yc=b._emscripten_bind_btDynamicsWorld_contactTest_2=b.asm.Ka).apply(null,arguments)},Zc=b._emscripten_bind_btDynamicsWorld_updateSingleAabb_1=function(){return(Zc=b._emscripten_bind_btDynamicsWorld_updateSingleAabb_1=b.asm.La).apply(null,arguments)},$c=b._emscripten_bind_btDynamicsWorld_setDebugDrawer_1=function(){return($c=b._emscripten_bind_btDynamicsWorld_setDebugDrawer_1=\nb.asm.Ma).apply(null,arguments)},ad=b._emscripten_bind_btDynamicsWorld_getDebugDrawer_0=function(){return(ad=b._emscripten_bind_btDynamicsWorld_getDebugDrawer_0=b.asm.Na).apply(null,arguments)},bd=b._emscripten_bind_btDynamicsWorld_debugDrawWorld_0=function(){return(bd=b._emscripten_bind_btDynamicsWorld_debugDrawWorld_0=b.asm.Oa).apply(null,arguments)},cd=b._emscripten_bind_btDynamicsWorld_debugDrawObject_3=function(){return(cd=b._emscripten_bind_btDynamicsWorld_debugDrawObject_3=b.asm.Pa).apply(null,\narguments)},dd=b._emscripten_bind_btDynamicsWorld___destroy___0=function(){return(dd=b._emscripten_bind_btDynamicsWorld___destroy___0=b.asm.Qa).apply(null,arguments)},ed=b._emscripten_bind_btIDebugDraw_drawLine_3=function(){return(ed=b._emscripten_bind_btIDebugDraw_drawLine_3=b.asm.Ra).apply(null,arguments)},fd=b._emscripten_bind_btIDebugDraw_drawContactPoint_5=function(){return(fd=b._emscripten_bind_btIDebugDraw_drawContactPoint_5=b.asm.Sa).apply(null,arguments)},gd=b._emscripten_bind_btIDebugDraw_reportErrorWarning_1=\nfunction(){return(gd=b._emscripten_bind_btIDebugDraw_reportErrorWarning_1=b.asm.Ta).apply(null,arguments)},hd=b._emscripten_bind_btIDebugDraw_draw3dText_2=function(){return(hd=b._emscripten_bind_btIDebugDraw_draw3dText_2=b.asm.Ua).apply(null,arguments)},jd=b._emscripten_bind_btIDebugDraw_setDebugMode_1=function(){return(jd=b._emscripten_bind_btIDebugDraw_setDebugMode_1=b.asm.Va).apply(null,arguments)},kd=b._emscripten_bind_btIDebugDraw_getDebugMode_0=function(){return(kd=b._emscripten_bind_btIDebugDraw_getDebugMode_0=\nb.asm.Wa).apply(null,arguments)},ld=b._emscripten_bind_btIDebugDraw___destroy___0=function(){return(ld=b._emscripten_bind_btIDebugDraw___destroy___0=b.asm.Xa).apply(null,arguments)},md=b._emscripten_bind_btVector3_btVector3_0=function(){return(md=b._emscripten_bind_btVector3_btVector3_0=b.asm.Ya).apply(null,arguments)},nd=b._emscripten_bind_btVector3_btVector3_3=function(){return(nd=b._emscripten_bind_btVector3_btVector3_3=b.asm.Za).apply(null,arguments)},od=b._emscripten_bind_btVector3_length_0=\nfunction(){return(od=b._emscripten_bind_btVector3_length_0=b.asm._a).apply(null,arguments)},pd=b._emscripten_bind_btVector3_x_0=function(){return(pd=b._emscripten_bind_btVector3_x_0=b.asm.$a).apply(null,arguments)},qd=b._emscripten_bind_btVector3_y_0=function(){return(qd=b._emscripten_bind_btVector3_y_0=b.asm.ab).apply(null,arguments)},rd=b._emscripten_bind_btVector3_z_0=function(){return(rd=b._emscripten_bind_btVector3_z_0=b.asm.bb).apply(null,arguments)},sd=b._emscripten_bind_btVector3_setX_1=function(){return(sd=\nb._emscripten_bind_btVector3_setX_1=b.asm.cb).apply(null,arguments)},td=b._emscripten_bind_btVector3_setY_1=function(){return(td=b._emscripten_bind_btVector3_setY_1=b.asm.db).apply(null,arguments)},ud=b._emscripten_bind_btVector3_setZ_1=function(){return(ud=b._emscripten_bind_btVector3_setZ_1=b.asm.eb).apply(null,arguments)},vd=b._emscripten_bind_btVector3_setValue_3=function(){return(vd=b._emscripten_bind_btVector3_setValue_3=b.asm.fb).apply(null,arguments)},wd=b._emscripten_bind_btVector3_normalize_0=\nfunction(){return(wd=b._emscripten_bind_btVector3_normalize_0=b.asm.gb).apply(null,arguments)},xd=b._emscripten_bind_btVector3_rotate_2=function(){return(xd=b._emscripten_bind_btVector3_rotate_2=b.asm.hb).apply(null,arguments)},yd=b._emscripten_bind_btVector3_dot_1=function(){return(yd=b._emscripten_bind_btVector3_dot_1=b.asm.ib).apply(null,arguments)},zd=b._emscripten_bind_btVector3_op_mul_1=function(){return(zd=b._emscripten_bind_btVector3_op_mul_1=b.asm.jb).apply(null,arguments)},Ad=b._emscripten_bind_btVector3_op_add_1=\nfunction(){return(Ad=b._emscripten_bind_btVector3_op_add_1=b.asm.kb).apply(null,arguments)},Bd=b._emscripten_bind_btVector3_op_sub_1=function(){return(Bd=b._emscripten_bind_btVector3_op_sub_1=b.asm.lb).apply(null,arguments)},Cd=b._emscripten_bind_btVector3___destroy___0=function(){return(Cd=b._emscripten_bind_btVector3___destroy___0=b.asm.mb).apply(null,arguments)},Dd=b._emscripten_bind_btQuadWord_x_0=function(){return(Dd=b._emscripten_bind_btQuadWord_x_0=b.asm.nb).apply(null,arguments)},Ed=b._emscripten_bind_btQuadWord_y_0=\nfunction(){return(Ed=b._emscripten_bind_btQuadWord_y_0=b.asm.ob).apply(null,arguments)},Fd=b._emscripten_bind_btQuadWord_z_0=function(){return(Fd=b._emscripten_bind_btQuadWord_z_0=b.asm.pb).apply(null,arguments)},Gd=b._emscripten_bind_btQuadWord_w_0=function(){return(Gd=b._emscripten_bind_btQuadWord_w_0=b.asm.qb).apply(null,arguments)},Hd=b._emscripten_bind_btQuadWord_setX_1=function(){return(Hd=b._emscripten_bind_btQuadWord_setX_1=b.asm.rb).apply(null,arguments)},Id=b._emscripten_bind_btQuadWord_setY_1=\nfunction(){return(Id=b._emscripten_bind_btQuadWord_setY_1=b.asm.sb).apply(null,arguments)},Jd=b._emscripten_bind_btQuadWord_setZ_1=function(){return(Jd=b._emscripten_bind_btQuadWord_setZ_1=b.asm.tb).apply(null,arguments)},Kd=b._emscripten_bind_btQuadWord_setW_1=function(){return(Kd=b._emscripten_bind_btQuadWord_setW_1=b.asm.ub).apply(null,arguments)},Ld=b._emscripten_bind_btQuadWord___destroy___0=function(){return(Ld=b._emscripten_bind_btQuadWord___destroy___0=b.asm.vb).apply(null,arguments)},Md=\nb._emscripten_bind_btMotionState_getWorldTransform_1=function(){return(Md=b._emscripten_bind_btMotionState_getWorldTransform_1=b.asm.wb).apply(null,arguments)},Nd=b._emscripten_bind_btMotionState_setWorldTransform_1=function(){return(Nd=b._emscripten_bind_btMotionState_setWorldTransform_1=b.asm.xb).apply(null,arguments)},Od=b._emscripten_bind_btMotionState___destroy___0=function(){return(Od=b._emscripten_bind_btMotionState___destroy___0=b.asm.yb).apply(null,arguments)},Pd=b._emscripten_bind_RayResultCallback_hasHit_0=\nfunction(){return(Pd=b._emscripten_bind_RayResultCallback_hasHit_0=b.asm.zb).apply(null,arguments)},Qd=b._emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=function(){return(Qd=b._emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=b.asm.Ab).apply(null,arguments)},Rd=b._emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=function(){return(Rd=b._emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=b.asm.Bb).apply(null,arguments)},Sd=b._emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=\nfunction(){return(Sd=b._emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=b.asm.Cb).apply(null,arguments)},Td=b._emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=function(){return(Td=b._emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=b.asm.Db).apply(null,arguments)},Ud=b._emscripten_bind_RayResultCallback_get_m_closestHitFraction_0=function(){return(Ud=b._emscripten_bind_RayResultCallback_get_m_closestHitFraction_0=b.asm.Eb).apply(null,arguments)},Vd=b._emscripten_bind_RayResultCallback_set_m_closestHitFraction_1=\nfunction(){return(Vd=b._emscripten_bind_RayResultCallback_set_m_closestHitFraction_1=b.asm.Fb).apply(null,arguments)},Wd=b._emscripten_bind_RayResultCallback_get_m_collisionObject_0=function(){return(Wd=b._emscripten_bind_RayResultCallback_get_m_collisionObject_0=b.asm.Gb).apply(null,arguments)},Xd=b._emscripten_bind_RayResultCallback_set_m_collisionObject_1=function(){return(Xd=b._emscripten_bind_RayResultCallback_set_m_collisionObject_1=b.asm.Hb).apply(null,arguments)},Yd=b._emscripten_bind_RayResultCallback_get_m_flags_0=\nfunction(){return(Yd=b._emscripten_bind_RayResultCallback_get_m_flags_0=b.asm.Ib).apply(null,arguments)},Zd=b._emscripten_bind_RayResultCallback_set_m_flags_1=function(){return(Zd=b._emscripten_bind_RayResultCallback_set_m_flags_1=b.asm.Jb).apply(null,arguments)},$d=b._emscripten_bind_RayResultCallback___destroy___0=function(){return($d=b._emscripten_bind_RayResultCallback___destroy___0=b.asm.Kb).apply(null,arguments)},ae=b._emscripten_bind_ContactResultCallback_addSingleResult_7=function(){return(ae=\nb._emscripten_bind_ContactResultCallback_addSingleResult_7=b.asm.Lb).apply(null,arguments)},be=b._emscripten_bind_ContactResultCallback___destroy___0=function(){return(be=b._emscripten_bind_ContactResultCallback___destroy___0=b.asm.Mb).apply(null,arguments)},ce=b._emscripten_bind_ConvexResultCallback_hasHit_0=function(){return(ce=b._emscripten_bind_ConvexResultCallback_hasHit_0=b.asm.Nb).apply(null,arguments)},de=b._emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=function(){return(de=\nb._emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=b.asm.Ob).apply(null,arguments)},ee=b._emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=function(){return(ee=b._emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=b.asm.Pb).apply(null,arguments)},fe=b._emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=function(){return(fe=b._emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=b.asm.Qb).apply(null,arguments)},ge=b._emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=\nfunction(){return(ge=b._emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=b.asm.Rb).apply(null,arguments)},he=b._emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=function(){return(he=b._emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=b.asm.Sb).apply(null,arguments)},ie=b._emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=function(){return(ie=b._emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=b.asm.Tb).apply(null,arguments)},\nje=b._emscripten_bind_ConvexResultCallback___destroy___0=function(){return(je=b._emscripten_bind_ConvexResultCallback___destroy___0=b.asm.Ub).apply(null,arguments)},ke=b._emscripten_bind_btConvexShape_setLocalScaling_1=function(){return(ke=b._emscripten_bind_btConvexShape_setLocalScaling_1=b.asm.Vb).apply(null,arguments)},le=b._emscripten_bind_btConvexShape_getLocalScaling_0=function(){return(le=b._emscripten_bind_btConvexShape_getLocalScaling_0=b.asm.Wb).apply(null,arguments)},me=b._emscripten_bind_btConvexShape_calculateLocalInertia_2=\nfunction(){return(me=b._emscripten_bind_btConvexShape_calculateLocalInertia_2=b.asm.Xb).apply(null,arguments)},ne=b._emscripten_bind_btConvexShape_setMargin_1=function(){return(ne=b._emscripten_bind_btConvexShape_setMargin_1=b.asm.Yb).apply(null,arguments)},oe=b._emscripten_bind_btConvexShape_getMargin_0=function(){return(oe=b._emscripten_bind_btConvexShape_getMargin_0=b.asm.Zb).apply(null,arguments)},pe=b._emscripten_bind_btConvexShape___destroy___0=function(){return(pe=b._emscripten_bind_btConvexShape___destroy___0=\nb.asm._b).apply(null,arguments)},qe=b._emscripten_bind_btCapsuleShape_btCapsuleShape_2=function(){return(qe=b._emscripten_bind_btCapsuleShape_btCapsuleShape_2=b.asm.$b).apply(null,arguments)},re=b._emscripten_bind_btCapsuleShape_setMargin_1=function(){return(re=b._emscripten_bind_btCapsuleShape_setMargin_1=b.asm.ac).apply(null,arguments)},se=b._emscripten_bind_btCapsuleShape_getMargin_0=function(){return(se=b._emscripten_bind_btCapsuleShape_getMargin_0=b.asm.bc).apply(null,arguments)},te=b._emscripten_bind_btCapsuleShape_getUpAxis_0=\nfunction(){return(te=b._emscripten_bind_btCapsuleShape_getUpAxis_0=b.asm.cc).apply(null,arguments)},ue=b._emscripten_bind_btCapsuleShape_getRadius_0=function(){return(ue=b._emscripten_bind_btCapsuleShape_getRadius_0=b.asm.dc).apply(null,arguments)},ve=b._emscripten_bind_btCapsuleShape_getHalfHeight_0=function(){return(ve=b._emscripten_bind_btCapsuleShape_getHalfHeight_0=b.asm.ec).apply(null,arguments)},we=b._emscripten_bind_btCapsuleShape_setLocalScaling_1=function(){return(we=b._emscripten_bind_btCapsuleShape_setLocalScaling_1=\nb.asm.fc).apply(null,arguments)},xe=b._emscripten_bind_btCapsuleShape_getLocalScaling_0=function(){return(xe=b._emscripten_bind_btCapsuleShape_getLocalScaling_0=b.asm.gc).apply(null,arguments)},ye=b._emscripten_bind_btCapsuleShape_calculateLocalInertia_2=function(){return(ye=b._emscripten_bind_btCapsuleShape_calculateLocalInertia_2=b.asm.hc).apply(null,arguments)},ze=b._emscripten_bind_btCapsuleShape___destroy___0=function(){return(ze=b._emscripten_bind_btCapsuleShape___destroy___0=b.asm.ic).apply(null,\narguments)},Ae=b._emscripten_bind_btCylinderShape_btCylinderShape_1=function(){return(Ae=b._emscripten_bind_btCylinderShape_btCylinderShape_1=b.asm.jc).apply(null,arguments)},Be=b._emscripten_bind_btCylinderShape_setMargin_1=function(){return(Be=b._emscripten_bind_btCylinderShape_setMargin_1=b.asm.kc).apply(null,arguments)},Ce=b._emscripten_bind_btCylinderShape_getMargin_0=function(){return(Ce=b._emscripten_bind_btCylinderShape_getMargin_0=b.asm.lc).apply(null,arguments)},De=b._emscripten_bind_btCylinderShape_setLocalScaling_1=\nfunction(){return(De=b._emscripten_bind_btCylinderShape_setLocalScaling_1=b.asm.mc).apply(null,arguments)},Ee=b._emscripten_bind_btCylinderShape_getLocalScaling_0=function(){return(Ee=b._emscripten_bind_btCylinderShape_getLocalScaling_0=b.asm.nc).apply(null,arguments)},Fe=b._emscripten_bind_btCylinderShape_calculateLocalInertia_2=function(){return(Fe=b._emscripten_bind_btCylinderShape_calculateLocalInertia_2=b.asm.oc).apply(null,arguments)},Ge=b._emscripten_bind_btCylinderShape___destroy___0=function(){return(Ge=\nb._emscripten_bind_btCylinderShape___destroy___0=b.asm.pc).apply(null,arguments)},He=b._emscripten_bind_btConeShape_btConeShape_2=function(){return(He=b._emscripten_bind_btConeShape_btConeShape_2=b.asm.qc).apply(null,arguments)},Ie=b._emscripten_bind_btConeShape_setLocalScaling_1=function(){return(Ie=b._emscripten_bind_btConeShape_setLocalScaling_1=b.asm.rc).apply(null,arguments)},Je=b._emscripten_bind_btConeShape_getLocalScaling_0=function(){return(Je=b._emscripten_bind_btConeShape_getLocalScaling_0=\nb.asm.sc).apply(null,arguments)},Ke=b._emscripten_bind_btConeShape_calculateLocalInertia_2=function(){return(Ke=b._emscripten_bind_btConeShape_calculateLocalInertia_2=b.asm.tc).apply(null,arguments)},Le=b._emscripten_bind_btConeShape___destroy___0=function(){return(Le=b._emscripten_bind_btConeShape___destroy___0=b.asm.uc).apply(null,arguments)},Me=b._emscripten_bind_btStridingMeshInterface_setScaling_1=function(){return(Me=b._emscripten_bind_btStridingMeshInterface_setScaling_1=b.asm.vc).apply(null,\narguments)},Ne=b._emscripten_bind_btStridingMeshInterface___destroy___0=function(){return(Ne=b._emscripten_bind_btStridingMeshInterface___destroy___0=b.asm.wc).apply(null,arguments)},Oe=b._emscripten_bind_btTriangleMeshShape_setLocalScaling_1=function(){return(Oe=b._emscripten_bind_btTriangleMeshShape_setLocalScaling_1=b.asm.xc).apply(null,arguments)},Pe=b._emscripten_bind_btTriangleMeshShape_getLocalScaling_0=function(){return(Pe=b._emscripten_bind_btTriangleMeshShape_getLocalScaling_0=b.asm.yc).apply(null,\narguments)},Qe=b._emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=function(){return(Qe=b._emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=b.asm.zc).apply(null,arguments)},Re=b._emscripten_bind_btTriangleMeshShape___destroy___0=function(){return(Re=b._emscripten_bind_btTriangleMeshShape___destroy___0=b.asm.Ac).apply(null,arguments)},Se=b._emscripten_bind_btPrimitiveManagerBase_is_trimesh_0=function(){return(Se=b._emscripten_bind_btPrimitiveManagerBase_is_trimesh_0=b.asm.Bc).apply(null,\narguments)},Te=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_count_0=function(){return(Te=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_count_0=b.asm.Cc).apply(null,arguments)},Ue=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_box_2=function(){return(Ue=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_box_2=b.asm.Dc).apply(null,arguments)},Ve=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_triangle_2=function(){return(Ve=b._emscripten_bind_btPrimitiveManagerBase_get_primitive_triangle_2=\nb.asm.Ec).apply(null,arguments)},We=b._emscripten_bind_btPrimitiveManagerBase___destroy___0=function(){return(We=b._emscripten_bind_btPrimitiveManagerBase___destroy___0=b.asm.Fc).apply(null,arguments)},Xe=b._emscripten_bind_btGImpactShapeInterface_updateBound_0=function(){return(Xe=b._emscripten_bind_btGImpactShapeInterface_updateBound_0=b.asm.Gc).apply(null,arguments)},Ye=b._emscripten_bind_btGImpactShapeInterface_postUpdate_0=function(){return(Ye=b._emscripten_bind_btGImpactShapeInterface_postUpdate_0=\nb.asm.Hc).apply(null,arguments)},Ze=b._emscripten_bind_btGImpactShapeInterface_getShapeType_0=function(){return(Ze=b._emscripten_bind_btGImpactShapeInterface_getShapeType_0=b.asm.Ic).apply(null,arguments)},$e=b._emscripten_bind_btGImpactShapeInterface_getName_0=function(){return($e=b._emscripten_bind_btGImpactShapeInterface_getName_0=b.asm.Jc).apply(null,arguments)},af=b._emscripten_bind_btGImpactShapeInterface_getGImpactShapeType_0=function(){return(af=b._emscripten_bind_btGImpactShapeInterface_getGImpactShapeType_0=\nb.asm.Kc).apply(null,arguments)},bf=b._emscripten_bind_btGImpactShapeInterface_getPrimitiveManager_0=function(){return(bf=b._emscripten_bind_btGImpactShapeInterface_getPrimitiveManager_0=b.asm.Lc).apply(null,arguments)},cf=b._emscripten_bind_btGImpactShapeInterface_getNumChildShapes_0=function(){return(cf=b._emscripten_bind_btGImpactShapeInterface_getNumChildShapes_0=b.asm.Mc).apply(null,arguments)},df=b._emscripten_bind_btGImpactShapeInterface_childrenHasTransform_0=function(){return(df=b._emscripten_bind_btGImpactShapeInterface_childrenHasTransform_0=\nb.asm.Nc).apply(null,arguments)},ef=b._emscripten_bind_btGImpactShapeInterface_needsRetrieveTriangles_0=function(){return(ef=b._emscripten_bind_btGImpactShapeInterface_needsRetrieveTriangles_0=b.asm.Oc).apply(null,arguments)},ff=b._emscripten_bind_btGImpactShapeInterface_needsRetrieveTetrahedrons_0=function(){return(ff=b._emscripten_bind_btGImpactShapeInterface_needsRetrieveTetrahedrons_0=b.asm.Pc).apply(null,arguments)},gf=b._emscripten_bind_btGImpactShapeInterface_getBulletTriangle_2=function(){return(gf=\nb._emscripten_bind_btGImpactShapeInterface_getBulletTriangle_2=b.asm.Qc).apply(null,arguments)},hf=b._emscripten_bind_btGImpactShapeInterface_getBulletTetrahedron_2=function(){return(hf=b._emscripten_bind_btGImpactShapeInterface_getBulletTetrahedron_2=b.asm.Rc).apply(null,arguments)},jf=b._emscripten_bind_btGImpactShapeInterface_getChildShape_1=function(){return(jf=b._emscripten_bind_btGImpactShapeInterface_getChildShape_1=b.asm.Sc).apply(null,arguments)},kf=b._emscripten_bind_btGImpactShapeInterface_getChildTransform_1=\nfunction(){return(kf=b._emscripten_bind_btGImpactShapeInterface_getChildTransform_1=b.asm.Tc).apply(null,arguments)},lf=b._emscripten_bind_btGImpactShapeInterface_setChildTransform_2=function(){return(lf=b._emscripten_bind_btGImpactShapeInterface_setChildTransform_2=b.asm.Uc).apply(null,arguments)},mf=b._emscripten_bind_btGImpactShapeInterface_setLocalScaling_1=function(){return(mf=b._emscripten_bind_btGImpactShapeInterface_setLocalScaling_1=b.asm.Vc).apply(null,arguments)},nf=b._emscripten_bind_btGImpactShapeInterface_getLocalScaling_0=\nfunction(){return(nf=b._emscripten_bind_btGImpactShapeInterface_getLocalScaling_0=b.asm.Wc).apply(null,arguments)},of=b._emscripten_bind_btGImpactShapeInterface_calculateLocalInertia_2=function(){return(of=b._emscripten_bind_btGImpactShapeInterface_calculateLocalInertia_2=b.asm.Xc).apply(null,arguments)},pf=b._emscripten_bind_btGImpactShapeInterface___destroy___0=function(){return(pf=b._emscripten_bind_btGImpactShapeInterface___destroy___0=b.asm.Yc).apply(null,arguments)},qf=b._emscripten_bind_btActivatingCollisionAlgorithm___destroy___0=\nfunction(){return(qf=b._emscripten_bind_btActivatingCollisionAlgorithm___destroy___0=b.asm.Zc).apply(null,arguments)},rf=b._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=function(){return(rf=b._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=b.asm._c).apply(null,arguments)},sf=b._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=function(){return(sf=b._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=\nb.asm.$c).apply(null,arguments)},tf=b._emscripten_bind_btDefaultCollisionConfiguration___destroy___0=function(){return(tf=b._emscripten_bind_btDefaultCollisionConfiguration___destroy___0=b.asm.ad).apply(null,arguments)},uf=b._emscripten_bind_btDispatcher_getNumManifolds_0=function(){return(uf=b._emscripten_bind_btDispatcher_getNumManifolds_0=b.asm.bd).apply(null,arguments)},vf=b._emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=function(){return(vf=b._emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=\nb.asm.cd).apply(null,arguments)},wf=b._emscripten_bind_btDispatcher___destroy___0=function(){return(wf=b._emscripten_bind_btDispatcher___destroy___0=b.asm.dd).apply(null,arguments)},xf=b._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=function(){return(xf=b._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=b.asm.ed).apply(null,arguments)},yf=b._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=function(){return(yf=b._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=\nb.asm.fd).apply(null,arguments)},zf=b._emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=function(){return(zf=b._emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=b.asm.gd).apply(null,arguments)},Af=b._emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=function(){return(Af=b._emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=b.asm.hd).apply(null,arguments)},Bf=b._emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=function(){return(Bf=b._emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=\nb.asm.id).apply(null,arguments)},Cf=b._emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=function(){return(Cf=b._emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=b.asm.jd).apply(null,arguments)},Df=b._emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0=function(){return(Df=b._emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0=b.asm.kd).apply(null,arguments)},Ef=b._emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=function(){return(Ef=b._emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=\nb.asm.ld).apply(null,arguments)},Ff=b._emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=function(){return(Ff=b._emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=b.asm.md).apply(null,arguments)},Gf=b._emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=function(){return(Gf=b._emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=b.asm.nd).apply(null,arguments)},Hf=b._emscripten_bind_btGeneric6DofConstraint_getParam_2=function(){return(Hf=\nb._emscripten_bind_btGeneric6DofConstraint_getParam_2=b.asm.od).apply(null,arguments)},If=b._emscripten_bind_btGeneric6DofConstraint_setParam_3=function(){return(If=b._emscripten_bind_btGeneric6DofConstraint_setParam_3=b.asm.pd).apply(null,arguments)},Jf=b._emscripten_bind_btGeneric6DofConstraint___destroy___0=function(){return(Jf=b._emscripten_bind_btGeneric6DofConstraint___destroy___0=b.asm.qd).apply(null,arguments)},Kf=b._emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=function(){return(Kf=\nb._emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=b.asm.rd).apply(null,arguments)},Lf=b._emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=function(){return(Lf=b._emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=b.asm.sd).apply(null,arguments)},Mf=b._emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=function(){return(Mf=b._emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=b.asm.td).apply(null,arguments)},Nf=b._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=\nfunction(){return(Nf=b._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=b.asm.ud).apply(null,arguments)},Of=b._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=function(){return(Of=b._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=b.asm.vd).apply(null,arguments)},Pf=b._emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=function(){return(Pf=b._emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=b.asm.wd).apply(null,arguments)},Qf=b._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=\nfunction(){return(Qf=b._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=b.asm.xd).apply(null,arguments)},Rf=b._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=function(){return(Rf=b._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=b.asm.yd).apply(null,arguments)},Sf=b._emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=function(){return(Sf=b._emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=b.asm.zd).apply(null,arguments)},Tf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=\nfunction(){return(Tf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=b.asm.Ad).apply(null,arguments)},Uf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=function(){return(Uf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=b.asm.Bd).apply(null,arguments)},Vf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=function(){return(Vf=b._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=b.asm.Cd).apply(null,arguments)},Wf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1=\nfunction(){return(Wf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1=b.asm.Dd).apply(null,arguments)},Xf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1=function(){return(Xf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1=b.asm.Ed).apply(null,arguments)},Yf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1=function(){return(Yf=b._emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1=b.asm.Fd).apply(null,\narguments)},Zf=b._emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=function(){return(Zf=b._emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=b.asm.Gd).apply(null,arguments)},$f=b._emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=function(){return($f=b._emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=b.asm.Hd).apply(null,arguments)},ag=b._emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=function(){return(ag=b._emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=b.asm.Id).apply(null,\narguments)},bg=b._emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=function(){return(bg=b._emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=b.asm.Jd).apply(null,arguments)},cg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=function(){return(cg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=b.asm.Kd).apply(null,arguments)},dg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=function(){return(dg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=\nb.asm.Ld).apply(null,arguments)},eg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=function(){return(eg=b._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=b.asm.Md).apply(null,arguments)},fg=b._emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1=function(){return(fg=b._emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1=b.asm.Nd).apply(null,arguments)},gg=b._emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=function(){return(gg=b._emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=\nb.asm.Od).apply(null,arguments)},hg=b._emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=function(){return(hg=b._emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=b.asm.Pd).apply(null,arguments)},ig=b._emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=function(){return(ig=b._emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=b.asm.Qd).apply(null,arguments)},jg=b._emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=function(){return(jg=b._emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=\nb.asm.Rd).apply(null,arguments)},kg=b._emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1=function(){return(kg=b._emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1=b.asm.Sd).apply(null,arguments)},lg=b._emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1=function(){return(lg=b._emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1=b.asm.Td).apply(null,arguments)},mg=b._emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0=function(){return(mg=b._emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0=\nb.asm.Ud).apply(null,arguments)},ng=b._emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0=function(){return(ng=b._emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0=b.asm.Vd).apply(null,arguments)},og=b._emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3=function(){return(og=b._emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3=b.asm.Wd).apply(null,arguments)},pg=b._emscripten_bind_btDiscreteDynamicsWorld_addAction_1=function(){return(pg=b._emscripten_bind_btDiscreteDynamicsWorld_addAction_1=\nb.asm.Xd).apply(null,arguments)},qg=b._emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=function(){return(qg=b._emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=b.asm.Yd).apply(null,arguments)},rg=b._emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=function(){return(rg=b._emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=b.asm.Zd).apply(null,arguments)},sg=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_1=function(){return(sg=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_1=\nb.asm._d).apply(null,arguments)},tg=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_2=function(){return(tg=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_2=b.asm.$d).apply(null,arguments)},ug=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_3=function(){return(ug=b._emscripten_bind_btDiscreteDynamicsWorld_setInternalTickCallback_3=b.asm.ae).apply(null,arguments)},vg=b._emscripten_bind_btDiscreteDynamicsWorld___destroy___0=function(){return(vg=\nb._emscripten_bind_btDiscreteDynamicsWorld___destroy___0=b.asm.be).apply(null,arguments)},wg=b._emscripten_bind_btVehicleRaycaster_castRay_3=function(){return(wg=b._emscripten_bind_btVehicleRaycaster_castRay_3=b.asm.ce).apply(null,arguments)},xg=b._emscripten_bind_btVehicleRaycaster___destroy___0=function(){return(xg=b._emscripten_bind_btVehicleRaycaster___destroy___0=b.asm.de).apply(null,arguments)},yg=b._emscripten_bind_btActionInterface_updateAction_2=function(){return(yg=b._emscripten_bind_btActionInterface_updateAction_2=\nb.asm.ee).apply(null,arguments)},zg=b._emscripten_bind_btActionInterface___destroy___0=function(){return(zg=b._emscripten_bind_btActionInterface___destroy___0=b.asm.fe).apply(null,arguments)},Ag=b._emscripten_bind_btGhostObject_btGhostObject_0=function(){return(Ag=b._emscripten_bind_btGhostObject_btGhostObject_0=b.asm.ge).apply(null,arguments)},Bg=b._emscripten_bind_btGhostObject_getNumOverlappingObjects_0=function(){return(Bg=b._emscripten_bind_btGhostObject_getNumOverlappingObjects_0=b.asm.he).apply(null,\narguments)},Cg=b._emscripten_bind_btGhostObject_getOverlappingObject_1=function(){return(Cg=b._emscripten_bind_btGhostObject_getOverlappingObject_1=b.asm.ie).apply(null,arguments)},Dg=b._emscripten_bind_btGhostObject_setAnisotropicFriction_2=function(){return(Dg=b._emscripten_bind_btGhostObject_setAnisotropicFriction_2=b.asm.je).apply(null,arguments)},Eg=b._emscripten_bind_btGhostObject_getCollisionShape_0=function(){return(Eg=b._emscripten_bind_btGhostObject_getCollisionShape_0=b.asm.ke).apply(null,\narguments)},Fg=b._emscripten_bind_btGhostObject_setContactProcessingThreshold_1=function(){return(Fg=b._emscripten_bind_btGhostObject_setContactProcessingThreshold_1=b.asm.le).apply(null,arguments)},Gg=b._emscripten_bind_btGhostObject_setActivationState_1=function(){return(Gg=b._emscripten_bind_btGhostObject_setActivationState_1=b.asm.me).apply(null,arguments)},Hg=b._emscripten_bind_btGhostObject_forceActivationState_1=function(){return(Hg=b._emscripten_bind_btGhostObject_forceActivationState_1=b.asm.ne).apply(null,\narguments)},Ig=b._emscripten_bind_btGhostObject_activate_0=function(){return(Ig=b._emscripten_bind_btGhostObject_activate_0=b.asm.oe).apply(null,arguments)},Jg=b._emscripten_bind_btGhostObject_activate_1=function(){return(Jg=b._emscripten_bind_btGhostObject_activate_1=b.asm.pe).apply(null,arguments)},Kg=b._emscripten_bind_btGhostObject_isActive_0=function(){return(Kg=b._emscripten_bind_btGhostObject_isActive_0=b.asm.qe).apply(null,arguments)},Lg=b._emscripten_bind_btGhostObject_isKinematicObject_0=\nfunction(){return(Lg=b._emscripten_bind_btGhostObject_isKinematicObject_0=b.asm.re).apply(null,arguments)},Mg=b._emscripten_bind_btGhostObject_isStaticObject_0=function(){return(Mg=b._emscripten_bind_btGhostObject_isStaticObject_0=b.asm.se).apply(null,arguments)},Ng=b._emscripten_bind_btGhostObject_isStaticOrKinematicObject_0=function(){return(Ng=b._emscripten_bind_btGhostObject_isStaticOrKinematicObject_0=b.asm.te).apply(null,arguments)},Og=b._emscripten_bind_btGhostObject_getRestitution_0=function(){return(Og=\nb._emscripten_bind_btGhostObject_getRestitution_0=b.asm.ue).apply(null,arguments)},Pg=b._emscripten_bind_btGhostObject_getFriction_0=function(){return(Pg=b._emscripten_bind_btGhostObject_getFriction_0=b.asm.ve).apply(null,arguments)},Qg=b._emscripten_bind_btGhostObject_getRollingFriction_0=function(){return(Qg=b._emscripten_bind_btGhostObject_getRollingFriction_0=b.asm.we).apply(null,arguments)},Rg=b._emscripten_bind_btGhostObject_setRestitution_1=function(){return(Rg=b._emscripten_bind_btGhostObject_setRestitution_1=\nb.asm.xe).apply(null,arguments)},Sg=b._emscripten_bind_btGhostObject_setFriction_1=function(){return(Sg=b._emscripten_bind_btGhostObject_setFriction_1=b.asm.ye).apply(null,arguments)},Tg=b._emscripten_bind_btGhostObject_setRollingFriction_1=function(){return(Tg=b._emscripten_bind_btGhostObject_setRollingFriction_1=b.asm.ze).apply(null,arguments)},Ug=b._emscripten_bind_btGhostObject_getWorldTransform_0=function(){return(Ug=b._emscripten_bind_btGhostObject_getWorldTransform_0=b.asm.Ae).apply(null,arguments)},\nVg=b._emscripten_bind_btGhostObject_getCollisionFlags_0=function(){return(Vg=b._emscripten_bind_btGhostObject_getCollisionFlags_0=b.asm.Be).apply(null,arguments)},Wg=b._emscripten_bind_btGhostObject_setCollisionFlags_1=function(){return(Wg=b._emscripten_bind_btGhostObject_setCollisionFlags_1=b.asm.Ce).apply(null,arguments)},Xg=b._emscripten_bind_btGhostObject_setWorldTransform_1=function(){return(Xg=b._emscripten_bind_btGhostObject_setWorldTransform_1=b.asm.De).apply(null,arguments)},Yg=b._emscripten_bind_btGhostObject_setCollisionShape_1=\nfunction(){return(Yg=b._emscripten_bind_btGhostObject_setCollisionShape_1=b.asm.Ee).apply(null,arguments)},Zg=b._emscripten_bind_btGhostObject_setCcdMotionThreshold_1=function(){return(Zg=b._emscripten_bind_btGhostObject_setCcdMotionThreshold_1=b.asm.Fe).apply(null,arguments)},$g=b._emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=function(){return($g=b._emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=b.asm.Ge).apply(null,arguments)},ah=b._emscripten_bind_btGhostObject_getUserIndex_0=\nfunction(){return(ah=b._emscripten_bind_btGhostObject_getUserIndex_0=b.asm.He).apply(null,arguments)},bh=b._emscripten_bind_btGhostObject_setUserIndex_1=function(){return(bh=b._emscripten_bind_btGhostObject_setUserIndex_1=b.asm.Ie).apply(null,arguments)},ch=b._emscripten_bind_btGhostObject_getUserPointer_0=function(){return(ch=b._emscripten_bind_btGhostObject_getUserPointer_0=b.asm.Je).apply(null,arguments)},dh=b._emscripten_bind_btGhostObject_setUserPointer_1=function(){return(dh=b._emscripten_bind_btGhostObject_setUserPointer_1=\nb.asm.Ke).apply(null,arguments)},eh=b._emscripten_bind_btGhostObject_getBroadphaseHandle_0=function(){return(eh=b._emscripten_bind_btGhostObject_getBroadphaseHandle_0=b.asm.Le).apply(null,arguments)},fh=b._emscripten_bind_btGhostObject___destroy___0=function(){return(fh=b._emscripten_bind_btGhostObject___destroy___0=b.asm.Me).apply(null,arguments)},gh=b._emscripten_bind_btSoftBodySolver___destroy___0=function(){return(gh=b._emscripten_bind_btSoftBodySolver___destroy___0=b.asm.Ne).apply(null,arguments)},\nhh=b._emscripten_bind_VoidPtr___destroy___0=function(){return(hh=b._emscripten_bind_VoidPtr___destroy___0=b.asm.Oe).apply(null,arguments)},ih=b._emscripten_bind_DebugDrawer_DebugDrawer_0=function(){return(ih=b._emscripten_bind_DebugDrawer_DebugDrawer_0=b.asm.Pe).apply(null,arguments)},jh=b._emscripten_bind_DebugDrawer_drawLine_3=function(){return(jh=b._emscripten_bind_DebugDrawer_drawLine_3=b.asm.Qe).apply(null,arguments)},kh=b._emscripten_bind_DebugDrawer_drawContactPoint_5=function(){return(kh=\nb._emscripten_bind_DebugDrawer_drawContactPoint_5=b.asm.Re).apply(null,arguments)},lh=b._emscripten_bind_DebugDrawer_reportErrorWarning_1=function(){return(lh=b._emscripten_bind_DebugDrawer_reportErrorWarning_1=b.asm.Se).apply(null,arguments)},mh=b._emscripten_bind_DebugDrawer_draw3dText_2=function(){return(mh=b._emscripten_bind_DebugDrawer_draw3dText_2=b.asm.Te).apply(null,arguments)},nh=b._emscripten_bind_DebugDrawer_setDebugMode_1=function(){return(nh=b._emscripten_bind_DebugDrawer_setDebugMode_1=\nb.asm.Ue).apply(null,arguments)},oh=b._emscripten_bind_DebugDrawer_getDebugMode_0=function(){return(oh=b._emscripten_bind_DebugDrawer_getDebugMode_0=b.asm.Ve).apply(null,arguments)},ph=b._emscripten_bind_DebugDrawer___destroy___0=function(){return(ph=b._emscripten_bind_DebugDrawer___destroy___0=b.asm.We).apply(null,arguments)},qh=b._emscripten_bind_btVector4_btVector4_0=function(){return(qh=b._emscripten_bind_btVector4_btVector4_0=b.asm.Xe).apply(null,arguments)},rh=b._emscripten_bind_btVector4_btVector4_4=\nfunction(){return(rh=b._emscripten_bind_btVector4_btVector4_4=b.asm.Ye).apply(null,arguments)},sh=b._emscripten_bind_btVector4_w_0=function(){return(sh=b._emscripten_bind_btVector4_w_0=b.asm.Ze).apply(null,arguments)},th=b._emscripten_bind_btVector4_setValue_4=function(){return(th=b._emscripten_bind_btVector4_setValue_4=b.asm._e).apply(null,arguments)},uh=b._emscripten_bind_btVector4_length_0=function(){return(uh=b._emscripten_bind_btVector4_length_0=b.asm.$e).apply(null,arguments)},vh=b._emscripten_bind_btVector4_x_0=\nfunction(){return(vh=b._emscripten_bind_btVector4_x_0=b.asm.af).apply(null,arguments)},wh=b._emscripten_bind_btVector4_y_0=function(){return(wh=b._emscripten_bind_btVector4_y_0=b.asm.bf).apply(null,arguments)},xh=b._emscripten_bind_btVector4_z_0=function(){return(xh=b._emscripten_bind_btVector4_z_0=b.asm.cf).apply(null,arguments)},yh=b._emscripten_bind_btVector4_setX_1=function(){return(yh=b._emscripten_bind_btVector4_setX_1=b.asm.df).apply(null,arguments)},zh=b._emscripten_bind_btVector4_setY_1=\nfunction(){return(zh=b._emscripten_bind_btVector4_setY_1=b.asm.ef).apply(null,arguments)},Ah=b._emscripten_bind_btVector4_setZ_1=function(){return(Ah=b._emscripten_bind_btVector4_setZ_1=b.asm.ff).apply(null,arguments)},Bh=b._emscripten_bind_btVector4_normalize_0=function(){return(Bh=b._emscripten_bind_btVector4_normalize_0=b.asm.gf).apply(null,arguments)},Ch=b._emscripten_bind_btVector4_rotate_2=function(){return(Ch=b._emscripten_bind_btVector4_rotate_2=b.asm.hf).apply(null,arguments)},Dh=b._emscripten_bind_btVector4_dot_1=\nfunction(){return(Dh=b._emscripten_bind_btVector4_dot_1=b.asm.jf).apply(null,arguments)},Eh=b._emscripten_bind_btVector4_op_mul_1=function(){return(Eh=b._emscripten_bind_btVector4_op_mul_1=b.asm.kf).apply(null,arguments)},Fh=b._emscripten_bind_btVector4_op_add_1=function(){return(Fh=b._emscripten_bind_btVector4_op_add_1=b.asm.lf).apply(null,arguments)},Gh=b._emscripten_bind_btVector4_op_sub_1=function(){return(Gh=b._emscripten_bind_btVector4_op_sub_1=b.asm.mf).apply(null,arguments)},Hh=b._emscripten_bind_btVector4___destroy___0=\nfunction(){return(Hh=b._emscripten_bind_btVector4___destroy___0=b.asm.nf).apply(null,arguments)},Ih=b._emscripten_bind_btQuaternion_btQuaternion_4=function(){return(Ih=b._emscripten_bind_btQuaternion_btQuaternion_4=b.asm.of).apply(null,arguments)},Jh=b._emscripten_bind_btQuaternion_setValue_4=function(){return(Jh=b._emscripten_bind_btQuaternion_setValue_4=b.asm.pf).apply(null,arguments)},Kh=b._emscripten_bind_btQuaternion_setEulerZYX_3=function(){return(Kh=b._emscripten_bind_btQuaternion_setEulerZYX_3=\nb.asm.qf).apply(null,arguments)},Lh=b._emscripten_bind_btQuaternion_setRotation_2=function(){return(Lh=b._emscripten_bind_btQuaternion_setRotation_2=b.asm.rf).apply(null,arguments)},Mh=b._emscripten_bind_btQuaternion_normalize_0=function(){return(Mh=b._emscripten_bind_btQuaternion_normalize_0=b.asm.sf).apply(null,arguments)},Nh=b._emscripten_bind_btQuaternion_length2_0=function(){return(Nh=b._emscripten_bind_btQuaternion_length2_0=b.asm.tf).apply(null,arguments)},Oh=b._emscripten_bind_btQuaternion_length_0=\nfunction(){return(Oh=b._emscripten_bind_btQuaternion_length_0=b.asm.uf).apply(null,arguments)},Ph=b._emscripten_bind_btQuaternion_dot_1=function(){return(Ph=b._emscripten_bind_btQuaternion_dot_1=b.asm.vf).apply(null,arguments)},Qh=b._emscripten_bind_btQuaternion_normalized_0=function(){return(Qh=b._emscripten_bind_btQuaternion_normalized_0=b.asm.wf).apply(null,arguments)},Rh=b._emscripten_bind_btQuaternion_getAxis_0=function(){return(Rh=b._emscripten_bind_btQuaternion_getAxis_0=b.asm.xf).apply(null,\narguments)},Sh=b._emscripten_bind_btQuaternion_inverse_0=function(){return(Sh=b._emscripten_bind_btQuaternion_inverse_0=b.asm.yf).apply(null,arguments)},Th=b._emscripten_bind_btQuaternion_getAngle_0=function(){return(Th=b._emscripten_bind_btQuaternion_getAngle_0=b.asm.zf).apply(null,arguments)},Uh=b._emscripten_bind_btQuaternion_getAngleShortestPath_0=function(){return(Uh=b._emscripten_bind_btQuaternion_getAngleShortestPath_0=b.asm.Af).apply(null,arguments)},Vh=b._emscripten_bind_btQuaternion_angle_1=\nfunction(){return(Vh=b._emscripten_bind_btQuaternion_angle_1=b.asm.Bf).apply(null,arguments)},Wh=b._emscripten_bind_btQuaternion_angleShortestPath_1=function(){return(Wh=b._emscripten_bind_btQuaternion_angleShortestPath_1=b.asm.Cf).apply(null,arguments)},Xh=b._emscripten_bind_btQuaternion_op_add_1=function(){return(Xh=b._emscripten_bind_btQuaternion_op_add_1=b.asm.Df).apply(null,arguments)},Yh=b._emscripten_bind_btQuaternion_op_sub_1=function(){return(Yh=b._emscripten_bind_btQuaternion_op_sub_1=b.asm.Ef).apply(null,\narguments)},Zh=b._emscripten_bind_btQuaternion_op_mul_1=function(){return(Zh=b._emscripten_bind_btQuaternion_op_mul_1=b.asm.Ff).apply(null,arguments)},$h=b._emscripten_bind_btQuaternion_op_mulq_1=function(){return($h=b._emscripten_bind_btQuaternion_op_mulq_1=b.asm.Gf).apply(null,arguments)},ai=b._emscripten_bind_btQuaternion_op_div_1=function(){return(ai=b._emscripten_bind_btQuaternion_op_div_1=b.asm.Hf).apply(null,arguments)},bi=b._emscripten_bind_btQuaternion_x_0=function(){return(bi=b._emscripten_bind_btQuaternion_x_0=\nb.asm.If).apply(null,arguments)},ci=b._emscripten_bind_btQuaternion_y_0=function(){return(ci=b._emscripten_bind_btQuaternion_y_0=b.asm.Jf).apply(null,arguments)},di=b._emscripten_bind_btQuaternion_z_0=function(){return(di=b._emscripten_bind_btQuaternion_z_0=b.asm.Kf).apply(null,arguments)},ei=b._emscripten_bind_btQuaternion_w_0=function(){return(ei=b._emscripten_bind_btQuaternion_w_0=b.asm.Lf).apply(null,arguments)},fi=b._emscripten_bind_btQuaternion_setX_1=function(){return(fi=b._emscripten_bind_btQuaternion_setX_1=\nb.asm.Mf).apply(null,arguments)},gi=b._emscripten_bind_btQuaternion_setY_1=function(){return(gi=b._emscripten_bind_btQuaternion_setY_1=b.asm.Nf).apply(null,arguments)},hi=b._emscripten_bind_btQuaternion_setZ_1=function(){return(hi=b._emscripten_bind_btQuaternion_setZ_1=b.asm.Of).apply(null,arguments)},ii=b._emscripten_bind_btQuaternion_setW_1=function(){return(ii=b._emscripten_bind_btQuaternion_setW_1=b.asm.Pf).apply(null,arguments)},ji=b._emscripten_bind_btQuaternion___destroy___0=function(){return(ji=\nb._emscripten_bind_btQuaternion___destroy___0=b.asm.Qf).apply(null,arguments)},ki=b._emscripten_bind_btMatrix3x3_setEulerZYX_3=function(){return(ki=b._emscripten_bind_btMatrix3x3_setEulerZYX_3=b.asm.Rf).apply(null,arguments)},li=b._emscripten_bind_btMatrix3x3_getRotation_1=function(){return(li=b._emscripten_bind_btMatrix3x3_getRotation_1=b.asm.Sf).apply(null,arguments)},mi=b._emscripten_bind_btMatrix3x3_getRow_1=function(){return(mi=b._emscripten_bind_btMatrix3x3_getRow_1=b.asm.Tf).apply(null,arguments)},\nni=b._emscripten_bind_btMatrix3x3___destroy___0=function(){return(ni=b._emscripten_bind_btMatrix3x3___destroy___0=b.asm.Uf).apply(null,arguments)},oi=b._emscripten_bind_btTransform_btTransform_0=function(){return(oi=b._emscripten_bind_btTransform_btTransform_0=b.asm.Vf).apply(null,arguments)},pi=b._emscripten_bind_btTransform_btTransform_2=function(){return(pi=b._emscripten_bind_btTransform_btTransform_2=b.asm.Wf).apply(null,arguments)},qi=b._emscripten_bind_btTransform_setIdentity_0=function(){return(qi=\nb._emscripten_bind_btTransform_setIdentity_0=b.asm.Xf).apply(null,arguments)},ri=b._emscripten_bind_btTransform_setOrigin_1=function(){return(ri=b._emscripten_bind_btTransform_setOrigin_1=b.asm.Yf).apply(null,arguments)},si=b._emscripten_bind_btTransform_setRotation_1=function(){return(si=b._emscripten_bind_btTransform_setRotation_1=b.asm.Zf).apply(null,arguments)},ti=b._emscripten_bind_btTransform_getOrigin_0=function(){return(ti=b._emscripten_bind_btTransform_getOrigin_0=b.asm._f).apply(null,arguments)},\nui=b._emscripten_bind_btTransform_getRotation_0=function(){return(ui=b._emscripten_bind_btTransform_getRotation_0=b.asm.$f).apply(null,arguments)},vi=b._emscripten_bind_btTransform_getBasis_0=function(){return(vi=b._emscripten_bind_btTransform_getBasis_0=b.asm.ag).apply(null,arguments)},wi=b._emscripten_bind_btTransform_setFromOpenGLMatrix_1=function(){return(wi=b._emscripten_bind_btTransform_setFromOpenGLMatrix_1=b.asm.bg).apply(null,arguments)},xi=b._emscripten_bind_btTransform_inverse_0=function(){return(xi=\nb._emscripten_bind_btTransform_inverse_0=b.asm.cg).apply(null,arguments)},yi=b._emscripten_bind_btTransform_op_mul_1=function(){return(yi=b._emscripten_bind_btTransform_op_mul_1=b.asm.dg).apply(null,arguments)},zi=b._emscripten_bind_btTransform___destroy___0=function(){return(zi=b._emscripten_bind_btTransform___destroy___0=b.asm.eg).apply(null,arguments)},Ai=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=function(){return(Ai=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=\nb.asm.fg).apply(null,arguments)},Bi=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=function(){return(Bi=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=b.asm.gg).apply(null,arguments)},Ci=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=function(){return(Ci=b._emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=b.asm.hg).apply(null,arguments)},Di=b._emscripten_bind_btDefaultMotionState_getWorldTransform_1=function(){return(Di=b._emscripten_bind_btDefaultMotionState_getWorldTransform_1=\nb.asm.ig).apply(null,arguments)},Ei=b._emscripten_bind_btDefaultMotionState_setWorldTransform_1=function(){return(Ei=b._emscripten_bind_btDefaultMotionState_setWorldTransform_1=b.asm.jg).apply(null,arguments)},Fi=b._emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=function(){return(Fi=b._emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=b.asm.kg).apply(null,arguments)},Gi=b._emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=function(){return(Gi=b._emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=\nb.asm.lg).apply(null,arguments)},Hi=b._emscripten_bind_btDefaultMotionState___destroy___0=function(){return(Hi=b._emscripten_bind_btDefaultMotionState___destroy___0=b.asm.mg).apply(null,arguments)},Ii=b._emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0=function(){return(Ii=b._emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0=b.asm.ng).apply(null,arguments)},Ji=b._emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0=function(){return(Ji=b._emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0=\nb.asm.og).apply(null,arguments)},Ki=b._emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0=function(){return(Ki=b._emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0=b.asm.pg).apply(null,arguments)},Li=b._emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=function(){return(Li=b._emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=b.asm.qg).apply(null,arguments)},Mi=b._emscripten_bind_ClosestRayResultCallback_hasHit_0=function(){return(Mi=b._emscripten_bind_ClosestRayResultCallback_hasHit_0=\nb.asm.rg).apply(null,arguments)},Ni=b._emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=function(){return(Ni=b._emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=b.asm.sg).apply(null,arguments)},Oi=b._emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=function(){return(Oi=b._emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=b.asm.tg).apply(null,arguments)},Pi=b._emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=function(){return(Pi=b._emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=\nb.asm.ug).apply(null,arguments)},Qi=b._emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=function(){return(Qi=b._emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=b.asm.vg).apply(null,arguments)},Ri=b._emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=function(){return(Ri=b._emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=b.asm.wg).apply(null,arguments)},Si=b._emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=function(){return(Si=b._emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=\nb.asm.xg).apply(null,arguments)},Ti=b._emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=function(){return(Ti=b._emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=b.asm.yg).apply(null,arguments)},Ui=b._emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=function(){return(Ui=b._emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=b.asm.zg).apply(null,arguments)},Vi=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=function(){return(Vi=\nb._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=b.asm.Ag).apply(null,arguments)},Wi=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=function(){return(Wi=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=b.asm.Bg).apply(null,arguments)},Xi=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=function(){return(Xi=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=b.asm.Cg).apply(null,arguments)},\nYi=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=function(){return(Yi=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=b.asm.Dg).apply(null,arguments)},Zi=b._emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0=function(){return(Zi=b._emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0=b.asm.Eg).apply(null,arguments)},$i=b._emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1=function(){return($i=b._emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1=\nb.asm.Fg).apply(null,arguments)},aj=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=function(){return(aj=b._emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=b.asm.Gg).apply(null,arguments)},bj=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=function(){return(bj=b._emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=b.asm.Hg).apply(null,arguments)},cj=b._emscripten_bind_ClosestRayResultCallback_get_m_flags_0=function(){return(cj=\nb._emscripten_bind_ClosestRayResultCallback_get_m_flags_0=b.asm.Ig).apply(null,arguments)},dj=b._emscripten_bind_ClosestRayResultCallback_set_m_flags_1=function(){return(dj=b._emscripten_bind_ClosestRayResultCallback_set_m_flags_1=b.asm.Jg).apply(null,arguments)},ej=b._emscripten_bind_ClosestRayResultCallback___destroy___0=function(){return(ej=b._emscripten_bind_ClosestRayResultCallback___destroy___0=b.asm.Kg).apply(null,arguments)},fj=b._emscripten_bind_btConstCollisionObjectArray_size_0=function(){return(fj=\nb._emscripten_bind_btConstCollisionObjectArray_size_0=b.asm.Lg).apply(null,arguments)},gj=b._emscripten_bind_btConstCollisionObjectArray_at_1=function(){return(gj=b._emscripten_bind_btConstCollisionObjectArray_at_1=b.asm.Mg).apply(null,arguments)},hj=b._emscripten_bind_btConstCollisionObjectArray___destroy___0=function(){return(hj=b._emscripten_bind_btConstCollisionObjectArray___destroy___0=b.asm.Ng).apply(null,arguments)},ij=b._emscripten_bind_btScalarArray_size_0=function(){return(ij=b._emscripten_bind_btScalarArray_size_0=\nb.asm.Og).apply(null,arguments)},jj=b._emscripten_bind_btScalarArray_at_1=function(){return(jj=b._emscripten_bind_btScalarArray_at_1=b.asm.Pg).apply(null,arguments)},kj=b._emscripten_bind_btScalarArray___destroy___0=function(){return(kj=b._emscripten_bind_btScalarArray___destroy___0=b.asm.Qg).apply(null,arguments)},lj=b._emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2=function(){return(lj=b._emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2=b.asm.Rg).apply(null,\narguments)},mj=b._emscripten_bind_AllHitsRayResultCallback_hasHit_0=function(){return(mj=b._emscripten_bind_AllHitsRayResultCallback_hasHit_0=b.asm.Sg).apply(null,arguments)},nj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0=function(){return(nj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0=b.asm.Tg).apply(null,arguments)},oj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1=function(){return(oj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1=\nb.asm.Ug).apply(null,arguments)},pj=b._emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0=function(){return(pj=b._emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0=b.asm.Vg).apply(null,arguments)},qj=b._emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1=function(){return(qj=b._emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1=b.asm.Wg).apply(null,arguments)},rj=b._emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0=function(){return(rj=b._emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0=\nb.asm.Xg).apply(null,arguments)},sj=b._emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1=function(){return(sj=b._emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1=b.asm.Yg).apply(null,arguments)},tj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0=function(){return(tj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0=b.asm.Zg).apply(null,arguments)},uj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1=function(){return(uj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1=\nb.asm._g).apply(null,arguments)},vj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0=function(){return(vj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0=b.asm.$g).apply(null,arguments)},wj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1=function(){return(wj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1=b.asm.ah).apply(null,arguments)},xj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0=function(){return(xj=b._emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0=\nb.asm.bh).apply(null,arguments)},yj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1=function(){return(yj=b._emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1=b.asm.ch).apply(null,arguments)},zj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0=function(){return(zj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0=b.asm.dh).apply(null,arguments)},Aj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1=function(){return(Aj=\nb._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1=b.asm.eh).apply(null,arguments)},Bj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0=function(){return(Bj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0=b.asm.fh).apply(null,arguments)},Cj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1=function(){return(Cj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1=b.asm.gh).apply(null,arguments)},\nDj=b._emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0=function(){return(Dj=b._emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0=b.asm.hh).apply(null,arguments)},Ej=b._emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1=function(){return(Ej=b._emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1=b.asm.ih).apply(null,arguments)},Fj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0=function(){return(Fj=b._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0=\nb.asm.jh).apply(null,arguments)},Gj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1=function(){return(Gj=b._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1=b.asm.kh).apply(null,arguments)},Hj=b._emscripten_bind_AllHitsRayResultCallback_get_m_flags_0=function(){return(Hj=b._emscripten_bind_AllHitsRayResultCallback_get_m_flags_0=b.asm.lh).apply(null,arguments)},Ij=b._emscripten_bind_AllHitsRayResultCallback_set_m_flags_1=function(){return(Ij=b._emscripten_bind_AllHitsRayResultCallback_set_m_flags_1=\nb.asm.mh).apply(null,arguments)},Jj=b._emscripten_bind_AllHitsRayResultCallback___destroy___0=function(){return(Jj=b._emscripten_bind_AllHitsRayResultCallback___destroy___0=b.asm.nh).apply(null,arguments)},Kj=b._emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=function(){return(Kj=b._emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=b.asm.oh).apply(null,arguments)},Lj=b._emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=function(){return(Lj=b._emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=\nb.asm.ph).apply(null,arguments)},Mj=b._emscripten_bind_btManifoldPoint_getAppliedImpulse_0=function(){return(Mj=b._emscripten_bind_btManifoldPoint_getAppliedImpulse_0=b.asm.qh).apply(null,arguments)},Nj=b._emscripten_bind_btManifoldPoint_getDistance_0=function(){return(Nj=b._emscripten_bind_btManifoldPoint_getDistance_0=b.asm.rh).apply(null,arguments)},Oj=b._emscripten_bind_btManifoldPoint_get_m_localPointA_0=function(){return(Oj=b._emscripten_bind_btManifoldPoint_get_m_localPointA_0=b.asm.sh).apply(null,\narguments)},Pj=b._emscripten_bind_btManifoldPoint_set_m_localPointA_1=function(){return(Pj=b._emscripten_bind_btManifoldPoint_set_m_localPointA_1=b.asm.th).apply(null,arguments)},Qj=b._emscripten_bind_btManifoldPoint_get_m_localPointB_0=function(){return(Qj=b._emscripten_bind_btManifoldPoint_get_m_localPointB_0=b.asm.uh).apply(null,arguments)},Rj=b._emscripten_bind_btManifoldPoint_set_m_localPointB_1=function(){return(Rj=b._emscripten_bind_btManifoldPoint_set_m_localPointB_1=b.asm.vh).apply(null,\narguments)},Sj=b._emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=function(){return(Sj=b._emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=b.asm.wh).apply(null,arguments)},Tj=b._emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=function(){return(Tj=b._emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=b.asm.xh).apply(null,arguments)},Uj=b._emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=function(){return(Uj=b._emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=\nb.asm.yh).apply(null,arguments)},Vj=b._emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=function(){return(Vj=b._emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=b.asm.zh).apply(null,arguments)},Wj=b._emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=function(){return(Wj=b._emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=b.asm.Ah).apply(null,arguments)},Xj=b._emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=function(){return(Xj=b._emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=\nb.asm.Bh).apply(null,arguments)},Yj=b._emscripten_bind_btManifoldPoint_get_m_userPersistentData_0=function(){return(Yj=b._emscripten_bind_btManifoldPoint_get_m_userPersistentData_0=b.asm.Ch).apply(null,arguments)},Zj=b._emscripten_bind_btManifoldPoint_set_m_userPersistentData_1=function(){return(Zj=b._emscripten_bind_btManifoldPoint_set_m_userPersistentData_1=b.asm.Dh).apply(null,arguments)},ak=b._emscripten_bind_btManifoldPoint___destroy___0=function(){return(ak=b._emscripten_bind_btManifoldPoint___destroy___0=\nb.asm.Eh).apply(null,arguments)},bk=b._emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=function(){return(bk=b._emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=b.asm.Fh).apply(null,arguments)},ck=b._emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=function(){return(ck=b._emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=b.asm.Gh).apply(null,arguments)},dk=b._emscripten_bind_ConcreteContactResultCallback___destroy___0=\nfunction(){return(dk=b._emscripten_bind_ConcreteContactResultCallback___destroy___0=b.asm.Hh).apply(null,arguments)},ek=b._emscripten_bind_LocalShapeInfo_get_m_shapePart_0=function(){return(ek=b._emscripten_bind_LocalShapeInfo_get_m_shapePart_0=b.asm.Ih).apply(null,arguments)},fk=b._emscripten_bind_LocalShapeInfo_set_m_shapePart_1=function(){return(fk=b._emscripten_bind_LocalShapeInfo_set_m_shapePart_1=b.asm.Jh).apply(null,arguments)},gk=b._emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=function(){return(gk=\nb._emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=b.asm.Kh).apply(null,arguments)},hk=b._emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=function(){return(hk=b._emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=b.asm.Lh).apply(null,arguments)},ik=b._emscripten_bind_LocalShapeInfo___destroy___0=function(){return(ik=b._emscripten_bind_LocalShapeInfo___destroy___0=b.asm.Mh).apply(null,arguments)},jk=b._emscripten_bind_LocalConvexResult_LocalConvexResult_5=function(){return(jk=b._emscripten_bind_LocalConvexResult_LocalConvexResult_5=\nb.asm.Nh).apply(null,arguments)},kk=b._emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=function(){return(kk=b._emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=b.asm.Oh).apply(null,arguments)},lk=b._emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=function(){return(lk=b._emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=b.asm.Ph).apply(null,arguments)},mk=b._emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=function(){return(mk=b._emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=\nb.asm.Qh).apply(null,arguments)},nk=b._emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=function(){return(nk=b._emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=b.asm.Rh).apply(null,arguments)},ok=b._emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=function(){return(ok=b._emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=b.asm.Sh).apply(null,arguments)},pk=b._emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=function(){return(pk=b._emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=\nb.asm.Th).apply(null,arguments)},qk=b._emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=function(){return(qk=b._emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=b.asm.Uh).apply(null,arguments)},rk=b._emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=function(){return(rk=b._emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=b.asm.Vh).apply(null,arguments)},sk=b._emscripten_bind_LocalConvexResult_get_m_hitFraction_0=function(){return(sk=b._emscripten_bind_LocalConvexResult_get_m_hitFraction_0=\nb.asm.Wh).apply(null,arguments)},tk=b._emscripten_bind_LocalConvexResult_set_m_hitFraction_1=function(){return(tk=b._emscripten_bind_LocalConvexResult_set_m_hitFraction_1=b.asm.Xh).apply(null,arguments)},uk=b._emscripten_bind_LocalConvexResult___destroy___0=function(){return(uk=b._emscripten_bind_LocalConvexResult___destroy___0=b.asm.Yh).apply(null,arguments)},vk=b._emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=function(){return(vk=b._emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=\nb.asm.Zh).apply(null,arguments)},wk=b._emscripten_bind_ClosestConvexResultCallback_hasHit_0=function(){return(wk=b._emscripten_bind_ClosestConvexResultCallback_hasHit_0=b.asm._h).apply(null,arguments)},xk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitCollisionObject_0=function(){return(xk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitCollisionObject_0=b.asm.$h).apply(null,arguments)},yk=b._emscripten_bind_ClosestConvexResultCallback_set_m_hitCollisionObject_1=function(){return(yk=\nb._emscripten_bind_ClosestConvexResultCallback_set_m_hitCollisionObject_1=b.asm.ai).apply(null,arguments)},zk=b._emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=function(){return(zk=b._emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=b.asm.bi).apply(null,arguments)},Ak=b._emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=function(){return(Ak=b._emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=b.asm.ci).apply(null,arguments)},\nBk=b._emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=function(){return(Bk=b._emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=b.asm.di).apply(null,arguments)},Ck=b._emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=function(){return(Ck=b._emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=b.asm.ei).apply(null,arguments)},Dk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=function(){return(Dk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=\nb.asm.fi).apply(null,arguments)},Ek=b._emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=function(){return(Ek=b._emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=b.asm.gi).apply(null,arguments)},Fk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=function(){return(Fk=b._emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=b.asm.hi).apply(null,arguments)},Gk=b._emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=function(){return(Gk=\nb._emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=b.asm.ii).apply(null,arguments)},Hk=b._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=function(){return(Hk=b._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=b.asm.ji).apply(null,arguments)},Ik=b._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=function(){return(Ik=b._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=b.asm.ki).apply(null,\narguments)},Jk=b._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=function(){return(Jk=b._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=b.asm.li).apply(null,arguments)},Kk=b._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=function(){return(Kk=b._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=b.asm.mi).apply(null,arguments)},Lk=b._emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=\nfunction(){return(Lk=b._emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=b.asm.ni).apply(null,arguments)},Mk=b._emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=function(){return(Mk=b._emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=b.asm.oi).apply(null,arguments)},Nk=b._emscripten_bind_ClosestConvexResultCallback___destroy___0=function(){return(Nk=b._emscripten_bind_ClosestConvexResultCallback___destroy___0=b.asm.pi).apply(null,arguments)},\nOk=b._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=function(){return(Ok=b._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=b.asm.qi).apply(null,arguments)},Pk=b._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=function(){return(Pk=b._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=b.asm.ri).apply(null,arguments)},Qk=b._emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=function(){return(Qk=b._emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=\nb.asm.si).apply(null,arguments)},Rk=b._emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0=function(){return(Rk=b._emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0=b.asm.ti).apply(null,arguments)},Sk=b._emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=function(){return(Sk=b._emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=b.asm.ui).apply(null,arguments)},Tk=b._emscripten_bind_btConvexTriangleMeshShape_setMargin_1=function(){return(Tk=b._emscripten_bind_btConvexTriangleMeshShape_setMargin_1=\nb.asm.vi).apply(null,arguments)},Uk=b._emscripten_bind_btConvexTriangleMeshShape_getMargin_0=function(){return(Uk=b._emscripten_bind_btConvexTriangleMeshShape_getMargin_0=b.asm.wi).apply(null,arguments)},Vk=b._emscripten_bind_btConvexTriangleMeshShape___destroy___0=function(){return(Vk=b._emscripten_bind_btConvexTriangleMeshShape___destroy___0=b.asm.xi).apply(null,arguments)},Wk=b._emscripten_bind_btBoxShape_btBoxShape_1=function(){return(Wk=b._emscripten_bind_btBoxShape_btBoxShape_1=b.asm.yi).apply(null,\narguments)},Xk=b._emscripten_bind_btBoxShape_setMargin_1=function(){return(Xk=b._emscripten_bind_btBoxShape_setMargin_1=b.asm.zi).apply(null,arguments)},Yk=b._emscripten_bind_btBoxShape_getMargin_0=function(){return(Yk=b._emscripten_bind_btBoxShape_getMargin_0=b.asm.Ai).apply(null,arguments)},Zk=b._emscripten_bind_btBoxShape_setLocalScaling_1=function(){return(Zk=b._emscripten_bind_btBoxShape_setLocalScaling_1=b.asm.Bi).apply(null,arguments)},$k=b._emscripten_bind_btBoxShape_getLocalScaling_0=function(){return($k=\nb._emscripten_bind_btBoxShape_getLocalScaling_0=b.asm.Ci).apply(null,arguments)},al=b._emscripten_bind_btBoxShape_calculateLocalInertia_2=function(){return(al=b._emscripten_bind_btBoxShape_calculateLocalInertia_2=b.asm.Di).apply(null,arguments)},bl=b._emscripten_bind_btBoxShape___destroy___0=function(){return(bl=b._emscripten_bind_btBoxShape___destroy___0=b.asm.Ei).apply(null,arguments)},cl=b._emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=function(){return(cl=b._emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=\nb.asm.Fi).apply(null,arguments)},dl=b._emscripten_bind_btCapsuleShapeX_setMargin_1=function(){return(dl=b._emscripten_bind_btCapsuleShapeX_setMargin_1=b.asm.Gi).apply(null,arguments)},el=b._emscripten_bind_btCapsuleShapeX_getMargin_0=function(){return(el=b._emscripten_bind_btCapsuleShapeX_getMargin_0=b.asm.Hi).apply(null,arguments)},fl=b._emscripten_bind_btCapsuleShapeX_getUpAxis_0=function(){return(fl=b._emscripten_bind_btCapsuleShapeX_getUpAxis_0=b.asm.Ii).apply(null,arguments)},gl=b._emscripten_bind_btCapsuleShapeX_getRadius_0=\nfunction(){return(gl=b._emscripten_bind_btCapsuleShapeX_getRadius_0=b.asm.Ji).apply(null,arguments)},hl=b._emscripten_bind_btCapsuleShapeX_getHalfHeight_0=function(){return(hl=b._emscripten_bind_btCapsuleShapeX_getHalfHeight_0=b.asm.Ki).apply(null,arguments)},il=b._emscripten_bind_btCapsuleShapeX_setLocalScaling_1=function(){return(il=b._emscripten_bind_btCapsuleShapeX_setLocalScaling_1=b.asm.Li).apply(null,arguments)},jl=b._emscripten_bind_btCapsuleShapeX_getLocalScaling_0=function(){return(jl=b._emscripten_bind_btCapsuleShapeX_getLocalScaling_0=\nb.asm.Mi).apply(null,arguments)},kl=b._emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=function(){return(kl=b._emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=b.asm.Ni).apply(null,arguments)},ll=b._emscripten_bind_btCapsuleShapeX___destroy___0=function(){return(ll=b._emscripten_bind_btCapsuleShapeX___destroy___0=b.asm.Oi).apply(null,arguments)},ml=b._emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=function(){return(ml=b._emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=b.asm.Pi).apply(null,\narguments)},nl=b._emscripten_bind_btCapsuleShapeZ_setMargin_1=function(){return(nl=b._emscripten_bind_btCapsuleShapeZ_setMargin_1=b.asm.Qi).apply(null,arguments)},ol=b._emscripten_bind_btCapsuleShapeZ_getMargin_0=function(){return(ol=b._emscripten_bind_btCapsuleShapeZ_getMargin_0=b.asm.Ri).apply(null,arguments)},pl=b._emscripten_bind_btCapsuleShapeZ_getUpAxis_0=function(){return(pl=b._emscripten_bind_btCapsuleShapeZ_getUpAxis_0=b.asm.Si).apply(null,arguments)},ql=b._emscripten_bind_btCapsuleShapeZ_getRadius_0=\nfunction(){return(ql=b._emscripten_bind_btCapsuleShapeZ_getRadius_0=b.asm.Ti).apply(null,arguments)},rl=b._emscripten_bind_btCapsuleShapeZ_getHalfHeight_0=function(){return(rl=b._emscripten_bind_btCapsuleShapeZ_getHalfHeight_0=b.asm.Ui).apply(null,arguments)},sl=b._emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=function(){return(sl=b._emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=b.asm.Vi).apply(null,arguments)},tl=b._emscripten_bind_btCapsuleShapeZ_getLocalScaling_0=function(){return(tl=b._emscripten_bind_btCapsuleShapeZ_getLocalScaling_0=\nb.asm.Wi).apply(null,arguments)},ul=b._emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=function(){return(ul=b._emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=b.asm.Xi).apply(null,arguments)},vl=b._emscripten_bind_btCapsuleShapeZ___destroy___0=function(){return(vl=b._emscripten_bind_btCapsuleShapeZ___destroy___0=b.asm.Yi).apply(null,arguments)},wl=b._emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=function(){return(wl=b._emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=b.asm.Zi).apply(null,\narguments)},xl=b._emscripten_bind_btCylinderShapeX_setMargin_1=function(){return(xl=b._emscripten_bind_btCylinderShapeX_setMargin_1=b.asm._i).apply(null,arguments)},yl=b._emscripten_bind_btCylinderShapeX_getMargin_0=function(){return(yl=b._emscripten_bind_btCylinderShapeX_getMargin_0=b.asm.$i).apply(null,arguments)},zl=b._emscripten_bind_btCylinderShapeX_setLocalScaling_1=function(){return(zl=b._emscripten_bind_btCylinderShapeX_setLocalScaling_1=b.asm.aj).apply(null,arguments)},Al=b._emscripten_bind_btCylinderShapeX_getLocalScaling_0=\nfunction(){return(Al=b._emscripten_bind_btCylinderShapeX_getLocalScaling_0=b.asm.bj).apply(null,arguments)},Bl=b._emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=function(){return(Bl=b._emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=b.asm.cj).apply(null,arguments)},Cl=b._emscripten_bind_btCylinderShapeX___destroy___0=function(){return(Cl=b._emscripten_bind_btCylinderShapeX___destroy___0=b.asm.dj).apply(null,arguments)},Dl=b._emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=function(){return(Dl=\nb._emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=b.asm.ej).apply(null,arguments)},El=b._emscripten_bind_btCylinderShapeZ_setMargin_1=function(){return(El=b._emscripten_bind_btCylinderShapeZ_setMargin_1=b.asm.fj).apply(null,arguments)},Fl=b._emscripten_bind_btCylinderShapeZ_getMargin_0=function(){return(Fl=b._emscripten_bind_btCylinderShapeZ_getMargin_0=b.asm.gj).apply(null,arguments)},Gl=b._emscripten_bind_btCylinderShapeZ_setLocalScaling_1=function(){return(Gl=b._emscripten_bind_btCylinderShapeZ_setLocalScaling_1=\nb.asm.hj).apply(null,arguments)},Hl=b._emscripten_bind_btCylinderShapeZ_getLocalScaling_0=function(){return(Hl=b._emscripten_bind_btCylinderShapeZ_getLocalScaling_0=b.asm.ij).apply(null,arguments)},Il=b._emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=function(){return(Il=b._emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=b.asm.jj).apply(null,arguments)},Jl=b._emscripten_bind_btCylinderShapeZ___destroy___0=function(){return(Jl=b._emscripten_bind_btCylinderShapeZ___destroy___0=b.asm.kj).apply(null,\narguments)},Kl=b._emscripten_bind_btSphereShape_btSphereShape_1=function(){return(Kl=b._emscripten_bind_btSphereShape_btSphereShape_1=b.asm.lj).apply(null,arguments)},Ll=b._emscripten_bind_btSphereShape_setMargin_1=function(){return(Ll=b._emscripten_bind_btSphereShape_setMargin_1=b.asm.mj).apply(null,arguments)},Ml=b._emscripten_bind_btSphereShape_getMargin_0=function(){return(Ml=b._emscripten_bind_btSphereShape_getMargin_0=b.asm.nj).apply(null,arguments)},Nl=b._emscripten_bind_btSphereShape_setLocalScaling_1=\nfunction(){return(Nl=b._emscripten_bind_btSphereShape_setLocalScaling_1=b.asm.oj).apply(null,arguments)},Ol=b._emscripten_bind_btSphereShape_getLocalScaling_0=function(){return(Ol=b._emscripten_bind_btSphereShape_getLocalScaling_0=b.asm.pj).apply(null,arguments)},Pl=b._emscripten_bind_btSphereShape_calculateLocalInertia_2=function(){return(Pl=b._emscripten_bind_btSphereShape_calculateLocalInertia_2=b.asm.qj).apply(null,arguments)},Ql=b._emscripten_bind_btSphereShape___destroy___0=function(){return(Ql=\nb._emscripten_bind_btSphereShape___destroy___0=b.asm.rj).apply(null,arguments)},Rl=b._emscripten_bind_btMultiSphereShape_btMultiSphereShape_3=function(){return(Rl=b._emscripten_bind_btMultiSphereShape_btMultiSphereShape_3=b.asm.sj).apply(null,arguments)},Sl=b._emscripten_bind_btMultiSphereShape_setLocalScaling_1=function(){return(Sl=b._emscripten_bind_btMultiSphereShape_setLocalScaling_1=b.asm.tj).apply(null,arguments)},Tl=b._emscripten_bind_btMultiSphereShape_getLocalScaling_0=function(){return(Tl=\nb._emscripten_bind_btMultiSphereShape_getLocalScaling_0=b.asm.uj).apply(null,arguments)},Ul=b._emscripten_bind_btMultiSphereShape_calculateLocalInertia_2=function(){return(Ul=b._emscripten_bind_btMultiSphereShape_calculateLocalInertia_2=b.asm.vj).apply(null,arguments)},Vl=b._emscripten_bind_btMultiSphereShape___destroy___0=function(){return(Vl=b._emscripten_bind_btMultiSphereShape___destroy___0=b.asm.wj).apply(null,arguments)},Wl=b._emscripten_bind_btConeShapeX_btConeShapeX_2=function(){return(Wl=\nb._emscripten_bind_btConeShapeX_btConeShapeX_2=b.asm.xj).apply(null,arguments)},Xl=b._emscripten_bind_btConeShapeX_setLocalScaling_1=function(){return(Xl=b._emscripten_bind_btConeShapeX_setLocalScaling_1=b.asm.yj).apply(null,arguments)},Yl=b._emscripten_bind_btConeShapeX_getLocalScaling_0=function(){return(Yl=b._emscripten_bind_btConeShapeX_getLocalScaling_0=b.asm.zj).apply(null,arguments)},Zl=b._emscripten_bind_btConeShapeX_calculateLocalInertia_2=function(){return(Zl=b._emscripten_bind_btConeShapeX_calculateLocalInertia_2=\nb.asm.Aj).apply(null,arguments)},$l=b._emscripten_bind_btConeShapeX___destroy___0=function(){return($l=b._emscripten_bind_btConeShapeX___destroy___0=b.asm.Bj).apply(null,arguments)},am=b._emscripten_bind_btConeShapeZ_btConeShapeZ_2=function(){return(am=b._emscripten_bind_btConeShapeZ_btConeShapeZ_2=b.asm.Cj).apply(null,arguments)},bm=b._emscripten_bind_btConeShapeZ_setLocalScaling_1=function(){return(bm=b._emscripten_bind_btConeShapeZ_setLocalScaling_1=b.asm.Dj).apply(null,arguments)},cm=b._emscripten_bind_btConeShapeZ_getLocalScaling_0=\nfunction(){return(cm=b._emscripten_bind_btConeShapeZ_getLocalScaling_0=b.asm.Ej).apply(null,arguments)},dm=b._emscripten_bind_btConeShapeZ_calculateLocalInertia_2=function(){return(dm=b._emscripten_bind_btConeShapeZ_calculateLocalInertia_2=b.asm.Fj).apply(null,arguments)},em=b._emscripten_bind_btConeShapeZ___destroy___0=function(){return(em=b._emscripten_bind_btConeShapeZ___destroy___0=b.asm.Gj).apply(null,arguments)},fm=b._emscripten_bind_btIntArray_size_0=function(){return(fm=b._emscripten_bind_btIntArray_size_0=\nb.asm.Hj).apply(null,arguments)},gm=b._emscripten_bind_btIntArray_at_1=function(){return(gm=b._emscripten_bind_btIntArray_at_1=b.asm.Ij).apply(null,arguments)},hm=b._emscripten_bind_btIntArray___destroy___0=function(){return(hm=b._emscripten_bind_btIntArray___destroy___0=b.asm.Jj).apply(null,arguments)},im=b._emscripten_bind_btFace_get_m_indices_0=function(){return(im=b._emscripten_bind_btFace_get_m_indices_0=b.asm.Kj).apply(null,arguments)},jm=b._emscripten_bind_btFace_set_m_indices_1=function(){return(jm=\nb._emscripten_bind_btFace_set_m_indices_1=b.asm.Lj).apply(null,arguments)},km=b._emscripten_bind_btFace_get_m_plane_1=function(){return(km=b._emscripten_bind_btFace_get_m_plane_1=b.asm.Mj).apply(null,arguments)},lm=b._emscripten_bind_btFace_set_m_plane_2=function(){return(lm=b._emscripten_bind_btFace_set_m_plane_2=b.asm.Nj).apply(null,arguments)},mm=b._emscripten_bind_btFace___destroy___0=function(){return(mm=b._emscripten_bind_btFace___destroy___0=b.asm.Oj).apply(null,arguments)},nm=b._emscripten_bind_btVector3Array_size_0=\nfunction(){return(nm=b._emscripten_bind_btVector3Array_size_0=b.asm.Pj).apply(null,arguments)},om=b._emscripten_bind_btVector3Array_at_1=function(){return(om=b._emscripten_bind_btVector3Array_at_1=b.asm.Qj).apply(null,arguments)},pm=b._emscripten_bind_btVector3Array___destroy___0=function(){return(pm=b._emscripten_bind_btVector3Array___destroy___0=b.asm.Rj).apply(null,arguments)},qm=b._emscripten_bind_btFaceArray_size_0=function(){return(qm=b._emscripten_bind_btFaceArray_size_0=b.asm.Sj).apply(null,\narguments)},rm=b._emscripten_bind_btFaceArray_at_1=function(){return(rm=b._emscripten_bind_btFaceArray_at_1=b.asm.Tj).apply(null,arguments)},sm=b._emscripten_bind_btFaceArray___destroy___0=function(){return(sm=b._emscripten_bind_btFaceArray___destroy___0=b.asm.Uj).apply(null,arguments)},tm=b._emscripten_bind_btConvexPolyhedron_get_m_vertices_0=function(){return(tm=b._emscripten_bind_btConvexPolyhedron_get_m_vertices_0=b.asm.Vj).apply(null,arguments)},um=b._emscripten_bind_btConvexPolyhedron_set_m_vertices_1=\nfunction(){return(um=b._emscripten_bind_btConvexPolyhedron_set_m_vertices_1=b.asm.Wj).apply(null,arguments)},wm=b._emscripten_bind_btConvexPolyhedron_get_m_faces_0=function(){return(wm=b._emscripten_bind_btConvexPolyhedron_get_m_faces_0=b.asm.Xj).apply(null,arguments)},xm=b._emscripten_bind_btConvexPolyhedron_set_m_faces_1=function(){return(xm=b._emscripten_bind_btConvexPolyhedron_set_m_faces_1=b.asm.Yj).apply(null,arguments)},ym=b._emscripten_bind_btConvexPolyhedron___destroy___0=function(){return(ym=\nb._emscripten_bind_btConvexPolyhedron___destroy___0=b.asm.Zj).apply(null,arguments)},zm=b._emscripten_bind_btConvexHullShape_btConvexHullShape_0=function(){return(zm=b._emscripten_bind_btConvexHullShape_btConvexHullShape_0=b.asm._j).apply(null,arguments)},Am=b._emscripten_bind_btConvexHullShape_btConvexHullShape_1=function(){return(Am=b._emscripten_bind_btConvexHullShape_btConvexHullShape_1=b.asm.$j).apply(null,arguments)},Bm=b._emscripten_bind_btConvexHullShape_btConvexHullShape_2=function(){return(Bm=\nb._emscripten_bind_btConvexHullShape_btConvexHullShape_2=b.asm.ak).apply(null,arguments)},Cm=b._emscripten_bind_btConvexHullShape_addPoint_1=function(){return(Cm=b._emscripten_bind_btConvexHullShape_addPoint_1=b.asm.bk).apply(null,arguments)},Dm=b._emscripten_bind_btConvexHullShape_addPoint_2=function(){return(Dm=b._emscripten_bind_btConvexHullShape_addPoint_2=b.asm.ck).apply(null,arguments)},Em=b._emscripten_bind_btConvexHullShape_setMargin_1=function(){return(Em=b._emscripten_bind_btConvexHullShape_setMargin_1=\nb.asm.dk).apply(null,arguments)},Fm=b._emscripten_bind_btConvexHullShape_getMargin_0=function(){return(Fm=b._emscripten_bind_btConvexHullShape_getMargin_0=b.asm.ek).apply(null,arguments)},Gm=b._emscripten_bind_btConvexHullShape_getNumVertices_0=function(){return(Gm=b._emscripten_bind_btConvexHullShape_getNumVertices_0=b.asm.fk).apply(null,arguments)},Hm=b._emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1=function(){return(Hm=b._emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1=\nb.asm.gk).apply(null,arguments)},Im=b._emscripten_bind_btConvexHullShape_recalcLocalAabb_0=function(){return(Im=b._emscripten_bind_btConvexHullShape_recalcLocalAabb_0=b.asm.hk).apply(null,arguments)},Jm=b._emscripten_bind_btConvexHullShape_getConvexPolyhedron_0=function(){return(Jm=b._emscripten_bind_btConvexHullShape_getConvexPolyhedron_0=b.asm.ik).apply(null,arguments)},Km=b._emscripten_bind_btConvexHullShape_setLocalScaling_1=function(){return(Km=b._emscripten_bind_btConvexHullShape_setLocalScaling_1=\nb.asm.jk).apply(null,arguments)},Lm=b._emscripten_bind_btConvexHullShape_getLocalScaling_0=function(){return(Lm=b._emscripten_bind_btConvexHullShape_getLocalScaling_0=b.asm.kk).apply(null,arguments)},Mm=b._emscripten_bind_btConvexHullShape_calculateLocalInertia_2=function(){return(Mm=b._emscripten_bind_btConvexHullShape_calculateLocalInertia_2=b.asm.lk).apply(null,arguments)},Nm=b._emscripten_bind_btConvexHullShape___destroy___0=function(){return(Nm=b._emscripten_bind_btConvexHullShape___destroy___0=\nb.asm.mk).apply(null,arguments)},Om=b._emscripten_bind_btShapeHull_btShapeHull_1=function(){return(Om=b._emscripten_bind_btShapeHull_btShapeHull_1=b.asm.nk).apply(null,arguments)},Pm=b._emscripten_bind_btShapeHull_buildHull_1=function(){return(Pm=b._emscripten_bind_btShapeHull_buildHull_1=b.asm.ok).apply(null,arguments)},Qm=b._emscripten_bind_btShapeHull_numVertices_0=function(){return(Qm=b._emscripten_bind_btShapeHull_numVertices_0=b.asm.pk).apply(null,arguments)},Rm=b._emscripten_bind_btShapeHull_getVertexPointer_0=\nfunction(){return(Rm=b._emscripten_bind_btShapeHull_getVertexPointer_0=b.asm.qk).apply(null,arguments)},Sm=b._emscripten_bind_btShapeHull___destroy___0=function(){return(Sm=b._emscripten_bind_btShapeHull___destroy___0=b.asm.rk).apply(null,arguments)},Tm=b._emscripten_bind_btCompoundShape_btCompoundShape_0=function(){return(Tm=b._emscripten_bind_btCompoundShape_btCompoundShape_0=b.asm.sk).apply(null,arguments)},Um=b._emscripten_bind_btCompoundShape_btCompoundShape_1=function(){return(Um=b._emscripten_bind_btCompoundShape_btCompoundShape_1=\nb.asm.tk).apply(null,arguments)},Vm=b._emscripten_bind_btCompoundShape_addChildShape_2=function(){return(Vm=b._emscripten_bind_btCompoundShape_addChildShape_2=b.asm.uk).apply(null,arguments)},Wm=b._emscripten_bind_btCompoundShape_removeChildShape_1=function(){return(Wm=b._emscripten_bind_btCompoundShape_removeChildShape_1=b.asm.vk).apply(null,arguments)},Xm=b._emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=function(){return(Xm=b._emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=\nb.asm.wk).apply(null,arguments)},Ym=b._emscripten_bind_btCompoundShape_getNumChildShapes_0=function(){return(Ym=b._emscripten_bind_btCompoundShape_getNumChildShapes_0=b.asm.xk).apply(null,arguments)},Zm=b._emscripten_bind_btCompoundShape_getChildShape_1=function(){return(Zm=b._emscripten_bind_btCompoundShape_getChildShape_1=b.asm.yk).apply(null,arguments)},$m=b._emscripten_bind_btCompoundShape_updateChildTransform_2=function(){return($m=b._emscripten_bind_btCompoundShape_updateChildTransform_2=b.asm.zk).apply(null,\narguments)},an=b._emscripten_bind_btCompoundShape_updateChildTransform_3=function(){return(an=b._emscripten_bind_btCompoundShape_updateChildTransform_3=b.asm.Ak).apply(null,arguments)},bn=b._emscripten_bind_btCompoundShape_setMargin_1=function(){return(bn=b._emscripten_bind_btCompoundShape_setMargin_1=b.asm.Bk).apply(null,arguments)},cn=b._emscripten_bind_btCompoundShape_getMargin_0=function(){return(cn=b._emscripten_bind_btCompoundShape_getMargin_0=b.asm.Ck).apply(null,arguments)},dn=b._emscripten_bind_btCompoundShape_setLocalScaling_1=\nfunction(){return(dn=b._emscripten_bind_btCompoundShape_setLocalScaling_1=b.asm.Dk).apply(null,arguments)},en=b._emscripten_bind_btCompoundShape_getLocalScaling_0=function(){return(en=b._emscripten_bind_btCompoundShape_getLocalScaling_0=b.asm.Ek).apply(null,arguments)},fn=b._emscripten_bind_btCompoundShape_calculateLocalInertia_2=function(){return(fn=b._emscripten_bind_btCompoundShape_calculateLocalInertia_2=b.asm.Fk).apply(null,arguments)},gn=b._emscripten_bind_btCompoundShape___destroy___0=function(){return(gn=\nb._emscripten_bind_btCompoundShape___destroy___0=b.asm.Gk).apply(null,arguments)},hn=b._emscripten_bind_btIndexedMesh_get_m_numTriangles_0=function(){return(hn=b._emscripten_bind_btIndexedMesh_get_m_numTriangles_0=b.asm.Hk).apply(null,arguments)},jn=b._emscripten_bind_btIndexedMesh_set_m_numTriangles_1=function(){return(jn=b._emscripten_bind_btIndexedMesh_set_m_numTriangles_1=b.asm.Ik).apply(null,arguments)},kn=b._emscripten_bind_btIndexedMesh___destroy___0=function(){return(kn=b._emscripten_bind_btIndexedMesh___destroy___0=\nb.asm.Jk).apply(null,arguments)},ln=b._emscripten_bind_btIndexedMeshArray_size_0=function(){return(ln=b._emscripten_bind_btIndexedMeshArray_size_0=b.asm.Kk).apply(null,arguments)},mn=b._emscripten_bind_btIndexedMeshArray_at_1=function(){return(mn=b._emscripten_bind_btIndexedMeshArray_at_1=b.asm.Lk).apply(null,arguments)},nn=b._emscripten_bind_btIndexedMeshArray___destroy___0=function(){return(nn=b._emscripten_bind_btIndexedMeshArray___destroy___0=b.asm.Mk).apply(null,arguments)},on=b._emscripten_bind_btTriangleMesh_btTriangleMesh_0=\nfunction(){return(on=b._emscripten_bind_btTriangleMesh_btTriangleMesh_0=b.asm.Nk).apply(null,arguments)},pn=b._emscripten_bind_btTriangleMesh_btTriangleMesh_1=function(){return(pn=b._emscripten_bind_btTriangleMesh_btTriangleMesh_1=b.asm.Ok).apply(null,arguments)},qn=b._emscripten_bind_btTriangleMesh_btTriangleMesh_2=function(){return(qn=b._emscripten_bind_btTriangleMesh_btTriangleMesh_2=b.asm.Pk).apply(null,arguments)},rn=b._emscripten_bind_btTriangleMesh_addTriangle_3=function(){return(rn=b._emscripten_bind_btTriangleMesh_addTriangle_3=\nb.asm.Qk).apply(null,arguments)},sn=b._emscripten_bind_btTriangleMesh_addTriangle_4=function(){return(sn=b._emscripten_bind_btTriangleMesh_addTriangle_4=b.asm.Rk).apply(null,arguments)},tn=b._emscripten_bind_btTriangleMesh_findOrAddVertex_2=function(){return(tn=b._emscripten_bind_btTriangleMesh_findOrAddVertex_2=b.asm.Sk).apply(null,arguments)},un=b._emscripten_bind_btTriangleMesh_addIndex_1=function(){return(un=b._emscripten_bind_btTriangleMesh_addIndex_1=b.asm.Tk).apply(null,arguments)},vn=b._emscripten_bind_btTriangleMesh_getIndexedMeshArray_0=\nfunction(){return(vn=b._emscripten_bind_btTriangleMesh_getIndexedMeshArray_0=b.asm.Uk).apply(null,arguments)},wn=b._emscripten_bind_btTriangleMesh_setScaling_1=function(){return(wn=b._emscripten_bind_btTriangleMesh_setScaling_1=b.asm.Vk).apply(null,arguments)},xn=b._emscripten_bind_btTriangleMesh___destroy___0=function(){return(xn=b._emscripten_bind_btTriangleMesh___destroy___0=b.asm.Wk).apply(null,arguments)},yn=b._emscripten_bind_btEmptyShape_btEmptyShape_0=function(){return(yn=b._emscripten_bind_btEmptyShape_btEmptyShape_0=\nb.asm.Xk).apply(null,arguments)},zn=b._emscripten_bind_btEmptyShape_setLocalScaling_1=function(){return(zn=b._emscripten_bind_btEmptyShape_setLocalScaling_1=b.asm.Yk).apply(null,arguments)},An=b._emscripten_bind_btEmptyShape_getLocalScaling_0=function(){return(An=b._emscripten_bind_btEmptyShape_getLocalScaling_0=b.asm.Zk).apply(null,arguments)},Bn=b._emscripten_bind_btEmptyShape_calculateLocalInertia_2=function(){return(Bn=b._emscripten_bind_btEmptyShape_calculateLocalInertia_2=b.asm._k).apply(null,\narguments)},Cn=b._emscripten_bind_btEmptyShape___destroy___0=function(){return(Cn=b._emscripten_bind_btEmptyShape___destroy___0=b.asm.$k).apply(null,arguments)},Dn=b._emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=function(){return(Dn=b._emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=b.asm.al).apply(null,arguments)},En=b._emscripten_bind_btStaticPlaneShape_setLocalScaling_1=function(){return(En=b._emscripten_bind_btStaticPlaneShape_setLocalScaling_1=b.asm.bl).apply(null,arguments)},\nFn=b._emscripten_bind_btStaticPlaneShape_getLocalScaling_0=function(){return(Fn=b._emscripten_bind_btStaticPlaneShape_getLocalScaling_0=b.asm.cl).apply(null,arguments)},Gn=b._emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=function(){return(Gn=b._emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=b.asm.dl).apply(null,arguments)},Hn=b._emscripten_bind_btStaticPlaneShape___destroy___0=function(){return(Hn=b._emscripten_bind_btStaticPlaneShape___destroy___0=b.asm.el).apply(null,arguments)},\nIn=b._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=function(){return(In=b._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=b.asm.fl).apply(null,arguments)},Jn=b._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=function(){return(Jn=b._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=b.asm.gl).apply(null,arguments)},Kn=b._emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=function(){return(Kn=b._emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=\nb.asm.hl).apply(null,arguments)},Ln=b._emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0=function(){return(Ln=b._emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0=b.asm.il).apply(null,arguments)},Mn=b._emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=function(){return(Mn=b._emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=b.asm.jl).apply(null,arguments)},Nn=b._emscripten_bind_btBvhTriangleMeshShape___destroy___0=function(){return(Nn=b._emscripten_bind_btBvhTriangleMeshShape___destroy___0=\nb.asm.kl).apply(null,arguments)},On=b._emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=function(){return(On=b._emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=b.asm.ll).apply(null,arguments)},Pn=b._emscripten_bind_btHeightfieldTerrainShape_setMargin_1=function(){return(Pn=b._emscripten_bind_btHeightfieldTerrainShape_setMargin_1=b.asm.ml).apply(null,arguments)},Qn=b._emscripten_bind_btHeightfieldTerrainShape_getMargin_0=function(){return(Qn=b._emscripten_bind_btHeightfieldTerrainShape_getMargin_0=\nb.asm.nl).apply(null,arguments)},Rn=b._emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=function(){return(Rn=b._emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=b.asm.ol).apply(null,arguments)},Sn=b._emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0=function(){return(Sn=b._emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0=b.asm.pl).apply(null,arguments)},Tn=b._emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=function(){return(Tn=b._emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=\nb.asm.ql).apply(null,arguments)},Un=b._emscripten_bind_btHeightfieldTerrainShape___destroy___0=function(){return(Un=b._emscripten_bind_btHeightfieldTerrainShape___destroy___0=b.asm.rl).apply(null,arguments)},Vn=b._emscripten_bind_btAABB_btAABB_4=function(){return(Vn=b._emscripten_bind_btAABB_btAABB_4=b.asm.sl).apply(null,arguments)},Wn=b._emscripten_bind_btAABB_invalidate_0=function(){return(Wn=b._emscripten_bind_btAABB_invalidate_0=b.asm.tl).apply(null,arguments)},Xn=b._emscripten_bind_btAABB_increment_margin_1=\nfunction(){return(Xn=b._emscripten_bind_btAABB_increment_margin_1=b.asm.ul).apply(null,arguments)},Yn=b._emscripten_bind_btAABB_copy_with_margin_2=function(){return(Yn=b._emscripten_bind_btAABB_copy_with_margin_2=b.asm.vl).apply(null,arguments)},Zn=b._emscripten_bind_btAABB___destroy___0=function(){return(Zn=b._emscripten_bind_btAABB___destroy___0=b.asm.wl).apply(null,arguments)},$n=b._emscripten_bind_btPrimitiveTriangle_btPrimitiveTriangle_0=function(){return($n=b._emscripten_bind_btPrimitiveTriangle_btPrimitiveTriangle_0=\nb.asm.xl).apply(null,arguments)},ao=b._emscripten_bind_btPrimitiveTriangle___destroy___0=function(){return(ao=b._emscripten_bind_btPrimitiveTriangle___destroy___0=b.asm.yl).apply(null,arguments)},bo=b._emscripten_bind_btTriangleShapeEx_btTriangleShapeEx_3=function(){return(bo=b._emscripten_bind_btTriangleShapeEx_btTriangleShapeEx_3=b.asm.zl).apply(null,arguments)},co=b._emscripten_bind_btTriangleShapeEx_getAabb_3=function(){return(co=b._emscripten_bind_btTriangleShapeEx_getAabb_3=b.asm.Al).apply(null,\narguments)},eo=b._emscripten_bind_btTriangleShapeEx_applyTransform_1=function(){return(eo=b._emscripten_bind_btTriangleShapeEx_applyTransform_1=b.asm.Bl).apply(null,arguments)},fo=b._emscripten_bind_btTriangleShapeEx_buildTriPlane_1=function(){return(fo=b._emscripten_bind_btTriangleShapeEx_buildTriPlane_1=b.asm.Cl).apply(null,arguments)},go=b._emscripten_bind_btTriangleShapeEx___destroy___0=function(){return(go=b._emscripten_bind_btTriangleShapeEx___destroy___0=b.asm.Dl).apply(null,arguments)},ho=\nb._emscripten_bind_btTetrahedronShapeEx_btTetrahedronShapeEx_0=function(){return(ho=b._emscripten_bind_btTetrahedronShapeEx_btTetrahedronShapeEx_0=b.asm.El).apply(null,arguments)},io=b._emscripten_bind_btTetrahedronShapeEx_setVertices_4=function(){return(io=b._emscripten_bind_btTetrahedronShapeEx_setVertices_4=b.asm.Fl).apply(null,arguments)},jo=b._emscripten_bind_btTetrahedronShapeEx___destroy___0=function(){return(jo=b._emscripten_bind_btTetrahedronShapeEx___destroy___0=b.asm.Gl).apply(null,arguments)},\nko=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_count_0=function(){return(ko=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_count_0=b.asm.Hl).apply(null,arguments)},lo=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_box_2=function(){return(lo=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_box_2=b.asm.Il).apply(null,arguments)},mo=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_triangle_2=function(){return(mo=b._emscripten_bind_CompoundPrimitiveManager_get_primitive_triangle_2=\nb.asm.Jl).apply(null,arguments)},no=b._emscripten_bind_CompoundPrimitiveManager_is_trimesh_0=function(){return(no=b._emscripten_bind_CompoundPrimitiveManager_is_trimesh_0=b.asm.Kl).apply(null,arguments)},oo=b._emscripten_bind_CompoundPrimitiveManager_get_m_compoundShape_0=function(){return(oo=b._emscripten_bind_CompoundPrimitiveManager_get_m_compoundShape_0=b.asm.Ll).apply(null,arguments)},po=b._emscripten_bind_CompoundPrimitiveManager_set_m_compoundShape_1=function(){return(po=b._emscripten_bind_CompoundPrimitiveManager_set_m_compoundShape_1=\nb.asm.Ml).apply(null,arguments)},qo=b._emscripten_bind_CompoundPrimitiveManager___destroy___0=function(){return(qo=b._emscripten_bind_CompoundPrimitiveManager___destroy___0=b.asm.Nl).apply(null,arguments)},ro=b._emscripten_bind_btGImpactCompoundShape_btGImpactCompoundShape_0=function(){return(ro=b._emscripten_bind_btGImpactCompoundShape_btGImpactCompoundShape_0=b.asm.Ol).apply(null,arguments)},so=b._emscripten_bind_btGImpactCompoundShape_btGImpactCompoundShape_1=function(){return(so=b._emscripten_bind_btGImpactCompoundShape_btGImpactCompoundShape_1=\nb.asm.Pl).apply(null,arguments)},to=b._emscripten_bind_btGImpactCompoundShape_childrenHasTransform_0=function(){return(to=b._emscripten_bind_btGImpactCompoundShape_childrenHasTransform_0=b.asm.Ql).apply(null,arguments)},uo=b._emscripten_bind_btGImpactCompoundShape_getPrimitiveManager_0=function(){return(uo=b._emscripten_bind_btGImpactCompoundShape_getPrimitiveManager_0=b.asm.Rl).apply(null,arguments)},vo=b._emscripten_bind_btGImpactCompoundShape_getCompoundPrimitiveManager_0=function(){return(vo=\nb._emscripten_bind_btGImpactCompoundShape_getCompoundPrimitiveManager_0=b.asm.Sl).apply(null,arguments)},wo=b._emscripten_bind_btGImpactCompoundShape_getNumChildShapes_0=function(){return(wo=b._emscripten_bind_btGImpactCompoundShape_getNumChildShapes_0=b.asm.Tl).apply(null,arguments)},xo=b._emscripten_bind_btGImpactCompoundShape_addChildShape_2=function(){return(xo=b._emscripten_bind_btGImpactCompoundShape_addChildShape_2=b.asm.Ul).apply(null,arguments)},yo=b._emscripten_bind_btGImpactCompoundShape_getChildShape_1=\nfunction(){return(yo=b._emscripten_bind_btGImpactCompoundShape_getChildShape_1=b.asm.Vl).apply(null,arguments)},zo=b._emscripten_bind_btGImpactCompoundShape_getChildAabb_4=function(){return(zo=b._emscripten_bind_btGImpactCompoundShape_getChildAabb_4=b.asm.Wl).apply(null,arguments)},Ao=b._emscripten_bind_btGImpactCompoundShape_getChildTransform_1=function(){return(Ao=b._emscripten_bind_btGImpactCompoundShape_getChildTransform_1=b.asm.Xl).apply(null,arguments)},Bo=b._emscripten_bind_btGImpactCompoundShape_setChildTransform_2=\nfunction(){return(Bo=b._emscripten_bind_btGImpactCompoundShape_setChildTransform_2=b.asm.Yl).apply(null,arguments)},Co=b._emscripten_bind_btGImpactCompoundShape_calculateLocalInertia_2=function(){return(Co=b._emscripten_bind_btGImpactCompoundShape_calculateLocalInertia_2=b.asm.Zl).apply(null,arguments)},Do=b._emscripten_bind_btGImpactCompoundShape_getName_0=function(){return(Do=b._emscripten_bind_btGImpactCompoundShape_getName_0=b.asm._l).apply(null,arguments)},Eo=b._emscripten_bind_btGImpactCompoundShape_getGImpactShapeType_0=\nfunction(){return(Eo=b._emscripten_bind_btGImpactCompoundShape_getGImpactShapeType_0=b.asm.$l).apply(null,arguments)},Fo=b._emscripten_bind_btGImpactCompoundShape_setLocalScaling_1=function(){return(Fo=b._emscripten_bind_btGImpactCompoundShape_setLocalScaling_1=b.asm.am).apply(null,arguments)},Go=b._emscripten_bind_btGImpactCompoundShape_getLocalScaling_0=function(){return(Go=b._emscripten_bind_btGImpactCompoundShape_getLocalScaling_0=b.asm.bm).apply(null,arguments)},Ho=b._emscripten_bind_btGImpactCompoundShape_updateBound_0=\nfunction(){return(Ho=b._emscripten_bind_btGImpactCompoundShape_updateBound_0=b.asm.cm).apply(null,arguments)},Io=b._emscripten_bind_btGImpactCompoundShape_postUpdate_0=function(){return(Io=b._emscripten_bind_btGImpactCompoundShape_postUpdate_0=b.asm.dm).apply(null,arguments)},Jo=b._emscripten_bind_btGImpactCompoundShape_getShapeType_0=function(){return(Jo=b._emscripten_bind_btGImpactCompoundShape_getShapeType_0=b.asm.em).apply(null,arguments)},Ko=b._emscripten_bind_btGImpactCompoundShape_needsRetrieveTriangles_0=\nfunction(){return(Ko=b._emscripten_bind_btGImpactCompoundShape_needsRetrieveTriangles_0=b.asm.fm).apply(null,arguments)},Lo=b._emscripten_bind_btGImpactCompoundShape_needsRetrieveTetrahedrons_0=function(){return(Lo=b._emscripten_bind_btGImpactCompoundShape_needsRetrieveTetrahedrons_0=b.asm.gm).apply(null,arguments)},Mo=b._emscripten_bind_btGImpactCompoundShape_getBulletTriangle_2=function(){return(Mo=b._emscripten_bind_btGImpactCompoundShape_getBulletTriangle_2=b.asm.hm).apply(null,arguments)},No=\nb._emscripten_bind_btGImpactCompoundShape_getBulletTetrahedron_2=function(){return(No=b._emscripten_bind_btGImpactCompoundShape_getBulletTetrahedron_2=b.asm.im).apply(null,arguments)},Oo=b._emscripten_bind_btGImpactCompoundShape___destroy___0=function(){return(Oo=b._emscripten_bind_btGImpactCompoundShape___destroy___0=b.asm.jm).apply(null,arguments)},Po=b._emscripten_bind_TrimeshPrimitiveManager_TrimeshPrimitiveManager_0=function(){return(Po=b._emscripten_bind_TrimeshPrimitiveManager_TrimeshPrimitiveManager_0=\nb.asm.km).apply(null,arguments)},Qo=b._emscripten_bind_TrimeshPrimitiveManager_TrimeshPrimitiveManager_1=function(){return(Qo=b._emscripten_bind_TrimeshPrimitiveManager_TrimeshPrimitiveManager_1=b.asm.lm).apply(null,arguments)},Ro=b._emscripten_bind_TrimeshPrimitiveManager_lock_0=function(){return(Ro=b._emscripten_bind_TrimeshPrimitiveManager_lock_0=b.asm.mm).apply(null,arguments)},So=b._emscripten_bind_TrimeshPrimitiveManager_unlock_0=function(){return(So=b._emscripten_bind_TrimeshPrimitiveManager_unlock_0=\nb.asm.nm).apply(null,arguments)},To=b._emscripten_bind_TrimeshPrimitiveManager_is_trimesh_0=function(){return(To=b._emscripten_bind_TrimeshPrimitiveManager_is_trimesh_0=b.asm.om).apply(null,arguments)},Uo=b._emscripten_bind_TrimeshPrimitiveManager_get_vertex_count_0=function(){return(Uo=b._emscripten_bind_TrimeshPrimitiveManager_get_vertex_count_0=b.asm.pm).apply(null,arguments)},Vo=b._emscripten_bind_TrimeshPrimitiveManager_get_indices_4=function(){return(Vo=b._emscripten_bind_TrimeshPrimitiveManager_get_indices_4=\nb.asm.qm).apply(null,arguments)},Wo=b._emscripten_bind_TrimeshPrimitiveManager_get_vertex_2=function(){return(Wo=b._emscripten_bind_TrimeshPrimitiveManager_get_vertex_2=b.asm.rm).apply(null,arguments)},Xo=b._emscripten_bind_TrimeshPrimitiveManager_get_bullet_triangle_2=function(){return(Xo=b._emscripten_bind_TrimeshPrimitiveManager_get_bullet_triangle_2=b.asm.sm).apply(null,arguments)},Yo=b._emscripten_bind_TrimeshPrimitiveManager_get_m_margin_0=function(){return(Yo=b._emscripten_bind_TrimeshPrimitiveManager_get_m_margin_0=\nb.asm.tm).apply(null,arguments)},Zo=b._emscripten_bind_TrimeshPrimitiveManager_set_m_margin_1=function(){return(Zo=b._emscripten_bind_TrimeshPrimitiveManager_set_m_margin_1=b.asm.um).apply(null,arguments)},$o=b._emscripten_bind_TrimeshPrimitiveManager_get_m_meshInterface_0=function(){return($o=b._emscripten_bind_TrimeshPrimitiveManager_get_m_meshInterface_0=b.asm.vm).apply(null,arguments)},ap=b._emscripten_bind_TrimeshPrimitiveManager_set_m_meshInterface_1=function(){return(ap=b._emscripten_bind_TrimeshPrimitiveManager_set_m_meshInterface_1=\nb.asm.wm).apply(null,arguments)},bp=b._emscripten_bind_TrimeshPrimitiveManager_get_m_part_0=function(){return(bp=b._emscripten_bind_TrimeshPrimitiveManager_get_m_part_0=b.asm.xm).apply(null,arguments)},cp=b._emscripten_bind_TrimeshPrimitiveManager_set_m_part_1=function(){return(cp=b._emscripten_bind_TrimeshPrimitiveManager_set_m_part_1=b.asm.ym).apply(null,arguments)},dp=b._emscripten_bind_TrimeshPrimitiveManager_get_m_lock_count_0=function(){return(dp=b._emscripten_bind_TrimeshPrimitiveManager_get_m_lock_count_0=\nb.asm.zm).apply(null,arguments)},ep=b._emscripten_bind_TrimeshPrimitiveManager_set_m_lock_count_1=function(){return(ep=b._emscripten_bind_TrimeshPrimitiveManager_set_m_lock_count_1=b.asm.Am).apply(null,arguments)},fp=b._emscripten_bind_TrimeshPrimitiveManager_get_numverts_0=function(){return(fp=b._emscripten_bind_TrimeshPrimitiveManager_get_numverts_0=b.asm.Bm).apply(null,arguments)},gp=b._emscripten_bind_TrimeshPrimitiveManager_set_numverts_1=function(){return(gp=b._emscripten_bind_TrimeshPrimitiveManager_set_numverts_1=\nb.asm.Cm).apply(null,arguments)},hp=b._emscripten_bind_TrimeshPrimitiveManager_get_type_0=function(){return(hp=b._emscripten_bind_TrimeshPrimitiveManager_get_type_0=b.asm.Dm).apply(null,arguments)},ip=b._emscripten_bind_TrimeshPrimitiveManager_set_type_1=function(){return(ip=b._emscripten_bind_TrimeshPrimitiveManager_set_type_1=b.asm.Em).apply(null,arguments)},jp=b._emscripten_bind_TrimeshPrimitiveManager_get_stride_0=function(){return(jp=b._emscripten_bind_TrimeshPrimitiveManager_get_stride_0=b.asm.Fm).apply(null,\narguments)},kp=b._emscripten_bind_TrimeshPrimitiveManager_set_stride_1=function(){return(kp=b._emscripten_bind_TrimeshPrimitiveManager_set_stride_1=b.asm.Gm).apply(null,arguments)},lp=b._emscripten_bind_TrimeshPrimitiveManager_get_indexstride_0=function(){return(lp=b._emscripten_bind_TrimeshPrimitiveManager_get_indexstride_0=b.asm.Hm).apply(null,arguments)},mp=b._emscripten_bind_TrimeshPrimitiveManager_set_indexstride_1=function(){return(mp=b._emscripten_bind_TrimeshPrimitiveManager_set_indexstride_1=\nb.asm.Im).apply(null,arguments)},np=b._emscripten_bind_TrimeshPrimitiveManager_get_numfaces_0=function(){return(np=b._emscripten_bind_TrimeshPrimitiveManager_get_numfaces_0=b.asm.Jm).apply(null,arguments)},op=b._emscripten_bind_TrimeshPrimitiveManager_set_numfaces_1=function(){return(op=b._emscripten_bind_TrimeshPrimitiveManager_set_numfaces_1=b.asm.Km).apply(null,arguments)},pp=b._emscripten_bind_TrimeshPrimitiveManager_get_indicestype_0=function(){return(pp=b._emscripten_bind_TrimeshPrimitiveManager_get_indicestype_0=\nb.asm.Lm).apply(null,arguments)},qp=b._emscripten_bind_TrimeshPrimitiveManager_set_indicestype_1=function(){return(qp=b._emscripten_bind_TrimeshPrimitiveManager_set_indicestype_1=b.asm.Mm).apply(null,arguments)},rp=b._emscripten_bind_TrimeshPrimitiveManager___destroy___0=function(){return(rp=b._emscripten_bind_TrimeshPrimitiveManager___destroy___0=b.asm.Nm).apply(null,arguments)},sp=b._emscripten_bind_btGImpactMeshShapePart_btGImpactMeshShapePart_2=function(){return(sp=b._emscripten_bind_btGImpactMeshShapePart_btGImpactMeshShapePart_2=\nb.asm.Om).apply(null,arguments)},tp=b._emscripten_bind_btGImpactMeshShapePart_getTrimeshPrimitiveManager_0=function(){return(tp=b._emscripten_bind_btGImpactMeshShapePart_getTrimeshPrimitiveManager_0=b.asm.Pm).apply(null,arguments)},up=b._emscripten_bind_btGImpactMeshShapePart_getVertexCount_0=function(){return(up=b._emscripten_bind_btGImpactMeshShapePart_getVertexCount_0=b.asm.Qm).apply(null,arguments)},vp=b._emscripten_bind_btGImpactMeshShapePart_getVertex_2=function(){return(vp=b._emscripten_bind_btGImpactMeshShapePart_getVertex_2=\nb.asm.Rm).apply(null,arguments)},wp=b._emscripten_bind_btGImpactMeshShapePart_getPart_0=function(){return(wp=b._emscripten_bind_btGImpactMeshShapePart_getPart_0=b.asm.Sm).apply(null,arguments)},xp=b._emscripten_bind_btGImpactMeshShapePart_setLocalScaling_1=function(){return(xp=b._emscripten_bind_btGImpactMeshShapePart_setLocalScaling_1=b.asm.Tm).apply(null,arguments)},yp=b._emscripten_bind_btGImpactMeshShapePart_getLocalScaling_0=function(){return(yp=b._emscripten_bind_btGImpactMeshShapePart_getLocalScaling_0=\nb.asm.Um).apply(null,arguments)},zp=b._emscripten_bind_btGImpactMeshShapePart_updateBound_0=function(){return(zp=b._emscripten_bind_btGImpactMeshShapePart_updateBound_0=b.asm.Vm).apply(null,arguments)},Ap=b._emscripten_bind_btGImpactMeshShapePart_postUpdate_0=function(){return(Ap=b._emscripten_bind_btGImpactMeshShapePart_postUpdate_0=b.asm.Wm).apply(null,arguments)},Bp=b._emscripten_bind_btGImpactMeshShapePart_getShapeType_0=function(){return(Bp=b._emscripten_bind_btGImpactMeshShapePart_getShapeType_0=\nb.asm.Xm).apply(null,arguments)},Cp=b._emscripten_bind_btGImpactMeshShapePart_needsRetrieveTriangles_0=function(){return(Cp=b._emscripten_bind_btGImpactMeshShapePart_needsRetrieveTriangles_0=b.asm.Ym).apply(null,arguments)},Dp=b._emscripten_bind_btGImpactMeshShapePart_needsRetrieveTetrahedrons_0=function(){return(Dp=b._emscripten_bind_btGImpactMeshShapePart_needsRetrieveTetrahedrons_0=b.asm.Zm).apply(null,arguments)},Ep=b._emscripten_bind_btGImpactMeshShapePart_getBulletTriangle_2=function(){return(Ep=\nb._emscripten_bind_btGImpactMeshShapePart_getBulletTriangle_2=b.asm._m).apply(null,arguments)},Fp=b._emscripten_bind_btGImpactMeshShapePart_getBulletTetrahedron_2=function(){return(Fp=b._emscripten_bind_btGImpactMeshShapePart_getBulletTetrahedron_2=b.asm.$m).apply(null,arguments)},Gp=b._emscripten_bind_btGImpactMeshShapePart___destroy___0=function(){return(Gp=b._emscripten_bind_btGImpactMeshShapePart___destroy___0=b.asm.an).apply(null,arguments)},Hp=b._emscripten_bind_btGImpactMeshShape_btGImpactMeshShape_1=\nfunction(){return(Hp=b._emscripten_bind_btGImpactMeshShape_btGImpactMeshShape_1=b.asm.bn).apply(null,arguments)},Ip=b._emscripten_bind_btGImpactMeshShape_getMeshInterface_0=function(){return(Ip=b._emscripten_bind_btGImpactMeshShape_getMeshInterface_0=b.asm.cn).apply(null,arguments)},Jp=b._emscripten_bind_btGImpactMeshShape_getMeshPartCount_0=function(){return(Jp=b._emscripten_bind_btGImpactMeshShape_getMeshPartCount_0=b.asm.dn).apply(null,arguments)},Kp=b._emscripten_bind_btGImpactMeshShape_getMeshPart_1=\nfunction(){return(Kp=b._emscripten_bind_btGImpactMeshShape_getMeshPart_1=b.asm.en).apply(null,arguments)},Lp=b._emscripten_bind_btGImpactMeshShape_calculateSerializeBufferSize_0=function(){return(Lp=b._emscripten_bind_btGImpactMeshShape_calculateSerializeBufferSize_0=b.asm.fn).apply(null,arguments)},Mp=b._emscripten_bind_btGImpactMeshShape_setLocalScaling_1=function(){return(Mp=b._emscripten_bind_btGImpactMeshShape_setLocalScaling_1=b.asm.gn).apply(null,arguments)},Np=b._emscripten_bind_btGImpactMeshShape_getLocalScaling_0=\nfunction(){return(Np=b._emscripten_bind_btGImpactMeshShape_getLocalScaling_0=b.asm.hn).apply(null,arguments)},Op=b._emscripten_bind_btGImpactMeshShape_updateBound_0=function(){return(Op=b._emscripten_bind_btGImpactMeshShape_updateBound_0=b.asm.jn).apply(null,arguments)},Pp=b._emscripten_bind_btGImpactMeshShape_postUpdate_0=function(){return(Pp=b._emscripten_bind_btGImpactMeshShape_postUpdate_0=b.asm.kn).apply(null,arguments)},Qp=b._emscripten_bind_btGImpactMeshShape_getShapeType_0=function(){return(Qp=\nb._emscripten_bind_btGImpactMeshShape_getShapeType_0=b.asm.ln).apply(null,arguments)},Rp=b._emscripten_bind_btGImpactMeshShape_needsRetrieveTriangles_0=function(){return(Rp=b._emscripten_bind_btGImpactMeshShape_needsRetrieveTriangles_0=b.asm.mn).apply(null,arguments)},Sp=b._emscripten_bind_btGImpactMeshShape_needsRetrieveTetrahedrons_0=function(){return(Sp=b._emscripten_bind_btGImpactMeshShape_needsRetrieveTetrahedrons_0=b.asm.nn).apply(null,arguments)},Tp=b._emscripten_bind_btGImpactMeshShape_getBulletTriangle_2=\nfunction(){return(Tp=b._emscripten_bind_btGImpactMeshShape_getBulletTriangle_2=b.asm.on).apply(null,arguments)},Up=b._emscripten_bind_btGImpactMeshShape_getBulletTetrahedron_2=function(){return(Up=b._emscripten_bind_btGImpactMeshShape_getBulletTetrahedron_2=b.asm.pn).apply(null,arguments)},Vp=b._emscripten_bind_btGImpactMeshShape___destroy___0=function(){return(Vp=b._emscripten_bind_btGImpactMeshShape___destroy___0=b.asm.qn).apply(null,arguments)},Wp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_0=\nfunction(){return(Wp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_0=b.asm.rn).apply(null,arguments)},Xp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_2=function(){return(Xp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_2=b.asm.sn).apply(null,arguments)},Yp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_get_m_dispatcher1_0=function(){return(Yp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_get_m_dispatcher1_0=\nb.asm.tn).apply(null,arguments)},Zp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_set_m_dispatcher1_1=function(){return(Zp=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_set_m_dispatcher1_1=b.asm.un).apply(null,arguments)},$p=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_get_m_manifold_0=function(){return($p=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_get_m_manifold_0=b.asm.vn).apply(null,arguments)},aq=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_set_m_manifold_1=\nfunction(){return(aq=b._emscripten_bind_btCollisionAlgorithmConstructionInfo_set_m_manifold_1=b.asm.wn).apply(null,arguments)},bq=b._emscripten_bind_btCollisionAlgorithmConstructionInfo___destroy___0=function(){return(bq=b._emscripten_bind_btCollisionAlgorithmConstructionInfo___destroy___0=b.asm.xn).apply(null,arguments)},cq=b._emscripten_bind_btGImpactCollisionAlgorithm_btGImpactCollisionAlgorithm_3=function(){return(cq=b._emscripten_bind_btGImpactCollisionAlgorithm_btGImpactCollisionAlgorithm_3=\nb.asm.yn).apply(null,arguments)},dq=b._emscripten_bind_btGImpactCollisionAlgorithm_registerAlgorithm_1=function(){return(dq=b._emscripten_bind_btGImpactCollisionAlgorithm_registerAlgorithm_1=b.asm.zn).apply(null,arguments)},eq=b._emscripten_bind_btGImpactCollisionAlgorithm___destroy___0=function(){return(eq=b._emscripten_bind_btGImpactCollisionAlgorithm___destroy___0=b.asm.An).apply(null,arguments)},fq=b._emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=function(){return(fq=\nb._emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=b.asm.Bn).apply(null,arguments)},gq=b._emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=function(){return(gq=b._emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=b.asm.Cn).apply(null,arguments)},hq=b._emscripten_bind_btPersistentManifold_btPersistentManifold_0=function(){return(hq=b._emscripten_bind_btPersistentManifold_btPersistentManifold_0=b.asm.Dn).apply(null,arguments)},iq=\nb._emscripten_bind_btPersistentManifold_getBody0_0=function(){return(iq=b._emscripten_bind_btPersistentManifold_getBody0_0=b.asm.En).apply(null,arguments)},jq=b._emscripten_bind_btPersistentManifold_getBody1_0=function(){return(jq=b._emscripten_bind_btPersistentManifold_getBody1_0=b.asm.Fn).apply(null,arguments)},kq=b._emscripten_bind_btPersistentManifold_getNumContacts_0=function(){return(kq=b._emscripten_bind_btPersistentManifold_getNumContacts_0=b.asm.Gn).apply(null,arguments)},lq=b._emscripten_bind_btPersistentManifold_getContactPoint_1=\nfunction(){return(lq=b._emscripten_bind_btPersistentManifold_getContactPoint_1=b.asm.Hn).apply(null,arguments)},mq=b._emscripten_bind_btPersistentManifold___destroy___0=function(){return(mq=b._emscripten_bind_btPersistentManifold___destroy___0=b.asm.In).apply(null,arguments)},nq=b._emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=function(){return(nq=b._emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=b.asm.Jn).apply(null,arguments)},oq=b._emscripten_bind_btCollisionDispatcher_getNumManifolds_0=\nfunction(){return(oq=b._emscripten_bind_btCollisionDispatcher_getNumManifolds_0=b.asm.Kn).apply(null,arguments)},pq=b._emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=function(){return(pq=b._emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=b.asm.Ln).apply(null,arguments)},qq=b._emscripten_bind_btCollisionDispatcher___destroy___0=function(){return(qq=b._emscripten_bind_btCollisionDispatcher___destroy___0=b.asm.Mn).apply(null,arguments)},rq=b._emscripten_bind_btOverlappingPairCallback___destroy___0=\nfunction(){return(rq=b._emscripten_bind_btOverlappingPairCallback___destroy___0=b.asm.Nn).apply(null,arguments)},sq=b._emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=function(){return(sq=b._emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=b.asm.On).apply(null,arguments)},tq=b._emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0=function(){return(tq=b._emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0=b.asm.Pn).apply(null,arguments)},\nuq=b._emscripten_bind_btOverlappingPairCache___destroy___0=function(){return(uq=b._emscripten_bind_btOverlappingPairCache___destroy___0=b.asm.Qn).apply(null,arguments)},vq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_2=function(){return(vq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_2=b.asm.Rn).apply(null,arguments)},wq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_3=function(){return(wq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_3=b.asm.Sn).apply(null,arguments)},xq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_4=\nfunction(){return(xq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_4=b.asm.Tn).apply(null,arguments)},yq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_5=function(){return(yq=b._emscripten_bind_btAxisSweep3_btAxisSweep3_5=b.asm.Un).apply(null,arguments)},zq=b._emscripten_bind_btAxisSweep3___destroy___0=function(){return(zq=b._emscripten_bind_btAxisSweep3___destroy___0=b.asm.Vn).apply(null,arguments)},Aq=b._emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0=function(){return(Aq=b._emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0=\nb.asm.Wn).apply(null,arguments)},Bq=b._emscripten_bind_btBroadphaseInterface___destroy___0=function(){return(Bq=b._emscripten_bind_btBroadphaseInterface___destroy___0=b.asm.Xn).apply(null,arguments)},Cq=b._emscripten_bind_btCollisionConfiguration___destroy___0=function(){return(Cq=b._emscripten_bind_btCollisionConfiguration___destroy___0=b.asm.Yn).apply(null,arguments)},Dq=b._emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=function(){return(Dq=b._emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=\nb.asm.Zn).apply(null,arguments)},Eq=b._emscripten_bind_btDbvtBroadphase___destroy___0=function(){return(Eq=b._emscripten_bind_btDbvtBroadphase___destroy___0=b.asm._n).apply(null,arguments)},Fq=b._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0=function(){return(Fq=b._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0=b.asm.$n).apply(null,arguments)},Gq=b._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1=function(){return(Gq=b._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1=\nb.asm.ao).apply(null,arguments)},Hq=b._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0=function(){return(Hq=b._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0=b.asm.bo).apply(null,arguments)},Iq=b._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1=function(){return(Iq=b._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1=b.asm.co).apply(null,arguments)},Jq=b._emscripten_bind_btBroadphaseProxy___destroy___0=function(){return(Jq=b._emscripten_bind_btBroadphaseProxy___destroy___0=\nb.asm.eo).apply(null,arguments)},Kq=b._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=function(){return(Kq=b._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=b.asm.fo).apply(null,arguments)},Lq=b._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=function(){return(Lq=b._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=b.asm.go).apply(null,arguments)},Mq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=\nfunction(){return(Mq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=b.asm.ho).apply(null,arguments)},Nq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=function(){return(Nq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=b.asm.io).apply(null,arguments)},Oq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=function(){return(Oq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=b.asm.jo).apply(null,\narguments)},Pq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=function(){return(Pq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=b.asm.ko).apply(null,arguments)},Qq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=function(){return(Qq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=b.asm.lo).apply(null,arguments)},Rq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=function(){return(Rq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=\nb.asm.mo).apply(null,arguments)},Sq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=function(){return(Sq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=b.asm.no).apply(null,arguments)},Tq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=function(){return(Tq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=b.asm.oo).apply(null,arguments)},Uq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=\nfunction(){return(Uq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=b.asm.po).apply(null,arguments)},Vq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=function(){return(Vq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=b.asm.qo).apply(null,arguments)},Wq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=function(){return(Wq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=b.asm.ro).apply(null,\narguments)},Xq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=function(){return(Xq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=b.asm.so).apply(null,arguments)},Yq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=function(){return(Yq=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=b.asm.to).apply(null,arguments)},Zq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=\nfunction(){return(Zq=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=b.asm.uo).apply(null,arguments)},$q=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=function(){return($q=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=b.asm.vo).apply(null,arguments)},ar=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=function(){return(ar=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=\nb.asm.wo).apply(null,arguments)},br=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=function(){return(br=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=b.asm.xo).apply(null,arguments)},cr=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=function(){return(cr=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=b.asm.yo).apply(null,arguments)},dr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=\nfunction(){return(dr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=b.asm.zo).apply(null,arguments)},er=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=function(){return(er=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=b.asm.Ao).apply(null,arguments)},fr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=function(){return(fr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=\nb.asm.Bo).apply(null,arguments)},gr=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=function(){return(gr=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=b.asm.Co).apply(null,arguments)},hr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=function(){return(hr=b._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=b.asm.Do).apply(null,arguments)},\nir=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=function(){return(ir=b._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=b.asm.Eo).apply(null,arguments)},jr=b._emscripten_bind_btRigidBodyConstructionInfo___destroy___0=function(){return(jr=b._emscripten_bind_btRigidBodyConstructionInfo___destroy___0=b.asm.Fo).apply(null,arguments)},kr=b._emscripten_bind_btRigidBody_btRigidBody_1=function(){return(kr=b._emscripten_bind_btRigidBody_btRigidBody_1=\nb.asm.Go).apply(null,arguments)},lr=b._emscripten_bind_btRigidBody_getCenterOfMassTransform_0=function(){return(lr=b._emscripten_bind_btRigidBody_getCenterOfMassTransform_0=b.asm.Ho).apply(null,arguments)},mr=b._emscripten_bind_btRigidBody_setCenterOfMassTransform_1=function(){return(mr=b._emscripten_bind_btRigidBody_setCenterOfMassTransform_1=b.asm.Io).apply(null,arguments)},nr=b._emscripten_bind_btRigidBody_setSleepingThresholds_2=function(){return(nr=b._emscripten_bind_btRigidBody_setSleepingThresholds_2=\nb.asm.Jo).apply(null,arguments)},or=b._emscripten_bind_btRigidBody_getLinearDamping_0=function(){return(or=b._emscripten_bind_btRigidBody_getLinearDamping_0=b.asm.Ko).apply(null,arguments)},pr=b._emscripten_bind_btRigidBody_getAngularDamping_0=function(){return(pr=b._emscripten_bind_btRigidBody_getAngularDamping_0=b.asm.Lo).apply(null,arguments)},qr=b._emscripten_bind_btRigidBody_setDamping_2=function(){return(qr=b._emscripten_bind_btRigidBody_setDamping_2=b.asm.Mo).apply(null,arguments)},rr=b._emscripten_bind_btRigidBody_setMassProps_2=\nfunction(){return(rr=b._emscripten_bind_btRigidBody_setMassProps_2=b.asm.No).apply(null,arguments)},sr=b._emscripten_bind_btRigidBody_getLinearFactor_0=function(){return(sr=b._emscripten_bind_btRigidBody_getLinearFactor_0=b.asm.Oo).apply(null,arguments)},tr=b._emscripten_bind_btRigidBody_setLinearFactor_1=function(){return(tr=b._emscripten_bind_btRigidBody_setLinearFactor_1=b.asm.Po).apply(null,arguments)},ur=b._emscripten_bind_btRigidBody_applyTorque_1=function(){return(ur=b._emscripten_bind_btRigidBody_applyTorque_1=\nb.asm.Qo).apply(null,arguments)},vr=b._emscripten_bind_btRigidBody_applyLocalTorque_1=function(){return(vr=b._emscripten_bind_btRigidBody_applyLocalTorque_1=b.asm.Ro).apply(null,arguments)},wr=b._emscripten_bind_btRigidBody_applyForce_2=function(){return(wr=b._emscripten_bind_btRigidBody_applyForce_2=b.asm.So).apply(null,arguments)},xr=b._emscripten_bind_btRigidBody_applyCentralForce_1=function(){return(xr=b._emscripten_bind_btRigidBody_applyCentralForce_1=b.asm.To).apply(null,arguments)},yr=b._emscripten_bind_btRigidBody_applyCentralLocalForce_1=\nfunction(){return(yr=b._emscripten_bind_btRigidBody_applyCentralLocalForce_1=b.asm.Uo).apply(null,arguments)},zr=b._emscripten_bind_btRigidBody_applyTorqueImpulse_1=function(){return(zr=b._emscripten_bind_btRigidBody_applyTorqueImpulse_1=b.asm.Vo).apply(null,arguments)},Ar=b._emscripten_bind_btRigidBody_applyImpulse_2=function(){return(Ar=b._emscripten_bind_btRigidBody_applyImpulse_2=b.asm.Wo).apply(null,arguments)},Br=b._emscripten_bind_btRigidBody_applyCentralImpulse_1=function(){return(Br=b._emscripten_bind_btRigidBody_applyCentralImpulse_1=\nb.asm.Xo).apply(null,arguments)},Cr=b._emscripten_bind_btRigidBody_updateInertiaTensor_0=function(){return(Cr=b._emscripten_bind_btRigidBody_updateInertiaTensor_0=b.asm.Yo).apply(null,arguments)},Dr=b._emscripten_bind_btRigidBody_getLinearVelocity_0=function(){return(Dr=b._emscripten_bind_btRigidBody_getLinearVelocity_0=b.asm.Zo).apply(null,arguments)},Er=b._emscripten_bind_btRigidBody_getAngularVelocity_0=function(){return(Er=b._emscripten_bind_btRigidBody_getAngularVelocity_0=b.asm._o).apply(null,\narguments)},Fr=b._emscripten_bind_btRigidBody_setLinearVelocity_1=function(){return(Fr=b._emscripten_bind_btRigidBody_setLinearVelocity_1=b.asm.$o).apply(null,arguments)},Gr=b._emscripten_bind_btRigidBody_setAngularVelocity_1=function(){return(Gr=b._emscripten_bind_btRigidBody_setAngularVelocity_1=b.asm.ap).apply(null,arguments)},Hr=b._emscripten_bind_btRigidBody_getMotionState_0=function(){return(Hr=b._emscripten_bind_btRigidBody_getMotionState_0=b.asm.bp).apply(null,arguments)},Ir=b._emscripten_bind_btRigidBody_setMotionState_1=\nfunction(){return(Ir=b._emscripten_bind_btRigidBody_setMotionState_1=b.asm.cp).apply(null,arguments)},Jr=b._emscripten_bind_btRigidBody_getAngularFactor_0=function(){return(Jr=b._emscripten_bind_btRigidBody_getAngularFactor_0=b.asm.dp).apply(null,arguments)},Kr=b._emscripten_bind_btRigidBody_setAngularFactor_1=function(){return(Kr=b._emscripten_bind_btRigidBody_setAngularFactor_1=b.asm.ep).apply(null,arguments)},Lr=b._emscripten_bind_btRigidBody_upcast_1=function(){return(Lr=b._emscripten_bind_btRigidBody_upcast_1=\nb.asm.fp).apply(null,arguments)},Mr=b._emscripten_bind_btRigidBody_getAabb_2=function(){return(Mr=b._emscripten_bind_btRigidBody_getAabb_2=b.asm.gp).apply(null,arguments)},Nr=b._emscripten_bind_btRigidBody_applyGravity_0=function(){return(Nr=b._emscripten_bind_btRigidBody_applyGravity_0=b.asm.hp).apply(null,arguments)},Or=b._emscripten_bind_btRigidBody_getGravity_0=function(){return(Or=b._emscripten_bind_btRigidBody_getGravity_0=b.asm.ip).apply(null,arguments)},Pr=b._emscripten_bind_btRigidBody_setGravity_1=\nfunction(){return(Pr=b._emscripten_bind_btRigidBody_setGravity_1=b.asm.jp).apply(null,arguments)},Qr=b._emscripten_bind_btRigidBody_getBroadphaseProxy_0=function(){return(Qr=b._emscripten_bind_btRigidBody_getBroadphaseProxy_0=b.asm.kp).apply(null,arguments)},Rr=b._emscripten_bind_btRigidBody_clearForces_0=function(){return(Rr=b._emscripten_bind_btRigidBody_clearForces_0=b.asm.lp).apply(null,arguments)},Sr=b._emscripten_bind_btRigidBody_setAnisotropicFriction_2=function(){return(Sr=b._emscripten_bind_btRigidBody_setAnisotropicFriction_2=\nb.asm.mp).apply(null,arguments)},Tr=b._emscripten_bind_btRigidBody_getCollisionShape_0=function(){return(Tr=b._emscripten_bind_btRigidBody_getCollisionShape_0=b.asm.np).apply(null,arguments)},Ur=b._emscripten_bind_btRigidBody_setContactProcessingThreshold_1=function(){return(Ur=b._emscripten_bind_btRigidBody_setContactProcessingThreshold_1=b.asm.op).apply(null,arguments)},Vr=b._emscripten_bind_btRigidBody_setActivationState_1=function(){return(Vr=b._emscripten_bind_btRigidBody_setActivationState_1=\nb.asm.pp).apply(null,arguments)},Wr=b._emscripten_bind_btRigidBody_forceActivationState_1=function(){return(Wr=b._emscripten_bind_btRigidBody_forceActivationState_1=b.asm.qp).apply(null,arguments)},Xr=b._emscripten_bind_btRigidBody_activate_0=function(){return(Xr=b._emscripten_bind_btRigidBody_activate_0=b.asm.rp).apply(null,arguments)},Yr=b._emscripten_bind_btRigidBody_activate_1=function(){return(Yr=b._emscripten_bind_btRigidBody_activate_1=b.asm.sp).apply(null,arguments)},Zr=b._emscripten_bind_btRigidBody_isActive_0=\nfunction(){return(Zr=b._emscripten_bind_btRigidBody_isActive_0=b.asm.tp).apply(null,arguments)},$r=b._emscripten_bind_btRigidBody_isKinematicObject_0=function(){return($r=b._emscripten_bind_btRigidBody_isKinematicObject_0=b.asm.up).apply(null,arguments)},as=b._emscripten_bind_btRigidBody_isStaticObject_0=function(){return(as=b._emscripten_bind_btRigidBody_isStaticObject_0=b.asm.vp).apply(null,arguments)},bs=b._emscripten_bind_btRigidBody_isStaticOrKinematicObject_0=function(){return(bs=b._emscripten_bind_btRigidBody_isStaticOrKinematicObject_0=\nb.asm.wp).apply(null,arguments)},cs=b._emscripten_bind_btRigidBody_getRestitution_0=function(){return(cs=b._emscripten_bind_btRigidBody_getRestitution_0=b.asm.xp).apply(null,arguments)},ds=b._emscripten_bind_btRigidBody_getFriction_0=function(){return(ds=b._emscripten_bind_btRigidBody_getFriction_0=b.asm.yp).apply(null,arguments)},es=b._emscripten_bind_btRigidBody_getRollingFriction_0=function(){return(es=b._emscripten_bind_btRigidBody_getRollingFriction_0=b.asm.zp).apply(null,arguments)},gs=b._emscripten_bind_btRigidBody_setRestitution_1=\nfunction(){return(gs=b._emscripten_bind_btRigidBody_setRestitution_1=b.asm.Ap).apply(null,arguments)},hs=b._emscripten_bind_btRigidBody_setFriction_1=function(){return(hs=b._emscripten_bind_btRigidBody_setFriction_1=b.asm.Bp).apply(null,arguments)},is=b._emscripten_bind_btRigidBody_setRollingFriction_1=function(){return(is=b._emscripten_bind_btRigidBody_setRollingFriction_1=b.asm.Cp).apply(null,arguments)},js=b._emscripten_bind_btRigidBody_getWorldTransform_0=function(){return(js=b._emscripten_bind_btRigidBody_getWorldTransform_0=\nb.asm.Dp).apply(null,arguments)},ks=b._emscripten_bind_btRigidBody_getCollisionFlags_0=function(){return(ks=b._emscripten_bind_btRigidBody_getCollisionFlags_0=b.asm.Ep).apply(null,arguments)},ls=b._emscripten_bind_btRigidBody_setCollisionFlags_1=function(){return(ls=b._emscripten_bind_btRigidBody_setCollisionFlags_1=b.asm.Fp).apply(null,arguments)},ms=b._emscripten_bind_btRigidBody_setWorldTransform_1=function(){return(ms=b._emscripten_bind_btRigidBody_setWorldTransform_1=b.asm.Gp).apply(null,arguments)},\nns=b._emscripten_bind_btRigidBody_setCollisionShape_1=function(){return(ns=b._emscripten_bind_btRigidBody_setCollisionShape_1=b.asm.Hp).apply(null,arguments)},ps=b._emscripten_bind_btRigidBody_setCcdMotionThreshold_1=function(){return(ps=b._emscripten_bind_btRigidBody_setCcdMotionThreshold_1=b.asm.Ip).apply(null,arguments)},qs=b._emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=function(){return(qs=b._emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=b.asm.Jp).apply(null,arguments)},rs=b._emscripten_bind_btRigidBody_getUserIndex_0=\nfunction(){return(rs=b._emscripten_bind_btRigidBody_getUserIndex_0=b.asm.Kp).apply(null,arguments)},ss=b._emscripten_bind_btRigidBody_setUserIndex_1=function(){return(ss=b._emscripten_bind_btRigidBody_setUserIndex_1=b.asm.Lp).apply(null,arguments)},ts=b._emscripten_bind_btRigidBody_getUserPointer_0=function(){return(ts=b._emscripten_bind_btRigidBody_getUserPointer_0=b.asm.Mp).apply(null,arguments)},us=b._emscripten_bind_btRigidBody_setUserPointer_1=function(){return(us=b._emscripten_bind_btRigidBody_setUserPointer_1=\nb.asm.Np).apply(null,arguments)},vs=b._emscripten_bind_btRigidBody_getBroadphaseHandle_0=function(){return(vs=b._emscripten_bind_btRigidBody_getBroadphaseHandle_0=b.asm.Op).apply(null,arguments)},xs=b._emscripten_bind_btRigidBody___destroy___0=function(){return(xs=b._emscripten_bind_btRigidBody___destroy___0=b.asm.Pp).apply(null,arguments)},ys=b._emscripten_bind_btConstraintSetting_btConstraintSetting_0=function(){return(ys=b._emscripten_bind_btConstraintSetting_btConstraintSetting_0=b.asm.Qp).apply(null,\narguments)},zs=b._emscripten_bind_btConstraintSetting_get_m_tau_0=function(){return(zs=b._emscripten_bind_btConstraintSetting_get_m_tau_0=b.asm.Rp).apply(null,arguments)},As=b._emscripten_bind_btConstraintSetting_set_m_tau_1=function(){return(As=b._emscripten_bind_btConstraintSetting_set_m_tau_1=b.asm.Sp).apply(null,arguments)},Bs=b._emscripten_bind_btConstraintSetting_get_m_damping_0=function(){return(Bs=b._emscripten_bind_btConstraintSetting_get_m_damping_0=b.asm.Tp).apply(null,arguments)},Cs=b._emscripten_bind_btConstraintSetting_set_m_damping_1=\nfunction(){return(Cs=b._emscripten_bind_btConstraintSetting_set_m_damping_1=b.asm.Up).apply(null,arguments)},Ds=b._emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=function(){return(Ds=b._emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=b.asm.Vp).apply(null,arguments)},Es=b._emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=function(){return(Es=b._emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=b.asm.Wp).apply(null,arguments)},Fs=b._emscripten_bind_btConstraintSetting___destroy___0=\nfunction(){return(Fs=b._emscripten_bind_btConstraintSetting___destroy___0=b.asm.Xp).apply(null,arguments)},Gs=b._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=function(){return(Gs=b._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=b.asm.Yp).apply(null,arguments)},Hs=b._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=function(){return(Hs=b._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=b.asm.Zp).apply(null,arguments)},Is=b._emscripten_bind_btPoint2PointConstraint_setPivotA_1=\nfunction(){return(Is=b._emscripten_bind_btPoint2PointConstraint_setPivotA_1=b.asm._p).apply(null,arguments)},Js=b._emscripten_bind_btPoint2PointConstraint_setPivotB_1=function(){return(Js=b._emscripten_bind_btPoint2PointConstraint_setPivotB_1=b.asm.$p).apply(null,arguments)},Ks=b._emscripten_bind_btPoint2PointConstraint_getPivotInA_0=function(){return(Ks=b._emscripten_bind_btPoint2PointConstraint_getPivotInA_0=b.asm.aq).apply(null,arguments)},Ls=b._emscripten_bind_btPoint2PointConstraint_getPivotInB_0=\nfunction(){return(Ls=b._emscripten_bind_btPoint2PointConstraint_getPivotInB_0=b.asm.bq).apply(null,arguments)},Ms=b._emscripten_bind_btPoint2PointConstraint_enableFeedback_1=function(){return(Ms=b._emscripten_bind_btPoint2PointConstraint_enableFeedback_1=b.asm.cq).apply(null,arguments)},Ns=b._emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=function(){return(Ns=b._emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=b.asm.dq).apply(null,arguments)},Os=b._emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=\nfunction(){return(Os=b._emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=b.asm.eq).apply(null,arguments)},Ps=b._emscripten_bind_btPoint2PointConstraint_getParam_2=function(){return(Ps=b._emscripten_bind_btPoint2PointConstraint_getParam_2=b.asm.fq).apply(null,arguments)},Qs=b._emscripten_bind_btPoint2PointConstraint_setParam_3=function(){return(Qs=b._emscripten_bind_btPoint2PointConstraint_setParam_3=b.asm.gq).apply(null,arguments)},Rs=b._emscripten_bind_btPoint2PointConstraint_get_m_setting_0=\nfunction(){return(Rs=b._emscripten_bind_btPoint2PointConstraint_get_m_setting_0=b.asm.hq).apply(null,arguments)},Ss=b._emscripten_bind_btPoint2PointConstraint_set_m_setting_1=function(){return(Ss=b._emscripten_bind_btPoint2PointConstraint_set_m_setting_1=b.asm.iq).apply(null,arguments)},Ts=b._emscripten_bind_btPoint2PointConstraint___destroy___0=function(){return(Ts=b._emscripten_bind_btPoint2PointConstraint___destroy___0=b.asm.jq).apply(null,arguments)},Us=b._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=\nfunction(){return(Us=b._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=b.asm.kq).apply(null,arguments)},Vs=b._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=function(){return(Vs=b._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=b.asm.lq).apply(null,arguments)},Ws=b._emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=function(){return(Ws=b._emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=\nb.asm.mq).apply(null,arguments)},Xs=b._emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=function(){return(Xs=b._emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=b.asm.nq).apply(null,arguments)},Ys=b._emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=function(){return(Ys=b._emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=b.asm.oq).apply(null,arguments)},Zs=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0=function(){return(Zs=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0=\nb.asm.pq).apply(null,arguments)},$s=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1=function(){return($s=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1=b.asm.qq).apply(null,arguments)},at=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2=function(){return(at=b._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2=b.asm.rq).apply(null,arguments)},bt=b._emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=\nfunction(){return(bt=b._emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=b.asm.sq).apply(null,arguments)},ct=b._emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=function(){return(ct=b._emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=b.asm.tq).apply(null,arguments)},dt=b._emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=function(){return(dt=b._emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=b.asm.uq).apply(null,\narguments)},et=b._emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=function(){return(et=b._emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=b.asm.vq).apply(null,arguments)},ft=b._emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0=function(){return(ft=b._emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0=b.asm.wq).apply(null,arguments)},gt=b._emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=function(){return(gt=b._emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=\nb.asm.xq).apply(null,arguments)},ht=b._emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=function(){return(ht=b._emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=b.asm.yq).apply(null,arguments)},it=b._emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=function(){return(it=b._emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=b.asm.zq).apply(null,arguments)},jt=b._emscripten_bind_btGeneric6DofSpringConstraint_getParam_2=\nfunction(){return(jt=b._emscripten_bind_btGeneric6DofSpringConstraint_getParam_2=b.asm.Aq).apply(null,arguments)},kt=b._emscripten_bind_btGeneric6DofSpringConstraint_setParam_3=function(){return(kt=b._emscripten_bind_btGeneric6DofSpringConstraint_setParam_3=b.asm.Bq).apply(null,arguments)},lt=b._emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=function(){return(lt=b._emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=b.asm.Cq).apply(null,arguments)},mt=b._emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=\nfunction(){return(mt=b._emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=b.asm.Dq).apply(null,arguments)},nt=b._emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=function(){return(nt=b._emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=b.asm.Eq).apply(null,arguments)},ot=b._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=function(){return(ot=b._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=b.asm.Fq).apply(null,\narguments)},pt=b._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=function(){return(pt=b._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=b.asm.Gq).apply(null,arguments)},qt=b._emscripten_bind_btConeTwistConstraint_setLimit_2=function(){return(qt=b._emscripten_bind_btConeTwistConstraint_setLimit_2=b.asm.Hq).apply(null,arguments)},rt=b._emscripten_bind_btConeTwistConstraint_setAngularOnly_1=function(){return(rt=b._emscripten_bind_btConeTwistConstraint_setAngularOnly_1=b.asm.Iq).apply(null,\narguments)},st=b._emscripten_bind_btConeTwistConstraint_setDamping_1=function(){return(st=b._emscripten_bind_btConeTwistConstraint_setDamping_1=b.asm.Jq).apply(null,arguments)},tt=b._emscripten_bind_btConeTwistConstraint_enableMotor_1=function(){return(tt=b._emscripten_bind_btConeTwistConstraint_enableMotor_1=b.asm.Kq).apply(null,arguments)},ut=b._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=function(){return(ut=b._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=b.asm.Lq).apply(null,\narguments)},vt=b._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=function(){return(vt=b._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=b.asm.Mq).apply(null,arguments)},wt=b._emscripten_bind_btConeTwistConstraint_setMotorTarget_1=function(){return(wt=b._emscripten_bind_btConeTwistConstraint_setMotorTarget_1=b.asm.Nq).apply(null,arguments)},xt=b._emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=function(){return(xt=b._emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=\nb.asm.Oq).apply(null,arguments)},yt=b._emscripten_bind_btConeTwistConstraint_enableFeedback_1=function(){return(yt=b._emscripten_bind_btConeTwistConstraint_enableFeedback_1=b.asm.Pq).apply(null,arguments)},zt=b._emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=function(){return(zt=b._emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=b.asm.Qq).apply(null,arguments)},At=b._emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=function(){return(At=b._emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=\nb.asm.Rq).apply(null,arguments)},Bt=b._emscripten_bind_btConeTwistConstraint_getParam_2=function(){return(Bt=b._emscripten_bind_btConeTwistConstraint_getParam_2=b.asm.Sq).apply(null,arguments)},Ct=b._emscripten_bind_btConeTwistConstraint_setParam_3=function(){return(Ct=b._emscripten_bind_btConeTwistConstraint_setParam_3=b.asm.Tq).apply(null,arguments)},Dt=b._emscripten_bind_btConeTwistConstraint___destroy___0=function(){return(Dt=b._emscripten_bind_btConeTwistConstraint___destroy___0=b.asm.Uq).apply(null,\narguments)},Et=b._emscripten_bind_btHingeConstraint_btHingeConstraint_2=function(){return(Et=b._emscripten_bind_btHingeConstraint_btHingeConstraint_2=b.asm.Vq).apply(null,arguments)},Ft=b._emscripten_bind_btHingeConstraint_btHingeConstraint_3=function(){return(Ft=b._emscripten_bind_btHingeConstraint_btHingeConstraint_3=b.asm.Wq).apply(null,arguments)},Gt=b._emscripten_bind_btHingeConstraint_btHingeConstraint_4=function(){return(Gt=b._emscripten_bind_btHingeConstraint_btHingeConstraint_4=b.asm.Xq).apply(null,\narguments)},Ht=b._emscripten_bind_btHingeConstraint_btHingeConstraint_5=function(){return(Ht=b._emscripten_bind_btHingeConstraint_btHingeConstraint_5=b.asm.Yq).apply(null,arguments)},It=b._emscripten_bind_btHingeConstraint_btHingeConstraint_6=function(){return(It=b._emscripten_bind_btHingeConstraint_btHingeConstraint_6=b.asm.Zq).apply(null,arguments)},Jt=b._emscripten_bind_btHingeConstraint_btHingeConstraint_7=function(){return(Jt=b._emscripten_bind_btHingeConstraint_btHingeConstraint_7=b.asm._q).apply(null,\narguments)},Kt=b._emscripten_bind_btHingeConstraint_getHingeAngle_0=function(){return(Kt=b._emscripten_bind_btHingeConstraint_getHingeAngle_0=b.asm.$q).apply(null,arguments)},Lt=b._emscripten_bind_btHingeConstraint_setLimit_4=function(){return(Lt=b._emscripten_bind_btHingeConstraint_setLimit_4=b.asm.ar).apply(null,arguments)},Mt=b._emscripten_bind_btHingeConstraint_setLimit_5=function(){return(Mt=b._emscripten_bind_btHingeConstraint_setLimit_5=b.asm.br).apply(null,arguments)},Nt=b._emscripten_bind_btHingeConstraint_enableAngularMotor_3=\nfunction(){return(Nt=b._emscripten_bind_btHingeConstraint_enableAngularMotor_3=b.asm.cr).apply(null,arguments)},Ot=b._emscripten_bind_btHingeConstraint_setAngularOnly_1=function(){return(Ot=b._emscripten_bind_btHingeConstraint_setAngularOnly_1=b.asm.dr).apply(null,arguments)},Pt=b._emscripten_bind_btHingeConstraint_enableMotor_1=function(){return(Pt=b._emscripten_bind_btHingeConstraint_enableMotor_1=b.asm.er).apply(null,arguments)},Qt=b._emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=function(){return(Qt=\nb._emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=b.asm.fr).apply(null,arguments)},Rt=b._emscripten_bind_btHingeConstraint_setMotorTarget_2=function(){return(Rt=b._emscripten_bind_btHingeConstraint_setMotorTarget_2=b.asm.gr).apply(null,arguments)},St=b._emscripten_bind_btHingeConstraint_enableFeedback_1=function(){return(St=b._emscripten_bind_btHingeConstraint_enableFeedback_1=b.asm.hr).apply(null,arguments)},Tt=b._emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=function(){return(Tt=\nb._emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=b.asm.ir).apply(null,arguments)},Ut=b._emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=function(){return(Ut=b._emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=b.asm.jr).apply(null,arguments)},Vt=b._emscripten_bind_btHingeConstraint_getParam_2=function(){return(Vt=b._emscripten_bind_btHingeConstraint_getParam_2=b.asm.kr).apply(null,arguments)},Wt=b._emscripten_bind_btHingeConstraint_setParam_3=function(){return(Wt=\nb._emscripten_bind_btHingeConstraint_setParam_3=b.asm.lr).apply(null,arguments)},Xt=b._emscripten_bind_btHingeConstraint___destroy___0=function(){return(Xt=b._emscripten_bind_btHingeConstraint___destroy___0=b.asm.mr).apply(null,arguments)},Yt=b._emscripten_bind_btSliderConstraint_btSliderConstraint_3=function(){return(Yt=b._emscripten_bind_btSliderConstraint_btSliderConstraint_3=b.asm.nr).apply(null,arguments)},Zt=b._emscripten_bind_btSliderConstraint_btSliderConstraint_5=function(){return(Zt=b._emscripten_bind_btSliderConstraint_btSliderConstraint_5=\nb.asm.or).apply(null,arguments)},$t=b._emscripten_bind_btSliderConstraint_getLinearPos_0=function(){return($t=b._emscripten_bind_btSliderConstraint_getLinearPos_0=b.asm.pr).apply(null,arguments)},au=b._emscripten_bind_btSliderConstraint_getAngularPos_0=function(){return(au=b._emscripten_bind_btSliderConstraint_getAngularPos_0=b.asm.qr).apply(null,arguments)},bu=b._emscripten_bind_btSliderConstraint_setLowerLinLimit_1=function(){return(bu=b._emscripten_bind_btSliderConstraint_setLowerLinLimit_1=b.asm.rr).apply(null,\narguments)},cu=b._emscripten_bind_btSliderConstraint_setUpperLinLimit_1=function(){return(cu=b._emscripten_bind_btSliderConstraint_setUpperLinLimit_1=b.asm.sr).apply(null,arguments)},du=b._emscripten_bind_btSliderConstraint_setLowerAngLimit_1=function(){return(du=b._emscripten_bind_btSliderConstraint_setLowerAngLimit_1=b.asm.tr).apply(null,arguments)},eu=b._emscripten_bind_btSliderConstraint_setUpperAngLimit_1=function(){return(eu=b._emscripten_bind_btSliderConstraint_setUpperAngLimit_1=b.asm.ur).apply(null,\narguments)},fu=b._emscripten_bind_btSliderConstraint_setPoweredLinMotor_1=function(){return(fu=b._emscripten_bind_btSliderConstraint_setPoweredLinMotor_1=b.asm.vr).apply(null,arguments)},gu=b._emscripten_bind_btSliderConstraint_setMaxLinMotorForce_1=function(){return(gu=b._emscripten_bind_btSliderConstraint_setMaxLinMotorForce_1=b.asm.wr).apply(null,arguments)},hu=b._emscripten_bind_btSliderConstraint_setTargetLinMotorVelocity_1=function(){return(hu=b._emscripten_bind_btSliderConstraint_setTargetLinMotorVelocity_1=\nb.asm.xr).apply(null,arguments)},iu=b._emscripten_bind_btSliderConstraint_enableFeedback_1=function(){return(iu=b._emscripten_bind_btSliderConstraint_enableFeedback_1=b.asm.yr).apply(null,arguments)},ju=b._emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=function(){return(ju=b._emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=b.asm.zr).apply(null,arguments)},ku=b._emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=function(){return(ku=b._emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=\nb.asm.Ar).apply(null,arguments)},lu=b._emscripten_bind_btSliderConstraint_getParam_2=function(){return(lu=b._emscripten_bind_btSliderConstraint_getParam_2=b.asm.Br).apply(null,arguments)},mu=b._emscripten_bind_btSliderConstraint_setParam_3=function(){return(mu=b._emscripten_bind_btSliderConstraint_setParam_3=b.asm.Cr).apply(null,arguments)},nu=b._emscripten_bind_btSliderConstraint___destroy___0=function(){return(nu=b._emscripten_bind_btSliderConstraint___destroy___0=b.asm.Dr).apply(null,arguments)},\nou=b._emscripten_bind_btFixedConstraint_btFixedConstraint_4=function(){return(ou=b._emscripten_bind_btFixedConstraint_btFixedConstraint_4=b.asm.Er).apply(null,arguments)},pu=b._emscripten_bind_btFixedConstraint_enableFeedback_1=function(){return(pu=b._emscripten_bind_btFixedConstraint_enableFeedback_1=b.asm.Fr).apply(null,arguments)},qu=b._emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0=function(){return(qu=b._emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0=b.asm.Gr).apply(null,\narguments)},ru=b._emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1=function(){return(ru=b._emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1=b.asm.Hr).apply(null,arguments)},su=b._emscripten_bind_btFixedConstraint_getParam_2=function(){return(su=b._emscripten_bind_btFixedConstraint_getParam_2=b.asm.Ir).apply(null,arguments)},tu=b._emscripten_bind_btFixedConstraint_setParam_3=function(){return(tu=b._emscripten_bind_btFixedConstraint_setParam_3=b.asm.Jr).apply(null,arguments)},\nuu=b._emscripten_bind_btFixedConstraint___destroy___0=function(){return(uu=b._emscripten_bind_btFixedConstraint___destroy___0=b.asm.Kr).apply(null,arguments)},vu=b._emscripten_bind_btConstraintSolver___destroy___0=function(){return(vu=b._emscripten_bind_btConstraintSolver___destroy___0=b.asm.Lr).apply(null,arguments)},wu=b._emscripten_bind_btDispatcherInfo_get_m_timeStep_0=function(){return(wu=b._emscripten_bind_btDispatcherInfo_get_m_timeStep_0=b.asm.Mr).apply(null,arguments)},xu=b._emscripten_bind_btDispatcherInfo_set_m_timeStep_1=\nfunction(){return(xu=b._emscripten_bind_btDispatcherInfo_set_m_timeStep_1=b.asm.Nr).apply(null,arguments)},yu=b._emscripten_bind_btDispatcherInfo_get_m_stepCount_0=function(){return(yu=b._emscripten_bind_btDispatcherInfo_get_m_stepCount_0=b.asm.Or).apply(null,arguments)},zu=b._emscripten_bind_btDispatcherInfo_set_m_stepCount_1=function(){return(zu=b._emscripten_bind_btDispatcherInfo_set_m_stepCount_1=b.asm.Pr).apply(null,arguments)},Au=b._emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=function(){return(Au=\nb._emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=b.asm.Qr).apply(null,arguments)},Bu=b._emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=function(){return(Bu=b._emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=b.asm.Rr).apply(null,arguments)},Cu=b._emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=function(){return(Cu=b._emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=b.asm.Sr).apply(null,arguments)},Du=b._emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=function(){return(Du=\nb._emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=b.asm.Tr).apply(null,arguments)},Eu=b._emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=function(){return(Eu=b._emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=b.asm.Ur).apply(null,arguments)},Fu=b._emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=function(){return(Fu=b._emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=b.asm.Vr).apply(null,arguments)},Gu=b._emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=function(){return(Gu=\nb._emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=b.asm.Wr).apply(null,arguments)},Hu=b._emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=function(){return(Hu=b._emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=b.asm.Xr).apply(null,arguments)},Iu=b._emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=function(){return(Iu=b._emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=b.asm.Yr).apply(null,arguments)},Ju=b._emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=function(){return(Ju=\nb._emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=b.asm.Zr).apply(null,arguments)},Ku=b._emscripten_bind_btDispatcherInfo_get_m_useEpa_0=function(){return(Ku=b._emscripten_bind_btDispatcherInfo_get_m_useEpa_0=b.asm._r).apply(null,arguments)},Lu=b._emscripten_bind_btDispatcherInfo_set_m_useEpa_1=function(){return(Lu=b._emscripten_bind_btDispatcherInfo_set_m_useEpa_1=b.asm.$r).apply(null,arguments)},Mu=b._emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=function(){return(Mu=b._emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=\nb.asm.as).apply(null,arguments)},Nu=b._emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=function(){return(Nu=b._emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=b.asm.bs).apply(null,arguments)},Ou=b._emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=function(){return(Ou=b._emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=b.asm.cs).apply(null,arguments)},Pu=b._emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=\nfunction(){return(Pu=b._emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=b.asm.ds).apply(null,arguments)},Qu=b._emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=function(){return(Qu=b._emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=b.asm.es).apply(null,arguments)},Ru=b._emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=function(){return(Ru=b._emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=\nb.asm.fs).apply(null,arguments)},Su=b._emscripten_bind_btDispatcherInfo___destroy___0=function(){return(Su=b._emscripten_bind_btDispatcherInfo___destroy___0=b.asm.gs).apply(null,arguments)},Tu=b._emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=function(){return(Tu=b._emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=b.asm.hs).apply(null,arguments)},Uu=b._emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=function(){return(Uu=b._emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=\nb.asm.is).apply(null,arguments)},Vu=b._emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=function(){return(Vu=b._emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=b.asm.js).apply(null,arguments)},Wu=b._emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=function(){return(Wu=b._emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=b.asm.ks).apply(null,arguments)},Xu=b._emscripten_bind_btContactSolverInfo_get_m_numIterations_0=\nfunction(){return(Xu=b._emscripten_bind_btContactSolverInfo_get_m_numIterations_0=b.asm.ls).apply(null,arguments)},Yu=b._emscripten_bind_btContactSolverInfo_set_m_numIterations_1=function(){return(Yu=b._emscripten_bind_btContactSolverInfo_set_m_numIterations_1=b.asm.ms).apply(null,arguments)},Zu=b._emscripten_bind_btContactSolverInfo___destroy___0=function(){return(Zu=b._emscripten_bind_btContactSolverInfo___destroy___0=b.asm.ns).apply(null,arguments)},$u=b._emscripten_bind_btVehicleTuning_btVehicleTuning_0=\nfunction(){return($u=b._emscripten_bind_btVehicleTuning_btVehicleTuning_0=b.asm.os).apply(null,arguments)},av=b._emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0=function(){return(av=b._emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0=b.asm.ps).apply(null,arguments)},bv=b._emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1=function(){return(bv=b._emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1=b.asm.qs).apply(null,arguments)},cv=b._emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0=\nfunction(){return(cv=b._emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0=b.asm.rs).apply(null,arguments)},dv=b._emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1=function(){return(dv=b._emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1=b.asm.ss).apply(null,arguments)},ev=b._emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0=function(){return(ev=b._emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0=b.asm.ts).apply(null,arguments)},fv=b._emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1=\nfunction(){return(fv=b._emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1=b.asm.us).apply(null,arguments)},gv=b._emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0=function(){return(gv=b._emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0=b.asm.vs).apply(null,arguments)},hv=b._emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1=function(){return(hv=b._emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1=b.asm.ws).apply(null,arguments)},iv=b._emscripten_bind_btVehicleTuning_get_m_frictionSlip_0=\nfunction(){return(iv=b._emscripten_bind_btVehicleTuning_get_m_frictionSlip_0=b.asm.xs).apply(null,arguments)},jv=b._emscripten_bind_btVehicleTuning_set_m_frictionSlip_1=function(){return(jv=b._emscripten_bind_btVehicleTuning_set_m_frictionSlip_1=b.asm.ys).apply(null,arguments)},kv=b._emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0=function(){return(kv=b._emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0=b.asm.zs).apply(null,arguments)},lv=b._emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1=\nfunction(){return(lv=b._emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1=b.asm.As).apply(null,arguments)},mv=b._emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0=function(){return(mv=b._emscripten_bind_btVehicleRaycasterResult_get_m_hitPointInWorld_0=b.asm.Bs).apply(null,arguments)},nv=b._emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1=function(){return(nv=b._emscripten_bind_btVehicleRaycasterResult_set_m_hitPointInWorld_1=b.asm.Cs).apply(null,arguments)},\nov=b._emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0=function(){return(ov=b._emscripten_bind_btVehicleRaycasterResult_get_m_hitNormalInWorld_0=b.asm.Ds).apply(null,arguments)},pv=b._emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1=function(){return(pv=b._emscripten_bind_btVehicleRaycasterResult_set_m_hitNormalInWorld_1=b.asm.Es).apply(null,arguments)},qv=b._emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0=function(){return(qv=b._emscripten_bind_btVehicleRaycasterResult_get_m_distFraction_0=\nb.asm.Fs).apply(null,arguments)},rv=b._emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1=function(){return(rv=b._emscripten_bind_btVehicleRaycasterResult_set_m_distFraction_1=b.asm.Gs).apply(null,arguments)},sv=b._emscripten_bind_btVehicleRaycasterResult___destroy___0=function(){return(sv=b._emscripten_bind_btVehicleRaycasterResult___destroy___0=b.asm.Hs).apply(null,arguments)},tv=b._emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1=function(){return(tv=b._emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1=\nb.asm.Is).apply(null,arguments)},uv=b._emscripten_bind_btDefaultVehicleRaycaster_castRay_3=function(){return(uv=b._emscripten_bind_btDefaultVehicleRaycaster_castRay_3=b.asm.Js).apply(null,arguments)},vv=b._emscripten_bind_btDefaultVehicleRaycaster___destroy___0=function(){return(vv=b._emscripten_bind_btDefaultVehicleRaycaster___destroy___0=b.asm.Ks).apply(null,arguments)},wv=b._emscripten_bind_RaycastInfo_get_m_contactNormalWS_0=function(){return(wv=b._emscripten_bind_RaycastInfo_get_m_contactNormalWS_0=\nb.asm.Ls).apply(null,arguments)},xv=b._emscripten_bind_RaycastInfo_set_m_contactNormalWS_1=function(){return(xv=b._emscripten_bind_RaycastInfo_set_m_contactNormalWS_1=b.asm.Ms).apply(null,arguments)},yv=b._emscripten_bind_RaycastInfo_get_m_contactPointWS_0=function(){return(yv=b._emscripten_bind_RaycastInfo_get_m_contactPointWS_0=b.asm.Ns).apply(null,arguments)},zv=b._emscripten_bind_RaycastInfo_set_m_contactPointWS_1=function(){return(zv=b._emscripten_bind_RaycastInfo_set_m_contactPointWS_1=b.asm.Os).apply(null,\narguments)},Av=b._emscripten_bind_RaycastInfo_get_m_suspensionLength_0=function(){return(Av=b._emscripten_bind_RaycastInfo_get_m_suspensionLength_0=b.asm.Ps).apply(null,arguments)},Bv=b._emscripten_bind_RaycastInfo_set_m_suspensionLength_1=function(){return(Bv=b._emscripten_bind_RaycastInfo_set_m_suspensionLength_1=b.asm.Qs).apply(null,arguments)},Cv=b._emscripten_bind_RaycastInfo_get_m_hardPointWS_0=function(){return(Cv=b._emscripten_bind_RaycastInfo_get_m_hardPointWS_0=b.asm.Rs).apply(null,arguments)},\nDv=b._emscripten_bind_RaycastInfo_set_m_hardPointWS_1=function(){return(Dv=b._emscripten_bind_RaycastInfo_set_m_hardPointWS_1=b.asm.Ss).apply(null,arguments)},Ev=b._emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0=function(){return(Ev=b._emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0=b.asm.Ts).apply(null,arguments)},Fv=b._emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1=function(){return(Fv=b._emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1=b.asm.Us).apply(null,arguments)},Gv=b._emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0=\nfunction(){return(Gv=b._emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0=b.asm.Vs).apply(null,arguments)},Hv=b._emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1=function(){return(Hv=b._emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1=b.asm.Ws).apply(null,arguments)},Iv=b._emscripten_bind_RaycastInfo_get_m_isInContact_0=function(){return(Iv=b._emscripten_bind_RaycastInfo_get_m_isInContact_0=b.asm.Xs).apply(null,arguments)},Jv=b._emscripten_bind_RaycastInfo_set_m_isInContact_1=function(){return(Jv=b._emscripten_bind_RaycastInfo_set_m_isInContact_1=\nb.asm.Ys).apply(null,arguments)},Kv=b._emscripten_bind_RaycastInfo_get_m_groundObject_0=function(){return(Kv=b._emscripten_bind_RaycastInfo_get_m_groundObject_0=b.asm.Zs).apply(null,arguments)},Lv=b._emscripten_bind_RaycastInfo_set_m_groundObject_1=function(){return(Lv=b._emscripten_bind_RaycastInfo_set_m_groundObject_1=b.asm._s).apply(null,arguments)},Mv=b._emscripten_bind_RaycastInfo___destroy___0=function(){return(Mv=b._emscripten_bind_RaycastInfo___destroy___0=b.asm.$s).apply(null,arguments)},\nNv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0=function(){return(Nv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_chassisConnectionCS_0=b.asm.at).apply(null,arguments)},Ov=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1=function(){return(Ov=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_chassisConnectionCS_1=b.asm.bt).apply(null,arguments)},Pv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0=function(){return(Pv=\nb._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelDirectionCS_0=b.asm.ct).apply(null,arguments)},Qv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1=function(){return(Qv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelDirectionCS_1=b.asm.dt).apply(null,arguments)},Rv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0=function(){return(Rv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelAxleCS_0=b.asm.et).apply(null,arguments)},Sv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1=\nfunction(){return(Sv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelAxleCS_1=b.asm.ft).apply(null,arguments)},Tv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0=function(){return(Tv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionRestLength_0=b.asm.gt).apply(null,arguments)},Uv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1=function(){return(Uv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionRestLength_1=\nb.asm.ht).apply(null,arguments)},Vv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0=function(){return(Vv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionTravelCm_0=b.asm.it).apply(null,arguments)},Wv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1=function(){return(Wv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionTravelCm_1=b.asm.jt).apply(null,arguments)},Xv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0=\nfunction(){return(Xv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelRadius_0=b.asm.kt).apply(null,arguments)},Yv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1=function(){return(Yv=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelRadius_1=b.asm.lt).apply(null,arguments)},Zv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0=function(){return(Zv=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_suspensionStiffness_0=b.asm.mt).apply(null,\narguments)},$v=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1=function(){return($v=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_suspensionStiffness_1=b.asm.nt).apply(null,arguments)},aw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0=function(){return(aw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingCompression_0=b.asm.ot).apply(null,arguments)},bw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1=\nfunction(){return(bw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingCompression_1=b.asm.pt).apply(null,arguments)},cw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0=function(){return(cw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_wheelsDampingRelaxation_0=b.asm.qt).apply(null,arguments)},dw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1=function(){return(dw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_wheelsDampingRelaxation_1=\nb.asm.rt).apply(null,arguments)},ew=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0=function(){return(ew=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_frictionSlip_0=b.asm.st).apply(null,arguments)},fw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1=function(){return(fw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_frictionSlip_1=b.asm.tt).apply(null,arguments)},gw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0=function(){return(gw=\nb._emscripten_bind_btWheelInfoConstructionInfo_get_m_maxSuspensionForce_0=b.asm.ut).apply(null,arguments)},hw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1=function(){return(hw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_maxSuspensionForce_1=b.asm.vt).apply(null,arguments)},iw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0=function(){return(iw=b._emscripten_bind_btWheelInfoConstructionInfo_get_m_bIsFrontWheel_0=b.asm.wt).apply(null,arguments)},\njw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1=function(){return(jw=b._emscripten_bind_btWheelInfoConstructionInfo_set_m_bIsFrontWheel_1=b.asm.xt).apply(null,arguments)},kw=b._emscripten_bind_btWheelInfoConstructionInfo___destroy___0=function(){return(kw=b._emscripten_bind_btWheelInfoConstructionInfo___destroy___0=b.asm.yt).apply(null,arguments)},lw=b._emscripten_bind_btWheelInfo_btWheelInfo_1=function(){return(lw=b._emscripten_bind_btWheelInfo_btWheelInfo_1=b.asm.zt).apply(null,\narguments)},mw=b._emscripten_bind_btWheelInfo_getSuspensionRestLength_0=function(){return(mw=b._emscripten_bind_btWheelInfo_getSuspensionRestLength_0=b.asm.At).apply(null,arguments)},nw=b._emscripten_bind_btWheelInfo_updateWheel_2=function(){return(nw=b._emscripten_bind_btWheelInfo_updateWheel_2=b.asm.Bt).apply(null,arguments)},ow=b._emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0=function(){return(ow=b._emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0=b.asm.Ct).apply(null,arguments)},\npw=b._emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1=function(){return(pw=b._emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1=b.asm.Dt).apply(null,arguments)},qw=b._emscripten_bind_btWheelInfo_get_m_frictionSlip_0=function(){return(qw=b._emscripten_bind_btWheelInfo_get_m_frictionSlip_0=b.asm.Et).apply(null,arguments)},rw=b._emscripten_bind_btWheelInfo_set_m_frictionSlip_1=function(){return(rw=b._emscripten_bind_btWheelInfo_set_m_frictionSlip_1=b.asm.Ft).apply(null,arguments)},sw=b._emscripten_bind_btWheelInfo_get_m_engineForce_0=\nfunction(){return(sw=b._emscripten_bind_btWheelInfo_get_m_engineForce_0=b.asm.Gt).apply(null,arguments)},tw=b._emscripten_bind_btWheelInfo_set_m_engineForce_1=function(){return(tw=b._emscripten_bind_btWheelInfo_set_m_engineForce_1=b.asm.Ht).apply(null,arguments)},uw=b._emscripten_bind_btWheelInfo_get_m_rollInfluence_0=function(){return(uw=b._emscripten_bind_btWheelInfo_get_m_rollInfluence_0=b.asm.It).apply(null,arguments)},vw=b._emscripten_bind_btWheelInfo_set_m_rollInfluence_1=function(){return(vw=\nb._emscripten_bind_btWheelInfo_set_m_rollInfluence_1=b.asm.Jt).apply(null,arguments)},ww=b._emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0=function(){return(ww=b._emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0=b.asm.Kt).apply(null,arguments)},xw=b._emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1=function(){return(xw=b._emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1=b.asm.Lt).apply(null,arguments)},yw=b._emscripten_bind_btWheelInfo_get_m_wheelsRadius_0=function(){return(yw=\nb._emscripten_bind_btWheelInfo_get_m_wheelsRadius_0=b.asm.Mt).apply(null,arguments)},zw=b._emscripten_bind_btWheelInfo_set_m_wheelsRadius_1=function(){return(zw=b._emscripten_bind_btWheelInfo_set_m_wheelsRadius_1=b.asm.Nt).apply(null,arguments)},Aw=b._emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0=function(){return(Aw=b._emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0=b.asm.Ot).apply(null,arguments)},Bw=b._emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1=function(){return(Bw=\nb._emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1=b.asm.Pt).apply(null,arguments)},Cw=b._emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0=function(){return(Cw=b._emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0=b.asm.Qt).apply(null,arguments)},Dw=b._emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1=function(){return(Dw=b._emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1=b.asm.Rt).apply(null,arguments)},Ew=b._emscripten_bind_btWheelInfo_get_m_steering_0=\nfunction(){return(Ew=b._emscripten_bind_btWheelInfo_get_m_steering_0=b.asm.St).apply(null,arguments)},Fw=b._emscripten_bind_btWheelInfo_set_m_steering_1=function(){return(Fw=b._emscripten_bind_btWheelInfo_set_m_steering_1=b.asm.Tt).apply(null,arguments)},Gw=b._emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0=function(){return(Gw=b._emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0=b.asm.Ut).apply(null,arguments)},Hw=b._emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1=function(){return(Hw=\nb._emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1=b.asm.Vt).apply(null,arguments)},Iw=b._emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0=function(){return(Iw=b._emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0=b.asm.Wt).apply(null,arguments)},Jw=b._emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1=function(){return(Jw=b._emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1=b.asm.Xt).apply(null,arguments)},Kw=b._emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0=\nfunction(){return(Kw=b._emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0=b.asm.Yt).apply(null,arguments)},Lw=b._emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1=function(){return(Lw=b._emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1=b.asm.Zt).apply(null,arguments)},Mw=b._emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0=function(){return(Mw=b._emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0=b.asm._t).apply(null,arguments)},Nw=b._emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1=\nfunction(){return(Nw=b._emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1=b.asm.$t).apply(null,arguments)},Ow=b._emscripten_bind_btWheelInfo_get_m_raycastInfo_0=function(){return(Ow=b._emscripten_bind_btWheelInfo_get_m_raycastInfo_0=b.asm.au).apply(null,arguments)},Pw=b._emscripten_bind_btWheelInfo_set_m_raycastInfo_1=function(){return(Pw=b._emscripten_bind_btWheelInfo_set_m_raycastInfo_1=b.asm.bu).apply(null,arguments)},Qw=b._emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0=function(){return(Qw=\nb._emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0=b.asm.cu).apply(null,arguments)},Rw=b._emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1=function(){return(Rw=b._emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1=b.asm.du).apply(null,arguments)},Sw=b._emscripten_bind_btWheelInfo_get_m_worldTransform_0=function(){return(Sw=b._emscripten_bind_btWheelInfo_get_m_worldTransform_0=b.asm.eu).apply(null,arguments)},Tw=b._emscripten_bind_btWheelInfo_set_m_worldTransform_1=\nfunction(){return(Tw=b._emscripten_bind_btWheelInfo_set_m_worldTransform_1=b.asm.fu).apply(null,arguments)},Uw=b._emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0=function(){return(Uw=b._emscripten_bind_btWheelInfo_get_m_wheelDirectionCS_0=b.asm.gu).apply(null,arguments)},Vw=b._emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1=function(){return(Vw=b._emscripten_bind_btWheelInfo_set_m_wheelDirectionCS_1=b.asm.hu).apply(null,arguments)},Ww=b._emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0=function(){return(Ww=\nb._emscripten_bind_btWheelInfo_get_m_wheelAxleCS_0=b.asm.iu).apply(null,arguments)},Xw=b._emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1=function(){return(Xw=b._emscripten_bind_btWheelInfo_set_m_wheelAxleCS_1=b.asm.ju).apply(null,arguments)},Yw=b._emscripten_bind_btWheelInfo_get_m_rotation_0=function(){return(Yw=b._emscripten_bind_btWheelInfo_get_m_rotation_0=b.asm.ku).apply(null,arguments)},Zw=b._emscripten_bind_btWheelInfo_set_m_rotation_1=function(){return(Zw=b._emscripten_bind_btWheelInfo_set_m_rotation_1=\nb.asm.lu).apply(null,arguments)},$w=b._emscripten_bind_btWheelInfo_get_m_deltaRotation_0=function(){return($w=b._emscripten_bind_btWheelInfo_get_m_deltaRotation_0=b.asm.mu).apply(null,arguments)},ax=b._emscripten_bind_btWheelInfo_set_m_deltaRotation_1=function(){return(ax=b._emscripten_bind_btWheelInfo_set_m_deltaRotation_1=b.asm.nu).apply(null,arguments)},bx=b._emscripten_bind_btWheelInfo_get_m_brake_0=function(){return(bx=b._emscripten_bind_btWheelInfo_get_m_brake_0=b.asm.ou).apply(null,arguments)},\ncx=b._emscripten_bind_btWheelInfo_set_m_brake_1=function(){return(cx=b._emscripten_bind_btWheelInfo_set_m_brake_1=b.asm.pu).apply(null,arguments)},dx=b._emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0=function(){return(dx=b._emscripten_bind_btWheelInfo_get_m_clippedInvContactDotSuspension_0=b.asm.qu).apply(null,arguments)},ex=b._emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1=function(){return(ex=b._emscripten_bind_btWheelInfo_set_m_clippedInvContactDotSuspension_1=\nb.asm.ru).apply(null,arguments)},fx=b._emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0=function(){return(fx=b._emscripten_bind_btWheelInfo_get_m_suspensionRelativeVelocity_0=b.asm.su).apply(null,arguments)},gx=b._emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1=function(){return(gx=b._emscripten_bind_btWheelInfo_set_m_suspensionRelativeVelocity_1=b.asm.tu).apply(null,arguments)},hx=b._emscripten_bind_btWheelInfo_get_m_skidInfo_0=function(){return(hx=b._emscripten_bind_btWheelInfo_get_m_skidInfo_0=\nb.asm.uu).apply(null,arguments)},ix=b._emscripten_bind_btWheelInfo_set_m_skidInfo_1=function(){return(ix=b._emscripten_bind_btWheelInfo_set_m_skidInfo_1=b.asm.vu).apply(null,arguments)},jx=b._emscripten_bind_btWheelInfo___destroy___0=function(){return(jx=b._emscripten_bind_btWheelInfo___destroy___0=b.asm.wu).apply(null,arguments)},kx=b._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=function(){return(kx=b._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=\nb.asm.xu).apply(null,arguments)},lx=b._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=function(){return(lx=b._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=b.asm.yu).apply(null,arguments)},mx=b._emscripten_bind_btKinematicCharacterController_setUpAxis_1=function(){return(mx=b._emscripten_bind_btKinematicCharacterController_setUpAxis_1=b.asm.zu).apply(null,arguments)},nx=b._emscripten_bind_btKinematicCharacterController_setWalkDirection_1=\nfunction(){return(nx=b._emscripten_bind_btKinematicCharacterController_setWalkDirection_1=b.asm.Au).apply(null,arguments)},ox=b._emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=function(){return(ox=b._emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=b.asm.Bu).apply(null,arguments)},px=b._emscripten_bind_btKinematicCharacterController_warp_1=function(){return(px=b._emscripten_bind_btKinematicCharacterController_warp_1=b.asm.Cu).apply(null,arguments)},\nqx=b._emscripten_bind_btKinematicCharacterController_preStep_1=function(){return(qx=b._emscripten_bind_btKinematicCharacterController_preStep_1=b.asm.Du).apply(null,arguments)},rx=b._emscripten_bind_btKinematicCharacterController_playerStep_2=function(){return(rx=b._emscripten_bind_btKinematicCharacterController_playerStep_2=b.asm.Eu).apply(null,arguments)},sx=b._emscripten_bind_btKinematicCharacterController_setFallSpeed_1=function(){return(sx=b._emscripten_bind_btKinematicCharacterController_setFallSpeed_1=\nb.asm.Fu).apply(null,arguments)},tx=b._emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=function(){return(tx=b._emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=b.asm.Gu).apply(null,arguments)},ux=b._emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=function(){return(ux=b._emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=b.asm.Hu).apply(null,arguments)},vx=b._emscripten_bind_btKinematicCharacterController_canJump_0=function(){return(vx=b._emscripten_bind_btKinematicCharacterController_canJump_0=\nb.asm.Iu).apply(null,arguments)},wx=b._emscripten_bind_btKinematicCharacterController_jump_0=function(){return(wx=b._emscripten_bind_btKinematicCharacterController_jump_0=b.asm.Ju).apply(null,arguments)},xx=b._emscripten_bind_btKinematicCharacterController_setGravity_1=function(){return(xx=b._emscripten_bind_btKinematicCharacterController_setGravity_1=b.asm.Ku).apply(null,arguments)},yx=b._emscripten_bind_btKinematicCharacterController_getGravity_0=function(){return(yx=b._emscripten_bind_btKinematicCharacterController_getGravity_0=\nb.asm.Lu).apply(null,arguments)},zx=b._emscripten_bind_btKinematicCharacterController_setMaxSlope_1=function(){return(zx=b._emscripten_bind_btKinematicCharacterController_setMaxSlope_1=b.asm.Mu).apply(null,arguments)},Ax=b._emscripten_bind_btKinematicCharacterController_getMaxSlope_0=function(){return(Ax=b._emscripten_bind_btKinematicCharacterController_getMaxSlope_0=b.asm.Nu).apply(null,arguments)},Bx=b._emscripten_bind_btKinematicCharacterController_getGhostObject_0=function(){return(Bx=b._emscripten_bind_btKinematicCharacterController_getGhostObject_0=\nb.asm.Ou).apply(null,arguments)},Cx=b._emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=function(){return(Cx=b._emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=b.asm.Pu).apply(null,arguments)},Dx=b._emscripten_bind_btKinematicCharacterController_onGround_0=function(){return(Dx=b._emscripten_bind_btKinematicCharacterController_onGround_0=b.asm.Qu).apply(null,arguments)},Ex=b._emscripten_bind_btKinematicCharacterController_setUpInterpolate_1=function(){return(Ex=\nb._emscripten_bind_btKinematicCharacterController_setUpInterpolate_1=b.asm.Ru).apply(null,arguments)},Fx=b._emscripten_bind_btKinematicCharacterController_updateAction_2=function(){return(Fx=b._emscripten_bind_btKinematicCharacterController_updateAction_2=b.asm.Su).apply(null,arguments)},Gx=b._emscripten_bind_btKinematicCharacterController___destroy___0=function(){return(Gx=b._emscripten_bind_btKinematicCharacterController___destroy___0=b.asm.Tu).apply(null,arguments)},Hx=b._emscripten_bind_btRaycastVehicle_btRaycastVehicle_3=\nfunction(){return(Hx=b._emscripten_bind_btRaycastVehicle_btRaycastVehicle_3=b.asm.Uu).apply(null,arguments)},Ix=b._emscripten_bind_btRaycastVehicle_applyEngineForce_2=function(){return(Ix=b._emscripten_bind_btRaycastVehicle_applyEngineForce_2=b.asm.Vu).apply(null,arguments)},Jx=b._emscripten_bind_btRaycastVehicle_setSteeringValue_2=function(){return(Jx=b._emscripten_bind_btRaycastVehicle_setSteeringValue_2=b.asm.Wu).apply(null,arguments)},Kx=b._emscripten_bind_btRaycastVehicle_getWheelTransformWS_1=\nfunction(){return(Kx=b._emscripten_bind_btRaycastVehicle_getWheelTransformWS_1=b.asm.Xu).apply(null,arguments)},Lx=b._emscripten_bind_btRaycastVehicle_updateWheelTransform_2=function(){return(Lx=b._emscripten_bind_btRaycastVehicle_updateWheelTransform_2=b.asm.Yu).apply(null,arguments)},Mx=b._emscripten_bind_btRaycastVehicle_addWheel_7=function(){return(Mx=b._emscripten_bind_btRaycastVehicle_addWheel_7=b.asm.Zu).apply(null,arguments)},Nx=b._emscripten_bind_btRaycastVehicle_getNumWheels_0=function(){return(Nx=\nb._emscripten_bind_btRaycastVehicle_getNumWheels_0=b.asm._u).apply(null,arguments)},Ox=b._emscripten_bind_btRaycastVehicle_getRigidBody_0=function(){return(Ox=b._emscripten_bind_btRaycastVehicle_getRigidBody_0=b.asm.$u).apply(null,arguments)},Px=b._emscripten_bind_btRaycastVehicle_getWheelInfo_1=function(){return(Px=b._emscripten_bind_btRaycastVehicle_getWheelInfo_1=b.asm.av).apply(null,arguments)},Qx=b._emscripten_bind_btRaycastVehicle_setBrake_2=function(){return(Qx=b._emscripten_bind_btRaycastVehicle_setBrake_2=\nb.asm.bv).apply(null,arguments)},Rx=b._emscripten_bind_btRaycastVehicle_setCoordinateSystem_3=function(){return(Rx=b._emscripten_bind_btRaycastVehicle_setCoordinateSystem_3=b.asm.cv).apply(null,arguments)},Sx=b._emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0=function(){return(Sx=b._emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0=b.asm.dv).apply(null,arguments)},Tx=b._emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0=function(){return(Tx=b._emscripten_bind_btRaycastVehicle_getChassisWorldTransform_0=\nb.asm.ev).apply(null,arguments)},Ux=b._emscripten_bind_btRaycastVehicle_rayCast_1=function(){return(Ux=b._emscripten_bind_btRaycastVehicle_rayCast_1=b.asm.fv).apply(null,arguments)},Vx=b._emscripten_bind_btRaycastVehicle_updateVehicle_1=function(){return(Vx=b._emscripten_bind_btRaycastVehicle_updateVehicle_1=b.asm.gv).apply(null,arguments)},Wx=b._emscripten_bind_btRaycastVehicle_resetSuspension_0=function(){return(Wx=b._emscripten_bind_btRaycastVehicle_resetSuspension_0=b.asm.hv).apply(null,arguments)},\nXx=b._emscripten_bind_btRaycastVehicle_getSteeringValue_1=function(){return(Xx=b._emscripten_bind_btRaycastVehicle_getSteeringValue_1=b.asm.iv).apply(null,arguments)},Yx=b._emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1=function(){return(Yx=b._emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_1=b.asm.jv).apply(null,arguments)},Zx=b._emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2=function(){return(Zx=b._emscripten_bind_btRaycastVehicle_updateWheelTransformsWS_2=b.asm.kv).apply(null,\narguments)},$x=b._emscripten_bind_btRaycastVehicle_setPitchControl_1=function(){return($x=b._emscripten_bind_btRaycastVehicle_setPitchControl_1=b.asm.lv).apply(null,arguments)},ay=b._emscripten_bind_btRaycastVehicle_updateSuspension_1=function(){return(ay=b._emscripten_bind_btRaycastVehicle_updateSuspension_1=b.asm.mv).apply(null,arguments)},by=b._emscripten_bind_btRaycastVehicle_updateFriction_1=function(){return(by=b._emscripten_bind_btRaycastVehicle_updateFriction_1=b.asm.nv).apply(null,arguments)},\ncy=b._emscripten_bind_btRaycastVehicle_getRightAxis_0=function(){return(cy=b._emscripten_bind_btRaycastVehicle_getRightAxis_0=b.asm.ov).apply(null,arguments)},dy=b._emscripten_bind_btRaycastVehicle_getUpAxis_0=function(){return(dy=b._emscripten_bind_btRaycastVehicle_getUpAxis_0=b.asm.pv).apply(null,arguments)},ey=b._emscripten_bind_btRaycastVehicle_getForwardAxis_0=function(){return(ey=b._emscripten_bind_btRaycastVehicle_getForwardAxis_0=b.asm.qv).apply(null,arguments)},fy=b._emscripten_bind_btRaycastVehicle_getForwardVector_0=\nfunction(){return(fy=b._emscripten_bind_btRaycastVehicle_getForwardVector_0=b.asm.rv).apply(null,arguments)},gy=b._emscripten_bind_btRaycastVehicle_getUserConstraintType_0=function(){return(gy=b._emscripten_bind_btRaycastVehicle_getUserConstraintType_0=b.asm.sv).apply(null,arguments)},hy=b._emscripten_bind_btRaycastVehicle_setUserConstraintType_1=function(){return(hy=b._emscripten_bind_btRaycastVehicle_setUserConstraintType_1=b.asm.tv).apply(null,arguments)},iy=b._emscripten_bind_btRaycastVehicle_setUserConstraintId_1=\nfunction(){return(iy=b._emscripten_bind_btRaycastVehicle_setUserConstraintId_1=b.asm.uv).apply(null,arguments)},jy=b._emscripten_bind_btRaycastVehicle_getUserConstraintId_0=function(){return(jy=b._emscripten_bind_btRaycastVehicle_getUserConstraintId_0=b.asm.vv).apply(null,arguments)},ky=b._emscripten_bind_btRaycastVehicle_updateAction_2=function(){return(ky=b._emscripten_bind_btRaycastVehicle_updateAction_2=b.asm.wv).apply(null,arguments)},ly=b._emscripten_bind_btRaycastVehicle___destroy___0=function(){return(ly=\nb._emscripten_bind_btRaycastVehicle___destroy___0=b.asm.xv).apply(null,arguments)},my=b._emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=function(){return(my=b._emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=b.asm.yv).apply(null,arguments)},ny=b._emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=function(){return(ny=b._emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=b.asm.zv).apply(null,arguments)},oy=b._emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=\nfunction(){return(oy=b._emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=b.asm.Av).apply(null,arguments)},py=b._emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=function(){return(py=b._emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=b.asm.Bv).apply(null,arguments)},qy=b._emscripten_bind_btPairCachingGhostObject_setActivationState_1=function(){return(qy=b._emscripten_bind_btPairCachingGhostObject_setActivationState_1=b.asm.Cv).apply(null,\narguments)},ry=b._emscripten_bind_btPairCachingGhostObject_forceActivationState_1=function(){return(ry=b._emscripten_bind_btPairCachingGhostObject_forceActivationState_1=b.asm.Dv).apply(null,arguments)},sy=b._emscripten_bind_btPairCachingGhostObject_activate_0=function(){return(sy=b._emscripten_bind_btPairCachingGhostObject_activate_0=b.asm.Ev).apply(null,arguments)},ty=b._emscripten_bind_btPairCachingGhostObject_activate_1=function(){return(ty=b._emscripten_bind_btPairCachingGhostObject_activate_1=\nb.asm.Fv).apply(null,arguments)},uy=b._emscripten_bind_btPairCachingGhostObject_isActive_0=function(){return(uy=b._emscripten_bind_btPairCachingGhostObject_isActive_0=b.asm.Gv).apply(null,arguments)},vy=b._emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=function(){return(vy=b._emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=b.asm.Hv).apply(null,arguments)},wy=b._emscripten_bind_btPairCachingGhostObject_isStaticObject_0=function(){return(wy=b._emscripten_bind_btPairCachingGhostObject_isStaticObject_0=\nb.asm.Iv).apply(null,arguments)},xy=b._emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0=function(){return(xy=b._emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0=b.asm.Jv).apply(null,arguments)},yy=b._emscripten_bind_btPairCachingGhostObject_getRestitution_0=function(){return(yy=b._emscripten_bind_btPairCachingGhostObject_getRestitution_0=b.asm.Kv).apply(null,arguments)},zy=b._emscripten_bind_btPairCachingGhostObject_getFriction_0=function(){return(zy=b._emscripten_bind_btPairCachingGhostObject_getFriction_0=\nb.asm.Lv).apply(null,arguments)},Ay=b._emscripten_bind_btPairCachingGhostObject_getRollingFriction_0=function(){return(Ay=b._emscripten_bind_btPairCachingGhostObject_getRollingFriction_0=b.asm.Mv).apply(null,arguments)},By=b._emscripten_bind_btPairCachingGhostObject_setRestitution_1=function(){return(By=b._emscripten_bind_btPairCachingGhostObject_setRestitution_1=b.asm.Nv).apply(null,arguments)},Cy=b._emscripten_bind_btPairCachingGhostObject_setFriction_1=function(){return(Cy=b._emscripten_bind_btPairCachingGhostObject_setFriction_1=\nb.asm.Ov).apply(null,arguments)},Dy=b._emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=function(){return(Dy=b._emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=b.asm.Pv).apply(null,arguments)},Ey=b._emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=function(){return(Ey=b._emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=b.asm.Qv).apply(null,arguments)},Fy=b._emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=function(){return(Fy=b._emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=\nb.asm.Rv).apply(null,arguments)},Gy=b._emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=function(){return(Gy=b._emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=b.asm.Sv).apply(null,arguments)},Hy=b._emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=function(){return(Hy=b._emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=b.asm.Tv).apply(null,arguments)},Iy=b._emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=function(){return(Iy=b._emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=\nb.asm.Uv).apply(null,arguments)},Jy=b._emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=function(){return(Jy=b._emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=b.asm.Vv).apply(null,arguments)},Ky=b._emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=function(){return(Ky=b._emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=b.asm.Wv).apply(null,arguments)},Ly=b._emscripten_bind_btPairCachingGhostObject_getUserIndex_0=function(){return(Ly=\nb._emscripten_bind_btPairCachingGhostObject_getUserIndex_0=b.asm.Xv).apply(null,arguments)},My=b._emscripten_bind_btPairCachingGhostObject_setUserIndex_1=function(){return(My=b._emscripten_bind_btPairCachingGhostObject_setUserIndex_1=b.asm.Yv).apply(null,arguments)},Ny=b._emscripten_bind_btPairCachingGhostObject_getUserPointer_0=function(){return(Ny=b._emscripten_bind_btPairCachingGhostObject_getUserPointer_0=b.asm.Zv).apply(null,arguments)},Oy=b._emscripten_bind_btPairCachingGhostObject_setUserPointer_1=\nfunction(){return(Oy=b._emscripten_bind_btPairCachingGhostObject_setUserPointer_1=b.asm._v).apply(null,arguments)},Py=b._emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0=function(){return(Py=b._emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0=b.asm.$v).apply(null,arguments)},Qy=b._emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=function(){return(Qy=b._emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=b.asm.aw).apply(null,arguments)},\nRy=b._emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=function(){return(Ry=b._emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=b.asm.bw).apply(null,arguments)},Sy=b._emscripten_bind_btPairCachingGhostObject___destroy___0=function(){return(Sy=b._emscripten_bind_btPairCachingGhostObject___destroy___0=b.asm.cw).apply(null,arguments)},Ty=b._emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=function(){return(Ty=b._emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=\nb.asm.dw).apply(null,arguments)},Uy=b._emscripten_bind_btGhostPairCallback___destroy___0=function(){return(Uy=b._emscripten_bind_btGhostPairCallback___destroy___0=b.asm.ew).apply(null,arguments)},Vy=b._emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0=function(){return(Vy=b._emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0=b.asm.fw).apply(null,arguments)},Wy=b._emscripten_bind_btSoftBodyWorldInfo_get_air_density_0=function(){return(Wy=b._emscripten_bind_btSoftBodyWorldInfo_get_air_density_0=\nb.asm.gw).apply(null,arguments)},Xy=b._emscripten_bind_btSoftBodyWorldInfo_set_air_density_1=function(){return(Xy=b._emscripten_bind_btSoftBodyWorldInfo_set_air_density_1=b.asm.hw).apply(null,arguments)},Yy=b._emscripten_bind_btSoftBodyWorldInfo_get_water_density_0=function(){return(Yy=b._emscripten_bind_btSoftBodyWorldInfo_get_water_density_0=b.asm.iw).apply(null,arguments)},Zy=b._emscripten_bind_btSoftBodyWorldInfo_set_water_density_1=function(){return(Zy=b._emscripten_bind_btSoftBodyWorldInfo_set_water_density_1=\nb.asm.jw).apply(null,arguments)},$y=b._emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0=function(){return($y=b._emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0=b.asm.kw).apply(null,arguments)},az=b._emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1=function(){return(az=b._emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1=b.asm.lw).apply(null,arguments)},bz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0=function(){return(bz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0=\nb.asm.mw).apply(null,arguments)},cz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1=function(){return(cz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1=b.asm.nw).apply(null,arguments)},dz=b._emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0=function(){return(dz=b._emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0=b.asm.ow).apply(null,arguments)},ez=b._emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1=function(){return(ez=b._emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1=\nb.asm.pw).apply(null,arguments)},fz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0=function(){return(fz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0=b.asm.qw).apply(null,arguments)},gz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1=function(){return(gz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1=b.asm.rw).apply(null,arguments)},hz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0=function(){return(hz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0=\nb.asm.sw).apply(null,arguments)},iz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1=function(){return(iz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1=b.asm.tw).apply(null,arguments)},jz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0=function(){return(jz=b._emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0=b.asm.uw).apply(null,arguments)},kz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1=function(){return(kz=b._emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1=\nb.asm.vw).apply(null,arguments)},lz=b._emscripten_bind_btSoftBodyWorldInfo___destroy___0=function(){return(lz=b._emscripten_bind_btSoftBodyWorldInfo___destroy___0=b.asm.ww).apply(null,arguments)},mz=b._emscripten_bind_Face_get_m_n_1=function(){return(mz=b._emscripten_bind_Face_get_m_n_1=b.asm.xw).apply(null,arguments)},nz=b._emscripten_bind_Face_set_m_n_2=function(){return(nz=b._emscripten_bind_Face_set_m_n_2=b.asm.yw).apply(null,arguments)},oz=b._emscripten_bind_Face_get_m_normal_0=function(){return(oz=\nb._emscripten_bind_Face_get_m_normal_0=b.asm.zw).apply(null,arguments)},pz=b._emscripten_bind_Face_set_m_normal_1=function(){return(pz=b._emscripten_bind_Face_set_m_normal_1=b.asm.Aw).apply(null,arguments)},qz=b._emscripten_bind_Face_get_m_ra_0=function(){return(qz=b._emscripten_bind_Face_get_m_ra_0=b.asm.Bw).apply(null,arguments)},rz=b._emscripten_bind_Face_set_m_ra_1=function(){return(rz=b._emscripten_bind_Face_set_m_ra_1=b.asm.Cw).apply(null,arguments)},sz=b._emscripten_bind_Face___destroy___0=\nfunction(){return(sz=b._emscripten_bind_Face___destroy___0=b.asm.Dw).apply(null,arguments)},tz=b._emscripten_bind_tFaceArray_size_0=function(){return(tz=b._emscripten_bind_tFaceArray_size_0=b.asm.Ew).apply(null,arguments)},uz=b._emscripten_bind_tFaceArray_at_1=function(){return(uz=b._emscripten_bind_tFaceArray_at_1=b.asm.Fw).apply(null,arguments)},vz=b._emscripten_bind_tFaceArray___destroy___0=function(){return(vz=b._emscripten_bind_tFaceArray___destroy___0=b.asm.Gw).apply(null,arguments)},wz=b._emscripten_bind_Node_get_m_x_0=\nfunction(){return(wz=b._emscripten_bind_Node_get_m_x_0=b.asm.Hw).apply(null,arguments)},xz=b._emscripten_bind_Node_set_m_x_1=function(){return(xz=b._emscripten_bind_Node_set_m_x_1=b.asm.Iw).apply(null,arguments)},yz=b._emscripten_bind_Node_get_m_q_0=function(){return(yz=b._emscripten_bind_Node_get_m_q_0=b.asm.Jw).apply(null,arguments)},zz=b._emscripten_bind_Node_set_m_q_1=function(){return(zz=b._emscripten_bind_Node_set_m_q_1=b.asm.Kw).apply(null,arguments)},Az=b._emscripten_bind_Node_get_m_v_0=function(){return(Az=\nb._emscripten_bind_Node_get_m_v_0=b.asm.Lw).apply(null,arguments)},Bz=b._emscripten_bind_Node_set_m_v_1=function(){return(Bz=b._emscripten_bind_Node_set_m_v_1=b.asm.Mw).apply(null,arguments)},Cz=b._emscripten_bind_Node_get_m_f_0=function(){return(Cz=b._emscripten_bind_Node_get_m_f_0=b.asm.Nw).apply(null,arguments)},Dz=b._emscripten_bind_Node_set_m_f_1=function(){return(Dz=b._emscripten_bind_Node_set_m_f_1=b.asm.Ow).apply(null,arguments)},Ez=b._emscripten_bind_Node_get_m_n_0=function(){return(Ez=b._emscripten_bind_Node_get_m_n_0=\nb.asm.Pw).apply(null,arguments)},Fz=b._emscripten_bind_Node_set_m_n_1=function(){return(Fz=b._emscripten_bind_Node_set_m_n_1=b.asm.Qw).apply(null,arguments)},Gz=b._emscripten_bind_Node_get_m_im_0=function(){return(Gz=b._emscripten_bind_Node_get_m_im_0=b.asm.Rw).apply(null,arguments)},Hz=b._emscripten_bind_Node_set_m_im_1=function(){return(Hz=b._emscripten_bind_Node_set_m_im_1=b.asm.Sw).apply(null,arguments)},Iz=b._emscripten_bind_Node_get_m_area_0=function(){return(Iz=b._emscripten_bind_Node_get_m_area_0=\nb.asm.Tw).apply(null,arguments)},Jz=b._emscripten_bind_Node_set_m_area_1=function(){return(Jz=b._emscripten_bind_Node_set_m_area_1=b.asm.Uw).apply(null,arguments)},Kz=b._emscripten_bind_Node___destroy___0=function(){return(Kz=b._emscripten_bind_Node___destroy___0=b.asm.Vw).apply(null,arguments)},Lz=b._emscripten_bind_tNodeArray_size_0=function(){return(Lz=b._emscripten_bind_tNodeArray_size_0=b.asm.Ww).apply(null,arguments)},Mz=b._emscripten_bind_tNodeArray_at_1=function(){return(Mz=b._emscripten_bind_tNodeArray_at_1=\nb.asm.Xw).apply(null,arguments)},Nz=b._emscripten_bind_tNodeArray___destroy___0=function(){return(Nz=b._emscripten_bind_tNodeArray___destroy___0=b.asm.Yw).apply(null,arguments)},Oz=b._emscripten_bind_Material_get_m_kLST_0=function(){return(Oz=b._emscripten_bind_Material_get_m_kLST_0=b.asm.Zw).apply(null,arguments)},Pz=b._emscripten_bind_Material_set_m_kLST_1=function(){return(Pz=b._emscripten_bind_Material_set_m_kLST_1=b.asm._w).apply(null,arguments)},Qz=b._emscripten_bind_Material_get_m_kAST_0=function(){return(Qz=\nb._emscripten_bind_Material_get_m_kAST_0=b.asm.$w).apply(null,arguments)},Rz=b._emscripten_bind_Material_set_m_kAST_1=function(){return(Rz=b._emscripten_bind_Material_set_m_kAST_1=b.asm.ax).apply(null,arguments)},Sz=b._emscripten_bind_Material_get_m_kVST_0=function(){return(Sz=b._emscripten_bind_Material_get_m_kVST_0=b.asm.bx).apply(null,arguments)},Tz=b._emscripten_bind_Material_set_m_kVST_1=function(){return(Tz=b._emscripten_bind_Material_set_m_kVST_1=b.asm.cx).apply(null,arguments)},Uz=b._emscripten_bind_Material_get_m_flags_0=\nfunction(){return(Uz=b._emscripten_bind_Material_get_m_flags_0=b.asm.dx).apply(null,arguments)},Vz=b._emscripten_bind_Material_set_m_flags_1=function(){return(Vz=b._emscripten_bind_Material_set_m_flags_1=b.asm.ex).apply(null,arguments)},Wz=b._emscripten_bind_Material___destroy___0=function(){return(Wz=b._emscripten_bind_Material___destroy___0=b.asm.fx).apply(null,arguments)},Xz=b._emscripten_bind_tMaterialArray_size_0=function(){return(Xz=b._emscripten_bind_tMaterialArray_size_0=b.asm.gx).apply(null,\narguments)},Yz=b._emscripten_bind_tMaterialArray_at_1=function(){return(Yz=b._emscripten_bind_tMaterialArray_at_1=b.asm.hx).apply(null,arguments)},Zz=b._emscripten_bind_tMaterialArray___destroy___0=function(){return(Zz=b._emscripten_bind_tMaterialArray___destroy___0=b.asm.ix).apply(null,arguments)},$z=b._emscripten_bind_Anchor_get_m_node_0=function(){return($z=b._emscripten_bind_Anchor_get_m_node_0=b.asm.jx).apply(null,arguments)},aA=b._emscripten_bind_Anchor_set_m_node_1=function(){return(aA=b._emscripten_bind_Anchor_set_m_node_1=\nb.asm.kx).apply(null,arguments)},bA=b._emscripten_bind_Anchor_get_m_local_0=function(){return(bA=b._emscripten_bind_Anchor_get_m_local_0=b.asm.lx).apply(null,arguments)},cA=b._emscripten_bind_Anchor_set_m_local_1=function(){return(cA=b._emscripten_bind_Anchor_set_m_local_1=b.asm.mx).apply(null,arguments)},dA=b._emscripten_bind_Anchor_get_m_body_0=function(){return(dA=b._emscripten_bind_Anchor_get_m_body_0=b.asm.nx).apply(null,arguments)},eA=b._emscripten_bind_Anchor_set_m_body_1=function(){return(eA=\nb._emscripten_bind_Anchor_set_m_body_1=b.asm.ox).apply(null,arguments)},fA=b._emscripten_bind_Anchor_get_m_influence_0=function(){return(fA=b._emscripten_bind_Anchor_get_m_influence_0=b.asm.px).apply(null,arguments)},gA=b._emscripten_bind_Anchor_set_m_influence_1=function(){return(gA=b._emscripten_bind_Anchor_set_m_influence_1=b.asm.qx).apply(null,arguments)},hA=b._emscripten_bind_Anchor_get_m_c0_0=function(){return(hA=b._emscripten_bind_Anchor_get_m_c0_0=b.asm.rx).apply(null,arguments)},iA=b._emscripten_bind_Anchor_set_m_c0_1=\nfunction(){return(iA=b._emscripten_bind_Anchor_set_m_c0_1=b.asm.sx).apply(null,arguments)},jA=b._emscripten_bind_Anchor_get_m_c1_0=function(){return(jA=b._emscripten_bind_Anchor_get_m_c1_0=b.asm.tx).apply(null,arguments)},kA=b._emscripten_bind_Anchor_set_m_c1_1=function(){return(kA=b._emscripten_bind_Anchor_set_m_c1_1=b.asm.ux).apply(null,arguments)},lA=b._emscripten_bind_Anchor_get_m_c2_0=function(){return(lA=b._emscripten_bind_Anchor_get_m_c2_0=b.asm.vx).apply(null,arguments)},mA=b._emscripten_bind_Anchor_set_m_c2_1=\nfunction(){return(mA=b._emscripten_bind_Anchor_set_m_c2_1=b.asm.wx).apply(null,arguments)},nA=b._emscripten_bind_Anchor___destroy___0=function(){return(nA=b._emscripten_bind_Anchor___destroy___0=b.asm.xx).apply(null,arguments)},oA=b._emscripten_bind_tAnchorArray_size_0=function(){return(oA=b._emscripten_bind_tAnchorArray_size_0=b.asm.yx).apply(null,arguments)},pA=b._emscripten_bind_tAnchorArray_at_1=function(){return(pA=b._emscripten_bind_tAnchorArray_at_1=b.asm.zx).apply(null,arguments)},qA=b._emscripten_bind_tAnchorArray_clear_0=\nfunction(){return(qA=b._emscripten_bind_tAnchorArray_clear_0=b.asm.Ax).apply(null,arguments)},rA=b._emscripten_bind_tAnchorArray_push_back_1=function(){return(rA=b._emscripten_bind_tAnchorArray_push_back_1=b.asm.Bx).apply(null,arguments)},sA=b._emscripten_bind_tAnchorArray_pop_back_0=function(){return(sA=b._emscripten_bind_tAnchorArray_pop_back_0=b.asm.Cx).apply(null,arguments)},tA=b._emscripten_bind_tAnchorArray___destroy___0=function(){return(tA=b._emscripten_bind_tAnchorArray___destroy___0=b.asm.Dx).apply(null,\narguments)},uA=b._emscripten_bind_Config_get_kVCF_0=function(){return(uA=b._emscripten_bind_Config_get_kVCF_0=b.asm.Ex).apply(null,arguments)},vA=b._emscripten_bind_Config_set_kVCF_1=function(){return(vA=b._emscripten_bind_Config_set_kVCF_1=b.asm.Fx).apply(null,arguments)},wA=b._emscripten_bind_Config_get_kDP_0=function(){return(wA=b._emscripten_bind_Config_get_kDP_0=b.asm.Gx).apply(null,arguments)},xA=b._emscripten_bind_Config_set_kDP_1=function(){return(xA=b._emscripten_bind_Config_set_kDP_1=b.asm.Hx).apply(null,\narguments)},yA=b._emscripten_bind_Config_get_kDG_0=function(){return(yA=b._emscripten_bind_Config_get_kDG_0=b.asm.Ix).apply(null,arguments)},zA=b._emscripten_bind_Config_set_kDG_1=function(){return(zA=b._emscripten_bind_Config_set_kDG_1=b.asm.Jx).apply(null,arguments)},AA=b._emscripten_bind_Config_get_kLF_0=function(){return(AA=b._emscripten_bind_Config_get_kLF_0=b.asm.Kx).apply(null,arguments)},BA=b._emscripten_bind_Config_set_kLF_1=function(){return(BA=b._emscripten_bind_Config_set_kLF_1=b.asm.Lx).apply(null,\narguments)},CA=b._emscripten_bind_Config_get_kPR_0=function(){return(CA=b._emscripten_bind_Config_get_kPR_0=b.asm.Mx).apply(null,arguments)},DA=b._emscripten_bind_Config_set_kPR_1=function(){return(DA=b._emscripten_bind_Config_set_kPR_1=b.asm.Nx).apply(null,arguments)},EA=b._emscripten_bind_Config_get_kVC_0=function(){return(EA=b._emscripten_bind_Config_get_kVC_0=b.asm.Ox).apply(null,arguments)},FA=b._emscripten_bind_Config_set_kVC_1=function(){return(FA=b._emscripten_bind_Config_set_kVC_1=b.asm.Px).apply(null,\narguments)},GA=b._emscripten_bind_Config_get_kDF_0=function(){return(GA=b._emscripten_bind_Config_get_kDF_0=b.asm.Qx).apply(null,arguments)},HA=b._emscripten_bind_Config_set_kDF_1=function(){return(HA=b._emscripten_bind_Config_set_kDF_1=b.asm.Rx).apply(null,arguments)},IA=b._emscripten_bind_Config_get_kMT_0=function(){return(IA=b._emscripten_bind_Config_get_kMT_0=b.asm.Sx).apply(null,arguments)},JA=b._emscripten_bind_Config_set_kMT_1=function(){return(JA=b._emscripten_bind_Config_set_kMT_1=b.asm.Tx).apply(null,\narguments)},KA=b._emscripten_bind_Config_get_kCHR_0=function(){return(KA=b._emscripten_bind_Config_get_kCHR_0=b.asm.Ux).apply(null,arguments)},LA=b._emscripten_bind_Config_set_kCHR_1=function(){return(LA=b._emscripten_bind_Config_set_kCHR_1=b.asm.Vx).apply(null,arguments)},MA=b._emscripten_bind_Config_get_kKHR_0=function(){return(MA=b._emscripten_bind_Config_get_kKHR_0=b.asm.Wx).apply(null,arguments)},NA=b._emscripten_bind_Config_set_kKHR_1=function(){return(NA=b._emscripten_bind_Config_set_kKHR_1=\nb.asm.Xx).apply(null,arguments)},OA=b._emscripten_bind_Config_get_kSHR_0=function(){return(OA=b._emscripten_bind_Config_get_kSHR_0=b.asm.Yx).apply(null,arguments)},PA=b._emscripten_bind_Config_set_kSHR_1=function(){return(PA=b._emscripten_bind_Config_set_kSHR_1=b.asm.Zx).apply(null,arguments)},QA=b._emscripten_bind_Config_get_kAHR_0=function(){return(QA=b._emscripten_bind_Config_get_kAHR_0=b.asm._x).apply(null,arguments)},RA=b._emscripten_bind_Config_set_kAHR_1=function(){return(RA=b._emscripten_bind_Config_set_kAHR_1=\nb.asm.$x).apply(null,arguments)},SA=b._emscripten_bind_Config_get_kSRHR_CL_0=function(){return(SA=b._emscripten_bind_Config_get_kSRHR_CL_0=b.asm.ay).apply(null,arguments)},TA=b._emscripten_bind_Config_set_kSRHR_CL_1=function(){return(TA=b._emscripten_bind_Config_set_kSRHR_CL_1=b.asm.by).apply(null,arguments)},UA=b._emscripten_bind_Config_get_kSKHR_CL_0=function(){return(UA=b._emscripten_bind_Config_get_kSKHR_CL_0=b.asm.cy).apply(null,arguments)},VA=b._emscripten_bind_Config_set_kSKHR_CL_1=function(){return(VA=\nb._emscripten_bind_Config_set_kSKHR_CL_1=b.asm.dy).apply(null,arguments)},WA=b._emscripten_bind_Config_get_kSSHR_CL_0=function(){return(WA=b._emscripten_bind_Config_get_kSSHR_CL_0=b.asm.ey).apply(null,arguments)},XA=b._emscripten_bind_Config_set_kSSHR_CL_1=function(){return(XA=b._emscripten_bind_Config_set_kSSHR_CL_1=b.asm.fy).apply(null,arguments)},YA=b._emscripten_bind_Config_get_kSR_SPLT_CL_0=function(){return(YA=b._emscripten_bind_Config_get_kSR_SPLT_CL_0=b.asm.gy).apply(null,arguments)},ZA=b._emscripten_bind_Config_set_kSR_SPLT_CL_1=\nfunction(){return(ZA=b._emscripten_bind_Config_set_kSR_SPLT_CL_1=b.asm.hy).apply(null,arguments)},$A=b._emscripten_bind_Config_get_kSK_SPLT_CL_0=function(){return($A=b._emscripten_bind_Config_get_kSK_SPLT_CL_0=b.asm.iy).apply(null,arguments)},aB=b._emscripten_bind_Config_set_kSK_SPLT_CL_1=function(){return(aB=b._emscripten_bind_Config_set_kSK_SPLT_CL_1=b.asm.jy).apply(null,arguments)},bB=b._emscripten_bind_Config_get_kSS_SPLT_CL_0=function(){return(bB=b._emscripten_bind_Config_get_kSS_SPLT_CL_0=b.asm.ky).apply(null,\narguments)},cB=b._emscripten_bind_Config_set_kSS_SPLT_CL_1=function(){return(cB=b._emscripten_bind_Config_set_kSS_SPLT_CL_1=b.asm.ly).apply(null,arguments)},dB=b._emscripten_bind_Config_get_maxvolume_0=function(){return(dB=b._emscripten_bind_Config_get_maxvolume_0=b.asm.my).apply(null,arguments)},eB=b._emscripten_bind_Config_set_maxvolume_1=function(){return(eB=b._emscripten_bind_Config_set_maxvolume_1=b.asm.ny).apply(null,arguments)},fB=b._emscripten_bind_Config_get_timescale_0=function(){return(fB=\nb._emscripten_bind_Config_get_timescale_0=b.asm.oy).apply(null,arguments)},gB=b._emscripten_bind_Config_set_timescale_1=function(){return(gB=b._emscripten_bind_Config_set_timescale_1=b.asm.py).apply(null,arguments)},hB=b._emscripten_bind_Config_get_viterations_0=function(){return(hB=b._emscripten_bind_Config_get_viterations_0=b.asm.qy).apply(null,arguments)},iB=b._emscripten_bind_Config_set_viterations_1=function(){return(iB=b._emscripten_bind_Config_set_viterations_1=b.asm.ry).apply(null,arguments)},\njB=b._emscripten_bind_Config_get_piterations_0=function(){return(jB=b._emscripten_bind_Config_get_piterations_0=b.asm.sy).apply(null,arguments)},kB=b._emscripten_bind_Config_set_piterations_1=function(){return(kB=b._emscripten_bind_Config_set_piterations_1=b.asm.ty).apply(null,arguments)},lB=b._emscripten_bind_Config_get_diterations_0=function(){return(lB=b._emscripten_bind_Config_get_diterations_0=b.asm.uy).apply(null,arguments)},mB=b._emscripten_bind_Config_set_diterations_1=function(){return(mB=\nb._emscripten_bind_Config_set_diterations_1=b.asm.vy).apply(null,arguments)},nB=b._emscripten_bind_Config_get_citerations_0=function(){return(nB=b._emscripten_bind_Config_get_citerations_0=b.asm.wy).apply(null,arguments)},oB=b._emscripten_bind_Config_set_citerations_1=function(){return(oB=b._emscripten_bind_Config_set_citerations_1=b.asm.xy).apply(null,arguments)},pB=b._emscripten_bind_Config_get_collisions_0=function(){return(pB=b._emscripten_bind_Config_get_collisions_0=b.asm.yy).apply(null,arguments)},\nqB=b._emscripten_bind_Config_set_collisions_1=function(){return(qB=b._emscripten_bind_Config_set_collisions_1=b.asm.zy).apply(null,arguments)},rB=b._emscripten_bind_Config___destroy___0=function(){return(rB=b._emscripten_bind_Config___destroy___0=b.asm.Ay).apply(null,arguments)},sB=b._emscripten_bind_btSoftBody_btSoftBody_4=function(){return(sB=b._emscripten_bind_btSoftBody_btSoftBody_4=b.asm.By).apply(null,arguments)},tB=b._emscripten_bind_btSoftBody_checkLink_2=function(){return(tB=b._emscripten_bind_btSoftBody_checkLink_2=\nb.asm.Cy).apply(null,arguments)},uB=b._emscripten_bind_btSoftBody_checkFace_3=function(){return(uB=b._emscripten_bind_btSoftBody_checkFace_3=b.asm.Dy).apply(null,arguments)},vB=b._emscripten_bind_btSoftBody_appendMaterial_0=function(){return(vB=b._emscripten_bind_btSoftBody_appendMaterial_0=b.asm.Ey).apply(null,arguments)},wB=b._emscripten_bind_btSoftBody_appendNode_2=function(){return(wB=b._emscripten_bind_btSoftBody_appendNode_2=b.asm.Fy).apply(null,arguments)},xB=b._emscripten_bind_btSoftBody_appendLink_4=\nfunction(){return(xB=b._emscripten_bind_btSoftBody_appendLink_4=b.asm.Gy).apply(null,arguments)},yB=b._emscripten_bind_btSoftBody_appendFace_4=function(){return(yB=b._emscripten_bind_btSoftBody_appendFace_4=b.asm.Hy).apply(null,arguments)},zB=b._emscripten_bind_btSoftBody_appendTetra_5=function(){return(zB=b._emscripten_bind_btSoftBody_appendTetra_5=b.asm.Iy).apply(null,arguments)},AB=b._emscripten_bind_btSoftBody_appendAnchor_4=function(){return(AB=b._emscripten_bind_btSoftBody_appendAnchor_4=b.asm.Jy).apply(null,\narguments)},BB=b._emscripten_bind_btSoftBody_addForce_1=function(){return(BB=b._emscripten_bind_btSoftBody_addForce_1=b.asm.Ky).apply(null,arguments)},CB=b._emscripten_bind_btSoftBody_addForce_2=function(){return(CB=b._emscripten_bind_btSoftBody_addForce_2=b.asm.Ly).apply(null,arguments)},DB=b._emscripten_bind_btSoftBody_addAeroForceToNode_2=function(){return(DB=b._emscripten_bind_btSoftBody_addAeroForceToNode_2=b.asm.My).apply(null,arguments)},EB=b._emscripten_bind_btSoftBody_getTotalMass_0=function(){return(EB=\nb._emscripten_bind_btSoftBody_getTotalMass_0=b.asm.Ny).apply(null,arguments)},FB=b._emscripten_bind_btSoftBody_setTotalMass_2=function(){return(FB=b._emscripten_bind_btSoftBody_setTotalMass_2=b.asm.Oy).apply(null,arguments)},GB=b._emscripten_bind_btSoftBody_setMass_2=function(){return(GB=b._emscripten_bind_btSoftBody_setMass_2=b.asm.Py).apply(null,arguments)},HB=b._emscripten_bind_btSoftBody_transform_1=function(){return(HB=b._emscripten_bind_btSoftBody_transform_1=b.asm.Qy).apply(null,arguments)},\nIB=b._emscripten_bind_btSoftBody_translate_1=function(){return(IB=b._emscripten_bind_btSoftBody_translate_1=b.asm.Ry).apply(null,arguments)},JB=b._emscripten_bind_btSoftBody_rotate_1=function(){return(JB=b._emscripten_bind_btSoftBody_rotate_1=b.asm.Sy).apply(null,arguments)},KB=b._emscripten_bind_btSoftBody_scale_1=function(){return(KB=b._emscripten_bind_btSoftBody_scale_1=b.asm.Ty).apply(null,arguments)},LB=b._emscripten_bind_btSoftBody_generateClusters_1=function(){return(LB=b._emscripten_bind_btSoftBody_generateClusters_1=\nb.asm.Uy).apply(null,arguments)},MB=b._emscripten_bind_btSoftBody_generateClusters_2=function(){return(MB=b._emscripten_bind_btSoftBody_generateClusters_2=b.asm.Vy).apply(null,arguments)},NB=b._emscripten_bind_btSoftBody_generateBendingConstraints_2=function(){return(NB=b._emscripten_bind_btSoftBody_generateBendingConstraints_2=b.asm.Wy).apply(null,arguments)},OB=b._emscripten_bind_btSoftBody_upcast_1=function(){return(OB=b._emscripten_bind_btSoftBody_upcast_1=b.asm.Xy).apply(null,arguments)},PB=\nb._emscripten_bind_btSoftBody_getRestLengthScale_0=function(){return(PB=b._emscripten_bind_btSoftBody_getRestLengthScale_0=b.asm.Yy).apply(null,arguments)},QB=b._emscripten_bind_btSoftBody_setRestLengthScale_1=function(){return(QB=b._emscripten_bind_btSoftBody_setRestLengthScale_1=b.asm.Zy).apply(null,arguments)},RB=b._emscripten_bind_btSoftBody_setAnisotropicFriction_2=function(){return(RB=b._emscripten_bind_btSoftBody_setAnisotropicFriction_2=b.asm._y).apply(null,arguments)},SB=b._emscripten_bind_btSoftBody_getCollisionShape_0=\nfunction(){return(SB=b._emscripten_bind_btSoftBody_getCollisionShape_0=b.asm.$y).apply(null,arguments)},TB=b._emscripten_bind_btSoftBody_setContactProcessingThreshold_1=function(){return(TB=b._emscripten_bind_btSoftBody_setContactProcessingThreshold_1=b.asm.az).apply(null,arguments)},UB=b._emscripten_bind_btSoftBody_setActivationState_1=function(){return(UB=b._emscripten_bind_btSoftBody_setActivationState_1=b.asm.bz).apply(null,arguments)},VB=b._emscripten_bind_btSoftBody_forceActivationState_1=function(){return(VB=\nb._emscripten_bind_btSoftBody_forceActivationState_1=b.asm.cz).apply(null,arguments)},WB=b._emscripten_bind_btSoftBody_activate_0=function(){return(WB=b._emscripten_bind_btSoftBody_activate_0=b.asm.dz).apply(null,arguments)},XB=b._emscripten_bind_btSoftBody_activate_1=function(){return(XB=b._emscripten_bind_btSoftBody_activate_1=b.asm.ez).apply(null,arguments)},YB=b._emscripten_bind_btSoftBody_isActive_0=function(){return(YB=b._emscripten_bind_btSoftBody_isActive_0=b.asm.fz).apply(null,arguments)},\nZB=b._emscripten_bind_btSoftBody_isKinematicObject_0=function(){return(ZB=b._emscripten_bind_btSoftBody_isKinematicObject_0=b.asm.gz).apply(null,arguments)},$B=b._emscripten_bind_btSoftBody_isStaticObject_0=function(){return($B=b._emscripten_bind_btSoftBody_isStaticObject_0=b.asm.hz).apply(null,arguments)},aC=b._emscripten_bind_btSoftBody_isStaticOrKinematicObject_0=function(){return(aC=b._emscripten_bind_btSoftBody_isStaticOrKinematicObject_0=b.asm.iz).apply(null,arguments)},bC=b._emscripten_bind_btSoftBody_getRestitution_0=\nfunction(){return(bC=b._emscripten_bind_btSoftBody_getRestitution_0=b.asm.jz).apply(null,arguments)},cC=b._emscripten_bind_btSoftBody_getFriction_0=function(){return(cC=b._emscripten_bind_btSoftBody_getFriction_0=b.asm.kz).apply(null,arguments)},dC=b._emscripten_bind_btSoftBody_getRollingFriction_0=function(){return(dC=b._emscripten_bind_btSoftBody_getRollingFriction_0=b.asm.lz).apply(null,arguments)},eC=b._emscripten_bind_btSoftBody_setRestitution_1=function(){return(eC=b._emscripten_bind_btSoftBody_setRestitution_1=\nb.asm.mz).apply(null,arguments)},fC=b._emscripten_bind_btSoftBody_setFriction_1=function(){return(fC=b._emscripten_bind_btSoftBody_setFriction_1=b.asm.nz).apply(null,arguments)},gC=b._emscripten_bind_btSoftBody_setRollingFriction_1=function(){return(gC=b._emscripten_bind_btSoftBody_setRollingFriction_1=b.asm.oz).apply(null,arguments)},hC=b._emscripten_bind_btSoftBody_getWorldTransform_0=function(){return(hC=b._emscripten_bind_btSoftBody_getWorldTransform_0=b.asm.pz).apply(null,arguments)},iC=b._emscripten_bind_btSoftBody_getCollisionFlags_0=\nfunction(){return(iC=b._emscripten_bind_btSoftBody_getCollisionFlags_0=b.asm.qz).apply(null,arguments)},jC=b._emscripten_bind_btSoftBody_setCollisionFlags_1=function(){return(jC=b._emscripten_bind_btSoftBody_setCollisionFlags_1=b.asm.rz).apply(null,arguments)},kC=b._emscripten_bind_btSoftBody_setWorldTransform_1=function(){return(kC=b._emscripten_bind_btSoftBody_setWorldTransform_1=b.asm.sz).apply(null,arguments)},lC=b._emscripten_bind_btSoftBody_setCollisionShape_1=function(){return(lC=b._emscripten_bind_btSoftBody_setCollisionShape_1=\nb.asm.tz).apply(null,arguments)},mC=b._emscripten_bind_btSoftBody_setCcdMotionThreshold_1=function(){return(mC=b._emscripten_bind_btSoftBody_setCcdMotionThreshold_1=b.asm.uz).apply(null,arguments)},nC=b._emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1=function(){return(nC=b._emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1=b.asm.vz).apply(null,arguments)},oC=b._emscripten_bind_btSoftBody_getUserIndex_0=function(){return(oC=b._emscripten_bind_btSoftBody_getUserIndex_0=b.asm.wz).apply(null,\narguments)},pC=b._emscripten_bind_btSoftBody_setUserIndex_1=function(){return(pC=b._emscripten_bind_btSoftBody_setUserIndex_1=b.asm.xz).apply(null,arguments)},qC=b._emscripten_bind_btSoftBody_getUserPointer_0=function(){return(qC=b._emscripten_bind_btSoftBody_getUserPointer_0=b.asm.yz).apply(null,arguments)},rC=b._emscripten_bind_btSoftBody_setUserPointer_1=function(){return(rC=b._emscripten_bind_btSoftBody_setUserPointer_1=b.asm.zz).apply(null,arguments)},sC=b._emscripten_bind_btSoftBody_getBroadphaseHandle_0=\nfunction(){return(sC=b._emscripten_bind_btSoftBody_getBroadphaseHandle_0=b.asm.Az).apply(null,arguments)},tC=b._emscripten_bind_btSoftBody_get_m_cfg_0=function(){return(tC=b._emscripten_bind_btSoftBody_get_m_cfg_0=b.asm.Bz).apply(null,arguments)},uC=b._emscripten_bind_btSoftBody_set_m_cfg_1=function(){return(uC=b._emscripten_bind_btSoftBody_set_m_cfg_1=b.asm.Cz).apply(null,arguments)},vC=b._emscripten_bind_btSoftBody_get_m_nodes_0=function(){return(vC=b._emscripten_bind_btSoftBody_get_m_nodes_0=b.asm.Dz).apply(null,\narguments)},wC=b._emscripten_bind_btSoftBody_set_m_nodes_1=function(){return(wC=b._emscripten_bind_btSoftBody_set_m_nodes_1=b.asm.Ez).apply(null,arguments)},xC=b._emscripten_bind_btSoftBody_get_m_faces_0=function(){return(xC=b._emscripten_bind_btSoftBody_get_m_faces_0=b.asm.Fz).apply(null,arguments)},yC=b._emscripten_bind_btSoftBody_set_m_faces_1=function(){return(yC=b._emscripten_bind_btSoftBody_set_m_faces_1=b.asm.Gz).apply(null,arguments)},zC=b._emscripten_bind_btSoftBody_get_m_materials_0=function(){return(zC=\nb._emscripten_bind_btSoftBody_get_m_materials_0=b.asm.Hz).apply(null,arguments)},AC=b._emscripten_bind_btSoftBody_set_m_materials_1=function(){return(AC=b._emscripten_bind_btSoftBody_set_m_materials_1=b.asm.Iz).apply(null,arguments)},BC=b._emscripten_bind_btSoftBody_get_m_anchors_0=function(){return(BC=b._emscripten_bind_btSoftBody_get_m_anchors_0=b.asm.Jz).apply(null,arguments)},CC=b._emscripten_bind_btSoftBody_set_m_anchors_1=function(){return(CC=b._emscripten_bind_btSoftBody_set_m_anchors_1=b.asm.Kz).apply(null,\narguments)},DC=b._emscripten_bind_btSoftBody___destroy___0=function(){return(DC=b._emscripten_bind_btSoftBody___destroy___0=b.asm.Lz).apply(null,arguments)},EC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0=function(){return(EC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0=b.asm.Mz).apply(null,arguments)},FC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1=\nfunction(){return(FC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1=b.asm.Nz).apply(null,arguments)},GC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0=function(){return(GC=b._emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0=b.asm.Oz).apply(null,arguments)},HC=b._emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0=function(){return(HC=b._emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0=\nb.asm.Pz).apply(null,arguments)},IC=b._emscripten_bind_btDefaultSoftBodySolver___destroy___0=function(){return(IC=b._emscripten_bind_btDefaultSoftBodySolver___destroy___0=b.asm.Qz).apply(null,arguments)},JC=b._emscripten_bind_btSoftBodyArray_size_0=function(){return(JC=b._emscripten_bind_btSoftBodyArray_size_0=b.asm.Rz).apply(null,arguments)},KC=b._emscripten_bind_btSoftBodyArray_at_1=function(){return(KC=b._emscripten_bind_btSoftBodyArray_at_1=b.asm.Sz).apply(null,arguments)},LC=b._emscripten_bind_btSoftBodyArray___destroy___0=\nfunction(){return(LC=b._emscripten_bind_btSoftBodyArray___destroy___0=b.asm.Tz).apply(null,arguments)},MC=b._emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5=function(){return(MC=b._emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5=b.asm.Uz).apply(null,arguments)},NC=b._emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3=function(){return(NC=b._emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3=b.asm.Vz).apply(null,arguments)},OC=b._emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1=\nfunction(){return(OC=b._emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1=b.asm.Wz).apply(null,arguments)},PC=b._emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1=function(){return(PC=b._emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1=b.asm.Xz).apply(null,arguments)},QC=b._emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0=function(){return(QC=b._emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0=b.asm.Yz).apply(null,arguments)},RC=b._emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0=\nfunction(){return(RC=b._emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0=b.asm.Zz).apply(null,arguments)},SC=b._emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0=function(){return(SC=b._emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0=b.asm._z).apply(null,arguments)},TC=b._emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3=function(){return(TC=b._emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3=b.asm.$z).apply(null,arguments)},UC=b._emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0=\nfunction(){return(UC=b._emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0=b.asm.aA).apply(null,arguments)},VC=b._emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0=function(){return(VC=b._emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0=b.asm.bA).apply(null,arguments)},WC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1=function(){return(WC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1=b.asm.cA).apply(null,arguments)},XC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2=\nfunction(){return(XC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2=b.asm.dA).apply(null,arguments)},YC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3=function(){return(YC=b._emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3=b.asm.eA).apply(null,arguments)},ZC=b._emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0=function(){return(ZC=b._emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0=b.asm.fA).apply(null,arguments)},$C=b._emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5=\nfunction(){return($C=b._emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5=b.asm.gA).apply(null,arguments)},aD=b._emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3=function(){return(aD=b._emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3=b.asm.hA).apply(null,arguments)},bD=b._emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2=function(){return(bD=b._emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2=b.asm.iA).apply(null,arguments)},cD=b._emscripten_bind_btSoftRigidDynamicsWorld_updateSingleAabb_1=\nfunction(){return(cD=b._emscripten_bind_btSoftRigidDynamicsWorld_updateSingleAabb_1=b.asm.jA).apply(null,arguments)},dD=b._emscripten_bind_btSoftRigidDynamicsWorld_setDebugDrawer_1=function(){return(dD=b._emscripten_bind_btSoftRigidDynamicsWorld_setDebugDrawer_1=b.asm.kA).apply(null,arguments)},eD=b._emscripten_bind_btSoftRigidDynamicsWorld_getDebugDrawer_0=function(){return(eD=b._emscripten_bind_btSoftRigidDynamicsWorld_getDebugDrawer_0=b.asm.lA).apply(null,arguments)},fD=b._emscripten_bind_btSoftRigidDynamicsWorld_debugDrawWorld_0=\nfunction(){return(fD=b._emscripten_bind_btSoftRigidDynamicsWorld_debugDrawWorld_0=b.asm.mA).apply(null,arguments)},gD=b._emscripten_bind_btSoftRigidDynamicsWorld_debugDrawObject_3=function(){return(gD=b._emscripten_bind_btSoftRigidDynamicsWorld_debugDrawObject_3=b.asm.nA).apply(null,arguments)},hD=b._emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1=function(){return(hD=b._emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1=b.asm.oA).apply(null,arguments)},iD=b._emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0=\nfunction(){return(iD=b._emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0=b.asm.pA).apply(null,arguments)},jD=b._emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1=function(){return(jD=b._emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1=b.asm.qA).apply(null,arguments)},kD=b._emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3=function(){return(kD=b._emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3=b.asm.rA).apply(null,arguments)},lD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1=\nfunction(){return(lD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1=b.asm.sA).apply(null,arguments)},mD=b._emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1=function(){return(mD=b._emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1=b.asm.tA).apply(null,arguments)},nD=b._emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2=function(){return(nD=b._emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2=b.asm.uA).apply(null,arguments)},oD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1=\nfunction(){return(oD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1=b.asm.vA).apply(null,arguments)},pD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1=function(){return(pD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1=b.asm.wA).apply(null,arguments)},qD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2=function(){return(qD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2=b.asm.xA).apply(null,arguments)},rD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3=\nfunction(){return(rD=b._emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3=b.asm.yA).apply(null,arguments)},sD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactAddedCallback_1=function(){return(sD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactAddedCallback_1=b.asm.zA).apply(null,arguments)},tD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactProcessedCallback_1=function(){return(tD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactProcessedCallback_1=b.asm.AA).apply(null,\narguments)},uD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactDestroyedCallback_1=function(){return(uD=b._emscripten_bind_btSoftRigidDynamicsWorld_setContactDestroyedCallback_1=b.asm.BA).apply(null,arguments)},vD=b._emscripten_bind_btSoftRigidDynamicsWorld_addAction_1=function(){return(vD=b._emscripten_bind_btSoftRigidDynamicsWorld_addAction_1=b.asm.CA).apply(null,arguments)},wD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1=function(){return(wD=b._emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1=\nb.asm.DA).apply(null,arguments)},xD=b._emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0=function(){return(xD=b._emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0=b.asm.EA).apply(null,arguments)},yD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_1=function(){return(yD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_1=b.asm.FA).apply(null,arguments)},zD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_2=function(){return(zD=\nb._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_2=b.asm.GA).apply(null,arguments)},AD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_3=function(){return(AD=b._emscripten_bind_btSoftRigidDynamicsWorld_setInternalTickCallback_3=b.asm.HA).apply(null,arguments)},BD=b._emscripten_bind_btSoftRigidDynamicsWorld___destroy___0=function(){return(BD=b._emscripten_bind_btSoftRigidDynamicsWorld___destroy___0=b.asm.IA).apply(null,arguments)},CD=b._emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0=\nfunction(){return(CD=b._emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0=b.asm.JA).apply(null,arguments)},DD=b._emscripten_bind_btSoftBodyHelpers_CreateRope_5=function(){return(DD=b._emscripten_bind_btSoftBodyHelpers_CreateRope_5=b.asm.KA).apply(null,arguments)},ED=b._emscripten_bind_btSoftBodyHelpers_CreatePatch_9=function(){return(ED=b._emscripten_bind_btSoftBodyHelpers_CreatePatch_9=b.asm.LA).apply(null,arguments)},FD=b._emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10=function(){return(FD=\nb._emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10=b.asm.MA).apply(null,arguments)},GD=b._emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4=function(){return(GD=b._emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4=b.asm.NA).apply(null,arguments)},HD=b._emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5=function(){return(HD=b._emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5=b.asm.OA).apply(null,arguments)},ID=b._emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4=function(){return(ID=\nb._emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4=b.asm.PA).apply(null,arguments)},JD=b._emscripten_bind_btSoftBodyHelpers___destroy___0=function(){return(JD=b._emscripten_bind_btSoftBodyHelpers___destroy___0=b.asm.QA).apply(null,arguments)},KD=b._emscripten_enum_PHY_ScalarType_PHY_FLOAT=function(){return(KD=b._emscripten_enum_PHY_ScalarType_PHY_FLOAT=b.asm.RA).apply(null,arguments)},LD=b._emscripten_enum_PHY_ScalarType_PHY_DOUBLE=function(){return(LD=b._emscripten_enum_PHY_ScalarType_PHY_DOUBLE=\nb.asm.SA).apply(null,arguments)},MD=b._emscripten_enum_PHY_ScalarType_PHY_INTEGER=function(){return(MD=b._emscripten_enum_PHY_ScalarType_PHY_INTEGER=b.asm.TA).apply(null,arguments)},ND=b._emscripten_enum_PHY_ScalarType_PHY_SHORT=function(){return(ND=b._emscripten_enum_PHY_ScalarType_PHY_SHORT=b.asm.UA).apply(null,arguments)},OD=b._emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=function(){return(OD=b._emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=b.asm.VA).apply(null,arguments)},PD=b._emscripten_enum_PHY_ScalarType_PHY_UCHAR=\nfunction(){return(PD=b._emscripten_enum_PHY_ScalarType_PHY_UCHAR=b.asm.WA).apply(null,arguments)},QD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_COMPOUND_SHAPE=function(){return(QD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_COMPOUND_SHAPE=b.asm.XA).apply(null,arguments)},RD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_TRIMESH_SHAPE_PART=function(){return(RD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_TRIMESH_SHAPE_PART=b.asm.YA).apply(null,arguments)},SD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_TRIMESH_SHAPE=\nfunction(){return(SD=b._emscripten_enum_eGIMPACT_SHAPE_TYPE_CONST_GIMPACT_TRIMESH_SHAPE=b.asm.ZA).apply(null,arguments)},TD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP=function(){return(TD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP=b.asm._A).apply(null,arguments)},UD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP=function(){return(UD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP=b.asm.$A).apply(null,arguments)},VD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM=\nfunction(){return(VD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM=b.asm.aB).apply(null,arguments)},WD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM=function(){return(WD=b._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM=b.asm.bB).apply(null,arguments)};b._malloc=function(){return(b._malloc=b.asm.dB).apply(null,arguments)};b.UTF8ToString=Ma;\nb.addFunction=function(a){if(!Aa){Aa=new WeakMap;for(var c=Ua.length,d=0;d<0+c;d++){var e=kb(d);e&&Aa.set(e,d)}}if(Aa.has(a))return Aa.get(a);if(za.length)c=za.pop();else{try{Ua.grow(1)}catch(f){if(!(f instanceof RangeError))throw f;throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";}c=Ua.length-1}try{d=c,Ua.set(d,a),lb[d]=a}catch(f){if(!(f instanceof TypeError))throw f;d=c;Ua.set(d,a);lb[d]=a}Aa.set(a,c);return c};var XD;cb=function YD(){XD||ZD();XD||(cb=YD)};\nfunction ZD(){function a(){if(!XD&&(XD=!0,b.calledRun=!0,!Ka)){Ya=!0;jb(Wa);ja(b);if(b.onRuntimeInitialized)b.onRuntimeInitialized();if(b.postRun)for(\"function\"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var c=b.postRun.shift();Xa.unshift(c)}jb(Xa)}}if(!(0<ab)){if(b.preRun)for(\"function\"==typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)Za();jb(Va);0<ab||(b.setStatus?(b.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){b.setStatus(\"\")},1);a()},1)):a())}}\nb.run=ZD;if(b.preInit)for(\"function\"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.pop()();ZD();function g(){}g.prototype=Object.create(g.prototype);g.prototype.constructor=g;g.prototype.fB=g;g.gB={};b.WrapperObject=g;function h(a){return(a||g).gB}b.getCache=h;function k(a,c){var d=h(c),e=d[a];if(e)return e;e=Object.create((c||g).prototype);e.eB=a;return d[a]=e}b.wrapPointer=k;b.castObject=function(a,c){return k(a.eB,c)};b.NULL=k(0);\nb.destroy=function(a){if(!a.__destroy__)throw\"Error: Cannot destroy object. (Did you create it yourself?)\";a.__destroy__();delete h(a.fB)[a.eB]};b.compare=function(a,c){return a.eB===c.eB};b.getPointer=function(a){return a.eB};b.getClass=function(a){return a.fB};var $D=0,aE=0,bE=0,cE=[],dE=0;function eE(){if(dE){for(var a=0;a<cE.length;a++)b._free(cE[a]);cE.length=0;b._free($D);$D=0;aE+=dE;dE=0}$D||(aE+=128,($D=b._malloc(aE))||xa(void 0));bE=0}\nfunction fE(a,c){$D||xa(void 0);a=a.length*c.BYTES_PER_ELEMENT;a=a+7&-8;bE+a>=aE?(0<a||xa(void 0),dE+=a,c=b._malloc(a),cE.push(c)):(c=$D+bE,bE+=a);return c}function gE(a,c,d){d>>>=0;switch(c.BYTES_PER_ELEMENT){case 2:d>>>=1;break;case 4:d>>>=2;break;case 8:d>>>=3}for(var e=0;e<a.length;e++)c[d+e]=a[e]}\nfunction hE(a){if(\"string\"===typeof a){for(var c=0,d=0;d<a.length;++d){var e=a.charCodeAt(d);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++d)&1023);127>=e?++c:c=2047>=e?c+2:65535>=e?c+3:c+4}c=Array(c+1);e=c.length;d=0;if(0<e){e=d+e-1;for(var f=0;f<a.length;++f){var m=a.charCodeAt(f);if(55296<=m&&57343>=m){var y=a.charCodeAt(++f);m=65536+((m&1023)<<10)|y&1023}if(127>=m){if(d>=e)break;c[d++]=m}else{if(2047>=m){if(d+1>=e)break;c[d++]=192|m>>6}else{if(65535>=m){if(d+2>=e)break;c[d++]=224|\nm>>12}else{if(d+3>=e)break;c[d++]=240|m>>18;c[d++]=128|m>>12&63}c[d++]=128|m>>6&63}c[d++]=128|m&63}}c[d]=0}a=fE(c,Pa);gE(c,Pa,a);return a}return a}function iE(a){if(\"object\"===typeof a){var c=fE(a,Ra);gE(a,Ra,c);return c}return a}function l(){throw\"cannot construct a btCollisionShape, no constructor in IDL\";}l.prototype=Object.create(g.prototype);l.prototype.constructor=l;l.prototype.fB=l;l.gB={};b.btCollisionShape=l;\nl.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pb(c,a)};l.prototype.getLocalScaling=function(){return k(qb(this.eB),n)};l.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);rb(d,a,c)};l.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);sb(c,a)};l.prototype.getMargin=function(){return tb(this.eB)};l.prototype.__destroy__=function(){ub(this.eB)};\nfunction jE(){throw\"cannot construct a btCollisionWorld, no constructor in IDL\";}jE.prototype=Object.create(g.prototype);jE.prototype.constructor=jE;jE.prototype.fB=jE;jE.gB={};b.btCollisionWorld=jE;jE.prototype.getDispatcher=function(){return k(vb(this.eB),kE)};jE.prototype.rayTest=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);wb(e,a,c,d)};jE.prototype.getPairCache=function(){return k(xb(this.eB),lE)};\njE.prototype.getDispatchInfo=function(){return k(yb(this.eB),q)};jE.prototype.addCollisionObject=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?zb(e,a):void 0===d?Ab(e,a,c):Bb(e,a,c,d)};jE.prototype.removeCollisionObject=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Cb(c,a)};jE.prototype.getBroadphase=function(){return k(Db(this.eB),mE)};\njE.prototype.convexSweepTest=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);Fb(m,a,c,d,e,f)};jE.prototype.contactPairTest=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Gb(e,a,c,d)};\njE.prototype.contactTest=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Hb(d,a,c)};jE.prototype.updateSingleAabb=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ib(c,a)};jE.prototype.setDebugDrawer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Jb(c,a)};jE.prototype.getDebugDrawer=function(){return k(Kb(this.eB),nE)};jE.prototype.debugDrawWorld=function(){Lb(this.eB)};\njE.prototype.debugDrawObject=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Mb(e,a,c,d)};jE.prototype.__destroy__=function(){Nb(this.eB)};function r(){throw\"cannot construct a btCollisionObject, no constructor in IDL\";}r.prototype=Object.create(g.prototype);r.prototype.constructor=r;r.prototype.fB=r;r.gB={};b.btCollisionObject=r;\nr.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ob(d,a,c)};r.prototype.getCollisionShape=function(){return k(Pb(this.eB),l)};r.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Qb(c,a)};r.prototype.setActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Rb(c,a)};\nr.prototype.forceActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Sb(c,a)};r.prototype.activate=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);void 0===a?Tb(c):Ub(c,a)};r.prototype.isActive=function(){return!!Vb(this.eB)};r.prototype.isKinematicObject=function(){return!!Wb(this.eB)};r.prototype.isStaticObject=function(){return!!Xb(this.eB)};r.prototype.isStaticOrKinematicObject=function(){return!!Yb(this.eB)};r.prototype.getRestitution=function(){return Zb(this.eB)};\nr.prototype.getFriction=function(){return $b(this.eB)};r.prototype.getRollingFriction=function(){return ac(this.eB)};r.prototype.setRestitution=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bc(c,a)};r.prototype.setFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cc(c,a)};r.prototype.setRollingFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dc(c,a)};r.prototype.getWorldTransform=function(){return k(ec(this.eB),t)};r.prototype.getCollisionFlags=function(){return gc(this.eB)};\nr.prototype.setCollisionFlags=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hc(c,a)};r.prototype.setWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ic(c,a)};r.prototype.setCollisionShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);jc(c,a)};r.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);kc(c,a)};r.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);lc(c,a)};\nr.prototype.getUserIndex=function(){return mc(this.eB)};r.prototype.setUserIndex=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);nc(c,a)};r.prototype.getUserPointer=function(){return k(oc(this.eB),oE)};r.prototype.setUserPointer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pc(c,a)};r.prototype.getBroadphaseHandle=function(){return k(qc(this.eB),pE)};r.prototype.__destroy__=function(){sc(this.eB)};\nfunction qE(){throw\"cannot construct a btConcaveShape, no constructor in IDL\";}qE.prototype=Object.create(l.prototype);qE.prototype.constructor=qE;qE.prototype.fB=qE;qE.gB={};b.btConcaveShape=qE;qE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);tc(c,a)};qE.prototype.getLocalScaling=function(){return k(uc(this.eB),n)};qE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);vc(d,a,c)};\nqE.prototype.__destroy__=function(){wc(this.eB)};function rE(){throw\"cannot construct a btCollisionAlgorithm, no constructor in IDL\";}rE.prototype=Object.create(g.prototype);rE.prototype.constructor=rE;rE.prototype.fB=rE;rE.gB={};b.btCollisionAlgorithm=rE;rE.prototype.__destroy__=function(){xc(this.eB)};function sE(){throw\"cannot construct a btTypedConstraint, no constructor in IDL\";}sE.prototype=Object.create(g.prototype);sE.prototype.constructor=sE;sE.prototype.fB=sE;sE.gB={};\nb.btTypedConstraint=sE;sE.prototype.enableFeedback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);yc(c,a)};sE.prototype.getBreakingImpulseThreshold=function(){return zc(this.eB)};sE.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ac(c,a)};sE.prototype.getParam=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return Bc(d,a,c)};\nsE.prototype.setParam=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Cc(e,a,c,d)};sE.prototype.__destroy__=function(){Dc(this.eB)};function tE(){throw\"cannot construct a btDynamicsWorld, no constructor in IDL\";}tE.prototype=Object.create(jE.prototype);tE.prototype.constructor=tE;tE.prototype.fB=tE;tE.gB={};b.btDynamicsWorld=tE;tE.prototype.addAction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Fc(c,a)};\ntE.prototype.removeAction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gc(c,a)};tE.prototype.getSolverInfo=function(){return k(Hc(this.eB),u)};tE.prototype.setInternalTickCallback=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?Ic(e,a):void 0===d?Jc(e,a,c):Kc(e,a,c,d)};tE.prototype.getDispatcher=function(){return k(Lc(this.eB),kE)};\ntE.prototype.rayTest=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Mc(e,a,c,d)};tE.prototype.getPairCache=function(){return k(Nc(this.eB),lE)};tE.prototype.getDispatchInfo=function(){return k(Oc(this.eB),q)};\ntE.prototype.addCollisionObject=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?Pc(e,a):void 0===d?Qc(e,a,c):Rc(e,a,c,d)};tE.prototype.removeCollisionObject=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Sc(c,a)};tE.prototype.getBroadphase=function(){return k(Tc(this.eB),mE)};\ntE.prototype.convexSweepTest=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);Uc(m,a,c,d,e,f)};tE.prototype.contactPairTest=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Vc(e,a,c,d)};\ntE.prototype.contactTest=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Yc(d,a,c)};tE.prototype.updateSingleAabb=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zc(c,a)};tE.prototype.setDebugDrawer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);$c(c,a)};tE.prototype.getDebugDrawer=function(){return k(ad(this.eB),nE)};tE.prototype.debugDrawWorld=function(){bd(this.eB)};\ntE.prototype.debugDrawObject=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);cd(e,a,c,d)};tE.prototype.__destroy__=function(){dd(this.eB)};function nE(){throw\"cannot construct a btIDebugDraw, no constructor in IDL\";}nE.prototype=Object.create(g.prototype);nE.prototype.constructor=nE;nE.prototype.fB=nE;nE.gB={};b.btIDebugDraw=nE;\nnE.prototype.drawLine=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);ed(e,a,c,d)};nE.prototype.drawContactPoint=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);fd(m,a,c,d,e,f)};\nnE.prototype.reportErrorWarning=function(a){var c=this.eB;eE();a=a&&\"object\"===typeof a?a.eB:hE(a);gd(c,a)};nE.prototype.draw3dText=function(a,c){var d=this.eB;eE();a&&\"object\"===typeof a&&(a=a.eB);c=c&&\"object\"===typeof c?c.eB:hE(c);hd(d,a,c)};nE.prototype.setDebugMode=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);jd(c,a)};nE.prototype.getDebugMode=function(){return kd(this.eB)};nE.prototype.__destroy__=function(){ld(this.eB)};\nfunction n(a,c,d){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);this.eB=void 0===a?md():void 0===c?_emscripten_bind_btVector3_btVector3_1(a):void 0===d?_emscripten_bind_btVector3_btVector3_2(a,c):nd(a,c,d);h(n)[this.eB]=this}n.prototype=Object.create(g.prototype);n.prototype.constructor=n;n.prototype.fB=n;n.gB={};b.btVector3=n;n.prototype.length=n.prototype.length=function(){return od(this.eB)};n.prototype.x=n.prototype.x=function(){return pd(this.eB)};\nn.prototype.y=n.prototype.y=function(){return qd(this.eB)};n.prototype.z=n.prototype.z=function(){return rd(this.eB)};n.prototype.setX=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);sd(c,a)};n.prototype.setY=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);td(c,a)};n.prototype.setZ=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ud(c,a)};\nn.prototype.setValue=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);vd(e,a,c,d)};n.prototype.normalize=n.prototype.normalize=function(){wd(this.eB)};n.prototype.rotate=n.prototype.rotate=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return k(xd(d,a,c),n)};n.prototype.dot=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return yd(c,a)};\nn.prototype.op_mul=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(zd(c,a),n)};n.prototype.op_add=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Ad(c,a),n)};n.prototype.op_sub=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Bd(c,a),n)};n.prototype.__destroy__=function(){Cd(this.eB)};function uE(){throw\"cannot construct a btQuadWord, no constructor in IDL\";}uE.prototype=Object.create(g.prototype);uE.prototype.constructor=uE;\nuE.prototype.fB=uE;uE.gB={};b.btQuadWord=uE;uE.prototype.x=uE.prototype.x=function(){return Dd(this.eB)};uE.prototype.y=uE.prototype.y=function(){return Ed(this.eB)};uE.prototype.z=uE.prototype.z=function(){return Fd(this.eB)};uE.prototype.w=uE.prototype.w=function(){return Gd(this.eB)};uE.prototype.setX=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Hd(c,a)};uE.prototype.setY=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Id(c,a)};\nuE.prototype.setZ=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Jd(c,a)};uE.prototype.setW=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Kd(c,a)};uE.prototype.__destroy__=function(){Ld(this.eB)};function vE(){throw\"cannot construct a btMotionState, no constructor in IDL\";}vE.prototype=Object.create(g.prototype);vE.prototype.constructor=vE;vE.prototype.fB=vE;vE.gB={};b.btMotionState=vE;\nvE.prototype.getWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Md(c,a)};vE.prototype.setWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Nd(c,a)};vE.prototype.__destroy__=function(){Od(this.eB)};function v(){throw\"cannot construct a RayResultCallback, no constructor in IDL\";}v.prototype=Object.create(g.prototype);v.prototype.constructor=v;v.prototype.fB=v;v.gB={};b.RayResultCallback=v;v.prototype.hasHit=function(){return!!Pd(this.eB)};\nv.prototype.get_m_collisionFilterGroup=v.prototype.hB=function(){return Qd(this.eB)};v.prototype.set_m_collisionFilterGroup=v.prototype.jB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Rd(c,a)};Object.defineProperty(v.prototype,\"m_collisionFilterGroup\",{get:v.prototype.hB,set:v.prototype.jB});v.prototype.get_m_collisionFilterMask=v.prototype.iB=function(){return Sd(this.eB)};\nv.prototype.set_m_collisionFilterMask=v.prototype.kB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Td(c,a)};Object.defineProperty(v.prototype,\"m_collisionFilterMask\",{get:v.prototype.iB,set:v.prototype.kB});v.prototype.get_m_closestHitFraction=v.prototype.lB=function(){return Ud(this.eB)};v.prototype.set_m_closestHitFraction=v.prototype.mB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Vd(c,a)};Object.defineProperty(v.prototype,\"m_closestHitFraction\",{get:v.prototype.lB,set:v.prototype.mB});\nv.prototype.get_m_collisionObject=v.prototype.sB=function(){return k(Wd(this.eB),r)};v.prototype.set_m_collisionObject=v.prototype.AB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xd(c,a)};Object.defineProperty(v.prototype,\"m_collisionObject\",{get:v.prototype.sB,set:v.prototype.AB});v.prototype.get_m_flags=v.prototype.pB=function(){return Yd(this.eB)};v.prototype.set_m_flags=v.prototype.qB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zd(c,a)};\nObject.defineProperty(v.prototype,\"m_flags\",{get:v.prototype.pB,set:v.prototype.qB});v.prototype.__destroy__=function(){$d(this.eB)};function wE(){throw\"cannot construct a ContactResultCallback, no constructor in IDL\";}wE.prototype=Object.create(g.prototype);wE.prototype.constructor=wE;wE.prototype.fB=wE;wE.gB={};b.ContactResultCallback=wE;\nwE.prototype.addSingleResult=function(a,c,d,e,f,m,y){var W=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);m&&\"object\"===typeof m&&(m=m.eB);y&&\"object\"===typeof y&&(y=y.eB);return ae(W,a,c,d,e,f,m,y)};wE.prototype.__destroy__=function(){be(this.eB)};function w(){throw\"cannot construct a ConvexResultCallback, no constructor in IDL\";}w.prototype=Object.create(g.prototype);\nw.prototype.constructor=w;w.prototype.fB=w;w.gB={};b.ConvexResultCallback=w;w.prototype.hasHit=function(){return!!ce(this.eB)};w.prototype.get_m_collisionFilterGroup=w.prototype.hB=function(){return de(this.eB)};w.prototype.set_m_collisionFilterGroup=w.prototype.jB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ee(c,a)};Object.defineProperty(w.prototype,\"m_collisionFilterGroup\",{get:w.prototype.hB,set:w.prototype.jB});w.prototype.get_m_collisionFilterMask=w.prototype.iB=function(){return fe(this.eB)};\nw.prototype.set_m_collisionFilterMask=w.prototype.kB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ge(c,a)};Object.defineProperty(w.prototype,\"m_collisionFilterMask\",{get:w.prototype.iB,set:w.prototype.kB});w.prototype.get_m_closestHitFraction=w.prototype.lB=function(){return he(this.eB)};w.prototype.set_m_closestHitFraction=w.prototype.mB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ie(c,a)};Object.defineProperty(w.prototype,\"m_closestHitFraction\",{get:w.prototype.lB,set:w.prototype.mB});\nw.prototype.__destroy__=function(){je(this.eB)};function xE(){throw\"cannot construct a btConvexShape, no constructor in IDL\";}xE.prototype=Object.create(l.prototype);xE.prototype.constructor=xE;xE.prototype.fB=xE;xE.gB={};b.btConvexShape=xE;xE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ke(c,a)};xE.prototype.getLocalScaling=function(){return k(le(this.eB),n)};\nxE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);me(d,a,c)};xE.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ne(c,a)};xE.prototype.getMargin=function(){return oe(this.eB)};xE.prototype.__destroy__=function(){pe(this.eB)};function yE(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=qe(a,c);h(yE)[this.eB]=this}yE.prototype=Object.create(l.prototype);\nyE.prototype.constructor=yE;yE.prototype.fB=yE;yE.gB={};b.btCapsuleShape=yE;yE.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);re(c,a)};yE.prototype.getMargin=function(){return se(this.eB)};yE.prototype.getUpAxis=function(){return te(this.eB)};yE.prototype.getRadius=function(){return ue(this.eB)};yE.prototype.getHalfHeight=function(){return ve(this.eB)};yE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);we(c,a)};\nyE.prototype.getLocalScaling=function(){return k(xe(this.eB),n)};yE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);ye(d,a,c)};yE.prototype.__destroy__=function(){ze(this.eB)};function zE(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=Ae(a);h(zE)[this.eB]=this}zE.prototype=Object.create(l.prototype);zE.prototype.constructor=zE;zE.prototype.fB=zE;zE.gB={};b.btCylinderShape=zE;\nzE.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Be(c,a)};zE.prototype.getMargin=function(){return Ce(this.eB)};zE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);De(c,a)};zE.prototype.getLocalScaling=function(){return k(Ee(this.eB),n)};zE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Fe(d,a,c)};zE.prototype.__destroy__=function(){Ge(this.eB)};\nfunction AE(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=He(a,c);h(AE)[this.eB]=this}AE.prototype=Object.create(l.prototype);AE.prototype.constructor=AE;AE.prototype.fB=AE;AE.gB={};b.btConeShape=AE;AE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ie(c,a)};AE.prototype.getLocalScaling=function(){return k(Je(this.eB),n)};\nAE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ke(d,a,c)};AE.prototype.__destroy__=function(){Le(this.eB)};function BE(){throw\"cannot construct a btStridingMeshInterface, no constructor in IDL\";}BE.prototype=Object.create(g.prototype);BE.prototype.constructor=BE;BE.prototype.fB=BE;BE.gB={};b.btStridingMeshInterface=BE;BE.prototype.setScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Me(c,a)};\nBE.prototype.__destroy__=function(){Ne(this.eB)};function CE(){throw\"cannot construct a btTriangleMeshShape, no constructor in IDL\";}CE.prototype=Object.create(qE.prototype);CE.prototype.constructor=CE;CE.prototype.fB=CE;CE.gB={};b.btTriangleMeshShape=CE;CE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Oe(c,a)};CE.prototype.getLocalScaling=function(){return k(Pe(this.eB),n)};\nCE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Qe(d,a,c)};CE.prototype.__destroy__=function(){Re(this.eB)};function DE(){throw\"cannot construct a btPrimitiveManagerBase, no constructor in IDL\";}DE.prototype=Object.create(g.prototype);DE.prototype.constructor=DE;DE.prototype.fB=DE;DE.gB={};b.btPrimitiveManagerBase=DE;DE.prototype.is_trimesh=function(){return!!Se(this.eB)};DE.prototype.get_primitive_count=function(){return Te(this.eB)};\nDE.prototype.get_primitive_box=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ue(d,a,c)};DE.prototype.get_primitive_triangle=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ve(d,a,c)};DE.prototype.__destroy__=function(){We(this.eB)};function EE(){throw\"cannot construct a btGImpactShapeInterface, no constructor in IDL\";}EE.prototype=Object.create(qE.prototype);EE.prototype.constructor=EE;EE.prototype.fB=EE;\nEE.gB={};b.btGImpactShapeInterface=EE;EE.prototype.updateBound=function(){Xe(this.eB)};EE.prototype.postUpdate=function(){Ye(this.eB)};EE.prototype.getShapeType=function(){return Ze(this.eB)};EE.prototype.getName=function(){return Ma($e(this.eB))};EE.prototype.getGImpactShapeType=function(){return af(this.eB)};EE.prototype.getPrimitiveManager=function(){return k(bf(this.eB),DE)};EE.prototype.getNumChildShapes=function(){return cf(this.eB)};EE.prototype.childrenHasTransform=function(){return!!df(this.eB)};\nEE.prototype.needsRetrieveTriangles=function(){return!!ef(this.eB)};EE.prototype.needsRetrieveTetrahedrons=function(){return!!ff(this.eB)};EE.prototype.getBulletTriangle=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);gf(d,a,c)};EE.prototype.getBulletTetrahedron=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);hf(d,a,c)};\nEE.prototype.getChildShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(jf(c,a),l)};EE.prototype.getChildTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(kf(c,a),t)};EE.prototype.setChildTransform=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);lf(d,a,c)};EE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);mf(c,a)};\nEE.prototype.getLocalScaling=function(){return k(nf(this.eB),n)};EE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);of(d,a,c)};EE.prototype.__destroy__=function(){pf(this.eB)};function FE(){throw\"cannot construct a btActivatingCollisionAlgorithm, no constructor in IDL\";}FE.prototype=Object.create(rE.prototype);FE.prototype.constructor=FE;FE.prototype.fB=FE;FE.gB={};b.btActivatingCollisionAlgorithm=FE;\nFE.prototype.__destroy__=function(){qf(this.eB)};function GE(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=void 0===a?rf():sf(a);h(GE)[this.eB]=this}GE.prototype=Object.create(g.prototype);GE.prototype.constructor=GE;GE.prototype.fB=GE;GE.gB={};b.btDefaultCollisionConfiguration=GE;GE.prototype.__destroy__=function(){tf(this.eB)};function kE(){throw\"cannot construct a btDispatcher, no constructor in IDL\";}kE.prototype=Object.create(g.prototype);kE.prototype.constructor=kE;kE.prototype.fB=kE;kE.gB={};\nb.btDispatcher=kE;kE.prototype.getNumManifolds=function(){return uf(this.eB)};kE.prototype.getManifoldByIndexInternal=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(vf(c,a),HE)};kE.prototype.__destroy__=function(){wf(this.eB)};\nfunction IE(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);this.eB=void 0===e?xf(a,c,d):void 0===f?_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(a,c,d,e):yf(a,c,d,e,f);h(IE)[this.eB]=this}IE.prototype=Object.create(sE.prototype);IE.prototype.constructor=IE;IE.prototype.fB=IE;IE.gB={};b.btGeneric6DofConstraint=IE;\nIE.prototype.setLinearLowerLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zf(c,a)};IE.prototype.setLinearUpperLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Af(c,a)};IE.prototype.setAngularLowerLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Bf(c,a)};IE.prototype.setAngularUpperLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Cf(c,a)};IE.prototype.getFrameOffsetA=function(){return k(Df(this.eB),t)};\nIE.prototype.enableFeedback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ef(c,a)};IE.prototype.getBreakingImpulseThreshold=function(){return Ff(this.eB)};IE.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gf(c,a)};IE.prototype.getParam=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return Hf(d,a,c)};\nIE.prototype.setParam=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);If(e,a,c,d)};IE.prototype.__destroy__=function(){Jf(this.eB)};function x(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=Kf(a,c,d,e);h(x)[this.eB]=this}x.prototype=Object.create(tE.prototype);x.prototype.constructor=x;x.prototype.fB=x;x.gB={};\nb.btDiscreteDynamicsWorld=x;x.prototype.setGravity=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Lf(c,a)};x.prototype.getGravity=function(){return k(Mf(this.eB),n)};x.prototype.addRigidBody=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?Nf(e,a):void 0===d?_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(e,a,c):Of(e,a,c,d)};\nx.prototype.removeRigidBody=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pf(c,a)};x.prototype.addConstraint=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);void 0===c?Qf(d,a):Rf(d,a,c)};x.prototype.removeConstraint=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Sf(c,a)};\nx.prototype.stepSimulation=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);return void 0===c?Tf(e,a):void 0===d?Uf(e,a,c):Vf(e,a,c,d)};x.prototype.setContactAddedCallback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Wf(c,a)};x.prototype.setContactProcessedCallback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xf(c,a)};\nx.prototype.setContactDestroyedCallback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Yf(c,a)};x.prototype.getDispatcher=function(){return k(Zf(this.eB),kE)};x.prototype.rayTest=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);$f(e,a,c,d)};x.prototype.getPairCache=function(){return k(ag(this.eB),lE)};x.prototype.getDispatchInfo=function(){return k(bg(this.eB),q)};\nx.prototype.addCollisionObject=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?cg(e,a):void 0===d?dg(e,a,c):eg(e,a,c,d)};x.prototype.removeCollisionObject=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);fg(c,a)};x.prototype.getBroadphase=function(){return k(gg(this.eB),mE)};\nx.prototype.convexSweepTest=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);hg(m,a,c,d,e,f)};x.prototype.contactPairTest=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);ig(e,a,c,d)};\nx.prototype.contactTest=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);jg(d,a,c)};x.prototype.updateSingleAabb=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);kg(c,a)};x.prototype.setDebugDrawer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);lg(c,a)};x.prototype.getDebugDrawer=function(){return k(mg(this.eB),nE)};x.prototype.debugDrawWorld=function(){ng(this.eB)};\nx.prototype.debugDrawObject=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);og(e,a,c,d)};x.prototype.addAction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pg(c,a)};x.prototype.removeAction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);qg(c,a)};x.prototype.getSolverInfo=function(){return k(rg(this.eB),u)};\nx.prototype.setInternalTickCallback=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?sg(e,a):void 0===d?tg(e,a,c):ug(e,a,c,d)};x.prototype.__destroy__=function(){vg(this.eB)};function JE(){throw\"cannot construct a btVehicleRaycaster, no constructor in IDL\";}JE.prototype=Object.create(g.prototype);JE.prototype.constructor=JE;JE.prototype.fB=JE;JE.gB={};b.btVehicleRaycaster=JE;\nJE.prototype.castRay=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);wg(e,a,c,d)};JE.prototype.__destroy__=function(){xg(this.eB)};function KE(){throw\"cannot construct a btActionInterface, no constructor in IDL\";}KE.prototype=Object.create(g.prototype);KE.prototype.constructor=KE;KE.prototype.fB=KE;KE.gB={};b.btActionInterface=KE;\nKE.prototype.updateAction=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);yg(d,a,c)};KE.prototype.__destroy__=function(){zg(this.eB)};function z(){this.eB=Ag();h(z)[this.eB]=this}z.prototype=Object.create(r.prototype);z.prototype.constructor=z;z.prototype.fB=z;z.gB={};b.btGhostObject=z;z.prototype.getNumOverlappingObjects=function(){return Bg(this.eB)};\nz.prototype.getOverlappingObject=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Cg(c,a),r)};z.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Dg(d,a,c)};z.prototype.getCollisionShape=function(){return k(Eg(this.eB),l)};z.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Fg(c,a)};\nz.prototype.setActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gg(c,a)};z.prototype.forceActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Hg(c,a)};z.prototype.activate=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);void 0===a?Ig(c):Jg(c,a)};z.prototype.isActive=function(){return!!Kg(this.eB)};z.prototype.isKinematicObject=function(){return!!Lg(this.eB)};z.prototype.isStaticObject=function(){return!!Mg(this.eB)};\nz.prototype.isStaticOrKinematicObject=function(){return!!Ng(this.eB)};z.prototype.getRestitution=function(){return Og(this.eB)};z.prototype.getFriction=function(){return Pg(this.eB)};z.prototype.getRollingFriction=function(){return Qg(this.eB)};z.prototype.setRestitution=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Rg(c,a)};z.prototype.setFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Sg(c,a)};\nz.prototype.setRollingFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Tg(c,a)};z.prototype.getWorldTransform=function(){return k(Ug(this.eB),t)};z.prototype.getCollisionFlags=function(){return Vg(this.eB)};z.prototype.setCollisionFlags=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Wg(c,a)};z.prototype.setWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xg(c,a)};\nz.prototype.setCollisionShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Yg(c,a)};z.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zg(c,a)};z.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);$g(c,a)};z.prototype.getUserIndex=function(){return ah(this.eB)};z.prototype.setUserIndex=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bh(c,a)};\nz.prototype.getUserPointer=function(){return k(ch(this.eB),oE)};z.prototype.setUserPointer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dh(c,a)};z.prototype.getBroadphaseHandle=function(){return k(eh(this.eB),pE)};z.prototype.__destroy__=function(){fh(this.eB)};function LE(){throw\"cannot construct a btSoftBodySolver, no constructor in IDL\";}LE.prototype=Object.create(g.prototype);LE.prototype.constructor=LE;LE.prototype.fB=LE;LE.gB={};b.btSoftBodySolver=LE;LE.prototype.__destroy__=function(){gh(this.eB)};\nfunction oE(){throw\"cannot construct a VoidPtr, no constructor in IDL\";}oE.prototype=Object.create(g.prototype);oE.prototype.constructor=oE;oE.prototype.fB=oE;oE.gB={};b.VoidPtr=oE;oE.prototype.__destroy__=function(){hh(this.eB)};function ME(){this.eB=ih();h(ME)[this.eB]=this}ME.prototype=Object.create(nE.prototype);ME.prototype.constructor=ME;ME.prototype.fB=ME;ME.gB={};b.DebugDrawer=ME;\nME.prototype.drawLine=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);jh(e,a,c,d)};ME.prototype.drawContactPoint=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);kh(m,a,c,d,e,f)};\nME.prototype.reportErrorWarning=function(a){var c=this.eB;eE();a=a&&\"object\"===typeof a?a.eB:hE(a);lh(c,a)};ME.prototype.draw3dText=function(a,c){var d=this.eB;eE();a&&\"object\"===typeof a&&(a=a.eB);c=c&&\"object\"===typeof c?c.eB:hE(c);mh(d,a,c)};ME.prototype.setDebugMode=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);nh(c,a)};ME.prototype.getDebugMode=function(){return oh(this.eB)};ME.prototype.__destroy__=function(){ph(this.eB)};\nfunction A(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=void 0===a?qh():void 0===c?_emscripten_bind_btVector4_btVector4_1(a):void 0===d?_emscripten_bind_btVector4_btVector4_2(a,c):void 0===e?_emscripten_bind_btVector4_btVector4_3(a,c,d):rh(a,c,d,e);h(A)[this.eB]=this}A.prototype=Object.create(n.prototype);A.prototype.constructor=A;A.prototype.fB=A;A.gB={};b.btVector4=A;\nA.prototype.w=A.prototype.w=function(){return sh(this.eB)};A.prototype.setValue=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);th(f,a,c,d,e)};A.prototype.length=A.prototype.length=function(){return uh(this.eB)};A.prototype.x=A.prototype.x=function(){return vh(this.eB)};A.prototype.y=A.prototype.y=function(){return wh(this.eB)};A.prototype.z=A.prototype.z=function(){return xh(this.eB)};\nA.prototype.setX=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);yh(c,a)};A.prototype.setY=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zh(c,a)};A.prototype.setZ=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ah(c,a)};A.prototype.normalize=A.prototype.normalize=function(){Bh(this.eB)};A.prototype.rotate=A.prototype.rotate=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return k(Ch(d,a,c),n)};\nA.prototype.dot=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return Dh(c,a)};A.prototype.op_mul=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Eh(c,a),n)};A.prototype.op_add=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Fh(c,a),n)};A.prototype.op_sub=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Gh(c,a),n)};A.prototype.__destroy__=function(){Hh(this.eB)};\nfunction B(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=Ih(a,c,d,e);h(B)[this.eB]=this}B.prototype=Object.create(uE.prototype);B.prototype.constructor=B;B.prototype.fB=B;B.gB={};b.btQuaternion=B;B.prototype.setValue=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);Jh(f,a,c,d,e)};\nB.prototype.setEulerZYX=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Kh(e,a,c,d)};B.prototype.setRotation=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Lh(d,a,c)};B.prototype.normalize=B.prototype.normalize=function(){Mh(this.eB)};B.prototype.length2=function(){return Nh(this.eB)};B.prototype.length=B.prototype.length=function(){return Oh(this.eB)};\nB.prototype.dot=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return Ph(c,a)};B.prototype.normalized=function(){return k(Qh(this.eB),B)};B.prototype.getAxis=function(){return k(Rh(this.eB),n)};B.prototype.inverse=B.prototype.inverse=function(){return k(Sh(this.eB),B)};B.prototype.getAngle=function(){return Th(this.eB)};B.prototype.getAngleShortestPath=function(){return Uh(this.eB)};\nB.prototype.angle=B.prototype.angle=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return Vh(c,a)};B.prototype.angleShortestPath=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return Wh(c,a)};B.prototype.op_add=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Xh(c,a),B)};B.prototype.op_sub=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Yh(c,a),B)};\nB.prototype.op_mul=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Zh(c,a),B)};B.prototype.op_mulq=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k($h(c,a),B)};B.prototype.op_div=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(ai(c,a),B)};B.prototype.x=B.prototype.x=function(){return bi(this.eB)};B.prototype.y=B.prototype.y=function(){return ci(this.eB)};B.prototype.z=B.prototype.z=function(){return di(this.eB)};\nB.prototype.w=B.prototype.w=function(){return ei(this.eB)};B.prototype.setX=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);fi(c,a)};B.prototype.setY=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gi(c,a)};B.prototype.setZ=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hi(c,a)};B.prototype.setW=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ii(c,a)};B.prototype.__destroy__=function(){ji(this.eB)};\nfunction NE(){throw\"cannot construct a btMatrix3x3, no constructor in IDL\";}NE.prototype=Object.create(g.prototype);NE.prototype.constructor=NE;NE.prototype.fB=NE;NE.gB={};b.btMatrix3x3=NE;NE.prototype.setEulerZYX=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);ki(e,a,c,d)};NE.prototype.getRotation=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);li(c,a)};\nNE.prototype.getRow=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(mi(c,a),n)};NE.prototype.__destroy__=function(){ni(this.eB)};function t(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=void 0===a?oi():void 0===c?_emscripten_bind_btTransform_btTransform_1(a):pi(a,c);h(t)[this.eB]=this}t.prototype=Object.create(g.prototype);t.prototype.constructor=t;t.prototype.fB=t;t.gB={};b.btTransform=t;t.prototype.setIdentity=function(){qi(this.eB)};\nt.prototype.setOrigin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ri(c,a)};t.prototype.setRotation=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);si(c,a)};t.prototype.getOrigin=function(){return k(ti(this.eB),n)};t.prototype.getRotation=function(){return k(ui(this.eB),B)};t.prototype.getBasis=function(){return k(vi(this.eB),NE)};t.prototype.setFromOpenGLMatrix=function(a){var c=this.eB;eE();\"object\"==typeof a&&(a=iE(a));wi(c,a)};\nt.prototype.inverse=t.prototype.inverse=function(){return k(xi(this.eB),t)};t.prototype.op_mul=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(yi(c,a),t)};t.prototype.__destroy__=function(){zi(this.eB)};function OE(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=void 0===a?Ai():void 0===c?Bi(a):Ci(a,c);h(OE)[this.eB]=this}OE.prototype=Object.create(vE.prototype);OE.prototype.constructor=OE;OE.prototype.fB=OE;OE.gB={};b.btDefaultMotionState=OE;\nOE.prototype.getWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Di(c,a)};OE.prototype.setWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ei(c,a)};OE.prototype.get_m_graphicsWorldTrans=OE.prototype.nD=function(){return k(Fi(this.eB),t)};OE.prototype.set_m_graphicsWorldTrans=OE.prototype.gG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gi(c,a)};Object.defineProperty(OE.prototype,\"m_graphicsWorldTrans\",{get:OE.prototype.nD,set:OE.prototype.gG});\nOE.prototype.__destroy__=function(){Hi(this.eB)};function PE(){throw\"cannot construct a btCollisionObjectWrapper, no constructor in IDL\";}PE.prototype=Object.create(g.prototype);PE.prototype.constructor=PE;PE.prototype.fB=PE;PE.gB={};b.btCollisionObjectWrapper=PE;PE.prototype.getWorldTransform=function(){return k(Ii(this.eB),t)};PE.prototype.getCollisionObject=function(){return k(Ji(this.eB),r)};PE.prototype.getCollisionShape=function(){return k(Ki(this.eB),l)};\nfunction C(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=Li(a,c);h(C)[this.eB]=this}C.prototype=Object.create(v.prototype);C.prototype.constructor=C;C.prototype.fB=C;C.gB={};b.ClosestRayResultCallback=C;C.prototype.hasHit=function(){return!!Mi(this.eB)};C.prototype.get_m_rayFromWorld=C.prototype.MB=function(){return k(Ni(this.eB),n)};C.prototype.set_m_rayFromWorld=C.prototype.WB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Oi(c,a)};\nObject.defineProperty(C.prototype,\"m_rayFromWorld\",{get:C.prototype.MB,set:C.prototype.WB});C.prototype.get_m_rayToWorld=C.prototype.NB=function(){return k(Pi(this.eB),n)};C.prototype.set_m_rayToWorld=C.prototype.XB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Qi(c,a)};Object.defineProperty(C.prototype,\"m_rayToWorld\",{get:C.prototype.NB,set:C.prototype.XB});C.prototype.get_m_hitNormalWorld=C.prototype.uB=function(){return k(Ri(this.eB),n)};\nC.prototype.set_m_hitNormalWorld=C.prototype.CB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Si(c,a)};Object.defineProperty(C.prototype,\"m_hitNormalWorld\",{get:C.prototype.uB,set:C.prototype.CB});C.prototype.get_m_hitPointWorld=C.prototype.vB=function(){return k(Ti(this.eB),n)};C.prototype.set_m_hitPointWorld=C.prototype.DB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ui(c,a)};Object.defineProperty(C.prototype,\"m_hitPointWorld\",{get:C.prototype.vB,set:C.prototype.DB});\nC.prototype.get_m_collisionFilterGroup=C.prototype.hB=function(){return Vi(this.eB)};C.prototype.set_m_collisionFilterGroup=C.prototype.jB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Wi(c,a)};Object.defineProperty(C.prototype,\"m_collisionFilterGroup\",{get:C.prototype.hB,set:C.prototype.jB});C.prototype.get_m_collisionFilterMask=C.prototype.iB=function(){return Xi(this.eB)};\nC.prototype.set_m_collisionFilterMask=C.prototype.kB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Yi(c,a)};Object.defineProperty(C.prototype,\"m_collisionFilterMask\",{get:C.prototype.iB,set:C.prototype.kB});C.prototype.get_m_closestHitFraction=C.prototype.lB=function(){return Zi(this.eB)};C.prototype.set_m_closestHitFraction=C.prototype.mB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);$i(c,a)};Object.defineProperty(C.prototype,\"m_closestHitFraction\",{get:C.prototype.lB,set:C.prototype.mB});\nC.prototype.get_m_collisionObject=C.prototype.sB=function(){return k(aj(this.eB),r)};C.prototype.set_m_collisionObject=C.prototype.AB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bj(c,a)};Object.defineProperty(C.prototype,\"m_collisionObject\",{get:C.prototype.sB,set:C.prototype.AB});C.prototype.get_m_flags=C.prototype.pB=function(){return cj(this.eB)};C.prototype.set_m_flags=C.prototype.qB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dj(c,a)};\nObject.defineProperty(C.prototype,\"m_flags\",{get:C.prototype.pB,set:C.prototype.qB});C.prototype.__destroy__=function(){ej(this.eB)};function QE(){throw\"cannot construct a btConstCollisionObjectArray, no constructor in IDL\";}QE.prototype=Object.create(g.prototype);QE.prototype.constructor=QE;QE.prototype.fB=QE;QE.gB={};b.btConstCollisionObjectArray=QE;QE.prototype.size=QE.prototype.size=function(){return fj(this.eB)};\nQE.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(gj(c,a),r)};QE.prototype.__destroy__=function(){hj(this.eB)};function RE(){throw\"cannot construct a btScalarArray, no constructor in IDL\";}RE.prototype=Object.create(g.prototype);RE.prototype.constructor=RE;RE.prototype.fB=RE;RE.gB={};b.btScalarArray=RE;RE.prototype.size=RE.prototype.size=function(){return ij(this.eB)};RE.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return jj(c,a)};\nRE.prototype.__destroy__=function(){kj(this.eB)};function D(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=lj(a,c);h(D)[this.eB]=this}D.prototype=Object.create(v.prototype);D.prototype.constructor=D;D.prototype.fB=D;D.gB={};b.AllHitsRayResultCallback=D;D.prototype.hasHit=function(){return!!mj(this.eB)};D.prototype.get_m_collisionObjects=D.prototype.WC=function(){return k(nj(this.eB),QE)};\nD.prototype.set_m_collisionObjects=D.prototype.PF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);oj(c,a)};Object.defineProperty(D.prototype,\"m_collisionObjects\",{get:D.prototype.WC,set:D.prototype.PF});D.prototype.get_m_rayFromWorld=D.prototype.MB=function(){return k(pj(this.eB),n)};D.prototype.set_m_rayFromWorld=D.prototype.WB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);qj(c,a)};Object.defineProperty(D.prototype,\"m_rayFromWorld\",{get:D.prototype.MB,set:D.prototype.WB});\nD.prototype.get_m_rayToWorld=D.prototype.NB=function(){return k(rj(this.eB),n)};D.prototype.set_m_rayToWorld=D.prototype.XB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);sj(c,a)};Object.defineProperty(D.prototype,\"m_rayToWorld\",{get:D.prototype.NB,set:D.prototype.XB});D.prototype.get_m_hitNormalWorld=D.prototype.uB=function(){return k(tj(this.eB),SE)};D.prototype.set_m_hitNormalWorld=D.prototype.CB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);uj(c,a)};\nObject.defineProperty(D.prototype,\"m_hitNormalWorld\",{get:D.prototype.uB,set:D.prototype.CB});D.prototype.get_m_hitPointWorld=D.prototype.vB=function(){return k(vj(this.eB),SE)};D.prototype.set_m_hitPointWorld=D.prototype.DB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);wj(c,a)};Object.defineProperty(D.prototype,\"m_hitPointWorld\",{get:D.prototype.vB,set:D.prototype.DB});D.prototype.get_m_hitFractions=D.prototype.sD=function(){return k(xj(this.eB),RE)};\nD.prototype.set_m_hitFractions=D.prototype.lG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);yj(c,a)};Object.defineProperty(D.prototype,\"m_hitFractions\",{get:D.prototype.sD,set:D.prototype.lG});D.prototype.get_m_collisionFilterGroup=D.prototype.hB=function(){return zj(this.eB)};D.prototype.set_m_collisionFilterGroup=D.prototype.jB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Aj(c,a)};Object.defineProperty(D.prototype,\"m_collisionFilterGroup\",{get:D.prototype.hB,set:D.prototype.jB});\nD.prototype.get_m_collisionFilterMask=D.prototype.iB=function(){return Bj(this.eB)};D.prototype.set_m_collisionFilterMask=D.prototype.kB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Cj(c,a)};Object.defineProperty(D.prototype,\"m_collisionFilterMask\",{get:D.prototype.iB,set:D.prototype.kB});D.prototype.get_m_closestHitFraction=D.prototype.lB=function(){return Dj(this.eB)};\nD.prototype.set_m_closestHitFraction=D.prototype.mB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ej(c,a)};Object.defineProperty(D.prototype,\"m_closestHitFraction\",{get:D.prototype.lB,set:D.prototype.mB});D.prototype.get_m_collisionObject=D.prototype.sB=function(){return k(Fj(this.eB),r)};D.prototype.set_m_collisionObject=D.prototype.AB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gj(c,a)};Object.defineProperty(D.prototype,\"m_collisionObject\",{get:D.prototype.sB,set:D.prototype.AB});\nD.prototype.get_m_flags=D.prototype.pB=function(){return Hj(this.eB)};D.prototype.set_m_flags=D.prototype.qB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ij(c,a)};Object.defineProperty(D.prototype,\"m_flags\",{get:D.prototype.pB,set:D.prototype.qB});D.prototype.__destroy__=function(){Jj(this.eB)};function F(){throw\"cannot construct a btManifoldPoint, no constructor in IDL\";}F.prototype=Object.create(g.prototype);F.prototype.constructor=F;F.prototype.fB=F;F.gB={};b.btManifoldPoint=F;\nF.prototype.getPositionWorldOnA=function(){return k(Kj(this.eB),n)};F.prototype.getPositionWorldOnB=function(){return k(Lj(this.eB),n)};F.prototype.getAppliedImpulse=function(){return Mj(this.eB)};F.prototype.getDistance=function(){return Nj(this.eB)};F.prototype.get_m_localPointA=F.prototype.ID=function(){return k(Oj(this.eB),n)};F.prototype.set_m_localPointA=F.prototype.BG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pj(c,a)};\nObject.defineProperty(F.prototype,\"m_localPointA\",{get:F.prototype.ID,set:F.prototype.BG});F.prototype.get_m_localPointB=F.prototype.JD=function(){return k(Qj(this.eB),n)};F.prototype.set_m_localPointB=F.prototype.CG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Rj(c,a)};Object.defineProperty(F.prototype,\"m_localPointB\",{get:F.prototype.JD,set:F.prototype.CG});F.prototype.get_m_positionWorldOnB=F.prototype.$D=function(){return k(Sj(this.eB),n)};\nF.prototype.set_m_positionWorldOnB=F.prototype.UG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Tj(c,a)};Object.defineProperty(F.prototype,\"m_positionWorldOnB\",{get:F.prototype.$D,set:F.prototype.UG});F.prototype.get_m_positionWorldOnA=F.prototype.ZD=function(){return k(Uj(this.eB),n)};F.prototype.set_m_positionWorldOnA=F.prototype.TG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Vj(c,a)};Object.defineProperty(F.prototype,\"m_positionWorldOnA\",{get:F.prototype.ZD,set:F.prototype.TG});\nF.prototype.get_m_normalWorldOnB=F.prototype.UD=function(){return k(Wj(this.eB),n)};F.prototype.set_m_normalWorldOnB=F.prototype.NG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xj(c,a)};Object.defineProperty(F.prototype,\"m_normalWorldOnB\",{get:F.prototype.UD,set:F.prototype.NG});F.prototype.get_m_userPersistentData=F.prototype.BE=function(){return Yj(this.eB)};F.prototype.set_m_userPersistentData=F.prototype.vH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zj(c,a)};\nObject.defineProperty(F.prototype,\"m_userPersistentData\",{get:F.prototype.BE,set:F.prototype.vH});F.prototype.__destroy__=function(){ak(this.eB)};function TE(){this.eB=bk();h(TE)[this.eB]=this}TE.prototype=Object.create(wE.prototype);TE.prototype.constructor=TE;TE.prototype.fB=TE;TE.gB={};b.ConcreteContactResultCallback=TE;\nTE.prototype.addSingleResult=function(a,c,d,e,f,m,y){var W=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);m&&\"object\"===typeof m&&(m=m.eB);y&&\"object\"===typeof y&&(y=y.eB);return ck(W,a,c,d,e,f,m,y)};TE.prototype.__destroy__=function(){dk(this.eB)};function UE(){throw\"cannot construct a LocalShapeInfo, no constructor in IDL\";}UE.prototype=Object.create(g.prototype);\nUE.prototype.constructor=UE;UE.prototype.fB=UE;UE.gB={};b.LocalShapeInfo=UE;UE.prototype.get_m_shapePart=UE.prototype.iE=function(){return ek(this.eB)};UE.prototype.set_m_shapePart=UE.prototype.cH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);fk(c,a)};Object.defineProperty(UE.prototype,\"m_shapePart\",{get:UE.prototype.iE,set:UE.prototype.cH});UE.prototype.get_m_triangleIndex=UE.prototype.xE=function(){return gk(this.eB)};\nUE.prototype.set_m_triangleIndex=UE.prototype.rH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hk(c,a)};Object.defineProperty(UE.prototype,\"m_triangleIndex\",{get:UE.prototype.xE,set:UE.prototype.rH});UE.prototype.__destroy__=function(){ik(this.eB)};function H(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);this.eB=jk(a,c,d,e,f);h(H)[this.eB]=this}\nH.prototype=Object.create(g.prototype);H.prototype.constructor=H;H.prototype.fB=H;H.gB={};b.LocalConvexResult=H;H.prototype.get_m_hitCollisionObject=H.prototype.KB=function(){return k(kk(this.eB),r)};H.prototype.set_m_hitCollisionObject=H.prototype.UB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);lk(c,a)};Object.defineProperty(H.prototype,\"m_hitCollisionObject\",{get:H.prototype.KB,set:H.prototype.UB});H.prototype.get_m_localShapeInfo=H.prototype.KD=function(){return k(mk(this.eB),UE)};\nH.prototype.set_m_localShapeInfo=H.prototype.DG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);nk(c,a)};Object.defineProperty(H.prototype,\"m_localShapeInfo\",{get:H.prototype.KD,set:H.prototype.DG});H.prototype.get_m_hitNormalLocal=H.prototype.uD=function(){return k(ok(this.eB),n)};H.prototype.set_m_hitNormalLocal=H.prototype.nG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pk(c,a)};Object.defineProperty(H.prototype,\"m_hitNormalLocal\",{get:H.prototype.uD,set:H.prototype.nG});\nH.prototype.get_m_hitPointLocal=H.prototype.wD=function(){return k(qk(this.eB),n)};H.prototype.set_m_hitPointLocal=H.prototype.pG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);rk(c,a)};Object.defineProperty(H.prototype,\"m_hitPointLocal\",{get:H.prototype.wD,set:H.prototype.pG});H.prototype.get_m_hitFraction=H.prototype.rD=function(){return sk(this.eB)};H.prototype.set_m_hitFraction=H.prototype.kG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);tk(c,a)};\nObject.defineProperty(H.prototype,\"m_hitFraction\",{get:H.prototype.rD,set:H.prototype.kG});H.prototype.__destroy__=function(){uk(this.eB)};function I(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=vk(a,c);h(I)[this.eB]=this}I.prototype=Object.create(w.prototype);I.prototype.constructor=I;I.prototype.fB=I;I.gB={};b.ClosestConvexResultCallback=I;I.prototype.hasHit=function(){return!!wk(this.eB)};\nI.prototype.get_m_hitCollisionObject=I.prototype.KB=function(){return k(xk(this.eB),r)};I.prototype.set_m_hitCollisionObject=I.prototype.UB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);yk(c,a)};Object.defineProperty(I.prototype,\"m_hitCollisionObject\",{get:I.prototype.KB,set:I.prototype.UB});I.prototype.get_m_convexFromWorld=I.prototype.aD=function(){return k(zk(this.eB),n)};\nI.prototype.set_m_convexFromWorld=I.prototype.UF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ak(c,a)};Object.defineProperty(I.prototype,\"m_convexFromWorld\",{get:I.prototype.aD,set:I.prototype.UF});I.prototype.get_m_convexToWorld=I.prototype.bD=function(){return k(Bk(this.eB),n)};I.prototype.set_m_convexToWorld=I.prototype.VF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ck(c,a)};Object.defineProperty(I.prototype,\"m_convexToWorld\",{get:I.prototype.bD,set:I.prototype.VF});\nI.prototype.get_m_hitNormalWorld=I.prototype.uB=function(){return k(Dk(this.eB),n)};I.prototype.set_m_hitNormalWorld=I.prototype.CB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ek(c,a)};Object.defineProperty(I.prototype,\"m_hitNormalWorld\",{get:I.prototype.uB,set:I.prototype.CB});I.prototype.get_m_hitPointWorld=I.prototype.vB=function(){return k(Fk(this.eB),n)};I.prototype.set_m_hitPointWorld=I.prototype.DB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gk(c,a)};\nObject.defineProperty(I.prototype,\"m_hitPointWorld\",{get:I.prototype.vB,set:I.prototype.DB});I.prototype.get_m_collisionFilterGroup=I.prototype.hB=function(){return Hk(this.eB)};I.prototype.set_m_collisionFilterGroup=I.prototype.jB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ik(c,a)};Object.defineProperty(I.prototype,\"m_collisionFilterGroup\",{get:I.prototype.hB,set:I.prototype.jB});I.prototype.get_m_collisionFilterMask=I.prototype.iB=function(){return Jk(this.eB)};\nI.prototype.set_m_collisionFilterMask=I.prototype.kB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Kk(c,a)};Object.defineProperty(I.prototype,\"m_collisionFilterMask\",{get:I.prototype.iB,set:I.prototype.kB});I.prototype.get_m_closestHitFraction=I.prototype.lB=function(){return Lk(this.eB)};I.prototype.set_m_closestHitFraction=I.prototype.mB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Mk(c,a)};Object.defineProperty(I.prototype,\"m_closestHitFraction\",{get:I.prototype.lB,set:I.prototype.mB});\nI.prototype.__destroy__=function(){Nk(this.eB)};function VE(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=void 0===c?Ok(a):Pk(a,c);h(VE)[this.eB]=this}VE.prototype=Object.create(xE.prototype);VE.prototype.constructor=VE;VE.prototype.fB=VE;VE.gB={};b.btConvexTriangleMeshShape=VE;VE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Qk(c,a)};VE.prototype.getLocalScaling=function(){return k(Rk(this.eB),n)};\nVE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Sk(d,a,c)};VE.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Tk(c,a)};VE.prototype.getMargin=function(){return Uk(this.eB)};VE.prototype.__destroy__=function(){Vk(this.eB)};function WE(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=Wk(a);h(WE)[this.eB]=this}WE.prototype=Object.create(l.prototype);WE.prototype.constructor=WE;WE.prototype.fB=WE;\nWE.gB={};b.btBoxShape=WE;WE.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xk(c,a)};WE.prototype.getMargin=function(){return Yk(this.eB)};WE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zk(c,a)};WE.prototype.getLocalScaling=function(){return k($k(this.eB),n)};WE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);al(d,a,c)};WE.prototype.__destroy__=function(){bl(this.eB)};\nfunction XE(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=cl(a,c);h(XE)[this.eB]=this}XE.prototype=Object.create(yE.prototype);XE.prototype.constructor=XE;XE.prototype.fB=XE;XE.gB={};b.btCapsuleShapeX=XE;XE.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dl(c,a)};XE.prototype.getMargin=function(){return el(this.eB)};XE.prototype.getUpAxis=function(){return fl(this.eB)};XE.prototype.getRadius=function(){return gl(this.eB)};\nXE.prototype.getHalfHeight=function(){return hl(this.eB)};XE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);il(c,a)};XE.prototype.getLocalScaling=function(){return k(jl(this.eB),n)};XE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);kl(d,a,c)};XE.prototype.__destroy__=function(){ll(this.eB)};\nfunction YE(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=ml(a,c);h(YE)[this.eB]=this}YE.prototype=Object.create(yE.prototype);YE.prototype.constructor=YE;YE.prototype.fB=YE;YE.gB={};b.btCapsuleShapeZ=YE;YE.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);nl(c,a)};YE.prototype.getMargin=function(){return ol(this.eB)};YE.prototype.getUpAxis=function(){return pl(this.eB)};YE.prototype.getRadius=function(){return ql(this.eB)};\nYE.prototype.getHalfHeight=function(){return rl(this.eB)};YE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);sl(c,a)};YE.prototype.getLocalScaling=function(){return k(tl(this.eB),n)};YE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);ul(d,a,c)};YE.prototype.__destroy__=function(){vl(this.eB)};function ZE(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=wl(a);h(ZE)[this.eB]=this}\nZE.prototype=Object.create(zE.prototype);ZE.prototype.constructor=ZE;ZE.prototype.fB=ZE;ZE.gB={};b.btCylinderShapeX=ZE;ZE.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xl(c,a)};ZE.prototype.getMargin=function(){return yl(this.eB)};ZE.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zl(c,a)};ZE.prototype.getLocalScaling=function(){return k(Al(this.eB),n)};\nZE.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Bl(d,a,c)};ZE.prototype.__destroy__=function(){Cl(this.eB)};function $E(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=Dl(a);h($E)[this.eB]=this}$E.prototype=Object.create(zE.prototype);$E.prototype.constructor=$E;$E.prototype.fB=$E;$E.gB={};b.btCylinderShapeZ=$E;$E.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);El(c,a)};\n$E.prototype.getMargin=function(){return Fl(this.eB)};$E.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gl(c,a)};$E.prototype.getLocalScaling=function(){return k(Hl(this.eB),n)};$E.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Il(d,a,c)};$E.prototype.__destroy__=function(){Jl(this.eB)};function aF(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=Kl(a);h(aF)[this.eB]=this}aF.prototype=Object.create(l.prototype);\naF.prototype.constructor=aF;aF.prototype.fB=aF;aF.gB={};b.btSphereShape=aF;aF.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ll(c,a)};aF.prototype.getMargin=function(){return Ml(this.eB)};aF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Nl(c,a)};aF.prototype.getLocalScaling=function(){return k(Ol(this.eB),n)};\naF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Pl(d,a,c)};aF.prototype.__destroy__=function(){Ql(this.eB)};function bF(a,c,d){eE();a&&\"object\"===typeof a&&(a=a.eB);\"object\"==typeof c&&(c=iE(c));d&&\"object\"===typeof d&&(d=d.eB);this.eB=Rl(a,c,d);h(bF)[this.eB]=this}bF.prototype=Object.create(l.prototype);bF.prototype.constructor=bF;bF.prototype.fB=bF;bF.gB={};b.btMultiSphereShape=bF;\nbF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Sl(c,a)};bF.prototype.getLocalScaling=function(){return k(Tl(this.eB),n)};bF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ul(d,a,c)};bF.prototype.__destroy__=function(){Vl(this.eB)};function cF(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=Wl(a,c);h(cF)[this.eB]=this}cF.prototype=Object.create(AE.prototype);\ncF.prototype.constructor=cF;cF.prototype.fB=cF;cF.gB={};b.btConeShapeX=cF;cF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xl(c,a)};cF.prototype.getLocalScaling=function(){return k(Yl(this.eB),n)};cF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Zl(d,a,c)};cF.prototype.__destroy__=function(){$l(this.eB)};\nfunction dF(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=am(a,c);h(dF)[this.eB]=this}dF.prototype=Object.create(AE.prototype);dF.prototype.constructor=dF;dF.prototype.fB=dF;dF.gB={};b.btConeShapeZ=dF;dF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bm(c,a)};dF.prototype.getLocalScaling=function(){return k(cm(this.eB),n)};\ndF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);dm(d,a,c)};dF.prototype.__destroy__=function(){em(this.eB)};function eF(){throw\"cannot construct a btIntArray, no constructor in IDL\";}eF.prototype=Object.create(g.prototype);eF.prototype.constructor=eF;eF.prototype.fB=eF;eF.gB={};b.btIntArray=eF;eF.prototype.size=eF.prototype.size=function(){return fm(this.eB)};\neF.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return gm(c,a)};eF.prototype.__destroy__=function(){hm(this.eB)};function fF(){throw\"cannot construct a btFace, no constructor in IDL\";}fF.prototype=Object.create(g.prototype);fF.prototype.constructor=fF;fF.prototype.fB=fF;fF.gB={};b.btFace=fF;fF.prototype.get_m_indices=fF.prototype.zD=function(){return k(im(this.eB),eF)};\nfF.prototype.set_m_indices=fF.prototype.sG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);jm(c,a)};Object.defineProperty(fF.prototype,\"m_indices\",{get:fF.prototype.zD,set:fF.prototype.sG});fF.prototype.get_m_plane=fF.prototype.YD=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return km(c,a)};fF.prototype.set_m_plane=fF.prototype.SG=function(a,c){var d=this.eB;eE();a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);lm(d,a,c)};\nObject.defineProperty(fF.prototype,\"m_plane\",{get:fF.prototype.YD,set:fF.prototype.SG});fF.prototype.__destroy__=function(){mm(this.eB)};function SE(){throw\"cannot construct a btVector3Array, no constructor in IDL\";}SE.prototype=Object.create(g.prototype);SE.prototype.constructor=SE;SE.prototype.fB=SE;SE.gB={};b.btVector3Array=SE;SE.prototype.size=SE.prototype.size=function(){return nm(this.eB)};SE.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(om(c,a),n)};\nSE.prototype.__destroy__=function(){pm(this.eB)};function gF(){throw\"cannot construct a btFaceArray, no constructor in IDL\";}gF.prototype=Object.create(g.prototype);gF.prototype.constructor=gF;gF.prototype.fB=gF;gF.gB={};b.btFaceArray=gF;gF.prototype.size=gF.prototype.size=function(){return qm(this.eB)};gF.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(rm(c,a),fF)};gF.prototype.__destroy__=function(){sm(this.eB)};\nfunction hF(){throw\"cannot construct a btConvexPolyhedron, no constructor in IDL\";}hF.prototype=Object.create(g.prototype);hF.prototype.constructor=hF;hF.prototype.fB=hF;hF.gB={};b.btConvexPolyhedron=hF;hF.prototype.get_m_vertices=hF.prototype.DE=function(){return k(tm(this.eB),SE)};hF.prototype.set_m_vertices=hF.prototype.xH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);um(c,a)};Object.defineProperty(hF.prototype,\"m_vertices\",{get:hF.prototype.DE,set:hF.prototype.xH});\nhF.prototype.get_m_faces=hF.prototype.JB=function(){return k(wm(this.eB),gF)};hF.prototype.set_m_faces=hF.prototype.TB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xm(c,a)};Object.defineProperty(hF.prototype,\"m_faces\",{get:hF.prototype.JB,set:hF.prototype.TB});hF.prototype.__destroy__=function(){ym(this.eB)};function iF(a,c){eE();\"object\"==typeof a&&(a=iE(a));c&&\"object\"===typeof c&&(c=c.eB);this.eB=void 0===a?zm():void 0===c?Am(a):Bm(a,c);h(iF)[this.eB]=this}iF.prototype=Object.create(l.prototype);\niF.prototype.constructor=iF;iF.prototype.fB=iF;iF.gB={};b.btConvexHullShape=iF;iF.prototype.addPoint=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);void 0===c?Cm(d,a):Dm(d,a,c)};iF.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Em(c,a)};iF.prototype.getMargin=function(){return Fm(this.eB)};iF.prototype.getNumVertices=function(){return Gm(this.eB)};\niF.prototype.initializePolyhedralFeatures=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return!!Hm(c,a)};iF.prototype.recalcLocalAabb=function(){Im(this.eB)};iF.prototype.getConvexPolyhedron=function(){return k(Jm(this.eB),hF)};iF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Km(c,a)};iF.prototype.getLocalScaling=function(){return k(Lm(this.eB),n)};\niF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Mm(d,a,c)};iF.prototype.__destroy__=function(){Nm(this.eB)};function jF(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=Om(a);h(jF)[this.eB]=this}jF.prototype=Object.create(g.prototype);jF.prototype.constructor=jF;jF.prototype.fB=jF;jF.gB={};b.btShapeHull=jF;jF.prototype.buildHull=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return!!Pm(c,a)};\njF.prototype.numVertices=function(){return Qm(this.eB)};jF.prototype.getVertexPointer=function(){return k(Rm(this.eB),n)};jF.prototype.__destroy__=function(){Sm(this.eB)};function kF(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=void 0===a?Tm():Um(a);h(kF)[this.eB]=this}kF.prototype=Object.create(l.prototype);kF.prototype.constructor=kF;kF.prototype.fB=kF;kF.gB={};b.btCompoundShape=kF;\nkF.prototype.addChildShape=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Vm(d,a,c)};kF.prototype.removeChildShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Wm(c,a)};kF.prototype.removeChildShapeByIndex=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xm(c,a)};kF.prototype.getNumChildShapes=function(){return Ym(this.eB)};kF.prototype.getChildShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Zm(c,a),l)};\nkF.prototype.updateChildTransform=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===d?$m(e,a,c):an(e,a,c,d)};kF.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bn(c,a)};kF.prototype.getMargin=function(){return cn(this.eB)};kF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dn(c,a)};kF.prototype.getLocalScaling=function(){return k(en(this.eB),n)};\nkF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);fn(d,a,c)};kF.prototype.__destroy__=function(){gn(this.eB)};function lF(){throw\"cannot construct a btIndexedMesh, no constructor in IDL\";}lF.prototype=Object.create(g.prototype);lF.prototype.constructor=lF;lF.prototype.fB=lF;lF.gB={};b.btIndexedMesh=lF;lF.prototype.get_m_numTriangles=lF.prototype.WD=function(){return hn(this.eB)};\nlF.prototype.set_m_numTriangles=lF.prototype.PG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);jn(c,a)};Object.defineProperty(lF.prototype,\"m_numTriangles\",{get:lF.prototype.WD,set:lF.prototype.PG});lF.prototype.__destroy__=function(){kn(this.eB)};function mF(){throw\"cannot construct a btIndexedMeshArray, no constructor in IDL\";}mF.prototype=Object.create(g.prototype);mF.prototype.constructor=mF;mF.prototype.fB=mF;mF.gB={};b.btIndexedMeshArray=mF;mF.prototype.size=mF.prototype.size=function(){return ln(this.eB)};\nmF.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(mn(c,a),lF)};mF.prototype.__destroy__=function(){nn(this.eB)};function nF(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=void 0===a?on():void 0===c?pn(a):qn(a,c);h(nF)[this.eB]=this}nF.prototype=Object.create(BE.prototype);nF.prototype.constructor=nF;nF.prototype.fB=nF;nF.gB={};b.btTriangleMesh=nF;\nnF.prototype.addTriangle=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);void 0===e?rn(f,a,c,d):sn(f,a,c,d,e)};nF.prototype.findOrAddVertex=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return tn(d,a,c)};nF.prototype.addIndex=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);un(c,a)};\nnF.prototype.getIndexedMeshArray=function(){return k(vn(this.eB),mF)};nF.prototype.setScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);wn(c,a)};nF.prototype.__destroy__=function(){xn(this.eB)};function oF(){this.eB=yn();h(oF)[this.eB]=this}oF.prototype=Object.create(qE.prototype);oF.prototype.constructor=oF;oF.prototype.fB=oF;oF.gB={};b.btEmptyShape=oF;oF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zn(c,a)};\noF.prototype.getLocalScaling=function(){return k(An(this.eB),n)};oF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Bn(d,a,c)};oF.prototype.__destroy__=function(){Cn(this.eB)};function pF(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=Dn(a,c);h(pF)[this.eB]=this}pF.prototype=Object.create(qE.prototype);pF.prototype.constructor=pF;pF.prototype.fB=pF;pF.gB={};b.btStaticPlaneShape=pF;\npF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);En(c,a)};pF.prototype.getLocalScaling=function(){return k(Fn(this.eB),n)};pF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Gn(d,a,c)};pF.prototype.__destroy__=function(){Hn(this.eB)};\nfunction qF(a,c,d){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);this.eB=void 0===d?In(a,c):Jn(a,c,d);h(qF)[this.eB]=this}qF.prototype=Object.create(CE.prototype);qF.prototype.constructor=qF;qF.prototype.fB=qF;qF.gB={};b.btBvhTriangleMeshShape=qF;qF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Kn(c,a)};qF.prototype.getLocalScaling=function(){return k(Ln(this.eB),n)};\nqF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Mn(d,a,c)};qF.prototype.__destroy__=function(){Nn(this.eB)};\nfunction rF(a,c,d,e,f,m,y,W,E){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);m&&\"object\"===typeof m&&(m=m.eB);y&&\"object\"===typeof y&&(y=y.eB);W&&\"object\"===typeof W&&(W=W.eB);E&&\"object\"===typeof E&&(E=E.eB);this.eB=On(a,c,d,e,f,m,y,W,E);h(rF)[this.eB]=this}rF.prototype=Object.create(qE.prototype);rF.prototype.constructor=rF;rF.prototype.fB=rF;rF.gB={};\nb.btHeightfieldTerrainShape=rF;rF.prototype.setMargin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pn(c,a)};rF.prototype.getMargin=function(){return Qn(this.eB)};rF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Rn(c,a)};rF.prototype.getLocalScaling=function(){return k(Sn(this.eB),n)};rF.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Tn(d,a,c)};\nrF.prototype.__destroy__=function(){Un(this.eB)};function sF(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=Vn(a,c,d,e);h(sF)[this.eB]=this}sF.prototype=Object.create(g.prototype);sF.prototype.constructor=sF;sF.prototype.fB=sF;sF.gB={};b.btAABB=sF;sF.prototype.invalidate=function(){Wn(this.eB)};sF.prototype.increment_margin=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xn(c,a)};\nsF.prototype.copy_with_margin=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Yn(d,a,c)};sF.prototype.__destroy__=function(){Zn(this.eB)};function tF(){this.eB=$n();h(tF)[this.eB]=this}tF.prototype=Object.create(g.prototype);tF.prototype.constructor=tF;tF.prototype.fB=tF;tF.gB={};b.btPrimitiveTriangle=tF;tF.prototype.__destroy__=function(){ao(this.eB)};\nfunction uF(a,c,d){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);this.eB=bo(a,c,d);h(uF)[this.eB]=this}uF.prototype=Object.create(g.prototype);uF.prototype.constructor=uF;uF.prototype.fB=uF;uF.gB={};b.btTriangleShapeEx=uF;uF.prototype.getAabb=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);co(e,a,c,d)};\nuF.prototype.applyTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);eo(c,a)};uF.prototype.buildTriPlane=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);fo(c,a)};uF.prototype.__destroy__=function(){go(this.eB)};function vF(){this.eB=ho();h(vF)[this.eB]=this}vF.prototype=Object.create(g.prototype);vF.prototype.constructor=vF;vF.prototype.fB=vF;vF.gB={};b.btTetrahedronShapeEx=vF;\nvF.prototype.setVertices=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);io(f,a,c,d,e)};vF.prototype.__destroy__=function(){jo(this.eB)};function wF(){throw\"cannot construct a CompoundPrimitiveManager, no constructor in IDL\";}wF.prototype=Object.create(DE.prototype);wF.prototype.constructor=wF;wF.prototype.fB=wF;wF.gB={};b.CompoundPrimitiveManager=wF;\nwF.prototype.get_primitive_count=function(){return ko(this.eB)};wF.prototype.get_primitive_box=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);lo(d,a,c)};wF.prototype.get_primitive_triangle=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);mo(d,a,c)};wF.prototype.is_trimesh=function(){return!!no(this.eB)};wF.prototype.get_m_compoundShape=wF.prototype.XC=function(){return k(oo(this.eB),J)};\nwF.prototype.set_m_compoundShape=wF.prototype.QF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);po(c,a)};Object.defineProperty(wF.prototype,\"m_compoundShape\",{get:wF.prototype.XC,set:wF.prototype.QF});wF.prototype.__destroy__=function(){qo(this.eB)};function J(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=void 0===a?ro():so(a);h(J)[this.eB]=this}J.prototype=Object.create(EE.prototype);J.prototype.constructor=J;J.prototype.fB=J;J.gB={};b.btGImpactCompoundShape=J;\nJ.prototype.childrenHasTransform=function(){return!!to(this.eB)};J.prototype.getPrimitiveManager=function(){return k(uo(this.eB),DE)};J.prototype.getCompoundPrimitiveManager=function(){return k(vo(this.eB),wF)};J.prototype.getNumChildShapes=function(){return wo(this.eB)};J.prototype.addChildShape=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);xo(d,a,c)};\nJ.prototype.getChildShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(yo(c,a),l)};J.prototype.getChildAabb=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);zo(f,a,c,d,e)};J.prototype.getChildTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Ao(c,a),t)};\nJ.prototype.setChildTransform=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Bo(d,a,c)};J.prototype.calculateLocalInertia=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Co(d,a,c)};J.prototype.getName=function(){return Ma(Do(this.eB))};J.prototype.getGImpactShapeType=function(){return Eo(this.eB)};J.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Fo(c,a)};\nJ.prototype.getLocalScaling=function(){return k(Go(this.eB),n)};J.prototype.updateBound=function(){Ho(this.eB)};J.prototype.postUpdate=function(){Io(this.eB)};J.prototype.getShapeType=function(){return Jo(this.eB)};J.prototype.needsRetrieveTriangles=function(){return!!Ko(this.eB)};J.prototype.needsRetrieveTetrahedrons=function(){return!!Lo(this.eB)};J.prototype.getBulletTriangle=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Mo(d,a,c)};\nJ.prototype.getBulletTetrahedron=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);No(d,a,c)};J.prototype.__destroy__=function(){Oo(this.eB)};function K(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=void 0===a?Po():Qo(a);h(K)[this.eB]=this}K.prototype=Object.create(DE.prototype);K.prototype.constructor=K;K.prototype.fB=K;K.gB={};b.TrimeshPrimitiveManager=K;K.prototype.lock=K.prototype.lock=function(){Ro(this.eB)};K.prototype.unlock=K.prototype.unlock=function(){So(this.eB)};\nK.prototype.is_trimesh=function(){return!!To(this.eB)};K.prototype.get_vertex_count=function(){return Uo(this.eB)};K.prototype.get_indices=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);Vo(f,a,c,d,e)};K.prototype.get_vertex=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Wo(d,a,c)};\nK.prototype.get_bullet_triangle=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Xo(d,a,c)};K.prototype.get_m_margin=K.prototype.ND=function(){return Yo(this.eB)};K.prototype.set_m_margin=K.prototype.GG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zo(c,a)};Object.defineProperty(K.prototype,\"m_margin\",{get:K.prototype.ND,set:K.prototype.GG});K.prototype.get_m_meshInterface=K.prototype.QD=function(){return k($o(this.eB),BE)};\nK.prototype.set_m_meshInterface=K.prototype.JG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ap(c,a)};Object.defineProperty(K.prototype,\"m_meshInterface\",{get:K.prototype.QD,set:K.prototype.JG});K.prototype.get_m_part=K.prototype.XD=function(){return bp(this.eB)};K.prototype.set_m_part=K.prototype.QG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cp(c,a)};Object.defineProperty(K.prototype,\"m_part\",{get:K.prototype.XD,set:K.prototype.QG});\nK.prototype.get_m_lock_count=K.prototype.LD=function(){return dp(this.eB)};K.prototype.set_m_lock_count=K.prototype.EG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ep(c,a)};Object.defineProperty(K.prototype,\"m_lock_count\",{get:K.prototype.LD,set:K.prototype.EG});K.prototype.get_numverts=K.prototype.NE=function(){return fp(this.eB)};K.prototype.set_numverts=K.prototype.HH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gp(c,a)};\nObject.defineProperty(K.prototype,\"numverts\",{get:K.prototype.NE,set:K.prototype.HH});K.prototype.get_type=K.prototype.RE=function(){return hp(this.eB)};K.prototype.set_type=K.prototype.LH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ip(c,a)};Object.defineProperty(K.prototype,\"type\",{get:K.prototype.RE,set:K.prototype.LH});K.prototype.get_stride=K.prototype.PE=function(){return jp(this.eB)};\nK.prototype.set_stride=K.prototype.JH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);kp(c,a)};Object.defineProperty(K.prototype,\"stride\",{get:K.prototype.PE,set:K.prototype.JH});K.prototype.get_indexstride=K.prototype.iC=function(){return lp(this.eB)};K.prototype.set_indexstride=K.prototype.bF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);mp(c,a)};Object.defineProperty(K.prototype,\"indexstride\",{get:K.prototype.iC,set:K.prototype.bF});\nK.prototype.get_numfaces=K.prototype.ME=function(){return np(this.eB)};K.prototype.set_numfaces=K.prototype.GH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);op(c,a)};Object.defineProperty(K.prototype,\"numfaces\",{get:K.prototype.ME,set:K.prototype.GH});K.prototype.get_indicestype=K.prototype.jC=function(){return pp(this.eB)};K.prototype.set_indicestype=K.prototype.cF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);qp(c,a)};\nObject.defineProperty(K.prototype,\"indicestype\",{get:K.prototype.jC,set:K.prototype.cF});K.prototype.__destroy__=function(){rp(this.eB)};function xF(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=sp(a,c);h(xF)[this.eB]=this}xF.prototype=Object.create(EE.prototype);xF.prototype.constructor=xF;xF.prototype.fB=xF;xF.gB={};b.btGImpactMeshShapePart=xF;xF.prototype.getTrimeshPrimitiveManager=function(){return k(tp(this.eB),K)};xF.prototype.getVertexCount=function(){return up(this.eB)};\nxF.prototype.getVertex=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);vp(d,a,c)};xF.prototype.getPart=function(){return wp(this.eB)};xF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xp(c,a)};xF.prototype.getLocalScaling=function(){return k(yp(this.eB),n)};xF.prototype.updateBound=function(){zp(this.eB)};xF.prototype.postUpdate=function(){Ap(this.eB)};xF.prototype.getShapeType=function(){return Bp(this.eB)};\nxF.prototype.needsRetrieveTriangles=function(){return!!Cp(this.eB)};xF.prototype.needsRetrieveTetrahedrons=function(){return!!Dp(this.eB)};xF.prototype.getBulletTriangle=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ep(d,a,c)};xF.prototype.getBulletTetrahedron=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Fp(d,a,c)};xF.prototype.__destroy__=function(){Gp(this.eB)};\nfunction yF(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=Hp(a);h(yF)[this.eB]=this}yF.prototype=Object.create(EE.prototype);yF.prototype.constructor=yF;yF.prototype.fB=yF;yF.gB={};b.btGImpactMeshShape=yF;yF.prototype.getMeshInterface=function(){return k(Ip(this.eB),BE)};yF.prototype.getMeshPartCount=function(){return Jp(this.eB)};yF.prototype.getMeshPart=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Kp(c,a),xF)};yF.prototype.calculateSerializeBufferSize=function(){return Lp(this.eB)};\nyF.prototype.setLocalScaling=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Mp(c,a)};yF.prototype.getLocalScaling=function(){return k(Np(this.eB),n)};yF.prototype.updateBound=function(){Op(this.eB)};yF.prototype.postUpdate=function(){Pp(this.eB)};yF.prototype.getShapeType=function(){return Qp(this.eB)};yF.prototype.needsRetrieveTriangles=function(){return!!Rp(this.eB)};yF.prototype.needsRetrieveTetrahedrons=function(){return!!Sp(this.eB)};\nyF.prototype.getBulletTriangle=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Tp(d,a,c)};yF.prototype.getBulletTetrahedron=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Up(d,a,c)};yF.prototype.__destroy__=function(){Vp(this.eB)};\nfunction zF(a,c){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);this.eB=void 0===a?Wp():void 0===c?_emscripten_bind_btCollisionAlgorithmConstructionInfo_btCollisionAlgorithmConstructionInfo_1(a):Xp(a,c);h(zF)[this.eB]=this}zF.prototype=Object.create(g.prototype);zF.prototype.constructor=zF;zF.prototype.fB=zF;zF.gB={};b.btCollisionAlgorithmConstructionInfo=zF;zF.prototype.get_m_dispatcher1=zF.prototype.gD=function(){return k(Yp(this.eB),kE)};\nzF.prototype.set_m_dispatcher1=zF.prototype.$F=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zp(c,a)};Object.defineProperty(zF.prototype,\"m_dispatcher1\",{get:zF.prototype.gD,set:zF.prototype.$F});zF.prototype.get_m_manifold=zF.prototype.MD=function(){return k($p(this.eB),HE)};zF.prototype.set_m_manifold=zF.prototype.FG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);aq(c,a)};Object.defineProperty(zF.prototype,\"m_manifold\",{get:zF.prototype.MD,set:zF.prototype.FG});\nzF.prototype.__destroy__=function(){bq(this.eB)};function AF(a,c,d){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);this.eB=cq(a,c,d);h(AF)[this.eB]=this}AF.prototype=Object.create(FE.prototype);AF.prototype.constructor=AF;AF.prototype.fB=AF;AF.gB={};b.btGImpactCollisionAlgorithm=AF;AF.prototype.registerAlgorithm=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dq(c,a)};AF.prototype.__destroy__=function(){eq(this.eB)};\nfunction BF(){this.eB=fq();h(BF)[this.eB]=this}BF.prototype=Object.create(g.prototype);BF.prototype.constructor=BF;BF.prototype.fB=BF;BF.gB={};b.btDefaultCollisionConstructionInfo=BF;BF.prototype.__destroy__=function(){gq(this.eB)};function HE(){this.eB=hq();h(HE)[this.eB]=this}HE.prototype=Object.create(g.prototype);HE.prototype.constructor=HE;HE.prototype.fB=HE;HE.gB={};b.btPersistentManifold=HE;HE.prototype.getBody0=function(){return k(iq(this.eB),r)};\nHE.prototype.getBody1=function(){return k(jq(this.eB),r)};HE.prototype.getNumContacts=function(){return kq(this.eB)};HE.prototype.getContactPoint=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(lq(c,a),F)};HE.prototype.__destroy__=function(){mq(this.eB)};function CF(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=nq(a);h(CF)[this.eB]=this}CF.prototype=Object.create(kE.prototype);CF.prototype.constructor=CF;CF.prototype.fB=CF;CF.gB={};b.btCollisionDispatcher=CF;\nCF.prototype.getNumManifolds=function(){return oq(this.eB)};CF.prototype.getManifoldByIndexInternal=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(pq(c,a),HE)};CF.prototype.__destroy__=function(){qq(this.eB)};function DF(){throw\"cannot construct a btOverlappingPairCallback, no constructor in IDL\";}DF.prototype=Object.create(g.prototype);DF.prototype.constructor=DF;DF.prototype.fB=DF;DF.gB={};b.btOverlappingPairCallback=DF;DF.prototype.__destroy__=function(){rq(this.eB)};\nfunction lE(){throw\"cannot construct a btOverlappingPairCache, no constructor in IDL\";}lE.prototype=Object.create(g.prototype);lE.prototype.constructor=lE;lE.prototype.fB=lE;lE.gB={};b.btOverlappingPairCache=lE;lE.prototype.setInternalGhostPairCallback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);sq(c,a)};lE.prototype.getNumOverlappingPairs=function(){return tq(this.eB)};lE.prototype.__destroy__=function(){uq(this.eB)};\nfunction EF(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);this.eB=void 0===d?vq(a,c):void 0===e?wq(a,c,d):void 0===f?xq(a,c,d,e):yq(a,c,d,e,f);h(EF)[this.eB]=this}EF.prototype=Object.create(g.prototype);EF.prototype.constructor=EF;EF.prototype.fB=EF;EF.gB={};b.btAxisSweep3=EF;EF.prototype.__destroy__=function(){zq(this.eB)};\nfunction mE(){throw\"cannot construct a btBroadphaseInterface, no constructor in IDL\";}mE.prototype=Object.create(g.prototype);mE.prototype.constructor=mE;mE.prototype.fB=mE;mE.gB={};b.btBroadphaseInterface=mE;mE.prototype.getOverlappingPairCache=function(){return k(Aq(this.eB),lE)};mE.prototype.__destroy__=function(){Bq(this.eB)};function FF(){throw\"cannot construct a btCollisionConfiguration, no constructor in IDL\";}FF.prototype=Object.create(g.prototype);FF.prototype.constructor=FF;\nFF.prototype.fB=FF;FF.gB={};b.btCollisionConfiguration=FF;FF.prototype.__destroy__=function(){Cq(this.eB)};function GF(){this.eB=Dq();h(GF)[this.eB]=this}GF.prototype=Object.create(g.prototype);GF.prototype.constructor=GF;GF.prototype.fB=GF;GF.gB={};b.btDbvtBroadphase=GF;GF.prototype.__destroy__=function(){Eq(this.eB)};function pE(){throw\"cannot construct a btBroadphaseProxy, no constructor in IDL\";}pE.prototype=Object.create(g.prototype);pE.prototype.constructor=pE;pE.prototype.fB=pE;pE.gB={};\nb.btBroadphaseProxy=pE;pE.prototype.get_m_collisionFilterGroup=pE.prototype.hB=function(){return Fq(this.eB)};pE.prototype.set_m_collisionFilterGroup=pE.prototype.jB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gq(c,a)};Object.defineProperty(pE.prototype,\"m_collisionFilterGroup\",{get:pE.prototype.hB,set:pE.prototype.jB});pE.prototype.get_m_collisionFilterMask=pE.prototype.iB=function(){return Hq(this.eB)};\npE.prototype.set_m_collisionFilterMask=pE.prototype.kB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Iq(c,a)};Object.defineProperty(pE.prototype,\"m_collisionFilterMask\",{get:pE.prototype.iB,set:pE.prototype.kB});pE.prototype.__destroy__=function(){Jq(this.eB)};function L(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=void 0===e?Kq(a,c,d):Lq(a,c,d,e);h(L)[this.eB]=this}L.prototype=Object.create(g.prototype);\nL.prototype.constructor=L;L.prototype.fB=L;L.gB={};b.btRigidBodyConstructionInfo=L;L.prototype.get_m_linearDamping=L.prototype.FD=function(){return Mq(this.eB)};L.prototype.set_m_linearDamping=L.prototype.yG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Nq(c,a)};Object.defineProperty(L.prototype,\"m_linearDamping\",{get:L.prototype.FD,set:L.prototype.yG});L.prototype.get_m_angularDamping=L.prototype.JC=function(){return Oq(this.eB)};\nL.prototype.set_m_angularDamping=L.prototype.CF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pq(c,a)};Object.defineProperty(L.prototype,\"m_angularDamping\",{get:L.prototype.JC,set:L.prototype.CF});L.prototype.get_m_friction=L.prototype.mD=function(){return Qq(this.eB)};L.prototype.set_m_friction=L.prototype.fG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Rq(c,a)};Object.defineProperty(L.prototype,\"m_friction\",{get:L.prototype.mD,set:L.prototype.fG});\nL.prototype.get_m_rollingFriction=L.prototype.fE=function(){return Sq(this.eB)};L.prototype.set_m_rollingFriction=L.prototype.$G=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Tq(c,a)};Object.defineProperty(L.prototype,\"m_rollingFriction\",{get:L.prototype.fE,set:L.prototype.$G});L.prototype.get_m_restitution=L.prototype.dE=function(){return Uq(this.eB)};L.prototype.set_m_restitution=L.prototype.YG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Vq(c,a)};\nObject.defineProperty(L.prototype,\"m_restitution\",{get:L.prototype.dE,set:L.prototype.YG});L.prototype.get_m_linearSleepingThreshold=L.prototype.GD=function(){return Wq(this.eB)};L.prototype.set_m_linearSleepingThreshold=L.prototype.zG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xq(c,a)};Object.defineProperty(L.prototype,\"m_linearSleepingThreshold\",{get:L.prototype.GD,set:L.prototype.zG});L.prototype.get_m_angularSleepingThreshold=L.prototype.KC=function(){return Yq(this.eB)};\nL.prototype.set_m_angularSleepingThreshold=L.prototype.DF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zq(c,a)};Object.defineProperty(L.prototype,\"m_angularSleepingThreshold\",{get:L.prototype.KC,set:L.prototype.DF});L.prototype.get_m_additionalDamping=L.prototype.EC=function(){return!!$q(this.eB)};L.prototype.set_m_additionalDamping=L.prototype.xF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ar(c,a)};\nObject.defineProperty(L.prototype,\"m_additionalDamping\",{get:L.prototype.EC,set:L.prototype.xF});L.prototype.get_m_additionalDampingFactor=L.prototype.FC=function(){return br(this.eB)};L.prototype.set_m_additionalDampingFactor=L.prototype.yF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cr(c,a)};Object.defineProperty(L.prototype,\"m_additionalDampingFactor\",{get:L.prototype.FC,set:L.prototype.yF});L.prototype.get_m_additionalLinearDampingThresholdSqr=L.prototype.GC=function(){return dr(this.eB)};\nL.prototype.set_m_additionalLinearDampingThresholdSqr=L.prototype.zF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);er(c,a)};Object.defineProperty(L.prototype,\"m_additionalLinearDampingThresholdSqr\",{get:L.prototype.GC,set:L.prototype.zF});L.prototype.get_m_additionalAngularDampingThresholdSqr=L.prototype.DC=function(){return fr(this.eB)};L.prototype.set_m_additionalAngularDampingThresholdSqr=L.prototype.wF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gr(c,a)};\nObject.defineProperty(L.prototype,\"m_additionalAngularDampingThresholdSqr\",{get:L.prototype.DC,set:L.prototype.wF});L.prototype.get_m_additionalAngularDampingFactor=L.prototype.CC=function(){return hr(this.eB)};L.prototype.set_m_additionalAngularDampingFactor=L.prototype.vF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ir(c,a)};Object.defineProperty(L.prototype,\"m_additionalAngularDampingFactor\",{get:L.prototype.CC,set:L.prototype.vF});L.prototype.__destroy__=function(){jr(this.eB)};\nfunction M(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=kr(a);h(M)[this.eB]=this}M.prototype=Object.create(r.prototype);M.prototype.constructor=M;M.prototype.fB=M;M.gB={};b.btRigidBody=M;M.prototype.getCenterOfMassTransform=function(){return k(lr(this.eB),t)};M.prototype.setCenterOfMassTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);mr(c,a)};M.prototype.setSleepingThresholds=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);nr(d,a,c)};\nM.prototype.getLinearDamping=function(){return or(this.eB)};M.prototype.getAngularDamping=function(){return pr(this.eB)};M.prototype.setDamping=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);qr(d,a,c)};M.prototype.setMassProps=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);rr(d,a,c)};M.prototype.getLinearFactor=function(){return k(sr(this.eB),n)};\nM.prototype.setLinearFactor=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);tr(c,a)};M.prototype.applyTorque=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ur(c,a)};M.prototype.applyLocalTorque=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);vr(c,a)};M.prototype.applyForce=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);wr(d,a,c)};\nM.prototype.applyCentralForce=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xr(c,a)};M.prototype.applyCentralLocalForce=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);yr(c,a)};M.prototype.applyTorqueImpulse=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zr(c,a)};M.prototype.applyImpulse=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ar(d,a,c)};\nM.prototype.applyCentralImpulse=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Br(c,a)};M.prototype.updateInertiaTensor=function(){Cr(this.eB)};M.prototype.getLinearVelocity=function(){return k(Dr(this.eB),n)};M.prototype.getAngularVelocity=function(){return k(Er(this.eB),n)};M.prototype.setLinearVelocity=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Fr(c,a)};M.prototype.setAngularVelocity=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gr(c,a)};\nM.prototype.getMotionState=function(){return k(Hr(this.eB),vE)};M.prototype.setMotionState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ir(c,a)};M.prototype.getAngularFactor=function(){return k(Jr(this.eB),n)};M.prototype.setAngularFactor=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Kr(c,a)};M.prototype.upcast=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Lr(c,a),M)};\nM.prototype.getAabb=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Mr(d,a,c)};M.prototype.applyGravity=function(){Nr(this.eB)};M.prototype.getGravity=function(){return k(Or(this.eB),n)};M.prototype.setGravity=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pr(c,a)};M.prototype.getBroadphaseProxy=function(){return k(Qr(this.eB),pE)};M.prototype.clearForces=function(){Rr(this.eB)};\nM.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Sr(d,a,c)};M.prototype.getCollisionShape=function(){return k(Tr(this.eB),l)};M.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ur(c,a)};M.prototype.setActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Vr(c,a)};\nM.prototype.forceActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Wr(c,a)};M.prototype.activate=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);void 0===a?Xr(c):Yr(c,a)};M.prototype.isActive=function(){return!!Zr(this.eB)};M.prototype.isKinematicObject=function(){return!!$r(this.eB)};M.prototype.isStaticObject=function(){return!!as(this.eB)};M.prototype.isStaticOrKinematicObject=function(){return!!bs(this.eB)};M.prototype.getRestitution=function(){return cs(this.eB)};\nM.prototype.getFriction=function(){return ds(this.eB)};M.prototype.getRollingFriction=function(){return es(this.eB)};M.prototype.setRestitution=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gs(c,a)};M.prototype.setFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hs(c,a)};M.prototype.setRollingFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);is(c,a)};M.prototype.getWorldTransform=function(){return k(js(this.eB),t)};M.prototype.getCollisionFlags=function(){return ks(this.eB)};\nM.prototype.setCollisionFlags=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ls(c,a)};M.prototype.setWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ms(c,a)};M.prototype.setCollisionShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ns(c,a)};M.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ps(c,a)};M.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);qs(c,a)};\nM.prototype.getUserIndex=function(){return rs(this.eB)};M.prototype.setUserIndex=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ss(c,a)};M.prototype.getUserPointer=function(){return k(ts(this.eB),oE)};M.prototype.setUserPointer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);us(c,a)};M.prototype.getBroadphaseHandle=function(){return k(vs(this.eB),pE)};M.prototype.__destroy__=function(){xs(this.eB)};function HF(){this.eB=ys();h(HF)[this.eB]=this}HF.prototype=Object.create(g.prototype);\nHF.prototype.constructor=HF;HF.prototype.fB=HF;HF.gB={};b.btConstraintSetting=HF;HF.prototype.get_m_tau=HF.prototype.uE=function(){return zs(this.eB)};HF.prototype.set_m_tau=HF.prototype.oH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);As(c,a)};Object.defineProperty(HF.prototype,\"m_tau\",{get:HF.prototype.uE,set:HF.prototype.oH});HF.prototype.get_m_damping=HF.prototype.cD=function(){return Bs(this.eB)};\nHF.prototype.set_m_damping=HF.prototype.WF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Cs(c,a)};Object.defineProperty(HF.prototype,\"m_damping\",{get:HF.prototype.cD,set:HF.prototype.WF});HF.prototype.get_m_impulseClamp=HF.prototype.yD=function(){return Ds(this.eB)};HF.prototype.set_m_impulseClamp=HF.prototype.rG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Es(c,a)};Object.defineProperty(HF.prototype,\"m_impulseClamp\",{get:HF.prototype.yD,set:HF.prototype.rG});\nHF.prototype.__destroy__=function(){Fs(this.eB)};function IF(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=void 0===d?Gs(a,c):void 0===e?_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(a,c,d):Hs(a,c,d,e);h(IF)[this.eB]=this}IF.prototype=Object.create(sE.prototype);IF.prototype.constructor=IF;IF.prototype.fB=IF;IF.gB={};b.btPoint2PointConstraint=IF;\nIF.prototype.setPivotA=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Is(c,a)};IF.prototype.setPivotB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Js(c,a)};IF.prototype.getPivotInA=function(){return k(Ks(this.eB),n)};IF.prototype.getPivotInB=function(){return k(Ls(this.eB),n)};IF.prototype.enableFeedback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ms(c,a)};IF.prototype.getBreakingImpulseThreshold=function(){return Ns(this.eB)};\nIF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Os(c,a)};IF.prototype.getParam=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return Ps(d,a,c)};IF.prototype.setParam=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Qs(e,a,c,d)};IF.prototype.get_m_setting=IF.prototype.hE=function(){return k(Rs(this.eB),HF)};\nIF.prototype.set_m_setting=IF.prototype.bH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ss(c,a)};Object.defineProperty(IF.prototype,\"m_setting\",{get:IF.prototype.hE,set:IF.prototype.bH});IF.prototype.__destroy__=function(){Ts(this.eB)};\nfunction JF(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);this.eB=void 0===e?Us(a,c,d):void 0===f?_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(a,c,d,e):Vs(a,c,d,e,f);h(JF)[this.eB]=this}JF.prototype=Object.create(IE.prototype);JF.prototype.constructor=JF;JF.prototype.fB=JF;JF.gB={};b.btGeneric6DofSpringConstraint=JF;\nJF.prototype.enableSpring=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ws(d,a,c)};JF.prototype.setStiffness=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Xs(d,a,c)};JF.prototype.setDamping=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ys(d,a,c)};\nJF.prototype.setEquilibriumPoint=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);void 0===a?Zs(d):void 0===c?$s(d,a):at(d,a,c)};JF.prototype.setLinearLowerLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bt(c,a)};JF.prototype.setLinearUpperLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ct(c,a)};JF.prototype.setAngularLowerLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dt(c,a)};\nJF.prototype.setAngularUpperLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);et(c,a)};JF.prototype.getFrameOffsetA=function(){return k(ft(this.eB),t)};JF.prototype.enableFeedback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gt(c,a)};JF.prototype.getBreakingImpulseThreshold=function(){return ht(this.eB)};JF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);it(c,a)};\nJF.prototype.getParam=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return jt(d,a,c)};JF.prototype.setParam=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);kt(e,a,c,d)};JF.prototype.__destroy__=function(){lt(this.eB)};function KF(){this.eB=mt();h(KF)[this.eB]=this}KF.prototype=Object.create(g.prototype);KF.prototype.constructor=KF;KF.prototype.fB=KF;KF.gB={};\nb.btSequentialImpulseConstraintSolver=KF;KF.prototype.__destroy__=function(){nt(this.eB)};function LF(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=void 0===d?ot(a,c):void 0===e?_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(a,c,d):pt(a,c,d,e);h(LF)[this.eB]=this}LF.prototype=Object.create(sE.prototype);LF.prototype.constructor=LF;LF.prototype.fB=LF;LF.gB={};\nb.btConeTwistConstraint=LF;LF.prototype.setLimit=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);qt(d,a,c)};LF.prototype.setAngularOnly=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);rt(c,a)};LF.prototype.setDamping=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);st(c,a)};LF.prototype.enableMotor=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);tt(c,a)};\nLF.prototype.setMaxMotorImpulse=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ut(c,a)};LF.prototype.setMaxMotorImpulseNormalized=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);vt(c,a)};LF.prototype.setMotorTarget=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);wt(c,a)};LF.prototype.setMotorTargetInConstraintSpace=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xt(c,a)};\nLF.prototype.enableFeedback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);yt(c,a)};LF.prototype.getBreakingImpulseThreshold=function(){return zt(this.eB)};LF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);At(c,a)};LF.prototype.getParam=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return Bt(d,a,c)};\nLF.prototype.setParam=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Ct(e,a,c,d)};LF.prototype.__destroy__=function(){Dt(this.eB)};\nfunction MF(a,c,d,e,f,m,y){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);m&&\"object\"===typeof m&&(m=m.eB);y&&\"object\"===typeof y&&(y=y.eB);this.eB=void 0===d?Et(a,c):void 0===e?Ft(a,c,d):void 0===f?Gt(a,c,d,e):void 0===m?Ht(a,c,d,e,f):void 0===y?It(a,c,d,e,f,m):Jt(a,c,d,e,f,m,y);h(MF)[this.eB]=this}MF.prototype=Object.create(sE.prototype);MF.prototype.constructor=MF;\nMF.prototype.fB=MF;MF.gB={};b.btHingeConstraint=MF;MF.prototype.getHingeAngle=function(){return Kt(this.eB)};MF.prototype.setLimit=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);void 0===f?Lt(m,a,c,d,e):Mt(m,a,c,d,e,f)};\nMF.prototype.enableAngularMotor=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Nt(e,a,c,d)};MF.prototype.setAngularOnly=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ot(c,a)};MF.prototype.enableMotor=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pt(c,a)};MF.prototype.setMaxMotorImpulse=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Qt(c,a)};\nMF.prototype.setMotorTarget=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Rt(d,a,c)};MF.prototype.enableFeedback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);St(c,a)};MF.prototype.getBreakingImpulseThreshold=function(){return Tt(this.eB)};MF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ut(c,a)};\nMF.prototype.getParam=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return Vt(d,a,c)};MF.prototype.setParam=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Wt(e,a,c,d)};MF.prototype.__destroy__=function(){Xt(this.eB)};\nfunction NF(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);this.eB=void 0===e?Yt(a,c,d):void 0===f?_emscripten_bind_btSliderConstraint_btSliderConstraint_4(a,c,d,e):Zt(a,c,d,e,f);h(NF)[this.eB]=this}NF.prototype=Object.create(sE.prototype);NF.prototype.constructor=NF;NF.prototype.fB=NF;NF.gB={};b.btSliderConstraint=NF;NF.prototype.getLinearPos=function(){return $t(this.eB)};\nNF.prototype.getAngularPos=function(){return au(this.eB)};NF.prototype.setLowerLinLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bu(c,a)};NF.prototype.setUpperLinLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cu(c,a)};NF.prototype.setLowerAngLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);du(c,a)};NF.prototype.setUpperAngLimit=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);eu(c,a)};\nNF.prototype.setPoweredLinMotor=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);fu(c,a)};NF.prototype.setMaxLinMotorForce=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gu(c,a)};NF.prototype.setTargetLinMotorVelocity=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hu(c,a)};NF.prototype.enableFeedback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);iu(c,a)};NF.prototype.getBreakingImpulseThreshold=function(){return ju(this.eB)};\nNF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ku(c,a)};NF.prototype.getParam=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return lu(d,a,c)};NF.prototype.setParam=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);mu(e,a,c,d)};NF.prototype.__destroy__=function(){nu(this.eB)};\nfunction OF(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=ou(a,c,d,e);h(OF)[this.eB]=this}OF.prototype=Object.create(sE.prototype);OF.prototype.constructor=OF;OF.prototype.fB=OF;OF.gB={};b.btFixedConstraint=OF;OF.prototype.enableFeedback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pu(c,a)};OF.prototype.getBreakingImpulseThreshold=function(){return qu(this.eB)};\nOF.prototype.setBreakingImpulseThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ru(c,a)};OF.prototype.getParam=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return su(d,a,c)};OF.prototype.setParam=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);tu(e,a,c,d)};OF.prototype.__destroy__=function(){uu(this.eB)};\nfunction PF(){throw\"cannot construct a btConstraintSolver, no constructor in IDL\";}PF.prototype=Object.create(g.prototype);PF.prototype.constructor=PF;PF.prototype.fB=PF;PF.gB={};b.btConstraintSolver=PF;PF.prototype.__destroy__=function(){vu(this.eB)};function q(){throw\"cannot construct a btDispatcherInfo, no constructor in IDL\";}q.prototype=Object.create(g.prototype);q.prototype.constructor=q;q.prototype.fB=q;q.gB={};b.btDispatcherInfo=q;q.prototype.get_m_timeStep=q.prototype.wE=function(){return wu(this.eB)};\nq.prototype.set_m_timeStep=q.prototype.qH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xu(c,a)};Object.defineProperty(q.prototype,\"m_timeStep\",{get:q.prototype.wE,set:q.prototype.qH});q.prototype.get_m_stepCount=q.prototype.nE=function(){return yu(this.eB)};q.prototype.set_m_stepCount=q.prototype.hH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zu(c,a)};Object.defineProperty(q.prototype,\"m_stepCount\",{get:q.prototype.nE,set:q.prototype.hH});\nq.prototype.get_m_dispatchFunc=q.prototype.eD=function(){return Au(this.eB)};q.prototype.set_m_dispatchFunc=q.prototype.YF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Bu(c,a)};Object.defineProperty(q.prototype,\"m_dispatchFunc\",{get:q.prototype.eD,set:q.prototype.YF});q.prototype.get_m_timeOfImpact=q.prototype.vE=function(){return Cu(this.eB)};q.prototype.set_m_timeOfImpact=q.prototype.pH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Du(c,a)};\nObject.defineProperty(q.prototype,\"m_timeOfImpact\",{get:q.prototype.vE,set:q.prototype.pH});q.prototype.get_m_useContinuous=q.prototype.yE=function(){return!!Eu(this.eB)};q.prototype.set_m_useContinuous=q.prototype.sH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Fu(c,a)};Object.defineProperty(q.prototype,\"m_useContinuous\",{get:q.prototype.yE,set:q.prototype.sH});q.prototype.get_m_enableSatConvex=q.prototype.jD=function(){return!!Gu(this.eB)};\nq.prototype.set_m_enableSatConvex=q.prototype.cG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Hu(c,a)};Object.defineProperty(q.prototype,\"m_enableSatConvex\",{get:q.prototype.jD,set:q.prototype.cG});q.prototype.get_m_enableSPU=q.prototype.iD=function(){return!!Iu(this.eB)};q.prototype.set_m_enableSPU=q.prototype.bG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ju(c,a)};Object.defineProperty(q.prototype,\"m_enableSPU\",{get:q.prototype.iD,set:q.prototype.bG});\nq.prototype.get_m_useEpa=q.prototype.AE=function(){return!!Ku(this.eB)};q.prototype.set_m_useEpa=q.prototype.uH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Lu(c,a)};Object.defineProperty(q.prototype,\"m_useEpa\",{get:q.prototype.AE,set:q.prototype.uH});q.prototype.get_m_allowedCcdPenetration=q.prototype.HC=function(){return Mu(this.eB)};q.prototype.set_m_allowedCcdPenetration=q.prototype.AF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Nu(c,a)};\nObject.defineProperty(q.prototype,\"m_allowedCcdPenetration\",{get:q.prototype.HC,set:q.prototype.AF});q.prototype.get_m_useConvexConservativeDistanceUtil=q.prototype.zE=function(){return!!Ou(this.eB)};q.prototype.set_m_useConvexConservativeDistanceUtil=q.prototype.tH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pu(c,a)};Object.defineProperty(q.prototype,\"m_useConvexConservativeDistanceUtil\",{get:q.prototype.zE,set:q.prototype.tH});\nq.prototype.get_m_convexConservativeDistanceThreshold=q.prototype.$C=function(){return Qu(this.eB)};q.prototype.set_m_convexConservativeDistanceThreshold=q.prototype.TF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ru(c,a)};Object.defineProperty(q.prototype,\"m_convexConservativeDistanceThreshold\",{get:q.prototype.$C,set:q.prototype.TF});q.prototype.__destroy__=function(){Su(this.eB)};function u(){throw\"cannot construct a btContactSolverInfo, no constructor in IDL\";}u.prototype=Object.create(g.prototype);\nu.prototype.constructor=u;u.prototype.fB=u;u.gB={};b.btContactSolverInfo=u;u.prototype.get_m_splitImpulse=u.prototype.kE=function(){return!!Tu(this.eB)};u.prototype.set_m_splitImpulse=u.prototype.eH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Uu(c,a)};Object.defineProperty(u.prototype,\"m_splitImpulse\",{get:u.prototype.kE,set:u.prototype.eH});u.prototype.get_m_splitImpulsePenetrationThreshold=u.prototype.lE=function(){return Vu(this.eB)};\nu.prototype.set_m_splitImpulsePenetrationThreshold=u.prototype.fH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Wu(c,a)};Object.defineProperty(u.prototype,\"m_splitImpulsePenetrationThreshold\",{get:u.prototype.lE,set:u.prototype.fH});u.prototype.get_m_numIterations=u.prototype.VD=function(){return Xu(this.eB)};u.prototype.set_m_numIterations=u.prototype.OG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Yu(c,a)};\nObject.defineProperty(u.prototype,\"m_numIterations\",{get:u.prototype.VD,set:u.prototype.OG});u.prototype.__destroy__=function(){Zu(this.eB)};function N(){this.eB=$u();h(N)[this.eB]=this}N.prototype=Object.create(g.prototype);N.prototype.constructor=N;N.prototype.fB=N;N.gB={};b.btVehicleTuning=N;N.prototype.get_m_suspensionStiffness=N.prototype.yB=function(){return av(this.eB)};N.prototype.set_m_suspensionStiffness=N.prototype.GB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bv(c,a)};\nObject.defineProperty(N.prototype,\"m_suspensionStiffness\",{get:N.prototype.yB,set:N.prototype.GB});N.prototype.get_m_suspensionCompression=N.prototype.oE=function(){return cv(this.eB)};N.prototype.set_m_suspensionCompression=N.prototype.iH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dv(c,a)};Object.defineProperty(N.prototype,\"m_suspensionCompression\",{get:N.prototype.oE,set:N.prototype.iH});N.prototype.get_m_suspensionDamping=N.prototype.pE=function(){return ev(this.eB)};\nN.prototype.set_m_suspensionDamping=N.prototype.jH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);fv(c,a)};Object.defineProperty(N.prototype,\"m_suspensionDamping\",{get:N.prototype.pE,set:N.prototype.jH});N.prototype.get_m_maxSuspensionTravelCm=N.prototype.xB=function(){return gv(this.eB)};N.prototype.set_m_maxSuspensionTravelCm=N.prototype.FB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hv(c,a)};\nObject.defineProperty(N.prototype,\"m_maxSuspensionTravelCm\",{get:N.prototype.xB,set:N.prototype.FB});N.prototype.get_m_frictionSlip=N.prototype.tB=function(){return iv(this.eB)};N.prototype.set_m_frictionSlip=N.prototype.BB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);jv(c,a)};Object.defineProperty(N.prototype,\"m_frictionSlip\",{get:N.prototype.tB,set:N.prototype.BB});N.prototype.get_m_maxSuspensionForce=N.prototype.wB=function(){return kv(this.eB)};\nN.prototype.set_m_maxSuspensionForce=N.prototype.EB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);lv(c,a)};Object.defineProperty(N.prototype,\"m_maxSuspensionForce\",{get:N.prototype.wB,set:N.prototype.EB});function QF(){throw\"cannot construct a btVehicleRaycasterResult, no constructor in IDL\";}QF.prototype=Object.create(g.prototype);QF.prototype.constructor=QF;QF.prototype.fB=QF;QF.gB={};b.btVehicleRaycasterResult=QF;\nQF.prototype.get_m_hitPointInWorld=QF.prototype.vD=function(){return k(mv(this.eB),n)};QF.prototype.set_m_hitPointInWorld=QF.prototype.oG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);nv(c,a)};Object.defineProperty(QF.prototype,\"m_hitPointInWorld\",{get:QF.prototype.vD,set:QF.prototype.oG});QF.prototype.get_m_hitNormalInWorld=QF.prototype.tD=function(){return k(ov(this.eB),n)};\nQF.prototype.set_m_hitNormalInWorld=QF.prototype.mG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pv(c,a)};Object.defineProperty(QF.prototype,\"m_hitNormalInWorld\",{get:QF.prototype.tD,set:QF.prototype.mG});QF.prototype.get_m_distFraction=QF.prototype.hD=function(){return qv(this.eB)};QF.prototype.set_m_distFraction=QF.prototype.aG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);rv(c,a)};Object.defineProperty(QF.prototype,\"m_distFraction\",{get:QF.prototype.hD,set:QF.prototype.aG});\nQF.prototype.__destroy__=function(){sv(this.eB)};function RF(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=tv(a);h(RF)[this.eB]=this}RF.prototype=Object.create(JE.prototype);RF.prototype.constructor=RF;RF.prototype.fB=RF;RF.gB={};b.btDefaultVehicleRaycaster=RF;RF.prototype.castRay=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);uv(e,a,c,d)};RF.prototype.__destroy__=function(){vv(this.eB)};\nfunction O(){throw\"cannot construct a RaycastInfo, no constructor in IDL\";}O.prototype=Object.create(g.prototype);O.prototype.constructor=O;O.prototype.fB=O;O.gB={};b.RaycastInfo=O;O.prototype.get_m_contactNormalWS=O.prototype.YC=function(){return k(wv(this.eB),n)};O.prototype.set_m_contactNormalWS=O.prototype.RF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xv(c,a)};Object.defineProperty(O.prototype,\"m_contactNormalWS\",{get:O.prototype.YC,set:O.prototype.RF});\nO.prototype.get_m_contactPointWS=O.prototype.ZC=function(){return k(yv(this.eB),n)};O.prototype.set_m_contactPointWS=O.prototype.SF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zv(c,a)};Object.defineProperty(O.prototype,\"m_contactPointWS\",{get:O.prototype.ZC,set:O.prototype.SF});O.prototype.get_m_suspensionLength=O.prototype.qE=function(){return Av(this.eB)};O.prototype.set_m_suspensionLength=O.prototype.kH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Bv(c,a)};\nObject.defineProperty(O.prototype,\"m_suspensionLength\",{get:O.prototype.qE,set:O.prototype.kH});O.prototype.get_m_hardPointWS=O.prototype.qD=function(){return k(Cv(this.eB),n)};O.prototype.set_m_hardPointWS=O.prototype.jG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Dv(c,a)};Object.defineProperty(O.prototype,\"m_hardPointWS\",{get:O.prototype.qD,set:O.prototype.jG});O.prototype.get_m_wheelDirectionWS=O.prototype.FE=function(){return k(Ev(this.eB),n)};\nO.prototype.set_m_wheelDirectionWS=O.prototype.zH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Fv(c,a)};Object.defineProperty(O.prototype,\"m_wheelDirectionWS\",{get:O.prototype.FE,set:O.prototype.zH});O.prototype.get_m_wheelAxleWS=O.prototype.EE=function(){return k(Gv(this.eB),n)};O.prototype.set_m_wheelAxleWS=O.prototype.yH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Hv(c,a)};Object.defineProperty(O.prototype,\"m_wheelAxleWS\",{get:O.prototype.EE,set:O.prototype.yH});\nO.prototype.get_m_isInContact=O.prototype.BD=function(){return!!Iv(this.eB)};O.prototype.set_m_isInContact=O.prototype.uG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Jv(c,a)};Object.defineProperty(O.prototype,\"m_isInContact\",{get:O.prototype.BD,set:O.prototype.uG});O.prototype.get_m_groundObject=O.prototype.pD=function(){return Kv(this.eB)};O.prototype.set_m_groundObject=O.prototype.iG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Lv(c,a)};\nObject.defineProperty(O.prototype,\"m_groundObject\",{get:O.prototype.pD,set:O.prototype.iG});O.prototype.__destroy__=function(){Mv(this.eB)};function P(){throw\"cannot construct a btWheelInfoConstructionInfo, no constructor in IDL\";}P.prototype=Object.create(g.prototype);P.prototype.constructor=P;P.prototype.fB=P;P.gB={};b.btWheelInfoConstructionInfo=P;P.prototype.get_m_chassisConnectionCS=P.prototype.TC=function(){return k(Nv(this.eB),n)};\nP.prototype.set_m_chassisConnectionCS=P.prototype.MF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ov(c,a)};Object.defineProperty(P.prototype,\"m_chassisConnectionCS\",{get:P.prototype.TC,set:P.prototype.MF});P.prototype.get_m_wheelDirectionCS=P.prototype.PB=function(){return k(Pv(this.eB),n)};P.prototype.set_m_wheelDirectionCS=P.prototype.ZB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Qv(c,a)};Object.defineProperty(P.prototype,\"m_wheelDirectionCS\",{get:P.prototype.PB,set:P.prototype.ZB});\nP.prototype.get_m_wheelAxleCS=P.prototype.OB=function(){return k(Rv(this.eB),n)};P.prototype.set_m_wheelAxleCS=P.prototype.YB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Sv(c,a)};Object.defineProperty(P.prototype,\"m_wheelAxleCS\",{get:P.prototype.OB,set:P.prototype.YB});P.prototype.get_m_suspensionRestLength=P.prototype.sE=function(){return Tv(this.eB)};P.prototype.set_m_suspensionRestLength=P.prototype.mH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Uv(c,a)};\nObject.defineProperty(P.prototype,\"m_suspensionRestLength\",{get:P.prototype.sE,set:P.prototype.mH});P.prototype.get_m_maxSuspensionTravelCm=P.prototype.xB=function(){return Vv(this.eB)};P.prototype.set_m_maxSuspensionTravelCm=P.prototype.FB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Wv(c,a)};Object.defineProperty(P.prototype,\"m_maxSuspensionTravelCm\",{get:P.prototype.xB,set:P.prototype.FB});P.prototype.get_m_wheelRadius=P.prototype.GE=function(){return Xv(this.eB)};\nP.prototype.set_m_wheelRadius=P.prototype.AH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Yv(c,a)};Object.defineProperty(P.prototype,\"m_wheelRadius\",{get:P.prototype.GE,set:P.prototype.AH});P.prototype.get_m_suspensionStiffness=P.prototype.yB=function(){return Zv(this.eB)};P.prototype.set_m_suspensionStiffness=P.prototype.GB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);$v(c,a)};Object.defineProperty(P.prototype,\"m_suspensionStiffness\",{get:P.prototype.yB,set:P.prototype.GB});\nP.prototype.get_m_wheelsDampingCompression=P.prototype.QB=function(){return aw(this.eB)};P.prototype.set_m_wheelsDampingCompression=P.prototype.$B=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);bw(c,a)};Object.defineProperty(P.prototype,\"m_wheelsDampingCompression\",{get:P.prototype.QB,set:P.prototype.$B});P.prototype.get_m_wheelsDampingRelaxation=P.prototype.RB=function(){return cw(this.eB)};\nP.prototype.set_m_wheelsDampingRelaxation=P.prototype.aC=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dw(c,a)};Object.defineProperty(P.prototype,\"m_wheelsDampingRelaxation\",{get:P.prototype.RB,set:P.prototype.aC});P.prototype.get_m_frictionSlip=P.prototype.tB=function(){return ew(this.eB)};P.prototype.set_m_frictionSlip=P.prototype.BB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);fw(c,a)};Object.defineProperty(P.prototype,\"m_frictionSlip\",{get:P.prototype.tB,set:P.prototype.BB});\nP.prototype.get_m_maxSuspensionForce=P.prototype.wB=function(){return gw(this.eB)};P.prototype.set_m_maxSuspensionForce=P.prototype.EB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hw(c,a)};Object.defineProperty(P.prototype,\"m_maxSuspensionForce\",{get:P.prototype.wB,set:P.prototype.EB});P.prototype.get_m_bIsFrontWheel=P.prototype.IB=function(){return!!iw(this.eB)};P.prototype.set_m_bIsFrontWheel=P.prototype.SB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);jw(c,a)};\nObject.defineProperty(P.prototype,\"m_bIsFrontWheel\",{get:P.prototype.IB,set:P.prototype.SB});P.prototype.__destroy__=function(){kw(this.eB)};function Q(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=lw(a);h(Q)[this.eB]=this}Q.prototype=Object.create(g.prototype);Q.prototype.constructor=Q;Q.prototype.fB=Q;Q.gB={};b.btWheelInfo=Q;Q.prototype.getSuspensionRestLength=function(){return mw(this.eB)};\nQ.prototype.updateWheel=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);nw(d,a,c)};Q.prototype.get_m_suspensionStiffness=Q.prototype.yB=function(){return ow(this.eB)};Q.prototype.set_m_suspensionStiffness=Q.prototype.GB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pw(c,a)};Object.defineProperty(Q.prototype,\"m_suspensionStiffness\",{get:Q.prototype.yB,set:Q.prototype.GB});Q.prototype.get_m_frictionSlip=Q.prototype.tB=function(){return qw(this.eB)};\nQ.prototype.set_m_frictionSlip=Q.prototype.BB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);rw(c,a)};Object.defineProperty(Q.prototype,\"m_frictionSlip\",{get:Q.prototype.tB,set:Q.prototype.BB});Q.prototype.get_m_engineForce=Q.prototype.kD=function(){return sw(this.eB)};Q.prototype.set_m_engineForce=Q.prototype.dG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);tw(c,a)};Object.defineProperty(Q.prototype,\"m_engineForce\",{get:Q.prototype.kD,set:Q.prototype.dG});\nQ.prototype.get_m_rollInfluence=Q.prototype.eE=function(){return uw(this.eB)};Q.prototype.set_m_rollInfluence=Q.prototype.ZG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);vw(c,a)};Object.defineProperty(Q.prototype,\"m_rollInfluence\",{get:Q.prototype.eE,set:Q.prototype.ZG});Q.prototype.get_m_suspensionRestLength1=Q.prototype.tE=function(){return ww(this.eB)};Q.prototype.set_m_suspensionRestLength1=Q.prototype.nH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xw(c,a)};\nObject.defineProperty(Q.prototype,\"m_suspensionRestLength1\",{get:Q.prototype.tE,set:Q.prototype.nH});Q.prototype.get_m_wheelsRadius=Q.prototype.HE=function(){return yw(this.eB)};Q.prototype.set_m_wheelsRadius=Q.prototype.BH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zw(c,a)};Object.defineProperty(Q.prototype,\"m_wheelsRadius\",{get:Q.prototype.HE,set:Q.prototype.BH});Q.prototype.get_m_wheelsDampingCompression=Q.prototype.QB=function(){return Aw(this.eB)};\nQ.prototype.set_m_wheelsDampingCompression=Q.prototype.$B=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Bw(c,a)};Object.defineProperty(Q.prototype,\"m_wheelsDampingCompression\",{get:Q.prototype.QB,set:Q.prototype.$B});Q.prototype.get_m_wheelsDampingRelaxation=Q.prototype.RB=function(){return Cw(this.eB)};Q.prototype.set_m_wheelsDampingRelaxation=Q.prototype.aC=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Dw(c,a)};\nObject.defineProperty(Q.prototype,\"m_wheelsDampingRelaxation\",{get:Q.prototype.RB,set:Q.prototype.aC});Q.prototype.get_m_steering=Q.prototype.mE=function(){return Ew(this.eB)};Q.prototype.set_m_steering=Q.prototype.gH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Fw(c,a)};Object.defineProperty(Q.prototype,\"m_steering\",{get:Q.prototype.mE,set:Q.prototype.gH});Q.prototype.get_m_maxSuspensionForce=Q.prototype.wB=function(){return Gw(this.eB)};\nQ.prototype.set_m_maxSuspensionForce=Q.prototype.EB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Hw(c,a)};Object.defineProperty(Q.prototype,\"m_maxSuspensionForce\",{get:Q.prototype.wB,set:Q.prototype.EB});Q.prototype.get_m_maxSuspensionTravelCm=Q.prototype.xB=function(){return Iw(this.eB)};Q.prototype.set_m_maxSuspensionTravelCm=Q.prototype.FB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Jw(c,a)};\nObject.defineProperty(Q.prototype,\"m_maxSuspensionTravelCm\",{get:Q.prototype.xB,set:Q.prototype.FB});Q.prototype.get_m_wheelsSuspensionForce=Q.prototype.IE=function(){return Kw(this.eB)};Q.prototype.set_m_wheelsSuspensionForce=Q.prototype.CH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Lw(c,a)};Object.defineProperty(Q.prototype,\"m_wheelsSuspensionForce\",{get:Q.prototype.IE,set:Q.prototype.CH});Q.prototype.get_m_bIsFrontWheel=Q.prototype.IB=function(){return!!Mw(this.eB)};\nQ.prototype.set_m_bIsFrontWheel=Q.prototype.SB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Nw(c,a)};Object.defineProperty(Q.prototype,\"m_bIsFrontWheel\",{get:Q.prototype.IB,set:Q.prototype.SB});Q.prototype.get_m_raycastInfo=Q.prototype.cE=function(){return k(Ow(this.eB),O)};Q.prototype.set_m_raycastInfo=Q.prototype.XG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pw(c,a)};Object.defineProperty(Q.prototype,\"m_raycastInfo\",{get:Q.prototype.cE,set:Q.prototype.XG});\nQ.prototype.get_m_chassisConnectionPointCS=Q.prototype.UC=function(){return k(Qw(this.eB),n)};Q.prototype.set_m_chassisConnectionPointCS=Q.prototype.NF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Rw(c,a)};Object.defineProperty(Q.prototype,\"m_chassisConnectionPointCS\",{get:Q.prototype.UC,set:Q.prototype.NF});Q.prototype.get_m_worldTransform=Q.prototype.JE=function(){return k(Sw(this.eB),t)};\nQ.prototype.set_m_worldTransform=Q.prototype.DH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Tw(c,a)};Object.defineProperty(Q.prototype,\"m_worldTransform\",{get:Q.prototype.JE,set:Q.prototype.DH});Q.prototype.get_m_wheelDirectionCS=Q.prototype.PB=function(){return k(Uw(this.eB),n)};Q.prototype.set_m_wheelDirectionCS=Q.prototype.ZB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Vw(c,a)};Object.defineProperty(Q.prototype,\"m_wheelDirectionCS\",{get:Q.prototype.PB,set:Q.prototype.ZB});\nQ.prototype.get_m_wheelAxleCS=Q.prototype.OB=function(){return k(Ww(this.eB),n)};Q.prototype.set_m_wheelAxleCS=Q.prototype.YB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xw(c,a)};Object.defineProperty(Q.prototype,\"m_wheelAxleCS\",{get:Q.prototype.OB,set:Q.prototype.YB});Q.prototype.get_m_rotation=Q.prototype.gE=function(){return Yw(this.eB)};Q.prototype.set_m_rotation=Q.prototype.aH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zw(c,a)};\nObject.defineProperty(Q.prototype,\"m_rotation\",{get:Q.prototype.gE,set:Q.prototype.aH});Q.prototype.get_m_deltaRotation=Q.prototype.dD=function(){return $w(this.eB)};Q.prototype.set_m_deltaRotation=Q.prototype.XF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ax(c,a)};Object.defineProperty(Q.prototype,\"m_deltaRotation\",{get:Q.prototype.dD,set:Q.prototype.XF});Q.prototype.get_m_brake=Q.prototype.NC=function(){return bx(this.eB)};\nQ.prototype.set_m_brake=Q.prototype.GF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cx(c,a)};Object.defineProperty(Q.prototype,\"m_brake\",{get:Q.prototype.NC,set:Q.prototype.GF});Q.prototype.get_m_clippedInvContactDotSuspension=Q.prototype.VC=function(){return dx(this.eB)};Q.prototype.set_m_clippedInvContactDotSuspension=Q.prototype.OF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ex(c,a)};\nObject.defineProperty(Q.prototype,\"m_clippedInvContactDotSuspension\",{get:Q.prototype.VC,set:Q.prototype.OF});Q.prototype.get_m_suspensionRelativeVelocity=Q.prototype.rE=function(){return fx(this.eB)};Q.prototype.set_m_suspensionRelativeVelocity=Q.prototype.lH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gx(c,a)};Object.defineProperty(Q.prototype,\"m_suspensionRelativeVelocity\",{get:Q.prototype.rE,set:Q.prototype.lH});Q.prototype.get_m_skidInfo=Q.prototype.jE=function(){return hx(this.eB)};\nQ.prototype.set_m_skidInfo=Q.prototype.dH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ix(c,a)};Object.defineProperty(Q.prototype,\"m_skidInfo\",{get:Q.prototype.jE,set:Q.prototype.dH});Q.prototype.__destroy__=function(){jx(this.eB)};function SF(a,c,d,e){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);this.eB=void 0===e?kx(a,c,d):lx(a,c,d,e);h(SF)[this.eB]=this}SF.prototype=Object.create(KE.prototype);\nSF.prototype.constructor=SF;SF.prototype.fB=SF;SF.gB={};b.btKinematicCharacterController=SF;SF.prototype.setUpAxis=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);mx(c,a)};SF.prototype.setWalkDirection=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);nx(c,a)};SF.prototype.setVelocityForTimeInterval=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);ox(d,a,c)};\nSF.prototype.warp=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);px(c,a)};SF.prototype.preStep=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);qx(c,a)};SF.prototype.playerStep=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);rx(d,a,c)};SF.prototype.setFallSpeed=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);sx(c,a)};SF.prototype.setJumpSpeed=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);tx(c,a)};\nSF.prototype.setMaxJumpHeight=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ux(c,a)};SF.prototype.canJump=function(){return!!vx(this.eB)};SF.prototype.jump=function(){wx(this.eB)};SF.prototype.setGravity=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xx(c,a)};SF.prototype.getGravity=function(){return yx(this.eB)};SF.prototype.setMaxSlope=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zx(c,a)};SF.prototype.getMaxSlope=function(){return Ax(this.eB)};\nSF.prototype.getGhostObject=function(){return k(Bx(this.eB),R)};SF.prototype.setUseGhostSweepTest=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Cx(c,a)};SF.prototype.onGround=function(){return!!Dx(this.eB)};SF.prototype.setUpInterpolate=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ex(c,a)};SF.prototype.updateAction=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Fx(d,a,c)};SF.prototype.__destroy__=function(){Gx(this.eB)};\nfunction S(a,c,d){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);this.eB=Hx(a,c,d);h(S)[this.eB]=this}S.prototype=Object.create(KE.prototype);S.prototype.constructor=S;S.prototype.fB=S;S.gB={};b.btRaycastVehicle=S;S.prototype.applyEngineForce=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Ix(d,a,c)};\nS.prototype.setSteeringValue=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Jx(d,a,c)};S.prototype.getWheelTransformWS=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Kx(c,a),t)};S.prototype.updateWheelTransform=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Lx(d,a,c)};\nS.prototype.addWheel=function(a,c,d,e,f,m,y){var W=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);m&&\"object\"===typeof m&&(m=m.eB);y&&\"object\"===typeof y&&(y=y.eB);return k(Mx(W,a,c,d,e,f,m,y),Q)};S.prototype.getNumWheels=function(){return Nx(this.eB)};S.prototype.getRigidBody=function(){return k(Ox(this.eB),M)};\nS.prototype.getWheelInfo=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Px(c,a),Q)};S.prototype.setBrake=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);Qx(d,a,c)};S.prototype.setCoordinateSystem=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);Rx(e,a,c,d)};S.prototype.getCurrentSpeedKmHour=function(){return Sx(this.eB)};\nS.prototype.getChassisWorldTransform=function(){return k(Tx(this.eB),t)};S.prototype.rayCast=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return Ux(c,a)};S.prototype.updateVehicle=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Vx(c,a)};S.prototype.resetSuspension=function(){Wx(this.eB)};S.prototype.getSteeringValue=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return Xx(c,a)};\nS.prototype.updateWheelTransformsWS=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);void 0===c?Yx(d,a):Zx(d,a,c)};S.prototype.setPitchControl=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);$x(c,a)};S.prototype.updateSuspension=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ay(c,a)};S.prototype.updateFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);by(c,a)};S.prototype.getRightAxis=function(){return cy(this.eB)};\nS.prototype.getUpAxis=function(){return dy(this.eB)};S.prototype.getForwardAxis=function(){return ey(this.eB)};S.prototype.getForwardVector=function(){return k(fy(this.eB),n)};S.prototype.getUserConstraintType=function(){return gy(this.eB)};S.prototype.setUserConstraintType=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hy(c,a)};S.prototype.setUserConstraintId=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);iy(c,a)};S.prototype.getUserConstraintId=function(){return jy(this.eB)};\nS.prototype.updateAction=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);ky(d,a,c)};S.prototype.__destroy__=function(){ly(this.eB)};function R(){this.eB=my();h(R)[this.eB]=this}R.prototype=Object.create(z.prototype);R.prototype.constructor=R;R.prototype.fB=R;R.gB={};b.btPairCachingGhostObject=R;R.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);ny(d,a,c)};\nR.prototype.getCollisionShape=function(){return k(oy(this.eB),l)};R.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);py(c,a)};R.prototype.setActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);qy(c,a)};R.prototype.forceActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ry(c,a)};R.prototype.activate=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);void 0===a?sy(c):ty(c,a)};\nR.prototype.isActive=function(){return!!uy(this.eB)};R.prototype.isKinematicObject=function(){return!!vy(this.eB)};R.prototype.isStaticObject=function(){return!!wy(this.eB)};R.prototype.isStaticOrKinematicObject=function(){return!!xy(this.eB)};R.prototype.getRestitution=function(){return yy(this.eB)};R.prototype.getFriction=function(){return zy(this.eB)};R.prototype.getRollingFriction=function(){return Ay(this.eB)};\nR.prototype.setRestitution=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);By(c,a)};R.prototype.setFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Cy(c,a)};R.prototype.setRollingFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Dy(c,a)};R.prototype.getWorldTransform=function(){return k(Ey(this.eB),t)};R.prototype.getCollisionFlags=function(){return Fy(this.eB)};\nR.prototype.setCollisionFlags=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Gy(c,a)};R.prototype.setWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Hy(c,a)};R.prototype.setCollisionShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Iy(c,a)};R.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Jy(c,a)};R.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Ky(c,a)};\nR.prototype.getUserIndex=function(){return Ly(this.eB)};R.prototype.setUserIndex=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);My(c,a)};R.prototype.getUserPointer=function(){return k(Ny(this.eB),oE)};R.prototype.setUserPointer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Oy(c,a)};R.prototype.getBroadphaseHandle=function(){return k(Py(this.eB),pE)};R.prototype.getNumOverlappingObjects=function(){return Qy(this.eB)};\nR.prototype.getOverlappingObject=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Ry(c,a),r)};R.prototype.__destroy__=function(){Sy(this.eB)};function UF(){this.eB=Ty();h(UF)[this.eB]=this}UF.prototype=Object.create(g.prototype);UF.prototype.constructor=UF;UF.prototype.fB=UF;UF.gB={};b.btGhostPairCallback=UF;UF.prototype.__destroy__=function(){Uy(this.eB)};function T(){this.eB=Vy();h(T)[this.eB]=this}T.prototype=Object.create(g.prototype);T.prototype.constructor=T;\nT.prototype.fB=T;T.gB={};b.btSoftBodyWorldInfo=T;T.prototype.get_air_density=T.prototype.eC=function(){return Wy(this.eB)};T.prototype.set_air_density=T.prototype.YE=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Xy(c,a)};Object.defineProperty(T.prototype,\"air_density\",{get:T.prototype.eC,set:T.prototype.YE});T.prototype.get_water_density=T.prototype.TE=function(){return Yy(this.eB)};\nT.prototype.set_water_density=T.prototype.NH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Zy(c,a)};Object.defineProperty(T.prototype,\"water_density\",{get:T.prototype.TE,set:T.prototype.NH});T.prototype.get_water_offset=T.prototype.VE=function(){return $y(this.eB)};T.prototype.set_water_offset=T.prototype.PH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);az(c,a)};Object.defineProperty(T.prototype,\"water_offset\",{get:T.prototype.VE,set:T.prototype.PH});\nT.prototype.get_m_maxDisplacement=T.prototype.PD=function(){return bz(this.eB)};T.prototype.set_m_maxDisplacement=T.prototype.IG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cz(c,a)};Object.defineProperty(T.prototype,\"m_maxDisplacement\",{get:T.prototype.PD,set:T.prototype.IG});T.prototype.get_water_normal=T.prototype.UE=function(){return k(dz(this.eB),n)};T.prototype.set_water_normal=T.prototype.OH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ez(c,a)};\nObject.defineProperty(T.prototype,\"water_normal\",{get:T.prototype.UE,set:T.prototype.OH});T.prototype.get_m_broadphase=T.prototype.OC=function(){return k(fz(this.eB),mE)};T.prototype.set_m_broadphase=T.prototype.HF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gz(c,a)};Object.defineProperty(T.prototype,\"m_broadphase\",{get:T.prototype.OC,set:T.prototype.HF});T.prototype.get_m_dispatcher=T.prototype.fD=function(){return k(hz(this.eB),kE)};\nT.prototype.set_m_dispatcher=T.prototype.ZF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);iz(c,a)};Object.defineProperty(T.prototype,\"m_dispatcher\",{get:T.prototype.fD,set:T.prototype.ZF});T.prototype.get_m_gravity=T.prototype.oD=function(){return k(jz(this.eB),n)};T.prototype.set_m_gravity=T.prototype.hG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);kz(c,a)};Object.defineProperty(T.prototype,\"m_gravity\",{get:T.prototype.oD,set:T.prototype.hG});T.prototype.__destroy__=function(){lz(this.eB)};\nfunction VF(){throw\"cannot construct a Face, no constructor in IDL\";}VF.prototype=Object.create(g.prototype);VF.prototype.constructor=VF;VF.prototype.fB=VF;VF.gB={};b.Face=VF;VF.prototype.get_m_n=VF.prototype.LB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(mz(c,a),Node)};VF.prototype.set_m_n=VF.prototype.VB=function(a,c){var d=this.eB;eE();a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);nz(d,a,c)};\nObject.defineProperty(VF.prototype,\"m_n\",{get:VF.prototype.LB,set:VF.prototype.VB});VF.prototype.get_m_normal=VF.prototype.TD=function(){return k(oz(this.eB),n)};VF.prototype.set_m_normal=VF.prototype.MG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pz(c,a)};Object.defineProperty(VF.prototype,\"m_normal\",{get:VF.prototype.TD,set:VF.prototype.MG});VF.prototype.get_m_ra=VF.prototype.bE=function(){return qz(this.eB)};\nVF.prototype.set_m_ra=VF.prototype.WG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);rz(c,a)};Object.defineProperty(VF.prototype,\"m_ra\",{get:VF.prototype.bE,set:VF.prototype.WG});VF.prototype.__destroy__=function(){sz(this.eB)};function WF(){throw\"cannot construct a tFaceArray, no constructor in IDL\";}WF.prototype=Object.create(g.prototype);WF.prototype.constructor=WF;WF.prototype.fB=WF;WF.gB={};b.tFaceArray=WF;WF.prototype.size=WF.prototype.size=function(){return tz(this.eB)};\nWF.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(uz(c,a),VF)};WF.prototype.__destroy__=function(){vz(this.eB)};function Node(){throw\"cannot construct a Node, no constructor in IDL\";}Node.prototype=Object.create(g.prototype);Node.prototype.constructor=Node;Node.prototype.fB=Node;Node.gB={};b.Node=Node;Node.prototype.get_m_x=Node.prototype.KE=function(){return k(wz(this.eB),n)};\nNode.prototype.set_m_x=Node.prototype.EH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xz(c,a)};Object.defineProperty(Node.prototype,\"m_x\",{get:Node.prototype.KE,set:Node.prototype.EH});Node.prototype.get_m_q=Node.prototype.aE=function(){return k(yz(this.eB),n)};Node.prototype.set_m_q=Node.prototype.VG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zz(c,a)};Object.defineProperty(Node.prototype,\"m_q\",{get:Node.prototype.aE,set:Node.prototype.VG});\nNode.prototype.get_m_v=Node.prototype.CE=function(){return k(Az(this.eB),n)};Node.prototype.set_m_v=Node.prototype.wH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Bz(c,a)};Object.defineProperty(Node.prototype,\"m_v\",{get:Node.prototype.CE,set:Node.prototype.wH});Node.prototype.get_m_f=Node.prototype.lD=function(){return k(Cz(this.eB),n)};Node.prototype.set_m_f=Node.prototype.eG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Dz(c,a)};\nObject.defineProperty(Node.prototype,\"m_f\",{get:Node.prototype.lD,set:Node.prototype.eG});Node.prototype.get_m_n=Node.prototype.LB=function(){return k(Ez(this.eB),n)};Node.prototype.set_m_n=Node.prototype.VB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Fz(c,a)};Object.defineProperty(Node.prototype,\"m_n\",{get:Node.prototype.LB,set:Node.prototype.VB});Node.prototype.get_m_im=Node.prototype.xD=function(){return Gz(this.eB)};\nNode.prototype.set_m_im=Node.prototype.qG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Hz(c,a)};Object.defineProperty(Node.prototype,\"m_im\",{get:Node.prototype.xD,set:Node.prototype.qG});Node.prototype.get_m_area=Node.prototype.LC=function(){return Iz(this.eB)};Node.prototype.set_m_area=Node.prototype.EF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Jz(c,a)};Object.defineProperty(Node.prototype,\"m_area\",{get:Node.prototype.LC,set:Node.prototype.EF});\nNode.prototype.__destroy__=function(){Kz(this.eB)};function XF(){throw\"cannot construct a tNodeArray, no constructor in IDL\";}XF.prototype=Object.create(g.prototype);XF.prototype.constructor=XF;XF.prototype.fB=XF;XF.gB={};b.tNodeArray=XF;XF.prototype.size=XF.prototype.size=function(){return Lz(this.eB)};XF.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Mz(c,a),Node)};XF.prototype.__destroy__=function(){Nz(this.eB)};\nfunction U(){throw\"cannot construct a Material, no constructor in IDL\";}U.prototype=Object.create(g.prototype);U.prototype.constructor=U;U.prototype.fB=U;U.gB={};b.Material=U;U.prototype.get_m_kLST=U.prototype.DD=function(){return Oz(this.eB)};U.prototype.set_m_kLST=U.prototype.wG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Pz(c,a)};Object.defineProperty(U.prototype,\"m_kLST\",{get:U.prototype.DD,set:U.prototype.wG});U.prototype.get_m_kAST=U.prototype.CD=function(){return Qz(this.eB)};\nU.prototype.set_m_kAST=U.prototype.vG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Rz(c,a)};Object.defineProperty(U.prototype,\"m_kAST\",{get:U.prototype.CD,set:U.prototype.vG});U.prototype.get_m_kVST=U.prototype.ED=function(){return Sz(this.eB)};U.prototype.set_m_kVST=U.prototype.xG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Tz(c,a)};Object.defineProperty(U.prototype,\"m_kVST\",{get:U.prototype.ED,set:U.prototype.xG});U.prototype.get_m_flags=U.prototype.pB=function(){return Uz(this.eB)};\nU.prototype.set_m_flags=U.prototype.qB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);Vz(c,a)};Object.defineProperty(U.prototype,\"m_flags\",{get:U.prototype.pB,set:U.prototype.qB});U.prototype.__destroy__=function(){Wz(this.eB)};function YF(){throw\"cannot construct a tMaterialArray, no constructor in IDL\";}YF.prototype=Object.create(g.prototype);YF.prototype.constructor=YF;YF.prototype.fB=YF;YF.gB={};b.tMaterialArray=YF;YF.prototype.size=YF.prototype.size=function(){return Xz(this.eB)};\nYF.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(Yz(c,a),U)};YF.prototype.__destroy__=function(){Zz(this.eB)};function V(){throw\"cannot construct a Anchor, no constructor in IDL\";}V.prototype=Object.create(g.prototype);V.prototype.constructor=V;V.prototype.fB=V;V.gB={};b.Anchor=V;V.prototype.get_m_node=V.prototype.RD=function(){return k($z(this.eB),Node)};V.prototype.set_m_node=V.prototype.KG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);aA(c,a)};\nObject.defineProperty(V.prototype,\"m_node\",{get:V.prototype.RD,set:V.prototype.KG});V.prototype.get_m_local=V.prototype.HD=function(){return k(bA(this.eB),n)};V.prototype.set_m_local=V.prototype.AG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cA(c,a)};Object.defineProperty(V.prototype,\"m_local\",{get:V.prototype.HD,set:V.prototype.AG});V.prototype.get_m_body=V.prototype.MC=function(){return k(dA(this.eB),M)};\nV.prototype.set_m_body=V.prototype.FF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);eA(c,a)};Object.defineProperty(V.prototype,\"m_body\",{get:V.prototype.MC,set:V.prototype.FF});V.prototype.get_m_influence=V.prototype.AD=function(){return fA(this.eB)};V.prototype.set_m_influence=V.prototype.tG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gA(c,a)};Object.defineProperty(V.prototype,\"m_influence\",{get:V.prototype.AD,set:V.prototype.tG});\nV.prototype.get_m_c0=V.prototype.PC=function(){return k(hA(this.eB),NE)};V.prototype.set_m_c0=V.prototype.IF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);iA(c,a)};Object.defineProperty(V.prototype,\"m_c0\",{get:V.prototype.PC,set:V.prototype.IF});V.prototype.get_m_c1=V.prototype.QC=function(){return k(jA(this.eB),n)};V.prototype.set_m_c1=V.prototype.JF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);kA(c,a)};Object.defineProperty(V.prototype,\"m_c1\",{get:V.prototype.QC,set:V.prototype.JF});\nV.prototype.get_m_c2=V.prototype.RC=function(){return lA(this.eB)};V.prototype.set_m_c2=V.prototype.KF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);mA(c,a)};Object.defineProperty(V.prototype,\"m_c2\",{get:V.prototype.RC,set:V.prototype.KF});V.prototype.__destroy__=function(){nA(this.eB)};function ZF(){throw\"cannot construct a tAnchorArray, no constructor in IDL\";}ZF.prototype=Object.create(g.prototype);ZF.prototype.constructor=ZF;ZF.prototype.fB=ZF;ZF.gB={};b.tAnchorArray=ZF;\nZF.prototype.size=ZF.prototype.size=function(){return oA(this.eB)};ZF.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(pA(c,a),V)};ZF.prototype.clear=ZF.prototype.clear=function(){qA(this.eB)};ZF.prototype.push_back=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);rA(c,a)};ZF.prototype.pop_back=function(){sA(this.eB)};ZF.prototype.__destroy__=function(){tA(this.eB)};function X(){throw\"cannot construct a Config, no constructor in IDL\";}X.prototype=Object.create(g.prototype);\nX.prototype.constructor=X;X.prototype.fB=X;X.gB={};b.Config=X;X.prototype.get_kVCF=X.prototype.BC=function(){return uA(this.eB)};X.prototype.set_kVCF=X.prototype.uF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);vA(c,a)};Object.defineProperty(X.prototype,\"kVCF\",{get:X.prototype.BC,set:X.prototype.uF});X.prototype.get_kDP=X.prototype.oC=function(){return wA(this.eB)};X.prototype.set_kDP=X.prototype.hF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);xA(c,a)};\nObject.defineProperty(X.prototype,\"kDP\",{get:X.prototype.oC,set:X.prototype.hF});X.prototype.get_kDG=X.prototype.nC=function(){return yA(this.eB)};X.prototype.set_kDG=X.prototype.gF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);zA(c,a)};Object.defineProperty(X.prototype,\"kDG\",{get:X.prototype.nC,set:X.prototype.gF});X.prototype.get_kLF=X.prototype.qC=function(){return AA(this.eB)};X.prototype.set_kLF=X.prototype.jF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);BA(c,a)};\nObject.defineProperty(X.prototype,\"kLF\",{get:X.prototype.qC,set:X.prototype.jF});X.prototype.get_kPR=X.prototype.sC=function(){return CA(this.eB)};X.prototype.set_kPR=X.prototype.lF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);DA(c,a)};Object.defineProperty(X.prototype,\"kPR\",{get:X.prototype.sC,set:X.prototype.lF});X.prototype.get_kVC=X.prototype.AC=function(){return EA(this.eB)};X.prototype.set_kVC=X.prototype.tF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);FA(c,a)};\nObject.defineProperty(X.prototype,\"kVC\",{get:X.prototype.AC,set:X.prototype.tF});X.prototype.get_kDF=X.prototype.mC=function(){return GA(this.eB)};X.prototype.set_kDF=X.prototype.fF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);HA(c,a)};Object.defineProperty(X.prototype,\"kDF\",{get:X.prototype.mC,set:X.prototype.fF});X.prototype.get_kMT=X.prototype.rC=function(){return IA(this.eB)};X.prototype.set_kMT=X.prototype.kF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);JA(c,a)};\nObject.defineProperty(X.prototype,\"kMT\",{get:X.prototype.rC,set:X.prototype.kF});X.prototype.get_kCHR=X.prototype.lC=function(){return KA(this.eB)};X.prototype.set_kCHR=X.prototype.eF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);LA(c,a)};Object.defineProperty(X.prototype,\"kCHR\",{get:X.prototype.lC,set:X.prototype.eF});X.prototype.get_kKHR=X.prototype.pC=function(){return MA(this.eB)};\nX.prototype.set_kKHR=X.prototype.iF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);NA(c,a)};Object.defineProperty(X.prototype,\"kKHR\",{get:X.prototype.pC,set:X.prototype.iF});X.prototype.get_kSHR=X.prototype.tC=function(){return OA(this.eB)};X.prototype.set_kSHR=X.prototype.mF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);PA(c,a)};Object.defineProperty(X.prototype,\"kSHR\",{get:X.prototype.tC,set:X.prototype.mF});X.prototype.get_kAHR=X.prototype.kC=function(){return QA(this.eB)};\nX.prototype.set_kAHR=X.prototype.dF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);RA(c,a)};Object.defineProperty(X.prototype,\"kAHR\",{get:X.prototype.kC,set:X.prototype.dF});X.prototype.get_kSRHR_CL=X.prototype.wC=function(){return SA(this.eB)};X.prototype.set_kSRHR_CL=X.prototype.pF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);TA(c,a)};Object.defineProperty(X.prototype,\"kSRHR_CL\",{get:X.prototype.wC,set:X.prototype.pF});X.prototype.get_kSKHR_CL=X.prototype.uC=function(){return UA(this.eB)};\nX.prototype.set_kSKHR_CL=X.prototype.nF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);VA(c,a)};Object.defineProperty(X.prototype,\"kSKHR_CL\",{get:X.prototype.uC,set:X.prototype.nF});X.prototype.get_kSSHR_CL=X.prototype.yC=function(){return WA(this.eB)};X.prototype.set_kSSHR_CL=X.prototype.rF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);XA(c,a)};Object.defineProperty(X.prototype,\"kSSHR_CL\",{get:X.prototype.yC,set:X.prototype.rF});\nX.prototype.get_kSR_SPLT_CL=X.prototype.xC=function(){return YA(this.eB)};X.prototype.set_kSR_SPLT_CL=X.prototype.qF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);ZA(c,a)};Object.defineProperty(X.prototype,\"kSR_SPLT_CL\",{get:X.prototype.xC,set:X.prototype.qF});X.prototype.get_kSK_SPLT_CL=X.prototype.vC=function(){return $A(this.eB)};X.prototype.set_kSK_SPLT_CL=X.prototype.oF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);aB(c,a)};\nObject.defineProperty(X.prototype,\"kSK_SPLT_CL\",{get:X.prototype.vC,set:X.prototype.oF});X.prototype.get_kSS_SPLT_CL=X.prototype.zC=function(){return bB(this.eB)};X.prototype.set_kSS_SPLT_CL=X.prototype.sF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cB(c,a)};Object.defineProperty(X.prototype,\"kSS_SPLT_CL\",{get:X.prototype.zC,set:X.prototype.sF});X.prototype.get_maxvolume=X.prototype.LE=function(){return dB(this.eB)};\nX.prototype.set_maxvolume=X.prototype.FH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);eB(c,a)};Object.defineProperty(X.prototype,\"maxvolume\",{get:X.prototype.LE,set:X.prototype.FH});X.prototype.get_timescale=X.prototype.QE=function(){return fB(this.eB)};X.prototype.set_timescale=X.prototype.KH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gB(c,a)};Object.defineProperty(X.prototype,\"timescale\",{get:X.prototype.QE,set:X.prototype.KH});\nX.prototype.get_viterations=X.prototype.SE=function(){return hB(this.eB)};X.prototype.set_viterations=X.prototype.MH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);iB(c,a)};Object.defineProperty(X.prototype,\"viterations\",{get:X.prototype.SE,set:X.prototype.MH});X.prototype.get_piterations=X.prototype.OE=function(){return jB(this.eB)};X.prototype.set_piterations=X.prototype.IH=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);kB(c,a)};\nObject.defineProperty(X.prototype,\"piterations\",{get:X.prototype.OE,set:X.prototype.IH});X.prototype.get_diterations=X.prototype.hC=function(){return lB(this.eB)};X.prototype.set_diterations=X.prototype.aF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);mB(c,a)};Object.defineProperty(X.prototype,\"diterations\",{get:X.prototype.hC,set:X.prototype.aF});X.prototype.get_citerations=X.prototype.fC=function(){return nB(this.eB)};\nX.prototype.set_citerations=X.prototype.ZE=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);oB(c,a)};Object.defineProperty(X.prototype,\"citerations\",{get:X.prototype.fC,set:X.prototype.ZE});X.prototype.get_collisions=X.prototype.gC=function(){return pB(this.eB)};X.prototype.set_collisions=X.prototype.$E=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);qB(c,a)};Object.defineProperty(X.prototype,\"collisions\",{get:X.prototype.gC,set:X.prototype.$E});X.prototype.__destroy__=function(){rB(this.eB)};\nfunction Y(a,c,d,e){eE();a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);\"object\"==typeof e&&(e=iE(e));this.eB=sB(a,c,d,e);h(Y)[this.eB]=this}Y.prototype=Object.create(r.prototype);Y.prototype.constructor=Y;Y.prototype.fB=Y;Y.gB={};b.btSoftBody=Y;Y.prototype.checkLink=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return!!tB(d,a,c)};\nY.prototype.checkFace=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);return!!uB(e,a,c,d)};Y.prototype.appendMaterial=function(){return k(vB(this.eB),U)};Y.prototype.appendNode=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);wB(d,a,c)};\nY.prototype.appendLink=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);xB(f,a,c,d,e)};Y.prototype.appendFace=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);yB(f,a,c,d,e)};\nY.prototype.appendTetra=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);zB(m,a,c,d,e,f)};Y.prototype.appendAnchor=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);AB(f,a,c,d,e)};\nY.prototype.addForce=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);void 0===c?BB(d,a):CB(d,a,c)};Y.prototype.addAeroForceToNode=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);DB(d,a,c)};Y.prototype.getTotalMass=function(){return EB(this.eB)};Y.prototype.setTotalMass=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);FB(d,a,c)};\nY.prototype.setMass=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);GB(d,a,c)};Y.prototype.transform=Y.prototype.transform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);HB(c,a)};Y.prototype.translate=Y.prototype.translate=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);IB(c,a)};Y.prototype.rotate=Y.prototype.rotate=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);JB(c,a)};\nY.prototype.scale=Y.prototype.scale=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);KB(c,a)};Y.prototype.generateClusters=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return void 0===c?LB(d,a):MB(d,a,c)};Y.prototype.generateBendingConstraints=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);return NB(d,a,c)};\nY.prototype.upcast=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(OB(c,a),Y)};Y.prototype.getRestLengthScale=function(){return PB(this.eB)};Y.prototype.setRestLengthScale=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);QB(c,a)};Y.prototype.setAnisotropicFriction=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);RB(d,a,c)};Y.prototype.getCollisionShape=function(){return k(SB(this.eB),l)};\nY.prototype.setContactProcessingThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);TB(c,a)};Y.prototype.setActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);UB(c,a)};Y.prototype.forceActivationState=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);VB(c,a)};Y.prototype.activate=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);void 0===a?WB(c):XB(c,a)};Y.prototype.isActive=function(){return!!YB(this.eB)};Y.prototype.isKinematicObject=function(){return!!ZB(this.eB)};\nY.prototype.isStaticObject=function(){return!!$B(this.eB)};Y.prototype.isStaticOrKinematicObject=function(){return!!aC(this.eB)};Y.prototype.getRestitution=function(){return bC(this.eB)};Y.prototype.getFriction=function(){return cC(this.eB)};Y.prototype.getRollingFriction=function(){return dC(this.eB)};Y.prototype.setRestitution=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);eC(c,a)};Y.prototype.setFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);fC(c,a)};\nY.prototype.setRollingFriction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);gC(c,a)};Y.prototype.getWorldTransform=function(){return k(hC(this.eB),t)};Y.prototype.getCollisionFlags=function(){return iC(this.eB)};Y.prototype.setCollisionFlags=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);jC(c,a)};Y.prototype.setWorldTransform=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);kC(c,a)};\nY.prototype.setCollisionShape=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);lC(c,a)};Y.prototype.setCcdMotionThreshold=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);mC(c,a)};Y.prototype.setCcdSweptSphereRadius=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);nC(c,a)};Y.prototype.getUserIndex=function(){return oC(this.eB)};Y.prototype.setUserIndex=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);pC(c,a)};\nY.prototype.getUserPointer=function(){return k(qC(this.eB),oE)};Y.prototype.setUserPointer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);rC(c,a)};Y.prototype.getBroadphaseHandle=function(){return k(sC(this.eB),pE)};Y.prototype.get_m_cfg=Y.prototype.SC=function(){return k(tC(this.eB),X)};Y.prototype.set_m_cfg=Y.prototype.LF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);uC(c,a)};Object.defineProperty(Y.prototype,\"m_cfg\",{get:Y.prototype.SC,set:Y.prototype.LF});\nY.prototype.get_m_nodes=Y.prototype.SD=function(){return k(vC(this.eB),XF)};Y.prototype.set_m_nodes=Y.prototype.LG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);wC(c,a)};Object.defineProperty(Y.prototype,\"m_nodes\",{get:Y.prototype.SD,set:Y.prototype.LG});Y.prototype.get_m_faces=Y.prototype.JB=function(){return k(xC(this.eB),WF)};Y.prototype.set_m_faces=Y.prototype.TB=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);yC(c,a)};\nObject.defineProperty(Y.prototype,\"m_faces\",{get:Y.prototype.JB,set:Y.prototype.TB});Y.prototype.get_m_materials=Y.prototype.OD=function(){return k(zC(this.eB),YF)};Y.prototype.set_m_materials=Y.prototype.HG=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);AC(c,a)};Object.defineProperty(Y.prototype,\"m_materials\",{get:Y.prototype.OD,set:Y.prototype.HG});Y.prototype.get_m_anchors=Y.prototype.IC=function(){return k(BC(this.eB),ZF)};\nY.prototype.set_m_anchors=Y.prototype.BF=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);CC(c,a)};Object.defineProperty(Y.prototype,\"m_anchors\",{get:Y.prototype.IC,set:Y.prototype.BF});Y.prototype.__destroy__=function(){DC(this.eB)};function $F(a){a&&\"object\"===typeof a&&(a=a.eB);this.eB=void 0===a?EC():FC(a);h($F)[this.eB]=this}$F.prototype=Object.create(GE.prototype);$F.prototype.constructor=$F;$F.prototype.fB=$F;$F.gB={};b.btSoftBodyRigidBodyCollisionConfiguration=$F;\n$F.prototype.__destroy__=function(){GC(this.eB)};function aG(){this.eB=HC();h(aG)[this.eB]=this}aG.prototype=Object.create(LE.prototype);aG.prototype.constructor=aG;aG.prototype.fB=aG;aG.gB={};b.btDefaultSoftBodySolver=aG;aG.prototype.__destroy__=function(){IC(this.eB)};function bG(){throw\"cannot construct a btSoftBodyArray, no constructor in IDL\";}bG.prototype=Object.create(g.prototype);bG.prototype.constructor=bG;bG.prototype.fB=bG;bG.gB={};b.btSoftBodyArray=bG;\nbG.prototype.size=bG.prototype.size=function(){return JC(this.eB)};bG.prototype.at=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);return k(KC(c,a),Y)};bG.prototype.__destroy__=function(){LC(this.eB)};function Z(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);this.eB=MC(a,c,d,e,f);h(Z)[this.eB]=this}Z.prototype=Object.create(x.prototype);\nZ.prototype.constructor=Z;Z.prototype.fB=Z;Z.gB={};b.btSoftRigidDynamicsWorld=Z;Z.prototype.addSoftBody=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);NC(e,a,c,d)};Z.prototype.removeSoftBody=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);OC(c,a)};Z.prototype.removeCollisionObject=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);PC(c,a)};Z.prototype.getWorldInfo=function(){return k(QC(this.eB),T)};\nZ.prototype.getSoftBodyArray=function(){return k(RC(this.eB),bG)};Z.prototype.getDispatcher=function(){return k(SC(this.eB),kE)};Z.prototype.rayTest=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);TC(e,a,c,d)};Z.prototype.getPairCache=function(){return k(UC(this.eB),lE)};Z.prototype.getDispatchInfo=function(){return k(VC(this.eB),q)};\nZ.prototype.addCollisionObject=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?WC(e,a):void 0===d?XC(e,a,c):YC(e,a,c,d)};Z.prototype.getBroadphase=function(){return k(ZC(this.eB),mE)};\nZ.prototype.convexSweepTest=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);$C(m,a,c,d,e,f)};Z.prototype.contactPairTest=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);aD(e,a,c,d)};\nZ.prototype.contactTest=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);bD(d,a,c)};Z.prototype.updateSingleAabb=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);cD(c,a)};Z.prototype.setDebugDrawer=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);dD(c,a)};Z.prototype.getDebugDrawer=function(){return k(eD(this.eB),nE)};Z.prototype.debugDrawWorld=function(){fD(this.eB)};\nZ.prototype.debugDrawObject=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);gD(e,a,c,d)};Z.prototype.setGravity=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);hD(c,a)};Z.prototype.getGravity=function(){return k(iD(this.eB),n)};\nZ.prototype.addRigidBody=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?jD(e,a):void 0===d?_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_2(e,a,c):kD(e,a,c,d)};Z.prototype.removeRigidBody=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);lD(c,a)};\nZ.prototype.addConstraint=function(a,c){var d=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);void 0===c?mD(d,a):nD(d,a,c)};Z.prototype.removeConstraint=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);oD(c,a)};Z.prototype.stepSimulation=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);return void 0===c?pD(e,a):void 0===d?qD(e,a,c):rD(e,a,c,d)};\nZ.prototype.setContactAddedCallback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);sD(c,a)};Z.prototype.setContactProcessedCallback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);tD(c,a)};Z.prototype.setContactDestroyedCallback=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);uD(c,a)};Z.prototype.addAction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);vD(c,a)};Z.prototype.removeAction=function(a){var c=this.eB;a&&\"object\"===typeof a&&(a=a.eB);wD(c,a)};\nZ.prototype.getSolverInfo=function(){return k(xD(this.eB),u)};Z.prototype.setInternalTickCallback=function(a,c,d){var e=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);void 0===c?yD(e,a):void 0===d?zD(e,a,c):AD(e,a,c,d)};Z.prototype.__destroy__=function(){BD(this.eB)};function cG(){this.eB=CD();h(cG)[this.eB]=this}cG.prototype=Object.create(g.prototype);cG.prototype.constructor=cG;cG.prototype.fB=cG;cG.gB={};b.btSoftBodyHelpers=cG;\ncG.prototype.CreateRope=function(a,c,d,e,f){var m=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);return k(DD(m,a,c,d,e,f),Y)};\ncG.prototype.CreatePatch=function(a,c,d,e,f,m,y,W,E){var p=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);m&&\"object\"===typeof m&&(m=m.eB);y&&\"object\"===typeof y&&(y=y.eB);W&&\"object\"===typeof W&&(W=W.eB);E&&\"object\"===typeof E&&(E=E.eB);return k(ED(p,a,c,d,e,f,m,y,W,E),Y)};\ncG.prototype.CreatePatchUV=function(a,c,d,e,f,m,y,W,E,p){var G=this.eB;eE();a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);m&&\"object\"===typeof m&&(m=m.eB);y&&\"object\"===typeof y&&(y=y.eB);W&&\"object\"===typeof W&&(W=W.eB);E&&\"object\"===typeof E&&(E=E.eB);\"object\"==typeof p&&(p=iE(p));return k(FD(G,a,c,d,e,f,m,y,W,E,p),Y)};\ncG.prototype.CreateEllipsoid=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);return k(GD(f,a,c,d,e),Y)};\ncG.prototype.CreateFromTriMesh=function(a,c,d,e,f){var m=this.eB;eE();a&&\"object\"===typeof a&&(a=a.eB);\"object\"==typeof c&&(c=iE(c));if(\"object\"==typeof d&&\"object\"===typeof d){var y=fE(d,Qa);gE(d,Qa,y);d=y}e&&\"object\"===typeof e&&(e=e.eB);f&&\"object\"===typeof f&&(f=f.eB);return k(HD(m,a,c,d,e,f),Y)};\ncG.prototype.CreateFromConvexHull=function(a,c,d,e){var f=this.eB;a&&\"object\"===typeof a&&(a=a.eB);c&&\"object\"===typeof c&&(c=c.eB);d&&\"object\"===typeof d&&(d=d.eB);e&&\"object\"===typeof e&&(e=e.eB);return k(ID(f,a,c,d,e),Y)};cG.prototype.__destroy__=function(){JD(this.eB)};\n(function(){function a(){b.PHY_FLOAT=KD();b.PHY_DOUBLE=LD();b.PHY_INTEGER=MD();b.PHY_SHORT=ND();b.PHY_FIXEDPOINT88=OD();b.PHY_UCHAR=PD();b.CONST_GIMPACT_COMPOUND_SHAPE=QD();b.CONST_GIMPACT_TRIMESH_SHAPE_PART=RD();b.CONST_GIMPACT_TRIMESH_SHAPE=SD();b.BT_CONSTRAINT_ERP=TD();b.BT_CONSTRAINT_STOP_ERP=UD();b.BT_CONSTRAINT_CFM=VD();b.BT_CONSTRAINT_STOP_CFM=WD()}Ya?a():Wa.unshift(a)})();b.CONTACT_ADDED_CALLBACK_SIGNATURE=\"iiiiiiii\";b.CONTACT_DESTROYED_CALLBACK_SIGNATURE=\"ii\";\nb.CONTACT_PROCESSED_CALLBACK_SIGNATURE=\"iiii\";b.INTERNAL_TICK_CALLBACK_SIGNATURE=\"vif\";Object.assign(Ammo, b);\n\n\n  return Ammo.ready\n}\n);\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Ammo);\n\n//# sourceURL=webpack://client/./lib/ammo.js?");

/***/ }),

/***/ "./src/3D.js":
/*!*******************!*\
  !*** ./src/3D.js ***!
  \*******************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"run\": () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls.js */ \"./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n/* harmony import */ var three_examples_jsm_libs_stats_module_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three/examples/jsm/libs/stats.module.js */ \"./node_modules/three/examples/jsm/libs/stats.module.js\");\n/* harmony import */ var _lib_ammo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/ammo.js */ \"./lib/ammo.js\");\n\n\n\n\n\nconst physicsConfig = {\n  margin: 0.05,\n  gravity: -9.81,\n};\n\nconst ammo = await (0,_lib_ammo_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\nfunction run() {\n  const { render, stats, physicsWorld, meshes, transformAux } = init();\n  animate({ render, stats, physicsWorld, meshes, clock: new three__WEBPACK_IMPORTED_MODULE_1__.Clock(), transformAux });\n}\n\nfunction init() {\n  const meshes = [];\n\n  const { render, scene, stats, camera } = initGraphics();\n\n  const { physicsWorld, transformAux } = initPhysics();\n  const initialMeshes = initObjects({ scene, physicsWorld });\n\n  meshes.push(...initialMeshes);\n\n  initInput({ scene, camera, meshes, physicsWorld });\n\n  return { render, stats, physicsWorld, meshes, transformAux };\n}\n\nfunction initGraphics() {\n  const container = document.getElementById(\"container\");\n  const camera = new three__WEBPACK_IMPORTED_MODULE_1__.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.2, 2000);\n\n  const scene = new three__WEBPACK_IMPORTED_MODULE_1__.Scene();\n  scene.background = new three__WEBPACK_IMPORTED_MODULE_1__.Color(\"#eeeeee\");\n\n  camera.position.set(-14, 8, 16);\n\n  const renderer = new three__WEBPACK_IMPORTED_MODULE_1__.WebGLRenderer();\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.shadowMap.enabled = true;\n  container.appendChild(renderer.domElement);\n\n  const controls = new three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_2__.OrbitControls(camera, renderer.domElement);\n  controls.target.set(0, 2, 0);\n  controls.update();\n\n  const textureLoader = new three__WEBPACK_IMPORTED_MODULE_1__.TextureLoader();\n\n  const ambientLight = new three__WEBPACK_IMPORTED_MODULE_1__.AmbientLight(0x707070);\n  scene.add(ambientLight);\n\n  const light = new three__WEBPACK_IMPORTED_MODULE_1__.DirectionalLight(0xffffff, 1);\n  light.position.set(-10, 18, 5);\n  light.castShadow = true;\n  const d = 14;\n  light.shadow.camera.left = -d;\n  light.shadow.camera.right = d;\n  light.shadow.camera.top = d;\n  light.shadow.camera.bottom = -d;\n\n  light.shadow.camera.near = 2;\n  light.shadow.camera.far = 50;\n\n  light.shadow.mapSize.x = 1024;\n  light.shadow.mapSize.y = 1024;\n\n  scene.add(light);\n\n  const stats = new three_examples_jsm_libs_stats_module_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n  stats.domElement.style.position = \"absolute\";\n  stats.domElement.style.top = \"0px\";\n  container.appendChild(stats.domElement);\n\n  window.addEventListener(\"resize\", () => onWindowResize({ renderer, camera }));\n\n  return { render: () => renderer.render(scene, camera), scene, stats, camera };\n}\n\nfunction initPhysics() {\n  const collisionConfiguration = new ammo.btDefaultCollisionConfiguration();\n  const dispatcher = new ammo.btCollisionDispatcher(collisionConfiguration);\n  const broadphase = new ammo.btDbvtBroadphase();\n  const solver = new ammo.btSequentialImpulseConstraintSolver();\n  const physicsWorld = new ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);\n  physicsWorld.setGravity(new ammo.btVector3(0, physicsConfig.gravity, 0));\n\n  const transformAux = new ammo.btTransform();\n\n  return { physicsWorld, transformAux };\n}\n\nfunction onWindowResize({ renderer, camera }) {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction initObjects({ scene, physicsWorld }) {\n  const meshes = [];\n  const { mesh: groundMesh, body: groundBody } = createGround();\n  meshes.push(groundMesh);\n  scene.add(groundMesh);\n  physicsWorld.addRigidBody(groundBody);\n  return meshes;\n}\n\nfunction createGround() {\n  const pos = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, -0.5, 0);\n  const quat = new three__WEBPACK_IMPORTED_MODULE_1__.Quaternion(0, 0, 0, 1);\n  const material = new three__WEBPACK_IMPORTED_MODULE_1__.MeshPhongMaterial({ color: 0xffffff });\n  const { mesh, body } = createParalellepipedWithPhysics({ sx: 40, sy: 1, sz: 40, mass: 0, pos, quat, material });\n  mesh.receiveShadow = true;\n  return { mesh, body };\n}\n\nfunction createParalellepipedWithPhysics({ sx, sy, sz, mass, pos, quat, material }) {\n  const mesh = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(new three__WEBPACK_IMPORTED_MODULE_1__.BoxGeometry(sx, sy, sz, 1, 1, 1), material);\n  const shape = new ammo.btBoxShape(new ammo.btVector3(sx * 0.5, sy * 0.5, sz * 0.5));\n  shape.setMargin(physicsConfig.margin);\n\n  const body = createRigidBody({ mesh, physicsShape: shape, mass, pos, quat });\n\n  return { mesh, body };\n}\n\nfunction createRigidBody({ mesh, physicsShape, mass, pos, quat, vel, angVel }) {\n  pos ? mesh.position.copy(pos) : (pos = mesh.position);\n  quat ? mesh.quaternion.copy(quat) : (quat = mesh.quaternion);\n\n  const transform = new ammo.btTransform();\n  transform.setIdentity();\n  transform.setOrigin(new ammo.btVector3(pos.x, pos.y, pos.z));\n  transform.setRotation(new ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w));\n  const motionState = new ammo.btDefaultMotionState(transform);\n\n  const localInertia = new ammo.btVector3(0, 0, 0);\n  physicsShape.calculateLocalInertia(mass, localInertia);\n\n  const rbInfo = new ammo.btRigidBodyConstructionInfo(mass, motionState, physicsShape, localInertia);\n  const body = new ammo.btRigidBody(rbInfo);\n\n  body.setFriction(0.5);\n\n  if (vel) body.setLinearVelocity(new ammo.btVector3(vel.x, vel.y, vel.z));\n  if (angVel) body.setAngularVelocity(new ammo.btVector3(angVel.x, angVel.y, angVel.z));\n\n  mesh.userData.physicsBody = body;\n  mesh.userData.collided = false;\n\n  // If the object has mass, it's movable and deactivation is disabled\n  if (mass > 0) body.setActivationState(4);\n\n  return body;\n}\n\nfunction initInput({ scene, camera, meshes, physicsWorld }) {\n  window.addEventListener(\"mousedown\", (event) => {\n    const { ballMesh, ballBody } = throwBall({ event, scene, camera, meshes, physicsWorld });\n    scene.add(ballMesh);\n    meshes.push(ballMesh);\n    physicsWorld.addRigidBody(ballBody);\n  });\n}\n\nfunction throwBall({ event, scene, camera, meshes, physicsWorld }) {\n  const mouseCoords = new three__WEBPACK_IMPORTED_MODULE_1__.Vector2();\n\n  mouseCoords.set((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1);\n  const raycaster = new three__WEBPACK_IMPORTED_MODULE_1__.Raycaster();\n  raycaster.setFromCamera(mouseCoords, camera);\n\n  // Creates a ball and throws it\n  const ballMass = 35;\n  const ballRadius = 0.4;\n\n  const ball = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(\n    new three__WEBPACK_IMPORTED_MODULE_1__.SphereGeometry(ballRadius, 56, 40),\n    new three__WEBPACK_IMPORTED_MODULE_1__.MeshPhongMaterial({ color: \"#fff\" })\n  );\n  ball.castShadow = true;\n  ball.receiveShadow = true;\n\n  const ballShape = new ammo.btSphereShape(ballRadius);\n  ballShape.setMargin(physicsConfig.margin);\n  const pos = new three__WEBPACK_IMPORTED_MODULE_1__.Vector3().copy(raycaster.ray.direction);\n  pos.add(raycaster.ray.origin);\n  const quat = new three__WEBPACK_IMPORTED_MODULE_1__.Quaternion(0, 0, 0, 1);\n  const ballBody = createRigidBody({ mesh: ball, physicsShape: ballShape, mass: ballMass, pos, quat });\n\n  pos.copy(raycaster.ray.direction);\n  pos.multiplyScalar(24);\n  ballBody.setLinearVelocity(new ammo.btVector3(pos.x, pos.y, pos.z));\n\n  return { ballMesh: ball, ballBody };\n}\n\nfunction animate({ render, stats, physicsWorld, clock, meshes, transformAux }) {\n  requestAnimationFrame(() => animate({ render, stats, physicsWorld, clock, meshes, transformAux }));\n  const deltaTime = clock.getDelta();\n  updatePhysics({ deltaTime, physicsWorld, meshes, transformAux });\n  render();\n  stats.update();\n}\n\nfunction updatePhysics({ deltaTime, physicsWorld, meshes, transformAux }) {\n  physicsWorld.stepSimulation(deltaTime, 10);\n\n  meshes.forEach((mesh) => {\n    const objPhys = mesh.userData.physicsBody;\n    const ms = objPhys.getMotionState();\n\n    if (ms) {\n      ms.getWorldTransform(transformAux);\n      const p = transformAux.getOrigin();\n      const q = transformAux.getRotation();\n      mesh.position.set(p.x(), p.y(), p.z());\n      mesh.quaternion.set(q.x(), q.y(), q.z(), q.w());\n\n      mesh.userData.collided = false;\n    }\n  });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://client/./src/3D.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _3D__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./3D */ \"./src/3D.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_3D__WEBPACK_IMPORTED_MODULE_0__]);\n_3D__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n(0,_3D__WEBPACK_IMPORTED_MODULE_0__.run)();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://client/./src/index.js?");

/***/ }),

/***/ "?d87b":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://client/fs_(ignored)?");

/***/ }),

/***/ "?fe5a":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

eval("/* (ignored) */\n\n//# sourceURL=webpack://client/path_(ignored)?");

/***/ }),

/***/ "./node_modules/three/build/three.module.js":
/*!**************************************************!*\
  !*** ./node_modules/three/build/three.module.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ACESFilmicToneMapping\": () => (/* binding */ ACESFilmicToneMapping),\n/* harmony export */   \"AddEquation\": () => (/* binding */ AddEquation),\n/* harmony export */   \"AddOperation\": () => (/* binding */ AddOperation),\n/* harmony export */   \"AdditiveAnimationBlendMode\": () => (/* binding */ AdditiveAnimationBlendMode),\n/* harmony export */   \"AdditiveBlending\": () => (/* binding */ AdditiveBlending),\n/* harmony export */   \"AlphaFormat\": () => (/* binding */ AlphaFormat),\n/* harmony export */   \"AlwaysDepth\": () => (/* binding */ AlwaysDepth),\n/* harmony export */   \"AlwaysStencilFunc\": () => (/* binding */ AlwaysStencilFunc),\n/* harmony export */   \"AmbientLight\": () => (/* binding */ AmbientLight),\n/* harmony export */   \"AmbientLightProbe\": () => (/* binding */ AmbientLightProbe),\n/* harmony export */   \"AnimationClip\": () => (/* binding */ AnimationClip),\n/* harmony export */   \"AnimationLoader\": () => (/* binding */ AnimationLoader),\n/* harmony export */   \"AnimationMixer\": () => (/* binding */ AnimationMixer),\n/* harmony export */   \"AnimationObjectGroup\": () => (/* binding */ AnimationObjectGroup),\n/* harmony export */   \"AnimationUtils\": () => (/* binding */ AnimationUtils),\n/* harmony export */   \"ArcCurve\": () => (/* binding */ ArcCurve),\n/* harmony export */   \"ArrayCamera\": () => (/* binding */ ArrayCamera),\n/* harmony export */   \"ArrowHelper\": () => (/* binding */ ArrowHelper),\n/* harmony export */   \"Audio\": () => (/* binding */ Audio),\n/* harmony export */   \"AudioAnalyser\": () => (/* binding */ AudioAnalyser),\n/* harmony export */   \"AudioContext\": () => (/* binding */ AudioContext),\n/* harmony export */   \"AudioListener\": () => (/* binding */ AudioListener),\n/* harmony export */   \"AudioLoader\": () => (/* binding */ AudioLoader),\n/* harmony export */   \"AxesHelper\": () => (/* binding */ AxesHelper),\n/* harmony export */   \"BackSide\": () => (/* binding */ BackSide),\n/* harmony export */   \"BasicDepthPacking\": () => (/* binding */ BasicDepthPacking),\n/* harmony export */   \"BasicShadowMap\": () => (/* binding */ BasicShadowMap),\n/* harmony export */   \"Bone\": () => (/* binding */ Bone),\n/* harmony export */   \"BooleanKeyframeTrack\": () => (/* binding */ BooleanKeyframeTrack),\n/* harmony export */   \"Box2\": () => (/* binding */ Box2),\n/* harmony export */   \"Box3\": () => (/* binding */ Box3),\n/* harmony export */   \"Box3Helper\": () => (/* binding */ Box3Helper),\n/* harmony export */   \"BoxBufferGeometry\": () => (/* binding */ BoxBufferGeometry),\n/* harmony export */   \"BoxGeometry\": () => (/* binding */ BoxGeometry),\n/* harmony export */   \"BoxHelper\": () => (/* binding */ BoxHelper),\n/* harmony export */   \"BufferAttribute\": () => (/* binding */ BufferAttribute),\n/* harmony export */   \"BufferGeometry\": () => (/* binding */ BufferGeometry),\n/* harmony export */   \"BufferGeometryLoader\": () => (/* binding */ BufferGeometryLoader),\n/* harmony export */   \"ByteType\": () => (/* binding */ ByteType),\n/* harmony export */   \"Cache\": () => (/* binding */ Cache),\n/* harmony export */   \"Camera\": () => (/* binding */ Camera),\n/* harmony export */   \"CameraHelper\": () => (/* binding */ CameraHelper),\n/* harmony export */   \"CanvasTexture\": () => (/* binding */ CanvasTexture),\n/* harmony export */   \"CapsuleBufferGeometry\": () => (/* binding */ CapsuleBufferGeometry),\n/* harmony export */   \"CapsuleGeometry\": () => (/* binding */ CapsuleGeometry),\n/* harmony export */   \"CatmullRomCurve3\": () => (/* binding */ CatmullRomCurve3),\n/* harmony export */   \"CineonToneMapping\": () => (/* binding */ CineonToneMapping),\n/* harmony export */   \"CircleBufferGeometry\": () => (/* binding */ CircleBufferGeometry),\n/* harmony export */   \"CircleGeometry\": () => (/* binding */ CircleGeometry),\n/* harmony export */   \"ClampToEdgeWrapping\": () => (/* binding */ ClampToEdgeWrapping),\n/* harmony export */   \"Clock\": () => (/* binding */ Clock),\n/* harmony export */   \"Color\": () => (/* binding */ Color),\n/* harmony export */   \"ColorKeyframeTrack\": () => (/* binding */ ColorKeyframeTrack),\n/* harmony export */   \"ColorManagement\": () => (/* binding */ ColorManagement),\n/* harmony export */   \"CompressedArrayTexture\": () => (/* binding */ CompressedArrayTexture),\n/* harmony export */   \"CompressedTexture\": () => (/* binding */ CompressedTexture),\n/* harmony export */   \"CompressedTextureLoader\": () => (/* binding */ CompressedTextureLoader),\n/* harmony export */   \"ConeBufferGeometry\": () => (/* binding */ ConeBufferGeometry),\n/* harmony export */   \"ConeGeometry\": () => (/* binding */ ConeGeometry),\n/* harmony export */   \"CubeCamera\": () => (/* binding */ CubeCamera),\n/* harmony export */   \"CubeReflectionMapping\": () => (/* binding */ CubeReflectionMapping),\n/* harmony export */   \"CubeRefractionMapping\": () => (/* binding */ CubeRefractionMapping),\n/* harmony export */   \"CubeTexture\": () => (/* binding */ CubeTexture),\n/* harmony export */   \"CubeTextureLoader\": () => (/* binding */ CubeTextureLoader),\n/* harmony export */   \"CubeUVReflectionMapping\": () => (/* binding */ CubeUVReflectionMapping),\n/* harmony export */   \"CubicBezierCurve\": () => (/* binding */ CubicBezierCurve),\n/* harmony export */   \"CubicBezierCurve3\": () => (/* binding */ CubicBezierCurve3),\n/* harmony export */   \"CubicInterpolant\": () => (/* binding */ CubicInterpolant),\n/* harmony export */   \"CullFaceBack\": () => (/* binding */ CullFaceBack),\n/* harmony export */   \"CullFaceFront\": () => (/* binding */ CullFaceFront),\n/* harmony export */   \"CullFaceFrontBack\": () => (/* binding */ CullFaceFrontBack),\n/* harmony export */   \"CullFaceNone\": () => (/* binding */ CullFaceNone),\n/* harmony export */   \"Curve\": () => (/* binding */ Curve),\n/* harmony export */   \"CurvePath\": () => (/* binding */ CurvePath),\n/* harmony export */   \"CustomBlending\": () => (/* binding */ CustomBlending),\n/* harmony export */   \"CustomToneMapping\": () => (/* binding */ CustomToneMapping),\n/* harmony export */   \"CylinderBufferGeometry\": () => (/* binding */ CylinderBufferGeometry),\n/* harmony export */   \"CylinderGeometry\": () => (/* binding */ CylinderGeometry),\n/* harmony export */   \"Cylindrical\": () => (/* binding */ Cylindrical),\n/* harmony export */   \"Data3DTexture\": () => (/* binding */ Data3DTexture),\n/* harmony export */   \"DataArrayTexture\": () => (/* binding */ DataArrayTexture),\n/* harmony export */   \"DataTexture\": () => (/* binding */ DataTexture),\n/* harmony export */   \"DataTextureLoader\": () => (/* binding */ DataTextureLoader),\n/* harmony export */   \"DataUtils\": () => (/* binding */ DataUtils),\n/* harmony export */   \"DecrementStencilOp\": () => (/* binding */ DecrementStencilOp),\n/* harmony export */   \"DecrementWrapStencilOp\": () => (/* binding */ DecrementWrapStencilOp),\n/* harmony export */   \"DefaultLoadingManager\": () => (/* binding */ DefaultLoadingManager),\n/* harmony export */   \"DepthFormat\": () => (/* binding */ DepthFormat),\n/* harmony export */   \"DepthStencilFormat\": () => (/* binding */ DepthStencilFormat),\n/* harmony export */   \"DepthTexture\": () => (/* binding */ DepthTexture),\n/* harmony export */   \"DirectionalLight\": () => (/* binding */ DirectionalLight),\n/* harmony export */   \"DirectionalLightHelper\": () => (/* binding */ DirectionalLightHelper),\n/* harmony export */   \"DiscreteInterpolant\": () => (/* binding */ DiscreteInterpolant),\n/* harmony export */   \"DisplayP3ColorSpace\": () => (/* binding */ DisplayP3ColorSpace),\n/* harmony export */   \"DodecahedronBufferGeometry\": () => (/* binding */ DodecahedronBufferGeometry),\n/* harmony export */   \"DodecahedronGeometry\": () => (/* binding */ DodecahedronGeometry),\n/* harmony export */   \"DoubleSide\": () => (/* binding */ DoubleSide),\n/* harmony export */   \"DstAlphaFactor\": () => (/* binding */ DstAlphaFactor),\n/* harmony export */   \"DstColorFactor\": () => (/* binding */ DstColorFactor),\n/* harmony export */   \"DynamicCopyUsage\": () => (/* binding */ DynamicCopyUsage),\n/* harmony export */   \"DynamicDrawUsage\": () => (/* binding */ DynamicDrawUsage),\n/* harmony export */   \"DynamicReadUsage\": () => (/* binding */ DynamicReadUsage),\n/* harmony export */   \"EdgesGeometry\": () => (/* binding */ EdgesGeometry),\n/* harmony export */   \"EllipseCurve\": () => (/* binding */ EllipseCurve),\n/* harmony export */   \"EqualDepth\": () => (/* binding */ EqualDepth),\n/* harmony export */   \"EqualStencilFunc\": () => (/* binding */ EqualStencilFunc),\n/* harmony export */   \"EquirectangularReflectionMapping\": () => (/* binding */ EquirectangularReflectionMapping),\n/* harmony export */   \"EquirectangularRefractionMapping\": () => (/* binding */ EquirectangularRefractionMapping),\n/* harmony export */   \"Euler\": () => (/* binding */ Euler),\n/* harmony export */   \"EventDispatcher\": () => (/* binding */ EventDispatcher),\n/* harmony export */   \"ExtrudeBufferGeometry\": () => (/* binding */ ExtrudeBufferGeometry),\n/* harmony export */   \"ExtrudeGeometry\": () => (/* binding */ ExtrudeGeometry),\n/* harmony export */   \"FileLoader\": () => (/* binding */ FileLoader),\n/* harmony export */   \"Float16BufferAttribute\": () => (/* binding */ Float16BufferAttribute),\n/* harmony export */   \"Float32BufferAttribute\": () => (/* binding */ Float32BufferAttribute),\n/* harmony export */   \"Float64BufferAttribute\": () => (/* binding */ Float64BufferAttribute),\n/* harmony export */   \"FloatType\": () => (/* binding */ FloatType),\n/* harmony export */   \"Fog\": () => (/* binding */ Fog),\n/* harmony export */   \"FogExp2\": () => (/* binding */ FogExp2),\n/* harmony export */   \"FramebufferTexture\": () => (/* binding */ FramebufferTexture),\n/* harmony export */   \"FrontSide\": () => (/* binding */ FrontSide),\n/* harmony export */   \"Frustum\": () => (/* binding */ Frustum),\n/* harmony export */   \"GLBufferAttribute\": () => (/* binding */ GLBufferAttribute),\n/* harmony export */   \"GLSL1\": () => (/* binding */ GLSL1),\n/* harmony export */   \"GLSL3\": () => (/* binding */ GLSL3),\n/* harmony export */   \"GreaterDepth\": () => (/* binding */ GreaterDepth),\n/* harmony export */   \"GreaterEqualDepth\": () => (/* binding */ GreaterEqualDepth),\n/* harmony export */   \"GreaterEqualStencilFunc\": () => (/* binding */ GreaterEqualStencilFunc),\n/* harmony export */   \"GreaterStencilFunc\": () => (/* binding */ GreaterStencilFunc),\n/* harmony export */   \"GridHelper\": () => (/* binding */ GridHelper),\n/* harmony export */   \"Group\": () => (/* binding */ Group),\n/* harmony export */   \"HalfFloatType\": () => (/* binding */ HalfFloatType),\n/* harmony export */   \"HemisphereLight\": () => (/* binding */ HemisphereLight),\n/* harmony export */   \"HemisphereLightHelper\": () => (/* binding */ HemisphereLightHelper),\n/* harmony export */   \"HemisphereLightProbe\": () => (/* binding */ HemisphereLightProbe),\n/* harmony export */   \"IcosahedronBufferGeometry\": () => (/* binding */ IcosahedronBufferGeometry),\n/* harmony export */   \"IcosahedronGeometry\": () => (/* binding */ IcosahedronGeometry),\n/* harmony export */   \"ImageBitmapLoader\": () => (/* binding */ ImageBitmapLoader),\n/* harmony export */   \"ImageLoader\": () => (/* binding */ ImageLoader),\n/* harmony export */   \"ImageUtils\": () => (/* binding */ ImageUtils),\n/* harmony export */   \"IncrementStencilOp\": () => (/* binding */ IncrementStencilOp),\n/* harmony export */   \"IncrementWrapStencilOp\": () => (/* binding */ IncrementWrapStencilOp),\n/* harmony export */   \"InstancedBufferAttribute\": () => (/* binding */ InstancedBufferAttribute),\n/* harmony export */   \"InstancedBufferGeometry\": () => (/* binding */ InstancedBufferGeometry),\n/* harmony export */   \"InstancedInterleavedBuffer\": () => (/* binding */ InstancedInterleavedBuffer),\n/* harmony export */   \"InstancedMesh\": () => (/* binding */ InstancedMesh),\n/* harmony export */   \"Int16BufferAttribute\": () => (/* binding */ Int16BufferAttribute),\n/* harmony export */   \"Int32BufferAttribute\": () => (/* binding */ Int32BufferAttribute),\n/* harmony export */   \"Int8BufferAttribute\": () => (/* binding */ Int8BufferAttribute),\n/* harmony export */   \"IntType\": () => (/* binding */ IntType),\n/* harmony export */   \"InterleavedBuffer\": () => (/* binding */ InterleavedBuffer),\n/* harmony export */   \"InterleavedBufferAttribute\": () => (/* binding */ InterleavedBufferAttribute),\n/* harmony export */   \"Interpolant\": () => (/* binding */ Interpolant),\n/* harmony export */   \"InterpolateDiscrete\": () => (/* binding */ InterpolateDiscrete),\n/* harmony export */   \"InterpolateLinear\": () => (/* binding */ InterpolateLinear),\n/* harmony export */   \"InterpolateSmooth\": () => (/* binding */ InterpolateSmooth),\n/* harmony export */   \"InvertStencilOp\": () => (/* binding */ InvertStencilOp),\n/* harmony export */   \"KeepStencilOp\": () => (/* binding */ KeepStencilOp),\n/* harmony export */   \"KeyframeTrack\": () => (/* binding */ KeyframeTrack),\n/* harmony export */   \"LOD\": () => (/* binding */ LOD),\n/* harmony export */   \"LatheBufferGeometry\": () => (/* binding */ LatheBufferGeometry),\n/* harmony export */   \"LatheGeometry\": () => (/* binding */ LatheGeometry),\n/* harmony export */   \"Layers\": () => (/* binding */ Layers),\n/* harmony export */   \"LessDepth\": () => (/* binding */ LessDepth),\n/* harmony export */   \"LessEqualDepth\": () => (/* binding */ LessEqualDepth),\n/* harmony export */   \"LessEqualStencilFunc\": () => (/* binding */ LessEqualStencilFunc),\n/* harmony export */   \"LessStencilFunc\": () => (/* binding */ LessStencilFunc),\n/* harmony export */   \"Light\": () => (/* binding */ Light),\n/* harmony export */   \"LightProbe\": () => (/* binding */ LightProbe),\n/* harmony export */   \"Line\": () => (/* binding */ Line),\n/* harmony export */   \"Line3\": () => (/* binding */ Line3),\n/* harmony export */   \"LineBasicMaterial\": () => (/* binding */ LineBasicMaterial),\n/* harmony export */   \"LineCurve\": () => (/* binding */ LineCurve),\n/* harmony export */   \"LineCurve3\": () => (/* binding */ LineCurve3),\n/* harmony export */   \"LineDashedMaterial\": () => (/* binding */ LineDashedMaterial),\n/* harmony export */   \"LineLoop\": () => (/* binding */ LineLoop),\n/* harmony export */   \"LineSegments\": () => (/* binding */ LineSegments),\n/* harmony export */   \"LinearEncoding\": () => (/* binding */ LinearEncoding),\n/* harmony export */   \"LinearFilter\": () => (/* binding */ LinearFilter),\n/* harmony export */   \"LinearInterpolant\": () => (/* binding */ LinearInterpolant),\n/* harmony export */   \"LinearMipMapLinearFilter\": () => (/* binding */ LinearMipMapLinearFilter),\n/* harmony export */   \"LinearMipMapNearestFilter\": () => (/* binding */ LinearMipMapNearestFilter),\n/* harmony export */   \"LinearMipmapLinearFilter\": () => (/* binding */ LinearMipmapLinearFilter),\n/* harmony export */   \"LinearMipmapNearestFilter\": () => (/* binding */ LinearMipmapNearestFilter),\n/* harmony export */   \"LinearSRGBColorSpace\": () => (/* binding */ LinearSRGBColorSpace),\n/* harmony export */   \"LinearToneMapping\": () => (/* binding */ LinearToneMapping),\n/* harmony export */   \"Loader\": () => (/* binding */ Loader),\n/* harmony export */   \"LoaderUtils\": () => (/* binding */ LoaderUtils),\n/* harmony export */   \"LoadingManager\": () => (/* binding */ LoadingManager),\n/* harmony export */   \"LoopOnce\": () => (/* binding */ LoopOnce),\n/* harmony export */   \"LoopPingPong\": () => (/* binding */ LoopPingPong),\n/* harmony export */   \"LoopRepeat\": () => (/* binding */ LoopRepeat),\n/* harmony export */   \"LuminanceAlphaFormat\": () => (/* binding */ LuminanceAlphaFormat),\n/* harmony export */   \"LuminanceFormat\": () => (/* binding */ LuminanceFormat),\n/* harmony export */   \"MOUSE\": () => (/* binding */ MOUSE),\n/* harmony export */   \"Material\": () => (/* binding */ Material),\n/* harmony export */   \"MaterialLoader\": () => (/* binding */ MaterialLoader),\n/* harmony export */   \"MathUtils\": () => (/* binding */ MathUtils),\n/* harmony export */   \"Matrix3\": () => (/* binding */ Matrix3),\n/* harmony export */   \"Matrix4\": () => (/* binding */ Matrix4),\n/* harmony export */   \"MaxEquation\": () => (/* binding */ MaxEquation),\n/* harmony export */   \"Mesh\": () => (/* binding */ Mesh),\n/* harmony export */   \"MeshBasicMaterial\": () => (/* binding */ MeshBasicMaterial),\n/* harmony export */   \"MeshDepthMaterial\": () => (/* binding */ MeshDepthMaterial),\n/* harmony export */   \"MeshDistanceMaterial\": () => (/* binding */ MeshDistanceMaterial),\n/* harmony export */   \"MeshLambertMaterial\": () => (/* binding */ MeshLambertMaterial),\n/* harmony export */   \"MeshMatcapMaterial\": () => (/* binding */ MeshMatcapMaterial),\n/* harmony export */   \"MeshNormalMaterial\": () => (/* binding */ MeshNormalMaterial),\n/* harmony export */   \"MeshPhongMaterial\": () => (/* binding */ MeshPhongMaterial),\n/* harmony export */   \"MeshPhysicalMaterial\": () => (/* binding */ MeshPhysicalMaterial),\n/* harmony export */   \"MeshStandardMaterial\": () => (/* binding */ MeshStandardMaterial),\n/* harmony export */   \"MeshToonMaterial\": () => (/* binding */ MeshToonMaterial),\n/* harmony export */   \"MinEquation\": () => (/* binding */ MinEquation),\n/* harmony export */   \"MirroredRepeatWrapping\": () => (/* binding */ MirroredRepeatWrapping),\n/* harmony export */   \"MixOperation\": () => (/* binding */ MixOperation),\n/* harmony export */   \"MultiplyBlending\": () => (/* binding */ MultiplyBlending),\n/* harmony export */   \"MultiplyOperation\": () => (/* binding */ MultiplyOperation),\n/* harmony export */   \"NearestFilter\": () => (/* binding */ NearestFilter),\n/* harmony export */   \"NearestMipMapLinearFilter\": () => (/* binding */ NearestMipMapLinearFilter),\n/* harmony export */   \"NearestMipMapNearestFilter\": () => (/* binding */ NearestMipMapNearestFilter),\n/* harmony export */   \"NearestMipmapLinearFilter\": () => (/* binding */ NearestMipmapLinearFilter),\n/* harmony export */   \"NearestMipmapNearestFilter\": () => (/* binding */ NearestMipmapNearestFilter),\n/* harmony export */   \"NeverDepth\": () => (/* binding */ NeverDepth),\n/* harmony export */   \"NeverStencilFunc\": () => (/* binding */ NeverStencilFunc),\n/* harmony export */   \"NoBlending\": () => (/* binding */ NoBlending),\n/* harmony export */   \"NoColorSpace\": () => (/* binding */ NoColorSpace),\n/* harmony export */   \"NoToneMapping\": () => (/* binding */ NoToneMapping),\n/* harmony export */   \"NormalAnimationBlendMode\": () => (/* binding */ NormalAnimationBlendMode),\n/* harmony export */   \"NormalBlending\": () => (/* binding */ NormalBlending),\n/* harmony export */   \"NotEqualDepth\": () => (/* binding */ NotEqualDepth),\n/* harmony export */   \"NotEqualStencilFunc\": () => (/* binding */ NotEqualStencilFunc),\n/* harmony export */   \"NumberKeyframeTrack\": () => (/* binding */ NumberKeyframeTrack),\n/* harmony export */   \"Object3D\": () => (/* binding */ Object3D),\n/* harmony export */   \"ObjectLoader\": () => (/* binding */ ObjectLoader),\n/* harmony export */   \"ObjectSpaceNormalMap\": () => (/* binding */ ObjectSpaceNormalMap),\n/* harmony export */   \"OctahedronBufferGeometry\": () => (/* binding */ OctahedronBufferGeometry),\n/* harmony export */   \"OctahedronGeometry\": () => (/* binding */ OctahedronGeometry),\n/* harmony export */   \"OneFactor\": () => (/* binding */ OneFactor),\n/* harmony export */   \"OneMinusDstAlphaFactor\": () => (/* binding */ OneMinusDstAlphaFactor),\n/* harmony export */   \"OneMinusDstColorFactor\": () => (/* binding */ OneMinusDstColorFactor),\n/* harmony export */   \"OneMinusSrcAlphaFactor\": () => (/* binding */ OneMinusSrcAlphaFactor),\n/* harmony export */   \"OneMinusSrcColorFactor\": () => (/* binding */ OneMinusSrcColorFactor),\n/* harmony export */   \"OrthographicCamera\": () => (/* binding */ OrthographicCamera),\n/* harmony export */   \"PCFShadowMap\": () => (/* binding */ PCFShadowMap),\n/* harmony export */   \"PCFSoftShadowMap\": () => (/* binding */ PCFSoftShadowMap),\n/* harmony export */   \"PMREMGenerator\": () => (/* binding */ PMREMGenerator),\n/* harmony export */   \"Path\": () => (/* binding */ Path),\n/* harmony export */   \"PerspectiveCamera\": () => (/* binding */ PerspectiveCamera),\n/* harmony export */   \"Plane\": () => (/* binding */ Plane),\n/* harmony export */   \"PlaneBufferGeometry\": () => (/* binding */ PlaneBufferGeometry),\n/* harmony export */   \"PlaneGeometry\": () => (/* binding */ PlaneGeometry),\n/* harmony export */   \"PlaneHelper\": () => (/* binding */ PlaneHelper),\n/* harmony export */   \"PointLight\": () => (/* binding */ PointLight),\n/* harmony export */   \"PointLightHelper\": () => (/* binding */ PointLightHelper),\n/* harmony export */   \"Points\": () => (/* binding */ Points),\n/* harmony export */   \"PointsMaterial\": () => (/* binding */ PointsMaterial),\n/* harmony export */   \"PolarGridHelper\": () => (/* binding */ PolarGridHelper),\n/* harmony export */   \"PolyhedronBufferGeometry\": () => (/* binding */ PolyhedronBufferGeometry),\n/* harmony export */   \"PolyhedronGeometry\": () => (/* binding */ PolyhedronGeometry),\n/* harmony export */   \"PositionalAudio\": () => (/* binding */ PositionalAudio),\n/* harmony export */   \"PropertyBinding\": () => (/* binding */ PropertyBinding),\n/* harmony export */   \"PropertyMixer\": () => (/* binding */ PropertyMixer),\n/* harmony export */   \"QuadraticBezierCurve\": () => (/* binding */ QuadraticBezierCurve),\n/* harmony export */   \"QuadraticBezierCurve3\": () => (/* binding */ QuadraticBezierCurve3),\n/* harmony export */   \"Quaternion\": () => (/* binding */ Quaternion),\n/* harmony export */   \"QuaternionKeyframeTrack\": () => (/* binding */ QuaternionKeyframeTrack),\n/* harmony export */   \"QuaternionLinearInterpolant\": () => (/* binding */ QuaternionLinearInterpolant),\n/* harmony export */   \"RED_GREEN_RGTC2_Format\": () => (/* binding */ RED_GREEN_RGTC2_Format),\n/* harmony export */   \"RED_RGTC1_Format\": () => (/* binding */ RED_RGTC1_Format),\n/* harmony export */   \"REVISION\": () => (/* binding */ REVISION),\n/* harmony export */   \"RGBADepthPacking\": () => (/* binding */ RGBADepthPacking),\n/* harmony export */   \"RGBAFormat\": () => (/* binding */ RGBAFormat),\n/* harmony export */   \"RGBAIntegerFormat\": () => (/* binding */ RGBAIntegerFormat),\n/* harmony export */   \"RGBA_ASTC_10x10_Format\": () => (/* binding */ RGBA_ASTC_10x10_Format),\n/* harmony export */   \"RGBA_ASTC_10x5_Format\": () => (/* binding */ RGBA_ASTC_10x5_Format),\n/* harmony export */   \"RGBA_ASTC_10x6_Format\": () => (/* binding */ RGBA_ASTC_10x6_Format),\n/* harmony export */   \"RGBA_ASTC_10x8_Format\": () => (/* binding */ RGBA_ASTC_10x8_Format),\n/* harmony export */   \"RGBA_ASTC_12x10_Format\": () => (/* binding */ RGBA_ASTC_12x10_Format),\n/* harmony export */   \"RGBA_ASTC_12x12_Format\": () => (/* binding */ RGBA_ASTC_12x12_Format),\n/* harmony export */   \"RGBA_ASTC_4x4_Format\": () => (/* binding */ RGBA_ASTC_4x4_Format),\n/* harmony export */   \"RGBA_ASTC_5x4_Format\": () => (/* binding */ RGBA_ASTC_5x4_Format),\n/* harmony export */   \"RGBA_ASTC_5x5_Format\": () => (/* binding */ RGBA_ASTC_5x5_Format),\n/* harmony export */   \"RGBA_ASTC_6x5_Format\": () => (/* binding */ RGBA_ASTC_6x5_Format),\n/* harmony export */   \"RGBA_ASTC_6x6_Format\": () => (/* binding */ RGBA_ASTC_6x6_Format),\n/* harmony export */   \"RGBA_ASTC_8x5_Format\": () => (/* binding */ RGBA_ASTC_8x5_Format),\n/* harmony export */   \"RGBA_ASTC_8x6_Format\": () => (/* binding */ RGBA_ASTC_8x6_Format),\n/* harmony export */   \"RGBA_ASTC_8x8_Format\": () => (/* binding */ RGBA_ASTC_8x8_Format),\n/* harmony export */   \"RGBA_BPTC_Format\": () => (/* binding */ RGBA_BPTC_Format),\n/* harmony export */   \"RGBA_ETC2_EAC_Format\": () => (/* binding */ RGBA_ETC2_EAC_Format),\n/* harmony export */   \"RGBA_PVRTC_2BPPV1_Format\": () => (/* binding */ RGBA_PVRTC_2BPPV1_Format),\n/* harmony export */   \"RGBA_PVRTC_4BPPV1_Format\": () => (/* binding */ RGBA_PVRTC_4BPPV1_Format),\n/* harmony export */   \"RGBA_S3TC_DXT1_Format\": () => (/* binding */ RGBA_S3TC_DXT1_Format),\n/* harmony export */   \"RGBA_S3TC_DXT3_Format\": () => (/* binding */ RGBA_S3TC_DXT3_Format),\n/* harmony export */   \"RGBA_S3TC_DXT5_Format\": () => (/* binding */ RGBA_S3TC_DXT5_Format),\n/* harmony export */   \"RGB_ETC1_Format\": () => (/* binding */ RGB_ETC1_Format),\n/* harmony export */   \"RGB_ETC2_Format\": () => (/* binding */ RGB_ETC2_Format),\n/* harmony export */   \"RGB_PVRTC_2BPPV1_Format\": () => (/* binding */ RGB_PVRTC_2BPPV1_Format),\n/* harmony export */   \"RGB_PVRTC_4BPPV1_Format\": () => (/* binding */ RGB_PVRTC_4BPPV1_Format),\n/* harmony export */   \"RGB_S3TC_DXT1_Format\": () => (/* binding */ RGB_S3TC_DXT1_Format),\n/* harmony export */   \"RGFormat\": () => (/* binding */ RGFormat),\n/* harmony export */   \"RGIntegerFormat\": () => (/* binding */ RGIntegerFormat),\n/* harmony export */   \"RawShaderMaterial\": () => (/* binding */ RawShaderMaterial),\n/* harmony export */   \"Ray\": () => (/* binding */ Ray),\n/* harmony export */   \"Raycaster\": () => (/* binding */ Raycaster),\n/* harmony export */   \"RectAreaLight\": () => (/* binding */ RectAreaLight),\n/* harmony export */   \"RedFormat\": () => (/* binding */ RedFormat),\n/* harmony export */   \"RedIntegerFormat\": () => (/* binding */ RedIntegerFormat),\n/* harmony export */   \"ReinhardToneMapping\": () => (/* binding */ ReinhardToneMapping),\n/* harmony export */   \"RepeatWrapping\": () => (/* binding */ RepeatWrapping),\n/* harmony export */   \"ReplaceStencilOp\": () => (/* binding */ ReplaceStencilOp),\n/* harmony export */   \"ReverseSubtractEquation\": () => (/* binding */ ReverseSubtractEquation),\n/* harmony export */   \"RingBufferGeometry\": () => (/* binding */ RingBufferGeometry),\n/* harmony export */   \"RingGeometry\": () => (/* binding */ RingGeometry),\n/* harmony export */   \"SIGNED_RED_GREEN_RGTC2_Format\": () => (/* binding */ SIGNED_RED_GREEN_RGTC2_Format),\n/* harmony export */   \"SIGNED_RED_RGTC1_Format\": () => (/* binding */ SIGNED_RED_RGTC1_Format),\n/* harmony export */   \"SRGBColorSpace\": () => (/* binding */ SRGBColorSpace),\n/* harmony export */   \"Scene\": () => (/* binding */ Scene),\n/* harmony export */   \"ShaderChunk\": () => (/* binding */ ShaderChunk),\n/* harmony export */   \"ShaderLib\": () => (/* binding */ ShaderLib),\n/* harmony export */   \"ShaderMaterial\": () => (/* binding */ ShaderMaterial),\n/* harmony export */   \"ShadowMaterial\": () => (/* binding */ ShadowMaterial),\n/* harmony export */   \"Shape\": () => (/* binding */ Shape),\n/* harmony export */   \"ShapeBufferGeometry\": () => (/* binding */ ShapeBufferGeometry),\n/* harmony export */   \"ShapeGeometry\": () => (/* binding */ ShapeGeometry),\n/* harmony export */   \"ShapePath\": () => (/* binding */ ShapePath),\n/* harmony export */   \"ShapeUtils\": () => (/* binding */ ShapeUtils),\n/* harmony export */   \"ShortType\": () => (/* binding */ ShortType),\n/* harmony export */   \"Skeleton\": () => (/* binding */ Skeleton),\n/* harmony export */   \"SkeletonHelper\": () => (/* binding */ SkeletonHelper),\n/* harmony export */   \"SkinnedMesh\": () => (/* binding */ SkinnedMesh),\n/* harmony export */   \"Source\": () => (/* binding */ Source),\n/* harmony export */   \"Sphere\": () => (/* binding */ Sphere),\n/* harmony export */   \"SphereBufferGeometry\": () => (/* binding */ SphereBufferGeometry),\n/* harmony export */   \"SphereGeometry\": () => (/* binding */ SphereGeometry),\n/* harmony export */   \"Spherical\": () => (/* binding */ Spherical),\n/* harmony export */   \"SphericalHarmonics3\": () => (/* binding */ SphericalHarmonics3),\n/* harmony export */   \"SplineCurve\": () => (/* binding */ SplineCurve),\n/* harmony export */   \"SpotLight\": () => (/* binding */ SpotLight),\n/* harmony export */   \"SpotLightHelper\": () => (/* binding */ SpotLightHelper),\n/* harmony export */   \"Sprite\": () => (/* binding */ Sprite),\n/* harmony export */   \"SpriteMaterial\": () => (/* binding */ SpriteMaterial),\n/* harmony export */   \"SrcAlphaFactor\": () => (/* binding */ SrcAlphaFactor),\n/* harmony export */   \"SrcAlphaSaturateFactor\": () => (/* binding */ SrcAlphaSaturateFactor),\n/* harmony export */   \"SrcColorFactor\": () => (/* binding */ SrcColorFactor),\n/* harmony export */   \"StaticCopyUsage\": () => (/* binding */ StaticCopyUsage),\n/* harmony export */   \"StaticDrawUsage\": () => (/* binding */ StaticDrawUsage),\n/* harmony export */   \"StaticReadUsage\": () => (/* binding */ StaticReadUsage),\n/* harmony export */   \"StereoCamera\": () => (/* binding */ StereoCamera),\n/* harmony export */   \"StreamCopyUsage\": () => (/* binding */ StreamCopyUsage),\n/* harmony export */   \"StreamDrawUsage\": () => (/* binding */ StreamDrawUsage),\n/* harmony export */   \"StreamReadUsage\": () => (/* binding */ StreamReadUsage),\n/* harmony export */   \"StringKeyframeTrack\": () => (/* binding */ StringKeyframeTrack),\n/* harmony export */   \"SubtractEquation\": () => (/* binding */ SubtractEquation),\n/* harmony export */   \"SubtractiveBlending\": () => (/* binding */ SubtractiveBlending),\n/* harmony export */   \"TOUCH\": () => (/* binding */ TOUCH),\n/* harmony export */   \"TangentSpaceNormalMap\": () => (/* binding */ TangentSpaceNormalMap),\n/* harmony export */   \"TetrahedronBufferGeometry\": () => (/* binding */ TetrahedronBufferGeometry),\n/* harmony export */   \"TetrahedronGeometry\": () => (/* binding */ TetrahedronGeometry),\n/* harmony export */   \"Texture\": () => (/* binding */ Texture),\n/* harmony export */   \"TextureLoader\": () => (/* binding */ TextureLoader),\n/* harmony export */   \"TorusBufferGeometry\": () => (/* binding */ TorusBufferGeometry),\n/* harmony export */   \"TorusGeometry\": () => (/* binding */ TorusGeometry),\n/* harmony export */   \"TorusKnotBufferGeometry\": () => (/* binding */ TorusKnotBufferGeometry),\n/* harmony export */   \"TorusKnotGeometry\": () => (/* binding */ TorusKnotGeometry),\n/* harmony export */   \"Triangle\": () => (/* binding */ Triangle),\n/* harmony export */   \"TriangleFanDrawMode\": () => (/* binding */ TriangleFanDrawMode),\n/* harmony export */   \"TriangleStripDrawMode\": () => (/* binding */ TriangleStripDrawMode),\n/* harmony export */   \"TrianglesDrawMode\": () => (/* binding */ TrianglesDrawMode),\n/* harmony export */   \"TubeBufferGeometry\": () => (/* binding */ TubeBufferGeometry),\n/* harmony export */   \"TubeGeometry\": () => (/* binding */ TubeGeometry),\n/* harmony export */   \"TwoPassDoubleSide\": () => (/* binding */ TwoPassDoubleSide),\n/* harmony export */   \"UVMapping\": () => (/* binding */ UVMapping),\n/* harmony export */   \"Uint16BufferAttribute\": () => (/* binding */ Uint16BufferAttribute),\n/* harmony export */   \"Uint32BufferAttribute\": () => (/* binding */ Uint32BufferAttribute),\n/* harmony export */   \"Uint8BufferAttribute\": () => (/* binding */ Uint8BufferAttribute),\n/* harmony export */   \"Uint8ClampedBufferAttribute\": () => (/* binding */ Uint8ClampedBufferAttribute),\n/* harmony export */   \"Uniform\": () => (/* binding */ Uniform),\n/* harmony export */   \"UniformsGroup\": () => (/* binding */ UniformsGroup),\n/* harmony export */   \"UniformsLib\": () => (/* binding */ UniformsLib),\n/* harmony export */   \"UniformsUtils\": () => (/* binding */ UniformsUtils),\n/* harmony export */   \"UnsignedByteType\": () => (/* binding */ UnsignedByteType),\n/* harmony export */   \"UnsignedInt248Type\": () => (/* binding */ UnsignedInt248Type),\n/* harmony export */   \"UnsignedIntType\": () => (/* binding */ UnsignedIntType),\n/* harmony export */   \"UnsignedShort4444Type\": () => (/* binding */ UnsignedShort4444Type),\n/* harmony export */   \"UnsignedShort5551Type\": () => (/* binding */ UnsignedShort5551Type),\n/* harmony export */   \"UnsignedShortType\": () => (/* binding */ UnsignedShortType),\n/* harmony export */   \"VSMShadowMap\": () => (/* binding */ VSMShadowMap),\n/* harmony export */   \"Vector2\": () => (/* binding */ Vector2),\n/* harmony export */   \"Vector3\": () => (/* binding */ Vector3),\n/* harmony export */   \"Vector4\": () => (/* binding */ Vector4),\n/* harmony export */   \"VectorKeyframeTrack\": () => (/* binding */ VectorKeyframeTrack),\n/* harmony export */   \"VideoTexture\": () => (/* binding */ VideoTexture),\n/* harmony export */   \"WebGL1Renderer\": () => (/* binding */ WebGL1Renderer),\n/* harmony export */   \"WebGL3DRenderTarget\": () => (/* binding */ WebGL3DRenderTarget),\n/* harmony export */   \"WebGLArrayRenderTarget\": () => (/* binding */ WebGLArrayRenderTarget),\n/* harmony export */   \"WebGLCubeRenderTarget\": () => (/* binding */ WebGLCubeRenderTarget),\n/* harmony export */   \"WebGLMultipleRenderTargets\": () => (/* binding */ WebGLMultipleRenderTargets),\n/* harmony export */   \"WebGLRenderTarget\": () => (/* binding */ WebGLRenderTarget),\n/* harmony export */   \"WebGLRenderer\": () => (/* binding */ WebGLRenderer),\n/* harmony export */   \"WebGLUtils\": () => (/* binding */ WebGLUtils),\n/* harmony export */   \"WireframeGeometry\": () => (/* binding */ WireframeGeometry),\n/* harmony export */   \"WrapAroundEnding\": () => (/* binding */ WrapAroundEnding),\n/* harmony export */   \"ZeroCurvatureEnding\": () => (/* binding */ ZeroCurvatureEnding),\n/* harmony export */   \"ZeroFactor\": () => (/* binding */ ZeroFactor),\n/* harmony export */   \"ZeroSlopeEnding\": () => (/* binding */ ZeroSlopeEnding),\n/* harmony export */   \"ZeroStencilOp\": () => (/* binding */ ZeroStencilOp),\n/* harmony export */   \"_SRGBAFormat\": () => (/* binding */ _SRGBAFormat),\n/* harmony export */   \"sRGBEncoding\": () => (/* binding */ sRGBEncoding)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '150';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, x,\n\t\t\t0, 1, y,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$d.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$d );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$d.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$d = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = new Matrix3().fromArray( [\n\t0.8224621, 0.0331941, 0.0170827,\n\t0.1775380, 0.9668058, 0.0723974,\n\t- 0.0000001, 0.0000001, 0.9105199\n] );\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = new Matrix3().fromArray( [\n\t1.2249401, - 0.0420569, - 0.0196376,\n\t- 0.2249404, 1.0420571, - 0.0786361,\n\t0.0000001, 0.0000000, 1.0982735\n] );\n\nconst _vector$c = new Vector3();\n\nfunction DisplayP3ToLinearSRGB( color ) {\n\n\tcolor.convertSRGBToLinear();\n\n\t_vector$c.set( color.r, color.g, color.b ).applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB );\n\n\treturn color.setRGB( _vector$c.x, _vector$c.y, _vector$c.z );\n\n}\n\nfunction LinearSRGBToDisplayP3( color ) {\n\n\t_vector$c.set( color.r, color.g, color.b ).applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 );\n\n\treturn color.setRGB( _vector$c.x, _vector$c.y, _vector$c.z ).convertLinearToSRGB();\n\n}\n\n// Conversions from <source> to Linear-sRGB reference space.\nconst TO_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertSRGBToLinear(),\n\t[ DisplayP3ColorSpace ]: DisplayP3ToLinearSRGB,\n};\n\n// Conversions to <target> from Linear-sRGB reference space.\nconst FROM_LINEAR = {\n\t[ LinearSRGBColorSpace ]: ( color ) => color,\n\t[ SRGBColorSpace ]: ( color ) => color.convertLinearToSRGB(),\n\t[ DisplayP3ColorSpace ]: LinearSRGBToDisplayP3,\n};\n\nconst ColorManagement = {\n\n\tenabled: false,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn LinearSRGBColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .workingColorSpace is readonly.' );\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToLinear = TO_LINEAR[ sourceColorSpace ];\n\t\tconst targetFromLinear = FROM_LINEAR[ targetColorSpace ];\n\n\t\tif ( sourceToLinear === undefined || targetFromLinear === undefined ) {\n\n\t\t\tthrow new Error( `Unsupported color space conversion, \"${ sourceColorSpace }\" to \"${ targetColorSpace }\".` );\n\n\t\t}\n\n\t\treturn targetFromLinear( sourceToLinear( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t},\n\n};\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t\tthis.samples = options.samples !== undefined ? options.samples : 0;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( width, height );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\t_vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$3 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value ) {\n\n\t\tlet result = [];\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst childResult = this.children[ i ].getObjectsByProperty( name, value );\n\n\t\t\tif ( childResult.length > 0 ) {\n\n\t\t\t\tresult = result.concat( childResult );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = this.forceSinglePass;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseFloat( color[ 2 ] ) / 100;\n\t\t\t\t\t\tconst l = parseFloat( color[ 3 ] ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l, colorSpace );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\t\t\treturn this;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn clamp( _color.r * 255, 0, 255 ) << 16 ^ clamp( _color.g * 255, 0, 255 ) << 8 ^ clamp( _color.b * 255, 0, 255 ) << 0;\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${( r * 255 ) | 0},${( g * 255 ) | 0},${( b * 255 ) | 0})`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = new Color();\n\nColor.NAMES = _colorKeywords;\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tcopyColorsArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyColorsArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector2sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector2sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector3sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector3sArray() was removed in r144.' );\n\n\t}\n\n\tcopyVector4sArray() {\n\n\t\tconsole.error( 'THREE.BufferAttribute: copyVector4sArray() was removed in r144.' );\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\t// @deprecated since r144\n\n\tmerge() {\n\n\t\tconsole.error( 'THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.' );\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tthis.boneTransform( index, target );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\t_ray$2.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$3.containsPoint( _ray$2.origin ) === false ) {\n\n\t\t\tif ( _ray$2.intersectSphere( _sphere$3, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$2.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv2 = geometry.attributes.uv2;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, uv, uv2, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, uv, uv2, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputEncoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\treturn LinearSRGBColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, 1, 0 );\n\t\tcameraPX.lookAt( 1, 0, 0 );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, 1, 0 );\n\t\tcameraNX.lookAt( - 1, 0, 0 );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\tcameraPY.lookAt( 0, 1, 0 );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, 1 );\n\t\tcameraNY.lookAt( 0, - 1, 0 );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\tcameraPZ.lookAt( 0, 0, 1 );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst currentToneMapping = renderer.toneMapping;\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.toneMapping = currentToneMapping;\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = 5121;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\n#ifdef USE_IRIDESCENCE\\n\\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\t return vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat R21 = R12;\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos.xyz );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos.xyz );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nfloat w0( float a ) {\\n\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n}\\nfloat w1( float a ) {\\n\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n}\\nfloat w2( float a ){\\n    return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n}\\nfloat w3( float a ) {\\n\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n}\\nfloat g0( float a ) {\\n\\treturn w0( a ) + w1( a );\\n}\\nfloat g1( float a ) {\\n\\treturn w2( a ) + w3( a );\\n}\\nfloat h0( float a ) {\\n\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n}\\nfloat h1( float a ) {\\n    return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n}\\nvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {\\n\\tuv = uv * texelSize.zw + 0.5;\\n\\tvec2 iuv = floor( uv );\\n    vec2 fuv = fract( uv );\\n    float g0x = g0( fuv.x );\\n    float g1x = g1( fuv.x );\\n    float h0x = h0( fuv.x );\\n    float h1x = h1( fuv.x );\\n    float h0y = h0( fuv.y );\\n    float h1y = h1( fuv.y );\\n    vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n    vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n    vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n    vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n    \\n    vec2 lodFudge = pow( 1.95, lod ) / fullSize;\\n\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t   g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n}\\nvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\tvec2 fullSize = vec2( textureSize( sampler, 0 ) );\\n\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );\\n\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );\\n\\treturn mix( fSample, cSample, fract( lod ) );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\\n\\t#else\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tuniform int boneTextureSize;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tfloat j = i * 4.0;\\n\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\ty = dy * ( y + 0.5 );\\n\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\treturn bone;\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\toutput_fragment: output_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tuv2Transform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ( background.encoding === sRGBEncoding ) ? false : true;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ( background.encoding === sRGBEncoding ) ? false : true;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tencoding: LinearEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === 35674 ) locationSize = 2;\n\t\tif ( info.type === 35675 ) locationSize = 3;\n\t\tif ( info.type === 35676 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tuseLegacyLights: renderer.useLegacyLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( 3088 );\n\tconst viewportParam = gl.getParameter( 2978 );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = 36064 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== 36064 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = 36064;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== 1029 ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = 1029;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 769, 0, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = 33984 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, encoding, forceLinearEncoding = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 33319 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33328;\n\t\t\tif ( glType === 5131 ) internalFormat = 33327;\n\t\t\tif ( glType === 5121 ) internalFormat = 33323;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && forceLinearEncoding === false ) ? 35907 : 32856;\n\t\t\tif ( glType === 32819 ) internalFormat = 32854;\n\t\t\tif ( glType === 32820 ) internalFormat = 32855;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 33327 || internalFormat === 33328 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.encoding );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = 35866;\n\t\tif ( texture.isData3DTexture ) textureType = 32879;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( 35866, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( 35866, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture, 33984 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.encoding ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === 3553 || ( textureTarget >= 34069 && textureTarget <= 34074 ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.encoding );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( 3553, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = 16384;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, null );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( 36064 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36008, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( 36009, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( 36008, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\tstate.bindFramebuffer( 36009, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064 + i, 36161, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( 36009, 36064 + i, 3553, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst encoding = texture.encoding;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( encoding !== LinearEncoding ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return 6403;\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst planes = new Set();\n\t\tconst planesLastChangedTimes = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? 35056 : 33190;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: 32856,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tencoding: renderer.outputEncoding,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\tcameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\n\n\t\t\t// update user camera and its children\n\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getPlanes = function () {\n\n\t\t\treturn planes;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame.detectedPlanes } );\n\n\t\t\t\tlet planesToRemove = null;\n\n\t\t\t\tfor ( const plane of planes ) {\n\n\t\t\t\t\tif ( ! frame.detectedPlanes.has( plane ) ) {\n\n\t\t\t\t\t\tif ( planesToRemove === null ) {\n\n\t\t\t\t\t\t\tplanesToRemove = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tplanesToRemove.push( plane );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( planesToRemove !== null ) {\n\n\t\t\t\t\tfor ( const plane of planesToRemove ) {\n\n\t\t\t\t\t\tplanes.delete( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.delete( plane );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeremoved', data: plane } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( const plane of frame.detectedPlanes ) {\n\n\t\t\t\t\tif ( ! planes.has( plane ) ) {\n\n\t\t\t\t\t\tplanes.add( plane );\n\t\t\t\t\t\tplanesLastChangedTimes.set( plane, frame.lastChangedTime );\n\t\t\t\t\t\tscope.dispatchEvent( { type: 'planeadded', data: plane } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst lastKnownTime = planesLastChangedTimes.get( plane );\n\n\t\t\t\t\t\tif ( plane.lastChangedTime > lastKnownTime ) {\n\n\t\t\t\t\t\t\tplanesLastChangedTimes.set( plane, plane.lastChangedTime );\n\t\t\t\t\t\t\tscope.dispatchEvent( { type: 'planechanged', data: plane } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer.useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\t\t// 13. iridescence map\n\t\t// 14. iridescence thickness map\n\t\t// 15. specular intensity map\n\t\t// 16. specular tint map\n\t\t// 17. transmission map\n\t\t// 18. thickness map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t} else if ( material.iridescenceMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceMap;\n\n\t\t} else if ( material.iridescenceThicknessMap ) {\n\n\t\t\tuvScaleMap = material.iridescenceThicknessMap;\n\n\t\t} else if ( material.specularIntensityMap ) {\n\n\t\t\tuvScaleMap = material.specularIntensityMap;\n\n\t\t} else if ( material.specularColorMap ) {\n\n\t\t\tuvScaleMap = material.specularColorMap;\n\n\t\t} else if ( material.transmissionMap ) {\n\n\t\t\tuvScaleMap = material.transmissionMap;\n\n\t\t} else if ( material.thicknessMap ) {\n\n\t\t\tuvScaleMap = material.thicknessMap;\n\n\t\t} else if ( material.sheenColorMap ) {\n\n\t\t\tuvScaleMap = material.sheenColorMap;\n\n\t\t} else if ( material.sheenRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.sheenRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t}\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( 35345, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters = {} ) {\n\n\tthis.isWebGLRenderer = true;\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet _alpha;\n\n\tif ( _context !== null ) {\n\n\t\t_alpha = _context.getContextAttributes().alpha;\n\n\t} else {\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false;\n\n\t}\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.useLegacyLights = true;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// transmission\n\n\tlet _transmissionRenderTarget = null;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: true,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\tif ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates, uniformsGroups;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo();\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle === true ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color ) bits |= 16384;\n\t\tif ( depth ) bits |= 256;\n\t\tif ( stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t_canvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tcubeuvmaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\t\tprogramCache.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t_transmissionRenderTarget = null;\n\n\t\t}\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onContextCreationError( event ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\t//\n\n\t\tconst drawRange = geometry.drawRange;\n\t\tconst position = geometry.attributes.position;\n\n\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\tif ( group !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t}\n\n\t\tconst drawCount = drawEnd - drawStart;\n\n\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t//\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tfunction prepare( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tprepare( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tprepare( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\trenderStateStack.pop();\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene );\n\n\t\t// render scene\n\n\t\tcurrentRenderState.setupLights( _this.useLegacyLights );\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tconst cameras = camera.cameras;\n\n\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\n\n\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t}\n\n\tfunction renderTransmissionPass( opaqueObjects, scene, camera ) {\n\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1024, 1024, {\n\t\t\t\tgenerateMipmaps: true,\n\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\tsamples: ( isWebGL2 && _antialias === true ) ? 4 : 0\n\t\t\t} );\n\n\t\t}\n\n\t\t//\n\n\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\t\t_this.clear();\n\n\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\tconst currentToneMapping = _this.toneMapping;\n\t\t_this.toneMapping = NoToneMapping;\n\n\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t_this.toneMapping = currentToneMapping;\n\n\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\tmaterial.side = BackSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = FrontSide;\n\t\t\tmaterial.needsUpdate = true;\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\tmaterial.side = DoubleSide;\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.skinning = parameters.skinning;\n\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t}\n\n\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\tconst vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\n\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\tconst morphColors = !! geometry.morphAttributes.color;\n\t\tconst toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tobject.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tlet useDefaultFramebuffer = true;\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\tstate.bindFramebuffer( 36160, null );\n\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t}\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tconst framebufferBound = state.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t_gl.pixelStorei( 3314, image.width );\n\t\t_gl.pixelStorei( 32878, image.height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t} else {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t}\n\n}\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\t// @deprecated since r150\n\n\tphysicallyCorrectLights: {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\t\treturn ! this.useLegacyLights;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\t\tthis.useLegacyLights = ! value;\n\n\t\t}\n\n\t}\n\n} );\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n\t// @deprecated\n\n\tget autoUpdate() {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\treturn this.matrixWorldAutoUpdate;\n\n\t}\n\n\tset autoUpdate( value ) {\n\n\t\tconsole.warn( 'THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.' );\n\t\tthis.matrixWorldAutoUpdate = value;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( target ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = ceilPowerOfTwo( size );\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\t\tthis.boneTextureSize = size;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height, format ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.format = format;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// same as Array.prototype.slice, but also works on typed arrays\nfunction arraySlice( array, from, to ) {\n\n\tif ( isTypedArray( array ) ) {\n\n\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t}\n\n\treturn array.slice( from, to );\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tarraySlice: arraySlice,\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = arraySlice( times, from, to );\n\t\t\tthis.values = arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = arraySlice( this.times ),\n\t\t\tvalues = arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = arraySlice( this.times, 0 );\n\t\tconst values = arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isAmbientLightProbe = true;\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\n// r144\n\nclass BoxBufferGeometry extends BoxGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tconsole.warn( 'THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.' );\n\t\tsuper( width, height, depth, widthSegments, heightSegments, depthSegments );\n\n\n\t}\n\n}\n\n// r144\n\nclass CapsuleBufferGeometry extends CapsuleGeometry {\n\n\tconstructor( radius, length, capSegments, radialSegments ) {\n\n\t\tconsole.warn( 'THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.' );\n\t\tsuper( radius, length, capSegments, radialSegments );\n\n\t}\n\n}\n\n// r144\n\nclass CircleBufferGeometry extends CircleGeometry {\n\n\tconstructor( radius, segments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.' );\n\t\tsuper( radius, segments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ConeBufferGeometry extends ConeGeometry {\n\n\tconstructor( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.' );\n\t\tsuper( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass CylinderBufferGeometry extends CylinderGeometry {\n\n\tconstructor( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.' );\n\t\tsuper( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass DodecahedronBufferGeometry extends DodecahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass ExtrudeBufferGeometry extends ExtrudeGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.' );\n\t\tsuper( shapes, options );\n\n\t}\n\n}\n\n// r144\n\nclass IcosahedronBufferGeometry extends IcosahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass LatheBufferGeometry extends LatheGeometry {\n\n\tconstructor( points, segments, phiStart, phiLength ) {\n\n\t\tconsole.warn( 'THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.' );\n\t\tsuper( points, segments, phiStart, phiLength );\n\n\t}\n\n}\n\n// r144\n\nclass OctahedronBufferGeometry extends OctahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass PlaneBufferGeometry extends PlaneGeometry {\n\n\tconstructor( width, height, widthSegments, heightSegments ) {\n\n\t\tconsole.warn( 'THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.' );\n\t\tsuper( width, height, widthSegments, heightSegments );\n\n\t}\n\n}\n\n// r144\n\nclass PolyhedronBufferGeometry extends PolyhedronGeometry {\n\n\tconstructor( vertices, indices, radius, detail ) {\n\n\t\tconsole.warn( 'THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.' );\n\t\tsuper( vertices, indices, radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass RingBufferGeometry extends RingGeometry {\n\n\tconstructor( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.' );\n\t\tsuper( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass ShapeBufferGeometry extends ShapeGeometry {\n\n\tconstructor( shapes, curveSegments ) {\n\n\t\tconsole.warn( 'THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.' );\n\t\tsuper( shapes, curveSegments );\n\n\t}\n\n}\n\n// r144\n\nclass SphereBufferGeometry extends SphereGeometry {\n\n\tconstructor( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tconsole.warn( 'THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.' );\n\t\tsuper( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength );\n\n\t}\n\n}\n\n// r144\n\nclass TetrahedronBufferGeometry extends TetrahedronGeometry {\n\n\tconstructor( radius, detail ) {\n\n\t\tconsole.warn( 'THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.' );\n\t\tsuper( radius, detail );\n\n\t}\n\n}\n\n// r144\n\nclass TorusBufferGeometry extends TorusGeometry {\n\n\tconstructor( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tconsole.warn( 'THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.' );\n\t\tsuper( radius, tube, radialSegments, tubularSegments, arc );\n\n\t}\n\n}\n\n// r144\n\nclass TorusKnotBufferGeometry extends TorusKnotGeometry {\n\n\tconstructor( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tconsole.warn( 'THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.' );\n\t\tsuper( radius, tube, tubularSegments, radialSegments, p, q );\n\n\t}\n\n}\n\n// r144\n\nclass TubeBufferGeometry extends TubeGeometry {\n\n\tconstructor( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tconsole.warn( 'THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.' );\n\t\tsuper( path, tubularSegments, radius, radialSegments, closed );\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\n\n\n\n//# sourceURL=webpack://client/./node_modules/three/build/three.module.js?");

/***/ }),

/***/ "./node_modules/three/examples/jsm/controls/OrbitControls.js":
/*!*******************************************************************!*\
  !*** ./node_modules/three/examples/jsm/controls/OrbitControls.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MapControls\": () => (/* binding */ MapControls),\n/* harmony export */   \"OrbitControls\": () => (/* binding */ OrbitControls)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE, MIDDLE: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY, RIGHT: three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE, TWO: three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion().setFromUnitVectors( object.up, new three__WEBPACK_IMPORTED_MODULE_0__.Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\t\t\tconst lastQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n\t\tconst sphericalDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst rotateEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst rotateDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\n\t\tconst panStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst panEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst panDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\n\t\tconst dollyStart = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst dollyEnd = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\tconst dollyDelta = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = three__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN;\n\t\tthis.touches.TWO = three__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\n\n\n\n//# sourceURL=webpack://client/./node_modules/three/examples/jsm/controls/OrbitControls.js?");

/***/ }),

/***/ "./node_modules/three/examples/jsm/libs/stats.module.js":
/*!**************************************************************!*\
  !*** ./node_modules/three/examples/jsm/libs/stats.module.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Stats);\n\n\n//# sourceURL=webpack://client/./node_modules/three/examples/jsm/libs/stats.module.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && !queue.d) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = 1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 			queue && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;